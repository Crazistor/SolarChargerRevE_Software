

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Oct 02 17:27:04 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1,group=2
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   275                           	psect	text251,global,reloc=2,class=CODE,delta=1
   276                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   277                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   278                           	dabs	1,0x600,512,_msd_buffer
   279                           	dabs	1,0xD00,48,_BDT
   280                           	dabs	1,0xD40,31,_msd_cbw
   281                           	dabs	1,0xD80,13,_msd_csw
   282                           	dabs	1,0xD38,8,_CtrlTrfData
   283                           	dabs	1,0xD30,8,_SetupPkt
   284  0000                     
   285                           ; Version 2.00
   286                           ; Generated 27/05/2018 GMT
   287                           ; 
   288                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   289                           ; All rights reserved.
   290                           ; 
   291                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   292                           ; 
   293                           ; Redistribution and use in source and binary forms, with or without modification, are
   294                           ; permitted provided that the following conditions are met:
   295                           ; 
   296                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   297                           ;        conditions and the following disclaimer.
   298                           ; 
   299                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   300                           ;        of conditions and the following disclaimer in the documentation and/or other
   301                           ;        materials provided with the distribution.
   302                           ; 
   303                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   304                           ;        software without specific prior written permission.
   305                           ; 
   306                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   307                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   308                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   309                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   310                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   311                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   312                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   313                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   314                           ; 
   315                           ; 
   316                           ; Code-generator required, PIC18F47J53 Definitions
   317                           ; 
   318                           ; SFR Addresses
   319  0000                     
   320                           	psect	idataBANK2
   321  015358                     __pidataBANK2:
   322                           	opt stack 0
   323                           
   324                           ;initializer for _LUN
   325  015358  FE                 	db	low _ExternalFlash_MediaInitialize
   326  015359  5A                 	db	high _ExternalFlash_MediaInitialize
   327  01535A  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   328  01535B  3C                 	db	low _ExternalFlash_CapacityRead
   329  01535C  5D                 	db	high _ExternalFlash_CapacityRead
   330  01535D  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   331  01535E  7E                 	db	low _ExternalFlash_SectorSizeRead
   332  01535F  5E                 	db	high _ExternalFlash_SectorSizeRead
   333  015360  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   334  015361  B2                 	db	low _ExternalFlash_MediaDetect
   335  015362  5E                 	db	high _ExternalFlash_MediaDetect
   336  015363  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   337  015364  E2                 	db	low _ExternalFlash_SectorRead
   338  015365  54                 	db	high _ExternalFlash_SectorRead
   339  015366  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   340  015367  EE                 	db	low _ExternalFlash_WriteProtectStateGet
   341  015368  5E                 	db	high _ExternalFlash_WriteProtectStateGet
   342  015369  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   343  01536A  AE                 	db	low _ExternalFlash_SectorWrite
   344  01536B  54                 	db	high _ExternalFlash_SectorWrite
   345  01536C  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   346  01536D  00                 	db	0
   347  01536E  00                 	db	0
   348  01536F  00                 	db	0
   349  015370  00                 	db	0
   350  015371  00                 	db	0
   351  015372  00                 	db	0
   352  015373  00                 	db	0
   353  015374  00                 	db	0
   354                           
   355                           ;initializer for system_init@F7096
   356  015375  54                 	db	84
   357  015376  45                 	db	69
   358  015377  53                 	db	83
   359  015378  54                 	db	84
   360  015379  20                 	db	32
   361  01537A  20                 	db	32
   362  01537B  20                 	db	32
   363  01537C  20                 	db	32
   364  01537D  00                 	db	0
   365                           
   366                           ;initializer for system_init@F7102
   367  01537E  54                 	db	84
   368  01537F  58                 	db	88
   369  015380  54                 	db	84
   370  015381  00                 	db	0
   371                           
   372                           ;initializer for system_init@F7098
   373  015382  54                 	db	84
   374  015383  58                 	db	88
   375  015384  54                 	db	84
   376  015385  00                 	db	0
   377                           
   378                           ;initializer for _battery_voltage_maximum
   379  015386  34BC               	dw	13500
   380                           
   381                           ;initializer for _filename
   382  015388  4C                 	db	76
   383  015389  4F                 	db	79
   384  01538A  47                 	db	71
   385  01538B  20                 	db	32
   386  01538C  20                 	db	32
   387  01538D  20                 	db	32
   388  01538E  20                 	db	32
   389  01538F  20                 	db	32
   390  015390  00                 	db	0
   391                           
   392                           ;initializer for _extension
   393  015391  54                 	db	84
   394  015392  58                 	db	88
   395  015393  54                 	db	84
   396  015394  00                 	db	0
   397                           
   398                           	psect	idataBANK3
   399  015BB6                     __pidataBANK3:
   400                           	opt stack 0
   401                           
   402                           ;initializer for i2c_display_init@F6880
   403  015BB6  3A                 	db	58
   404  015BB7  1E                 	db	30
   405  015BB8  39                 	db	57
   406  015BB9  0C                 	db	12
   407  015BBA  74                 	db	116
   408  015BBB  5C                 	db	92
   409  015BBC  6D                 	db	109
   410  015BBD  0C                 	db	12
   411  015BBE  01                 	db	1
   412                           
   413                           ;initializer for i2c_display_send_init_sequence@F6877
   414  015BBF  3A                 	db	58
   415  015BC0  1E                 	db	30
   416  015BC1  39                 	db	57
   417  015BC2  0C                 	db	12
   418  015BC3  74                 	db	116
   419  015BC4  5C                 	db	92
   420  015BC5  6D                 	db	109
   421  015BC6  0C                 	db	12
   422  015BC7  01                 	db	1
   423                           
   424                           ;initializer for system_init@F7100
   425  015BC8  4E                 	db	78
   426  015BC9  45                 	db	69
   427  015BCA  57                 	db	87
   428  015BCB  46                 	db	70
   429  015BCC  49                 	db	73
   430  015BCD  4C                 	db	76
   431  015BCE  45                 	db	69
   432  015BCF  20                 	db	32
   433  015BD0  00                 	db	0
   434                           
   435                           	psect	idataBANK4
   436  01438E                     __pidataBANK4:
   437                           	opt stack 0
   438                           
   439                           ;initializer for system_init@F7104
   440  01438E  4A                 	db	74
   441  01438F  75                 	db	117
   442  014390  73                 	db	115
   443  014391  74                 	db	116
   444  014392  20                 	db	32
   445  014393  61                 	db	97
   446  014394  70                 	db	112
   447  014395  70                 	db	112
   448  014396  65                 	db	101
   449  014397  6E                 	db	110
   450  014398  64                 	db	100
   451  014399  65                 	db	101
   452  01439A  64                 	db	100
   453  01439B  20                 	db	32
   454  01439C  74                 	db	116
   455  01439D  68                 	db	104
   456  01439E  69                 	db	105
   457  01439F  73                 	db	115
   458  0143A0  20                 	db	32
   459  0143A1  74                 	db	116
   460  0143A2  65                 	db	101
   461  0143A3  78                 	db	120
   462  0143A4  74                 	db	116
   463  0143A5  21                 	db	33
   464  0143A6  20                 	db	32
   465  0143A7  4E                 	db	78
   466  0143A8  6F                 	db	111
   467  0143A9  77                 	db	119
   468  0143AA  20                 	db	32
   469  0143AB  74                 	db	116
   470  0143AC  68                 	db	104
   471  0143AD  69                 	db	105
   472  0143AE  73                 	db	115
   473  0143AF  20                 	db	32
   474  0143B0  69                 	db	105
   475  0143B1  73                 	db	115
   476  0143B2  20                 	db	32
   477  0143B3  73                 	db	115
   478  0143B4  75                 	db	117
   479  0143B5  70                 	db	112
   480  0143B6  65                 	db	101
   481  0143B7  72                 	db	114
   482  0143B8  2D                 	db	45
   483  0143B9  6C                 	db	108
   484  0143BA  6F                 	db	111
   485  0143BB  6E                 	db	110
   486  0143BC  67                 	db	103
   487  0143BD  2E                 	db	46
   488  0143BE  20                 	db	32
   489  0143BF  69                 	db	105
   490  0143C0  74                 	db	116
   491  0143C1  20                 	db	32
   492  0143C2  67                 	db	103
   493  0143C3  6F                 	db	111
   494  0143C4  65                 	db	101
   495  0143C5  73                 	db	115
   496  0143C6  20                 	db	32
   497  0143C7  6F                 	db	111
   498  0143C8  6E                 	db	110
   499  0143C9  20                 	db	32
   500  0143CA  61                 	db	97
   501  0143CB  6E                 	db	110
   502  0143CC  64                 	db	100
   503  0143CD  20                 	db	32
   504  0143CE  6F                 	db	111
   505  0143CF  6E                 	db	110
   506  0143D0  20                 	db	32
   507  0143D1  61                 	db	97
   508  0143D2  6E                 	db	110
   509  0143D3  64                 	db	100
   510  0143D4  20                 	db	32
   511  0143D5  6F                 	db	111
   512  0143D6  6E                 	db	110
   513  0143D7  20                 	db	32
   514  0143D8  2E                 	db	46
   515  0143D9  2E                 	db	46
   516  0143DA  2E                 	db	46
   517  0143DB  20                 	db	32
   518  0143DC  62                 	db	98
   519  0143DD  75                 	db	117
   520  0143DE  74                 	db	116
   521  0143DF  20                 	db	32
   522  0143E0  66                 	db	102
   523  0143E1  69                 	db	105
   524  0143E2  6E                 	db	110
   525  0143E3  61                 	db	97
   526  0143E4  6C                 	db	108
   527  0143E5  6C                 	db	108
   528  0143E6  79                 	db	121
   529  0143E7  20                 	db	32
   530  0143E8  69                 	db	105
   531  0143E9  74                 	db	116
   532  0143EA  20                 	db	32
   533  0143EB  65                 	db	101
   534  0143EC  6E                 	db	110
   535  0143ED  64                 	db	100
   536  0143EE  73                 	db	115
   537  0143EF  20                 	db	32
   538  0143F0  48                 	db	72
   539  0143F1  45                 	db	69
   540  0143F2  52                 	db	82
   541  0143F3  45                 	db	69
   542  0143F4  2E                 	db	46
   543  0143F5  00                 	db	0
   544                           
   545                           	psect	mediumconst
   546  00C08A                     __pmediumconst:
   547                           	opt stack 0
   548  00C08A  00                 	db	0
   549  00C08B                     __display_charger@F7269:
   550                           	opt stack 0
   551  00C08B  43                 	db	67
   552  00C08C  68                 	db	104
   553  00C08D  61                 	db	97
   554  00C08E  72                 	db	114
   555  00C08F  67                 	db	103
   556  00C090  65                 	db	101
   557  00C091  72                 	db	114
   558  00C092  20                 	db	32
   559  00C093  41                 	db	65
   560  00C094  73                 	db	115
   561  00C095  79                 	db	121
   562  00C096  6E                 	db	110
   563  00C097  63                 	db	99
   564  00C098  68                 	db	104
   565  00C099  72                 	db	114
   566  00C09A  6F                 	db	111
   567  00C09B  6E                 	db	110
   568  00C09C  6F                 	db	111
   569  00C09D  75                 	db	117
   570  00C09E  73                 	db	115
   571  00C09F  00                 	db	0
   572  00C0A0                     __end_of__display_charger@F7269:
   573                           	opt stack 0
   574  00C0A0                     __display_charger@F7255:
   575                           	opt stack 0
   576  00C0A0  4D                 	db	77
   577  00C0A1  50                 	db	80
   578  00C0A2  50                 	db	80
   579  00C0A3  54                 	db	84
   580  00C0A4  20                 	db	32
   581  00C0A5  43                 	db	67
   582  00C0A6  68                 	db	104
   583  00C0A7  61                 	db	97
   584  00C0A8  72                 	db	114
   585  00C0A9  67                 	db	103
   586  00C0AA  65                 	db	101
   587  00C0AB  72                 	db	114
   588  00C0AC  20                 	db	32
   589  00C0AD  44                 	db	68
   590  00C0AE  65                 	db	101
   591  00C0AF  74                 	db	116
   592  00C0B0  61                 	db	97
   593  00C0B1  69                 	db	105
   594  00C0B2  6C                 	db	108
   595  00C0B3  73                 	db	115
   596  00C0B4  00                 	db	0
   597  00C0B5                     __end_of__display_charger@F7255:
   598                           	opt stack 0
   599  00C0B5                     __display_outputs@F7251:
   600                           	opt stack 0
   601  00C0B5  20                 	db	32
   602  00C0B6  20                 	db	32
   603  00C0B7  4F                 	db	79
   604  00C0B8  75                 	db	117
   605  00C0B9  74                 	db	116
   606  00C0BA  33                 	db	51
   607  00C0BB  20                 	db	32
   608  00C0BC  6F                 	db	111
   609  00C0BD  66                 	db	102
   610  00C0BE  66                 	db	102
   611  00C0BF  20                 	db	32
   612  00C0C0  20                 	db	32
   613  00C0C1  4F                 	db	79
   614  00C0C2  75                 	db	117
   615  00C0C3  74                 	db	116
   616  00C0C4  34                 	db	52
   617  00C0C5  20                 	db	32
   618  00C0C6  6F                 	db	111
   619  00C0C7  66                 	db	102
   620  00C0C8  66                 	db	102
   621  00C0C9  00                 	db	0
   622  00C0CA                     __end_of__display_outputs@F7251:
   623                           	opt stack 0
   624  00C0CA                     __display_outputs@F7249:
   625                           	opt stack 0
   626  00C0CA  20                 	db	32
   627  00C0CB  20                 	db	32
   628  00C0CC  4F                 	db	79
   629  00C0CD  75                 	db	117
   630  00C0CE  74                 	db	116
   631  00C0CF  31                 	db	49
   632  00C0D0  20                 	db	32
   633  00C0D1  6F                 	db	111
   634  00C0D2  66                 	db	102
   635  00C0D3  66                 	db	102
   636  00C0D4  20                 	db	32
   637  00C0D5  20                 	db	32
   638  00C0D6  4F                 	db	79
   639  00C0D7  75                 	db	117
   640  00C0D8  74                 	db	116
   641  00C0D9  32                 	db	50
   642  00C0DA  20                 	db	32
   643  00C0DB  6F                 	db	111
   644  00C0DC  66                 	db	102
   645  00C0DD  66                 	db	102
   646  00C0DE  00                 	db	0
   647  00C0DF                     __end_of__display_outputs@F7249:
   648                           	opt stack 0
   649  00C0DF                     __display_temperature@F7296:
   650                           	opt stack 0
   651  00C0DF  54                 	db	84
   652  00C0E0  65                 	db	101
   653  00C0E1  6D                 	db	109
   654  00C0E2  70                 	db	112
   655  00C0E3  65                 	db	101
   656  00C0E4  72                 	db	114
   657  00C0E5  61                 	db	97
   658  00C0E6  74                 	db	116
   659  00C0E7  75                 	db	117
   660  00C0E8  72                 	db	114
   661  00C0E9  65                 	db	101
   662  00C0EA  20                 	db	32
   663  00C0EB  4D                 	db	77
   664  00C0EC  6F                 	db	111
   665  00C0ED  6E                 	db	110
   666  00C0EE  69                 	db	105
   667  00C0EF  74                 	db	116
   668  00C0F0  6F                 	db	111
   669  00C0F1  72                 	db	114
   670  00C0F2  00                 	db	0
   671  00C0F3                     __end_of__display_temperature@F7296:
   672                           	opt stack 0
   673  00C0F3                     __display_charger@F7271:
   674                           	opt stack 0
   675  00C0F3  43                 	db	67
   676  00C0F4  68                 	db	104
   677  00C0F5  61                 	db	97
   678  00C0F6  72                 	db	114
   679  00C0F7  67                 	db	103
   680  00C0F8  65                 	db	101
   681  00C0F9  72                 	db	114
   682  00C0FA  20                 	db	32
   683  00C0FB  53                 	db	83
   684  00C0FC  79                 	db	121
   685  00C0FD  6E                 	db	110
   686  00C0FE  63                 	db	99
   687  00C0FF  68                 	db	104
   688  00C100  72                 	db	114
   689  00C101  6F                 	db	111
   690  00C102  6E                 	db	110
   691  00C103  6F                 	db	111
   692  00C104  75                 	db	117
   693  00C105  73                 	db	115
   694  00C106  00                 	db	0
   695  00C107                     __end_of__display_charger@F7271:
   696                           	opt stack 0
   697  00C107                     __display_usb@F7235:
   698                           	opt stack 0
   699  00C107  55                 	db	85
   700  00C108  53                 	db	83
   701  00C109  42                 	db	66
   702  00C10A  20                 	db	32
   703  00C10B  43                 	db	67
   704  00C10C  68                 	db	104
   705  00C10D  61                 	db	97
   706  00C10E  72                 	db	114
   707  00C10F  67                 	db	103
   708  00C110  65                 	db	101
   709  00C111  72                 	db	114
   710  00C112  20                 	db	32
   711  00C113  4F                 	db	79
   712  00C114  75                 	db	117
   713  00C115  74                 	db	116
   714  00C116  70                 	db	112
   715  00C117  75                 	db	117
   716  00C118  74                 	db	116
   717  00C119  73                 	db	115
   718  00C11A  00                 	db	0
   719  00C11B                     __end_of__display_usb@F7235:
   720                           	opt stack 0
   721  00C11B                     __display_time@F7222:
   722                           	opt stack 0
   723  00C11B  2D                 	db	45
   724  00C11C  3E                 	db	62
   725  00C11D  50                 	db	80
   726  00C11E  72                 	db	114
   727  00C11F  65                 	db	101
   728  00C120  73                 	db	115
   729  00C121  73                 	db	115
   730  00C122  20                 	db	32
   731  00C123  66                 	db	102
   732  00C124  6F                 	db	111
   733  00C125  72                 	db	114
   734  00C126  20                 	db	32
   735  00C127  73                 	db	115
   736  00C128  65                 	db	101
   737  00C129  63                 	db	99
   738  00C12A  6F                 	db	111
   739  00C12B  6E                 	db	110
   740  00C12C  64                 	db	100
   741  00C12D  73                 	db	115
   742  00C12E  00                 	db	0
   743  00C12F                     __end_of__display_time@F7222:
   744                           	opt stack 0
   745  00C12F                     __display_time@F7220:
   746                           	opt stack 0
   747  00C12F  2D                 	db	45
   748  00C130  3E                 	db	62
   749  00C131  50                 	db	80
   750  00C132  72                 	db	114
   751  00C133  65                 	db	101
   752  00C134  73                 	db	115
   753  00C135  73                 	db	115
   754  00C136  20                 	db	32
   755  00C137  66                 	db	102
   756  00C138  6F                 	db	111
   757  00C139  72                 	db	114
   758  00C13A  20                 	db	32
   759  00C13B  6D                 	db	109
   760  00C13C  69                 	db	105
   761  00C13D  6E                 	db	110
   762  00C13E  75                 	db	117
   763  00C13F  74                 	db	116
   764  00C140  65                 	db	101
   765  00C141  73                 	db	115
   766  00C142  00                 	db	0
   767  00C143                     __end_of__display_time@F7220:
   768                           	opt stack 0
   769  00C143                     __display_time@F7212:
   770                           	opt stack 0
   771  00C143  2D                 	db	45
   772  00C144  3E                 	db	62
   773  00C145  50                 	db	80
   774  00C146  72                 	db	114
   775  00C147  65                 	db	101
   776  00C148  73                 	db	115
   777  00C149  73                 	db	115
   778  00C14A  20                 	db	32
   779  00C14B  74                 	db	116
   780  00C14C  6F                 	db	111
   781  00C14D  20                 	db	32
   782  00C14E  73                 	db	115
   783  00C14F  65                 	db	101
   784  00C150  74                 	db	116
   785  00C151  20                 	db	32
   786  00C152  74                 	db	116
   787  00C153  69                 	db	105
   788  00C154  6D                 	db	109
   789  00C155  65                 	db	101
   790  00C156  00                 	db	0
   791  00C157                     __end_of__display_time@F7212:
   792                           	opt stack 0
   793  00C157                     __display_efficiency@F7278:
   794                           	opt stack 0
   795  00C157  50                 	db	80
   796  00C158  61                 	db	97
   797  00C159  6E                 	db	110
   798  00C15A  65                 	db	101
   799  00C15B  6C                 	db	108
   800  00C15C  3A                 	db	58
   801  00C15D  20                 	db	32
   802  00C15E  20                 	db	32
   803  00C15F  20                 	db	32
   804  00C160  20                 	db	32
   805  00C161  42                 	db	66
   806  00C162  61                 	db	97
   807  00C163  74                 	db	116
   808  00C164  74                 	db	116
   809  00C165  65                 	db	101
   810  00C166  72                 	db	114
   811  00C167  79                 	db	121
   812  00C168  3A                 	db	58
   813  00C169  00                 	db	0
   814  00C16A                     __end_of__display_efficiency@F7278:
   815                           	opt stack 0
   816  00C16A                     __display_efficiency@F7276:
   817                           	opt stack 0
   818  00C16A  43                 	db	67
   819  00C16B  68                 	db	104
   820  00C16C  61                 	db	97
   821  00C16D  72                 	db	114
   822  00C16E  67                 	db	103
   823  00C16F  65                 	db	101
   824  00C170  72                 	db	114
   825  00C171  20                 	db	32
   826  00C172  45                 	db	69
   827  00C173  66                 	db	102
   828  00C174  66                 	db	102
   829  00C175  69                 	db	105
   830  00C176  63                 	db	99
   831  00C177  69                 	db	105
   832  00C178  65                 	db	101
   833  00C179  6E                 	db	110
   834  00C17A  63                 	db	99
   835  00C17B  79                 	db	121
   836  00C17C  00                 	db	0
   837  00C17D                     __end_of__display_efficiency@F7276:
   838                           	opt stack 0
   839  00C17D                     __display_charger@F7259:
   840                           	opt stack 0
   841  00C17D  43                 	db	67
   842  00C17E  68                 	db	104
   843  00C17F  61                 	db	97
   844  00C180  72                 	db	114
   845  00C181  67                 	db	103
   846  00C182  65                 	db	101
   847  00C183  72                 	db	114
   848  00C184  20                 	db	32
   849  00C185  73                 	db	115
   850  00C186  75                 	db	117
   851  00C187  70                 	db	112
   852  00C188  70                 	db	112
   853  00C189  6C                 	db	108
   854  00C18A  79                 	db	121
   855  00C18B  20                 	db	32
   856  00C18C  6F                 	db	111
   857  00C18D  66                 	db	102
   858  00C18E  66                 	db	102
   859  00C18F  00                 	db	0
   860  00C190                     __end_of__display_charger@F7259:
   861                           	opt stack 0
   862  00C190                     __display_charger@F7257:
   863                           	opt stack 0
   864  00C190  43                 	db	67
   865  00C191  68                 	db	104
   866  00C192  61                 	db	97
   867  00C193  72                 	db	114
   868  00C194  67                 	db	103
   869  00C195  65                 	db	101
   870  00C196  72                 	db	114
   871  00C197  20                 	db	32
   872  00C198  73                 	db	115
   873  00C199  75                 	db	117
   874  00C19A  70                 	db	112
   875  00C19B  70                 	db	112
   876  00C19C  6C                 	db	108
   877  00C19D  79                 	db	121
   878  00C19E  20                 	db	32
   879  00C19F  6F                 	db	111
   880  00C1A0  6E                 	db	110
   881  00C1A1  00                 	db	0
   882  00C1A2                     __end_of__display_charger@F7257:
   883                           	opt stack 0
   884  00C1A2                     __display_time@F7218:
   885                           	opt stack 0
   886  00C1A2  2D                 	db	45
   887  00C1A3  3E                 	db	62
   888  00C1A4  50                 	db	80
   889  00C1A5  72                 	db	114
   890  00C1A6  65                 	db	101
   891  00C1A7  73                 	db	115
   892  00C1A8  73                 	db	115
   893  00C1A9  20                 	db	32
   894  00C1AA  66                 	db	102
   895  00C1AB  6F                 	db	111
   896  00C1AC  72                 	db	114
   897  00C1AD  20                 	db	32
   898  00C1AE  68                 	db	104
   899  00C1AF  6F                 	db	111
   900  00C1B0  75                 	db	117
   901  00C1B1  72                 	db	114
   902  00C1B2  73                 	db	115
   903  00C1B3  00                 	db	0
   904  00C1B4                     __end_of__display_time@F7218:
   905                           	opt stack 0
   906  00C1B4                     __display_time@F7214:
   907                           	opt stack 0
   908  00C1B4  2D                 	db	45
   909  00C1B5  3E                 	db	62
   910  00C1B6  50                 	db	80
   911  00C1B7  72                 	db	114
   912  00C1B8  65                 	db	101
   913  00C1B9  73                 	db	115
   914  00C1BA  73                 	db	115
   915  00C1BB  20                 	db	32
   916  00C1BC  66                 	db	102
   917  00C1BD  6F                 	db	111
   918  00C1BE  72                 	db	114
   919  00C1BF  20                 	db	32
   920  00C1C0  6D                 	db	109
   921  00C1C1  6F                 	db	111
   922  00C1C2  6E                 	db	110
   923  00C1C3  74                 	db	116
   924  00C1C4  68                 	db	104
   925  00C1C5  00                 	db	0
   926  00C1C6                     __end_of__display_time@F7214:
   927                           	opt stack 0
   928  00C1C6                     __display_inout@F7190:
   929                           	opt stack 0
   930  00C1C6  20                 	db	32
   931  00C1C7  20                 	db	32
   932  00C1C8  20                 	db	32
   933  00C1C9  49                 	db	73
   934  00C1CA  6E                 	db	110
   935  00C1CB  70                 	db	112
   936  00C1CC  75                 	db	117
   937  00C1CD  74                 	db	116
   938  00C1CE  20                 	db	32
   939  00C1CF  20                 	db	32
   940  00C1D0  20                 	db	32
   941  00C1D1  4F                 	db	79
   942  00C1D2  75                 	db	117
   943  00C1D3  74                 	db	116
   944  00C1D4  70                 	db	112
   945  00C1D5  75                 	db	117
   946  00C1D6  74                 	db	116
   947  00C1D7  00                 	db	0
   948  00C1D8                     __end_of__display_inout@F7190:
   949                           	opt stack 0
   950  00C1D8                     __display_inout@F7188:
   951                           	opt stack 0
   952  00C1D8  56                 	db	86
   953  00C1D9  6F                 	db	111
   954  00C1DA  6C                 	db	108
   955  00C1DB  74                 	db	116
   956  00C1DC  61                 	db	97
   957  00C1DD  67                 	db	103
   958  00C1DE  65                 	db	101
   959  00C1DF  20                 	db	32
   960  00C1E0  26                 	db	38
   961  00C1E1  20                 	db	32
   962  00C1E2  43                 	db	67
   963  00C1E3  75                 	db	117
   964  00C1E4  72                 	db	114
   965  00C1E5  72                 	db	114
   966  00C1E6  65                 	db	101
   967  00C1E7  6E                 	db	110
   968  00C1E8  74                 	db	116
   969  00C1E9  00                 	db	0
   970  00C1EA                     __end_of__display_inout@F7188:
   971                           	opt stack 0
   972  00C1EA                     __display_usb@F7241:
   973                           	opt stack 0
   974  00C1EA  55                 	db	85
   975  00C1EB  53                 	db	83
   976  00C1EC  42                 	db	66
   977  00C1ED  20                 	db	32
   978  00C1EE  63                 	db	99
   979  00C1EF  68                 	db	104
   980  00C1F0  61                 	db	97
   981  00C1F1  72                 	db	114
   982  00C1F2  67                 	db	103
   983  00C1F3  69                 	db	105
   984  00C1F4  6E                 	db	110
   985  00C1F5  67                 	db	103
   986  00C1F6  20                 	db	32
   987  00C1F7  6F                 	db	111
   988  00C1F8  66                 	db	102
   989  00C1F9  66                 	db	102
   990  00C1FA  00                 	db	0
   991  00C1FB                     __end_of__display_usb@F7241:
   992                           	opt stack 0
   993  00C1FB                     __display_charger@F7267:
   994                           	opt stack 0
   995  00C1FB  43                 	db	67
   996  00C1FC  68                 	db	104
   997  00C1FD  61                 	db	97
   998  00C1FE  72                 	db	114
   999  00C1FF  67                 	db	103
  1000  00C200  65                 	db	101
  1001  00C201  72                 	db	114
  1002  00C202  20                 	db	32
  1003  00C203  53                 	db	83
  1004  00C204  74                 	db	116
  1005  00C205  61                 	db	97
  1006  00C206  72                 	db	114
  1007  00C207  74                 	db	116
  1008  00C208  75                 	db	117
  1009  00C209  70                 	db	112
  1010  00C20A  00                 	db	0
  1011  00C20B                     __end_of__display_charger@F7267:
  1012                           	opt stack 0
  1013  00C20B                     __display_outputs@F7247:
  1014                           	opt stack 0
  1015  00C20B  42                 	db	66
  1016  00C20C  61                 	db	97
  1017  00C20D  74                 	db	116
  1018  00C20E  74                 	db	116
  1019  00C20F  65                 	db	101
  1020  00C210  72                 	db	114
  1021  00C211  79                 	db	121
  1022  00C212  20                 	db	32
  1023  00C213  74                 	db	116
  1024  00C214  6F                 	db	111
  1025  00C215  6F                 	db	111
  1026  00C216  20                 	db	32
  1027  00C217  6C                 	db	108
  1028  00C218  6F                 	db	111
  1029  00C219  77                 	db	119
  1030  00C21A  00                 	db	0
  1031  00C21B                     __end_of__display_outputs@F7247:
  1032                           	opt stack 0
  1033  00C21B                     __display_usb@F7239:
  1034                           	opt stack 0
  1035  00C21B  55                 	db	85
  1036  00C21C  53                 	db	83
  1037  00C21D  42                 	db	66
  1038  00C21E  20                 	db	32
  1039  00C21F  63                 	db	99
  1040  00C220  68                 	db	104
  1041  00C221  61                 	db	97
  1042  00C222  72                 	db	114
  1043  00C223  67                 	db	103
  1044  00C224  69                 	db	105
  1045  00C225  6E                 	db	110
  1046  00C226  67                 	db	103
  1047  00C227  20                 	db	32
  1048  00C228  6F                 	db	111
  1049  00C229  6E                 	db	110
  1050  00C22A  00                 	db	0
  1051  00C22B                     __end_of__display_usb@F7239:
  1052                           	opt stack 0
  1053  00C22B                     __display_usb@F7237:
  1054                           	opt stack 0
  1055  00C22B  42                 	db	66
  1056  00C22C  61                 	db	97
  1057  00C22D  74                 	db	116
  1058  00C22E  74                 	db	116
  1059  00C22F  65                 	db	101
  1060  00C230  72                 	db	114
  1061  00C231  79                 	db	121
  1062  00C232  20                 	db	32
  1063  00C233  74                 	db	116
  1064  00C234  6F                 	db	111
  1065  00C235  6F                 	db	111
  1066  00C236  20                 	db	32
  1067  00C237  6C                 	db	108
  1068  00C238  6F                 	db	111
  1069  00C239  77                 	db	119
  1070  00C23A  00                 	db	0
  1071  00C23B                     __end_of__display_usb@F7237:
  1072                           	opt stack 0
  1073  00C23B                     __display_time@F7224:
  1074                           	opt stack 0
  1075  00C23B  2D                 	db	45
  1076  00C23C  3E                 	db	62
  1077  00C23D  50                 	db	80
  1078  00C23E  72                 	db	114
  1079  00C23F  65                 	db	101
  1080  00C240  73                 	db	115
  1081  00C241  73                 	db	115
  1082  00C242  20                 	db	32
  1083  00C243  74                 	db	116
  1084  00C244  6F                 	db	111
  1085  00C245  20                 	db	32
  1086  00C246  73                 	db	115
  1087  00C247  61                 	db	97
  1088  00C248  76                 	db	118
  1089  00C249  65                 	db	101
  1090  00C24A  00                 	db	0
  1091  00C24B                     __end_of__display_time@F7224:
  1092                           	opt stack 0
  1093  00C24B                     __display_time@F7216:
  1094                           	opt stack 0
  1095  00C24B  2D                 	db	45
  1096  00C24C  3E                 	db	62
  1097  00C24D  50                 	db	80
  1098  00C24E  72                 	db	114
  1099  00C24F  65                 	db	101
  1100  00C250  73                 	db	115
  1101  00C251  73                 	db	115
  1102  00C252  20                 	db	32
  1103  00C253  66                 	db	102
  1104  00C254  6F                 	db	111
  1105  00C255  72                 	db	114
  1106  00C256  20                 	db	32
  1107  00C257  64                 	db	100
  1108  00C258  61                 	db	97
  1109  00C259  79                 	db	121
  1110  00C25A  00                 	db	0
  1111  00C25B                     __end_of__display_time@F7216:
  1112                           	opt stack 0
  1113  00C25B                     __display_efficiency@F7280:
  1114                           	opt stack 0
  1115  00C25B  45                 	db	69
  1116  00C25C  3A                 	db	58
  1117  00C25D  20                 	db	32
  1118  00C25E  20                 	db	32
  1119  00C25F  20                 	db	32
  1120  00C260  20                 	db	32
  1121  00C261  20                 	db	32
  1122  00C262  20                 	db	32
  1123  00C263  20                 	db	32
  1124  00C264  20                 	db	32
  1125  00C265  20                 	db	32
  1126  00C266  4C                 	db	76
  1127  00C267  3A                 	db	58
  1128  00C268  00                 	db	0
  1129  00C269                     __end_of__display_efficiency@F7280:
  1130                           	opt stack 0
  1131  00C269                     __display_outputs@F7245:
  1132                           	opt stack 0
  1133  00C269  50                 	db	80
  1134  00C26A  6F                 	db	111
  1135  00C26B  77                 	db	119
  1136  00C26C  65                 	db	101
  1137  00C26D  72                 	db	114
  1138  00C26E  20                 	db	32
  1139  00C26F  4F                 	db	79
  1140  00C270  75                 	db	117
  1141  00C271  74                 	db	116
  1142  00C272  70                 	db	112
  1143  00C273  75                 	db	117
  1144  00C274  74                 	db	116
  1145  00C275  73                 	db	115
  1146  00C276  00                 	db	0
  1147  00C277                     __end_of__display_outputs@F7245:
  1148                           	opt stack 0
  1149  00C277                     __display_time@F7198:
  1150                           	opt stack 0
  1151  00C277  54                 	db	84
  1152  00C278  69                 	db	105
  1153  00C279  6D                 	db	109
  1154  00C27A  65                 	db	101
  1155  00C27B  20                 	db	32
  1156  00C27C  61                 	db	97
  1157  00C27D  6E                 	db	110
  1158  00C27E  64                 	db	100
  1159  00C27F  20                 	db	32
  1160  00C280  44                 	db	68
  1161  00C281  61                 	db	97
  1162  00C282  74                 	db	116
  1163  00C283  65                 	db	101
  1164  00C284  00                 	db	0
  1165  00C285                     __end_of__display_time@F7198:
  1166                           	opt stack 0
  1167  00C285                     __display_inout@F7194:
  1168                           	opt stack 0
  1169  00C285  41                 	db	65
  1170  00C286  3A                 	db	58
  1171  00C287  20                 	db	32
  1172  00C288  2D                 	db	45
  1173  00C289  2D                 	db	45
  1174  00C28A  20                 	db	32
  1175  00C28B  20                 	db	32
  1176  00C28C  20                 	db	32
  1177  00C28D  20                 	db	32
  1178  00C28E  20                 	db	32
  1179  00C28F  20                 	db	32
  1180  00C290  2D                 	db	45
  1181  00C291  2D                 	db	45
  1182  00C292  00                 	db	0
  1183  00C293                     __end_of__display_inout@F7194:
  1184                           	opt stack 0
  1185  00C293                     __display_temperature@F7302:
  1186                           	opt stack 0
  1187  00C293  45                 	db	69
  1188  00C294  78                 	db	120
  1189  00C295  74                 	db	116
  1190  00C296  65                 	db	101
  1191  00C297  72                 	db	114
  1192  00C298  6E                 	db	110
  1193  00C299  61                 	db	97
  1194  00C29A  6C                 	db	108
  1195  00C29B  20                 	db	32
  1196  00C29C  32                 	db	50
  1197  00C29D  3A                 	db	58
  1198  00C29E  00                 	db	0
  1199  00C29F                     __end_of__display_temperature@F7302:
  1200                           	opt stack 0
  1201  00C29F                     __display_temperature@F7300:
  1202                           	opt stack 0
  1203  00C29F  45                 	db	69
  1204  00C2A0  78                 	db	120
  1205  00C2A1  74                 	db	116
  1206  00C2A2  65                 	db	101
  1207  00C2A3  72                 	db	114
  1208  00C2A4  6E                 	db	110
  1209  00C2A5  61                 	db	97
  1210  00C2A6  6C                 	db	108
  1211  00C2A7  20                 	db	32
  1212  00C2A8  31                 	db	49
  1213  00C2A9  3A                 	db	58
  1214  00C2AA  00                 	db	0
  1215  00C2AB                     __end_of__display_temperature@F7300:
  1216                           	opt stack 0
  1217  00C2AB                     __display_charger@F7265:
  1218                           	opt stack 0
  1219  00C2AB  43                 	db	67
  1220  00C2AC  68                 	db	104
  1221  00C2AD  61                 	db	97
  1222  00C2AE  72                 	db	114
  1223  00C2AF  67                 	db	103
  1224  00C2B0  65                 	db	101
  1225  00C2B1  72                 	db	114
  1226  00C2B2  20                 	db	32
  1227  00C2B3  6F                 	db	111
  1228  00C2B4  66                 	db	102
  1229  00C2B5  66                 	db	102
  1230  00C2B6  00                 	db	0
  1231  00C2B7                     __end_of__display_charger@F7265:
  1232                           	opt stack 0
  1233  00C2B7                     __display_time@F7210:
  1234                           	opt stack 0
  1235  00C2B7  53                 	db	83
  1236  00C2B8  65                 	db	101
  1237  00C2B9  74                 	db	116
  1238  00C2BA  20                 	db	32
  1239  00C2BB  73                 	db	115
  1240  00C2BC  65                 	db	101
  1241  00C2BD  63                 	db	99
  1242  00C2BE  6F                 	db	111
  1243  00C2BF  6E                 	db	110
  1244  00C2C0  64                 	db	100
  1245  00C2C1  73                 	db	115
  1246  00C2C2  00                 	db	0
  1247  00C2C3                     __end_of__display_time@F7210:
  1248                           	opt stack 0
  1249  00C2C3                     __display_time@F7208:
  1250                           	opt stack 0
  1251  00C2C3  53                 	db	83
  1252  00C2C4  65                 	db	101
  1253  00C2C5  74                 	db	116
  1254  00C2C6  20                 	db	32
  1255  00C2C7  6D                 	db	109
  1256  00C2C8  69                 	db	105
  1257  00C2C9  6E                 	db	110
  1258  00C2CA  75                 	db	117
  1259  00C2CB  74                 	db	116
  1260  00C2CC  65                 	db	101
  1261  00C2CD  73                 	db	115
  1262  00C2CE  00                 	db	0
  1263  00C2CF                     __end_of__display_time@F7208:
  1264                           	opt stack 0
  1265  00C2CF                     __display_temperature@F7298:
  1266                           	opt stack 0
  1267  00C2CF  4F                 	db	79
  1268  00C2D0  6E                 	db	110
  1269  00C2D1  2D                 	db	45
  1270  00C2D2  62                 	db	98
  1271  00C2D3  6F                 	db	111
  1272  00C2D4  61                 	db	97
  1273  00C2D5  72                 	db	114
  1274  00C2D6  64                 	db	100
  1275  00C2D7  3A                 	db	58
  1276  00C2D8  20                 	db	32
  1277  00C2D9  00                 	db	0
  1278  00C2DA                     __end_of__display_temperature@F7298:
  1279                           	opt stack 0
  1280  00C2DA                     __display_time@F7206:
  1281                           	opt stack 0
  1282  00C2DA  53                 	db	83
  1283  00C2DB  65                 	db	101
  1284  00C2DC  74                 	db	116
  1285  00C2DD  20                 	db	32
  1286  00C2DE  68                 	db	104
  1287  00C2DF  6F                 	db	111
  1288  00C2E0  75                 	db	117
  1289  00C2E1  72                 	db	114
  1290  00C2E2  73                 	db	115
  1291  00C2E3  00                 	db	0
  1292  00C2E4                     __end_of__display_time@F7206:
  1293                           	opt stack 0
  1294  00C2E4                     __display_time@F7202:
  1295                           	opt stack 0
  1296  00C2E4  53                 	db	83
  1297  00C2E5  65                 	db	101
  1298  00C2E6  74                 	db	116
  1299  00C2E7  20                 	db	32
  1300  00C2E8  6D                 	db	109
  1301  00C2E9  6F                 	db	111
  1302  00C2EA  6E                 	db	110
  1303  00C2EB  74                 	db	116
  1304  00C2EC  68                 	db	104
  1305  00C2ED  00                 	db	0
  1306  00C2EE                     __end_of__display_time@F7202:
  1307                           	opt stack 0
  1308  00C2EE                     __display_time@F7200:
  1309                           	opt stack 0
  1310  00C2EE  53                 	db	83
  1311  00C2EF  65                 	db	101
  1312  00C2F0  74                 	db	116
  1313  00C2F1  20                 	db	32
  1314  00C2F2  79                 	db	121
  1315  00C2F3  65                 	db	101
  1316  00C2F4  61                 	db	97
  1317  00C2F5  72                 	db	114
  1318  00C2F6  00                 	db	0
  1319  00C2F7                     __end_of__display_time@F7200:
  1320                           	opt stack 0
  1321  00C2F7                     __display_charger@F7263:
  1322                           	opt stack 0
  1323  00C2F7  46                 	db	70
  1324  00C2F8  61                 	db	97
  1325  00C2F9  6E                 	db	110
  1326  00C2FA  20                 	db	32
  1327  00C2FB  6F                 	db	111
  1328  00C2FC  66                 	db	102
  1329  00C2FD  66                 	db	102
  1330  00C2FE  00                 	db	0
  1331  00C2FF                     __end_of__display_charger@F7263:
  1332                           	opt stack 0
  1333  00C2FF                     __display_time@F7204:
  1334                           	opt stack 0
  1335  00C2FF  53                 	db	83
  1336  00C300  65                 	db	101
  1337  00C301  74                 	db	116
  1338  00C302  20                 	db	32
  1339  00C303  64                 	db	100
  1340  00C304  61                 	db	97
  1341  00C305  79                 	db	121
  1342  00C306  00                 	db	0
  1343  00C307                     __end_of__display_time@F7204:
  1344                           	opt stack 0
  1345  00C307                     _USB_SD_Ptr:
  1346                           	opt stack 0
  1347  00C307  32                 	db	low _sd000
  1348  00C308  C4                 	db	high _sd000
  1349  00C309  5B                 	db	low _sd001
  1350  00C30A  C3                 	db	high _sd001
  1351  00C30B  8F                 	db	low _sd002
  1352  00C30C  C3                 	db	high _sd002
  1353  00C30D  FE                 	db	low _sd003
  1354  00C30E  C3                 	db	high _sd003
  1355  00C30F                     __end_of_USB_SD_Ptr:
  1356                           	opt stack 0
  1357  00C30F                     __display_charger@F7261:
  1358                           	opt stack 0
  1359  00C30F  46                 	db	70
  1360  00C310  61                 	db	97
  1361  00C311  6E                 	db	110
  1362  00C312  20                 	db	32
  1363  00C313  6F                 	db	111
  1364  00C314  6E                 	db	110
  1365  00C315  00                 	db	0
  1366  00C316                     __end_of__display_charger@F7261:
  1367                           	opt stack 0
  1368  00C316                     __display_inout@F7192:
  1369                           	opt stack 0
  1370  00C316  56                 	db	86
  1371  00C317  3A                 	db	58
  1372  00C318  00                 	db	0
  1373  00C319                     __end_of__display_inout@F7192:
  1374                           	opt stack 0
  1375  00C319                     _USB_CD_Ptr:
  1376                           	opt stack 0
  1377  00C319  1B                 	db	low _configDescriptor1
  1378  00C31A  C3                 	db	high _configDescriptor1
  1379  00C31B                     __end_of_USB_CD_Ptr:
  1380                           	opt stack 0
  1381  00C31B                     _configDescriptor1:
  1382                           	opt stack 0
  1383  00C31B  09                 	db	9
  1384  00C31C  02                 	db	2
  1385  00C31D  40                 	db	64
  1386  00C31E  00                 	db	0
  1387  00C31F  02                 	db	2
  1388  00C320  01                 	db	1
  1389  00C321  00                 	db	0
  1390  00C322  C0                 	db	192
  1391  00C323  32                 	db	50
  1392  00C324  09                 	db	9
  1393  00C325  04                 	db	4
  1394  00C326  00                 	db	0
  1395  00C327  00                 	db	0
  1396  00C328  02                 	db	2
  1397  00C329  03                 	db	3
  1398  00C32A  00                 	db	0
  1399  00C32B  00                 	db	0
  1400  00C32C  00                 	db	0
  1401  00C32D  09                 	db	9
  1402  00C32E  21                 	db	33
  1403  00C32F  11                 	db	17
  1404  00C330  01                 	db	1
  1405  00C331  00                 	db	0
  1406  00C332  01                 	db	1
  1407  00C333  22                 	db	34
  1408  00C334  1D                 	db	29
  1409  00C335  00                 	db	0
  1410  00C336  07                 	db	7
  1411  00C337  05                 	db	5
  1412  00C338  81                 	db	129
  1413  00C339  03                 	db	3
  1414  00C33A  40                 	db	64
  1415  00C33B  00                 	db	0
  1416  00C33C  01                 	db	1
  1417  00C33D  07                 	db	7
  1418  00C33E  05                 	db	5
  1419  00C33F  01                 	db	1
  1420  00C340  03                 	db	3
  1421  00C341  40                 	db	64
  1422  00C342  00                 	db	0
  1423  00C343  01                 	db	1
  1424  00C344  09                 	db	9
  1425  00C345  04                 	db	4
  1426  00C346  01                 	db	1
  1427  00C347  00                 	db	0
  1428  00C348  02                 	db	2
  1429  00C349  08                 	db	8
  1430  00C34A  06                 	db	6
  1431  00C34B  50                 	db	80
  1432  00C34C  00                 	db	0
  1433  00C34D  07                 	db	7
  1434  00C34E  05                 	db	5
  1435  00C34F  82                 	db	130
  1436  00C350  02                 	db	2
  1437  00C351  40                 	db	64
  1438  00C352  00                 	db	0
  1439  00C353  01                 	db	1
  1440  00C354  07                 	db	7
  1441  00C355  05                 	db	5
  1442  00C356  02                 	db	2
  1443  00C357  02                 	db	2
  1444  00C358  40                 	db	64
  1445  00C359  00                 	db	0
  1446  00C35A  01                 	db	1
  1447  00C35B                     __end_of_configDescriptor1:
  1448                           	opt stack 0
  1449  00C35B                     _sd001:
  1450                           	opt stack 0
  1451  00C35B  34                 	db	52
  1452  00C35C  03                 	db	3
  1453  00C35D  0053               	dw	83
  1454  00C35F  006F               	dw	111
  1455  00C361  006C               	dw	108
  1456  00C363  0064               	dw	100
  1457  00C365  0065               	dw	101
  1458  00C367  0072               	dw	114
  1459  00C369  006E               	dw	110
  1460  00C36B  0065               	dw	101
  1461  00C36D  0072               	dw	114
  1462  00C36F  0064               	dw	100
  1463  00C371  002E               	dw	46
  1464  00C373  0063               	dw	99
  1465  00C375  006F               	dw	111
  1466  00C377  006D               	dw	109
  1467  00C379  0020               	dw	32
  1468  00C37B  0020               	dw	32
  1469  00C37D  0020               	dw	32
  1470  00C37F  0020               	dw	32
  1471  00C381  0020               	dw	32
  1472  00C383  0020               	dw	32
  1473  00C385  0020               	dw	32
  1474  00C387  0020               	dw	32
  1475  00C389  0020               	dw	32
  1476  00C38B  0020               	dw	32
  1477  00C38D  0020               	dw	32
  1478  00C38F                     __end_of_sd001:
  1479                           	opt stack 0
  1480  00C38F                     _sd002:
  1481                           	opt stack 0
  1482  00C38F  2E                 	db	46
  1483  00C390  03                 	db	3
  1484  00C391  004D               	dw	77
  1485  00C393  0050               	dw	80
  1486  00C395  0050               	dw	80
  1487  00C397  0054               	dw	84
  1488  00C399  0053               	dw	83
  1489  00C39B  006F               	dw	111
  1490  00C39D  006C               	dw	108
  1491  00C39F  0061               	dw	97
  1492  00C3A1  0072               	dw	114
  1493  00C3A3  0020               	dw	32
  1494  00C3A5  0043               	dw	67
  1495  00C3A7  0068               	dw	104
  1496  00C3A9  0061               	dw	97
  1497  00C3AB  0072               	dw	114
  1498  00C3AD  0067               	dw	103
  1499  00C3AF  0065               	dw	101
  1500  00C3B1  0072               	dw	114
  1501  00C3B3  0020               	dw	32
  1502  00C3B5  0052               	dw	82
  1503  00C3B7  0065               	dw	101
  1504  00C3B9  0076               	dw	118
  1505  00C3BB  0045               	dw	69
  1506  00C3BD                     __end_of_sd002:
  1507                           	opt stack 0
  1508  00C3BD                     _inq_resp:
  1509                           	opt stack 0
  1510  00C3BD  00                 	db	0
  1511  00C3BE  80                 	db	128
  1512  00C3BF  04                 	db	4
  1513  00C3C0  02                 	db	2
  1514  00C3C1  20                 	db	32
  1515  00C3C2  00                 	db	0
  1516  00C3C3  00                 	db	0
  1517  00C3C4  00                 	db	0
  1518  00C3C5  4D                 	db	77
  1519  00C3C6  69                 	db	105
  1520  00C3C7  63                 	db	99
  1521  00C3C8  72                 	db	114
  1522  00C3C9  6F                 	db	111
  1523  00C3CA  63                 	db	99
  1524  00C3CB  68                 	db	104
  1525  00C3CC  70                 	db	112
  1526  00C3CD  4D                 	db	77
  1527  00C3CE  61                 	db	97
  1528  00C3CF  73                 	db	115
  1529  00C3D0  73                 	db	115
  1530  00C3D1  20                 	db	32
  1531  00C3D2  53                 	db	83
  1532  00C3D3  74                 	db	116
  1533  00C3D4  6F                 	db	111
  1534  00C3D5  72                 	db	114
  1535  00C3D6  61                 	db	97
  1536  00C3D7  67                 	db	103
  1537  00C3D8  65                 	db	101
  1538  00C3D9  20                 	db	32
  1539  00C3DA  20                 	db	32
  1540  00C3DB  20                 	db	32
  1541  00C3DC  20                 	db	32
  1542  00C3DD  30                 	db	48
  1543  00C3DE  30                 	db	48
  1544  00C3DF  30                 	db	48
  1545  00C3E0  31                 	db	49
  1546  00C3E1                     __end_of_inq_resp:
  1547                           	opt stack 0
  1548  00C3E1                     _hid_rpt01:
  1549                           	opt stack 0
  1550  00C3E1  06                 	db	6
  1551  00C3E2  00                 	db	0
  1552  00C3E3  FF                 	db	255
  1553  00C3E4  09                 	db	9
  1554  00C3E5  01                 	db	1
  1555  00C3E6  A1                 	db	161
  1556  00C3E7  01                 	db	1
  1557  00C3E8  19                 	db	25
  1558  00C3E9  01                 	db	1
  1559  00C3EA  29                 	db	41
  1560  00C3EB  40                 	db	64
  1561  00C3EC  15                 	db	21
  1562  00C3ED  00                 	db	0
  1563  00C3EE  26                 	db	38
  1564  00C3EF  FF                 	db	255
  1565  00C3F0  00                 	db	0
  1566  00C3F1  75                 	db	117
  1567  00C3F2  08                 	db	8
  1568  00C3F3  95                 	db	149
  1569  00C3F4  40                 	db	64
  1570  00C3F5  81                 	db	129
  1571  00C3F6  00                 	db	0
  1572  00C3F7  19                 	db	25
  1573  00C3F8  01                 	db	1
  1574  00C3F9  29                 	db	41
  1575  00C3FA  40                 	db	64
  1576  00C3FB  91                 	db	145
  1577  00C3FC  00                 	db	0
  1578  00C3FD  C0                 	db	192
  1579  00C3FE                     __end_of_hid_rpt01:
  1580                           	opt stack 0
  1581  00C3FE                     _sd003:
  1582                           	opt stack 0
  1583  00C3FE  1A                 	db	26
  1584  00C3FF  03                 	db	3
  1585  00C400  0031               	dw	49
  1586  00C402  0032               	dw	50
  1587  00C404  0033               	dw	51
  1588  00C406  0034               	dw	52
  1589  00C408  0035               	dw	53
  1590  00C40A  0036               	dw	54
  1591  00C40C  0037               	dw	55
  1592  00C40E  0038               	dw	56
  1593  00C410  0039               	dw	57
  1594  00C412  0030               	dw	48
  1595  00C414  0039               	dw	57
  1596  00C416  0039               	dw	57
  1597  00C418                     __end_of_sd003:
  1598                           	opt stack 0
  1599  00C418                     _device_dsc:
  1600                           	opt stack 0
  1601  00C418  12                 	db	18
  1602  00C419  01                 	db	1
  1603  00C41A  0200               	dw	512
  1604  00C41C  00                 	db	0
  1605  00C41D  00                 	db	0
  1606  00C41E  00                 	db	0
  1607  00C41F  08                 	db	8
  1608  00C420  04D8               	dw	1240
  1609  00C422  F08E               	dw	61582
  1610  00C424  0100               	dw	256
  1611  00C426  01                 	db	1
  1612  00C427  02                 	db	2
  1613  00C428  00                 	db	0
  1614  00C429  01                 	db	1
  1615  00C42A                     __end_of_device_dsc:
  1616                           	opt stack 0
  1617  00C42A                     _flash_command_pagesize_528:
  1618                           	opt stack 0
  1619  00C42A  3D                 	db	61
  1620  00C42B  2A                 	db	42
  1621  00C42C  80                 	db	128
  1622  00C42D  A7                 	db	167
  1623  00C42E                     __end_of_flash_command_pagesize_528:
  1624                           	opt stack 0
  1625  00C42E                     _flash_command_pagesize_512:
  1626                           	opt stack 0
  1627  00C42E  3D                 	db	61
  1628  00C42F  2A                 	db	42
  1629  00C430  80                 	db	128
  1630  00C431  A6                 	db	166
  1631  00C432                     __end_of_flash_command_pagesize_512:
  1632                           	opt stack 0
  1633  00C432                     _sd000:
  1634                           	opt stack 0
  1635  00C432  04                 	db	4
  1636  00C433  03                 	db	3
  1637  00C434  0409               	dw	1033
  1638  00C436                     __end_of_sd000:
  1639                           	opt stack 0
  1640  0000                     _RPINR22	set	3837
  1641  0000                     _RPOR22	set	3798
  1642  0000                     _RPOR21	set	3797
  1643  0000                     _RPINR21	set	3836
  1644  0000                     _RPOR5	set	3781
  1645  0000                     _RPOR6	set	3782
  1646  0000                     _RPINR2	set	3810
  1647  0000                     _RPINR3	set	3811
  1648  0000                     _RPINR1	set	3809
  1649  0000                     _PPSCONbits	set	3775
  1650  0000                     _CCPTMRS0bits	set	3922
  1651  0000                     _RTCVALH	set	3899
  1652  0000                     _RTCVALL	set	3898
  1653  0000                     _RTCCAL	set	3902
  1654  0000                     _RTCCFGbits	set	3903
  1655  0000                     _ANCON1bits	set	3913
  1656  0000                     _ANCON0bits	set	3912
  1657  0000                     _UEP0bits	set	3878
  1658  0000                     _UIEbits	set	3894
  1659  0000                     _UADDR	set	3896
  1660  0000                     _UIE	set	3894
  1661  0000                     _UEIE	set	3895
  1662  0000                     _UCFG	set	3897
  1663  0000                     _UEP1	set	3879
  1664  0000                     _UEP0	set	3878
  1665  0000                     _SSP2CON1bits	set	3954
  1666  0000                     _SSP2STATbits	set	3955
  1667  0000                     _RXADDRL	set	3945
  1668  0000                     _RXADDRH	set	3944
  1669  0000                     _DMABCL	set	3943
  1670  0000                     _DMABCH	set	3942
  1671  0000                     _TXADDRL	set	3947
  1672  0000                     _TXADDRH	set	3946
  1673  0000                     _DMACON2bits	set	3974
  1674  0000                     _DMACON1bits	set	3976
  1675  0000                     _ADRESL	set	4035
  1676  0000                     _ADRESH	set	4036
  1677  0000                     _ADCON1bits	set	4033
  1678  0000                     _ADCON0bits	set	4034
  1679  0000                     _CCP1CON	set	4026
  1680  0000                     _TMR2	set	4044
  1681  0000                     _PR2	set	4043
  1682  0000                     _CCPR1L	set	4027
  1683  0000                     _CCP1CONbits	set	4026
  1684  0000                     _T2CONbits	set	4042
  1685  0000                     _SSP1BUF	set	4041
  1686  0000                     _SSP1CON2bits	set	4037
  1687  0000                     _SSP1CON1bits	set	4038
  1688  0000                     _SSP1ADD	set	4040
  1689  0000                     _SSP1STATbits	set	4039
  1690  0000                     _T1CONbits	set	4045
  1691  0000                     _TMR1L	set	4046
  1692  0000                     _TMR1H	set	4047
  1693  0000                     _PIR1bits	set	3998
  1694  0000                     _LATAbits	set	3977
  1695  0000                     _TRISEbits	set	3990
  1696  0000                     _LATEbits	set	3981
  1697  0000                     _LATCbits	set	3979
  1698  0000                     _TRISAbits	set	3986
  1699  0000                     _TRISBbits	set	3987
  1700  0000                     _LATBbits	set	3978
  1701  0000                     _TRISDbits	set	3989
  1702  0000                     _TRISCbits	set	3988
  1703  0000                     _T0CONbits	set	4053
  1704  0000                     _INTCON2bits	set	4081
  1705  0000                     _EECON2	set	4007
  1706  0000                     _PORTBbits	set	3969
  1707  0000                     _INTCON3bits	set	4080
  1708  0000                     _TMR0L	set	4054
  1709  0000                     _TMR0H	set	4055
  1710  0000                     _PORTAbits	set	3968
  1711  0000                     _OSCCON	set	4051
  1712  0000                     _OSCTUNEbits	set	3995
  1713  0000                     _LATDbits	set	3980
  1714  0000                     _INTCONbits	set	4082
  1715  0000                     _IPR2bits	set	4002
  1716  0000                     _RCONbits	set	4048
  1717  0000                     _UCON	set	3941
  1718  0000                     _USTAT	set	3940
  1719  0000                     _PIR2bits	set	4001
  1720  0000                     _UIRbits	set	3938
  1721  0000                     _UCONbits	set	3941
  1722  0000                     _UIR	set	3938
  1723  0000                     _UEIR	set	3939
  1724  0000                     _PIE2bits	set	4000
  1725  00C436                     
  1726                           ; BSR set to: 1
  1727  00C436  48                 	db	72	;'H'
  1728  00C437  45                 	db	69	;'E'
  1729  00C438  4C                 	db	76	;'L'
  1730  00C439  4C                 	db	76	;'L'
  1731  00C43A  4F                 	db	79	;'O'
  1732  00C43B  20                 	db	32
  1733  00C43C  57                 	db	87	;'W'
  1734  00C43D  4F                 	db	79	;'O'
  1735  00C43E  52                 	db	82	;'R'
  1736  00C43F  4C                 	db	76	;'L'
  1737  00C440  44                 	db	68	;'D'
  1738  00C441  21                 	db	33
  1739  00C442  00                 	db	0
  1740  00C443                     
  1741                           ; BSR set to: 1
  1742  00C443  53                 	db	83	;'S'
  1743  00C444  6F                 	db	111	;'o'
  1744  00C445  6C                 	db	108	;'l'
  1745  00C446  61                 	db	97	;'a'
  1746  00C447  72                 	db	114	;'r'
  1747  00C448  43                 	db	67	;'C'
  1748  00C449  68                 	db	104	;'h'
  1749  00C44A  61                 	db	97	;'a'
  1750  00C44B  72                 	db	114	;'r'
  1751  00C44C  67                 	db	103	;'g'
  1752  00C44D  72                 	db	114	;'r'
  1753  00C44E  00                 	db	0
  1754  00C44F                     
  1755                           ; BSR set to: 1
  1756  00C44F  46                 	db	70	;'F'
  1757  00C450  49                 	db	73	;'I'
  1758  00C451  4C                 	db	76	;'L'
  1759  00C452  45                 	db	69	;'E'
  1760  00C453  20                 	db	32
  1761  00C454  20                 	db	32
  1762  00C455  20                 	db	32
  1763  00C456  20                 	db	32
  1764  00C457  00                 	db	0
  1765  00C458                     STR_1:
  1766                           
  1767                           ; BSR set to: 1
  1768  00C458  4D                 	db	77	;'M'
  1769  00C459  53                 	db	83	;'S'
  1770  00C45A  44                 	db	68	;'D'
  1771  00C45B  4F                 	db	79	;'O'
  1772  00C45C  53                 	db	83	;'S'
  1773  00C45D  35                 	db	53	;'5'
  1774  00C45E  2E                 	db	46
  1775  00C45F  30                 	db	48	;'0'
  1776  00C460  00                 	db	0
  1777  00C461                     
  1778                           ; BSR set to: 1
  1779  00C461  54                 	db	84	;'T'
  1780  00C462  58                 	db	88	;'X'
  1781  00C463  54                 	db	84	;'T'
  1782  00C464  00                 	db	0
  1783  0000                     
  1784                           ; #config settings
  1785  00C465  00                 	db	0	; dummy byte at the end
  1786  0000                     
  1787                           	psect	cinit
  1788  012C4E                     __pcinit:
  1789                           	opt stack 0
  1790  012C4E                     start_initialization:
  1791                           	opt stack 0
  1792  012C4E                     __initialization:
  1793                           	opt stack 0
  1794                           
  1795                           ; Initialize objects allocated to BANK4 (104 bytes)
  1796                           ; load TBLPTR registers with __pidataBANK4
  1797  012C4E  0E8E               	movlw	low __pidataBANK4
  1798  012C50  6EF6               	movwf	tblptrl,c
  1799  012C52  0E43               	movlw	high __pidataBANK4
  1800  012C54  6EF7               	movwf	tblptrh,c
  1801  012C56  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1802  012C58  6EF8               	movwf	tblptru,c
  1803  012C5A  EE04  F000         	lfsr	0,__pdataBANK4
  1804  012C5E  EE10 F068          	lfsr	1,104
  1805  012C62                     copy_data0:
  1806  012C62  0009               	tblrd		*+
  1807  012C64  CFF5 FFEE          	movff	tablat,postinc0
  1808  012C68  50E5               	movf	postdec1,w,c
  1809  012C6A  50E1               	movf	fsr1l,w,c
  1810  012C6C  E1FA               	bnz	copy_data0
  1811                           
  1812                           ; Initialize objects allocated to BANK3 (27 bytes)
  1813                           ; load TBLPTR registers with __pidataBANK3
  1814  012C6E  0EB6               	movlw	low __pidataBANK3
  1815  012C70  6EF6               	movwf	tblptrl,c
  1816  012C72  0E5B               	movlw	high __pidataBANK3
  1817  012C74  6EF7               	movwf	tblptrh,c
  1818  012C76  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1819  012C78  6EF8               	movwf	tblptru,c
  1820  012C7A  EE03  F0E4         	lfsr	0,__pdataBANK3
  1821  012C7E  EE10 F01B          	lfsr	1,27
  1822  012C82                     copy_data1:
  1823  012C82  0009               	tblrd		*+
  1824  012C84  CFF5 FFEE          	movff	tablat,postinc0
  1825  012C88  50E5               	movf	postdec1,w,c
  1826  012C8A  50E1               	movf	fsr1l,w,c
  1827  012C8C  E1FA               	bnz	copy_data1
  1828                           
  1829                           ; Initialize objects allocated to BANK2 (61 bytes)
  1830                           ; load TBLPTR registers with __pidataBANK2
  1831  012C8E  0E58               	movlw	low __pidataBANK2
  1832  012C90  6EF6               	movwf	tblptrl,c
  1833  012C92  0E53               	movlw	high __pidataBANK2
  1834  012C94  6EF7               	movwf	tblptrh,c
  1835  012C96  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1836  012C98  6EF8               	movwf	tblptru,c
  1837  012C9A  EE02  F0BB         	lfsr	0,__pdataBANK2
  1838  012C9E  EE10 F03D          	lfsr	1,61
  1839  012CA2                     copy_data2:
  1840  012CA2  0009               	tblrd		*+
  1841  012CA4  CFF5 FFEE          	movff	tablat,postinc0
  1842  012CA8  50E5               	movf	postdec1,w,c
  1843  012CAA  50E1               	movf	fsr1l,w,c
  1844  012CAC  E1FA               	bnz	copy_data2
  1845                           
  1846                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1847  012CAE  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1848  012CB2  EE12 F000          	lfsr	1,512
  1849  012CB6                     clear_0:
  1850  012CB6  6AEE               	clrf	postinc0,c
  1851  012CB8  50E5               	movf	postdec1,w,c
  1852  012CBA  50E1               	movf	fsr1l,w,c
  1853  012CBC  E1FC               	bnz	clear_0
  1854  012CBE  50E2               	movf	fsr1h,w,c
  1855  012CC0  E1FA               	bnz	clear_0
  1856                           
  1857                           ; Clear objects allocated to BANK4 (80 bytes)
  1858  012CC2  EE04  F068         	lfsr	0,__pbssBANK4
  1859  012CC6  0E50               	movlw	80
  1860  012CC8                     clear_1:
  1861  012CC8  6AEE               	clrf	postinc0,c
  1862  012CCA  06E8               	decf	wreg,f,c
  1863  012CCC  E1FD               	bnz	clear_1
  1864                           
  1865                           ; Clear objects allocated to BANK3 (228 bytes)
  1866  012CCE  EE03  F000         	lfsr	0,__pbssBANK3
  1867  012CD2  0EE4               	movlw	228
  1868  012CD4                     clear_2:
  1869  012CD4  6AEE               	clrf	postinc0,c
  1870  012CD6  06E8               	decf	wreg,f,c
  1871  012CD8  E1FD               	bnz	clear_2
  1872                           
  1873                           ; Clear objects allocated to BANK2 (187 bytes)
  1874  012CDA  EE02  F000         	lfsr	0,__pbssBANK2
  1875  012CDE  0EBB               	movlw	187
  1876  012CE0                     clear_3:
  1877  012CE0  6AEE               	clrf	postinc0,c
  1878  012CE2  06E8               	decf	wreg,f,c
  1879  012CE4  E1FD               	bnz	clear_3
  1880                           
  1881                           ; Clear objects allocated to BANK1 (45 bytes)
  1882  012CE6  EE01  F0D3         	lfsr	0,__pbssBANK1
  1883  012CEA  0E2D               	movlw	45
  1884  012CEC                     clear_4:
  1885  012CEC  6AEE               	clrf	postinc0,c
  1886  012CEE  06E8               	decf	wreg,f,c
  1887  012CF0  E1FD               	bnz	clear_4
  1888                           
  1889                           ; Clear objects allocated to BANK0 (17 bytes)
  1890  012CF2  EE00  F0D8         	lfsr	0,__pbssBANK0
  1891  012CF6  0E11               	movlw	17
  1892  012CF8                     clear_5:
  1893  012CF8  6AEE               	clrf	postinc0,c
  1894  012CFA  06E8               	decf	wreg,f,c
  1895  012CFC  E1FD               	bnz	clear_5
  1896                           
  1897                           ; Clear objects allocated to COMRAM (45 bytes)
  1898  012CFE  EE00  F001         	lfsr	0,__pbssCOMRAM
  1899  012D02  0E2D               	movlw	45
  1900  012D04                     clear_6:
  1901  012D04  6AEE               	clrf	postinc0,c
  1902  012D06  06E8               	decf	wreg,f,c
  1903  012D08  E1FD               	bnz	clear_6
  1904  012D0A                     end_of_initialization:
  1905                           	opt stack 0
  1906  012D0A                     __end_of__initialization:
  1907                           	opt stack 0
  1908  012D0A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1909  012D0C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1910  012D0E  0100               	movlb	0
  1911  012D10  EF39  F072         	goto	_main	;jump to C main() function
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1h	equ	0xFE2
  1920                           fsr1l	equ	0xFE1
  1921                           
  1922                           	psect	bssCOMRAM
  1923  000001                     __pbssCOMRAM:
  1924                           	opt stack 0
  1925  000001                     _outPipes:
  1926                           	opt stack 0
  1927  000001                     	ds	9
  1928  00000A                     _inPipes:
  1929                           	opt stack 0
  1930  00000A                     	ds	6
  1931  000010                     _pBDTEntryIn:
  1932                           	opt stack 0
  1933  000010                     	ds	6
  1934  000016                     _averageCount:
  1935                           	opt stack 0
  1936  000016                     	ds	2
  1937  000018                     _pBDTEntryEP0OutNext:
  1938                           	opt stack 0
  1939  000018                     	ds	2
  1940  00001A                     _pBDTEntryEP0OutCurrent:
  1941                           	opt stack 0
  1942  00001A                     	ds	2
  1943  00001C                     _buck_status:
  1944                           	opt stack 0
  1945  00001C                     	ds	1
  1946  00001D                     _task_list_write_index:
  1947                           	opt stack 0
  1948  00001D                     	ds	1
  1949  00001E                     _task_list_read_index:
  1950                           	opt stack 0
  1951  00001E                     	ds	1
  1952  00001F                     _MSDWriteState:
  1953                           	opt stack 0
  1954  00001F                     	ds	1
  1955  000020                     _USBDeferINDataStagePackets:
  1956                           	opt stack 0
  1957  000020                     	ds	1
  1958  000021                     _USBStatusStageEnabledFlag2:
  1959                           	opt stack 0
  1960  000021                     	ds	1
  1961  000022                     _USBStatusStageEnabledFlag1:
  1962                           	opt stack 0
  1963  000022                     	ds	1
  1964  000023                     _USBDeferStatusStagePacket:
  1965                           	opt stack 0
  1966  000023                     	ds	1
  1967  000024                     _USBStatusStageTimeoutCounter:
  1968                           	opt stack 0
  1969  000024                     	ds	1
  1970  000025                     _BothEP0OutUOWNsSet:
  1971                           	opt stack 0
  1972  000025                     	ds	1
  1973  000026                     _endpoint_number:
  1974                           	opt stack 0
  1975  000026                     	ds	1
  1976  000027                     _USBBusIsSuspended:
  1977                           	opt stack 0
  1978  000027                     	ds	1
  1979  000028                     _RemoteWakeup:
  1980                           	opt stack 0
  1981  000028                     	ds	1
  1982  000029                     _controlTransferState:
  1983                           	opt stack 0
  1984  000029                     	ds	1
  1985  00002A                     _shortPacketStatus:
  1986                           	opt stack 0
  1987  00002A                     	ds	1
  1988  00002B                     _USBDeviceState:
  1989                           	opt stack 0
  1990  00002B                     	ds	1
  1991  00002C                     _USTATcopy:
  1992                           	opt stack 0
  1993  00002C                     	ds	1
  1994  00002D                     _USBActiveConfiguration:
  1995                           	opt stack 0
  1996  00002D                     	ds	1
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1h	equ	0xFE2
  2005                           fsr1l	equ	0xFE1
  2006                           
  2007                           	psect	bssBANK0
  2008  0000D8                     __pbssBANK0:
  2009                           	opt stack 0
  2010  0000D8                     _USBInHandle:
  2011                           	opt stack 0
  2012  0000D8                     	ds	2
  2013  0000DA                     _TransferLength:
  2014                           	opt stack 0
  2015  0000DA                     	ds	2
  2016  0000DC                     _USBMSDInHandle:
  2017                           	opt stack 0
  2018  0000DC                     	ds	2
  2019  0000DE                     _USBMSDOutHandle:
  2020                           	opt stack 0
  2021  0000DE                     	ds	2
  2022  0000E0                     _power_state:
  2023                           	opt stack 0
  2024  0000E0                     	ds	1
  2025  0000E1                     _idx:
  2026                           	opt stack 0
  2027  0000E1                     	ds	1
  2028  0000E2                     _buck_remote_dutycycle:
  2029                           	opt stack 0
  2030  0000E2                     	ds	1
  2031  0000E3                     _buck_remote_synchronous:
  2032                           	opt stack 0
  2033  0000E3                     	ds	1
  2034  0000E4                     _buck_remote_on:
  2035                           	opt stack 0
  2036  0000E4                     	ds	1
  2037  0000E5                     _buck_dutycycle:
  2038                           	opt stack 0
  2039  0000E5                     	ds	1
  2040  0000E6                     _MSDHostNoData:
  2041                           	opt stack 0
  2042  0000E6                     	ds	1
  2043  0000E7                     _MSDCommandState:
  2044                           	opt stack 0
  2045  0000E7                     	ds	1
  2046  0000E8                     _MSD_State:
  2047                           	opt stack 0
  2048  0000E8                     	ds	1
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postdec1	equ	0xFE5
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           
  2059                           	psect	bssBANK1
  2060  0001D3                     __pbssBANK1:
  2061                           	opt stack 0
  2062  0001D3                     _pBDTEntryOut:
  2063                           	opt stack 0
  2064  0001D3                     	ds	6
  2065  0001D9                     _LBA:
  2066                           	opt stack 0
  2067  0001D9                     	ds	4
  2068  0001DD                     _USB1msTickCount:
  2069                           	opt stack 0
  2070  0001DD                     	ds	4
  2071  0001E1                     _ep_data_out:
  2072                           	opt stack 0
  2073  0001E1                     	ds	3
  2074  0001E4                     _ep_data_in:
  2075                           	opt stack 0
  2076  0001E4                     	ds	3
  2077  0001E7                     _system_ui_inactive_count:
  2078                           	opt stack 0
  2079  0001E7                     	ds	2
  2080  0001E9                     _USBOutHandle:
  2081                           	opt stack 0
  2082  0001E9                     	ds	2
  2083  0001EB                     _ptrNextData:
  2084                           	opt stack 0
  2085  0001EB                     	ds	2
  2086  0001ED                     _pDst:
  2087                           	opt stack 0
  2088  0001ED                     	ds	2
  2089  0001EF                     _lastSecond:
  2090                           	opt stack 0
  2091  0001EF                     	ds	1
  2092  0001F0                     _status:
  2093                           	opt stack 0
  2094  0001F0                     	ds	1
  2095  0001F1                     _buck_remote_enable:
  2096                           	opt stack 0
  2097  0001F1                     	ds	1
  2098  0001F2                     _buck_dutycycle_last_step:
  2099                           	opt stack 0
  2100  0001F2                     	ds	1
  2101  0001F3                     _userInterfaceStatus:
  2102                           	opt stack 0
  2103  0001F3                     	ds	1
  2104  0001F4                     _i2c_frequency:
  2105                           	opt stack 0
  2106  0001F4                     	ds	1
  2107  0001F5                     _MSDCBWValid:
  2108                           	opt stack 0
  2109  0001F5                     	ds	1
  2110  0001F6                     _SoftDetach:
  2111                           	opt stack 0
  2112  0001F6                     	ds	1
  2113  0001F7                     _gblCBWLength:
  2114                           	opt stack 0
  2115  0001F7                     	ds	1
  2116  0001F8                     _MSDRetryAttempt:
  2117                           	opt stack 0
  2118  0001F8                     	ds	1
  2119  0001F9                     _MSDReadState:
  2120                           	opt stack 0
  2121  0001F9                     	ds	1
  2122  0001FA                     _USBTicksSinceSuspendEnd:
  2123                           	opt stack 0
  2124  0001FA                     	ds	1
  2125  0001FB                     _USBDeferOUTDataStagePackets:
  2126                           	opt stack 0
  2127  0001FB                     	ds	1
  2128  0001FC                     _USBAlternateInterface:
  2129                           	opt stack 0
  2130  0001FC                     	ds	2
  2131  0001FE                     _active_protocol:
  2132                           	opt stack 0
  2133  0001FE                     	ds	1
  2134  0001FF                     _idle_rate:
  2135                           	opt stack 0
  2136  0001FF                     	ds	1
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           postdec1	equ	0xFE5
  2144                           fsr1h	equ	0xFE2
  2145                           fsr1l	equ	0xFE1
  2146                           
  2147                           	psect	bssBANK2
  2148  000200                     __pbssBANK2:
  2149                           	opt stack 0
  2150  000200                     _os:
  2151                           	opt stack 0
  2152  000200                     	ds	65
  2153  000241                     _gblCBW:
  2154                           	opt stack 0
  2155  000241                     	ds	31
  2156  000260                     _gblSenseData:
  2157                           	opt stack 0
  2158  000260                     	ds	18
  2159  000272                     _temperatureExternal2Sum:
  2160                           	opt stack 0
  2161  000272                     	ds	4
  2162  000276                     _temperatureExternal1Sum:
  2163                           	opt stack 0
  2164  000276                     	ds	4
  2165  00027A                     _temperatureOnboardSum:
  2166                           	opt stack 0
  2167  00027A                     	ds	4
  2168  00027E                     _outputCapacitySum:
  2169                           	opt stack 0
  2170  00027E                     	ds	4
  2171  000282                     _inputCapacitySum:
  2172                           	opt stack 0
  2173  000282                     	ds	4
  2174  000286                     _outputPowerSum:
  2175                           	opt stack 0
  2176  000286                     	ds	4
  2177  00028A                     _inputPowerSum:
  2178                           	opt stack 0
  2179  00028A                     	ds	4
  2180  00028E                     _outputCurrentSum:
  2181                           	opt stack 0
  2182  00028E                     	ds	4
  2183  000292                     _outputVoltageSum:
  2184                           	opt stack 0
  2185  000292                     	ds	4
  2186  000296                     _inputCurrentSum:
  2187                           	opt stack 0
  2188  000296                     	ds	4
  2189  00029A                     _inputVoltageSum:
  2190                           	opt stack 0
  2191  00029A                     	ds	4
  2192  00029E                     _now:
  2193                           	opt stack 0
  2194  00029E                     	ds	4
  2195  0002A2                     _last:
  2196                           	opt stack 0
  2197  0002A2                     	ds	4
  2198  0002A6                     _gblBLKLen:
  2199                           	opt stack 0
  2200  0002A6                     	ds	4
  2201  0002AA                     _gblNumBLKS:
  2202                           	opt stack 0
  2203  0002AA                     	ds	4
  2204  0002AE                     _lowPowerTime:
  2205                           	opt stack 0
  2206  0002AE                     	ds	2
  2207  0002B0                     _chargerOnTime:
  2208                           	opt stack 0
  2209  0002B0                     	ds	2
  2210  0002B2                     _gblMediaPresent:
  2211                           	opt stack 0
  2212  0002B2                     	ds	2
  2213  0002B4                     _MSBBufferIndex:
  2214                           	opt stack 0
  2215  0002B4                     	ds	2
  2216  0002B6                     _mediaInformation:
  2217                           	opt stack 0
  2218  0002B6                     	ds	5
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           fsr1h	equ	0xFE2
  2227                           fsr1l	equ	0xFE1
  2228                           
  2229                           	psect	dataBANK2
  2230  0002BB                     __pdataBANK2:
  2231                           	opt stack 0
  2232  0002BB                     _LUN:
  2233                           	opt stack 0
  2234  0002BB                     	ds	29
  2235  0002D8                     system_init@F7096:
  2236                           	opt stack 0
  2237  0002D8                     	ds	9
  2238  0002E1                     system_init@F7102:
  2239                           	opt stack 0
  2240  0002E1                     	ds	4
  2241  0002E5                     system_init@F7098:
  2242                           	opt stack 0
  2243  0002E5                     	ds	4
  2244  0002E9                     _battery_voltage_maximum:
  2245                           	opt stack 0
  2246  0002E9                     	ds	2
  2247  0002EB                     _filename:
  2248                           	opt stack 0
  2249  0002EB                     	ds	9
  2250  0002F4                     _extension:
  2251                           	opt stack 0
  2252  0002F4                     	ds	4
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           postdec1	equ	0xFE5
  2260                           fsr1h	equ	0xFE2
  2261                           fsr1l	equ	0xFE1
  2262                           
  2263                           	psect	bssBANK3
  2264  000300                     __pbssBANK3:
  2265                           	opt stack 0
  2266  000300                     _calibrationParameters:
  2267                           	opt stack 0
  2268  000300                     	ds	84
  2269  000354                     _display_content:
  2270                           	opt stack 0
  2271  000354                     	ds	80
  2272  0003A4                     _ToSendDataBuffer:
  2273                           	opt stack 0
  2274  0003A4                     	ds	64
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           postdec1	equ	0xFE5
  2282                           fsr1h	equ	0xFE2
  2283                           fsr1l	equ	0xFE1
  2284                           
  2285                           	psect	dataBANK3
  2286  0003E4                     __pdataBANK3:
  2287                           	opt stack 0
  2288  0003E4                     i2c_display_init@F6880:
  2289                           	opt stack 0
  2290  0003E4                     	ds	9
  2291  0003ED                     i2c_display_send_init_sequence@F6877:
  2292                           	opt stack 0
  2293  0003ED                     	ds	9
  2294  0003F6                     system_init@F7100:
  2295                           	opt stack 0
  2296  0003F6                     	ds	9
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           postdec1	equ	0xFE5
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           
  2307                           	psect	bssBANK4
  2308  000468                     __pbssBANK4:
  2309                           	opt stack 0
  2310  000468                     _task_list:
  2311                           	opt stack 0
  2312  000468                     	ds	16
  2313  000478                     _ReceivedDataBuffer:
  2314                           	opt stack 0
  2315  000478                     	ds	64
  2316                           tblptru	equ	0xFF8
  2317                           tblptrh	equ	0xFF7
  2318                           tblptrl	equ	0xFF6
  2319                           tablat	equ	0xFF5
  2320                           postinc0	equ	0xFEE
  2321                           wreg	equ	0xFE8
  2322                           postdec1	equ	0xFE5
  2323                           fsr1h	equ	0xFE2
  2324                           fsr1l	equ	0xFE1
  2325                           
  2326                           	psect	dataBANK4
  2327  000400                     __pdataBANK4:
  2328                           	opt stack 0
  2329  000400                     system_init@F7104:
  2330                           	opt stack 0
  2331  000400                     	ds	104
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           postdec1	equ	0xFE5
  2339                           fsr1h	equ	0xFE2
  2340                           fsr1l	equ	0xFE1
  2341                           
  2342                           	psect	bssBIGRAMll
  2343  000800                     __pbssBIGRAMll:
  2344                           	opt stack 0
  2345  000800                     _buffer:
  2346                           	opt stack 0
  2347  000800                     	ds	512
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1h	equ	0xFE2
  2356                           fsr1l	equ	0xFE1
  2357                           
  2358                           	psect	cstackBANK1
  2359  000100                     __pcstackBANK1:
  2360                           	opt stack 0
  2361  000100                     log_write_to_disk@file_number:
  2362                           	opt stack 0
  2363  000100                     __display_charger@fan_off:
  2364                           	opt stack 0
  2365  000100                     __display_time@pts:
  2366                           	opt stack 0
  2367  000100                     system_init@appendtext:
  2368                           	opt stack 0
  2369                           
  2370                           ; 104 bytes @ 0x0
  2371  000100                     	ds	1
  2372  000101                     log_write_to_disk@log_entry:
  2373                           	opt stack 0
  2374                           
  2375                           ; 32 bytes @ 0x1
  2376  000101                     	ds	7
  2377  000108                     __display_charger@fan_on:
  2378                           	opt stack 0
  2379                           
  2380                           ; 7 bytes @ 0x8
  2381  000108                     	ds	7
  2382  00010F                     __display_charger@header:
  2383                           	opt stack 0
  2384                           
  2385                           ; 21 bytes @ 0xF
  2386  00010F                     	ds	5
  2387  000114                     __display_time@pressminutes:
  2388                           	opt stack 0
  2389                           
  2390                           ; 20 bytes @ 0x14
  2391  000114                     	ds	16
  2392  000124                     __display_charger@charger_async:
  2393                           	opt stack 0
  2394                           
  2395                           ; 21 bytes @ 0x24
  2396  000124                     	ds	4
  2397  000128                     __display_time@pressseconds:
  2398                           	opt stack 0
  2399                           
  2400                           ; 20 bytes @ 0x28
  2401  000128                     	ds	17
  2402  000139                     __display_charger@charger_sync:
  2403                           	opt stack 0
  2404                           
  2405                           ; 20 bytes @ 0x39
  2406  000139                     	ds	3
  2407  00013C                     __display_time@pressmonth:
  2408                           	opt stack 0
  2409                           
  2410                           ; 18 bytes @ 0x3C
  2411  00013C                     	ds	17
  2412  00014D                     __display_charger@supply_off:
  2413                           	opt stack 0
  2414                           
  2415                           ; 19 bytes @ 0x4D
  2416  00014D                     	ds	1
  2417  00014E                     __display_time@presshours:
  2418                           	opt stack 0
  2419                           
  2420                           ; 18 bytes @ 0x4E
  2421  00014E                     	ds	18
  2422  000160                     __display_time@pressday:
  2423                           	opt stack 0
  2424  000160                     __display_charger@supply_on:
  2425                           	opt stack 0
  2426                           
  2427                           ; 18 bytes @ 0x60
  2428  000160                     	ds	8
  2429  000168                     system_init@filename:
  2430                           	opt stack 0
  2431                           
  2432                           ; 9 bytes @ 0x68
  2433  000168                     	ds	8
  2434  000170                     __display_time@presssave:
  2435                           	opt stack 0
  2436                           
  2437                           ; 16 bytes @ 0x70
  2438  000170                     	ds	1
  2439  000171                     system_init@filename2:
  2440                           	opt stack 0
  2441                           
  2442                           ; 9 bytes @ 0x71
  2443  000171                     	ds	1
  2444  000172                     __display_charger@charger_startup:
  2445                           	opt stack 0
  2446                           
  2447                           ; 16 bytes @ 0x72
  2448  000172                     	ds	8
  2449  00017A                     system_init@extension:
  2450                           	opt stack 0
  2451                           
  2452                           ; 4 bytes @ 0x7A
  2453  00017A                     	ds	4
  2454  00017E                     system_init@extension2:
  2455                           	opt stack 0
  2456                           
  2457                           ; 4 bytes @ 0x7E
  2458  00017E                     	ds	2
  2459  000180                     __display_time@tad:
  2460                           	opt stack 0
  2461                           
  2462                           ; 14 bytes @ 0x80
  2463  000180                     	ds	2
  2464  000182                     __display_charger@charger_off:
  2465                           	opt stack 0
  2466                           
  2467                           ; 12 bytes @ 0x82
  2468  000182                     	ds	12
  2469  00018E                     __display_charger@cntr:
  2470                           	opt stack 0
  2471  00018E                     __display_time@setminutes:
  2472                           	opt stack 0
  2473                           
  2474                           ; 12 bytes @ 0x8E
  2475  00018E                     	ds	12
  2476  00019A                     __display_time@setseconds:
  2477                           	opt stack 0
  2478                           
  2479                           ; 12 bytes @ 0x9A
  2480  00019A                     	ds	12
  2481  0001A6                     __display_time@setmonth:
  2482                           	opt stack 0
  2483                           
  2484                           ; 10 bytes @ 0xA6
  2485  0001A6                     	ds	10
  2486  0001B0                     __display_time@sethours:
  2487                           	opt stack 0
  2488                           
  2489                           ; 10 bytes @ 0xB0
  2490  0001B0                     	ds	10
  2491  0001BA                     __display_time@setyear:
  2492                           	opt stack 0
  2493                           
  2494                           ; 9 bytes @ 0xBA
  2495  0001BA                     	ds	9
  2496  0001C3                     __display_time@setday:
  2497                           	opt stack 0
  2498                           
  2499                           ; 8 bytes @ 0xC3
  2500  0001C3                     	ds	8
  2501  0001CB                     __display_time@mode:
  2502                           	opt stack 0
  2503                           
  2504                           ; 1 bytes @ 0xCB
  2505  0001CB                     	ds	1
  2506  0001CC                     __display_time@year:
  2507                           	opt stack 0
  2508                           
  2509                           ; 1 bytes @ 0xCC
  2510  0001CC                     	ds	1
  2511  0001CD                     __display_time@month:
  2512                           	opt stack 0
  2513                           
  2514                           ; 1 bytes @ 0xCD
  2515  0001CD                     	ds	1
  2516  0001CE                     __display_time@day:
  2517                           	opt stack 0
  2518                           
  2519                           ; 1 bytes @ 0xCE
  2520  0001CE                     	ds	1
  2521  0001CF                     __display_time@hours:
  2522                           	opt stack 0
  2523                           
  2524                           ; 1 bytes @ 0xCF
  2525  0001CF                     	ds	1
  2526  0001D0                     __display_time@minutes:
  2527                           	opt stack 0
  2528                           
  2529                           ; 1 bytes @ 0xD0
  2530  0001D0                     	ds	1
  2531  0001D1                     __display_time@seconds:
  2532                           	opt stack 0
  2533                           
  2534                           ; 1 bytes @ 0xD1
  2535  0001D1                     	ds	1
  2536  0001D2                     __display_time@cntr:
  2537                           	opt stack 0
  2538                           
  2539                           ; 1 bytes @ 0xD2
  2540  0001D2                     	ds	1
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           
  2551                           	psect	cstackBANK0
  2552  000060                     __pcstackBANK0:
  2553                           	opt stack 0
  2554  000060                     ??_system_output_off:
  2555  000060                     ??__i2c_wait_idle:
  2556  000060                     ??__display_clear:
  2557  000060                     ??__number_of_days:
  2558  000060                     ??__buck_set_dutycycle:
  2559  000060                     ?_USBTransferOnePacket:
  2560                           	opt stack 0
  2561  000060                     ?_adc_read:
  2562                           	opt stack 0
  2563  000060                     ?_log_get_number_of_samples:
  2564                           	opt stack 0
  2565  000060                     ?_ExternalFlash_MediaInitialize:
  2566                           	opt stack 0
  2567  000060                     ?_ExternalFlash_SectorSizeRead:
  2568                           	opt stack 0
  2569  000060                     ?_strlen:
  2570                           	opt stack 0
  2571  000060                     ?_strncmp:
  2572                           	opt stack 0
  2573  000060                     ?__sector_from_cluster:
  2574                           	opt stack 0
  2575  000060                     ?___awdiv:
  2576                           	opt stack 0
  2577  000060                     ?___lwdiv:
  2578                           	opt stack 0
  2579  000060                     ?___lwmod:
  2580                           	opt stack 0
  2581  000060                     ?_ExternalFlash_CapacityRead:
  2582                           	opt stack 0
  2583  000060                     ?___lmul:
  2584                           	opt stack 0
  2585  000060                     ?___lldiv:
  2586                           	opt stack 0
  2587  000060                     ?___aldiv:
  2588                           	opt stack 0
  2589  000060                     ?___fltol:
  2590                           	opt stack 0
  2591  000060                     USBTransferOnePacket@dir:
  2592                           	opt stack 0
  2593  000060                     USBStallEndpoint@dir:
  2594                           	opt stack 0
  2595  000060                     SYSTEM_Initialize@state:
  2596                           	opt stack 0
  2597  000060                     system_output_is_on@output:
  2598                           	opt stack 0
  2599  000060                     system_output_on@output:
  2600                           	opt stack 0
  2601  000060                     __i2c_send@dat:
  2602                           	opt stack 0
  2603  000060                     i2c_set_frequency@frequency:
  2604                           	opt stack 0
  2605  000060                     get_next_eeprom_write_task@task:
  2606                           	opt stack 0
  2607  000060                     display_get_character@position:
  2608                           	opt stack 0
  2609  000060                     __rtcc_bcd_to_decimal@tens:
  2610                           	opt stack 0
  2611  000060                     __rtcc_verify_bcd@min:
  2612                           	opt stack 0
  2613  000060                     rtcc_set_year@year:
  2614                           	opt stack 0
  2615  000060                     rtcc_set_month@month:
  2616                           	opt stack 0
  2617  000060                     rtcc_set_day@day:
  2618                           	opt stack 0
  2619  000060                     rtcc_set_hours@hours:
  2620                           	opt stack 0
  2621  000060                     rtcc_set_minutes@minutes:
  2622                           	opt stack 0
  2623  000060                     rtcc_set_seconds@seconds:
  2624                           	opt stack 0
  2625  000060                     __buck_prepare@cntr:
  2626                           	opt stack 0
  2627  000060                     buck_remote_set_enable@remote:
  2628                           	opt stack 0
  2629  000060                     buck_remote_set_on@on:
  2630                           	opt stack 0
  2631  000060                     buck_remote_set_synchronous@synchronous:
  2632                           	opt stack 0
  2633  000060                     buck_remote_set_dutycycle@dutycycle:
  2634                           	opt stack 0
  2635  000060                     buck_remote_change_dutycycle@change:
  2636                           	opt stack 0
  2637  000060                     buck_remote_get_status@retval:
  2638                           	opt stack 0
  2639  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2640                           	opt stack 0
  2641  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2642                           	opt stack 0
  2643  000060                     __flash_spi_tx@data:
  2644                           	opt stack 0
  2645  000060                     __flash_spi_tx_tx@command:
  2646                           	opt stack 0
  2647  000060                     __flash_spi_tx_rx@command:
  2648                           	opt stack 0
  2649  000060                     ExternalFlash_MediaInitialize@config:
  2650                           	opt stack 0
  2651  000060                     ExternalFlash_SectorSizeRead@config:
  2652                           	opt stack 0
  2653  000060                     ExternalFlash_CapacityRead@config:
  2654                           	opt stack 0
  2655  000060                     ExternalFlash_MediaDetect@config:
  2656                           	opt stack 0
  2657  000060                     ExternalFlash_WriteProtectStateGet@config:
  2658                           	opt stack 0
  2659  000060                     __sector_from_cluster@fat_cluster:
  2660                           	opt stack 0
  2661  000060                     __get_checksum@log_entry:
  2662                           	opt stack 0
  2663  000060                     ___awdiv@dividend:
  2664                           	opt stack 0
  2665  000060                     ___lwdiv@dividend:
  2666                           	opt stack 0
  2667  000060                     ___lwmod@dividend:
  2668                           	opt stack 0
  2669  000060                     memcpy@d1:
  2670                           	opt stack 0
  2671  000060                     memset@p1:
  2672                           	opt stack 0
  2673  000060                     strlen@s:
  2674                           	opt stack 0
  2675  000060                     strncmp@s1:
  2676                           	opt stack 0
  2677  000060                     ___lmul@multiplier:
  2678                           	opt stack 0
  2679  000060                     ___lldiv@dividend:
  2680                           	opt stack 0
  2681  000060                     ___aldiv@dividend:
  2682                           	opt stack 0
  2683  000060                     ___fltol@f1:
  2684                           	opt stack 0
  2685  000060                     __display_usb@header:
  2686                           	opt stack 0
  2687  000060                     __display_outputs@line3:
  2688                           	opt stack 0
  2689                           
  2690                           ; 21 bytes @ 0x0
  2691  000060                     	ds	1
  2692  000061                     ??__fill_buffer_get_status:
  2693  000061                     ??_display_get_character:
  2694  000061                     ??_USBStallEndpoint:
  2695  000061                     system_output_off@output:
  2696                           	opt stack 0
  2697  000061                     schedule_eeprom_write_task@task:
  2698                           	opt stack 0
  2699  000061                     __rtcc_bcd_to_decimal@ones:
  2700                           	opt stack 0
  2701  000061                     __number_of_days@year:
  2702                           	opt stack 0
  2703  000061                     __rtcc_verify_bcd@max:
  2704                           	opt stack 0
  2705  000061                     __buck_set_dutycycle@dutyCycle:
  2706                           	opt stack 0
  2707  000061                     USBTransferOnePacket@data:
  2708                           	opt stack 0
  2709  000061                     SYSTEM_Initialize@pll_startup_counter:
  2710                           	opt stack 0
  2711  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2712                           	opt stack 0
  2713                           
  2714                           ; 2 bytes @ 0x1
  2715  000061                     	ds	1
  2716  000062                     ??_MSDComputeDeviceInAndResidue:
  2717  000062                     ??_strlen:
  2718  000062                     ??__rtcc_verify_bcd:
  2719  000062                     system_output_toggle@output:
  2720                           	opt stack 0
  2721  000062                     __i2c_eeprom_load_default_calibration@index:
  2722                           	opt stack 0
  2723  000062                     schedule_eeprom_write_task@idx:
  2724                           	opt stack 0
  2725  000062                     __display_clear@row:
  2726                           	opt stack 0
  2727  000062                     __rtcc_bcd_to_decimal@input:
  2728                           	opt stack 0
  2729  000062                     __number_of_days@bcd_year:
  2730                           	opt stack 0
  2731  000062                     __buck_set_sync_async@new_dutycycle:
  2732                           	opt stack 0
  2733  000062                     adc_read@channel:
  2734                           	opt stack 0
  2735  000062                     __flash_spi_tx@length:
  2736                           	opt stack 0
  2737  000062                     __flash_spi_tx_tx@command_length:
  2738                           	opt stack 0
  2739  000062                     __flash_spi_tx_rx@command_length:
  2740                           	opt stack 0
  2741  000062                     __get_checksum@byte_array:
  2742                           	opt stack 0
  2743  000062                     ___awdiv@divisor:
  2744                           	opt stack 0
  2745  000062                     ___lwdiv@divisor:
  2746                           	opt stack 0
  2747  000062                     ___lwmod@divisor:
  2748                           	opt stack 0
  2749  000062                     memcpy@s1:
  2750                           	opt stack 0
  2751  000062                     memset@c:
  2752                           	opt stack 0
  2753  000062                     strncmp@s2:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0x2
  2757  000062                     	ds	1
  2758  000063                     USBTransferOnePacket@len:
  2759                           	opt stack 0
  2760  000063                     __parse_command_long@data:
  2761                           	opt stack 0
  2762  000063                     __parse_command_calibration@item:
  2763                           	opt stack 0
  2764  000063                     display_get_character@line:
  2765                           	opt stack 0
  2766  000063                     __display_clear@col:
  2767                           	opt stack 0
  2768  000063                     __number_of_days@month:
  2769                           	opt stack 0
  2770  000063                     __rtcc_verify_bcd@value:
  2771                           	opt stack 0
  2772  000063                     rtcc_get_year_decimal@bcd_year:
  2773                           	opt stack 0
  2774  000063                     rtcc_get_month_decimal@bcd_month:
  2775                           	opt stack 0
  2776  000063                     rtcc_get_day_decimal@bcd_day:
  2777                           	opt stack 0
  2778  000063                     rtcc_get_hours_decimal@bcd_hours:
  2779                           	opt stack 0
  2780  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2781                           	opt stack 0
  2782  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2783                           	opt stack 0
  2784  000063                     __buck_set_sync_async@mode:
  2785                           	opt stack 0
  2786  000063                     SYSTEM_Initialize@pll_startup_counter_3287:
  2787                           	opt stack 0
  2788  000063                     adc_read@adc_value:
  2789                           	opt stack 0
  2790                           
  2791                           ; 2 bytes @ 0x3
  2792  000063                     	ds	1
  2793  000064                     ??_USBTransferOnePacket:
  2794  000064                     ??__fill_buffer_get_display1:
  2795  000064                     ??__fill_buffer_get_display2:
  2796  000064                     ??__flash_spi_tx:
  2797  000064                     ??___fltol:
  2798  000064                     ?__get_time:
  2799                           	opt stack 0
  2800  000064                     ?__get_date:
  2801                           	opt stack 0
  2802  000064                     ?__get_dateTime:
  2803                           	opt stack 0
  2804  000064                     __parse_command_long@cmd:
  2805                           	opt stack 0
  2806  000064                     __parse_command_calibration@dat1:
  2807                           	opt stack 0
  2808  000064                     __rtcc_increment_bcd@min:
  2809                           	opt stack 0
  2810  000064                     __rtcc_decrement_bcd@min:
  2811                           	opt stack 0
  2812  000064                     rtcc_correct_day@day:
  2813                           	opt stack 0
  2814  000064                     __get_checksum@checksum:
  2815                           	opt stack 0
  2816  000064                     ___awdiv@counter:
  2817                           	opt stack 0
  2818  000064                     ___lwdiv@counter:
  2819                           	opt stack 0
  2820  000064                     ___lwmod@counter:
  2821                           	opt stack 0
  2822  000064                     __flash_spi_tx_tx@data:
  2823                           	opt stack 0
  2824  000064                     __flash_spi_tx_rx@data:
  2825                           	opt stack 0
  2826  000064                     memcpy@n:
  2827                           	opt stack 0
  2828  000064                     memset@n:
  2829                           	opt stack 0
  2830  000064                     strlen@cp:
  2831                           	opt stack 0
  2832  000064                     strncmp@len:
  2833                           	opt stack 0
  2834  000064                     ___lmul@multiplicand:
  2835                           	opt stack 0
  2836  000064                     ___lldiv@divisor:
  2837                           	opt stack 0
  2838  000064                     ___aldiv@divisor:
  2839                           	opt stack 0
  2840                           
  2841                           ; 4 bytes @ 0x4
  2842  000064                     	ds	1
  2843  000065                     ?_i2c_adc_read:
  2844                           	opt stack 0
  2845  000065                     USBStallEndpoint@ep:
  2846                           	opt stack 0
  2847  000065                     __fill_buffer_get_display1@cntr:
  2848                           	opt stack 0
  2849  000065                     __fill_buffer_get_display2@cntr:
  2850                           	opt stack 0
  2851  000065                     __parse_command_calibration@dat2:
  2852                           	opt stack 0
  2853  000065                     __rtcc_increment_bcd@max:
  2854                           	opt stack 0
  2855  000065                     __rtcc_decrement_bcd@max:
  2856                           	opt stack 0
  2857  000065                     rtcc_correct_day@max:
  2858                           	opt stack 0
  2859  000065                     __get_checksum@cntr:
  2860                           	opt stack 0
  2861  000065                     ___awdiv@sign:
  2862                           	opt stack 0
  2863  000065                     __i2c_write@data:
  2864                           	opt stack 0
  2865  000065                     __i2c_read@data:
  2866                           	opt stack 0
  2867  000065                     i2c_display_write_fixed@data:
  2868                           	opt stack 0
  2869  000065                     ___lwdiv@quotient:
  2870                           	opt stack 0
  2871                           
  2872                           ; 2 bytes @ 0x5
  2873  000065                     	ds	1
  2874  000066                     ??_strncmp:
  2875  000066                     ??__rtcc_increment_bcd:
  2876  000066                     ??__rtcc_decrement_bcd:
  2877  000066                     ??__get_time:
  2878  000066                     ??__get_date:
  2879  000066                     __fill_buffer_get_display1@line:
  2880                           	opt stack 0
  2881  000066                     __fill_buffer_get_display2@line:
  2882                           	opt stack 0
  2883  000066                     __parse_command_calibration@dat3:
  2884                           	opt stack 0
  2885  000066                     memcpy@tmp:
  2886                           	opt stack 0
  2887  000066                     USBStallEndpoint@p:
  2888                           	opt stack 0
  2889  000066                     __flash_spi_tx_tx@data_length:
  2890                           	opt stack 0
  2891  000066                     __flash_spi_tx_rx@data_length:
  2892                           	opt stack 0
  2893  000066                     ___awdiv@quotient:
  2894                           	opt stack 0
  2895  000066                     memset@p:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x6
  2899  000066                     	ds	1
  2900  000067                     ??_i2c_adc_read:
  2901  000067                     ??__parse_command_calibration:
  2902  000067                     __fill_buffer_get_display1@position:
  2903                           	opt stack 0
  2904  000067                     __fill_buffer_get_display2@position:
  2905                           	opt stack 0
  2906  000067                     __i2c_write@length:
  2907                           	opt stack 0
  2908  000067                     __i2c_read@length:
  2909                           	opt stack 0
  2910  000067                     i2c_display_write_fixed@length:
  2911                           	opt stack 0
  2912  000067                     __rtcc_increment_bcd@value:
  2913                           	opt stack 0
  2914  000067                     __rtcc_decrement_bcd@value:
  2915                           	opt stack 0
  2916  000067                     utoa@buf:
  2917                           	opt stack 0
  2918  000067                     memcpy@d:
  2919                           	opt stack 0
  2920                           
  2921                           ; 2 bytes @ 0x7
  2922  000067                     	ds	1
  2923  000068                     ??__i2c_read:
  2924  000068                     ??__flash_spi_tx_tx:
  2925  000068                     ??__flash_spi_tx_rx:
  2926  000068                     ??__get_dateTime:
  2927  000068                     USBDeviceInit@i:
  2928                           	opt stack 0
  2929  000068                     USBTransferOnePacket@ep:
  2930                           	opt stack 0
  2931  000068                     MSDErrorHandler@ErrorCase:
  2932                           	opt stack 0
  2933  000068                     __i2c_write@slave_address:
  2934                           	opt stack 0
  2935  000068                     i2c_display_write_fixed@pos:
  2936                           	opt stack 0
  2937  000068                     rtcc_increment_year@year:
  2938                           	opt stack 0
  2939  000068                     rtcc_decrement_year@year:
  2940                           	opt stack 0
  2941  000068                     rtcc_increment_month@month:
  2942                           	opt stack 0
  2943  000068                     rtcc_decrement_month@month:
  2944                           	opt stack 0
  2945  000068                     rtcc_increment_day@day:
  2946                           	opt stack 0
  2947  000068                     rtcc_decrement_day@day:
  2948                           	opt stack 0
  2949  000068                     rtcc_increment_hours@hours:
  2950                           	opt stack 0
  2951  000068                     rtcc_decrement_hours@hours:
  2952                           	opt stack 0
  2953  000068                     rtcc_increment_minutes@minutes:
  2954                           	opt stack 0
  2955  000068                     rtcc_decrement_minutes@minutes:
  2956                           	opt stack 0
  2957  000068                     rtcc_increment_seconds@seconds:
  2958                           	opt stack 0
  2959  000068                     rtcc_decrement_seconds@seconds:
  2960                           	opt stack 0
  2961  000068                     __flash_wakeup@command:
  2962                           	opt stack 0
  2963  000068                     __get_time@hours:
  2964                           	opt stack 0
  2965  000068                     __get_date@year:
  2966                           	opt stack 0
  2967  000068                     ___aldiv@counter:
  2968                           	opt stack 0
  2969  000068                     ___fltol@sign1:
  2970                           	opt stack 0
  2971  000068                     i2c_adc_read@result:
  2972                           	opt stack 0
  2973  000068                     ___lmul@product:
  2974                           	opt stack 0
  2975  000068                     ___lldiv@quotient:
  2976                           	opt stack 0
  2977                           
  2978                           ; 4 bytes @ 0x8
  2979  000068                     	ds	1
  2980  000069                     MSDErrorHandler@OldMSD_State:
  2981                           	opt stack 0
  2982  000069                     __i2c_write@cntr:
  2983                           	opt stack 0
  2984  000069                     __get_time@minutes:
  2985                           	opt stack 0
  2986  000069                     __get_date@month:
  2987                           	opt stack 0
  2988  000069                     ___aldiv@sign:
  2989                           	opt stack 0
  2990  000069                     ___fltol@exp1:
  2991                           	opt stack 0
  2992  000069                     USBTransferOnePacket@handle:
  2993                           	opt stack 0
  2994  000069                     __parse_command_calibration@parameter:
  2995                           	opt stack 0
  2996  000069                     utoa@val:
  2997                           	opt stack 0
  2998  000069                     memcpy@s:
  2999                           	opt stack 0
  3000                           
  3001                           ; 2 bytes @ 0x9
  3002  000069                     	ds	1
  3003  00006A                     __ic2_display_set_address@address:
  3004                           	opt stack 0
  3005  00006A                     i2c_digipot_backlight@level:
  3006                           	opt stack 0
  3007  00006A                     i2c_adc_start@resolution:
  3008                           	opt stack 0
  3009  00006A                     __get_time@seconds:
  3010                           	opt stack 0
  3011  00006A                     __get_date@day:
  3012                           	opt stack 0
  3013  00006A                     i2c_digipot_reset_on@data_array:
  3014                           	opt stack 0
  3015  00006A                     i2c_digipot_reset_off@data_array:
  3016                           	opt stack 0
  3017  00006A                     i2c_eeprom_write@address:
  3018                           	opt stack 0
  3019  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3020                           	opt stack 0
  3021  00006A                     ___aldiv@quotient:
  3022                           	opt stack 0
  3023  00006A                     i2c_display_send_init_sequence@init_sequence:
  3024                           	opt stack 0
  3025                           
  3026                           ; 9 bytes @ 0xA
  3027  00006A                     	ds	1
  3028  00006B                     i2c_adc_start@gain:
  3029                           	opt stack 0
  3030  00006B                     __ic2_display_set_address@data_array:
  3031                           	opt stack 0
  3032  00006B                     i2c_digipot_backlight@data_array:
  3033                           	opt stack 0
  3034  00006B                     __get_time@time:
  3035                           	opt stack 0
  3036  00006B                     __get_date@date:
  3037                           	opt stack 0
  3038  00006B                     utoa@base:
  3039                           	opt stack 0
  3040                           
  3041                           ; 2 bytes @ 0xB
  3042  00006B                     	ds	1
  3043  00006C                     ??_system_calculate_output_voltage:
  3044  00006C                     ??_system_calculate_input_voltage:
  3045  00006C                     ??_system_calculate_output_current:
  3046  00006C                     ??_system_calculate_input_current:
  3047  00006C                     ?_adc_calculate_temperature:
  3048                           	opt stack 0
  3049  00006C                     ?__flash_get_status:
  3050                           	opt stack 0
  3051  00006C                     i2c_adc_start@channel:
  3052                           	opt stack 0
  3053  00006C                     ___lldiv@counter:
  3054                           	opt stack 0
  3055  00006C                     i2c_eeprom_write@data:
  3056                           	opt stack 0
  3057  00006C                     adc_calculate_temperature@adc_value:
  3058                           	opt stack 0
  3059                           
  3060                           ; 2 bytes @ 0xC
  3061  00006C                     	ds	1
  3062  00006D                     ??__buck_initial_dutycycle:
  3063  00006D                     ?__get_output_power:
  3064                           	opt stack 0
  3065  00006D                     i2c_display_cursor@position:
  3066                           	opt stack 0
  3067  00006D                     i2c_adc_start@configuration_byte:
  3068                           	opt stack 0
  3069  00006D                     __update_modified_time@root:
  3070                           	opt stack 0
  3071  00006D                     utoa@v:
  3072                           	opt stack 0
  3073                           
  3074                           ; 2 bytes @ 0xD
  3075  00006D                     	ds	1
  3076  00006E                     ?__get_input_power:
  3077                           	opt stack 0
  3078  00006E                     ?___xxtofl:
  3079                           	opt stack 0
  3080  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3081                           	opt stack 0
  3082  00006E                     i2c_display_cursor@line:
  3083                           	opt stack 0
  3084  00006E                     i2c_eeprom_write@length:
  3085                           	opt stack 0
  3086  00006E                     adc_calculate_temperature@calibration:
  3087                           	opt stack 0
  3088  00006E                     __flash_get_status@command:
  3089                           	opt stack 0
  3090  00006E                     __get_dateTime@year:
  3091                           	opt stack 0
  3092  00006E                     __get_temperature@temperature:
  3093                           	opt stack 0
  3094  00006E                     __buck_initial_dutycycle@dc:
  3095                           	opt stack 0
  3096  00006E                     ___xxtofl@val:
  3097                           	opt stack 0
  3098                           
  3099                           ; 4 bytes @ 0xE
  3100  00006E                     	ds	1
  3101  00006F                     ??_adc_calculate_temperature:
  3102  00006F                     ??_i2c_eeprom_write:
  3103  00006F                     MSDCheckForErrorCases@DeviceNoData:
  3104                           	opt stack 0
  3105  00006F                     __i2c_read@slave_address:
  3106                           	opt stack 0
  3107  00006F                     i2c_display_cursor@address:
  3108                           	opt stack 0
  3109  00006F                     __get_dateTime@month:
  3110                           	opt stack 0
  3111  00006F                     utoa@c:
  3112                           	opt stack 0
  3113  00006F                     __flash_get_status@status:
  3114                           	opt stack 0
  3115  00006F                     __get_output_power@pwr:
  3116                           	opt stack 0
  3117                           
  3118                           ; 4 bytes @ 0xF
  3119  00006F                     	ds	1
  3120  000070                     MSDCheckForErrorCases@MSDErrorCase:
  3121                           	opt stack 0
  3122  000070                     __i2c_read@cntr:
  3123                           	opt stack 0
  3124  000070                     __get_dateTime@day:
  3125                           	opt stack 0
  3126  000070                     itoa@buf:
  3127                           	opt stack 0
  3128  000070                     system_calculate_input_voltage@tmp:
  3129                           	opt stack 0
  3130  000070                     system_calculate_output_voltage@tmp:
  3131                           	opt stack 0
  3132  000070                     system_calculate_input_current@tmp:
  3133                           	opt stack 0
  3134  000070                     system_calculate_output_current@tmp:
  3135                           	opt stack 0
  3136  000070                     __get_input_power@pwr:
  3137                           	opt stack 0
  3138                           
  3139                           ; 4 bytes @ 0x10
  3140  000070                     	ds	1
  3141  000071                     __get_dateTime@hours:
  3142                           	opt stack 0
  3143  000071                     i2c_eeprom_read@address:
  3144                           	opt stack 0
  3145  000071                     flash_is_busy@status:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x11
  3149  000071                     	ds	1
  3150  000072                     ??___xxtofl:
  3151  000072                     __buck_start@dutycycle:
  3152                           	opt stack 0
  3153  000072                     __get_dateTime@minutes:
  3154                           	opt stack 0
  3155  000072                     itoa@val:
  3156                           	opt stack 0
  3157  000072                     i2c_eeprom_write@dat:
  3158                           	opt stack 0
  3159                           
  3160                           ; 17 bytes @ 0x12
  3161  000072                     	ds	1
  3162  000073                     __buck_start@mode:
  3163                           	opt stack 0
  3164  000073                     __get_dateTime@seconds:
  3165                           	opt stack 0
  3166  000073                     i2c_eeprom_read@data:
  3167                           	opt stack 0
  3168  000073                     __flash_copy_page_to_buffer@page:
  3169                           	opt stack 0
  3170  000073                     __flash_compare_page_to_buffer@page:
  3171                           	opt stack 0
  3172  000073                     __flash_write_to_buffer@start:
  3173                           	opt stack 0
  3174  000073                     __flash_write_page_from_buffer@page:
  3175                           	opt stack 0
  3176  000073                     flash_partial_read@page:
  3177                           	opt stack 0
  3178  000073                     __flash_set_page_size@command:
  3179                           	opt stack 0
  3180                           
  3181                           ; 4 bytes @ 0x13
  3182  000073                     	ds	1
  3183  000074                     ??_log_collect_data:
  3184  000074                     __buck_start@startup_dutycycle:
  3185                           	opt stack 0
  3186  000074                     itoa@base:
  3187                           	opt stack 0
  3188  000074                     __get_dateTime@datetime:
  3189                           	opt stack 0
  3190  000074                     __display_usb@usb_off:
  3191                           	opt stack 0
  3192                           
  3193                           ; 17 bytes @ 0x14
  3194  000074                     	ds	1
  3195  000075                     i2c_eeprom_read@length:
  3196                           	opt stack 0
  3197  000075                     __buck_start@cntr:
  3198                           	opt stack 0
  3199  000075                     __flash_copy_page_to_buffer@buffer:
  3200                           	opt stack 0
  3201  000075                     __flash_compare_page_to_buffer@buffer:
  3202                           	opt stack 0
  3203  000075                     __flash_write_page_from_buffer@buffer:
  3204                           	opt stack 0
  3205  000075                     __flash_write_to_buffer@data:
  3206                           	opt stack 0
  3207  000075                     flash_partial_read@start:
  3208                           	opt stack 0
  3209  000075                     adc_calculate_temperature@tmp:
  3210                           	opt stack 0
  3211  000075                     __display_outputs@line4:
  3212                           	opt stack 0
  3213                           
  3214                           ; 21 bytes @ 0x15
  3215  000075                     	ds	1
  3216  000076                     ??_i2c_eeprom_read:
  3217  000076                     ??__buck_operate_local:
  3218  000076                     ??__flash_copy_page_to_buffer:
  3219  000076                     ??__flash_compare_page_to_buffer:
  3220  000076                     ??__flash_write_page_from_buffer:
  3221  000076                     ___xxtofl@sign:
  3222                           	opt stack 0
  3223  000076                     __buck_operate_remote$8818:
  3224                           	opt stack 0
  3225  000076                     itoa@cp:
  3226                           	opt stack 0
  3227                           
  3228                           ; 2 bytes @ 0x16
  3229  000076                     	ds	1
  3230  000077                     i2c_eeprom_read@addr:
  3231                           	opt stack 0
  3232  000077                     __flash_set_page_size@size:
  3233                           	opt stack 0
  3234  000077                     ___xxtofl@exp:
  3235                           	opt stack 0
  3236  000077                     __flash_write_to_buffer@data_length:
  3237                           	opt stack 0
  3238  000077                     flash_partial_read@length:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x17
  3242  000077                     	ds	1
  3243  000078                     i2c_eeprom_read@slave_address:
  3244                           	opt stack 0
  3245  000078                     __display_itoa@value:
  3246                           	opt stack 0
  3247  000078                     log_collect_data@temp:
  3248                           	opt stack 0
  3249  000078                     log_generate_entry@log_entry:
  3250                           	opt stack 0
  3251  000078                     ___xxtofl@arg:
  3252                           	opt stack 0
  3253                           
  3254                           ; 4 bytes @ 0x18
  3255  000078                     	ds	1
  3256  000079                     ??_i2c_eeprom_read_calibration:
  3257  000079                     __flash_write_to_buffer@buffer:
  3258                           	opt stack 0
  3259  000079                     __flash_compare_page_to_buffer@status:
  3260                           	opt stack 0
  3261  000079                     flash_partial_read@data:
  3262                           	opt stack 0
  3263  000079                     __flash_copy_page_to_buffer@command:
  3264                           	opt stack 0
  3265  000079                     __flash_write_page_from_buffer@command:
  3266                           	opt stack 0
  3267                           
  3268                           ; 4 bytes @ 0x19
  3269  000079                     	ds	1
  3270  00007A                     ??_log_generate_entry:
  3271  00007A                     __display_itoa@decimals:
  3272                           	opt stack 0
  3273  00007A                     __flash_write_to_buffer@command:
  3274                           	opt stack 0
  3275                           
  3276                           ; 4 bytes @ 0x1A
  3277  00007A                     	ds	1
  3278  00007B                     ??_flash_partial_read:
  3279  00007B                     __buck_operate_local$8817:
  3280                           	opt stack 0
  3281  00007B                     __display_itoa@text:
  3282                           	opt stack 0
  3283  00007B                     i2c_eeprom_read_calibration@buffer:
  3284                           	opt stack 0
  3285  00007B                     __flash_compare_page_to_buffer@command:
  3286                           	opt stack 0
  3287                           
  3288                           ; 4 bytes @ 0x1B
  3289  00007B                     	ds	1
  3290  00007C                     __buck_operate_local@tmp_dutycycle:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x1C
  3294  00007C                     	ds	1
  3295  00007D                     ??__display_itoa:
  3296  00007D                     __buck_operate_local@cntr:
  3297                           	opt stack 0
  3298                           
  3299                           ; 1 bytes @ 0x1D
  3300  00007D                     	ds	1
  3301  00007E                     
  3302                           ; 1 bytes @ 0x1E
  3303  00007E                     	ds	1
  3304  00007F                     i2c_eeprom_read_calibration@addr:
  3305                           	opt stack 0
  3306  00007F                     flash_page_write@page:
  3307                           	opt stack 0
  3308  00007F                     flash_partial_write@page:
  3309                           	opt stack 0
  3310  00007F                     flash_partial_read@command:
  3311                           	opt stack 0
  3312                           
  3313                           ; 4 bytes @ 0x1F
  3314  00007F                     	ds	2
  3315  000081                     i2c_eeprom_read_calibration@cntr:
  3316                           	opt stack 0
  3317  000081                     flash_page_write@data:
  3318                           	opt stack 0
  3319  000081                     flash_partial_write@start:
  3320                           	opt stack 0
  3321                           
  3322                           ; 2 bytes @ 0x21
  3323  000081                     	ds	2
  3324  000083                     i2c_eeprom_write@slave_address:
  3325                           	opt stack 0
  3326  000083                     flash_page_write@match:
  3327                           	opt stack 0
  3328  000083                     flash_partial_write@length:
  3329                           	opt stack 0
  3330  000083                     flash_partial_read@address:
  3331                           	opt stack 0
  3332  000083                     __display_itoa@tmp:
  3333                           	opt stack 0
  3334                           
  3335                           ; 10 bytes @ 0x23
  3336  000083                     	ds	1
  3337  000084                     i2c_eeprom_write@cntr:
  3338                           	opt stack 0
  3339  000084                     ExternalFlash_SectorWrite@config:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x24
  3343  000084                     	ds	1
  3344  000085                     ??__write_calibration:
  3345  000085                     flash_partial_write@data:
  3346                           	opt stack 0
  3347  000085                     rtcc_write_eeprom@date:
  3348                           	opt stack 0
  3349  000085                     __display_usb@low:
  3350                           	opt stack 0
  3351                           
  3352                           ; 16 bytes @ 0x25
  3353  000085                     	ds	1
  3354  000086                     ExternalFlash_SectorWrite@sector_addr:
  3355                           	opt stack 0
  3356                           
  3357                           ; 4 bytes @ 0x26
  3358  000086                     	ds	1
  3359  000087                     ??__root_is_available:
  3360  000087                     ?__get_empty_cluster:
  3361                           	opt stack 0
  3362  000087                     ?_fat_get_empty_clusters:
  3363                           	opt stack 0
  3364  000087                     ?__read_fat:
  3365                           	opt stack 0
  3366  000087                     flash_partial_write@match:
  3367                           	opt stack 0
  3368  000087                     flash_page_read@page:
  3369                           	opt stack 0
  3370  000087                     __get_empty_cluster@first_cluster:
  3371                           	opt stack 0
  3372  000087                     fat_get_empty_clusters@maximum:
  3373                           	opt stack 0
  3374  000087                     __read_fat@cluster:
  3375                           	opt stack 0
  3376  000087                     __read_root@data:
  3377                           	opt stack 0
  3378  000087                     fat_find_file@name:
  3379                           	opt stack 0
  3380  000087                     __write_calibration@buffer:
  3381                           	opt stack 0
  3382                           
  3383                           ; 16 bytes @ 0x27
  3384  000087                     	ds	1
  3385  000088                     __root_is_available@root_sector:
  3386                           	opt stack 0
  3387  000088                     __write_fat@cluster:
  3388                           	opt stack 0
  3389  000088                     __write_root@data:
  3390                           	opt stack 0
  3391                           
  3392                           ; 2 bytes @ 0x28
  3393  000088                     	ds	1
  3394  000089                     ??__read_root:
  3395  000089                     flash_page_read@data:
  3396                           	opt stack 0
  3397  000089                     __get_empty_cluster@fat_sector:
  3398                           	opt stack 0
  3399  000089                     fat_get_empty_clusters@fat_sector:
  3400                           	opt stack 0
  3401  000089                     __read_fat@fat_sector:
  3402                           	opt stack 0
  3403  000089                     fat_find_file@extension:
  3404                           	opt stack 0
  3405                           
  3406                           ; 2 bytes @ 0x29
  3407  000089                     	ds	1
  3408  00008A                     ??__write_root:
  3409  00008A                     ExternalFlash_SectorWrite@buffer:
  3410                           	opt stack 0
  3411  00008A                     __root_is_available@offset:
  3412                           	opt stack 0
  3413  00008A                     __write_fat@value:
  3414                           	opt stack 0
  3415  00008A                     __read_root@root_sector:
  3416                           	opt stack 0
  3417  00008A                     __display_outputs@low:
  3418                           	opt stack 0
  3419                           
  3420                           ; 16 bytes @ 0x2A
  3421  00008A                     	ds	1
  3422  00008B                     __parse_command_short@cmd:
  3423                           	opt stack 0
  3424  00008B                     rtcc_read_eeprom@error_found:
  3425                           	opt stack 0
  3426  00008B                     ExternalFlash_SectorRead@config:
  3427                           	opt stack 0
  3428  00008B                     __get_empty_cluster@offset:
  3429                           	opt stack 0
  3430  00008B                     fat_get_empty_clusters@offset:
  3431                           	opt stack 0
  3432  00008B                     __read_fat@offset:
  3433                           	opt stack 0
  3434  00008B                     __write_root@root_sector:
  3435                           	opt stack 0
  3436  00008B                     fat_find_file@buffer:
  3437                           	opt stack 0
  3438                           
  3439                           ; 11 bytes @ 0x2B
  3440  00008B                     	ds	1
  3441  00008C                     ??_APP_DeviceCustomHIDTasks:
  3442  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3443                           	opt stack 0
  3444  00008C                     __root_is_available@file_number:
  3445                           	opt stack 0
  3446  00008C                     __write_fat@fat_sector:
  3447                           	opt stack 0
  3448  00008C                     __read_root@offset:
  3449                           	opt stack 0
  3450  00008C                     rtcc_read_eeprom@date:
  3451                           	opt stack 0
  3452                           
  3453                           ; 6 bytes @ 0x2C
  3454  00008C                     	ds	1
  3455  00008D                     __display_itoa@len:
  3456                           	opt stack 0
  3457  00008D                     __root_is_available@first_byte:
  3458                           	opt stack 0
  3459  00008D                     ExternalFlash_SectorWrite@page:
  3460                           	opt stack 0
  3461  00008D                     __get_empty_cluster@value:
  3462                           	opt stack 0
  3463  00008D                     fat_get_empty_clusters@value:
  3464                           	opt stack 0
  3465  00008D                     __read_fat@value:
  3466                           	opt stack 0
  3467  00008D                     __write_root@offset:
  3468                           	opt stack 0
  3469  00008D                     ExternalFlash_SectorRead@sector_addr:
  3470                           	opt stack 0
  3471                           
  3472                           ; 4 bytes @ 0x2D
  3473  00008D                     	ds	1
  3474  00008E                     __display_itoa@missing:
  3475                           	opt stack 0
  3476  00008E                     __get_available_root_entry@file_number:
  3477                           	opt stack 0
  3478  00008E                     __read_root@slot:
  3479                           	opt stack 0
  3480  00008E                     __write_fat@offset:
  3481                           	opt stack 0
  3482                           
  3483                           ; 2 bytes @ 0x2E
  3484  00008E                     	ds	1
  3485  00008F                     ??_MSDWriteHandler:
  3486  00008F                     __display_itoa@pos:
  3487                           	opt stack 0
  3488  00008F                     __write_root@slot:
  3489                           	opt stack 0
  3490  00008F                     __get_empty_cluster@cluster:
  3491                           	opt stack 0
  3492  00008F                     fat_get_empty_clusters@empty_clusters:
  3493                           	opt stack 0
  3494                           
  3495                           ; 2 bytes @ 0x2F
  3496  00008F                     	ds	1
  3497  000090                     ??__display_charger:
  3498  000090                     ??__display_efficiency:
  3499  000090                     __display_inout@line1:
  3500                           	opt stack 0
  3501  000090                     __display_temperature@header:
  3502                           	opt stack 0
  3503                           
  3504                           ; 20 bytes @ 0x30
  3505  000090                     	ds	1
  3506  000091                     ExternalFlash_SectorRead@buffer:
  3507                           	opt stack 0
  3508  000091                     fat_get_empty_clusters@cluster:
  3509                           	opt stack 0
  3510  000091                     fat_append_to_file@number_of_bytes:
  3511                           	opt stack 0
  3512                           
  3513                           ; 2 bytes @ 0x31
  3514  000091                     	ds	1
  3515  000092                     rtcc_read_eeprom@buffer:
  3516                           	opt stack 0
  3517  000092                     __display_efficiency@header:
  3518                           	opt stack 0
  3519                           
  3520                           ; 19 bytes @ 0x32
  3521  000092                     	ds	1
  3522  000093                     ExternalFlash_SectorRead@page:
  3523                           	opt stack 0
  3524  000093                     fat_append_to_file@data:
  3525                           	opt stack 0
  3526                           
  3527                           ; 2 bytes @ 0x33
  3528  000093                     	ds	1
  3529  000094                     APP_DeviceCustomHIDTasks@return_value:
  3530                           	opt stack 0
  3531                           
  3532                           ; 2 bytes @ 0x34
  3533  000094                     	ds	1
  3534  000095                     ??_MSDReadHandler:
  3535  000095                     ??_fat_append_to_file:
  3536  000095                     __display_usb@usb_on:
  3537                           	opt stack 0
  3538                           
  3539                           ; 16 bytes @ 0x35
  3540  000095                     	ds	1
  3541  000096                     APP_DeviceCustomHIDTasks@idx:
  3542                           	opt stack 0
  3543  000096                     fat_find_file@slot:
  3544                           	opt stack 0
  3545                           
  3546                           ; 1 bytes @ 0x36
  3547  000096                     	ds	1
  3548  000097                     __write_calibration@addr:
  3549                           	opt stack 0
  3550  000097                     fat_find_file@sector:
  3551                           	opt stack 0
  3552                           
  3553                           ; 2 bytes @ 0x37
  3554  000097                     	ds	2
  3555  000099                     ??_MSDProcessCommandMediaPresent:
  3556  000099                     __write_calibration@ptr:
  3557                           	opt stack 0
  3558  000099                     fat_find_file@offset:
  3559                           	opt stack 0
  3560                           
  3561                           ; 2 bytes @ 0x39
  3562  000099                     	ds	1
  3563  00009A                     __display_outputs@header:
  3564                           	opt stack 0
  3565                           
  3566                           ; 14 bytes @ 0x3A
  3567  00009A                     	ds	1
  3568  00009B                     __write_calibration@index:
  3569                           	opt stack 0
  3570  00009B                     _MSDProcessCommandMediaPresent$2715:
  3571                           	opt stack 0
  3572  00009B                     fat_create_file@name:
  3573                           	opt stack 0
  3574                           
  3575                           ; 2 bytes @ 0x3B
  3576  00009B                     	ds	1
  3577  00009C                     __write_calibration@cntr:
  3578                           	opt stack 0
  3579                           
  3580                           ; 1 bytes @ 0x3C
  3581  00009C                     	ds	1
  3582  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3583                           	opt stack 0
  3584  00009D                     fat_create_file@extension:
  3585                           	opt stack 0
  3586  00009D                     fat_append_to_file@sector:
  3587                           	opt stack 0
  3588                           
  3589                           ; 2 bytes @ 0x3D
  3590  00009D                     	ds	1
  3591  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3592                           	opt stack 0
  3593                           
  3594                           ; 4 bytes @ 0x3E
  3595  00009E                     	ds	1
  3596  00009F                     fat_create_file@size:
  3597                           	opt stack 0
  3598  00009F                     fat_append_to_file@file_size:
  3599                           	opt stack 0
  3600                           
  3601                           ; 4 bytes @ 0x3F
  3602  00009F                     	ds	3
  3603  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3604                           	opt stack 0
  3605  0000A2                     __display_inout@line2:
  3606                           	opt stack 0
  3607                           
  3608                           ; 18 bytes @ 0x42
  3609  0000A2                     	ds	1
  3610  0000A3                     ??_fat_create_file:
  3611  0000A3                     fat_append_to_file@new_cluster:
  3612                           	opt stack 0
  3613                           
  3614                           ; 2 bytes @ 0x43
  3615  0000A3                     	ds	1
  3616  0000A4                     __display_temperature@external1:
  3617                           	opt stack 0
  3618                           
  3619                           ; 12 bytes @ 0x44
  3620  0000A4                     	ds	1
  3621  0000A5                     __display_usb@cntr:
  3622                           	opt stack 0
  3623  0000A5                     fat_append_to_file@fat_cluster:
  3624                           	opt stack 0
  3625  0000A5                     __display_efficiency@source:
  3626                           	opt stack 0
  3627                           
  3628                           ; 19 bytes @ 0x45
  3629  0000A5                     	ds	1
  3630  0000A6                     MSDProcessCommandMediaPresent@i:
  3631                           	opt stack 0
  3632                           
  3633                           ; 1 bytes @ 0x46
  3634  0000A6                     	ds	1
  3635  0000A7                     ??_MSDProcessCommand:
  3636  0000A7                     fat_create_file@next_cluster:
  3637                           	opt stack 0
  3638  0000A7                     fat_append_to_file@offset:
  3639                           	opt stack 0
  3640                           
  3641                           ; 2 bytes @ 0x47
  3642  0000A7                     	ds	1
  3643  0000A8                     __display_outputs@mode:
  3644                           	opt stack 0
  3645                           
  3646                           ; 1 bytes @ 0x48
  3647  0000A8                     	ds	1
  3648  0000A9                     __display_outputs@cntr:
  3649                           	opt stack 0
  3650  0000A9                     fat_append_to_file@file_number:
  3651                           	opt stack 0
  3652  0000A9                     fat_create_file@cluster_count:
  3653                           	opt stack 0
  3654                           
  3655                           ; 2 bytes @ 0x49
  3656  0000A9                     	ds	1
  3657  0000AA                     fat_append_to_file@length:
  3658                           	opt stack 0
  3659                           
  3660                           ; 2 bytes @ 0x4A
  3661  0000AA                     	ds	1
  3662  0000AB                     fat_create_file@root_slot:
  3663                           	opt stack 0
  3664                           
  3665                           ; 1 bytes @ 0x4B
  3666  0000AB                     	ds	1
  3667  0000AC                     ??_MSDTasks:
  3668  0000AC                     fat_create_file@number_of_clusters:
  3669                           	opt stack 0
  3670  0000AC                     fat_append_to_file@position:
  3671                           	opt stack 0
  3672                           
  3673                           ; 4 bytes @ 0x4C
  3674  0000AC                     	ds	1
  3675  0000AD                     _MSDTasks$2697:
  3676                           	opt stack 0
  3677                           
  3678                           ; 2 bytes @ 0x4D
  3679  0000AD                     	ds	1
  3680  0000AE                     fat_create_file@cluster:
  3681                           	opt stack 0
  3682                           
  3683                           ; 2 bytes @ 0x4E
  3684  0000AE                     	ds	1
  3685  0000AF                     _MSDTasks$2698:
  3686                           	opt stack 0
  3687                           
  3688                           ; 2 bytes @ 0x4F
  3689  0000AF                     	ds	1
  3690  0000B0                     __display_temperature@external2:
  3691                           	opt stack 0
  3692  0000B0                     fat_create_file@root_entry:
  3693                           	opt stack 0
  3694  0000B0                     fat_append_to_file@root:
  3695                           	opt stack 0
  3696                           
  3697                           ; 32 bytes @ 0x50
  3698  0000B0                     	ds	1
  3699  0000B1                     MSDTasks@i:
  3700                           	opt stack 0
  3701                           
  3702                           ; 1 bytes @ 0x51
  3703  0000B1                     	ds	1
  3704  0000B2                     
  3705                           ; 1 bytes @ 0x52
  3706  0000B2                     	ds	2
  3707  0000B4                     __display_inout@line4:
  3708                           	opt stack 0
  3709                           
  3710                           ; 14 bytes @ 0x54
  3711  0000B4                     	ds	4
  3712  0000B8                     __display_efficiency@footer:
  3713                           	opt stack 0
  3714                           
  3715                           ; 14 bytes @ 0x58
  3716  0000B8                     	ds	4
  3717  0000BC                     __display_temperature@internal:
  3718                           	opt stack 0
  3719                           
  3720                           ; 11 bytes @ 0x5C
  3721  0000BC                     	ds	6
  3722  0000C2                     __display_inout@line3:
  3723                           	opt stack 0
  3724                           
  3725                           ; 3 bytes @ 0x62
  3726  0000C2                     	ds	3
  3727  0000C5                     __display_inout@cntr:
  3728                           	opt stack 0
  3729                           
  3730                           ; 1 bytes @ 0x65
  3731  0000C5                     	ds	1
  3732  0000C6                     __display_efficiency@efficiency:
  3733                           	opt stack 0
  3734                           
  3735                           ; 4 bytes @ 0x66
  3736  0000C6                     	ds	1
  3737  0000C7                     __display_temperature@cntr:
  3738                           	opt stack 0
  3739                           
  3740                           ; 1 bytes @ 0x67
  3741  0000C7                     	ds	3
  3742  0000CA                     __display_efficiency@panel:
  3743                           	opt stack 0
  3744                           
  3745                           ; 4 bytes @ 0x6A
  3746  0000CA                     	ds	4
  3747  0000CE                     __display_efficiency@battery:
  3748                           	opt stack 0
  3749                           
  3750                           ; 4 bytes @ 0x6E
  3751  0000CE                     	ds	2
  3752  0000D0                     
  3753                           ; 1 bytes @ 0x70
  3754  0000D0                     	ds	2
  3755  0000D2                     __display_efficiency@cntr:
  3756                           	opt stack 0
  3757                           
  3758                           ; 1 bytes @ 0x72
  3759  0000D2                     	ds	1
  3760  0000D3                     ??_display_prepare:
  3761                           
  3762                           ; 1 bytes @ 0x73
  3763  0000D3                     	ds	2
  3764  0000D5                     display_prepare@mode:
  3765                           	opt stack 0
  3766                           
  3767                           ; 1 bytes @ 0x75
  3768  0000D5                     	ds	1
  3769  0000D6                     ??_main:
  3770                           
  3771                           ; 1 bytes @ 0x76
  3772  0000D6                     	ds	2
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           
  3783                           	psect	cstackCOMRAM
  3784  00002E                     __pcstackCOMRAM:
  3785                           	opt stack 0
  3786  00002E                     ??_USBStdGetDscHandler:
  3787  00002E                     ??_USBStdGetStatusHandler:
  3788  00002E                     ?i2_USBTransferOnePacket:
  3789                           	opt stack 0
  3790  00002E                     ?i2_ExternalFlash_MediaInitialize:
  3791                           	opt stack 0
  3792  00002E                     USBConfigureEndpoint@direction:
  3793                           	opt stack 0
  3794  00002E                     USBCtrlTrfTxService@byteToSend:
  3795                           	opt stack 0
  3796  00002E                     USBCtrlTrfRxService@i:
  3797                           	opt stack 0
  3798  00002E                     i2USBTransferOnePacket@dir:
  3799                           	opt stack 0
  3800  00002E                     i2USBStallEndpoint@dir:
  3801                           	opt stack 0
  3802  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  3803                           	opt stack 0
  3804  00002E                     i2ExternalFlash_MediaInitialize@config:
  3805                           	opt stack 0
  3806  00002E                     i2ExternalFlash_MediaDetect@config:
  3807                           	opt stack 0
  3808  00002E                     i2memcpy@d1:
  3809                           	opt stack 0
  3810  00002E                     i2memset@p1:
  3811                           	opt stack 0
  3812                           
  3813                           ; 2 bytes @ 0x0
  3814  00002E                     	ds	1
  3815  00002F                     ??_USBConfigureEndpoint:
  3816  00002F                     ??i2_USBStallEndpoint:
  3817  00002F                     USBCtrlTrfRxService@byteToRead:
  3818                           	opt stack 0
  3819  00002F                     USBCtrlTrfInHandler@lastDTS:
  3820                           	opt stack 0
  3821  00002F                     USBStdGetStatusHandler@p:
  3822                           	opt stack 0
  3823  00002F                     i2USBTransferOnePacket@data:
  3824                           	opt stack 0
  3825                           
  3826                           ; 2 bytes @ 0x1
  3827  00002F                     	ds	1
  3828  000030                     i2SYSTEM_Initialize@pll_startup_counter_3287:
  3829                           	opt stack 0
  3830  000030                     i2memcpy@s1:
  3831                           	opt stack 0
  3832  000030                     i2memset@c:
  3833                           	opt stack 0
  3834                           
  3835                           ; 2 bytes @ 0x2
  3836  000030                     	ds	1
  3837  000031                     i2USBTransferOnePacket@len:
  3838                           	opt stack 0
  3839                           
  3840                           ; 1 bytes @ 0x3
  3841  000031                     	ds	1
  3842  000032                     ??i2_USBTransferOnePacket:
  3843  000032                     i2SYSTEM_Initialize@state:
  3844                           	opt stack 0
  3845  000032                     i2memcpy@n:
  3846                           	opt stack 0
  3847  000032                     i2memset@n:
  3848                           	opt stack 0
  3849                           
  3850                           ; 2 bytes @ 0x4
  3851  000032                     	ds	1
  3852  000033                     USBConfigureEndpoint@EPNum:
  3853                           	opt stack 0
  3854  000033                     i2USBStallEndpoint@ep:
  3855                           	opt stack 0
  3856                           
  3857                           ; 1 bytes @ 0x5
  3858  000033                     	ds	1
  3859  000034                     USBConfigureEndpoint@handle:
  3860                           	opt stack 0
  3861  000034                     i2USBStallEndpoint@p:
  3862                           	opt stack 0
  3863  000034                     i2memcpy@d:
  3864                           	opt stack 0
  3865  000034                     i2memset@p:
  3866                           	opt stack 0
  3867                           
  3868                           ; 2 bytes @ 0x6
  3869  000034                     	ds	2
  3870  000036                     USBEnableEndpoint@options:
  3871                           	opt stack 0
  3872  000036                     i2USBDeviceInit@i:
  3873                           	opt stack 0
  3874  000036                     i2USBTransferOnePacket@ep:
  3875                           	opt stack 0
  3876  000036                     i2memcpy@s:
  3877                           	opt stack 0
  3878                           
  3879                           ; 2 bytes @ 0x8
  3880  000036                     	ds	1
  3881  000037                     USBEnableEndpoint@p:
  3882                           	opt stack 0
  3883  000037                     i2USBTransferOnePacket@handle:
  3884                           	opt stack 0
  3885                           
  3886                           ; 2 bytes @ 0x9
  3887  000037                     	ds	1
  3888  000038                     i2memcpy@tmp:
  3889                           	opt stack 0
  3890                           
  3891                           ; 1 bytes @ 0xA
  3892  000038                     	ds	1
  3893  000039                     ??_USBMSDInit:
  3894  000039                     USBEnableEndpoint@ep:
  3895                           	opt stack 0
  3896  000039                     _USBCheckMSDRequest$2643:
  3897                           	opt stack 0
  3898  000039                     MSDTransferTerminated@handle:
  3899                           	opt stack 0
  3900                           
  3901                           ; 2 bytes @ 0xB
  3902  000039                     	ds	1
  3903  00003A                     
  3904                           ; 1 bytes @ 0xC
  3905  00003A                     	ds	1
  3906  00003B                     _USBCheckMSDRequest$2644:
  3907                           	opt stack 0
  3908  00003B                     _MSDTransferTerminated$2732:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0xD
  3912  00003B                     	ds	1
  3913  00003C                     
  3914                           ; 1 bytes @ 0xE
  3915  00003C                     	ds	1
  3916  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3917                           	opt stack 0
  3918                           
  3919                           ; 2 bytes @ 0xF
  3920  00003D                     	ds	2
  3921  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3922                           	opt stack 0
  3923                           
  3924                           ; 2 bytes @ 0x11
  3925  00003F                     	ds	2
  3926  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0x13
  3930  000041                     	ds	2
  3931  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3932                           
  3933                           ; 1 bytes @ 0x15
  3934  000043                     	ds	2
  3935  000045                     ??_USBStdFeatureReqHandler:
  3936  000045                     USBStdSetCfgHandler@i:
  3937                           	opt stack 0
  3938                           
  3939                           ; 1 bytes @ 0x17
  3940  000045                     	ds	1
  3941  000046                     USBStdFeatureReqHandler@pUEP:
  3942                           	opt stack 0
  3943                           
  3944                           ; 2 bytes @ 0x18
  3945  000046                     	ds	2
  3946  000048                     USBStdFeatureReqHandler@current_ep_data:
  3947                           	opt stack 0
  3948                           
  3949                           ; 1 bytes @ 0x1A
  3950  000048                     	ds	1
  3951  000049                     USBStdFeatureReqHandler@p:
  3952                           	opt stack 0
  3953                           
  3954                           ; 2 bytes @ 0x1B
  3955  000049                     	ds	2
  3956  00004B                     ??_USBCtrlEPService:
  3957  00004B                     
  3958                           ; 1 bytes @ 0x1D
  3959  00004B                     	ds	1
  3960  00004C                     USBDeviceTasks@i:
  3961                           	opt stack 0
  3962                           
  3963                           ; 1 bytes @ 0x1E
  3964  00004C                     	ds	1
  3965  00004D                     ??_SYS_InterruptHigh:
  3966                           
  3967                           ; 1 bytes @ 0x1F
  3968  00004D                     	ds	14
  3969                           tblptru	equ	0xFF8
  3970                           tblptrh	equ	0xFF7
  3971                           tblptrl	equ	0xFF6
  3972                           tablat	equ	0xFF5
  3973                           postinc0	equ	0xFEE
  3974                           wreg	equ	0xFE8
  3975                           postdec1	equ	0xFE5
  3976                           fsr1h	equ	0xFE2
  3977                           fsr1l	equ	0xFE1
  3978                           
  3979 ;;
  3980 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3981 ;;
  3982 ;; *************** function _main *****************
  3983 ;; Defined at:
  3984 ;;		line 50 in file "main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:        2 bytes
  4003 ;; Hardware stack levels required when called:   22
  4004 ;; This function calls:
  4005 ;;		_APP_DeviceCustomHIDTasks
  4006 ;;		_APP_DeviceMSDTasks
  4007 ;;		_SYSTEM_Initialize
  4008 ;;		_USBDeviceAttach
  4009 ;;		_USBDeviceInit
  4010 ;;		_adc_calculate_temperature
  4011 ;;		_adc_calibrate
  4012 ;;		_adc_read
  4013 ;;		_buck_get_mode
  4014 ;;		_buck_operate
  4015 ;;		_display_prepare
  4016 ;;		_display_update
  4017 ;;		_i2c_adc_read
  4018 ;;		_i2c_adc_start
  4019 ;;		_i2c_eeprom_tasks
  4020 ;;		_log_collect_data
  4021 ;;		_log_get_number_of_samples
  4022 ;;		_log_start_new
  4023 ;;		_log_write_to_disk
  4024 ;;		_system_calculate_input_current
  4025 ;;		_system_calculate_input_voltage
  4026 ;;		_system_calculate_output_current
  4027 ;;		_system_calculate_output_voltage
  4028 ;;		_system_init
  4029 ;;		_system_output_off
  4030 ;;		_ui_get_status
  4031 ;;		_ui_run
  4032 ;; This function is called by:
  4033 ;;		Startup code after reset
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text0
  4038  00E472                     __ptext0:
  4039                           	opt stack 0
  4040  00E472                     _main:
  4041                           	opt stack 9
  4042                           
  4043                           ;main.c: 55: system_init();
  4044                           
  4045                           ;incstack = 0
  4046  00E472  ECA2  F08D         	call	_system_init	;wreg free
  4047                           
  4048                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4049  00E476  0E00               	movlw	0
  4050  00E478  ECFB  F0A4         	call	_SYSTEM_Initialize
  4051                           
  4052                           ;main.c: 59: USBDeviceInit();
  4053  00E47C  EC34  F083         	call	_USBDeviceInit	;wreg free
  4054                           
  4055                           ;main.c: 60: USBDeviceAttach();
  4056  00E480  ECBF  F0AA         	call	_USBDeviceAttach	;wreg free
  4057  00E484                     
  4058                           ;main.c: 63: {;main.c: 86: APP_DeviceMSDTasks();
  4059  00E484  ECB1  F0AE         	call	_APP_DeviceMSDTasks	;wreg free
  4060                           
  4061                           ;main.c: 88: if(!os.done)
  4062  00E488  0102               	movlb	2	; () banked
  4063  00E48A  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4064  00E48C  A4D8               	btfss	status,2,c
  4065  00E48E  D7FA               	goto	l899
  4066                           
  4067                           ; BSR set to: 2
  4068  00E490  0004               	clrwdt		;# 
  4069                           
  4070                           ;main.c: 96: if(os.output_voltage<12000)
  4071  00E492  0102               	movlb	2	; () banked
  4072  00E494  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4073  00E496  D006               	goto	u22690
  4074  00E498  0EE0               	movlw	224
  4075  00E49A  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4076  00E49C  0E2E               	movlw	46
  4077  00E49E  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4078  00E4A0  B0D8               	btfsc	status,0,c
  4079  00E4A2  D003               	goto	l901
  4080  00E4A4                     u22690:
  4081                           
  4082                           ; BSR set to: 2
  4083                           ;main.c: 97: {;main.c: 98: system_output_off(OUTPUT_USB);
  4084  00E4A4  0E10               	movlw	16
  4085  00E4A6  ECDA  F0A5         	call	_system_output_off
  4086  00E4AA                     l901:
  4087                           
  4088                           ;main.c: 99: };main.c: 100: if(os.output_voltage<-1)
  4089  00E4AA  0102               	movlb	2	; () banked
  4090  00E4AC  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4091  00E4AE  D011               	goto	l902
  4092  00E4B0  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4093  00E4B2  0EFF               	movlw	255
  4094  00E4B4  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4095  00E4B6  B0D8               	btfsc	status,0,c
  4096  00E4B8  D00C               	goto	l902
  4097                           
  4098                           ; BSR set to: 2
  4099                           ;main.c: 101: {;main.c: 102: system_output_off(OUTPUT_1);
  4100  00E4BA  0E01               	movlw	1
  4101  00E4BC  ECDA  F0A5         	call	_system_output_off
  4102                           
  4103                           ;main.c: 103: system_output_off(OUTPUT_2);
  4104  00E4C0  0E02               	movlw	2
  4105  00E4C2  ECDA  F0A5         	call	_system_output_off
  4106                           
  4107                           ;main.c: 104: system_output_off(OUTPUT_3);
  4108  00E4C6  0E04               	movlw	4
  4109  00E4C8  ECDA  F0A5         	call	_system_output_off
  4110                           
  4111                           ;main.c: 105: system_output_off(OUTPUT_4);
  4112  00E4CC  0E08               	movlw	8
  4113  00E4CE  ECDA  F0A5         	call	_system_output_off
  4114  00E4D2                     l902:
  4115                           
  4116                           ;main.c: 106: };main.c: 109: i2c_eeprom_tasks();
  4117  00E4D2  EC80  F0A0         	call	_i2c_eeprom_tasks	;wreg free
  4118                           
  4119                           ;main.c: 112: ui_run();
  4120  00E4D6  EC96  F090         	call	_ui_run	;wreg free
  4121                           
  4122                           ;main.c: 115: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4123  00E4DA  0E00               	movlw	0
  4124  00E4DC  EC8D  F09C         	call	_adc_read
  4125  00E4E0  0100               	movlb	0	; () banked
  4126  00E4E2  5160               	movf	?_adc_read& (0+255),w,b
  4127  00E4E4  0102               	movlb	2	; () banked
  4128  00E4E6  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4129  00E4E8  0100               	movlb	0	; () banked
  4130  00E4EA  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4131  00E4EC  0102               	movlb	2	; () banked
  4132  00E4EE  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4133                           
  4134                           ;main.c: 116: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4135  00E4F0  0E01               	movlw	1
  4136  00E4F2  EC8D  F09C         	call	_adc_read
  4137  00E4F6  0100               	movlb	0	; () banked
  4138  00E4F8  5160               	movf	?_adc_read& (0+255),w,b
  4139  00E4FA  0102               	movlb	2	; () banked
  4140  00E4FC  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4141  00E4FE  0100               	movlb	0	; () banked
  4142  00E500  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4143  00E502  0102               	movlb	2	; () banked
  4144  00E504  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4145                           
  4146                           ;main.c: 117: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4147  00E506  0E02               	movlw	2
  4148  00E508  EC8D  F09C         	call	_adc_read
  4149  00E50C  0100               	movlb	0	; () banked
  4150  00E50E  5160               	movf	?_adc_read& (0+255),w,b
  4151  00E510  0102               	movlb	2	; () banked
  4152  00E512  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4153  00E514  0100               	movlb	0	; () banked
  4154  00E516  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4155  00E518  0102               	movlb	2	; () banked
  4156  00E51A  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4157                           
  4158                           ;main.c: 120: switch(os.timeSlot&0b00001111)
  4159  00E51C  D101               	goto	l903
  4160  00E51E                     
  4161                           ;main.c: 123: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4162                           
  4163                           ; BSR set to: 2
  4164  00E51E  0E01               	movlw	1
  4165  00E520  0100               	movlb	0	; () banked
  4166  00E522  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4167  00E524  0E00               	movlw	0
  4168  00E526  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4169  00E528  0E00               	movlw	0
  4170  00E52A  ECE9  F0A9         	call	_i2c_adc_start
  4171                           
  4172                           ;main.c: 124: break;
  4173  00E52E  D12A               	goto	l905
  4174  00E530                     
  4175                           ;main.c: 127: APP_DeviceCustomHIDTasks();
  4176  00E530  ECE2  F06E         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4177                           
  4178                           ;main.c: 131: break;
  4179  00E534  D127               	goto	l905
  4180  00E536                     
  4181                           ;main.c: 135: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4182  00E536  ECAD  F0A6         	call	_i2c_adc_read	;wreg free
  4183  00E53A  0102               	movlb	2	; () banked
  4184  00E53C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4185  00E53E  0B0F               	andlw	15
  4186  00E540  0B03               	andlw	3
  4187  00E542  0100               	movlb	0	; () banked
  4188  00E544  6FD6               	movwf	??_main& (0+255),b
  4189  00E546  6BD7               	clrf	(??_main+1)& (0+255),b
  4190  00E548  90D8               	bcf	status,0,c
  4191  00E54A  37D6               	rlcf	??_main& (0+255),f,b
  4192  00E54C  37D7               	rlcf	(??_main+1)& (0+255),f,b
  4193  00E54E  0E1F               	movlw	low (_os+31)
  4194  00E550  25D6               	addwf	??_main& (0+255),w,b
  4195  00E552  6ED9               	movwf	fsr2l,c
  4196  00E554  0E02               	movlw	high (_os+31)
  4197  00E556  21D7               	addwfc	(??_main+1)& (0+255),w,b
  4198  00E558  6EDA               	movwf	fsr2h,c
  4199  00E55A  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4200  00E55E  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 136: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4204  00E562  0E01               	movlw	1
  4205  00E564  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4206  00E566  0E00               	movlw	0
  4207  00E568  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4208  00E56A  0E03               	movlw	3
  4209  00E56C  ECE9  F0A9         	call	_i2c_adc_start
  4210                           
  4211                           ;main.c: 137: system_calculate_output_voltage();
  4212  00E570  ECF4  F091         	call	_system_calculate_output_voltage	;wreg free
  4213                           
  4214                           ;main.c: 138: break;
  4215  00E574  D107               	goto	l905
  4216  00E576                     
  4217                           ;main.c: 141: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4218  00E576  EC6E  F0AF         	call	_ui_get_status	;wreg free
  4219  00E57A  0A05               	xorlw	5
  4220  00E57C  A4D8               	btfss	status,2,c
  4221  00E57E  D102               	goto	l905
  4222                           
  4223                           ;main.c: 142: {;main.c: 143: display_prepare(os.display_mode);
  4224  00E580  0102               	movlb	2	; () banked
  4225  00E582  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4226  00E584  ECD7  F09D         	call	_display_prepare
  4227                           
  4228                           ;main.c: 144: };main.c: 145: break;
  4229  00E588  D0FD               	goto	l905
  4230  00E58A                     
  4231                           ;main.c: 148: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4232  00E58A  EC6E  F0AF         	call	_ui_get_status	;wreg free
  4233                           
  4234                           ;main.c: 151: };main.c: 152: break;
  4235                           
  4236                           ;main.c: 149: {
  4237  00E58E  D0FA               	goto	l905
  4238  00E590                     
  4239                           ;main.c: 155: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4240  00E590  ECAD  F0A6         	call	_i2c_adc_read	;wreg free
  4241  00E594  0102               	movlb	2	; () banked
  4242  00E596  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4243  00E598  0B0F               	andlw	15
  4244  00E59A  0B03               	andlw	3
  4245  00E59C  0100               	movlb	0	; () banked
  4246  00E59E  6FD6               	movwf	??_main& (0+255),b
  4247  00E5A0  6BD7               	clrf	(??_main+1)& (0+255),b
  4248  00E5A2  90D8               	bcf	status,0,c
  4249  00E5A4  37D6               	rlcf	??_main& (0+255),f,b
  4250  00E5A6  37D7               	rlcf	(??_main+1)& (0+255),f,b
  4251  00E5A8  0E0A               	movlw	low (_os+10)
  4252  00E5AA  25D6               	addwf	??_main& (0+255),w,b
  4253  00E5AC  6ED9               	movwf	fsr2l,c
  4254  00E5AE  0E02               	movlw	high (_os+10)
  4255  00E5B0  21D7               	addwfc	(??_main+1)& (0+255),w,b
  4256  00E5B2  6EDA               	movwf	fsr2h,c
  4257  00E5B4  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4258  00E5B8  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4259                           
  4260                           ;main.c: 157: {;main.c: 158: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14
      +                          BIT, I2C_ADC_GAIN_1);
  4261                           
  4262                           ; BSR set to: 0
  4263                           
  4264                           ;main.c: 156: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4265  00E5BC  0E01               	movlw	1
  4266  00E5BE  0100               	movlb	0	; () banked
  4267  00E5C0  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4268  00E5C2  0E00               	movlw	0
  4269  00E5C4  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4270  00E5C6  0E01               	movlw	1
  4271  00E5C8  ECE9  F0A9         	call	_i2c_adc_start
  4272                           
  4273                           ;main.c: 159: };main.c: 160: system_calculate_input_voltage();
  4274  00E5CC  EC65  F092         	call	_system_calculate_input_voltage	;wreg free
  4275                           
  4276                           ;main.c: 161: break;
  4277  00E5D0  D0D9               	goto	l905
  4278  00E5D2                     
  4279                           ;main.c: 164: APP_DeviceCustomHIDTasks();
  4280  00E5D2  ECE2  F06E         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4281                           
  4282                           ;main.c: 165: break;
  4283  00E5D6  D0D6               	goto	l905
  4284  00E5D8                     u22730:
  4285                           
  4286                           ;main.c: 169: {;main.c: 170: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_ad
      +                          c_read();
  4287  00E5D8  ECAD  F0A6         	call	_i2c_adc_read	;wreg free
  4288  00E5DC  0102               	movlb	2	; () banked
  4289  00E5DE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4290  00E5E0  0B0F               	andlw	15
  4291  00E5E2  0B03               	andlw	3
  4292  00E5E4  0100               	movlb	0	; () banked
  4293  00E5E6  6FD6               	movwf	??_main& (0+255),b
  4294  00E5E8  6BD7               	clrf	(??_main+1)& (0+255),b
  4295  00E5EA  90D8               	bcf	status,0,c
  4296  00E5EC  37D6               	rlcf	??_main& (0+255),f,b
  4297  00E5EE  37D7               	rlcf	(??_main+1)& (0+255),f,b
  4298  00E5F0  0E29               	movlw	low (_os+41)
  4299  00E5F2  25D6               	addwf	??_main& (0+255),w,b
  4300  00E5F4  6ED9               	movwf	fsr2l,c
  4301  00E5F6  0E02               	movlw	high (_os+41)
  4302  00E5F8  21D7               	addwfc	(??_main+1)& (0+255),w,b
  4303  00E5FA  6EDA               	movwf	fsr2h,c
  4304  00E5FC  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4305  00E600  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;main.c: 171: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4309  00E604  0E01               	movlw	1
  4310  00E606  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4311  00E608  0E00               	movlw	0
  4312  00E60A  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4313  00E60C  0E02               	movlw	2
  4314  00E60E  ECE9  F0A9         	call	_i2c_adc_start
  4315                           
  4316                           ;main.c: 172: system_calculate_output_current();
  4317  00E612  ECC7  F088         	call	_system_calculate_output_current	;wreg free
  4318                           
  4319                           ;main.c: 173: };main.c: 174: break;
  4320  00E616  D0B6               	goto	l905
  4321  00E618                     
  4322                           ;main.c: 177: APP_DeviceCustomHIDTasks();
  4323  00E618  ECE2  F06E         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4324                           
  4325                           ;main.c: 178: log_collect_data();
  4326  00E61C  ECB8  F076         	call	_log_collect_data	;wreg free
  4327                           
  4328                           ;main.c: 179: if(log_get_number_of_samples() == 30)
  4329  00E620  EC45  F0AF         	call	_log_get_number_of_samples	;wreg free
  4330  00E624  0E1E               	movlw	30
  4331  00E626  0100               	movlb	0	; () banked
  4332  00E628  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4333  00E62A  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4334  00E62C  A4D8               	btfss	status,2,c
  4335  00E62E  D0AA               	goto	l905
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;main.c: 180: {;main.c: 181: log_write_to_disk();
  4339  00E630  EC0C  F0A0         	call	_log_write_to_disk	;wreg free
  4340                           
  4341                           ;main.c: 182: log_start_new();
  4342  00E634  ECB3  F093         	call	_log_start_new	;wreg free
  4343                           
  4344                           ;main.c: 183: };main.c: 184: break;
  4345  00E638  D0A5               	goto	l905
  4346  00E63A                     u22750:
  4347                           
  4348                           ;main.c: 188: {;main.c: 189: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc
      +                          _read();
  4349  00E63A  ECAD  F0A6         	call	_i2c_adc_read	;wreg free
  4350  00E63E  0102               	movlb	2	; () banked
  4351  00E640  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4352  00E642  0B0F               	andlw	15
  4353  00E644  0B03               	andlw	3
  4354  00E646  0100               	movlb	0	; () banked
  4355  00E648  6FD6               	movwf	??_main& (0+255),b
  4356  00E64A  6BD7               	clrf	(??_main+1)& (0+255),b
  4357  00E64C  90D8               	bcf	status,0,c
  4358  00E64E  37D6               	rlcf	??_main& (0+255),f,b
  4359  00E650  37D7               	rlcf	(??_main+1)& (0+255),f,b
  4360  00E652  0E14               	movlw	low (_os+20)
  4361  00E654  25D6               	addwf	??_main& (0+255),w,b
  4362  00E656  6ED9               	movwf	fsr2l,c
  4363  00E658  0E02               	movlw	high (_os+20)
  4364  00E65A  21D7               	addwfc	(??_main+1)& (0+255),w,b
  4365  00E65C  6EDA               	movwf	fsr2h,c
  4366  00E65E  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4367  00E662  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4368                           
  4369                           ;main.c: 190: system_calculate_input_current();
  4370  00E666  EC59  F089         	call	_system_calculate_input_current	;wreg free
  4371                           
  4372                           ;main.c: 191: };main.c: 192: break;
  4373  00E66A  D08C               	goto	l905
  4374  00E66C                     
  4375                           ;main.c: 195: buck_operate();
  4376  00E66C  EC17  F0A4         	call	_buck_operate	;wreg free
  4377                           
  4378                           ;main.c: 196: break;
  4379  00E670  D089               	goto	l905
  4380  00E672                     
  4381                           ;main.c: 200: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4382  00E672  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4383  00E676  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4384  00E67A  0E04               	movlw	4
  4385  00E67C  0100               	movlb	0	; () banked
  4386  00E67E  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4387  00E680  ECA2  F08F         	call	_adc_calculate_temperature	;wreg free
  4388  00E684  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4389  00E688  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4390                           
  4391                           ;main.c: 201: os.temperature_onboard_adc = 0;
  4392  00E68C  0E00               	movlw	0
  4393  00E68E  0102               	movlb	2	; () banked
  4394  00E690  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4395  00E692  0E00               	movlw	0
  4396  00E694  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4397                           
  4398                           ; BSR set to: 2
  4399                           ;main.c: 202: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4400  00E696  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4401  00E69A  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4402  00E69E  0E05               	movlw	5
  4403  00E6A0  0100               	movlb	0	; () banked
  4404  00E6A2  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4405  00E6A4  ECA2  F08F         	call	_adc_calculate_temperature	;wreg free
  4406  00E6A8  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4407  00E6AC  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4408                           
  4409                           ;main.c: 203: os.temperature_external_1_adc = 0;
  4410  00E6B0  0E00               	movlw	0
  4411  00E6B2  0102               	movlb	2	; () banked
  4412  00E6B4  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4413  00E6B6  0E00               	movlw	0
  4414  00E6B8  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4415                           
  4416                           ; BSR set to: 2
  4417                           ;main.c: 204: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4418  00E6BA  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4419  00E6BE  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4420  00E6C2  0E06               	movlw	6
  4421  00E6C4  0100               	movlb	0	; () banked
  4422  00E6C6  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4423  00E6C8  ECA2  F08F         	call	_adc_calculate_temperature	;wreg free
  4424  00E6CC  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4425  00E6D0  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4426                           
  4427                           ;main.c: 205: os.temperature_external_2_adc = 0;
  4428  00E6D4  0E00               	movlw	0
  4429  00E6D6  0102               	movlb	2	; () banked
  4430  00E6D8  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4431  00E6DA  0E00               	movlw	0
  4432  00E6DC  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4433                           
  4434                           ; BSR set to: 2
  4435                           ;main.c: 206: adc_calibrate();
  4436  00E6DE  EC39  F0AF         	call	_adc_calibrate	;wreg free
  4437                           
  4438                           ;main.c: 208: if(os.temperature_onboard>3000)
  4439  00E6E2  0102               	movlb	2	; () banked
  4440  00E6E4  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4441  00E6E6  D008               	goto	l929
  4442  00E6E8  0EB9               	movlw	185
  4443  00E6EA  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4444  00E6EC  0E0B               	movlw	11
  4445  00E6EE  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4446  00E6F0  A0D8               	btfss	status,0,c
  4447  00E6F2  D002               	goto	l929
  4448                           
  4449                           ; BSR set to: 2
  4450                           ;main.c: 209: {;main.c: 210: LATDbits.LD1 = 1;
  4451  00E6F4  828C               	bsf	3980,1,c	;volatile
  4452                           
  4453                           ;main.c: 211: }
  4454  00E6F6  D008               	goto	l931
  4455  00E6F8                     l929:
  4456                           
  4457                           ; BSR set to: 2
  4458                           ;main.c: 212: else if(os.temperature_onboard<2500)
  4459                           
  4460                           ; BSR set to: 2
  4461  00E6F8  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4462  00E6FA  D005               	goto	u22770
  4463  00E6FC  0EC4               	movlw	196
  4464  00E6FE  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4465  00E700  0E09               	movlw	9
  4466  00E702  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4467  00E704  A0D8               	btfss	status,0,c
  4468  00E706                     u22770:
  4469                           
  4470                           ; BSR set to: 2
  4471                           ;main.c: 213: {;main.c: 214: LATDbits.LD1 = 0;
  4472  00E706  928C               	bcf	3980,1,c	;volatile
  4473  00E708                     l931:
  4474                           
  4475                           ; BSR set to: 2
  4476                           ;main.c: 215: };main.c: 216: display_prepare(os.display_mode);
  4477                           
  4478                           ; BSR set to: 2
  4479                           
  4480                           ; BSR set to: 2
  4481  00E708  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4482  00E70A  ECD7  F09D         	call	_display_prepare
  4483                           
  4484                           ;main.c: 217: break;
  4485  00E70E  D03A               	goto	l905
  4486  00E710                     
  4487                           ;main.c: 220: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4488  00E710  EC6E  F0AF         	call	_ui_get_status	;wreg free
  4489  00E714  0A05               	xorlw	5
  4490  00E716  A4D8               	btfss	status,2,c
  4491  00E718  D035               	goto	l905
  4492                           
  4493                           ;main.c: 221: {;main.c: 222: display_update();
  4494  00E71A  EC92  F09F         	call	_display_update	;wreg free
  4495                           
  4496                           ;main.c: 225: }
  4497                           
  4498                           ;main.c: 223: };main.c: 224: break;
  4499  00E71E  D032               	goto	l905
  4500  00E720                     l903:
  4501  00E720  0102               	movlb	2	; () banked
  4502  00E722  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4503  00E724  0B0F               	andlw	15
  4504  00E726  0100               	movlb	0	; () banked
  4505  00E728  6FD6               	movwf	??_main& (0+255),b
  4506  00E72A  6BD7               	clrf	(??_main+1)& (0+255),b
  4507                           
  4508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4509                           ; Switch size 1, requested type "space"
  4510                           ; Number of cases is 1, Range of values is 0 to 0
  4511                           ; switch strategies available:
  4512                           ; Name         Instructions Cycles
  4513                           ; simple_byte            4     3 (average)
  4514                           ;	Chosen strategy is simple_byte
  4515  00E72C  51D7               	movf	(??_main+1)& (0+255),w,b
  4516  00E72E  0A00               	xorlw	0	; case 0
  4517  00E730  A4D8               	btfss	status,2,c
  4518  00E732  D028               	goto	l905
  4519                           
  4520                           ; BSR set to: 0
  4521                           ; Switch size 1, requested type "space"
  4522                           ; Number of cases is 13, Range of values is 0 to 15
  4523                           ; switch strategies available:
  4524                           ; Name         Instructions Cycles
  4525                           ; simple_byte           40    21 (average)
  4526                           ;	Chosen strategy is simple_byte
  4527  00E734  51D6               	movf	??_main& (0+255),w,b
  4528  00E736  0A00               	xorlw	0	; case 0
  4529  00E738  B4D8               	btfsc	status,2,c
  4530  00E73A  D6F1               	goto	l904
  4531  00E73C  0A01               	xorlw	1	; case 1
  4532  00E73E  B4D8               	btfsc	status,2,c
  4533  00E740  D6F7               	goto	l906
  4534  00E742  0A02               	xorlw	2	; case 3
  4535  00E744  B4D8               	btfsc	status,2,c
  4536  00E746  D6F7               	goto	l907
  4537  00E748  0A07               	xorlw	7	; case 4
  4538  00E74A  B4D8               	btfsc	status,2,c
  4539  00E74C  D714               	goto	l908
  4540  00E74E  0A01               	xorlw	1	; case 5
  4541  00E750  B4D8               	btfsc	status,2,c
  4542  00E752  D71B               	goto	l910
  4543  00E754  0A03               	xorlw	3	; case 6
  4544  00E756  B4D8               	btfsc	status,2,c
  4545  00E758  D71B               	goto	l912
  4546  00E75A  0A0E               	xorlw	14	; case 8
  4547  00E75C  B4D8               	btfsc	status,2,c
  4548  00E75E  D739               	goto	l916
  4549  00E760  0A01               	xorlw	1	; case 9
  4550  00E762  B4D8               	btfsc	status,2,c
  4551  00E764  D739               	goto	u22730
  4552  00E766  0A02               	xorlw	2	; case 11
  4553  00E768  B4D8               	btfsc	status,2,c
  4554  00E76A  D756               	goto	l921
  4555  00E76C  0A07               	xorlw	7	; case 12
  4556  00E76E  B4D8               	btfsc	status,2,c
  4557  00E770  D764               	goto	u22750
  4558  00E772  0A01               	xorlw	1	; case 13
  4559  00E774  B4D8               	btfsc	status,2,c
  4560  00E776  D77A               	goto	l927
  4561  00E778  0A03               	xorlw	3	; case 14
  4562  00E77A  B4D8               	btfsc	status,2,c
  4563  00E77C  D77A               	goto	l928
  4564  00E77E  0A01               	xorlw	1	; case 15
  4565  00E780  B4D8               	btfsc	status,2,c
  4566  00E782  D7C6               	goto	l932
  4567  00E784                     l905:
  4568                           
  4569                           ;main.c: 226: os.done = 1;
  4570                           
  4571                           ; BSR set to: 0
  4572  00E784  0E01               	movlw	1
  4573  00E786  0102               	movlb	2	; () banked
  4574  00E788  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4575                           
  4576                           ; BSR set to: 2
  4577                           
  4578                           ; BSR set to: 2
  4579  00E78A  D67C               	goto	l899
  4580  00E78C                     __end_of_main:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           postinc0	equ	0xFEE
  4587                           wreg	equ	0xFE8
  4588                           postdec1	equ	0xFE5
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _ui_run *****************
  4598 ;; Defined at:
  4599 ;;		line 334 in file "ui.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:   15
  4620 ;; This function calls:
  4621 ;;		__ui_encoder
  4622 ;;		_i2c_digipot_backlight
  4623 ;;		_i2c_digipot_reset_off
  4624 ;;		_i2c_digipot_reset_on
  4625 ;;		_i2c_display_send_init_sequence
  4626 ;;		_system_encoder_disable
  4627 ;;		_system_encoder_enable
  4628 ;;		_ui_init
  4629 ;; This function is called by:
  4630 ;;		_main
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text1
  4635  01212C                     __ptext1:
  4636                           	opt stack 0
  4637  01212C                     _ui_run:
  4638                           	opt stack 15
  4639                           
  4640                           ;ui.c: 336: switch(userInterfaceStatus)
  4641                           
  4642                           ; BSR set to: 2
  4643                           ;incstack = 0
  4644  01212C  D060               	goto	l1843
  4645  01212E                     
  4646                           ;ui.c: 339: if (os.buttonCount!=0)
  4647  01212E  0102               	movlb	2	; () banked
  4648  012130  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4649  012132  B4D8               	btfsc	status,2,c
  4650  012134  0012               	return	
  4651                           
  4652                           ; BSR set to: 2
  4653                           ;ui.c: 340: {;ui.c: 341: ui_init();
  4654  012136  ECA8  F0AE         	call	_ui_init	;wreg free
  4655                           
  4656                           ;ui.c: 342: os.buttonCount = 0;
  4657  01213A  0E00               	movlw	0
  4658  01213C  0102               	movlb	2	; () banked
  4659  01213E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4660                           
  4661                           ; BSR set to: 2
  4662                           ;ui.c: 343: };ui.c: 344: break;
  4663  012140  0012               	return	
  4664  012142                     l1847:
  4665                           
  4666                           ; BSR set to: 1
  4667                           ;ui.c: 353: LATDbits.LD0 = 0;
  4668  012142  908C               	bcf	3980,0,c	;volatile
  4669                           
  4670                           ; BSR set to: 1
  4671                           ;ui.c: 355: system_ui_inactive_count = 0;
  4672  012144  0E00               	movlw	0
  4673  012146  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4674  012148  0E00               	movlw	0
  4675  01214A  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4676                           
  4677                           ;ui.c: 356: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4678  01214C  0E02               	movlw	2
  4679  01214E  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4680                           
  4681                           ;ui.c: 357: break;
  4682  012150  0012               	return	
  4683  012152                     
  4684                           ; BSR set to: 1
  4685                           ;ui.c: 361: i2c_digipot_reset_on();
  4686                           
  4687                           ; BSR set to: 1
  4688  012152  EC52  F0AC         	call	_i2c_digipot_reset_on	;wreg free
  4689                           
  4690                           ;ui.c: 363: system_ui_inactive_count = 0;
  4691  012156  0E00               	movlw	0
  4692  012158  0101               	movlb	1	; () banked
  4693  01215A  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4694  01215C  0E00               	movlw	0
  4695  01215E  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4696                           
  4697                           ; BSR set to: 1
  4698                           ;ui.c: 364: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4699  012160  0E03               	movlw	3
  4700  012162  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4701                           
  4702                           ;ui.c: 365: break;
  4703  012164  0012               	return	
  4704  012166                     
  4705                           ; BSR set to: 1
  4706                           ;ui.c: 368: ++system_ui_inactive_count;
  4707                           
  4708                           ; BSR set to: 1
  4709  012166  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4710  012168  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;ui.c: 370: if (system_ui_inactive_count>3)
  4714  01216A  51E8               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4715  01216C  E104               	bnz	u22180
  4716  01216E  0E04               	movlw	4
  4717  012170  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4718  012172  A0D8               	btfss	status,0,c
  4719  012174  0012               	return	
  4720  012176                     u22180:
  4721                           
  4722                           ; BSR set to: 1
  4723                           ;ui.c: 371: {;ui.c: 372: i2c_digipot_reset_off();
  4724  012176  EC65  F0AC         	call	_i2c_digipot_reset_off	;wreg free
  4725                           
  4726                           ;ui.c: 373: system_ui_inactive_count = 0;
  4727  01217A  0E00               	movlw	0
  4728  01217C  0101               	movlb	1	; () banked
  4729  01217E  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4730  012180  0E00               	movlw	0
  4731  012182  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4732                           
  4733                           ; BSR set to: 1
  4734                           ;ui.c: 374: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4735  012184  0E04               	movlw	4
  4736  012186  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4737                           
  4738                           ; BSR set to: 1
  4739                           ;ui.c: 375: };ui.c: 376: break;
  4740  012188  0012               	return	
  4741  01218A                     
  4742                           ; BSR set to: 1
  4743                           ;ui.c: 380: i2c_display_send_init_sequence();
  4744                           
  4745                           ; BSR set to: 1
  4746  01218A  EC20  F0AB         	call	_i2c_display_send_init_sequence	;wreg free
  4747                           
  4748                           ;ui.c: 382: i2c_digipot_backlight(150);
  4749  01218E  0E96               	movlw	150
  4750  012190  EC7C  F0AB         	call	_i2c_digipot_backlight
  4751                           
  4752                           ;ui.c: 384: system_encoder_enable();
  4753  012194  ECBA  F0AE         	call	_system_encoder_enable	;wreg free
  4754                           
  4755                           ;ui.c: 386: system_ui_inactive_count = 0;
  4756  012198  0E00               	movlw	0
  4757  01219A  0101               	movlb	1	; () banked
  4758  01219C  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4759  01219E  0E00               	movlw	0
  4760  0121A0  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4761                           
  4762                           ; BSR set to: 1
  4763                           ;ui.c: 387: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4764  0121A2  0E05               	movlw	5
  4765  0121A4  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4766                           
  4767                           ;ui.c: 388: break;
  4768  0121A6  0012               	return	
  4769  0121A8                     
  4770                           ; BSR set to: 1
  4771                           ;ui.c: 391: if (os.encoderCount==0 && os.buttonCount==0)
  4772                           
  4773                           ; BSR set to: 1
  4774  0121A8  0102               	movlb	2	; () banked
  4775  0121AA  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4776  0121AC  A4D8               	btfss	status,2,c
  4777  0121AE  D017               	goto	l1853
  4778                           
  4779                           ; BSR set to: 2
  4780  0121B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4781  0121B2  A4D8               	btfss	status,2,c
  4782  0121B4  D014               	goto	l1853
  4783                           
  4784                           ; BSR set to: 2
  4785                           ;ui.c: 392: {;ui.c: 393: ++system_ui_inactive_count;
  4786  0121B6  0101               	movlb	1	; () banked
  4787  0121B8  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4788  0121BA  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4789                           
  4790                           ; BSR set to: 1
  4791                           ;ui.c: 394: if(system_ui_inactive_count > 2000)
  4792  0121BC  0ED1               	movlw	209
  4793  0121BE  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4794  0121C0  0E07               	movlw	7
  4795  0121C2  59E8               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4796  0121C4  A0D8               	btfss	status,0,c
  4797  0121C6  0012               	return	
  4798                           
  4799                           ; BSR set to: 1
  4800                           ;ui.c: 395: {;ui.c: 397: system_encoder_disable();
  4801  0121C8  EC6B  F0AF         	call	_system_encoder_disable	;wreg free
  4802                           
  4803                           ;ui.c: 399: LATDbits.LD0 = 1;
  4804  0121CC  808C               	bsf	3980,0,c	;volatile
  4805                           
  4806                           ;ui.c: 402: system_ui_inactive_count = 0;
  4807  0121CE  0E00               	movlw	0
  4808  0121D0  0101               	movlb	1	; () banked
  4809  0121D2  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4810  0121D4  0E00               	movlw	0
  4811  0121D6  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;ui.c: 403: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4815  0121D8  0E00               	movlw	0
  4816  0121DA  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4817                           
  4818                           ; BSR set to: 1
  4819                           ;ui.c: 404: };ui.c: 405: }
  4820  0121DC  0012               	return	
  4821  0121DE                     l1853:
  4822                           
  4823                           ;ui.c: 406: else;ui.c: 407: {;ui.c: 408: system_ui_inactive_count = 0;
  4824                           
  4825                           ; BSR set to: 1
  4826  0121DE  0E00               	movlw	0
  4827  0121E0  0101               	movlb	1	; () banked
  4828  0121E2  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4829  0121E4  0E00               	movlw	0
  4830  0121E6  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;ui.c: 409: _ui_encoder();
  4834  0121E8  EC58  F06B         	call	__ui_encoder	;wreg free
  4835                           
  4836                           ;ui.c: 412: }
  4837                           
  4838                           ;ui.c: 410: };ui.c: 411: break;
  4839  0121EC  0012               	return	
  4840  0121EE                     l1843:
  4841  0121EE  0101               	movlb	1	; () banked
  4842  0121F0  51F3               	movf	_userInterfaceStatus& (0+255),w,b
  4843                           
  4844                           ; Switch size 1, requested type "space"
  4845                           ; Number of cases is 6, Range of values is 0 to 5
  4846                           ; switch strategies available:
  4847                           ; Name         Instructions Cycles
  4848                           ; simple_byte           19    10 (average)
  4849                           ;	Chosen strategy is simple_byte
  4850  0121F2  0A00               	xorlw	0	; case 0
  4851  0121F4  B4D8               	btfsc	status,2,c
  4852  0121F6  D79B               	goto	l1844
  4853  0121F8  0A01               	xorlw	1	; case 1
  4854  0121FA  B4D8               	btfsc	status,2,c
  4855  0121FC  D7A2               	goto	l1847
  4856  0121FE  0A03               	xorlw	3	; case 2
  4857  012200  B4D8               	btfsc	status,2,c
  4858  012202  D7A7               	goto	l1848
  4859  012204  0A01               	xorlw	1	; case 3
  4860  012206  B4D8               	btfsc	status,2,c
  4861  012208  D7AE               	goto	l1849
  4862  01220A  0A07               	xorlw	7	; case 4
  4863  01220C  B4D8               	btfsc	status,2,c
  4864  01220E  D7BD               	goto	l1851
  4865  012210  0A01               	xorlw	1	; case 5
  4866  012212  A4D8               	btfss	status,2,c
  4867  012214  0012               	return	
  4868  012216  D7C8               	goto	l1852
  4869  012218                     __end_of_ui_run:
  4870                           	opt stack 0
  4871                           tblptru	equ	0xFF8
  4872                           tblptrh	equ	0xFF7
  4873                           tblptrl	equ	0xFF6
  4874                           tablat	equ	0xFF5
  4875                           postinc0	equ	0xFEE
  4876                           wreg	equ	0xFE8
  4877                           postdec1	equ	0xFE5
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           postinc2	equ	0xFDE
  4881                           postdec2	equ	0xFDD
  4882                           fsr2h	equ	0xFDA
  4883                           fsr2l	equ	0xFD9
  4884                           status	equ	0xFD8
  4885                           
  4886 ;; *************** function _system_encoder_enable *****************
  4887 ;; Defined at:
  4888 ;;		line 198 in file "os.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:   10
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_ui_run
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text2
  4917  015D74                     __ptext2:
  4918                           	opt stack 0
  4919  015D74                     _system_encoder_enable:
  4920                           	opt stack 19
  4921                           
  4922                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  4923                           
  4924                           ;incstack = 0
  4925  015D74  92F0               	bcf	intcon3,1,c	;volatile
  4926                           
  4927                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  4928  015D76  94F0               	bcf	intcon3,2,c	;volatile
  4929                           
  4930                           ;os.c: 205: os.encoderCount = 0;
  4931  015D78  0E00               	movlw	0
  4932  015D7A  0102               	movlb	2	; () banked
  4933  015D7C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  4934                           
  4935                           ; BSR set to: 2
  4936                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  4937  015D7E  88F0               	bsf	intcon3,4,c	;volatile
  4938                           
  4939                           ; BSR set to: 2
  4940                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  4941  015D80  8AF0               	bsf	intcon3,5,c	;volatile
  4942                           
  4943                           ; BSR set to: 2
  4944  015D82  0012               	return		;funcret
  4945  015D84                     __end_of_system_encoder_enable:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           intcon3	equ	0xFF0
  4952                           postinc0	equ	0xFEE
  4953                           wreg	equ	0xFE8
  4954                           postdec1	equ	0xFE5
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _system_encoder_disable *****************
  4964 ;; Defined at:
  4965 ;;		line 191 in file "os.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		None
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   10
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_ui_run
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text3
  4994  015ED6                     __ptext3:
  4995                           	opt stack 0
  4996  015ED6                     _system_encoder_disable:
  4997                           	opt stack 19
  4998                           
  4999                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5000                           
  5001                           ; BSR set to: 2
  5002                           ;incstack = 0
  5003  015ED6  98F0               	bcf	intcon3,4,c	;volatile
  5004                           
  5005                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5006  015ED8  9AF0               	bcf	intcon3,5,c	;volatile
  5007  015EDA  0012               	return		;funcret
  5008  015EDC                     __end_of_system_encoder_disable:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           tblptrh	equ	0xFF7
  5012                           tblptrl	equ	0xFF6
  5013                           tablat	equ	0xFF5
  5014                           intcon3	equ	0xFF0
  5015                           postinc0	equ	0xFEE
  5016                           wreg	equ	0xFE8
  5017                           postdec1	equ	0xFE5
  5018                           fsr1h	equ	0xFE2
  5019                           fsr1l	equ	0xFE1
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _i2c_display_send_init_sequence *****************
  5027 ;; Defined at:
  5028 ;;		line 248 in file "i2c.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;Total ram usage:        9 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:   12
  5049 ;; This function calls:
  5050 ;;		__i2c_write
  5051 ;;		_i2c_set_frequency
  5052 ;; This function is called by:
  5053 ;;		_ui_run
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text4
  5058  015640                     __ptext4:
  5059                           	opt stack 0
  5060  015640                     _i2c_display_send_init_sequence:
  5061                           	opt stack 17
  5062                           
  5063                           ;i2c.c: 250: uint8_t init_sequence[9] = {;i2c.c: 251: 0x3A,;i2c.c: 253: 0b00011110,;i2c.
      +                          c: 254: 0x39,;i2c.c: 256: 0b00001100,;i2c.c: 257: 0x74,;i2c.c: 258: 0b1011100,;i2c.c: 25
      +                          9: 0x6d,;i2c.c: 260: 0x0c,;i2c.c: 261: 0x01;i2c.c: 262: };
  5064                           
  5065                           ;incstack = 0
  5066  015640  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F6877
  5067  015644  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5068  015648  0E08               	movlw	8
  5069  01564A                     u19871:
  5070  01564A  CFDB FFE3          	movff	plusw2,plusw1
  5071  01564E  06E8               	decf	wreg,f,c
  5072  015650  E2FC               	bc	u19871
  5073                           
  5074                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5075  015652  0E00               	movlw	0
  5076  015654  ECB8  F0A0         	call	_i2c_set_frequency
  5077                           
  5078                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5079  015658  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5080  01565A  0100               	movlb	0	; () banked
  5081  01565C  6F65               	movwf	__i2c_write@data& (0+255),b
  5082  01565E  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5083  015660  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5084  015662  0E09               	movlw	9
  5085  015664  6F67               	movwf	__i2c_write@length& (0+255),b
  5086  015666  0E78               	movlw	120
  5087  015668  EC27  F0A7         	call	__i2c_write
  5088  01566C  0012               	return		;funcret
  5089  01566E                     __end_of_i2c_display_send_init_sequence:
  5090                           	opt stack 0
  5091                           tblptru	equ	0xFF8
  5092                           tblptrh	equ	0xFF7
  5093                           tblptrl	equ	0xFF6
  5094                           tablat	equ	0xFF5
  5095                           intcon3	equ	0xFF0
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           postdec1	equ	0xFE5
  5099                           plusw1	equ	0xFE3
  5100                           fsr1h	equ	0xFE2
  5101                           fsr1l	equ	0xFE1
  5102                           postinc2	equ	0xFDE
  5103                           postdec2	equ	0xFDD
  5104                           plusw2	equ	0xFDB
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8
  5108                           
  5109 ;; *************** function _i2c_digipot_reset_on *****************
  5110 ;; Defined at:
  5111 ;;		line 425 in file "i2c.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;Total ram usage:        2 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:   12
  5132 ;; This function calls:
  5133 ;;		__i2c_write
  5134 ;;		_i2c_set_frequency
  5135 ;; This function is called by:
  5136 ;;		_ui_run
  5137 ;;		_i2c_display_init
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text5
  5142  0158A4                     __ptext5:
  5143                           	opt stack 0
  5144  0158A4                     _i2c_digipot_reset_on:
  5145                           	opt stack 17
  5146                           
  5147                           ;i2c.c: 427: uint8_t data_array[2];;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5148                           
  5149                           ;incstack = 0
  5150  0158A4  0E10               	movlw	16
  5151  0158A6  0100               	movlb	0	; () banked
  5152  0158A8  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5153                           
  5154                           ;i2c.c: 430: data_array[1] = 0x00;
  5155  0158AA  0E00               	movlw	0
  5156  0158AC  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5160  0158AE  0E02               	movlw	2
  5161  0158B0  ECB8  F0A0         	call	_i2c_set_frequency
  5162                           
  5163                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5164  0158B4  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5165  0158B6  0100               	movlb	0	; () banked
  5166  0158B8  6F65               	movwf	__i2c_write@data& (0+255),b
  5167  0158BA  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5168  0158BC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5169  0158BE  0E02               	movlw	2
  5170  0158C0  6F67               	movwf	__i2c_write@length& (0+255),b
  5171  0158C2  0E5C               	movlw	92
  5172  0158C4  EC27  F0A7         	call	__i2c_write
  5173  0158C8  0012               	return		;funcret
  5174  0158CA                     __end_of_i2c_digipot_reset_on:
  5175                           	opt stack 0
  5176                           tblptru	equ	0xFF8
  5177                           tblptrh	equ	0xFF7
  5178                           tblptrl	equ	0xFF6
  5179                           tablat	equ	0xFF5
  5180                           intcon3	equ	0xFF0
  5181                           postinc0	equ	0xFEE
  5182                           wreg	equ	0xFE8
  5183                           postdec1	equ	0xFE5
  5184                           plusw1	equ	0xFE3
  5185                           fsr1h	equ	0xFE2
  5186                           fsr1l	equ	0xFE1
  5187                           postinc2	equ	0xFDE
  5188                           postdec2	equ	0xFDD
  5189                           plusw2	equ	0xFDB
  5190                           fsr2h	equ	0xFDA
  5191                           fsr2l	equ	0xFD9
  5192                           status	equ	0xFD8
  5193                           
  5194 ;; *************** function _i2c_digipot_reset_off *****************
  5195 ;; Defined at:
  5196 ;;		line 438 in file "i2c.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        2 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:   12
  5217 ;; This function calls:
  5218 ;;		__i2c_write
  5219 ;;		_i2c_set_frequency
  5220 ;; This function is called by:
  5221 ;;		_ui_run
  5222 ;;		_i2c_display_init
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text6
  5227  0158CA                     __ptext6:
  5228                           	opt stack 0
  5229  0158CA                     _i2c_digipot_reset_off:
  5230                           	opt stack 17
  5231                           
  5232                           ;i2c.c: 440: uint8_t data_array[2];;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5233                           
  5234                           ;incstack = 0
  5235  0158CA  0E10               	movlw	16
  5236  0158CC  0100               	movlb	0	; () banked
  5237  0158CE  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5238                           
  5239                           ;i2c.c: 442: data_array[1] = 0x80;
  5240  0158D0  0E80               	movlw	128
  5241  0158D2  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5245  0158D4  0E02               	movlw	2
  5246  0158D6  ECB8  F0A0         	call	_i2c_set_frequency
  5247                           
  5248                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5249  0158DA  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5250  0158DC  0100               	movlb	0	; () banked
  5251  0158DE  6F65               	movwf	__i2c_write@data& (0+255),b
  5252  0158E0  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5253  0158E2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5254  0158E4  0E02               	movlw	2
  5255  0158E6  6F67               	movwf	__i2c_write@length& (0+255),b
  5256  0158E8  0E5C               	movlw	92
  5257  0158EA  EC27  F0A7         	call	__i2c_write
  5258  0158EE  0012               	return		;funcret
  5259  0158F0                     __end_of_i2c_digipot_reset_off:
  5260                           	opt stack 0
  5261                           tblptru	equ	0xFF8
  5262                           tblptrh	equ	0xFF7
  5263                           tblptrl	equ	0xFF6
  5264                           tablat	equ	0xFF5
  5265                           intcon3	equ	0xFF0
  5266                           postinc0	equ	0xFEE
  5267                           wreg	equ	0xFE8
  5268                           postdec1	equ	0xFE5
  5269                           plusw1	equ	0xFE3
  5270                           fsr1h	equ	0xFE2
  5271                           fsr1l	equ	0xFE1
  5272                           postinc2	equ	0xFDE
  5273                           postdec2	equ	0xFDD
  5274                           plusw2	equ	0xFDB
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _i2c_digipot_backlight *****************
  5280 ;; Defined at:
  5281 ;;		line 450 in file "i2c.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  level           1    wreg     unsigned char 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  level           1   10[BANK0 ] unsigned char 
  5286 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5297 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5299 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;Total ram usage:        3 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:   12
  5303 ;; This function calls:
  5304 ;;		__i2c_write
  5305 ;;		_i2c_set_frequency
  5306 ;; This function is called by:
  5307 ;;		_ui_run
  5308 ;;		_i2c_display_init
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text7
  5313  0156F8                     __ptext7:
  5314                           	opt stack 0
  5315  0156F8                     _i2c_digipot_backlight:
  5316                           	opt stack 17
  5317                           
  5318                           ;incstack = 0
  5319                           ;i2c_digipot_backlight@level stored from wreg
  5320  0156F8  0100               	movlb	0	; () banked
  5321  0156FA  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5322                           
  5323                           ;i2c.c: 452: uint8_t data_array[2];;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5324  0156FC  0E00               	movlw	0
  5325  0156FE  0100               	movlb	0	; () banked
  5326  015700  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;i2c.c: 454: data_array[1] = level>>1;
  5330  015702  90D8               	bcf	status,0,c
  5331  015704  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5332  015706  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5336  015708  0E02               	movlw	2
  5337  01570A  ECB8  F0A0         	call	_i2c_set_frequency
  5338                           
  5339                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5340  01570E  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5341  015710  0100               	movlb	0	; () banked
  5342  015712  6F65               	movwf	__i2c_write@data& (0+255),b
  5343  015714  0E00               	movlw	high i2c_digipot_backlight@data_array
  5344  015716  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5345  015718  0E02               	movlw	2
  5346  01571A  6F67               	movwf	__i2c_write@length& (0+255),b
  5347  01571C  0E5C               	movlw	92
  5348  01571E  EC27  F0A7         	call	__i2c_write
  5349  015722  0012               	return		;funcret
  5350  015724                     __end_of_i2c_digipot_backlight:
  5351                           	opt stack 0
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           intcon3	equ	0xFF0
  5357                           postinc0	equ	0xFEE
  5358                           wreg	equ	0xFE8
  5359                           postdec1	equ	0xFE5
  5360                           plusw1	equ	0xFE3
  5361                           fsr1h	equ	0xFE2
  5362                           fsr1l	equ	0xFE1
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           plusw2	equ	0xFDB
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           
  5370 ;; *************** function __ui_encoder *****************
  5371 ;; Defined at:
  5372 ;;		line 17 in file "ui.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;Total ram usage:        0 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:   14
  5393 ;; This function calls:
  5394 ;;		_rtcc_correct_day
  5395 ;;		_rtcc_decrement_day
  5396 ;;		_rtcc_decrement_hours
  5397 ;;		_rtcc_decrement_minutes
  5398 ;;		_rtcc_decrement_month
  5399 ;;		_rtcc_decrement_seconds
  5400 ;;		_rtcc_decrement_year
  5401 ;;		_rtcc_increment_day
  5402 ;;		_rtcc_increment_hours
  5403 ;;		_rtcc_increment_minutes
  5404 ;;		_rtcc_increment_month
  5405 ;;		_rtcc_increment_seconds
  5406 ;;		_rtcc_increment_year
  5407 ;;		_rtcc_write_eeprom
  5408 ;;		_system_output_off
  5409 ;;		_system_output_on
  5410 ;;		_system_output_toggle
  5411 ;; This function is called by:
  5412 ;;		_ui_run
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text8
  5417  00D6B0                     __ptext8:
  5418                           	opt stack 0
  5419  00D6B0                     __ui_encoder:
  5420                           	opt stack 15
  5421                           
  5422                           ;ui.c: 19: switch(os.display_mode)
  5423                           
  5424                           ;incstack = 0
  5425  00D6B0  D193               	goto	l1744
  5426  00D6B2                     
  5427                           ;ui.c: 22: if(os.encoderCount>0)
  5428  00D6B2  0102               	movlb	2	; () banked
  5429  00D6B4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5430  00D6B6  0A80               	xorlw	128
  5431  00D6B8  0F7F               	addlw	-129
  5432  00D6BA  A0D8               	btfss	status,0,c
  5433  00D6BC  D002               	goto	l1746
  5434                           
  5435                           ; BSR set to: 2
  5436                           ;ui.c: 23: {;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5437  00D6BE  0E10               	movlw	16
  5438  00D6C0  D003               	goto	L1
  5439  00D6C2                     l1746:
  5440                           
  5441                           ; BSR set to: 2
  5442                           ;ui.c: 26: else if(os.encoderCount<0)
  5443                           
  5444                           ; BSR set to: 2
  5445  00D6C2  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5446  00D6C4  D002               	goto	l1748
  5447                           
  5448                           ; BSR set to: 2
  5449                           ;ui.c: 27: {;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5450  00D6C6  0E60               	movlw	96
  5451  00D6C8                     L1:
  5452  00D6C8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5453  00D6CA                     l1748:
  5454                           
  5455                           ; BSR set to: 2
  5456                           ;ui.c: 29: };ui.c: 30: if(os.buttonCount)
  5457                           
  5458                           ; BSR set to: 2
  5459  00D6CA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5460                           
  5461                           ; BSR set to: 2
  5462                           ;ui.c: 33: };ui.c: 34: os.encoderCount = 0;
  5463                           
  5464                           ; BSR set to: 2
  5465                           
  5466                           ;ui.c: 31: {;ui.c: 32: ;
  5467  00D6CC  0E00               	movlw	0
  5468  00D6CE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5469                           
  5470                           ;ui.c: 35: os.buttonCount = 0;
  5471  00D6D0  0E00               	movlw	0
  5472  00D6D2  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5473                           
  5474                           ;ui.c: 36: break;
  5475  00D6D4  0012               	return	
  5476  00D6D6                     
  5477                           ; BSR set to: 2
  5478                           ;ui.c: 39: if(os.encoderCount>0)
  5479                           
  5480                           ; BSR set to: 2
  5481  00D6D6  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5482  00D6D8  0A80               	xorlw	128
  5483  00D6DA  0F7F               	addlw	-129
  5484  00D6DC  A0D8               	btfss	status,0,c
  5485  00D6DE  D002               	goto	l1752
  5486                           
  5487                           ; BSR set to: 2
  5488                           ;ui.c: 40: {;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5489  00D6E0  0E20               	movlw	32
  5490  00D6E2  D003               	goto	L2
  5491  00D6E4                     l1752:
  5492                           
  5493                           ; BSR set to: 2
  5494                           ;ui.c: 43: else if(os.encoderCount<0)
  5495                           
  5496                           ; BSR set to: 2
  5497  00D6E4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5498  00D6E6  D002               	goto	l1754
  5499                           
  5500                           ; BSR set to: 2
  5501                           ;ui.c: 44: {;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5502  00D6E8  0E00               	movlw	0
  5503  00D6EA                     L2:
  5504  00D6EA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5505  00D6EC                     l1754:
  5506                           
  5507                           ; BSR set to: 2
  5508                           ;ui.c: 46: };ui.c: 47: if(os.buttonCount)
  5509                           
  5510                           ; BSR set to: 2
  5511  00D6EC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5512  00D6EE  B4D8               	btfsc	status,2,c
  5513  00D6F0  D002               	goto	l1755
  5514                           
  5515                           ; BSR set to: 2
  5516                           ;ui.c: 48: {;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5517  00D6F2  0E11               	movlw	17
  5518  00D6F4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5519  00D6F6                     l1755:
  5520                           
  5521                           ; BSR set to: 2
  5522                           ;ui.c: 50: };ui.c: 51: os.encoderCount = 0;
  5523  00D6F6  0E00               	movlw	0
  5524  00D6F8  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5525                           
  5526                           ;ui.c: 52: os.buttonCount = 0;
  5527  00D6FA  0E00               	movlw	0
  5528  00D6FC  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5529                           
  5530                           ;ui.c: 53: break;
  5531  00D6FE  0012               	return	
  5532  00D700                     
  5533                           ; BSR set to: 2
  5534                           ;ui.c: 56: if(os.encoderCount>0)
  5535                           
  5536                           ; BSR set to: 2
  5537  00D700  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5538  00D702  0A80               	xorlw	128
  5539  00D704  0F7F               	addlw	-129
  5540  00D706  A0D8               	btfss	status,0,c
  5541  00D708  D003               	goto	l1757
  5542                           
  5543                           ; BSR set to: 2
  5544                           ;ui.c: 57: {;ui.c: 58: rtcc_increment_year();
  5545  00D70A  ECD5  F0AC         	call	_rtcc_increment_year	;wreg free
  5546                           
  5547                           ;ui.c: 59: }
  5548  00D70E  D004               	goto	l1759
  5549  00D710                     l1757:
  5550                           
  5551                           ;ui.c: 60: else if(os.encoderCount<0)
  5552  00D710  0102               	movlb	2	; () banked
  5553  00D712  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5554                           
  5555                           ; BSR set to: 2
  5556                           ;ui.c: 61: {;ui.c: 62: rtcc_decrement_year();
  5557  00D714  EC2A  F0AD         	call	_rtcc_decrement_year	;wreg free
  5558  00D718                     l1759:
  5559                           
  5560                           ;ui.c: 63: };ui.c: 64: if(os.buttonCount)
  5561  00D718  0102               	movlb	2	; () banked
  5562  00D71A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5563  00D71C  B4D8               	btfsc	status,2,c
  5564  00D71E  D005               	goto	l1760
  5565                           
  5566                           ; BSR set to: 2
  5567                           ;ui.c: 65: {;ui.c: 66: rtcc_correct_day();
  5568  00D720  EC90  F0AD         	call	_rtcc_correct_day	;wreg free
  5569                           
  5570                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5571  00D724  0E12               	movlw	18
  5572  00D726  0102               	movlb	2	; () banked
  5573  00D728  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5574  00D72A                     l1760:
  5575                           
  5576                           ; BSR set to: 2
  5577                           ;ui.c: 68: };ui.c: 69: os.encoderCount = 0;
  5578                           
  5579                           ; BSR set to: 2
  5580  00D72A  0E00               	movlw	0
  5581  00D72C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5582                           
  5583                           ; BSR set to: 2
  5584                           ;ui.c: 70: os.buttonCount = 0;
  5585  00D72E  0E00               	movlw	0
  5586  00D730  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5587                           
  5588                           ;ui.c: 71: break;
  5589  00D732  0012               	return	
  5590  00D734                     
  5591                           ; BSR set to: 2
  5592                           ;ui.c: 74: if(os.encoderCount>0)
  5593                           
  5594                           ; BSR set to: 2
  5595  00D734  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5596  00D736  0A80               	xorlw	128
  5597  00D738  0F7F               	addlw	-129
  5598  00D73A  A0D8               	btfss	status,0,c
  5599  00D73C  D003               	goto	l1762
  5600                           
  5601                           ; BSR set to: 2
  5602                           ;ui.c: 75: {;ui.c: 76: rtcc_increment_month();
  5603  00D73E  ECF7  F0AC         	call	_rtcc_increment_month	;wreg free
  5604                           
  5605                           ;ui.c: 77: }
  5606  00D742  D004               	goto	l1764
  5607  00D744                     l1762:
  5608                           
  5609                           ;ui.c: 78: else if(os.encoderCount<0)
  5610  00D744  0102               	movlb	2	; () banked
  5611  00D746  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5612                           
  5613                           ; BSR set to: 2
  5614                           ;ui.c: 79: {;ui.c: 80: rtcc_decrement_month();
  5615  00D748  EC4C  F0AD         	call	_rtcc_decrement_month	;wreg free
  5616  00D74C                     l1764:
  5617                           
  5618                           ;ui.c: 81: };ui.c: 82: if(os.buttonCount)
  5619  00D74C  0102               	movlb	2	; () banked
  5620  00D74E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5621  00D750  B4D8               	btfsc	status,2,c
  5622  00D752  D005               	goto	l1765
  5623                           
  5624                           ; BSR set to: 2
  5625                           ;ui.c: 83: {;ui.c: 84: rtcc_correct_day();
  5626  00D754  EC90  F0AD         	call	_rtcc_correct_day	;wreg free
  5627                           
  5628                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5629  00D758  0E13               	movlw	19
  5630  00D75A  0102               	movlb	2	; () banked
  5631  00D75C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5632  00D75E                     l1765:
  5633                           
  5634                           ; BSR set to: 2
  5635                           ;ui.c: 86: };ui.c: 87: os.encoderCount = 0;
  5636                           
  5637                           ; BSR set to: 2
  5638  00D75E  0E00               	movlw	0
  5639  00D760  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5640                           
  5641                           ; BSR set to: 2
  5642                           ;ui.c: 88: os.buttonCount = 0;
  5643  00D762  0E00               	movlw	0
  5644  00D764  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5645                           
  5646                           ;ui.c: 89: break;
  5647  00D766  0012               	return	
  5648  00D768                     
  5649                           ; BSR set to: 2
  5650                           ;ui.c: 92: if(os.encoderCount>0)
  5651                           
  5652                           ; BSR set to: 2
  5653  00D768  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5654  00D76A  0A80               	xorlw	128
  5655  00D76C  0F7F               	addlw	-129
  5656  00D76E  A0D8               	btfss	status,0,c
  5657  00D770  D003               	goto	l1767
  5658                           
  5659                           ; BSR set to: 2
  5660                           ;ui.c: 93: {;ui.c: 94: rtcc_increment_day();
  5661  00D772  EC8B  F0AC         	call	_rtcc_increment_day	;wreg free
  5662                           
  5663                           ;ui.c: 95: }
  5664  00D776  D004               	goto	l1769
  5665  00D778                     l1767:
  5666                           
  5667                           ;ui.c: 96: else if(os.encoderCount<0)
  5668  00D778  0102               	movlb	2	; () banked
  5669  00D77A  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5670                           
  5671                           ; BSR set to: 2
  5672                           ;ui.c: 97: {;ui.c: 98: rtcc_decrement_day();
  5673  00D77C  EC9E  F0AC         	call	_rtcc_decrement_day	;wreg free
  5674  00D780                     l1769:
  5675                           
  5676                           ;ui.c: 99: };ui.c: 100: if(os.buttonCount)
  5677  00D780  0102               	movlb	2	; () banked
  5678  00D782  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5679  00D784  B4D8               	btfsc	status,2,c
  5680  00D786  D002               	goto	l1770
  5681                           
  5682                           ; BSR set to: 2
  5683                           ;ui.c: 101: {;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5684  00D788  0E14               	movlw	20
  5685  00D78A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5686  00D78C                     l1770:
  5687                           
  5688                           ; BSR set to: 2
  5689                           ;ui.c: 103: };ui.c: 104: os.encoderCount = 0;
  5690  00D78C  0E00               	movlw	0
  5691  00D78E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5692                           
  5693                           ;ui.c: 105: os.buttonCount = 0;
  5694  00D790  0E00               	movlw	0
  5695  00D792  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5696                           
  5697                           ;ui.c: 106: break;
  5698  00D794  0012               	return	
  5699  00D796                     
  5700                           ; BSR set to: 2
  5701                           ;ui.c: 109: if(os.encoderCount>0)
  5702                           
  5703                           ; BSR set to: 2
  5704  00D796  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5705  00D798  0A80               	xorlw	128
  5706  00D79A  0F7F               	addlw	-129
  5707  00D79C  A0D8               	btfss	status,0,c
  5708  00D79E  D003               	goto	l1772
  5709                           
  5710                           ; BSR set to: 2
  5711                           ;ui.c: 110: {;ui.c: 111: rtcc_increment_hours();
  5712  00D7A0  EC19  F0AD         	call	_rtcc_increment_hours	;wreg free
  5713                           
  5714                           ;ui.c: 112: }
  5715  00D7A4  D004               	goto	l1774
  5716  00D7A6                     l1772:
  5717                           
  5718                           ;ui.c: 113: else if(os.encoderCount<0)
  5719  00D7A6  0102               	movlb	2	; () banked
  5720  00D7A8  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5721                           
  5722                           ; BSR set to: 2
  5723                           ;ui.c: 114: {;ui.c: 115: rtcc_decrement_hours();
  5724  00D7AA  EC6E  F0AD         	call	_rtcc_decrement_hours	;wreg free
  5725  00D7AE                     l1774:
  5726                           
  5727                           ;ui.c: 116: };ui.c: 117: if(os.buttonCount)
  5728  00D7AE  0102               	movlb	2	; () banked
  5729  00D7B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5730  00D7B2  B4D8               	btfsc	status,2,c
  5731  00D7B4  D002               	goto	l1775
  5732                           
  5733                           ; BSR set to: 2
  5734                           ;ui.c: 118: {;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5735  00D7B6  0E15               	movlw	21
  5736  00D7B8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5737  00D7BA                     l1775:
  5738                           
  5739                           ; BSR set to: 2
  5740                           ;ui.c: 120: };ui.c: 121: os.encoderCount = 0;
  5741  00D7BA  0E00               	movlw	0
  5742  00D7BC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5743                           
  5744                           ;ui.c: 122: os.buttonCount = 0;
  5745  00D7BE  0E00               	movlw	0
  5746  00D7C0  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5747                           
  5748                           ;ui.c: 123: break;
  5749  00D7C2  0012               	return	
  5750  00D7C4                     
  5751                           ; BSR set to: 2
  5752                           ;ui.c: 126: if(os.encoderCount>0)
  5753                           
  5754                           ; BSR set to: 2
  5755  00D7C4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5756  00D7C6  0A80               	xorlw	128
  5757  00D7C8  0F7F               	addlw	-129
  5758  00D7CA  A0D8               	btfss	status,0,c
  5759  00D7CC  D003               	goto	l1777
  5760                           
  5761                           ; BSR set to: 2
  5762                           ;ui.c: 127: {;ui.c: 128: rtcc_increment_minutes();
  5763  00D7CE  EC08  F0AD         	call	_rtcc_increment_minutes	;wreg free
  5764                           
  5765                           ;ui.c: 129: }
  5766  00D7D2  D004               	goto	l1779
  5767  00D7D4                     l1777:
  5768                           
  5769                           ;ui.c: 130: else if(os.encoderCount<0)
  5770  00D7D4  0102               	movlb	2	; () banked
  5771  00D7D6  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5772                           
  5773                           ; BSR set to: 2
  5774                           ;ui.c: 131: {;ui.c: 132: rtcc_decrement_minutes();
  5775  00D7D8  EC5D  F0AD         	call	_rtcc_decrement_minutes	;wreg free
  5776  00D7DC                     l1779:
  5777                           
  5778                           ;ui.c: 133: };ui.c: 134: if(os.buttonCount)
  5779  00D7DC  0102               	movlb	2	; () banked
  5780  00D7DE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5781  00D7E0  B4D8               	btfsc	status,2,c
  5782  00D7E2  D002               	goto	l1780
  5783                           
  5784                           ; BSR set to: 2
  5785                           ;ui.c: 135: {;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5786  00D7E4  0E16               	movlw	22
  5787  00D7E6  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5788  00D7E8                     l1780:
  5789                           
  5790                           ; BSR set to: 2
  5791                           ;ui.c: 137: };ui.c: 138: os.encoderCount = 0;
  5792  00D7E8  0E00               	movlw	0
  5793  00D7EA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5794                           
  5795                           ;ui.c: 139: os.buttonCount = 0;
  5796  00D7EC  0E00               	movlw	0
  5797  00D7EE  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5798                           
  5799                           ;ui.c: 140: break;
  5800  00D7F0  0012               	return	
  5801  00D7F2                     
  5802                           ; BSR set to: 2
  5803                           ;ui.c: 143: if(os.encoderCount>0)
  5804                           
  5805                           ; BSR set to: 2
  5806  00D7F2  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5807  00D7F4  0A80               	xorlw	128
  5808  00D7F6  0F7F               	addlw	-129
  5809  00D7F8  A0D8               	btfss	status,0,c
  5810  00D7FA  D003               	goto	l1782
  5811                           
  5812                           ; BSR set to: 2
  5813                           ;ui.c: 144: {;ui.c: 145: rtcc_increment_seconds();
  5814  00D7FC  ECE6  F0AC         	call	_rtcc_increment_seconds	;wreg free
  5815                           
  5816                           ;ui.c: 146: }
  5817  00D800  D004               	goto	l1784
  5818  00D802                     l1782:
  5819                           
  5820                           ;ui.c: 147: else if(os.encoderCount<0)
  5821  00D802  0102               	movlb	2	; () banked
  5822  00D804  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5823                           
  5824                           ; BSR set to: 2
  5825                           ;ui.c: 148: {;ui.c: 149: rtcc_decrement_seconds();
  5826  00D806  EC3B  F0AD         	call	_rtcc_decrement_seconds	;wreg free
  5827  00D80A                     l1784:
  5828                           
  5829                           ;ui.c: 150: };ui.c: 151: if(os.buttonCount)
  5830  00D80A  0102               	movlb	2	; () banked
  5831  00D80C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5832  00D80E  B4D8               	btfsc	status,2,c
  5833  00D810  D004               	goto	l1785
  5834                           
  5835                           ; BSR set to: 2
  5836                           ;ui.c: 152: {;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5837  00D812  0E10               	movlw	16
  5838  00D814  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5839                           
  5840                           ; BSR set to: 2
  5841                           ;ui.c: 154: rtcc_write_eeprom();
  5842  00D816  EC38  F0A8         	call	_rtcc_write_eeprom	;wreg free
  5843  00D81A                     l1785:
  5844                           
  5845                           ;ui.c: 155: };ui.c: 156: os.encoderCount = 0;
  5846  00D81A  0E00               	movlw	0
  5847  00D81C  0102               	movlb	2	; () banked
  5848  00D81E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5849                           
  5850                           ; BSR set to: 2
  5851                           ;ui.c: 157: os.buttonCount = 0;
  5852  00D820  0E00               	movlw	0
  5853  00D822  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5854                           
  5855                           ;ui.c: 158: break;
  5856  00D824  0012               	return	
  5857  00D826                     
  5858                           ; BSR set to: 2
  5859                           ;ui.c: 161: if(os.encoderCount>0)
  5860                           
  5861                           ; BSR set to: 2
  5862  00D826  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5863  00D828  0A80               	xorlw	128
  5864  00D82A  0F7F               	addlw	-129
  5865  00D82C  A0D8               	btfss	status,0,c
  5866  00D82E  D002               	goto	l1787
  5867                           
  5868                           ; BSR set to: 2
  5869                           ;ui.c: 162: {;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  5870  00D830  0E30               	movlw	48
  5871  00D832  D003               	goto	L3
  5872  00D834                     l1787:
  5873                           
  5874                           ; BSR set to: 2
  5875                           ;ui.c: 165: else if(os.encoderCount<0)
  5876                           
  5877                           ; BSR set to: 2
  5878  00D834  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5879  00D836  D002               	goto	l1789
  5880                           
  5881                           ; BSR set to: 2
  5882                           ;ui.c: 166: {;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5883  00D838  0E10               	movlw	16
  5884  00D83A                     L3:
  5885  00D83A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5886  00D83C                     l1789:
  5887                           
  5888                           ; BSR set to: 2
  5889                           ;ui.c: 168: };ui.c: 169: if(os.buttonCount)
  5890                           
  5891                           ; BSR set to: 2
  5892  00D83C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5893  00D83E  A4D8               	btfss	status,2,c
  5894                           
  5895                           ; BSR set to: 2
  5896                           ;ui.c: 170: {;ui.c: 171: if(os.output_voltage>12000)
  5897  00D840  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  5898  00D842  D009               	goto	l1791
  5899  00D844  0EE1               	movlw	225
  5900  00D846  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  5901  00D848  0E2E               	movlw	46
  5902  00D84A  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  5903  00D84C  A0D8               	btfss	status,0,c
  5904  00D84E  D003               	goto	l1791
  5905                           
  5906                           ; BSR set to: 2
  5907                           ;ui.c: 172: {;ui.c: 173: system_output_toggle(OUTPUT_USB);
  5908  00D850  0E10               	movlw	16
  5909  00D852  EC78  F0AC         	call	_system_output_toggle
  5910  00D856                     l1791:
  5911                           
  5912                           ;ui.c: 174: };ui.c: 175: };ui.c: 176: os.encoderCount = 0;
  5913  00D856  0E00               	movlw	0
  5914  00D858  0102               	movlb	2	; () banked
  5915  00D85A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5916                           
  5917                           ; BSR set to: 2
  5918                           ;ui.c: 177: os.buttonCount = 0;
  5919  00D85C  0E00               	movlw	0
  5920  00D85E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5921                           
  5922                           ;ui.c: 178: break;
  5923  00D860  0012               	return	
  5924  00D862                     
  5925                           ; BSR set to: 2
  5926                           ;ui.c: 181: if(os.encoderCount>0)
  5927                           
  5928                           ; BSR set to: 2
  5929  00D862  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5930  00D864  0A80               	xorlw	128
  5931  00D866  0F7F               	addlw	-129
  5932  00D868  A0D8               	btfss	status,0,c
  5933  00D86A  D002               	goto	l1793
  5934                           
  5935                           ; BSR set to: 2
  5936                           ;ui.c: 182: {;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  5937  00D86C  0E40               	movlw	64
  5938  00D86E  D003               	goto	L4
  5939  00D870                     l1793:
  5940                           
  5941                           ; BSR set to: 2
  5942                           ;ui.c: 185: else if(os.encoderCount<0)
  5943                           
  5944                           ; BSR set to: 2
  5945  00D870  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5946  00D872  D002               	goto	l1795
  5947                           
  5948                           ; BSR set to: 2
  5949                           ;ui.c: 186: {;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5950  00D874  0E20               	movlw	32
  5951  00D876                     L4:
  5952  00D876  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5953  00D878                     l1795:
  5954                           
  5955                           ; BSR set to: 2
  5956                           ;ui.c: 188: };ui.c: 189: if(os.buttonCount)
  5957                           
  5958                           ; BSR set to: 2
  5959  00D878  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5960  00D87A  B4D8               	btfsc	status,2,c
  5961  00D87C  D002               	goto	l1796
  5962                           
  5963                           ; BSR set to: 2
  5964                           ;ui.c: 190: {;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  5965  00D87E  0E31               	movlw	49
  5966  00D880  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5967  00D882                     l1796:
  5968                           
  5969                           ; BSR set to: 2
  5970                           ;ui.c: 192: };ui.c: 193: os.encoderCount = 0;
  5971  00D882  0E00               	movlw	0
  5972  00D884  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5973                           
  5974                           ;ui.c: 194: os.buttonCount = 0;
  5975  00D886  0E00               	movlw	0
  5976  00D888  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5977                           
  5978                           ;ui.c: 195: break;
  5979  00D88A  0012               	return	
  5980  00D88C                     
  5981                           ; BSR set to: 2
  5982                           ;ui.c: 198: if(os.encoderCount>0)
  5983                           
  5984                           ; BSR set to: 2
  5985  00D88C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5986  00D88E  0A80               	xorlw	128
  5987  00D890  0F7F               	addlw	-129
  5988  00D892  A0D8               	btfss	status,0,c
  5989  00D894  D006               	goto	l1798
  5990                           
  5991                           ; BSR set to: 2
  5992                           ;ui.c: 199: {;ui.c: 200: if(os.output_voltage>-1)
  5993  00D896  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  5994  00D898  D00A               	goto	l1801
  5995                           
  5996                           ; BSR set to: 2
  5997                           ;ui.c: 201: system_output_on(OUTPUT_1);
  5998  00D89A  0E01               	movlw	1
  5999  00D89C  ECC7  F0A7         	call	_system_output_on
  6000                           
  6001                           ;ui.c: 202: }
  6002  00D8A0  D006               	goto	l1801
  6003  00D8A2                     l1798:
  6004                           
  6005                           ;ui.c: 203: else if(os.encoderCount<0)
  6006  00D8A2  0102               	movlb	2	; () banked
  6007  00D8A4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6008  00D8A6  D003               	goto	l1801
  6009                           
  6010                           ; BSR set to: 2
  6011                           ;ui.c: 204: {;ui.c: 205: system_output_off(OUTPUT_1);
  6012  00D8A8  0E01               	movlw	1
  6013  00D8AA  ECDA  F0A5         	call	_system_output_off
  6014  00D8AE                     l1801:
  6015                           
  6016                           ;ui.c: 206: };ui.c: 207: if(os.buttonCount)
  6017  00D8AE  0102               	movlb	2	; () banked
  6018  00D8B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6019  00D8B2  B4D8               	btfsc	status,2,c
  6020  00D8B4  D002               	goto	l1802
  6021                           
  6022                           ; BSR set to: 2
  6023                           ;ui.c: 208: {;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6024  00D8B6  0E32               	movlw	50
  6025  00D8B8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6026  00D8BA                     l1802:
  6027                           
  6028                           ; BSR set to: 2
  6029                           ;ui.c: 210: };ui.c: 211: os.encoderCount = 0;
  6030  00D8BA  0E00               	movlw	0
  6031  00D8BC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6032                           
  6033                           ;ui.c: 212: os.buttonCount = 0;
  6034  00D8BE  0E00               	movlw	0
  6035  00D8C0  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6036                           
  6037                           ;ui.c: 213: break;
  6038  00D8C2  0012               	return	
  6039  00D8C4                     
  6040                           ; BSR set to: 2
  6041                           ;ui.c: 216: if(os.encoderCount>0)
  6042                           
  6043                           ; BSR set to: 2
  6044  00D8C4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6045  00D8C6  0A80               	xorlw	128
  6046  00D8C8  0F7F               	addlw	-129
  6047  00D8CA  A0D8               	btfss	status,0,c
  6048  00D8CC  D006               	goto	l1804
  6049                           
  6050                           ; BSR set to: 2
  6051                           ;ui.c: 217: {;ui.c: 218: if(os.output_voltage>-1)
  6052  00D8CE  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6053  00D8D0  D00A               	goto	l1807
  6054                           
  6055                           ; BSR set to: 2
  6056                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6057  00D8D2  0E02               	movlw	2
  6058  00D8D4  ECC7  F0A7         	call	_system_output_on
  6059                           
  6060                           ;ui.c: 220: }
  6061  00D8D8  D006               	goto	l1807
  6062  00D8DA                     l1804:
  6063                           
  6064                           ;ui.c: 221: else if(os.encoderCount<0)
  6065  00D8DA  0102               	movlb	2	; () banked
  6066  00D8DC  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6067  00D8DE  D003               	goto	l1807
  6068                           
  6069                           ; BSR set to: 2
  6070                           ;ui.c: 222: {;ui.c: 223: system_output_off(OUTPUT_2);
  6071  00D8E0  0E02               	movlw	2
  6072  00D8E2  ECDA  F0A5         	call	_system_output_off
  6073  00D8E6                     l1807:
  6074                           
  6075                           ;ui.c: 224: };ui.c: 225: if(os.buttonCount)
  6076  00D8E6  0102               	movlb	2	; () banked
  6077  00D8E8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6078  00D8EA  B4D8               	btfsc	status,2,c
  6079  00D8EC  D002               	goto	l1808
  6080                           
  6081                           ; BSR set to: 2
  6082                           ;ui.c: 226: {;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6083  00D8EE  0E33               	movlw	51
  6084  00D8F0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6085  00D8F2                     l1808:
  6086                           
  6087                           ; BSR set to: 2
  6088                           ;ui.c: 228: };ui.c: 229: os.encoderCount = 0;
  6089  00D8F2  0E00               	movlw	0
  6090  00D8F4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6091                           
  6092                           ;ui.c: 230: os.buttonCount = 0;
  6093  00D8F6  0E00               	movlw	0
  6094  00D8F8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6095                           
  6096                           ;ui.c: 231: break;
  6097  00D8FA  0012               	return	
  6098  00D8FC                     
  6099                           ; BSR set to: 2
  6100                           ;ui.c: 234: if(os.encoderCount>0)
  6101                           
  6102                           ; BSR set to: 2
  6103  00D8FC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6104  00D8FE  0A80               	xorlw	128
  6105  00D900  0F7F               	addlw	-129
  6106  00D902  A0D8               	btfss	status,0,c
  6107  00D904  D006               	goto	l1810
  6108                           
  6109                           ; BSR set to: 2
  6110                           ;ui.c: 235: {;ui.c: 236: if(os.output_voltage>-1)
  6111  00D906  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6112  00D908  D00A               	goto	l1813
  6113                           
  6114                           ; BSR set to: 2
  6115                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6116  00D90A  0E04               	movlw	4
  6117  00D90C  ECC7  F0A7         	call	_system_output_on
  6118                           
  6119                           ;ui.c: 238: }
  6120  00D910  D006               	goto	l1813
  6121  00D912                     l1810:
  6122                           
  6123                           ;ui.c: 239: else if(os.encoderCount<0)
  6124  00D912  0102               	movlb	2	; () banked
  6125  00D914  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6126  00D916  D003               	goto	l1813
  6127                           
  6128                           ; BSR set to: 2
  6129                           ;ui.c: 240: {;ui.c: 241: system_output_off(OUTPUT_3);
  6130  00D918  0E04               	movlw	4
  6131  00D91A  ECDA  F0A5         	call	_system_output_off
  6132  00D91E                     l1813:
  6133                           
  6134                           ;ui.c: 242: };ui.c: 243: if(os.buttonCount)
  6135  00D91E  0102               	movlb	2	; () banked
  6136  00D920  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6137  00D922  B4D8               	btfsc	status,2,c
  6138  00D924  D002               	goto	l1814
  6139                           
  6140                           ; BSR set to: 2
  6141                           ;ui.c: 244: {;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6142  00D926  0E34               	movlw	52
  6143  00D928  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6144  00D92A                     l1814:
  6145                           
  6146                           ; BSR set to: 2
  6147                           ;ui.c: 246: };ui.c: 247: os.encoderCount = 0;
  6148  00D92A  0E00               	movlw	0
  6149  00D92C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6150                           
  6151                           ;ui.c: 248: os.buttonCount = 0;
  6152  00D92E  0E00               	movlw	0
  6153  00D930  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6154                           
  6155                           ;ui.c: 249: break;
  6156  00D932  0012               	return	
  6157  00D934                     
  6158                           ; BSR set to: 2
  6159                           ;ui.c: 252: if(os.encoderCount>0)
  6160                           
  6161                           ; BSR set to: 2
  6162  00D934  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6163  00D936  0A80               	xorlw	128
  6164  00D938  0F7F               	addlw	-129
  6165  00D93A  A0D8               	btfss	status,0,c
  6166  00D93C  D006               	goto	l1816
  6167                           
  6168                           ; BSR set to: 2
  6169                           ;ui.c: 253: {;ui.c: 254: if(os.output_voltage>-1)
  6170  00D93E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6171  00D940  D00A               	goto	l1819
  6172                           
  6173                           ; BSR set to: 2
  6174                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6175  00D942  0E08               	movlw	8
  6176  00D944  ECC7  F0A7         	call	_system_output_on
  6177                           
  6178                           ;ui.c: 256: }
  6179  00D948  D006               	goto	l1819
  6180  00D94A                     l1816:
  6181                           
  6182                           ;ui.c: 257: else if(os.encoderCount<0)
  6183  00D94A  0102               	movlb	2	; () banked
  6184  00D94C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6185  00D94E  D003               	goto	l1819
  6186                           
  6187                           ; BSR set to: 2
  6188                           ;ui.c: 258: {;ui.c: 259: system_output_off(OUTPUT_4);
  6189  00D950  0E08               	movlw	8
  6190  00D952  ECDA  F0A5         	call	_system_output_off
  6191  00D956                     l1819:
  6192                           
  6193                           ;ui.c: 260: };ui.c: 261: if(os.buttonCount)
  6194  00D956  0102               	movlb	2	; () banked
  6195  00D958  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6196  00D95A  B4D8               	btfsc	status,2,c
  6197  00D95C  D002               	goto	l1820
  6198                           
  6199                           ; BSR set to: 2
  6200                           ;ui.c: 262: {;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6201  00D95E  0E30               	movlw	48
  6202  00D960  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6203  00D962                     l1820:
  6204                           
  6205                           ; BSR set to: 2
  6206                           ;ui.c: 264: };ui.c: 265: os.encoderCount = 0;
  6207  00D962  0E00               	movlw	0
  6208  00D964  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6209                           
  6210                           ;ui.c: 266: os.buttonCount = 0;
  6211  00D966  0E00               	movlw	0
  6212  00D968  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6213                           
  6214                           ;ui.c: 267: break;
  6215  00D96A  0012               	return	
  6216  00D96C                     
  6217                           ; BSR set to: 2
  6218                           ;ui.c: 270: if(os.encoderCount>0)
  6219                           
  6220                           ; BSR set to: 2
  6221  00D96C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6222  00D96E  0A80               	xorlw	128
  6223  00D970  0F7F               	addlw	-129
  6224  00D972  A0D8               	btfss	status,0,c
  6225  00D974  D002               	goto	l1822
  6226                           
  6227                           ; BSR set to: 2
  6228                           ;ui.c: 271: {;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6229  00D976  0E50               	movlw	80
  6230  00D978  D003               	goto	L5
  6231  00D97A                     l1822:
  6232                           
  6233                           ; BSR set to: 2
  6234                           ;ui.c: 274: else if(os.encoderCount<0)
  6235                           
  6236                           ; BSR set to: 2
  6237  00D97A  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6238  00D97C  D002               	goto	l1824
  6239                           
  6240                           ; BSR set to: 2
  6241                           ;ui.c: 275: {;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6242  00D97E  0E30               	movlw	48
  6243  00D980                     L5:
  6244  00D980  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6245  00D982                     l1824:
  6246                           
  6247                           ; BSR set to: 2
  6248                           ;ui.c: 277: };ui.c: 278: if(os.buttonCount)
  6249                           
  6250                           ; BSR set to: 2
  6251  00D982  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6252                           
  6253                           ; BSR set to: 2
  6254                           ;ui.c: 281: };ui.c: 282: os.encoderCount = 0;
  6255                           
  6256                           ; BSR set to: 2
  6257                           
  6258                           ;ui.c: 279: {;ui.c: 280: ;
  6259  00D984  0E00               	movlw	0
  6260  00D986  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6261                           
  6262                           ;ui.c: 283: os.buttonCount = 0;
  6263  00D988  0E00               	movlw	0
  6264  00D98A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6265                           
  6266                           ;ui.c: 284: break;
  6267  00D98C  0012               	return	
  6268  00D98E                     
  6269                           ; BSR set to: 2
  6270                           ;ui.c: 287: if(os.encoderCount>0)
  6271                           
  6272                           ; BSR set to: 2
  6273  00D98E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6274  00D990  0A80               	xorlw	128
  6275  00D992  0F7F               	addlw	-129
  6276  00D994  A0D8               	btfss	status,0,c
  6277  00D996  D002               	goto	l1827
  6278                           
  6279                           ; BSR set to: 2
  6280                           ;ui.c: 288: {;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6281  00D998  0E60               	movlw	96
  6282  00D99A  D003               	goto	L6
  6283  00D99C                     l1827:
  6284                           
  6285                           ; BSR set to: 2
  6286                           ;ui.c: 291: else if(os.encoderCount<0)
  6287                           
  6288                           ; BSR set to: 2
  6289  00D99C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6290  00D99E  D002               	goto	l1829
  6291                           
  6292                           ; BSR set to: 2
  6293                           ;ui.c: 292: {;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6294  00D9A0  0E40               	movlw	64
  6295  00D9A2                     L6:
  6296  00D9A2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6297  00D9A4                     l1829:
  6298                           
  6299                           ; BSR set to: 2
  6300                           ;ui.c: 294: };ui.c: 295: if(os.buttonCount)
  6301                           
  6302                           ; BSR set to: 2
  6303  00D9A4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6304                           
  6305                           ; BSR set to: 2
  6306                           ;ui.c: 298: };ui.c: 299: os.encoderCount = 0;
  6307                           
  6308                           ; BSR set to: 2
  6309                           
  6310                           ;ui.c: 296: {;ui.c: 297: ;
  6311  00D9A6  0E00               	movlw	0
  6312  00D9A8  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6313                           
  6314                           ;ui.c: 300: os.buttonCount = 0;
  6315  00D9AA  0E00               	movlw	0
  6316  00D9AC  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6317                           
  6318                           ;ui.c: 301: break;
  6319  00D9AE  0012               	return	
  6320  00D9B0                     
  6321                           ; BSR set to: 2
  6322                           ;ui.c: 304: if(os.encoderCount>0)
  6323                           
  6324                           ; BSR set to: 2
  6325  00D9B0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6326  00D9B2  0A80               	xorlw	128
  6327  00D9B4  0F7F               	addlw	-129
  6328  00D9B6  A0D8               	btfss	status,0,c
  6329  00D9B8  D002               	goto	l1832
  6330                           
  6331                           ; BSR set to: 2
  6332                           ;ui.c: 305: {;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6333  00D9BA  0E00               	movlw	0
  6334  00D9BC  D003               	goto	L7
  6335  00D9BE                     l1832:
  6336                           
  6337                           ; BSR set to: 2
  6338                           ;ui.c: 308: else if(os.encoderCount<0)
  6339                           
  6340                           ; BSR set to: 2
  6341  00D9BE  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6342  00D9C0  D002               	goto	l1834
  6343                           
  6344                           ; BSR set to: 2
  6345                           ;ui.c: 309: {;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6346  00D9C2  0E50               	movlw	80
  6347  00D9C4                     L7:
  6348  00D9C4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6349  00D9C6                     l1834:
  6350                           
  6351                           ; BSR set to: 2
  6352                           ;ui.c: 311: };ui.c: 312: if(os.buttonCount)
  6353                           
  6354                           ; BSR set to: 2
  6355  00D9C6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6356                           
  6357                           ; BSR set to: 2
  6358                           ;ui.c: 315: };ui.c: 316: os.encoderCount = 0;
  6359                           
  6360                           ; BSR set to: 2
  6361                           
  6362                           ;ui.c: 313: {;ui.c: 314: ;
  6363  00D9C8  0E00               	movlw	0
  6364  00D9CA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6365                           
  6366                           ;ui.c: 317: os.buttonCount = 0;
  6367  00D9CC  0E00               	movlw	0
  6368  00D9CE  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6369                           
  6370                           ;ui.c: 318: break;
  6371  00D9D0  0012               	return	
  6372  00D9D2                     
  6373                           ; BSR set to: 2
  6374                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6375                           
  6376                           ; BSR set to: 2
  6377  00D9D2  0E00               	movlw	0
  6378  00D9D4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6379                           
  6380                           ;ui.c: 322: }
  6381  00D9D6  0012               	return	
  6382  00D9D8                     l1744:
  6383                           
  6384                           ; BSR set to: 2
  6385  00D9D8  0102               	movlb	2	; () banked
  6386  00D9DA  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6387                           
  6388                           ; Switch size 1, requested type "space"
  6389                           ; Number of cases is 17, Range of values is 0 to 96
  6390                           ; switch strategies available:
  6391                           ; Name         Instructions Cycles
  6392                           ; simple_byte           52    27 (average)
  6393                           ;	Chosen strategy is simple_byte
  6394  00D9DC  0A00               	xorlw	0	; case 0
  6395  00D9DE  B4D8               	btfsc	status,2,c
  6396  00D9E0  D668               	goto	l1745
  6397  00D9E2  0A10               	xorlw	16	; case 16
  6398  00D9E4  B4D8               	btfsc	status,2,c
  6399  00D9E6  D677               	goto	l1751
  6400  00D9E8  0A01               	xorlw	1	; case 17
  6401  00D9EA  B4D8               	btfsc	status,2,c
  6402  00D9EC  D689               	goto	l1756
  6403  00D9EE  0A03               	xorlw	3	; case 18
  6404  00D9F0  B4D8               	btfsc	status,2,c
  6405  00D9F2  D6A0               	goto	l1761
  6406  00D9F4  0A01               	xorlw	1	; case 19
  6407  00D9F6  B4D8               	btfsc	status,2,c
  6408  00D9F8  D6B7               	goto	l1766
  6409  00D9FA  0A07               	xorlw	7	; case 20
  6410  00D9FC  B4D8               	btfsc	status,2,c
  6411  00D9FE  D6CB               	goto	l1771
  6412  00DA00  0A01               	xorlw	1	; case 21
  6413  00DA02  B4D8               	btfsc	status,2,c
  6414  00DA04  D6DF               	goto	l1776
  6415  00DA06  0A03               	xorlw	3	; case 22
  6416  00DA08  B4D8               	btfsc	status,2,c
  6417  00DA0A  D6F3               	goto	l1781
  6418  00DA0C  0A36               	xorlw	54	; case 32
  6419  00DA0E  B4D8               	btfsc	status,2,c
  6420  00DA10  D70A               	goto	l1786
  6421  00DA12  0A10               	xorlw	16	; case 48
  6422  00DA14  B4D8               	btfsc	status,2,c
  6423  00DA16  D725               	goto	l1792
  6424  00DA18  0A01               	xorlw	1	; case 49
  6425  00DA1A  B4D8               	btfsc	status,2,c
  6426  00DA1C  D737               	goto	l1797
  6427  00DA1E  0A03               	xorlw	3	; case 50
  6428  00DA20  B4D8               	btfsc	status,2,c
  6429  00DA22  D750               	goto	l1803
  6430  00DA24  0A01               	xorlw	1	; case 51
  6431  00DA26  B4D8               	btfsc	status,2,c
  6432  00DA28  D769               	goto	l1809
  6433  00DA2A  0A07               	xorlw	7	; case 52
  6434  00DA2C  B4D8               	btfsc	status,2,c
  6435  00DA2E  D782               	goto	l1815
  6436  00DA30  0A74               	xorlw	116	; case 64
  6437  00DA32  B4D8               	btfsc	status,2,c
  6438  00DA34  D79B               	goto	l1821
  6439  00DA36  0A10               	xorlw	16	; case 80
  6440  00DA38  B4D8               	btfsc	status,2,c
  6441  00DA3A  D7A9               	goto	l1826
  6442  00DA3C  0A30               	xorlw	48	; case 96
  6443  00DA3E  B4D8               	btfsc	status,2,c
  6444  00DA40  D7B7               	goto	l1831
  6445  00DA42  D7C7               	goto	l1836
  6446  00DA44                     __end_of__ui_encoder:
  6447                           	opt stack 0
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           intcon3	equ	0xFF0
  6453                           postinc0	equ	0xFEE
  6454                           wreg	equ	0xFE8
  6455                           postdec1	equ	0xFE5
  6456                           plusw1	equ	0xFE3
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           postinc2	equ	0xFDE
  6460                           postdec2	equ	0xFDD
  6461                           plusw2	equ	0xFDB
  6462                           fsr2h	equ	0xFDA
  6463                           fsr2l	equ	0xFD9
  6464                           status	equ	0xFD8
  6465                           
  6466 ;; *************** function _system_output_toggle *****************
  6467 ;; Defined at:
  6468 ;;		line 499 in file "os.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  output          1    wreg     enum E6652
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  output          1    2[BANK0 ] enum E6652
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      void 
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;Total ram usage:        1 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:   11
  6489 ;; This function calls:
  6490 ;;		_system_output_is_on
  6491 ;;		_system_output_off
  6492 ;;		_system_output_on
  6493 ;; This function is called by:
  6494 ;;		__ui_encoder
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text9
  6499  0158F0                     __ptext9:
  6500                           	opt stack 0
  6501  0158F0                     _system_output_toggle:
  6502                           	opt stack 17
  6503                           
  6504                           ; BSR set to: 2
  6505                           ;incstack = 0
  6506                           ;system_output_toggle@output stored from wreg
  6507  0158F0  0100               	movlb	0	; () banked
  6508  0158F2  6F62               	movwf	system_output_toggle@output& (0+255),b
  6509                           
  6510                           ;os.c: 501: if(system_output_is_on(output))
  6511  0158F4  0100               	movlb	0	; () banked
  6512  0158F6  5162               	movf	system_output_toggle@output& (0+255),w,b
  6513  0158F8  ECF6  F0AD         	call	_system_output_is_on
  6514  0158FC  0900               	iorlw	0
  6515  0158FE  B4D8               	btfsc	status,2,c
  6516  015900  D005               	goto	l1401
  6517                           
  6518                           ;os.c: 502: system_output_off(output);
  6519  015902  0100               	movlb	0	; () banked
  6520  015904  5162               	movf	system_output_toggle@output& (0+255),w,b
  6521  015906  ECDA  F0A5         	call	_system_output_off
  6522  01590A  0012               	return	
  6523  01590C                     l1401:
  6524                           
  6525                           ;os.c: 503: else;os.c: 504: system_output_on(output);
  6526  01590C  0100               	movlb	0	; () banked
  6527  01590E  5162               	movf	system_output_toggle@output& (0+255),w,b
  6528  015910  ECC7  F0A7         	call	_system_output_on
  6529  015914  0012               	return	
  6530  015916                     __end_of_system_output_toggle:
  6531                           	opt stack 0
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           intcon3	equ	0xFF0
  6537                           postinc0	equ	0xFEE
  6538                           wreg	equ	0xFE8
  6539                           postdec1	equ	0xFE5
  6540                           plusw1	equ	0xFE3
  6541                           fsr1h	equ	0xFE2
  6542                           fsr1l	equ	0xFE1
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           plusw2	equ	0xFDB
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function _rtcc_increment_year *****************
  6551 ;; Defined at:
  6552 ;;		line 150 in file "rtcc.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  year            1    8[BANK0 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;Total ram usage:        1 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:   12
  6573 ;; This function calls:
  6574 ;;		__rtcc_increment_bcd
  6575 ;;		_rtcc_get_year
  6576 ;;		_rtcc_set_year
  6577 ;; This function is called by:
  6578 ;;		__ui_encoder
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text10
  6583  0159AA                     __ptext10:
  6584                           	opt stack 0
  6585  0159AA                     _rtcc_increment_year:
  6586                           	opt stack 16
  6587                           
  6588                           ;rtcc.c: 152: uint8_t year = rtcc_get_year();
  6589                           
  6590                           ;incstack = 0
  6591  0159AA  EC09  F0AF         	call	_rtcc_get_year	;wreg free
  6592  0159AE  0100               	movlb	0	; () banked
  6593  0159B0  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;rtcc.c: 153: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6597  0159B2  0E00               	movlw	0
  6598  0159B4  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6599  0159B6  0E99               	movlw	153
  6600  0159B8  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6601  0159BA  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6602  0159BC  EC37  F0AB         	call	__rtcc_increment_bcd
  6603  0159C0  0100               	movlb	0	; () banked
  6604  0159C2  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;rtcc.c: 154: rtcc_set_year(year);
  6608  0159C4  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6609  0159C6  EC28  F0AE         	call	_rtcc_set_year
  6610  0159CA  0012               	return		;funcret
  6611  0159CC                     __end_of_rtcc_increment_year:
  6612                           	opt stack 0
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           intcon3	equ	0xFF0
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           postdec1	equ	0xFE5
  6621                           plusw1	equ	0xFE3
  6622                           fsr1h	equ	0xFE2
  6623                           fsr1l	equ	0xFE1
  6624                           postinc2	equ	0xFDE
  6625                           postdec2	equ	0xFDD
  6626                           plusw2	equ	0xFDB
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _rtcc_increment_seconds *****************
  6632 ;; Defined at:
  6633 ;;		line 340 in file "rtcc.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  seconds         1    8[BANK0 ] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;Total ram usage:        1 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   12
  6654 ;; This function calls:
  6655 ;;		__rtcc_increment_bcd
  6656 ;;		_rtcc_get_seconds
  6657 ;;		_rtcc_set_seconds
  6658 ;; This function is called by:
  6659 ;;		__ui_encoder
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text11
  6664  0159CC                     __ptext11:
  6665                           	opt stack 0
  6666  0159CC                     _rtcc_increment_seconds:
  6667                           	opt stack 16
  6668                           
  6669                           ;rtcc.c: 342: uint8_t seconds = rtcc_get_seconds();
  6670                           
  6671                           ;incstack = 0
  6672  0159CC  EC10  F0AF         	call	_rtcc_get_seconds	;wreg free
  6673  0159D0  0100               	movlb	0	; () banked
  6674  0159D2  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;rtcc.c: 343: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6678  0159D4  0E00               	movlw	0
  6679  0159D6  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6680  0159D8  0E59               	movlw	89
  6681  0159DA  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6682  0159DC  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6683  0159DE  EC37  F0AB         	call	__rtcc_increment_bcd
  6684  0159E2  0100               	movlb	0	; () banked
  6685  0159E4  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;rtcc.c: 344: rtcc_set_seconds(seconds);
  6689  0159E6  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6690  0159E8  EC34  F0AE         	call	_rtcc_set_seconds
  6691  0159EC  0012               	return		;funcret
  6692  0159EE                     __end_of_rtcc_increment_seconds:
  6693                           	opt stack 0
  6694                           tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           intcon3	equ	0xFF0
  6699                           postinc0	equ	0xFEE
  6700                           wreg	equ	0xFE8
  6701                           postdec1	equ	0xFE5
  6702                           plusw1	equ	0xFE3
  6703                           fsr1h	equ	0xFE2
  6704                           fsr1l	equ	0xFE1
  6705                           postinc2	equ	0xFDE
  6706                           postdec2	equ	0xFDD
  6707                           plusw2	equ	0xFDB
  6708                           fsr2h	equ	0xFDA
  6709                           fsr2l	equ	0xFD9
  6710                           status	equ	0xFD8
  6711                           
  6712 ;; *************** function _rtcc_increment_month *****************
  6713 ;; Defined at:
  6714 ;;		line 188 in file "rtcc.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  month           1    8[BANK0 ] unsigned char 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;Total ram usage:        1 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:   12
  6735 ;; This function calls:
  6736 ;;		__rtcc_increment_bcd
  6737 ;;		_rtcc_get_month
  6738 ;;		_rtcc_set_month
  6739 ;; This function is called by:
  6740 ;;		__ui_encoder
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text12
  6745  0159EE                     __ptext12:
  6746                           	opt stack 0
  6747  0159EE                     _rtcc_increment_month:
  6748                           	opt stack 16
  6749                           
  6750                           ;rtcc.c: 190: uint8_t month = rtcc_get_month();
  6751                           
  6752                           ;incstack = 0
  6753  0159EE  EC17  F0AF         	call	_rtcc_get_month	;wreg free
  6754  0159F2  0100               	movlb	0	; () banked
  6755  0159F4  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;rtcc.c: 191: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  6759  0159F6  0E01               	movlw	1
  6760  0159F8  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6761  0159FA  0E12               	movlw	18
  6762  0159FC  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6763  0159FE  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6764  015A00  EC37  F0AB         	call	__rtcc_increment_bcd
  6765  015A04  0100               	movlb	0	; () banked
  6766  015A06  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;rtcc.c: 192: rtcc_set_month(month);
  6770  015A08  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6771  015A0A  EC40  F0AE         	call	_rtcc_set_month
  6772  015A0E  0012               	return		;funcret
  6773  015A10                     __end_of_rtcc_increment_month:
  6774                           	opt stack 0
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           intcon3	equ	0xFF0
  6780                           postinc0	equ	0xFEE
  6781                           wreg	equ	0xFE8
  6782                           postdec1	equ	0xFE5
  6783                           plusw1	equ	0xFE3
  6784                           fsr1h	equ	0xFE2
  6785                           fsr1l	equ	0xFE1
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           plusw2	equ	0xFDB
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function _rtcc_increment_minutes *****************
  6794 ;; Defined at:
  6795 ;;		line 302 in file "rtcc.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  minutes         1    8[BANK0 ] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2, status,0, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;Total ram usage:        1 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:   12
  6816 ;; This function calls:
  6817 ;;		__rtcc_increment_bcd
  6818 ;;		_rtcc_get_minutes
  6819 ;;		_rtcc_set_minutes
  6820 ;; This function is called by:
  6821 ;;		__ui_encoder
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text13
  6826  015A10                     __ptext13:
  6827                           	opt stack 0
  6828  015A10                     _rtcc_increment_minutes:
  6829                           	opt stack 16
  6830                           
  6831                           ;rtcc.c: 304: uint8_t minutes = rtcc_get_minutes();
  6832                           
  6833                           ;incstack = 0
  6834  015A10  EC1E  F0AF         	call	_rtcc_get_minutes	;wreg free
  6835  015A14  0100               	movlb	0	; () banked
  6836  015A16  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;rtcc.c: 305: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  6840  015A18  0E00               	movlw	0
  6841  015A1A  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6842  015A1C  0E59               	movlw	89
  6843  015A1E  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6844  015A20  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6845  015A22  EC37  F0AB         	call	__rtcc_increment_bcd
  6846  015A26  0100               	movlb	0	; () banked
  6847  015A28  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;rtcc.c: 306: rtcc_set_minutes(minutes);
  6851  015A2A  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6852  015A2C  EC4C  F0AE         	call	_rtcc_set_minutes
  6853  015A30  0012               	return		;funcret
  6854  015A32                     __end_of_rtcc_increment_minutes:
  6855                           	opt stack 0
  6856                           tblptru	equ	0xFF8
  6857                           tblptrh	equ	0xFF7
  6858                           tblptrl	equ	0xFF6
  6859                           tablat	equ	0xFF5
  6860                           intcon3	equ	0xFF0
  6861                           postinc0	equ	0xFEE
  6862                           wreg	equ	0xFE8
  6863                           postdec1	equ	0xFE5
  6864                           plusw1	equ	0xFE3
  6865                           fsr1h	equ	0xFE2
  6866                           fsr1l	equ	0xFE1
  6867                           postinc2	equ	0xFDE
  6868                           postdec2	equ	0xFDD
  6869                           plusw2	equ	0xFDB
  6870                           fsr2h	equ	0xFDA
  6871                           fsr2l	equ	0xFD9
  6872                           status	equ	0xFD8
  6873                           
  6874 ;; *************** function _rtcc_increment_hours *****************
  6875 ;; Defined at:
  6876 ;;		line 264 in file "rtcc.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;		None
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  hours           1    8[BANK0 ] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;Total ram usage:        1 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:   12
  6897 ;; This function calls:
  6898 ;;		__rtcc_increment_bcd
  6899 ;;		_rtcc_get_hours
  6900 ;;		_rtcc_set_hours
  6901 ;; This function is called by:
  6902 ;;		__ui_encoder
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text14
  6907  015A32                     __ptext14:
  6908                           	opt stack 0
  6909  015A32                     _rtcc_increment_hours:
  6910                           	opt stack 16
  6911                           
  6912                           ;rtcc.c: 266: uint8_t hours = rtcc_get_hours();
  6913                           
  6914                           ;incstack = 0
  6915  015A32  EC25  F0AF         	call	_rtcc_get_hours	;wreg free
  6916  015A36  0100               	movlb	0	; () banked
  6917  015A38  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;rtcc.c: 267: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  6921  015A3A  0E00               	movlw	0
  6922  015A3C  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6923  015A3E  0E23               	movlw	35
  6924  015A40  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6925  015A42  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  6926  015A44  EC37  F0AB         	call	__rtcc_increment_bcd
  6927  015A48  0100               	movlb	0	; () banked
  6928  015A4A  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;rtcc.c: 268: rtcc_set_hours(hours);
  6932  015A4C  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  6933  015A4E  EC58  F0AE         	call	_rtcc_set_hours
  6934  015A52  0012               	return		;funcret
  6935  015A54                     __end_of_rtcc_increment_hours:
  6936                           	opt stack 0
  6937                           tblptru	equ	0xFF8
  6938                           tblptrh	equ	0xFF7
  6939                           tblptrl	equ	0xFF6
  6940                           tablat	equ	0xFF5
  6941                           intcon3	equ	0xFF0
  6942                           postinc0	equ	0xFEE
  6943                           wreg	equ	0xFE8
  6944                           postdec1	equ	0xFE5
  6945                           plusw1	equ	0xFE3
  6946                           fsr1h	equ	0xFE2
  6947                           fsr1l	equ	0xFE1
  6948                           postinc2	equ	0xFDE
  6949                           postdec2	equ	0xFDD
  6950                           plusw2	equ	0xFDB
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8
  6954                           
  6955 ;; *************** function _rtcc_increment_day *****************
  6956 ;; Defined at:
  6957 ;;		line 226 in file "rtcc.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  day             1    8[BANK0 ] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6975 ;;Total ram usage:        1 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:   12
  6978 ;; This function calls:
  6979 ;;		__number_of_days
  6980 ;;		__rtcc_increment_bcd
  6981 ;;		_rtcc_get_day
  6982 ;;		_rtcc_set_day
  6983 ;; This function is called by:
  6984 ;;		__ui_encoder
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text15
  6989  015916                     __ptext15:
  6990                           	opt stack 0
  6991  015916                     _rtcc_increment_day:
  6992                           	opt stack 16
  6993                           
  6994                           ;rtcc.c: 228: uint8_t day = rtcc_get_day();
  6995                           
  6996                           ;incstack = 0
  6997  015916  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
  6998  01591A  0100               	movlb	0	; () banked
  6999  01591C  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;rtcc.c: 229: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7003  01591E  0E01               	movlw	1
  7004  015920  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7005  015922  ECFB  F0A1         	call	__number_of_days	;wreg free
  7006  015926  0100               	movlb	0	; () banked
  7007  015928  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7008  01592A  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7009  01592C  EC37  F0AB         	call	__rtcc_increment_bcd
  7010  015930  0100               	movlb	0	; () banked
  7011  015932  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;rtcc.c: 230: rtcc_set_day(day);
  7015  015934  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7016  015936  EC64  F0AE         	call	_rtcc_set_day
  7017  01593A  0012               	return		;funcret
  7018  01593C                     __end_of_rtcc_increment_day:
  7019                           	opt stack 0
  7020                           tblptru	equ	0xFF8
  7021                           tblptrh	equ	0xFF7
  7022                           tblptrl	equ	0xFF6
  7023                           tablat	equ	0xFF5
  7024                           intcon3	equ	0xFF0
  7025                           postinc0	equ	0xFEE
  7026                           wreg	equ	0xFE8
  7027                           postdec1	equ	0xFE5
  7028                           plusw1	equ	0xFE3
  7029                           fsr1h	equ	0xFE2
  7030                           fsr1l	equ	0xFE1
  7031                           postinc2	equ	0xFDE
  7032                           postdec2	equ	0xFDD
  7033                           plusw2	equ	0xFDB
  7034                           fsr2h	equ	0xFDA
  7035                           fsr2l	equ	0xFD9
  7036                           status	equ	0xFD8
  7037                           
  7038 ;; *************** function __rtcc_increment_bcd *****************
  7039 ;; Defined at:
  7040 ;;		line 34 in file "rtcc.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  value           1    wreg     unsigned char 
  7043 ;;  min             1    4[BANK0 ] unsigned char 
  7044 ;;  max             1    5[BANK0 ] unsigned char 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  value           1    7[BANK0 ] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      unsigned char 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;Total ram usage:        4 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:   10
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_rtcc_increment_year
  7067 ;;		_rtcc_increment_month
  7068 ;;		_rtcc_increment_day
  7069 ;;		_rtcc_increment_hours
  7070 ;;		_rtcc_increment_minutes
  7071 ;;		_rtcc_increment_seconds
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text16
  7076  01566E                     __ptext16:
  7077                           	opt stack 0
  7078  01566E                     __rtcc_increment_bcd:
  7079                           	opt stack 17
  7080                           
  7081                           ;incstack = 0
  7082                           ;__rtcc_increment_bcd@value stored from wreg
  7083  01566E  0100               	movlb	0	; () banked
  7084  015670  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7085                           
  7086                           ;rtcc.c: 36: if(value==max)
  7087  015672  0100               	movlb	0	; () banked
  7088  015674  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7089  015676  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7090  015678  A4D8               	btfss	status,2,c
  7091  01567A  D002               	goto	l2255
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;rtcc.c: 37: return min;
  7095  01567C  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7096  01567E  0012               	return	
  7097  015680                     l2255:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;rtcc.c: 38: ++value;
  7101                           
  7102                           ; BSR set to: 0
  7103  015680  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7104                           
  7105                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7106  015682  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7107  015686  0E0F               	movlw	15
  7108  015688  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7109  01568A  0E09               	movlw	9
  7110  01568C  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7111  01568E  D004               	goto	l2257
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;rtcc.c: 40: {;rtcc.c: 41: value += 0x10;
  7115  015690  0E10               	movlw	16
  7116  015692  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7117                           
  7118                           ;rtcc.c: 42: value &= 0xF0;
  7119  015694  0EF0               	movlw	240
  7120  015696  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7121  015698                     l2257:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;rtcc.c: 43: };rtcc.c: 44: return value;
  7125                           
  7126                           ; BSR set to: 0
  7127  015698  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7128  01569A  0012               	return	
  7129  01569C                     __end_of__rtcc_increment_bcd:
  7130                           	opt stack 0
  7131                           tblptru	equ	0xFF8
  7132                           tblptrh	equ	0xFF7
  7133                           tblptrl	equ	0xFF6
  7134                           tablat	equ	0xFF5
  7135                           intcon3	equ	0xFF0
  7136                           postinc0	equ	0xFEE
  7137                           wreg	equ	0xFE8
  7138                           postdec1	equ	0xFE5
  7139                           plusw1	equ	0xFE3
  7140                           fsr1h	equ	0xFE2
  7141                           fsr1l	equ	0xFE1
  7142                           postinc2	equ	0xFDE
  7143                           postdec2	equ	0xFDD
  7144                           plusw2	equ	0xFDB
  7145                           fsr2h	equ	0xFDA
  7146                           fsr2l	equ	0xFD9
  7147                           status	equ	0xFD8
  7148                           
  7149 ;; *************** function _rtcc_decrement_year *****************
  7150 ;; Defined at:
  7151 ;;		line 157 in file "rtcc.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  year            1    8[BANK0 ] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;Total ram usage:        1 bytes
  7170 ;; Hardware stack levels used:    1
  7171 ;; Hardware stack levels required when called:   12
  7172 ;; This function calls:
  7173 ;;		__rtcc_decrement_bcd
  7174 ;;		_rtcc_get_year
  7175 ;;		_rtcc_set_year
  7176 ;; This function is called by:
  7177 ;;		__ui_encoder
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text17
  7182  015A54                     __ptext17:
  7183                           	opt stack 0
  7184  015A54                     _rtcc_decrement_year:
  7185                           	opt stack 16
  7186                           
  7187                           ;rtcc.c: 159: uint8_t year = rtcc_get_year();
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;incstack = 0
  7191  015A54  EC09  F0AF         	call	_rtcc_get_year	;wreg free
  7192  015A58  0100               	movlb	0	; () banked
  7193  015A5A  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;rtcc.c: 160: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7197  015A5C  0E00               	movlw	0
  7198  015A5E  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7199  015A60  0E99               	movlw	153
  7200  015A62  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7201  015A64  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7202  015A66  EC4E  F0AB         	call	__rtcc_decrement_bcd
  7203  015A6A  0100               	movlb	0	; () banked
  7204  015A6C  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;rtcc.c: 161: rtcc_set_year(year);
  7208  015A6E  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7209  015A70  EC28  F0AE         	call	_rtcc_set_year
  7210  015A74  0012               	return		;funcret
  7211  015A76                     __end_of_rtcc_decrement_year:
  7212                           	opt stack 0
  7213                           tblptru	equ	0xFF8
  7214                           tblptrh	equ	0xFF7
  7215                           tblptrl	equ	0xFF6
  7216                           tablat	equ	0xFF5
  7217                           intcon3	equ	0xFF0
  7218                           postinc0	equ	0xFEE
  7219                           wreg	equ	0xFE8
  7220                           postdec1	equ	0xFE5
  7221                           plusw1	equ	0xFE3
  7222                           fsr1h	equ	0xFE2
  7223                           fsr1l	equ	0xFE1
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           plusw2	equ	0xFDB
  7227                           fsr2h	equ	0xFDA
  7228                           fsr2l	equ	0xFD9
  7229                           status	equ	0xFD8
  7230                           
  7231 ;; *************** function _rtcc_decrement_seconds *****************
  7232 ;; Defined at:
  7233 ;;		line 347 in file "rtcc.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  seconds         1    8[BANK0 ] unsigned char 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;Total ram usage:        1 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; Hardware stack levels required when called:   12
  7254 ;; This function calls:
  7255 ;;		__rtcc_decrement_bcd
  7256 ;;		_rtcc_get_seconds
  7257 ;;		_rtcc_set_seconds
  7258 ;; This function is called by:
  7259 ;;		__ui_encoder
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text18
  7264  015A76                     __ptext18:
  7265                           	opt stack 0
  7266  015A76                     _rtcc_decrement_seconds:
  7267                           	opt stack 16
  7268                           
  7269                           ;rtcc.c: 349: uint8_t seconds = rtcc_get_seconds();
  7270                           
  7271                           ;incstack = 0
  7272  015A76  EC10  F0AF         	call	_rtcc_get_seconds	;wreg free
  7273  015A7A  0100               	movlb	0	; () banked
  7274  015A7C  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;rtcc.c: 350: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7278  015A7E  0E00               	movlw	0
  7279  015A80  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7280  015A82  0E59               	movlw	89
  7281  015A84  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7282  015A86  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7283  015A88  EC4E  F0AB         	call	__rtcc_decrement_bcd
  7284  015A8C  0100               	movlb	0	; () banked
  7285  015A8E  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;rtcc.c: 351: rtcc_set_seconds(seconds);
  7289  015A90  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7290  015A92  EC34  F0AE         	call	_rtcc_set_seconds
  7291  015A96  0012               	return		;funcret
  7292  015A98                     __end_of_rtcc_decrement_seconds:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           intcon3	equ	0xFF0
  7299                           postinc0	equ	0xFEE
  7300                           wreg	equ	0xFE8
  7301                           postdec1	equ	0xFE5
  7302                           plusw1	equ	0xFE3
  7303                           fsr1h	equ	0xFE2
  7304                           fsr1l	equ	0xFE1
  7305                           postinc2	equ	0xFDE
  7306                           postdec2	equ	0xFDD
  7307                           plusw2	equ	0xFDB
  7308                           fsr2h	equ	0xFDA
  7309                           fsr2l	equ	0xFD9
  7310                           status	equ	0xFD8
  7311                           
  7312 ;; *************** function _rtcc_decrement_month *****************
  7313 ;; Defined at:
  7314 ;;		line 195 in file "rtcc.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  month           1    8[BANK0 ] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7331 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;Total ram usage:        1 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:   12
  7335 ;; This function calls:
  7336 ;;		__rtcc_decrement_bcd
  7337 ;;		_rtcc_get_month
  7338 ;;		_rtcc_set_month
  7339 ;; This function is called by:
  7340 ;;		__ui_encoder
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text19
  7345  015A98                     __ptext19:
  7346                           	opt stack 0
  7347  015A98                     _rtcc_decrement_month:
  7348                           	opt stack 16
  7349                           
  7350                           ;rtcc.c: 197: uint8_t month = rtcc_get_month();
  7351                           
  7352                           ;incstack = 0
  7353  015A98  EC17  F0AF         	call	_rtcc_get_month	;wreg free
  7354  015A9C  0100               	movlb	0	; () banked
  7355  015A9E  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;rtcc.c: 198: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7359  015AA0  0E01               	movlw	1
  7360  015AA2  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7361  015AA4  0E12               	movlw	18
  7362  015AA6  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7363  015AA8  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7364  015AAA  EC4E  F0AB         	call	__rtcc_decrement_bcd
  7365  015AAE  0100               	movlb	0	; () banked
  7366  015AB0  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;rtcc.c: 199: rtcc_set_month(month);
  7370  015AB2  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7371  015AB4  EC40  F0AE         	call	_rtcc_set_month
  7372  015AB8  0012               	return		;funcret
  7373  015ABA                     __end_of_rtcc_decrement_month:
  7374                           	opt stack 0
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           intcon3	equ	0xFF0
  7380                           postinc0	equ	0xFEE
  7381                           wreg	equ	0xFE8
  7382                           postdec1	equ	0xFE5
  7383                           plusw1	equ	0xFE3
  7384                           fsr1h	equ	0xFE2
  7385                           fsr1l	equ	0xFE1
  7386                           postinc2	equ	0xFDE
  7387                           postdec2	equ	0xFDD
  7388                           plusw2	equ	0xFDB
  7389                           fsr2h	equ	0xFDA
  7390                           fsr2l	equ	0xFD9
  7391                           status	equ	0xFD8
  7392                           
  7393 ;; *************** function _rtcc_decrement_minutes *****************
  7394 ;; Defined at:
  7395 ;;		line 309 in file "rtcc.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  minutes         1    8[BANK0 ] unsigned char 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;Total ram usage:        1 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:   12
  7416 ;; This function calls:
  7417 ;;		__rtcc_decrement_bcd
  7418 ;;		_rtcc_get_minutes
  7419 ;;		_rtcc_set_minutes
  7420 ;; This function is called by:
  7421 ;;		__ui_encoder
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text20
  7426  015ABA                     __ptext20:
  7427                           	opt stack 0
  7428  015ABA                     _rtcc_decrement_minutes:
  7429                           	opt stack 16
  7430                           
  7431                           ;rtcc.c: 311: uint8_t minutes = rtcc_get_minutes();
  7432                           
  7433                           ;incstack = 0
  7434  015ABA  EC1E  F0AF         	call	_rtcc_get_minutes	;wreg free
  7435  015ABE  0100               	movlb	0	; () banked
  7436  015AC0  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;rtcc.c: 312: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7440  015AC2  0E00               	movlw	0
  7441  015AC4  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7442  015AC6  0E59               	movlw	89
  7443  015AC8  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7444  015ACA  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7445  015ACC  EC4E  F0AB         	call	__rtcc_decrement_bcd
  7446  015AD0  0100               	movlb	0	; () banked
  7447  015AD2  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;rtcc.c: 313: rtcc_set_minutes(minutes);
  7451  015AD4  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7452  015AD6  EC4C  F0AE         	call	_rtcc_set_minutes
  7453  015ADA  0012               	return		;funcret
  7454  015ADC                     __end_of_rtcc_decrement_minutes:
  7455                           	opt stack 0
  7456                           tblptru	equ	0xFF8
  7457                           tblptrh	equ	0xFF7
  7458                           tblptrl	equ	0xFF6
  7459                           tablat	equ	0xFF5
  7460                           intcon3	equ	0xFF0
  7461                           postinc0	equ	0xFEE
  7462                           wreg	equ	0xFE8
  7463                           postdec1	equ	0xFE5
  7464                           plusw1	equ	0xFE3
  7465                           fsr1h	equ	0xFE2
  7466                           fsr1l	equ	0xFE1
  7467                           postinc2	equ	0xFDE
  7468                           postdec2	equ	0xFDD
  7469                           plusw2	equ	0xFDB
  7470                           fsr2h	equ	0xFDA
  7471                           fsr2l	equ	0xFD9
  7472                           status	equ	0xFD8
  7473                           
  7474 ;; *************** function _rtcc_decrement_hours *****************
  7475 ;; Defined at:
  7476 ;;		line 271 in file "rtcc.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  hours           1    8[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7494 ;;Total ram usage:        1 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:   12
  7497 ;; This function calls:
  7498 ;;		__rtcc_decrement_bcd
  7499 ;;		_rtcc_get_hours
  7500 ;;		_rtcc_set_hours
  7501 ;; This function is called by:
  7502 ;;		__ui_encoder
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text21
  7507  015ADC                     __ptext21:
  7508                           	opt stack 0
  7509  015ADC                     _rtcc_decrement_hours:
  7510                           	opt stack 16
  7511                           
  7512                           ;rtcc.c: 273: uint8_t hours = rtcc_get_hours();
  7513                           
  7514                           ;incstack = 0
  7515  015ADC  EC25  F0AF         	call	_rtcc_get_hours	;wreg free
  7516  015AE0  0100               	movlb	0	; () banked
  7517  015AE2  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;rtcc.c: 274: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7521  015AE4  0E00               	movlw	0
  7522  015AE6  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7523  015AE8  0E23               	movlw	35
  7524  015AEA  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7525  015AEC  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7526  015AEE  EC4E  F0AB         	call	__rtcc_decrement_bcd
  7527  015AF2  0100               	movlb	0	; () banked
  7528  015AF4  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;rtcc.c: 275: rtcc_set_hours(hours);
  7532  015AF6  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7533  015AF8  EC58  F0AE         	call	_rtcc_set_hours
  7534  015AFC  0012               	return		;funcret
  7535  015AFE                     __end_of_rtcc_decrement_hours:
  7536                           	opt stack 0
  7537                           tblptru	equ	0xFF8
  7538                           tblptrh	equ	0xFF7
  7539                           tblptrl	equ	0xFF6
  7540                           tablat	equ	0xFF5
  7541                           intcon3	equ	0xFF0
  7542                           postinc0	equ	0xFEE
  7543                           wreg	equ	0xFE8
  7544                           postdec1	equ	0xFE5
  7545                           plusw1	equ	0xFE3
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           postinc2	equ	0xFDE
  7549                           postdec2	equ	0xFDD
  7550                           plusw2	equ	0xFDB
  7551                           fsr2h	equ	0xFDA
  7552                           fsr2l	equ	0xFD9
  7553                           status	equ	0xFD8
  7554                           
  7555 ;; *************** function _rtcc_decrement_day *****************
  7556 ;; Defined at:
  7557 ;;		line 233 in file "rtcc.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  day             1    8[BANK0 ] unsigned char 
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;Total ram usage:        1 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:   12
  7578 ;; This function calls:
  7579 ;;		__number_of_days
  7580 ;;		__rtcc_decrement_bcd
  7581 ;;		_rtcc_get_day
  7582 ;;		_rtcc_set_day
  7583 ;; This function is called by:
  7584 ;;		__ui_encoder
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text22
  7589  01593C                     __ptext22:
  7590                           	opt stack 0
  7591  01593C                     _rtcc_decrement_day:
  7592                           	opt stack 16
  7593                           
  7594                           ;rtcc.c: 235: uint8_t day = rtcc_get_day();
  7595                           
  7596                           ;incstack = 0
  7597  01593C  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
  7598  015940  0100               	movlb	0	; () banked
  7599  015942  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;rtcc.c: 236: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7603  015944  0E01               	movlw	1
  7604  015946  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7605  015948  ECFB  F0A1         	call	__number_of_days	;wreg free
  7606  01594C  0100               	movlb	0	; () banked
  7607  01594E  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7608  015950  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7609  015952  EC4E  F0AB         	call	__rtcc_decrement_bcd
  7610  015956  0100               	movlb	0	; () banked
  7611  015958  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;rtcc.c: 237: rtcc_set_day(day);
  7615  01595A  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7616  01595C  EC64  F0AE         	call	_rtcc_set_day
  7617  015960  0012               	return		;funcret
  7618  015962                     __end_of_rtcc_decrement_day:
  7619                           	opt stack 0
  7620                           tblptru	equ	0xFF8
  7621                           tblptrh	equ	0xFF7
  7622                           tblptrl	equ	0xFF6
  7623                           tablat	equ	0xFF5
  7624                           intcon3	equ	0xFF0
  7625                           postinc0	equ	0xFEE
  7626                           wreg	equ	0xFE8
  7627                           postdec1	equ	0xFE5
  7628                           plusw1	equ	0xFE3
  7629                           fsr1h	equ	0xFE2
  7630                           fsr1l	equ	0xFE1
  7631                           postinc2	equ	0xFDE
  7632                           postdec2	equ	0xFDD
  7633                           plusw2	equ	0xFDB
  7634                           fsr2h	equ	0xFDA
  7635                           fsr2l	equ	0xFD9
  7636                           status	equ	0xFD8
  7637                           
  7638 ;; *************** function __rtcc_decrement_bcd *****************
  7639 ;; Defined at:
  7640 ;;		line 47 in file "rtcc.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  value           1    wreg     unsigned char 
  7643 ;;  min             1    4[BANK0 ] unsigned char 
  7644 ;;  max             1    5[BANK0 ] unsigned char 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  value           1    7[BANK0 ] unsigned char 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      unsigned char 
  7649 ;; Registers used:
  7650 ;;		wreg, status,2, status,0
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7660 ;;Total ram usage:        4 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; Hardware stack levels required when called:   10
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_rtcc_decrement_year
  7667 ;;		_rtcc_decrement_month
  7668 ;;		_rtcc_decrement_day
  7669 ;;		_rtcc_decrement_hours
  7670 ;;		_rtcc_decrement_minutes
  7671 ;;		_rtcc_decrement_seconds
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text23
  7676  01569C                     __ptext23:
  7677                           	opt stack 0
  7678  01569C                     __rtcc_decrement_bcd:
  7679                           	opt stack 17
  7680                           
  7681                           ;incstack = 0
  7682                           ;__rtcc_decrement_bcd@value stored from wreg
  7683  01569C  0100               	movlb	0	; () banked
  7684  01569E  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7685                           
  7686                           ;rtcc.c: 49: if(value==min)
  7687  0156A0  0100               	movlb	0	; () banked
  7688  0156A2  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7689  0156A4  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7690  0156A6  A4D8               	btfss	status,2,c
  7691  0156A8  D002               	goto	l2260
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;rtcc.c: 50: return max;
  7695  0156AA  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  7696  0156AC  0012               	return	
  7697  0156AE                     l2260:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;rtcc.c: 51: --value;
  7701                           
  7702                           ; BSR set to: 0
  7703  0156AE  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  7704                           
  7705                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  7706  0156B0  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  7707  0156B4  0E0F               	movlw	15
  7708  0156B6  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  7709  0156B8  0E09               	movlw	9
  7710  0156BA  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  7711  0156BC  D004               	goto	l2262
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;rtcc.c: 53: {;rtcc.c: 54: value &= 0xF0;
  7715  0156BE  0EF0               	movlw	240
  7716  0156C0  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7717                           
  7718                           ;rtcc.c: 55: value |= 0x09;
  7719  0156C2  0E09               	movlw	9
  7720  0156C4  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7721  0156C6                     l2262:
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;rtcc.c: 56: };rtcc.c: 57: return value;
  7725                           
  7726                           ; BSR set to: 0
  7727  0156C6  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  7728  0156C8  0012               	return	
  7729  0156CA                     __end_of__rtcc_decrement_bcd:
  7730                           	opt stack 0
  7731                           tblptru	equ	0xFF8
  7732                           tblptrh	equ	0xFF7
  7733                           tblptrl	equ	0xFF6
  7734                           tablat	equ	0xFF5
  7735                           intcon3	equ	0xFF0
  7736                           postinc0	equ	0xFEE
  7737                           wreg	equ	0xFE8
  7738                           postdec1	equ	0xFE5
  7739                           plusw1	equ	0xFE3
  7740                           fsr1h	equ	0xFE2
  7741                           fsr1l	equ	0xFE1
  7742                           postinc2	equ	0xFDE
  7743                           postdec2	equ	0xFDD
  7744                           plusw2	equ	0xFDB
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _system_init *****************
  7750 ;; Defined at:
  7751 ;;		line 250 in file "os.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  7756 ;;  temp           50    0        unsigned char [50]
  7757 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  7758 ;;  filename        9  104[BANK1 ] unsigned char [9]
  7759 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  7760 ;;  extension       4  122[BANK1 ] unsigned char [4]
  7761 ;;  file_number     1    0        unsigned char 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;Total ram usage:      130 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:   16
  7778 ;; This function calls:
  7779 ;;		__system_encoder_init
  7780 ;;		__system_timer0_init
  7781 ;;		_adc_init
  7782 ;;		_buck_init
  7783 ;;		_flash_init
  7784 ;;		_i2c_eeprom_read_calibration
  7785 ;;		_i2c_init
  7786 ;;		_log_start_new
  7787 ;;		_rtcc_init
  7788 ;;		_ui_init
  7789 ;; This function is called by:
  7790 ;;		_main
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text24
  7795  011B44                     __ptext24:
  7796                           	opt stack 0
  7797  011B44                     _system_init:
  7798                           	opt stack 14
  7799                           
  7800                           ;os.c: 252: char filename[9] = "TEST    ";
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;incstack = 0
  7804  011B44  EE22  F0D8         	lfsr	2,system_init@F7096
  7805  011B48  EE11  F068         	lfsr	1,system_init@filename
  7806  011B4C  0E08               	movlw	8
  7807  011B4E                     u22111:
  7808  011B4E  CFDB FFE3          	movff	plusw2,plusw1
  7809  011B52  06E8               	decf	wreg,f,c
  7810  011B54  E2FC               	bc	u22111
  7811                           
  7812                           ;os.c: 253: char extension[4] = "TXT";
  7813  011B56  C2E5  F17A         	movff	system_init@F7098,system_init@extension
  7814  011B5A  C2E6  F17B         	movff	system_init@F7098+1,system_init@extension+1
  7815  011B5E  C2E7  F17C         	movff	system_init@F7098+2,system_init@extension+2
  7816  011B62  C2E8  F17D         	movff	system_init@F7098+3,system_init@extension+3
  7817                           
  7818                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  7819  011B66  EE23  F0F6         	lfsr	2,system_init@F7100
  7820  011B6A  EE11  F071         	lfsr	1,system_init@filename2
  7821  011B6E  0E08               	movlw	8
  7822  011B70                     u22121:
  7823  011B70  CFDB FFE3          	movff	plusw2,plusw1
  7824  011B74  06E8               	decf	wreg,f,c
  7825  011B76  E2FC               	bc	u22121
  7826                           
  7827                           ;os.c: 255: char extension2[4] = "TXT";
  7828  011B78  C2E1  F17E         	movff	system_init@F7102,system_init@extension2
  7829  011B7C  C2E2  F17F         	movff	system_init@F7102+1,system_init@extension2+1
  7830  011B80  C2E3  F180         	movff	system_init@F7102+2,system_init@extension2+2
  7831  011B84  C2E4  F181         	movff	system_init@F7102+3,system_init@extension2+3
  7832                           
  7833                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  7834  011B88  EE24  F000         	lfsr	2,system_init@F7104
  7835  011B8C  EE11  F000         	lfsr	1,system_init@appendtext
  7836  011B90  0E67               	movlw	103
  7837  011B92                     u22131:
  7838  011B92  CFDB FFE3          	movff	plusw2,plusw1
  7839  011B96  06E8               	decf	wreg,f,c
  7840  011B98  E2FC               	bc	u22131
  7841                           
  7842                           ;os.c: 257: uint8_t file_number;;os.c: 258: uint8_t temp[50];;os.c: 261: TRISCbits.TRISC
      +                          2 = 0;
  7843  011B9A  9494               	bcf	3988,2,c	;volatile
  7844                           
  7845                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  7846  011B9C  9095               	bcf	3989,0,c	;volatile
  7847                           
  7848                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  7849  011B9E  9695               	bcf	3989,3,c	;volatile
  7850                           
  7851                           ;os.c: 265: LATDbits.LD3 = 0;
  7852  011BA0  968C               	bcf	3980,3,c	;volatile
  7853                           
  7854                           ;os.c: 268: LATDbits.LD1 = 0;
  7855  011BA2  928C               	bcf	3980,1,c	;volatile
  7856                           
  7857                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  7858  011BA4  9295               	bcf	3989,1,c	;volatile
  7859                           
  7860                           ;os.c: 272: LATBbits.LB1 = 0;
  7861  011BA6  928A               	bcf	3978,1,c	;volatile
  7862                           
  7863                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  7864  011BA8  9293               	bcf	3987,1,c	;volatile
  7865                           
  7866                           ;os.c: 274: LATBbits.LB2 = 0;
  7867  011BAA  948A               	bcf	3978,2,c	;volatile
  7868                           
  7869                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  7870  011BAC  9493               	bcf	3987,2,c	;volatile
  7871                           
  7872                           ;os.c: 276: LATBbits.LB3 = 0;
  7873  011BAE  968A               	bcf	3978,3,c	;volatile
  7874                           
  7875                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  7876  011BB0  9693               	bcf	3987,3,c	;volatile
  7877                           
  7878                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  7879  011BB2  8C95               	bsf	3989,6,c	;volatile
  7880                           
  7881                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  7882  011BB4  9895               	bcf	3989,4,c	;volatile
  7883                           
  7884                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  7885  011BB6  9A95               	bcf	3989,5,c	;volatile
  7886                           
  7887                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  7888  011BB8  9E95               	bcf	3989,7,c	;volatile
  7889                           
  7890                           ;os.c: 285: LATDbits.LD7 = 1;
  7891  011BBA  8E8C               	bsf	3980,7,c	;volatile
  7892                           
  7893                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  7894  011BBC  8692               	bsf	3986,3,c	;volatile
  7895                           
  7896                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  7897  011BBE  010F               	movlb	15	; () banked
  7898  011BC0  9748               	bcf	72,3,b	;volatile
  7899                           
  7900                           ; BSR set to: 15
  7901                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  7902  011BC2  8093               	bsf	3987,0,c	;volatile
  7903                           
  7904                           ; BSR set to: 15
  7905                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  7906  011BC4  9949               	bcf	73,4,b	;volatile
  7907                           
  7908                           ; BSR set to: 15
  7909                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  7910  011BC6  8292               	bsf	3986,1,c	;volatile
  7911                           
  7912                           ; BSR set to: 15
  7913                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  7914  011BC8  9348               	bcf	72,1,b	;volatile
  7915                           
  7916                           ; BSR set to: 15
  7917                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  7918  011BCA  8492               	bsf	3986,2,c	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  7922  011BCC  9548               	bcf	72,2,b	;volatile
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;os.c: 298: LATCbits.LC7 = 0;
  7926  011BCE  9E8B               	bcf	3979,7,c	;volatile
  7927                           
  7928                           ; BSR set to: 15
  7929                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  7930  011BD0  9E94               	bcf	3988,7,c	;volatile
  7931                           
  7932                           ; BSR set to: 15
  7933                           ;os.c: 300: LATEbits.LE2 = 1;
  7934  011BD2  848D               	bsf	3981,2,c	;volatile
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  7938  011BD4  9496               	bcf	3990,2,c	;volatile
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;os.c: 302: LATEbits.LE1 = 1;
  7942  011BD6  828D               	bsf	3981,1,c	;volatile
  7943                           
  7944                           ; BSR set to: 15
  7945                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  7946  011BD8  9296               	bcf	3990,1,c	;volatile
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;os.c: 304: LATEbits.LE0 = 1;
  7950  011BDA  808D               	bsf	3981,0,c	;volatile
  7951                           
  7952                           ; BSR set to: 15
  7953                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  7954  011BDC  9096               	bcf	3990,0,c	;volatile
  7955                           
  7956                           ; BSR set to: 15
  7957                           ;os.c: 306: LATAbits.LA5 = 1;
  7958  011BDE  8A89               	bsf	3977,5,c	;volatile
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  7962  011BE0  9A92               	bcf	3986,5,c	;volatile
  7963                           
  7964                           ; BSR set to: 15
  7965                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  7966  011BE2  8092               	bsf	3986,0,c	;volatile
  7967                           
  7968                           ; BSR set to: 15
  7969                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  7970  011BE4  8148               	bsf	72,0,b	;volatile
  7971                           
  7972                           ; BSR set to: 15
  7973                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  7974  011BE6  8C93               	bsf	3987,6,c	;volatile
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  7978  011BE8  8E93               	bsf	3987,7,c	;volatile
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  7982  011BEA  0E02               	movlw	2
  7983  011BEC  0102               	movlb	2	; () banked
  7984  011BEE  6F00               	movwf	_os& (0+255),b	;volatile
  7985                           
  7986                           ; BSR set to: 2
  7987                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  7988  011BF0  0E01               	movlw	1
  7989  011BF2  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  7990                           
  7991                           ; BSR set to: 2
  7992                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  7993  011BF4  0E00               	movlw	0
  7994  011BF6  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  7995                           
  7996                           ; BSR set to: 2
  7997                           ;os.c: 336: os.buckDutyCycle = 0;
  7998  011BF8  0E00               	movlw	0
  7999  011BFA  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8000                           
  8001                           ; BSR set to: 2
  8002                           ;os.c: 337: os.buckLastStep = -1;
  8003  011BFC  6904               	setf	(_os+4)& (0+255),b	;volatile
  8004                           
  8005                           ; BSR set to: 2
  8006                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8007  011BFE  0E00               	movlw	0
  8008  011C00  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8009                           
  8010                           ; BSR set to: 2
  8011                           ;os.c: 341: os.output_voltage = 13000;
  8012  011C02  0E32               	movlw	50
  8013  011C04  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8014  011C06  0EC8               	movlw	200
  8015  011C08  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8016                           
  8017                           ; BSR set to: 2
  8018                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8019  011C0A  909E               	bcf	3998,0,c	;volatile
  8020                           
  8021                           ; BSR set to: 2
  8022                           ;os.c: 347: TMR1H = 0xFC;
  8023  011C0C  0EFC               	movlw	252
  8024  011C0E  6ECF               	movwf	4047,c	;volatile
  8025                           
  8026                           ; BSR set to: 2
  8027                           ;os.c: 348: TMR1L = 0x00;
  8028  011C10  0E00               	movlw	0
  8029  011C12  6ECE               	movwf	4046,c	;volatile
  8030                           
  8031                           ; BSR set to: 2
  8032                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8033  011C14  80CD               	bsf	4045,0,c	;volatile
  8034                           
  8035                           ; BSR set to: 2
  8036                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8037  011C16  86CD               	bsf	4045,3,c	;volatile
  8038  011C18                     
  8039                           ; BSR set to: 2
  8040  011C18  A09E               	btfss	3998,0,c	;volatile
  8041  011C1A  D7FE               	goto	l1391
  8042                           
  8043                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8044  011C1C  90CD               	bcf	4045,0,c	;volatile
  8045                           
  8046                           ;os.c: 359: i2c_init();
  8047  011C1E  EC33  F0AF         	call	_i2c_init	;wreg free
  8048                           
  8049                           ;os.c: 361: ui_init();
  8050  011C22  ECA8  F0AE         	call	_ui_init	;wreg free
  8051                           
  8052                           ;os.c: 364: adc_init();
  8053  011C26  ECBF  F0AD         	call	_adc_init	;wreg free
  8054                           
  8055                           ;os.c: 367: rtcc_init();
  8056  011C2A  ECE9  F0AD         	call	_rtcc_init	;wreg free
  8057                           
  8058                           ;os.c: 370: i2c_eeprom_read_calibration();
  8059  011C2E  ECEB  F089         	call	_i2c_eeprom_read_calibration	;wreg free
  8060                           
  8061                           ;os.c: 385: _system_timer0_init();
  8062  011C32  EC4E  F0A9         	call	__system_timer0_init	;wreg free
  8063                           
  8064                           ;os.c: 394: _system_encoder_init();
  8065  011C36  EC6E  F0A9         	call	__system_encoder_init	;wreg free
  8066                           
  8067                           ;os.c: 396: flash_init();
  8068  011C3A  ECA5  F0A8         	call	_flash_init	;wreg free
  8069                           
  8070                           ;os.c: 430: buck_init();
  8071  011C3E  EC02  F0AF         	call	_buck_init	;wreg free
  8072                           
  8073                           ;os.c: 433: log_start_new();
  8074  011C42  ECB3  F093         	call	_log_start_new	;wreg free
  8075  011C46  0012               	return		;funcret
  8076  011C48                     __end_of_system_init:
  8077                           	opt stack 0
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           intcon3	equ	0xFF0
  8083                           postinc0	equ	0xFEE
  8084                           wreg	equ	0xFE8
  8085                           postdec1	equ	0xFE5
  8086                           plusw1	equ	0xFE3
  8087                           fsr1h	equ	0xFE2
  8088                           fsr1l	equ	0xFE1
  8089                           postinc2	equ	0xFDE
  8090                           postdec2	equ	0xFDD
  8091                           plusw2	equ	0xFDB
  8092                           fsr2h	equ	0xFDA
  8093                           fsr2l	equ	0xFD9
  8094                           status	equ	0xFD8
  8095                           
  8096 ;; *************** function _ui_init *****************
  8097 ;; Defined at:
  8098 ;;		line 325 in file "ui.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;		None
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;		None
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;Total ram usage:        0 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; Hardware stack levels required when called:   10
  8119 ;; This function calls:
  8120 ;;		Nothing
  8121 ;; This function is called by:
  8122 ;;		_system_init
  8123 ;;		_ui_run
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text25
  8128  015D50                     __ptext25:
  8129                           	opt stack 0
  8130  015D50                     _ui_init:
  8131                           	opt stack 19
  8132                           
  8133                           ;ui.c: 327: system_ui_inactive_count = 0;
  8134                           
  8135                           ;incstack = 0
  8136  015D50  0E00               	movlw	0
  8137  015D52  0101               	movlb	1	; () banked
  8138  015D54  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8139  015D56  0E00               	movlw	0
  8140  015D58  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  8141                           
  8142                           ; BSR set to: 1
  8143                           ;ui.c: 329: LATCbits.LC2 = 1;
  8144  015D5A  848B               	bsf	3979,2,c	;volatile
  8145                           
  8146                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8147  015D5C  0E01               	movlw	1
  8148  015D5E  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  8149                           
  8150                           ; BSR set to: 1
  8151  015D60  0012               	return		;funcret
  8152  015D62                     __end_of_ui_init:
  8153                           	opt stack 0
  8154                           tblptru	equ	0xFF8
  8155                           tblptrh	equ	0xFF7
  8156                           tblptrl	equ	0xFF6
  8157                           tablat	equ	0xFF5
  8158                           intcon3	equ	0xFF0
  8159                           postinc0	equ	0xFEE
  8160                           wreg	equ	0xFE8
  8161                           postdec1	equ	0xFE5
  8162                           plusw1	equ	0xFE3
  8163                           fsr1h	equ	0xFE2
  8164                           fsr1l	equ	0xFE1
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           plusw2	equ	0xFDB
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function _rtcc_init *****************
  8173 ;; Defined at:
  8174 ;;		line 105 in file "rtcc.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:   15
  8195 ;; This function calls:
  8196 ;;		_rtcc_read_eeprom
  8197 ;; This function is called by:
  8198 ;;		_system_init
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text26
  8203  015BD2                     __ptext26:
  8204                           	opt stack 0
  8205  015BD2                     _rtcc_init:
  8206                           	opt stack 14
  8207                           
  8208                           ;rtcc.c: 107: EECON2 = 0x55;
  8209                           
  8210                           ; BSR set to: 1
  8211                           ;incstack = 0
  8212  015BD2  0E55               	movlw	85
  8213  015BD4  6EA7               	movwf	4007,c	;volsfr
  8214                           
  8215                           ;rtcc.c: 108: EECON2 = 0xAA;
  8216  015BD6  0EAA               	movlw	170
  8217  015BD8  6EA7               	movwf	4007,c	;volsfr
  8218                           
  8219                           ;rtcc.c: 109: RTCCFGbits.RTCWREN = 1;
  8220  015BDA  010F               	movlb	15	; () banked
  8221  015BDC  8B3F               	bsf	63,5,b	;volatile
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;rtcc.c: 110: RTCCFGbits.RTCEN = 1;
  8225  015BDE  8F3F               	bsf	63,7,b	;volatile
  8226                           
  8227                           ; BSR set to: 15
  8228                           ;rtcc.c: 111: RTCCFGbits.RTCOE = 0;
  8229  015BE0  953F               	bcf	63,2,b	;volatile
  8230                           
  8231                           ;rtcc.c: 112: RTCCAL = 0x00;
  8232  015BE2  0E00               	movlw	0
  8233  015BE4  6F3E               	movwf	62,b	;volatile
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;rtcc.c: 115: rtcc_read_eeprom();
  8237  015BE6  EC62  F086         	call	_rtcc_read_eeprom	;wreg free
  8238  015BEA  0012               	return		;funcret
  8239  015BEC                     __end_of_rtcc_init:
  8240                           	opt stack 0
  8241                           tblptru	equ	0xFF8
  8242                           tblptrh	equ	0xFF7
  8243                           tblptrl	equ	0xFF6
  8244                           tablat	equ	0xFF5
  8245                           intcon3	equ	0xFF0
  8246                           postinc0	equ	0xFEE
  8247                           wreg	equ	0xFE8
  8248                           postdec1	equ	0xFE5
  8249                           plusw1	equ	0xFE3
  8250                           fsr1h	equ	0xFE2
  8251                           fsr1l	equ	0xFE1
  8252                           postinc2	equ	0xFDE
  8253                           postdec2	equ	0xFDD
  8254                           plusw2	equ	0xFDB
  8255                           fsr2h	equ	0xFDA
  8256                           fsr2l	equ	0xFD9
  8257                           status	equ	0xFD8
  8258                           
  8259 ;; *************** function _rtcc_read_eeprom *****************
  8260 ;; Defined at:
  8261 ;;		line 354 in file "rtcc.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  date            6   44[BANK0 ] unsigned char [6]
  8266 ;;  buffer          1   50[BANK0 ] unsigned char 
  8267 ;;  error_found     1   43[BANK0 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;Total ram usage:        8 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:   14
  8284 ;; This function calls:
  8285 ;;		__rtcc_verify_bcd
  8286 ;;		_i2c_eeprom_read
  8287 ;;		_rtcc_correct_day
  8288 ;;		_rtcc_get_day
  8289 ;;		_rtcc_set_day
  8290 ;;		_rtcc_set_hours
  8291 ;;		_rtcc_set_minutes
  8292 ;;		_rtcc_set_month
  8293 ;;		_rtcc_set_seconds
  8294 ;;		_rtcc_set_year
  8295 ;;		_rtcc_write_eeprom
  8296 ;; This function is called by:
  8297 ;;		_rtcc_init
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text27
  8302  010CC4                     __ptext27:
  8303                           	opt stack 0
  8304  010CC4                     _rtcc_read_eeprom:
  8305                           	opt stack 14
  8306                           
  8307                           ;rtcc.c: 356: uint8_t date[6];;rtcc.c: 357: uint8_t buffer;;rtcc.c: 358: uint8_t error_f
      +                          ound = 0;
  8308                           
  8309                           ;incstack = 0
  8310  010CC4  0E00               	movlw	0
  8311  010CC6  0100               	movlb	0	; () banked
  8312  010CC8  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;rtcc.c: 361: i2c_eeprom_read(0x040, &date[0], 6);
  8316  010CCA  0E00               	movlw	0
  8317  010CCC  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8318  010CCE  0E40               	movlw	64
  8319  010CD0  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8320  010CD2  0E8C               	movlw	low rtcc_read_eeprom@date
  8321  010CD4  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8322  010CD6  0E00               	movlw	high rtcc_read_eeprom@date
  8323  010CD8  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8324  010CDA  0E06               	movlw	6
  8325  010CDC  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8326  010CDE  EC84  F0A6         	call	_i2c_eeprom_read	;wreg free
  8327                           
  8328                           ;rtcc.c: 367: buffer = _rtcc_verify_bcd(date[0], 0x00, 0x99);
  8329  010CE2  0E00               	movlw	0
  8330  010CE4  0100               	movlb	0	; () banked
  8331  010CE6  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8332  010CE8  0E99               	movlw	153
  8333  010CEA  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8334  010CEC  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8335  010CEE  EC82  F0A8         	call	__rtcc_verify_bcd
  8336  010CF2  0100               	movlb	0	; () banked
  8337  010CF4  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;rtcc.c: 368: if(buffer != date[0])
  8341  010CF6  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8342  010CF8  198C               	xorwf	rtcc_read_eeprom@date& (0+255),w,b
  8343  010CFA  B4D8               	btfsc	status,2,c
  8344  010CFC  D004               	goto	l2396
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;rtcc.c: 369: {;rtcc.c: 370: date[0] = buffer;
  8348  010CFE  C092  F08C         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;rtcc.c: 371: error_found = 1;
  8352  010D02  0E01               	movlw	1
  8353  010D04  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8354  010D06                     l2396:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;rtcc.c: 372: };rtcc.c: 373: rtcc_set_year(date[0]);
  8358                           
  8359                           ; BSR set to: 0
  8360  010D06  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8361  010D08  EC28  F0AE         	call	_rtcc_set_year
  8362                           
  8363                           ;rtcc.c: 376: buffer = _rtcc_verify_bcd(date[1], 0x01, 0x12);
  8364  010D0C  0E01               	movlw	1
  8365  010D0E  0100               	movlb	0	; () banked
  8366  010D10  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8367  010D12  0E12               	movlw	18
  8368  010D14  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8369  010D16  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8370  010D18  EC82  F0A8         	call	__rtcc_verify_bcd
  8371  010D1C  0100               	movlb	0	; () banked
  8372  010D1E  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8373                           
  8374                           ;rtcc.c: 377: if(buffer != date[1])
  8375  010D20  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8376  010D22  198D               	xorwf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8377  010D24  B4D8               	btfsc	status,2,c
  8378  010D26  D004               	goto	l2397
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;rtcc.c: 378: {;rtcc.c: 379: date[1] = buffer;
  8382  010D28  C092  F08D         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+1
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;rtcc.c: 380: error_found = 1;
  8386  010D2C  0E01               	movlw	1
  8387  010D2E  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8388  010D30                     l2397:
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;rtcc.c: 381: };rtcc.c: 382: rtcc_set_month(date[1]);
  8392                           
  8393                           ; BSR set to: 0
  8394  010D30  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8395  010D32  EC40  F0AE         	call	_rtcc_set_month
  8396                           
  8397                           ;rtcc.c: 385: buffer = _rtcc_verify_bcd(date[2], 0x01, 0x31);
  8398  010D36  0E01               	movlw	1
  8399  010D38  0100               	movlb	0	; () banked
  8400  010D3A  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8401  010D3C  0E31               	movlw	49
  8402  010D3E  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8403  010D40  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8404  010D42  EC82  F0A8         	call	__rtcc_verify_bcd
  8405  010D46  0100               	movlb	0	; () banked
  8406  010D48  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8407                           
  8408                           ;rtcc.c: 386: if(buffer != date[2])
  8409  010D4A  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8410  010D4C  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8411  010D4E  B4D8               	btfsc	status,2,c
  8412  010D50  D004               	goto	l2398
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;rtcc.c: 387: {;rtcc.c: 388: date[2] = buffer;
  8416  010D52  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;rtcc.c: 389: error_found = 1;
  8420  010D56  0E01               	movlw	1
  8421  010D58  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8422  010D5A                     l2398:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;rtcc.c: 390: };rtcc.c: 391: rtcc_set_day(date[2]);
  8426                           
  8427                           ; BSR set to: 0
  8428  010D5A  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8429  010D5C  EC64  F0AE         	call	_rtcc_set_day
  8430                           
  8431                           ;rtcc.c: 394: rtcc_correct_day();
  8432  010D60  EC90  F0AD         	call	_rtcc_correct_day	;wreg free
  8433                           
  8434                           ;rtcc.c: 395: buffer = rtcc_get_day();
  8435  010D64  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
  8436  010D68  0100               	movlb	0	; () banked
  8437  010D6A  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;rtcc.c: 396: if(buffer != date[2])
  8441  010D6C  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8442  010D6E  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8443  010D70  B4D8               	btfsc	status,2,c
  8444  010D72  D004               	goto	l2399
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;rtcc.c: 397: {;rtcc.c: 398: date[2] = buffer;
  8448  010D74  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;rtcc.c: 399: error_found = 1;
  8452  010D78  0E01               	movlw	1
  8453  010D7A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8454  010D7C                     l2399:
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;rtcc.c: 400: };rtcc.c: 403: buffer = _rtcc_verify_bcd(date[3], 0x00, 0x23);
  8458                           
  8459                           ; BSR set to: 0
  8460  010D7C  0E00               	movlw	0
  8461  010D7E  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8462  010D80  0E23               	movlw	35
  8463  010D82  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8464  010D84  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8465  010D86  EC82  F0A8         	call	__rtcc_verify_bcd
  8466  010D8A  0100               	movlb	0	; () banked
  8467  010D8C  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8468                           
  8469                           ; BSR set to: 0
  8470                           ;rtcc.c: 404: if(buffer != date[3])
  8471  010D8E  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8472  010D90  198F               	xorwf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8473  010D92  B4D8               	btfsc	status,2,c
  8474  010D94  D004               	goto	l2400
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;rtcc.c: 405: {;rtcc.c: 406: date[3] = buffer;
  8478  010D96  C092  F08F         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+3
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;rtcc.c: 407: error_found = 1;
  8482  010D9A  0E01               	movlw	1
  8483  010D9C  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8484  010D9E                     l2400:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;rtcc.c: 408: };rtcc.c: 409: rtcc_set_hours(date[3]);
  8488                           
  8489                           ; BSR set to: 0
  8490  010D9E  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8491  010DA0  EC58  F0AE         	call	_rtcc_set_hours
  8492                           
  8493                           ;rtcc.c: 412: buffer = _rtcc_verify_bcd(date[4], 0x00, 0x59);
  8494  010DA4  0E00               	movlw	0
  8495  010DA6  0100               	movlb	0	; () banked
  8496  010DA8  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8497  010DAA  0E59               	movlw	89
  8498  010DAC  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8499  010DAE  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8500  010DB0  EC82  F0A8         	call	__rtcc_verify_bcd
  8501  010DB4  0100               	movlb	0	; () banked
  8502  010DB6  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8503                           
  8504                           ;rtcc.c: 413: if(buffer != date[4])
  8505  010DB8  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8506  010DBA  1990               	xorwf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8507  010DBC  B4D8               	btfsc	status,2,c
  8508  010DBE  D004               	goto	l2401
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;rtcc.c: 414: {;rtcc.c: 415: date[4] = buffer;
  8512  010DC0  C092  F090         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+4
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;rtcc.c: 416: error_found = 1;
  8516  010DC4  0E01               	movlw	1
  8517  010DC6  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8518  010DC8                     l2401:
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;rtcc.c: 417: };rtcc.c: 418: rtcc_set_minutes(date[4]);
  8522                           
  8523                           ; BSR set to: 0
  8524  010DC8  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8525  010DCA  EC4C  F0AE         	call	_rtcc_set_minutes
  8526                           
  8527                           ;rtcc.c: 421: buffer = _rtcc_verify_bcd(date[5], 0x00, 0x59);
  8528  010DCE  0E00               	movlw	0
  8529  010DD0  0100               	movlb	0	; () banked
  8530  010DD2  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8531  010DD4  0E59               	movlw	89
  8532  010DD6  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8533  010DD8  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8534  010DDA  EC82  F0A8         	call	__rtcc_verify_bcd
  8535  010DDE  0100               	movlb	0	; () banked
  8536  010DE0  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8537                           
  8538                           ;rtcc.c: 422: if(buffer != date[5])
  8539  010DE2  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8540  010DE4  1991               	xorwf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8541  010DE6  B4D8               	btfsc	status,2,c
  8542  010DE8  D004               	goto	l2402
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;rtcc.c: 423: {;rtcc.c: 424: date[5] = buffer;
  8546  010DEA  C092  F091         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+5
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;rtcc.c: 425: error_found = 1;
  8550  010DEE  0E01               	movlw	1
  8551  010DF0  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8552  010DF2                     l2402:
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;rtcc.c: 426: };rtcc.c: 427: rtcc_set_seconds(date[5]);
  8556                           
  8557                           ; BSR set to: 0
  8558  010DF2  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8559  010DF4  EC34  F0AE         	call	_rtcc_set_seconds
  8560                           
  8561                           ;rtcc.c: 430: if(error_found)
  8562  010DF8  0100               	movlb	0	; () banked
  8563  010DFA  518B               	movf	rtcc_read_eeprom@error_found& (0+255),w,b
  8564  010DFC  B4D8               	btfsc	status,2,c
  8565  010DFE  0012               	return	
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;rtcc.c: 431: {;rtcc.c: 432: rtcc_write_eeprom();
  8569  010E00  EC38  F0A8         	call	_rtcc_write_eeprom	;wreg free
  8570  010E04  0012               	return	
  8571  010E06                     __end_of_rtcc_read_eeprom:
  8572                           	opt stack 0
  8573                           tblptru	equ	0xFF8
  8574                           tblptrh	equ	0xFF7
  8575                           tblptrl	equ	0xFF6
  8576                           tablat	equ	0xFF5
  8577                           intcon3	equ	0xFF0
  8578                           postinc0	equ	0xFEE
  8579                           wreg	equ	0xFE8
  8580                           postdec1	equ	0xFE5
  8581                           plusw1	equ	0xFE3
  8582                           fsr1h	equ	0xFE2
  8583                           fsr1l	equ	0xFE1
  8584                           postinc2	equ	0xFDE
  8585                           postdec2	equ	0xFDD
  8586                           plusw2	equ	0xFDB
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8
  8590                           
  8591 ;; *************** function _rtcc_correct_day *****************
  8592 ;; Defined at:
  8593 ;;		line 118 in file "rtcc.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  max             1    5[BANK0 ] unsigned char 
  8598 ;;  day             1    4[BANK0 ] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8609 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;Total ram usage:        2 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:   12
  8615 ;; This function calls:
  8616 ;;		__number_of_days
  8617 ;;		_rtcc_get_day
  8618 ;;		_rtcc_set_day
  8619 ;; This function is called by:
  8620 ;;		__ui_encoder
  8621 ;;		_rtcc_read_eeprom
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text28
  8626  015B20                     __ptext28:
  8627                           	opt stack 0
  8628  015B20                     _rtcc_correct_day:
  8629                           	opt stack 16
  8630                           
  8631                           ;rtcc.c: 120: uint8_t day = rtcc_get_day();
  8632                           
  8633                           ;incstack = 0
  8634  015B20  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
  8635  015B24  0100               	movlb	0	; () banked
  8636  015B26  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;rtcc.c: 121: uint8_t max = _number_of_days();
  8640  015B28  ECFB  F0A1         	call	__number_of_days	;wreg free
  8641  015B2C  0100               	movlb	0	; () banked
  8642  015B2E  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;rtcc.c: 122: if(day>max)
  8646  015B30  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  8647  015B32  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  8648  015B34  B0D8               	btfsc	status,0,c
  8649  015B36  0012               	return	
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;rtcc.c: 123: rtcc_set_day(max);
  8653  015B38  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  8654  015B3A  EC64  F0AE         	call	_rtcc_set_day
  8655  015B3E  0012               	return	
  8656  015B40                     __end_of_rtcc_correct_day:
  8657                           	opt stack 0
  8658                           tblptru	equ	0xFF8
  8659                           tblptrh	equ	0xFF7
  8660                           tblptrl	equ	0xFF6
  8661                           tablat	equ	0xFF5
  8662                           intcon3	equ	0xFF0
  8663                           postinc0	equ	0xFEE
  8664                           wreg	equ	0xFE8
  8665                           postdec1	equ	0xFE5
  8666                           plusw1	equ	0xFE3
  8667                           fsr1h	equ	0xFE2
  8668                           fsr1l	equ	0xFE1
  8669                           postinc2	equ	0xFDE
  8670                           postdec2	equ	0xFDD
  8671                           plusw2	equ	0xFDB
  8672                           fsr2h	equ	0xFDA
  8673                           fsr2l	equ	0xFD9
  8674                           status	equ	0xFD8
  8675                           
  8676 ;; *************** function __number_of_days *****************
  8677 ;; Defined at:
  8678 ;;		line 60 in file "rtcc.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;		None
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;  month           1    3[BANK0 ] unsigned char 
  8683 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  8684 ;;  year            1    1[BANK0 ] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;Total ram usage:        4 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:   11
  8701 ;; This function calls:
  8702 ;;		_rtcc_get_month
  8703 ;;		_rtcc_get_year
  8704 ;; This function is called by:
  8705 ;;		_rtcc_correct_day
  8706 ;;		_rtcc_increment_day
  8707 ;;		_rtcc_decrement_day
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text29
  8712  0143F6                     __ptext29:
  8713                           	opt stack 0
  8714  0143F6                     __number_of_days:
  8715                           	opt stack 16
  8716                           
  8717                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  8718                           
  8719                           ;incstack = 0
  8720  0143F6  EC17  F0AF         	call	_rtcc_get_month	;wreg free
  8721  0143FA  0100               	movlb	0	; () banked
  8722  0143FC  6F63               	movwf	__number_of_days@month& (0+255),b
  8723                           
  8724                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  8725  0143FE  EC09  F0AF         	call	_rtcc_get_year	;wreg free
  8726  014402  0100               	movlb	0	; () banked
  8727  014404  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;rtcc.c: 64: uint8_t year;;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || m
      +                          onth==0x11)
  8731  014406  0E04               	movlw	4
  8732  014408  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8733  01440A  B4D8               	btfsc	status,2,c
  8734  01440C  D00C               	goto	u17810
  8735                           
  8736                           ; BSR set to: 0
  8737  01440E  0E06               	movlw	6
  8738  014410  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8739  014412  B4D8               	btfsc	status,2,c
  8740  014414  D008               	goto	u17810
  8741                           
  8742                           ; BSR set to: 0
  8743  014416  0E09               	movlw	9
  8744  014418  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8745  01441A  B4D8               	btfsc	status,2,c
  8746  01441C  D004               	goto	u17810
  8747                           
  8748                           ; BSR set to: 0
  8749  01441E  0E11               	movlw	17
  8750  014420  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8751  014422  A4D8               	btfss	status,2,c
  8752  014424  D002               	goto	l2265
  8753  014426                     u17810:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;rtcc.c: 66: return 0x30;
  8757                           
  8758                           ; BSR set to: 0
  8759  014426  0E30               	movlw	48
  8760                           
  8761                           ; BSR set to: 0
  8762  014428  0012               	return	
  8763  01442A                     l2265:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;rtcc.c: 67: if(month==0x02)
  8767                           
  8768                           ; BSR set to: 0
  8769  01442A  0E02               	movlw	2
  8770  01442C  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8771  01442E  A4D8               	btfss	status,2,c
  8772  014430  D014               	goto	l2271
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;rtcc.c: 68: {;rtcc.c: 69: year = bcd_year>>4;
  8776  014432  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  8777  014434  0B0F               	andlw	15
  8778  014436  6F61               	movwf	__number_of_days@year& (0+255),b
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;rtcc.c: 70: year *= 10;
  8782  014438  0E0A               	movlw	10
  8783  01443A  0361               	mulwf	__number_of_days@year& (0+255),b
  8784  01443C  50F3               	movf	prodl,w,c
  8785  01443E  6F61               	movwf	__number_of_days@year& (0+255),b
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  8789  014440  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  8790  014442  0B0F               	andlw	15
  8791  014444  2761               	addwf	__number_of_days@year& (0+255),f,b
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;rtcc.c: 72: if(year&0b11)
  8795  014446  C061  F060         	movff	__number_of_days@year,??__number_of_days
  8796  01444A  0E03               	movlw	3
  8797  01444C  1760               	andwf	??__number_of_days& (0+255),f,b
  8798  01444E  B4D8               	btfsc	status,2,c
  8799  014450  D002               	goto	l2270
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;rtcc.c: 73: return 0x28;
  8803  014452  0E28               	movlw	40
  8804                           
  8805                           ; BSR set to: 0
  8806  014454  0012               	return	
  8807  014456                     l2270:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;rtcc.c: 74: else;rtcc.c: 75: return 0x29;
  8811                           
  8812                           ; BSR set to: 0
  8813  014456  0E29               	movlw	41
  8814                           
  8815                           ; BSR set to: 0
  8816  014458  0012               	return	
  8817  01445A                     l2271:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;rtcc.c: 76: };rtcc.c: 77: return 0x31;
  8821                           
  8822                           ; BSR set to: 0
  8823                           
  8824                           ; BSR set to: 0
  8825  01445A  0E31               	movlw	49
  8826  01445C  0012               	return	
  8827  01445E                     __end_of__number_of_days:
  8828                           	opt stack 0
  8829                           tblptru	equ	0xFF8
  8830                           tblptrh	equ	0xFF7
  8831                           tblptrl	equ	0xFF6
  8832                           tablat	equ	0xFF5
  8833                           prodl	equ	0xFF3
  8834                           intcon3	equ	0xFF0
  8835                           postinc0	equ	0xFEE
  8836                           wreg	equ	0xFE8
  8837                           postdec1	equ	0xFE5
  8838                           plusw1	equ	0xFE3
  8839                           fsr1h	equ	0xFE2
  8840                           fsr1l	equ	0xFE1
  8841                           postinc2	equ	0xFDE
  8842                           postdec2	equ	0xFDD
  8843                           plusw2	equ	0xFDB
  8844                           fsr2h	equ	0xFDA
  8845                           fsr2l	equ	0xFD9
  8846                           status	equ	0xFD8
  8847                           
  8848 ;; *************** function __rtcc_verify_bcd *****************
  8849 ;; Defined at:
  8850 ;;		line 80 in file "rtcc.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  value           1    wreg     unsigned char 
  8853 ;;  min             1    0[BANK0 ] unsigned char 
  8854 ;;  max             1    1[BANK0 ] unsigned char 
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;  value           1    3[BANK0 ] unsigned char 
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  1    wreg      unsigned char 
  8859 ;; Registers used:
  8860 ;;		wreg, status,2, status,0
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;Total ram usage:        4 bytes
  8871 ;; Hardware stack levels used:    1
  8872 ;; Hardware stack levels required when called:   10
  8873 ;; This function calls:
  8874 ;;		Nothing
  8875 ;; This function is called by:
  8876 ;;		_rtcc_read_eeprom
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           	psect	text30
  8881  015104                     __ptext30:
  8882                           	opt stack 0
  8883  015104                     __rtcc_verify_bcd:
  8884                           	opt stack 17
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;incstack = 0
  8888                           ;__rtcc_verify_bcd@value stored from wreg
  8889  015104  0100               	movlb	0	; () banked
  8890  015106  6F63               	movwf	__rtcc_verify_bcd@value& (0+255),b
  8891                           
  8892                           ;rtcc.c: 83: if((value&0x0F)>0x09)
  8893  015108  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  8894  01510C  0E0F               	movlw	15
  8895  01510E  0100               	movlb	0	; () banked
  8896  015110  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  8897  015112  0E09               	movlw	9
  8898  015114  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  8899  015116  D002               	goto	l2274
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;rtcc.c: 84: {;rtcc.c: 85: return min;
  8903  015118  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8904                           
  8905                           ; BSR set to: 0
  8906  01511A  0012               	return	
  8907  01511C                     l2274:
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;rtcc.c: 86: };rtcc.c: 87: if((value&0xF0)>0x90)
  8911                           
  8912                           ; BSR set to: 0
  8913  01511C  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  8914  015120  0EF0               	movlw	240
  8915  015122  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  8916  015124  0E90               	movlw	144
  8917  015126  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  8918  015128  D002               	goto	l2276
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;rtcc.c: 88: {;rtcc.c: 89: return min;
  8922  01512A  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8923                           
  8924                           ; BSR set to: 0
  8925  01512C  0012               	return	
  8926  01512E                     l2276:
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;rtcc.c: 90: };rtcc.c: 92: if(value<min)
  8930                           
  8931                           ; BSR set to: 0
  8932  01512E  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8933  015130  5D63               	subwf	__rtcc_verify_bcd@value& (0+255),w,b
  8934  015132  B0D8               	btfsc	status,0,c
  8935  015134  D002               	goto	l2277
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;rtcc.c: 93: {;rtcc.c: 94: return min;
  8939  015136  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8940                           
  8941                           ; BSR set to: 0
  8942  015138  0012               	return	
  8943  01513A                     l2277:
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;rtcc.c: 95: };rtcc.c: 96: if(value>max)
  8947                           
  8948                           ; BSR set to: 0
  8949  01513A  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  8950  01513C  5D61               	subwf	__rtcc_verify_bcd@max& (0+255),w,b
  8951  01513E  B0D8               	btfsc	status,0,c
  8952  015140  D002               	goto	l2278
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;rtcc.c: 97: {;rtcc.c: 98: return max;
  8956  015142  5161               	movf	__rtcc_verify_bcd@max& (0+255),w,b
  8957                           
  8958                           ; BSR set to: 0
  8959  015144  0012               	return	
  8960  015146                     l2278:
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;rtcc.c: 99: };rtcc.c: 101: return value;
  8964                           
  8965                           ; BSR set to: 0
  8966  015146  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  8967  015148  0012               	return	
  8968  01514A                     __end_of__rtcc_verify_bcd:
  8969                           	opt stack 0
  8970                           tblptru	equ	0xFF8
  8971                           tblptrh	equ	0xFF7
  8972                           tblptrl	equ	0xFF6
  8973                           tablat	equ	0xFF5
  8974                           prodl	equ	0xFF3
  8975                           intcon3	equ	0xFF0
  8976                           postinc0	equ	0xFEE
  8977                           wreg	equ	0xFE8
  8978                           postdec1	equ	0xFE5
  8979                           plusw1	equ	0xFE3
  8980                           fsr1h	equ	0xFE2
  8981                           fsr1l	equ	0xFE1
  8982                           postinc2	equ	0xFDE
  8983                           postdec2	equ	0xFDD
  8984                           plusw2	equ	0xFDB
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function _log_start_new *****************
  8990 ;; Defined at:
  8991 ;;		line 71 in file "log.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:   12
  9012 ;; This function calls:
  9013 ;;		_rtcc_get_seconds_decimal
  9014 ;; This function is called by:
  9015 ;;		_main
  9016 ;;		_system_init
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text31
  9021  012766                     __ptext31:
  9022                           	opt stack 0
  9023  012766                     _log_start_new:
  9024                           	opt stack 17
  9025                           
  9026                           ;log.c: 73: inputVoltageSum = 0;
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;incstack = 0
  9030  012766  0E00               	movlw	0
  9031  012768  0102               	movlb	2	; () banked
  9032  01276A  6F9A               	movwf	_inputVoltageSum& (0+255),b
  9033  01276C  0E00               	movlw	0
  9034  01276E  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  9035  012770  0E00               	movlw	0
  9036  012772  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  9037  012774  0E00               	movlw	0
  9038  012776  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  9039                           
  9040                           ;log.c: 74: inputCurrentSum = 0;
  9041  012778  0E00               	movlw	0
  9042  01277A  6F96               	movwf	_inputCurrentSum& (0+255),b
  9043  01277C  0E00               	movlw	0
  9044  01277E  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  9045  012780  0E00               	movlw	0
  9046  012782  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  9047  012784  0E00               	movlw	0
  9048  012786  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  9049                           
  9050                           ;log.c: 75: outputVoltageSum = 0;
  9051  012788  0E00               	movlw	0
  9052  01278A  6F92               	movwf	_outputVoltageSum& (0+255),b
  9053  01278C  0E00               	movlw	0
  9054  01278E  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  9055  012790  0E00               	movlw	0
  9056  012792  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  9057  012794  0E00               	movlw	0
  9058  012796  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  9059                           
  9060                           ;log.c: 76: outputCurrentSum = 0;
  9061  012798  0E00               	movlw	0
  9062  01279A  6F8E               	movwf	_outputCurrentSum& (0+255),b
  9063  01279C  0E00               	movlw	0
  9064  01279E  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  9065  0127A0  0E00               	movlw	0
  9066  0127A2  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  9067  0127A4  0E00               	movlw	0
  9068  0127A6  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  9069                           
  9070                           ;log.c: 77: inputPowerSum = 0;
  9071  0127A8  0E00               	movlw	0
  9072  0127AA  6F8A               	movwf	_inputPowerSum& (0+255),b
  9073  0127AC  0E00               	movlw	0
  9074  0127AE  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  9075  0127B0  0E00               	movlw	0
  9076  0127B2  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  9077  0127B4  0E00               	movlw	0
  9078  0127B6  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  9079                           
  9080                           ;log.c: 78: outputPowerSum = 0;
  9081  0127B8  0E00               	movlw	0
  9082  0127BA  6F86               	movwf	_outputPowerSum& (0+255),b
  9083  0127BC  0E00               	movlw	0
  9084  0127BE  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  9085  0127C0  0E00               	movlw	0
  9086  0127C2  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  9087  0127C4  0E00               	movlw	0
  9088  0127C6  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  9089                           
  9090                           ;log.c: 79: inputCapacitySum = 0;
  9091  0127C8  0E00               	movlw	0
  9092  0127CA  6F82               	movwf	_inputCapacitySum& (0+255),b
  9093  0127CC  0E00               	movlw	0
  9094  0127CE  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  9095  0127D0  0E00               	movlw	0
  9096  0127D2  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  9097  0127D4  0E00               	movlw	0
  9098  0127D6  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  9099                           
  9100                           ;log.c: 80: outputCapacitySum = 0;
  9101  0127D8  0E00               	movlw	0
  9102  0127DA  6F7E               	movwf	_outputCapacitySum& (0+255),b
  9103  0127DC  0E00               	movlw	0
  9104  0127DE  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  9105  0127E0  0E00               	movlw	0
  9106  0127E2  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  9107  0127E4  0E00               	movlw	0
  9108  0127E6  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  9109                           
  9110                           ;log.c: 81: temperatureOnboardSum = 0;
  9111  0127E8  0E00               	movlw	0
  9112  0127EA  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  9113  0127EC  0E00               	movlw	0
  9114  0127EE  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9115  0127F0  0E00               	movlw	0
  9116  0127F2  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9117  0127F4  0E00               	movlw	0
  9118  0127F6  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9119                           
  9120                           ;log.c: 82: temperatureExternal1Sum = 0;
  9121  0127F8  0E00               	movlw	0
  9122  0127FA  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  9123  0127FC  0E00               	movlw	0
  9124  0127FE  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9125  012800  0E00               	movlw	0
  9126  012802  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9127  012804  0E00               	movlw	0
  9128  012806  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9129                           
  9130                           ;log.c: 83: temperatureExternal2Sum = 0;
  9131  012808  0E00               	movlw	0
  9132  01280A  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  9133  01280C  0E00               	movlw	0
  9134  01280E  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9135  012810  0E00               	movlw	0
  9136  012812  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9137  012814  0E00               	movlw	0
  9138  012816  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9139                           
  9140                           ;log.c: 84: chargerOnTime = 0;
  9141  012818  0E00               	movlw	0
  9142  01281A  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  9143  01281C  0E00               	movlw	0
  9144  01281E  6FB0               	movwf	_chargerOnTime& (0+255),b
  9145                           
  9146                           ;log.c: 85: lowPowerTime = 0;
  9147  012820  0E00               	movlw	0
  9148  012822  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  9149  012824  0E00               	movlw	0
  9150  012826  6FAE               	movwf	_lowPowerTime& (0+255),b
  9151                           
  9152                           ;log.c: 86: status = 0;
  9153  012828  0E00               	movlw	0
  9154  01282A  0101               	movlb	1	; () banked
  9155  01282C  6FF0               	movwf	_status& (0+255),b
  9156                           
  9157                           ;log.c: 87: averageCount = 0;
  9158  01282E  0E00               	movlw	0
  9159  012830  6E17               	movwf	_averageCount+1,c
  9160  012832  0E00               	movlw	0
  9161  012834  6E16               	movwf	_averageCount,c
  9162                           
  9163                           ; BSR set to: 1
  9164                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9165  012836  ECF2  F0AE         	call	_rtcc_get_seconds_decimal	;wreg free
  9166  01283A  0101               	movlb	1	; () banked
  9167  01283C  6FEF               	movwf	_lastSecond& (0+255),b
  9168                           
  9169                           ; BSR set to: 1
  9170  01283E  0012               	return		;funcret
  9171  012840                     __end_of_log_start_new:
  9172                           	opt stack 0
  9173                           tblptru	equ	0xFF8
  9174                           tblptrh	equ	0xFF7
  9175                           tblptrl	equ	0xFF6
  9176                           tablat	equ	0xFF5
  9177                           prodl	equ	0xFF3
  9178                           intcon3	equ	0xFF0
  9179                           postinc0	equ	0xFEE
  9180                           wreg	equ	0xFE8
  9181                           postdec1	equ	0xFE5
  9182                           plusw1	equ	0xFE3
  9183                           fsr1h	equ	0xFE2
  9184                           fsr1l	equ	0xFE1
  9185                           postinc2	equ	0xFDE
  9186                           postdec2	equ	0xFDD
  9187                           plusw2	equ	0xFDB
  9188                           fsr2h	equ	0xFDA
  9189                           fsr2l	equ	0xFD9
  9190                           status	equ	0xFD8
  9191                           
  9192 ;; *************** function _i2c_init *****************
  9193 ;; Defined at:
  9194 ;;		line 94 in file "i2c.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0, cstack
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:   11
  9215 ;; This function calls:
  9216 ;;		__i2c_open_1
  9217 ;;		_i2c_set_frequency
  9218 ;; This function is called by:
  9219 ;;		_system_init
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text32
  9224  015E66                     __ptext32:
  9225                           	opt stack 0
  9226  015E66                     _i2c_init:
  9227                           	opt stack 18
  9228                           
  9229                           ;i2c.c: 96: _i2c_open_1();
  9230                           
  9231                           ; BSR set to: 1
  9232                           ;incstack = 0
  9233  015E66  EC10  F0AE         	call	__i2c_open_1	;wreg free
  9234                           
  9235                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9236  015E6A  0E00               	movlw	0
  9237  015E6C  ECB8  F0A0         	call	_i2c_set_frequency
  9238  015E70  0012               	return		;funcret
  9239  015E72                     __end_of_i2c_init:
  9240                           	opt stack 0
  9241                           tblptru	equ	0xFF8
  9242                           tblptrh	equ	0xFF7
  9243                           tblptrl	equ	0xFF6
  9244                           tablat	equ	0xFF5
  9245                           prodl	equ	0xFF3
  9246                           intcon3	equ	0xFF0
  9247                           postinc0	equ	0xFEE
  9248                           wreg	equ	0xFE8
  9249                           postdec1	equ	0xFE5
  9250                           plusw1	equ	0xFE3
  9251                           fsr1h	equ	0xFE2
  9252                           fsr1l	equ	0xFE1
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           plusw2	equ	0xFDB
  9256                           fsr2h	equ	0xFDA
  9257                           fsr2l	equ	0xFD9
  9258                           status	equ	0xFD8
  9259                           
  9260 ;; *************** function __i2c_open_1 *****************
  9261 ;; Defined at:
  9262 ;;		line 33 in file "i2c.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;		None
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;		None
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      void 
  9269 ;; Registers used:
  9270 ;;		wreg, status,2
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;Total ram usage:        0 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:   10
  9283 ;; This function calls:
  9284 ;;		Nothing
  9285 ;; This function is called by:
  9286 ;;		_i2c_init
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text33
  9291  015C20                     __ptext33:
  9292                           	opt stack 0
  9293  015C20                     __i2c_open_1:
  9294                           	opt stack 18
  9295                           
  9296                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9297                           
  9298                           ;incstack = 0
  9299  015C20  9EC7               	bcf	4039,7,c	;volatile
  9300                           
  9301                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9302  015C22  9CC7               	bcf	4039,6,c	;volatile
  9303                           
  9304                           ;i2c.c: 37: SSP1ADD = 29;
  9305  015C24  0E1D               	movlw	29
  9306  015C26  6EC8               	movwf	4040,c	;volatile
  9307                           
  9308                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9309  015C28  9EC6               	bcf	4038,7,c	;volatile
  9310                           
  9311                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9312  015C2A  9CC6               	bcf	4038,6,c	;volatile
  9313                           
  9314                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9315  015C2C  50C6               	movf	4038,w,c	;volatile
  9316  015C2E  0BF0               	andlw	-16
  9317  015C30  0908               	iorlw	8
  9318  015C32  6EC6               	movwf	4038,c	;volatile
  9319                           
  9320                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9321  015C34  8AC6               	bsf	4038,5,c	;volatile
  9322  015C36  0012               	return		;funcret
  9323  015C38                     __end_of__i2c_open_1:
  9324                           	opt stack 0
  9325                           tblptru	equ	0xFF8
  9326                           tblptrh	equ	0xFF7
  9327                           tblptrl	equ	0xFF6
  9328                           tablat	equ	0xFF5
  9329                           prodl	equ	0xFF3
  9330                           intcon3	equ	0xFF0
  9331                           postinc0	equ	0xFEE
  9332                           wreg	equ	0xFE8
  9333                           postdec1	equ	0xFE5
  9334                           plusw1	equ	0xFE3
  9335                           fsr1h	equ	0xFE2
  9336                           fsr1l	equ	0xFE1
  9337                           postinc2	equ	0xFDE
  9338                           postdec2	equ	0xFDD
  9339                           plusw2	equ	0xFDB
  9340                           fsr2h	equ	0xFDA
  9341                           fsr2l	equ	0xFD9
  9342                           status	equ	0xFD8
  9343                           
  9344 ;; *************** function _i2c_eeprom_read_calibration *****************
  9345 ;; Defined at:
  9346 ;;		line 579 in file "i2c.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;		None
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9351 ;;  addr            2   31[BANK0 ] unsigned int 
  9352 ;;  cntr            1   33[BANK0 ] unsigned char 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9363 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;Total ram usage:        9 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:   13
  9369 ;; This function calls:
  9370 ;;		__i2c_eeprom_load_default_calibration
  9371 ;;		_i2c_eeprom_read
  9372 ;;		_schedule_eeprom_write_task
  9373 ;; This function is called by:
  9374 ;;		_system_init
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text34
  9379  0113D6                     __ptext34:
  9380                           	opt stack 0
  9381  0113D6                     _i2c_eeprom_read_calibration:
  9382                           	opt stack 16
  9383                           
  9384                           ;i2c.c: 581: uint8_t buffer[4];;i2c.c: 582: uint8_t cntr;;i2c.c: 583: uint16_t addr;;i2c
      +                          .c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9385                           
  9386                           ;incstack = 0
  9387  0113D6  0E00               	movlw	0
  9388  0113D8  0100               	movlb	0	; () banked
  9389  0113DA  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9390  0113DC                     l20875:
  9391                           
  9392                           ; BSR set to: 0
  9393  0113DC  0E06               	movlw	6
  9394  0113DE  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9395  0113E0  D001               	goto	l1624
  9396  0113E2  0012               	return	
  9397  0113E4                     l1624:
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;i2c.c: 586: {;i2c.c: 588: addr = 0x0200 + (cntr<<4);
  9401                           
  9402                           ; BSR set to: 0
  9403  0113E4  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9404  0113E6  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9405  0113E8  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9406  0113EA  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9407  0113EC  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9408  0113EE  0EF0               	movlw	240
  9409  0113F0  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9410  0113F2  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9411  0113F4  0B0F               	andlw	15
  9412  0113F6  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9413  0113F8  0EF0               	movlw	240
  9414  0113FA  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9415  0113FC  0E00               	movlw	0
  9416  0113FE  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9417  011400  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9418  011402  0E02               	movlw	2
  9419  011404  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9420  011406  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9424  011408  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9425  01140C  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9426  011410  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9427  011412  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9428  011414  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9429  011416  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9430  011418  0E04               	movlw	4
  9431  01141A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9432  01141C  EC84  F0A6         	call	_i2c_eeprom_read	;wreg free
  9433                           
  9434                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9435  011420  0E77               	movlw	119
  9436  011422  0100               	movlb	0	; () banked
  9437  011424  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9438  011426  A4D8               	btfss	status,2,c
  9439  011428  D021               	goto	l1626
  9440                           
  9441                           ; BSR set to: 0
  9442  01142A  0E55               	movlw	85
  9443  01142C  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9444  01142E  A4D8               	btfss	status,2,c
  9445  011430  D01D               	goto	l1626
  9446                           
  9447                           ; BSR set to: 0
  9448  011432  0E33               	movlw	51
  9449  011434  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9450  011436  A4D8               	btfss	status,2,c
  9451  011438  D019               	goto	l1626
  9452                           
  9453                           ; BSR set to: 0
  9454  01143A  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9455  01143C  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9456  01143E  A4D8               	btfss	status,2,c
  9457  011440  D015               	goto	l1626
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;i2c.c: 592: {;i2c.c: 594: addr += 4;
  9461  011442  0E04               	movlw	4
  9462  011444  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9463  011446  0E00               	movlw	0
  9464  011448  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9468  01144A  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9469  01144E  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9470  011452  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9471  011454  0D0C               	mullw	12
  9472  011456  0E00               	movlw	low _calibrationParameters
  9473  011458  24F3               	addwf	prodl,w,c
  9474  01145A  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9475  01145C  0E03               	movlw	high _calibrationParameters
  9476  01145E  20F4               	addwfc	prodh,w,c
  9477  011460  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9478  011462  0E0C               	movlw	12
  9479  011464  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9480  011466  EC84  F0A6         	call	_i2c_eeprom_read	;wreg free
  9481                           
  9482                           ;i2c.c: 596: }
  9483  01146A  D041               	goto	l1630
  9484  01146C                     l1626:
  9485                           
  9486                           ;i2c.c: 597: else;i2c.c: 598: {;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibr
      +                          ationParameters[cntr], cntr);
  9487  01146C  0100               	movlb	0	; () banked
  9488  01146E  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9489  011470  0D0C               	mullw	12
  9490  011472  0E00               	movlw	low _calibrationParameters
  9491  011474  24F3               	addwf	prodl,w,c
  9492  011476  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9493  011478  0E03               	movlw	high _calibrationParameters
  9494  01147A  20F4               	addwfc	prodh,w,c
  9495  01147C  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9496  01147E  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9497  011482  EC77  F069         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9498                           
  9499                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9500  011486  D01C               	goto	l1628
  9501  011488                     
  9502                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9503  011488  0E02               	movlw	2
  9504  01148A  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9505                           
  9506                           ;i2c.c: 606: break;
  9507  01148E  D02F               	goto	l1630
  9508  011490                     
  9509                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9510  011490  0E03               	movlw	3
  9511  011492  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9512                           
  9513                           ;i2c.c: 609: break;
  9514  011496  D02B               	goto	l1630
  9515  011498                     
  9516                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9517  011498  0E04               	movlw	4
  9518  01149A  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9519                           
  9520                           ;i2c.c: 612: break;
  9521  01149E  D027               	goto	l1630
  9522  0114A0                     
  9523                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9524  0114A0  0E05               	movlw	5
  9525  0114A2  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9526                           
  9527                           ;i2c.c: 615: break;
  9528  0114A6  D023               	goto	l1630
  9529  0114A8                     
  9530                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9531  0114A8  0E06               	movlw	6
  9532  0114AA  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9533                           
  9534                           ;i2c.c: 618: break;
  9535  0114AE  D01F               	goto	l1630
  9536  0114B0                     
  9537                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9538  0114B0  0E07               	movlw	7
  9539  0114B2  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9540                           
  9541                           ;i2c.c: 621: break;
  9542  0114B6  D01B               	goto	l1630
  9543  0114B8                     
  9544                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9545  0114B8  0E08               	movlw	8
  9546  0114BA  EC4F  F0A7         	call	_schedule_eeprom_write_task
  9547                           
  9548                           ;i2c.c: 625: }
  9549                           
  9550                           ;i2c.c: 624: break;
  9551  0114BE  D017               	goto	l1630
  9552  0114C0                     l1628:
  9553  0114C0  0100               	movlb	0	; () banked
  9554  0114C2  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9555                           
  9556                           ; Switch size 1, requested type "space"
  9557                           ; Number of cases is 7, Range of values is 0 to 6
  9558                           ; switch strategies available:
  9559                           ; Name         Instructions Cycles
  9560                           ; simple_byte           22    12 (average)
  9561                           ;	Chosen strategy is simple_byte
  9562  0114C4  0A00               	xorlw	0	; case 0
  9563  0114C6  B4D8               	btfsc	status,2,c
  9564  0114C8  D7DF               	goto	l1629
  9565  0114CA  0A01               	xorlw	1	; case 1
  9566  0114CC  B4D8               	btfsc	status,2,c
  9567  0114CE  D7E0               	goto	l1631
  9568  0114D0  0A03               	xorlw	3	; case 2
  9569  0114D2  B4D8               	btfsc	status,2,c
  9570  0114D4  D7E1               	goto	l1632
  9571  0114D6  0A01               	xorlw	1	; case 3
  9572  0114D8  B4D8               	btfsc	status,2,c
  9573  0114DA  D7E2               	goto	l1633
  9574  0114DC  0A07               	xorlw	7	; case 4
  9575  0114DE  B4D8               	btfsc	status,2,c
  9576  0114E0  D7E3               	goto	l1634
  9577  0114E2  0A01               	xorlw	1	; case 5
  9578  0114E4  B4D8               	btfsc	status,2,c
  9579  0114E6  D7E4               	goto	l1635
  9580  0114E8  0A03               	xorlw	3	; case 6
  9581  0114EA  B4D8               	btfsc	status,2,c
  9582  0114EC  D7E5               	goto	l1636
  9583  0114EE                     l1630:
  9584                           
  9585                           ; BSR set to: 0
  9586                           
  9587                           ; BSR set to: 0
  9588  0114EE  0100               	movlb	0	; () banked
  9589  0114F0  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
  9590  0114F2  D774               	goto	l20875
  9591  0114F4                     __end_of_i2c_eeprom_read_calibration:
  9592                           	opt stack 0
  9593                           tblptru	equ	0xFF8
  9594                           tblptrh	equ	0xFF7
  9595                           tblptrl	equ	0xFF6
  9596                           tablat	equ	0xFF5
  9597                           prodh	equ	0xFF4
  9598                           prodl	equ	0xFF3
  9599                           intcon3	equ	0xFF0
  9600                           postinc0	equ	0xFEE
  9601                           wreg	equ	0xFE8
  9602                           postdec1	equ	0xFE5
  9603                           plusw1	equ	0xFE3
  9604                           fsr1h	equ	0xFE2
  9605                           fsr1l	equ	0xFE1
  9606                           postinc2	equ	0xFDE
  9607                           postdec2	equ	0xFDD
  9608                           plusw2	equ	0xFDB
  9609                           fsr2h	equ	0xFDA
  9610                           fsr2l	equ	0xFD9
  9611                           status	equ	0xFD8
  9612                           
  9613 ;; *************** function _i2c_eeprom_read *****************
  9614 ;; Defined at:
  9615 ;;		line 563 in file "i2c.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  address         2   17[BANK0 ] unsigned int 
  9618 ;;  data            2   19[BANK0 ] PTR unsigned char 
  9619 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  9620 ;;  length          1   21[BANK0 ] unsigned char 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  9623 ;;  addr            1   23[BANK0 ] unsigned char 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9633 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;Total ram usage:        8 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:   12
  9640 ;; This function calls:
  9641 ;;		__i2c_read
  9642 ;;		__i2c_write
  9643 ;;		_i2c_set_frequency
  9644 ;; This function is called by:
  9645 ;;		_i2c_eeprom_read_calibration
  9646 ;;		_rtcc_read_eeprom
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           	psect	text35
  9651  014D08                     __ptext35:
  9652                           	opt stack 0
  9653  014D08                     _i2c_eeprom_read:
  9654                           	opt stack 15
  9655                           
  9656                           ;i2c.c: 565: uint8_t slave_address;;i2c.c: 566: uint8_t addr;;i2c.c: 567: addr = address
      +                           & 0xFF;
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;incstack = 0
  9660  014D08  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  9661                           
  9662                           ;i2c.c: 568: address &= 0b0000011100000000;
  9663  014D0C  0100               	movlb	0	; () banked
  9664  014D0E  0E00               	movlw	0
  9665  014D10  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  9666  014D12  0E07               	movlw	7
  9667  014D14  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9668                           
  9669                           ;i2c.c: 569: address >>= 7;
  9670  014D16  0E07               	movlw	7
  9671  014D18  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  9672  014D1A                     u18045:
  9673  014D1A  90D8               	bcf	status,0,c
  9674  014D1C  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9675  014D1E  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  9676  014D20  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  9677  014D22  D7FB               	goto	u18045
  9678                           
  9679                           ;i2c.c: 570: slave_address = 0b10100000 | address;
  9680  014D24  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  9681  014D26  09A0               	iorlw	160
  9682  014D28  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  9686  014D2A  0E02               	movlw	2
  9687  014D2C  ECB8  F0A0         	call	_i2c_set_frequency
  9688                           
  9689                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
  9690  014D30  0E77               	movlw	low i2c_eeprom_read@addr
  9691  014D32  0100               	movlb	0	; () banked
  9692  014D34  6F65               	movwf	__i2c_write@data& (0+255),b
  9693  014D36  0E00               	movlw	high i2c_eeprom_read@addr
  9694  014D38  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9695  014D3A  0E01               	movlw	1
  9696  014D3C  6F67               	movwf	__i2c_write@length& (0+255),b
  9697  014D3E  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9698  014D40  EC27  F0A7         	call	__i2c_write
  9699                           
  9700                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
  9701  014D44  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  9702  014D48  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  9703  014D4C  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  9704  014D50  0100               	movlb	0	; () banked
  9705  014D52  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9706  014D54  EC93  F09A         	call	__i2c_read
  9707  014D58  0012               	return		;funcret
  9708  014D5A                     __end_of_i2c_eeprom_read:
  9709                           	opt stack 0
  9710                           tblptru	equ	0xFF8
  9711                           tblptrh	equ	0xFF7
  9712                           tblptrl	equ	0xFF6
  9713                           tablat	equ	0xFF5
  9714                           prodh	equ	0xFF4
  9715                           prodl	equ	0xFF3
  9716                           intcon3	equ	0xFF0
  9717                           postinc0	equ	0xFEE
  9718                           wreg	equ	0xFE8
  9719                           postdec1	equ	0xFE5
  9720                           plusw1	equ	0xFE3
  9721                           fsr1h	equ	0xFE2
  9722                           fsr1l	equ	0xFE1
  9723                           postinc2	equ	0xFDE
  9724                           postdec2	equ	0xFDD
  9725                           plusw2	equ	0xFDB
  9726                           fsr2h	equ	0xFDA
  9727                           fsr2l	equ	0xFD9
  9728                           status	equ	0xFD8
  9729                           
  9730 ;; *************** function __i2c_read *****************
  9731 ;; Defined at:
  9732 ;;		line 167 in file "i2c.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  slave_addres    1    wreg     unsigned char 
  9735 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9736 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  9737 ;;  length          1    7[BANK0 ] unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  9740 ;;  cntr            1   16[BANK0 ] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9752 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;Total ram usage:       12 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:   11
  9757 ;; This function calls:
  9758 ;;		__i2c_acknowledge
  9759 ;;		__i2c_get
  9760 ;;		__i2c_not_acknowledge
  9761 ;;		__i2c_send
  9762 ;;		__i2c_start
  9763 ;;		__i2c_stop
  9764 ;;		__i2c_wait_idle
  9765 ;; This function is called by:
  9766 ;;		_i2c_eeprom_read
  9767 ;;		_i2c_eeprom_readByte
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text36
  9772  013526                     __ptext36:
  9773                           	opt stack 0
  9774  013526                     __i2c_read:
  9775                           	opt stack 15
  9776                           
  9777                           ;incstack = 0
  9778                           ;__i2c_read@slave_address stored from wreg
  9779  013526  0100               	movlb	0	; () banked
  9780  013528  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  9781                           
  9782                           ;i2c.c: 169: uint8_t cntr;;i2c.c: 171: _i2c_wait_idle();
  9783  01352A  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
  9784                           
  9785                           ;i2c.c: 172: _i2c_start();
  9786  01352E  EC67  F0AF         	call	__i2c_start	;wreg free
  9787                           
  9788                           ;i2c.c: 173: _i2c_wait_idle();
  9789  013532  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
  9790                           
  9791                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
  9792  013536  0100               	movlb	0	; () banked
  9793  013538  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  9794  01353A  0901               	iorlw	1
  9795  01353C  EC5E  F0AF         	call	__i2c_send
  9796                           
  9797                           ;i2c.c: 175: _i2c_wait_idle();
  9798  013540  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
  9799                           
  9800                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
  9801  013544  0E00               	movlw	0
  9802  013546  0100               	movlb	0	; () banked
  9803  013548  6F70               	movwf	__i2c_read@cntr& (0+255),b
  9804  01354A  D00F               	goto	l1557
  9805  01354C                     
  9806                           ; BSR set to: 0
  9807                           ;i2c.c: 186: {;i2c.c: 187: data[cntr] = _i2c_get();
  9808                           
  9809                           ; BSR set to: 0
  9810  01354C  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9811  01354E  0D01               	mullw	1
  9812  013550  50F3               	movf	prodl,w,c
  9813  013552  2565               	addwf	__i2c_read@data& (0+255),w,b
  9814  013554  6ED9               	movwf	fsr2l,c
  9815  013556  50F4               	movf	prodh,w,c
  9816  013558  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9817  01355A  6EDA               	movwf	fsr2h,c
  9818  01355C  EC4F  F0AF         	call	__i2c_get	;wreg free
  9819  013560  6EDF               	movwf	indf2,c
  9820                           
  9821                           ;i2c.c: 188: _i2c_acknowledge();
  9822  013562  EC54  F0AF         	call	__i2c_acknowledge	;wreg free
  9823  013566  0100               	movlb	0	; () banked
  9824  013568  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  9825  01356A                     l1557:
  9826                           
  9827                           ; BSR set to: 0
  9828                           
  9829                           ; BSR set to: 0
  9830  01356A  0EFF               	movlw	255
  9831  01356C  6F68               	movwf	??__i2c_read& (0+255),b
  9832  01356E  0EFF               	movlw	255
  9833  013570  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  9834  013572  5167               	movf	__i2c_read@length& (0+255),w,b
  9835  013574  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  9836  013576  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  9837  013578  5168               	movf	??__i2c_read& (0+255),w,b
  9838  01357A  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  9839  01357C  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  9840  01357E  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  9841  013580  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9842  013582  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  9843  013584  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  9844  013586  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  9845  013588  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  9846  01358A  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  9847  01358C  0A80               	xorlw	128
  9848  01358E  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  9849  013590  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  9850  013592  0A80               	xorlw	128
  9851  013594  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  9852  013596  A0D8               	btfss	status,0,c
  9853  013598  D7D9               	goto	l1558
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;i2c.c: 189: };i2c.c: 190: data[cntr] = _i2c_get();
  9857                           
  9858                           ; BSR set to: 0
  9859  01359A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9860  01359C  0D01               	mullw	1
  9861  01359E  50F3               	movf	prodl,w,c
  9862  0135A0  2565               	addwf	__i2c_read@data& (0+255),w,b
  9863  0135A2  6ED9               	movwf	fsr2l,c
  9864  0135A4  50F4               	movf	prodh,w,c
  9865  0135A6  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9866  0135A8  6EDA               	movwf	fsr2h,c
  9867  0135AA  EC4F  F0AF         	call	__i2c_get	;wreg free
  9868  0135AE  6EDF               	movwf	indf2,c
  9869                           
  9870                           ;i2c.c: 191: _i2c_not_acknowledge();
  9871  0135B0  EC4A  F0AF         	call	__i2c_not_acknowledge	;wreg free
  9872                           
  9873                           ;i2c.c: 193: _i2c_stop();
  9874  0135B4  EC63  F0AF         	call	__i2c_stop	;wreg free
  9875  0135B8  0012               	return		;funcret
  9876  0135BA                     __end_of__i2c_read:
  9877                           	opt stack 0
  9878                           tblptru	equ	0xFF8
  9879                           tblptrh	equ	0xFF7
  9880                           tblptrl	equ	0xFF6
  9881                           tablat	equ	0xFF5
  9882                           prodh	equ	0xFF4
  9883                           prodl	equ	0xFF3
  9884                           intcon3	equ	0xFF0
  9885                           postinc0	equ	0xFEE
  9886                           wreg	equ	0xFE8
  9887                           postdec1	equ	0xFE5
  9888                           plusw1	equ	0xFE3
  9889                           fsr1h	equ	0xFE2
  9890                           fsr1l	equ	0xFE1
  9891                           indf2	equ	0xFDF
  9892                           postinc2	equ	0xFDE
  9893                           postdec2	equ	0xFDD
  9894                           plusw2	equ	0xFDB
  9895                           fsr2h	equ	0xFDA
  9896                           fsr2l	equ	0xFD9
  9897                           status	equ	0xFD8
  9898                           
  9899 ;; *************** function __i2c_eeprom_load_default_calibration *****************
  9900 ;; Defined at:
  9901 ;;		line 645 in file "i2c.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  buffer          2    0[BANK0 ] PTR struct .
  9904 ;;		 -> calibrationParameters(84), 
  9905 ;;  index           1    2[BANK0 ] enum E6665
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9917 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;Total ram usage:        3 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:   10
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_i2c_eeprom_read_calibration
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text37
  9932  00D2EE                     __ptext37:
  9933                           	opt stack 0
  9934  00D2EE                     __i2c_eeprom_load_default_calibration:
  9935                           	opt stack 18
  9936                           
  9937                           ;i2c.c: 647: switch(index)
  9938                           
  9939                           ;incstack = 0
  9940  00D2EE  D1C8               	goto	l1640
  9941  00D2F0                     
  9942                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
  9943  00D2F0  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9944  00D2F4  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9945  00D2F8  0E00               	movlw	0
  9946  00D2FA  6EDE               	movwf	postinc2,c
  9947  00D2FC  0E00               	movlw	0
  9948  00D2FE  6EDD               	movwf	postdec2,c
  9949                           
  9950                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
  9951  00D300  0100               	movlb	0	; () banked
  9952  00D302  EE20 F002          	lfsr	2,2
  9953  00D306  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9954  00D308  26D9               	addwf	fsr2l,f,c
  9955  00D30A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9956  00D30C  22DA               	addwfc	fsr2h,f,c
  9957  00D30E  0E0B               	movlw	11
  9958  00D310  6EDE               	movwf	postinc2,c
  9959  00D312  0E00               	movlw	0
  9960  00D314  6EDD               	movwf	postdec2,c
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
  9964  00D316  EE20 F004          	lfsr	2,4
  9965  00D31A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9966  00D31C  26D9               	addwf	fsr2l,f,c
  9967  00D31E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9968  00D320  22DA               	addwfc	fsr2h,f,c
  9969  00D322  0E04               	movlw	4
  9970  00D324  6EDF               	movwf	indf2,c
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;i2c.c: 653: (*buffer).Offset = 0;
  9974  00D326  EE20 F005          	lfsr	2,5
  9975  00D32A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9976  00D32C  26D9               	addwf	fsr2l,f,c
  9977  00D32E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9978  00D330  22DA               	addwfc	fsr2h,f,c
  9979  00D332  0E00               	movlw	0
  9980  00D334  6EDE               	movwf	postinc2,c
  9981  00D336  0E00               	movlw	0
  9982  00D338  6EDD               	movwf	postdec2,c
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;i2c.c: 654: (*buffer).Multiplier = 11;
  9986  00D33A  EE20 F007          	lfsr	2,7
  9987  00D33E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9988  00D340  26D9               	addwf	fsr2l,f,c
  9989  00D342  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9990  00D344  22DA               	addwfc	fsr2h,f,c
  9991  00D346  0E0B               	movlw	11
  9992  00D348  6EDE               	movwf	postinc2,c
  9993  00D34A  0E00               	movlw	0
  9994  00D34C  6EDD               	movwf	postdec2,c
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;i2c.c: 655: (*buffer).Shift = 4;
  9998  00D34E  EE20 F009          	lfsr	2,9
  9999  00D352  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10000  00D354  26D9               	addwf	fsr2l,f,c
 10001  00D356  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10002  00D358  22DA               	addwfc	fsr2h,f,c
 10003  00D35A  0E04               	movlw	4
 10004  00D35C  6EDF               	movwf	indf2,c
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
 10008  00D35E  EE20 F00A          	lfsr	2,10
 10009  00D362  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10010  00D364  26D9               	addwf	fsr2l,f,c
 10011  00D366  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10012  00D368  22DA               	addwfc	fsr2h,f,c
 10013  00D36A  0E00               	movlw	0
 10014  00D36C  6EDE               	movwf	postinc2,c
 10015  00D36E  0E00               	movlw	0
 10016  00D370  6EDD               	movwf	postdec2,c
 10017                           
 10018                           ;i2c.c: 657: break;
 10019  00D372  0012               	return	
 10020  00D374                     
 10021                           ; BSR set to: 0
 10022                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
 10023                           
 10024                           ; BSR set to: 0
 10025  00D374  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10026  00D378  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10027  00D37C  0E00               	movlw	0
 10028  00D37E  6EDE               	movwf	postinc2,c
 10029  00D380  0E00               	movlw	0
 10030  00D382  6EDD               	movwf	postdec2,c
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
 10034  00D384  EE20 F002          	lfsr	2,2
 10035  00D388  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10036  00D38A  26D9               	addwf	fsr2l,f,c
 10037  00D38C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10038  00D38E  22DA               	addwfc	fsr2h,f,c
 10039  00D390  0E11               	movlw	17
 10040  00D392  6EDE               	movwf	postinc2,c
 10041  00D394  0E00               	movlw	0
 10042  00D396  6EDD               	movwf	postdec2,c
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
 10046  00D398  EE20 F004          	lfsr	2,4
 10047  00D39C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10048  00D39E  26D9               	addwf	fsr2l,f,c
 10049  00D3A0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10050  00D3A2  22DA               	addwfc	fsr2h,f,c
 10051  00D3A4  0E05               	movlw	5
 10052  00D3A6  6EDF               	movwf	indf2,c
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;i2c.c: 662: (*buffer).Offset = 0;
 10056  00D3A8  EE20 F005          	lfsr	2,5
 10057  00D3AC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10058  00D3AE  26D9               	addwf	fsr2l,f,c
 10059  00D3B0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10060  00D3B2  22DA               	addwfc	fsr2h,f,c
 10061  00D3B4  0E00               	movlw	0
 10062  00D3B6  6EDE               	movwf	postinc2,c
 10063  00D3B8  0E00               	movlw	0
 10064  00D3BA  6EDD               	movwf	postdec2,c
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;i2c.c: 663: (*buffer).Multiplier = 17;
 10068  00D3BC  EE20 F007          	lfsr	2,7
 10069  00D3C0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10070  00D3C2  26D9               	addwf	fsr2l,f,c
 10071  00D3C4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10072  00D3C6  22DA               	addwfc	fsr2h,f,c
 10073  00D3C8  0E11               	movlw	17
 10074  00D3CA  6EDE               	movwf	postinc2,c
 10075  00D3CC  0E00               	movlw	0
 10076  00D3CE  6EDD               	movwf	postdec2,c
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;i2c.c: 664: (*buffer).Shift = 5;
 10080  00D3D0  EE20 F009          	lfsr	2,9
 10081  00D3D4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10082  00D3D6  26D9               	addwf	fsr2l,f,c
 10083  00D3D8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10084  00D3DA  22DA               	addwfc	fsr2h,f,c
 10085  00D3DC  0E05               	movlw	5
 10086  00D3DE  6EDF               	movwf	indf2,c
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
 10090  00D3E0  EE20 F00A          	lfsr	2,10
 10091  00D3E4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10092  00D3E6  26D9               	addwf	fsr2l,f,c
 10093  00D3E8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10094  00D3EA  22DA               	addwfc	fsr2h,f,c
 10095  00D3EC  0E00               	movlw	0
 10096  00D3EE  6EDE               	movwf	postinc2,c
 10097  00D3F0  0E00               	movlw	0
 10098  00D3F2  6EDD               	movwf	postdec2,c
 10099                           
 10100                           ;i2c.c: 666: break;
 10101  00D3F4  0012               	return	
 10102  00D3F6                     
 10103                           ; BSR set to: 0
 10104                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
 10105                           
 10106                           ; BSR set to: 0
 10107  00D3F6  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10108  00D3FA  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10109  00D3FE  0E00               	movlw	0
 10110  00D400  6EDE               	movwf	postinc2,c
 10111  00D402  0E00               	movlw	0
 10112  00D404  6EDD               	movwf	postdec2,c
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
 10116  00D406  EE20 F002          	lfsr	2,2
 10117  00D40A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10118  00D40C  26D9               	addwf	fsr2l,f,c
 10119  00D40E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10120  00D410  22DA               	addwfc	fsr2h,f,c
 10121  00D412  0EDB               	movlw	219
 10122  00D414  6EDE               	movwf	postinc2,c
 10123  00D416  0E16               	movlw	22
 10124  00D418  6EDD               	movwf	postdec2,c
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
 10128  00D41A  EE20 F004          	lfsr	2,4
 10129  00D41E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10130  00D420  26D9               	addwf	fsr2l,f,c
 10131  00D422  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10132  00D424  22DA               	addwfc	fsr2h,f,c
 10133  00D426  0E0F               	movlw	15
 10134  00D428  6EDF               	movwf	indf2,c
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;i2c.c: 671: (*buffer).Offset = 0;
 10138  00D42A  EE20 F005          	lfsr	2,5
 10139  00D42E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10140  00D430  26D9               	addwf	fsr2l,f,c
 10141  00D432  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10142  00D434  22DA               	addwfc	fsr2h,f,c
 10143  00D436  0E00               	movlw	0
 10144  00D438  6EDE               	movwf	postinc2,c
 10145  00D43A  0E00               	movlw	0
 10146  00D43C  6EDD               	movwf	postdec2,c
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
 10150  00D43E  EE20 F007          	lfsr	2,7
 10151  00D442  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10152  00D444  26D9               	addwf	fsr2l,f,c
 10153  00D446  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10154  00D448  22DA               	addwfc	fsr2h,f,c
 10155  00D44A  0EDB               	movlw	219
 10156  00D44C  6EDE               	movwf	postinc2,c
 10157  00D44E  0E16               	movlw	22
 10158  00D450  6EDD               	movwf	postdec2,c
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;i2c.c: 673: (*buffer).Shift = 15;
 10162  00D452  EE20 F009          	lfsr	2,9
 10163  00D456  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10164  00D458  26D9               	addwf	fsr2l,f,c
 10165  00D45A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10166  00D45C  22DA               	addwfc	fsr2h,f,c
 10167  00D45E  0E0F               	movlw	15
 10168  00D460  6EDF               	movwf	indf2,c
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
 10172  00D462  EE20 F00A          	lfsr	2,10
 10173  00D466  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10174  00D468  26D9               	addwf	fsr2l,f,c
 10175  00D46A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10176  00D46C  22DA               	addwfc	fsr2h,f,c
 10177  00D46E  0E00               	movlw	0
 10178  00D470  6EDE               	movwf	postinc2,c
 10179  00D472  0E00               	movlw	0
 10180  00D474  6EDD               	movwf	postdec2,c
 10181                           
 10182                           ;i2c.c: 675: break;
 10183  00D476  0012               	return	
 10184  00D478                     
 10185                           ; BSR set to: 0
 10186                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
 10187                           
 10188                           ; BSR set to: 0
 10189  00D478  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10190  00D47C  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10191  00D480  0E00               	movlw	0
 10192  00D482  6EDE               	movwf	postinc2,c
 10193  00D484  0E00               	movlw	0
 10194  00D486  6EDD               	movwf	postdec2,c
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
 10198  00D488  EE20 F002          	lfsr	2,2
 10199  00D48C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10200  00D48E  26D9               	addwf	fsr2l,f,c
 10201  00D490  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10202  00D492  22DA               	addwfc	fsr2h,f,c
 10203  00D494  0EDB               	movlw	219
 10204  00D496  6EDE               	movwf	postinc2,c
 10205  00D498  0E16               	movlw	22
 10206  00D49A  6EDD               	movwf	postdec2,c
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10210  00D49C  EE20 F004          	lfsr	2,4
 10211  00D4A0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10212  00D4A2  26D9               	addwf	fsr2l,f,c
 10213  00D4A4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10214  00D4A6  22DA               	addwfc	fsr2h,f,c
 10215  00D4A8  0E0F               	movlw	15
 10216  00D4AA  6EDF               	movwf	indf2,c
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;i2c.c: 680: (*buffer).Offset = 0;
 10220  00D4AC  EE20 F005          	lfsr	2,5
 10221  00D4B0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10222  00D4B2  26D9               	addwf	fsr2l,f,c
 10223  00D4B4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10224  00D4B6  22DA               	addwfc	fsr2h,f,c
 10225  00D4B8  0E00               	movlw	0
 10226  00D4BA  6EDE               	movwf	postinc2,c
 10227  00D4BC  0E00               	movlw	0
 10228  00D4BE  6EDD               	movwf	postdec2,c
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10232  00D4C0  EE20 F007          	lfsr	2,7
 10233  00D4C4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10234  00D4C6  26D9               	addwf	fsr2l,f,c
 10235  00D4C8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10236  00D4CA  22DA               	addwfc	fsr2h,f,c
 10237  00D4CC  0EDB               	movlw	219
 10238  00D4CE  6EDE               	movwf	postinc2,c
 10239  00D4D0  0E16               	movlw	22
 10240  00D4D2  6EDD               	movwf	postdec2,c
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;i2c.c: 682: (*buffer).Shift = 15;
 10244  00D4D4  EE20 F009          	lfsr	2,9
 10245  00D4D8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10246  00D4DA  26D9               	addwf	fsr2l,f,c
 10247  00D4DC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10248  00D4DE  22DA               	addwfc	fsr2h,f,c
 10249  00D4E0  0E0F               	movlw	15
 10250  00D4E2  6EDF               	movwf	indf2,c
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10254  00D4E4  EE20 F00A          	lfsr	2,10
 10255  00D4E8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10256  00D4EA  26D9               	addwf	fsr2l,f,c
 10257  00D4EC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10258  00D4EE  22DA               	addwfc	fsr2h,f,c
 10259  00D4F0  0E00               	movlw	0
 10260  00D4F2  6EDE               	movwf	postinc2,c
 10261  00D4F4  0E00               	movlw	0
 10262  00D4F6  6EDD               	movwf	postdec2,c
 10263                           
 10264                           ;i2c.c: 684: break;
 10265  00D4F8  0012               	return	
 10266  00D4FA                     
 10267                           ; BSR set to: 0
 10268                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10269                           
 10270                           ; BSR set to: 0
 10271  00D4FA  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10272  00D4FE  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10273  00D502  0E37               	movlw	55
 10274  00D504  6EDE               	movwf	postinc2,c
 10275  00D506  0ECA               	movlw	202
 10276  00D508  6EDD               	movwf	postdec2,c
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10280  00D50A  EE20 F002          	lfsr	2,2
 10281  00D50E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10282  00D510  26D9               	addwf	fsr2l,f,c
 10283  00D512  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10284  00D514  22DA               	addwfc	fsr2h,f,c
 10285  00D516  0E29               	movlw	41
 10286  00D518  6EDE               	movwf	postinc2,c
 10287  00D51A  0ED3               	movlw	211
 10288  00D51C  6EDD               	movwf	postdec2,c
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10292  00D51E  EE20 F004          	lfsr	2,4
 10293  00D522  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10294  00D524  26D9               	addwf	fsr2l,f,c
 10295  00D526  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10296  00D528  22DA               	addwfc	fsr2h,f,c
 10297  00D52A  0E0D               	movlw	13
 10298  00D52C  6EDF               	movwf	indf2,c
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10302  00D52E  EE20 F005          	lfsr	2,5
 10303  00D532  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10304  00D534  26D9               	addwf	fsr2l,f,c
 10305  00D536  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10306  00D538  22DA               	addwfc	fsr2h,f,c
 10307  00D53A  0E37               	movlw	55
 10308  00D53C  6EDE               	movwf	postinc2,c
 10309  00D53E  0ECA               	movlw	202
 10310  00D540  6EDD               	movwf	postdec2,c
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10314  00D542  EE20 F007          	lfsr	2,7
 10315  00D546  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10316  00D548  26D9               	addwf	fsr2l,f,c
 10317  00D54A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10318  00D54C  22DA               	addwfc	fsr2h,f,c
 10319  00D54E  0E29               	movlw	41
 10320  00D550  6EDE               	movwf	postinc2,c
 10321  00D552  0ED3               	movlw	211
 10322  00D554  6EDD               	movwf	postdec2,c
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;i2c.c: 691: (*buffer).Shift = 13;
 10326  00D556  EE20 F009          	lfsr	2,9
 10327  00D55A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10328  00D55C  26D9               	addwf	fsr2l,f,c
 10329  00D55E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10330  00D560  22DA               	addwfc	fsr2h,f,c
 10331  00D562  0E0D               	movlw	13
 10332  00D564  6EDF               	movwf	indf2,c
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10336  00D566  EE20 F00A          	lfsr	2,10
 10337  00D56A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10338  00D56C  26D9               	addwf	fsr2l,f,c
 10339  00D56E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10340  00D570  22DA               	addwfc	fsr2h,f,c
 10341  00D572  0E00               	movlw	0
 10342  00D574  6EDE               	movwf	postinc2,c
 10343  00D576  0E00               	movlw	0
 10344  00D578  6EDD               	movwf	postdec2,c
 10345                           
 10346                           ;i2c.c: 693: break;
 10347  00D57A  0012               	return	
 10348  00D57C                     
 10349                           ; BSR set to: 0
 10350                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10351                           
 10352                           ; BSR set to: 0
 10353  00D57C  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10354  00D580  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10355  00D584  0E37               	movlw	55
 10356  00D586  6EDE               	movwf	postinc2,c
 10357  00D588  0ECA               	movlw	202
 10358  00D58A  6EDD               	movwf	postdec2,c
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10362  00D58C  EE20 F002          	lfsr	2,2
 10363  00D590  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10364  00D592  26D9               	addwf	fsr2l,f,c
 10365  00D594  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10366  00D596  22DA               	addwfc	fsr2h,f,c
 10367  00D598  0E29               	movlw	41
 10368  00D59A  6EDE               	movwf	postinc2,c
 10369  00D59C  0ED3               	movlw	211
 10370  00D59E  6EDD               	movwf	postdec2,c
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10374  00D5A0  EE20 F004          	lfsr	2,4
 10375  00D5A4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10376  00D5A6  26D9               	addwf	fsr2l,f,c
 10377  00D5A8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10378  00D5AA  22DA               	addwfc	fsr2h,f,c
 10379  00D5AC  0E0D               	movlw	13
 10380  00D5AE  6EDF               	movwf	indf2,c
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10384  00D5B0  EE20 F005          	lfsr	2,5
 10385  00D5B4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10386  00D5B6  26D9               	addwf	fsr2l,f,c
 10387  00D5B8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10388  00D5BA  22DA               	addwfc	fsr2h,f,c
 10389  00D5BC  0E37               	movlw	55
 10390  00D5BE  6EDE               	movwf	postinc2,c
 10391  00D5C0  0ECA               	movlw	202
 10392  00D5C2  6EDD               	movwf	postdec2,c
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10396  00D5C4  EE20 F007          	lfsr	2,7
 10397  00D5C8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10398  00D5CA  26D9               	addwf	fsr2l,f,c
 10399  00D5CC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10400  00D5CE  22DA               	addwfc	fsr2h,f,c
 10401  00D5D0  0E29               	movlw	41
 10402  00D5D2  6EDE               	movwf	postinc2,c
 10403  00D5D4  0ED3               	movlw	211
 10404  00D5D6  6EDD               	movwf	postdec2,c
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;i2c.c: 700: (*buffer).Shift = 13;
 10408  00D5D8  EE20 F009          	lfsr	2,9
 10409  00D5DC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10410  00D5DE  26D9               	addwf	fsr2l,f,c
 10411  00D5E0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10412  00D5E2  22DA               	addwfc	fsr2h,f,c
 10413  00D5E4  0E0D               	movlw	13
 10414  00D5E6  6EDF               	movwf	indf2,c
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10418  00D5E8  EE20 F00A          	lfsr	2,10
 10419  00D5EC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10420  00D5EE  26D9               	addwf	fsr2l,f,c
 10421  00D5F0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10422  00D5F2  22DA               	addwfc	fsr2h,f,c
 10423  00D5F4  0E00               	movlw	0
 10424  00D5F6  6EDE               	movwf	postinc2,c
 10425  00D5F8  0E00               	movlw	0
 10426  00D5FA  6EDD               	movwf	postdec2,c
 10427                           
 10428                           ;i2c.c: 702: break;
 10429  00D5FC  0012               	return	
 10430  00D5FE                     
 10431                           ; BSR set to: 0
 10432                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10433                           
 10434                           ; BSR set to: 0
 10435  00D5FE  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10436  00D602  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10437  00D606  0E37               	movlw	55
 10438  00D608  6EDE               	movwf	postinc2,c
 10439  00D60A  0ECA               	movlw	202
 10440  00D60C  6EDD               	movwf	postdec2,c
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10444  00D60E  EE20 F002          	lfsr	2,2
 10445  00D612  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10446  00D614  26D9               	addwf	fsr2l,f,c
 10447  00D616  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10448  00D618  22DA               	addwfc	fsr2h,f,c
 10449  00D61A  0E29               	movlw	41
 10450  00D61C  6EDE               	movwf	postinc2,c
 10451  00D61E  0ED3               	movlw	211
 10452  00D620  6EDD               	movwf	postdec2,c
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10456  00D622  EE20 F004          	lfsr	2,4
 10457  00D626  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10458  00D628  26D9               	addwf	fsr2l,f,c
 10459  00D62A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10460  00D62C  22DA               	addwfc	fsr2h,f,c
 10461  00D62E  0E0D               	movlw	13
 10462  00D630  6EDF               	movwf	indf2,c
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10466  00D632  EE20 F005          	lfsr	2,5
 10467  00D636  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10468  00D638  26D9               	addwf	fsr2l,f,c
 10469  00D63A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10470  00D63C  22DA               	addwfc	fsr2h,f,c
 10471  00D63E  0E37               	movlw	55
 10472  00D640  6EDE               	movwf	postinc2,c
 10473  00D642  0ECA               	movlw	202
 10474  00D644  6EDD               	movwf	postdec2,c
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10478  00D646  EE20 F007          	lfsr	2,7
 10479  00D64A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10480  00D64C  26D9               	addwf	fsr2l,f,c
 10481  00D64E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10482  00D650  22DA               	addwfc	fsr2h,f,c
 10483  00D652  0E29               	movlw	41
 10484  00D654  6EDE               	movwf	postinc2,c
 10485  00D656  0ED3               	movlw	211
 10486  00D658  6EDD               	movwf	postdec2,c
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;i2c.c: 709: (*buffer).Shift = 13;
 10490  00D65A  EE20 F009          	lfsr	2,9
 10491  00D65E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10492  00D660  26D9               	addwf	fsr2l,f,c
 10493  00D662  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10494  00D664  22DA               	addwfc	fsr2h,f,c
 10495  00D666  0E0D               	movlw	13
 10496  00D668  6EDF               	movwf	indf2,c
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 10500  00D66A  EE20 F00A          	lfsr	2,10
 10501  00D66E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10502  00D670  26D9               	addwf	fsr2l,f,c
 10503  00D672  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10504  00D674  22DA               	addwfc	fsr2h,f,c
 10505  00D676  0E00               	movlw	0
 10506  00D678  6EDE               	movwf	postinc2,c
 10507  00D67A  0E00               	movlw	0
 10508  00D67C  6EDD               	movwf	postdec2,c
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;i2c.c: 712: }
 10512                           
 10513                           ;i2c.c: 711: break;
 10514  00D67E  0012               	return	
 10515  00D680                     l1640:
 10516                           
 10517                           ; BSR set to: 0
 10518  00D680  0100               	movlb	0	; () banked
 10519  00D682  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 10520                           
 10521                           ; Switch size 1, requested type "space"
 10522                           ; Number of cases is 7, Range of values is 0 to 6
 10523                           ; switch strategies available:
 10524                           ; Name         Instructions Cycles
 10525                           ; simple_byte           22    12 (average)
 10526                           ;	Chosen strategy is simple_byte
 10527  00D684  0A00               	xorlw	0	; case 0
 10528  00D686  B4D8               	btfsc	status,2,c
 10529  00D688  D633               	goto	l1641
 10530  00D68A  0A01               	xorlw	1	; case 1
 10531  00D68C  B4D8               	btfsc	status,2,c
 10532  00D68E  D672               	goto	l1643
 10533  00D690  0A03               	xorlw	3	; case 2
 10534  00D692  B4D8               	btfsc	status,2,c
 10535  00D694  D6B0               	goto	l1644
 10536  00D696  0A01               	xorlw	1	; case 3
 10537  00D698  B4D8               	btfsc	status,2,c
 10538  00D69A  D6EE               	goto	l1645
 10539  00D69C  0A07               	xorlw	7	; case 4
 10540  00D69E  B4D8               	btfsc	status,2,c
 10541  00D6A0  D72C               	goto	l1646
 10542  00D6A2  0A01               	xorlw	1	; case 5
 10543  00D6A4  B4D8               	btfsc	status,2,c
 10544  00D6A6  D76A               	goto	l1647
 10545  00D6A8  0A03               	xorlw	3	; case 6
 10546  00D6AA  A4D8               	btfss	status,2,c
 10547  00D6AC  0012               	return	
 10548  00D6AE  D7A7               	goto	l1648
 10549  00D6B0                     __end_of__i2c_eeprom_load_default_calibration:
 10550                           	opt stack 0
 10551                           tblptru	equ	0xFF8
 10552                           tblptrh	equ	0xFF7
 10553                           tblptrl	equ	0xFF6
 10554                           tablat	equ	0xFF5
 10555                           prodh	equ	0xFF4
 10556                           prodl	equ	0xFF3
 10557                           intcon3	equ	0xFF0
 10558                           postinc0	equ	0xFEE
 10559                           wreg	equ	0xFE8
 10560                           postdec1	equ	0xFE5
 10561                           plusw1	equ	0xFE3
 10562                           fsr1h	equ	0xFE2
 10563                           fsr1l	equ	0xFE1
 10564                           indf2	equ	0xFDF
 10565                           postinc2	equ	0xFDE
 10566                           postdec2	equ	0xFDD
 10567                           plusw2	equ	0xFDB
 10568                           fsr2h	equ	0xFDA
 10569                           fsr2l	equ	0xFD9
 10570                           status	equ	0xFD8
 10571                           
 10572 ;; *************** function _flash_init *****************
 10573 ;; Defined at:
 10574 ;;		line 448 in file "flash.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;		None
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;		None
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10592 ;;Total ram usage:        0 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:   14
 10595 ;; This function calls:
 10596 ;;		__flash_set_page_size
 10597 ;; This function is called by:
 10598 ;;		_system_init
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text38
 10603  01514A                     __ptext38:
 10604                           	opt stack 0
 10605  01514A                     _flash_init:
 10606                           	opt stack 15
 10607                           
 10608                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;incstack = 0
 10612  01514A  0E55               	movlw	85
 10613  01514C  6EA7               	movwf	4007,c	;volsfr
 10614  01514E  0EAA               	movlw	170
 10615  015150  6EA7               	movwf	4007,c	;volsfr
 10616  015152  010E               	movlb	14	; () banked
 10617  015154  91BF               	bcf	191,0,b	;volatile
 10618                           
 10619                           ;flash.c: 452: RPINR21 = 23;
 10620  015156  0E17               	movlw	23
 10621  015158  6FFC               	movwf	252,b	;volatile
 10622                           
 10623                           ;flash.c: 453: RPOR21 = 10;
 10624  01515A  0E0A               	movlw	10
 10625  01515C  6FD5               	movwf	213,b	;volatile
 10626                           
 10627                           ;flash.c: 455: RPOR22 = 11;
 10628  01515E  0E0B               	movlw	11
 10629  015160  6FD6               	movwf	214,b	;volatile
 10630                           
 10631                           ;flash.c: 456: RPINR22 = 22;
 10632  015162  0E16               	movlw	22
 10633  015164  6FFD               	movwf	253,b	;volatile
 10634                           
 10635                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 10636  015166  0E55               	movlw	85
 10637  015168  6EA7               	movwf	4007,c	;volsfr
 10638  01516A  0EAA               	movlw	170
 10639  01516C  6EA7               	movwf	4007,c	;volsfr
 10640                           
 10641                           ; BSR set to: 14
 10642  01516E  81BF               	bsf	191,0,b	;volatile
 10643                           
 10644                           ; BSR set to: 14
 10645                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 10646  015170  8E73               	bsf	3955,7,c	;volatile
 10647                           
 10648                           ; BSR set to: 14
 10649                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 10650  015172  8C73               	bsf	3955,6,c	;volatile
 10651                           
 10652                           ; BSR set to: 14
 10653                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 10654  015174  9872               	bcf	3954,4,c	;volatile
 10655                           
 10656                           ; BSR set to: 14
 10657                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 10658  015176  9072               	bcf	3954,0,c	;volatile
 10659  015178  9272               	bcf	3954,1,c	;volatile
 10660  01517A  9472               	bcf	3954,2,c	;volatile
 10661  01517C  9672               	bcf	3954,3,c	;volatile
 10662                           
 10663                           ; BSR set to: 14
 10664                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 10665  01517E  8A72               	bsf	3954,5,c	;volatile
 10666                           
 10667                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 10668  015180  0E00               	movlw	0
 10669  015182  0100               	movlb	0	; () banked
 10670  015184  6FE0               	movwf	_power_state& (0+255),b
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 10674  015186  0E00               	movlw	0
 10675  015188  ECF0  F0A0         	call	__flash_set_page_size
 10676  01518C  0012               	return		;funcret
 10677  01518E                     __end_of_flash_init:
 10678                           	opt stack 0
 10679                           tblptru	equ	0xFF8
 10680                           tblptrh	equ	0xFF7
 10681                           tblptrl	equ	0xFF6
 10682                           tablat	equ	0xFF5
 10683                           prodh	equ	0xFF4
 10684                           prodl	equ	0xFF3
 10685                           intcon3	equ	0xFF0
 10686                           postinc0	equ	0xFEE
 10687                           wreg	equ	0xFE8
 10688                           postdec1	equ	0xFE5
 10689                           plusw1	equ	0xFE3
 10690                           fsr1h	equ	0xFE2
 10691                           fsr1l	equ	0xFE1
 10692                           indf2	equ	0xFDF
 10693                           postinc2	equ	0xFDE
 10694                           postdec2	equ	0xFDD
 10695                           plusw2	equ	0xFDB
 10696                           fsr2h	equ	0xFDA
 10697                           fsr2l	equ	0xFD9
 10698                           status	equ	0xFD8
 10699                           
 10700 ;; *************** function __flash_set_page_size *****************
 10701 ;; Defined at:
 10702 ;;		line 260 in file "flash.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  size            1    wreg     enum E6850
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  size            1   23[BANK0 ] enum E6850
 10707 ;;  command         4   19[BANK0 ] unsigned char [4]
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10718 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10720 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10721 ;;Total ram usage:        5 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:   13
 10724 ;; This function calls:
 10725 ;;		__flash_spi_tx
 10726 ;;		_flash_is_busy
 10727 ;;		_memcpy
 10728 ;; This function is called by:
 10729 ;;		_flash_init
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text39
 10734  0141E0                     __ptext39:
 10735                           	opt stack 0
 10736  0141E0                     __flash_set_page_size:
 10737                           	opt stack 15
 10738                           
 10739                           ;incstack = 0
 10740                           ;__flash_set_page_size@size stored from wreg
 10741  0141E0  0100               	movlb	0	; () banked
 10742  0141E2  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 10743  0141E4                     
 10744                           ;flash.c: 262: uint8_t command[4];;flash.c: 265: while(flash_is_busy());
 10745  0141E4  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 10746  0141E8  0900               	iorlw	0
 10747  0141EA  A4D8               	btfss	status,2,c
 10748  0141EC  D7FB               	goto	l20021
 10749                           
 10750                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 10751  0141EE  0100               	movlb	0	; () banked
 10752  0141F0  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 10753  0141F2  A4D8               	btfss	status,2,c
 10754  0141F4  D00E               	goto	l2777
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 10758  0141F6  0E73               	movlw	low __flash_set_page_size@command
 10759  0141F8  6F60               	movwf	memcpy@d1& (0+255),b
 10760  0141FA  0E00               	movlw	high __flash_set_page_size@command
 10761  0141FC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10762  0141FE  0E2E               	movlw	low _flash_command_pagesize_512
 10763  014200  6F62               	movwf	memcpy@s1& (0+255),b
 10764  014202  0EC4               	movlw	high _flash_command_pagesize_512
 10765  014204  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10766  014206  0E00               	movlw	0
 10767  014208  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10768  01420A  0E04               	movlw	4
 10769  01420C  6F64               	movwf	memcpy@n& (0+255),b
 10770  01420E  EC8B  F0A3         	call	_memcpy	;wreg free
 10771  014212                     l2777:
 10772                           
 10773                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 10774  014212  0100               	movlb	0	; () banked
 10775  014214  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 10776  014216  A4D8               	btfss	status,2,c
 10777  014218  D00E               	goto	l2778
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 10781  01421A  0E73               	movlw	low __flash_set_page_size@command
 10782  01421C  6F60               	movwf	memcpy@d1& (0+255),b
 10783  01421E  0E00               	movlw	high __flash_set_page_size@command
 10784  014220  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10785  014222  0E2A               	movlw	low _flash_command_pagesize_528
 10786  014224  6F62               	movwf	memcpy@s1& (0+255),b
 10787  014226  0EC4               	movlw	high _flash_command_pagesize_528
 10788  014228  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10789  01422A  0E00               	movlw	0
 10790  01422C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10791  01422E  0E04               	movlw	4
 10792  014230  6F64               	movwf	memcpy@n& (0+255),b
 10793  014232  EC8B  F0A3         	call	_memcpy	;wreg free
 10794  014236                     l2778:
 10795                           
 10796                           ;flash.c: 274: _flash_spi_tx(command, 4);
 10797  014236  0E73               	movlw	low __flash_set_page_size@command
 10798  014238  0100               	movlb	0	; () banked
 10799  01423A  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 10800  01423C  0E00               	movlw	high __flash_set_page_size@command
 10801  01423E  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 10802  014240  0E00               	movlw	0
 10803  014242  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 10804  014244  0E04               	movlw	4
 10805  014246  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 10806  014248  EC55  F0A5         	call	__flash_spi_tx	;wreg free
 10807  01424C  0012               	return		;funcret
 10808  01424E                     __end_of__flash_set_page_size:
 10809                           	opt stack 0
 10810                           tblptru	equ	0xFF8
 10811                           tblptrh	equ	0xFF7
 10812                           tblptrl	equ	0xFF6
 10813                           tablat	equ	0xFF5
 10814                           prodh	equ	0xFF4
 10815                           prodl	equ	0xFF3
 10816                           intcon3	equ	0xFF0
 10817                           postinc0	equ	0xFEE
 10818                           wreg	equ	0xFE8
 10819                           postdec1	equ	0xFE5
 10820                           plusw1	equ	0xFE3
 10821                           fsr1h	equ	0xFE2
 10822                           fsr1l	equ	0xFE1
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           postdec2	equ	0xFDD
 10826                           plusw2	equ	0xFDB
 10827                           fsr2h	equ	0xFDA
 10828                           fsr2l	equ	0xFD9
 10829                           status	equ	0xFD8
 10830                           
 10831 ;; *************** function _buck_init *****************
 10832 ;; Defined at:
 10833 ;;		line 543 in file "buck.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;		None
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10851 ;;Total ram usage:        0 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:   11
 10854 ;; This function calls:
 10855 ;;		__buck_pin_init
 10856 ;;		__buck_timer2_init
 10857 ;; This function is called by:
 10858 ;;		_system_init
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text40
 10863  015E04                     __ptext40:
 10864                           	opt stack 0
 10865  015E04                     _buck_init:
 10866                           	opt stack 18
 10867                           
 10868                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 10869                           
 10870                           ;incstack = 0
 10871  015E04  0E00               	movlw	0
 10872  015E06  6E1C               	movwf	_buck_status,c
 10873                           
 10874                           ;buck.c: 546: _buck_timer2_init();
 10875  015E08  EC1C  F0AE         	call	__buck_timer2_init	;wreg free
 10876                           
 10877                           ;buck.c: 547: _buck_pin_init();
 10878  015E0C  ECD8  F0AA         	call	__buck_pin_init	;wreg free
 10879  015E10  0012               	return		;funcret
 10880  015E12                     __end_of_buck_init:
 10881                           	opt stack 0
 10882                           tblptru	equ	0xFF8
 10883                           tblptrh	equ	0xFF7
 10884                           tblptrl	equ	0xFF6
 10885                           tablat	equ	0xFF5
 10886                           prodh	equ	0xFF4
 10887                           prodl	equ	0xFF3
 10888                           intcon3	equ	0xFF0
 10889                           postinc0	equ	0xFEE
 10890                           wreg	equ	0xFE8
 10891                           postdec1	equ	0xFE5
 10892                           plusw1	equ	0xFE3
 10893                           fsr1h	equ	0xFE2
 10894                           fsr1l	equ	0xFE1
 10895                           indf2	equ	0xFDF
 10896                           postinc2	equ	0xFDE
 10897                           postdec2	equ	0xFDD
 10898                           plusw2	equ	0xFDB
 10899                           fsr2h	equ	0xFDA
 10900                           fsr2l	equ	0xFD9
 10901                           status	equ	0xFD8
 10902                           
 10903 ;; *************** function __buck_timer2_init *****************
 10904 ;; Defined at:
 10905 ;;		line 64 in file "buck.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		None
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:   10
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_buck_init
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text41
 10934  015C38                     __ptext41:
 10935                           	opt stack 0
 10936  015C38                     __buck_timer2_init:
 10937                           	opt stack 18
 10938                           
 10939                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 10940                           
 10941                           ;incstack = 0
 10942  015C38  010F               	movlb	15	; () banked
 10943  015C3A  9152               	bcf	82,0,b	;volatile
 10944  015C3C  9352               	bcf	82,1,b	;volatile
 10945  015C3E  9552               	bcf	82,2,b	;volatile
 10946                           
 10947                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 10948  015C40  86CA               	bsf	4042,3,c	;volatile
 10949  015C42  88CA               	bsf	4042,4,c	;volatile
 10950  015C44  8ACA               	bsf	4042,5,c	;volatile
 10951  015C46  8CCA               	bsf	4042,6,c	;volatile
 10952                           
 10953                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 10954  015C48  92CA               	bcf	4042,1,c	;volatile
 10955                           
 10956                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 10957  015C4A  90CA               	bcf	4042,0,c	;volatile
 10958                           
 10959                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 10960  015C4C  94CA               	bcf	4042,2,c	;volatile
 10961                           
 10962                           ; BSR set to: 15
 10963  015C4E  0012               	return		;funcret
 10964  015C50                     __end_of__buck_timer2_init:
 10965                           	opt stack 0
 10966                           tblptru	equ	0xFF8
 10967                           tblptrh	equ	0xFF7
 10968                           tblptrl	equ	0xFF6
 10969                           tablat	equ	0xFF5
 10970                           prodh	equ	0xFF4
 10971                           prodl	equ	0xFF3
 10972                           intcon3	equ	0xFF0
 10973                           postinc0	equ	0xFEE
 10974                           wreg	equ	0xFE8
 10975                           postdec1	equ	0xFE5
 10976                           plusw1	equ	0xFE3
 10977                           fsr1h	equ	0xFE2
 10978                           fsr1l	equ	0xFE1
 10979                           indf2	equ	0xFDF
 10980                           postinc2	equ	0xFDE
 10981                           postdec2	equ	0xFDD
 10982                           plusw2	equ	0xFDB
 10983                           fsr2h	equ	0xFDA
 10984                           fsr2l	equ	0xFD9
 10985                           status	equ	0xFD8
 10986                           
 10987 ;; *************** function __buck_pin_init *****************
 10988 ;; Defined at:
 10989 ;;		line 41 in file "buck.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11007 ;;Total ram usage:        0 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:   10
 11010 ;; This function calls:
 11011 ;;		Nothing
 11012 ;; This function is called by:
 11013 ;;		_buck_init
 11014 ;; This function uses a non-reentrant model
 11015 ;;
 11016                           
 11017                           	psect	text42
 11018  0155B0                     __ptext42:
 11019                           	opt stack 0
 11020  0155B0                     __buck_pin_init:
 11021                           	opt stack 18
 11022                           
 11023                           ;buck.c: 44: LATBbits.LB1 = 0;
 11024                           
 11025                           ; BSR set to: 15
 11026                           ;incstack = 0
 11027  0155B0  928A               	bcf	3978,1,c	;volatile
 11028                           
 11029                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 11030  0155B2  9293               	bcf	3987,1,c	;volatile
 11031                           
 11032                           ;buck.c: 46: LATBbits.LB2 = 0;
 11033  0155B4  948A               	bcf	3978,2,c	;volatile
 11034                           
 11035                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 11036  0155B6  9493               	bcf	3987,2,c	;volatile
 11037                           
 11038                           ;buck.c: 48: LATBbits.LB3 = 0;
 11039  0155B8  968A               	bcf	3978,3,c	;volatile
 11040                           
 11041                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 11042  0155BA  9693               	bcf	3987,3,c	;volatile
 11043                           
 11044                           ;buck.c: 52: LATBbits.LATB2 = 0;
 11045  0155BC  948A               	bcf	3978,2,c	;volatile
 11046                           
 11047                           ;buck.c: 53: LATBbits.LATB1 = 0;
 11048  0155BE  928A               	bcf	3978,1,c	;volatile
 11049                           
 11050                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11051  0155C0  0E55               	movlw	85
 11052  0155C2  6EA7               	movwf	4007,c	;volsfr
 11053  0155C4  0EAA               	movlw	170
 11054  0155C6  6EA7               	movwf	4007,c	;volsfr
 11055  0155C8  010E               	movlb	14	; () banked
 11056  0155CA  91BF               	bcf	191,0,b	;volatile
 11057                           
 11058                           ;buck.c: 57: RPOR6 = 14;
 11059  0155CC  0E0E               	movlw	14
 11060  0155CE  6FC6               	movwf	198,b	;volatile
 11061                           
 11062                           ;buck.c: 58: RPOR5 = 15;
 11063  0155D0  0E0F               	movlw	15
 11064  0155D2  6FC5               	movwf	197,b	;volatile
 11065                           
 11066                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11067  0155D4  0E55               	movlw	85
 11068  0155D6  6EA7               	movwf	4007,c	;volsfr
 11069  0155D8  0EAA               	movlw	170
 11070  0155DA  6EA7               	movwf	4007,c	;volsfr
 11071                           
 11072                           ; BSR set to: 14
 11073  0155DC  81BF               	bsf	191,0,b	;volatile
 11074                           
 11075                           ; BSR set to: 14
 11076  0155DE  0012               	return		;funcret
 11077  0155E0                     __end_of__buck_pin_init:
 11078                           	opt stack 0
 11079                           tblptru	equ	0xFF8
 11080                           tblptrh	equ	0xFF7
 11081                           tblptrl	equ	0xFF6
 11082                           tablat	equ	0xFF5
 11083                           prodh	equ	0xFF4
 11084                           prodl	equ	0xFF3
 11085                           intcon3	equ	0xFF0
 11086                           postinc0	equ	0xFEE
 11087                           wreg	equ	0xFE8
 11088                           postdec1	equ	0xFE5
 11089                           plusw1	equ	0xFE3
 11090                           fsr1h	equ	0xFE2
 11091                           fsr1l	equ	0xFE1
 11092                           indf2	equ	0xFDF
 11093                           postinc2	equ	0xFDE
 11094                           postdec2	equ	0xFDD
 11095                           plusw2	equ	0xFDB
 11096                           fsr2h	equ	0xFDA
 11097                           fsr2l	equ	0xFD9
 11098                           status	equ	0xFD8
 11099                           
 11100 ;; *************** function _adc_init *****************
 11101 ;; Defined at:
 11102 ;;		line 9 in file "adc.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;		None
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11120 ;;Total ram usage:        0 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:   10
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_system_init
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text43
 11131  015B7E                     __ptext43:
 11132                           	opt stack 0
 11133  015B7E                     _adc_init:
 11134                           	opt stack 19
 11135                           
 11136                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 11137                           
 11138                           ; BSR set to: 14
 11139                           ;incstack = 0
 11140  015B7E  9EC2               	bcf	4034,7,c	;volatile
 11141                           
 11142                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 11143  015B80  8CC2               	bsf	4034,6,c	;volatile
 11144                           
 11145                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 11146  015B82  50C2               	movf	4034,w,c	;volatile
 11147  015B84  0BC3               	andlw	-61
 11148  015B86  0930               	iorlw	48
 11149  015B88  6EC2               	movwf	4034,c	;volatile
 11150                           
 11151                           ;adc.c: 14: ADCON0bits.ADON = 1;
 11152  015B8A  80C2               	bsf	4034,0,c	;volatile
 11153                           
 11154                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 11155  015B8C  9EC1               	bcf	4033,7,c	;volatile
 11156                           
 11157                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 11158  015B8E  9CC1               	bcf	4033,6,c	;volatile
 11159                           
 11160                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 11161  015B90  50C1               	movf	4033,w,c	;volatile
 11162  015B92  0BF8               	andlw	-8
 11163  015B94  0906               	iorlw	6
 11164  015B96  6EC1               	movwf	4033,c	;volatile
 11165  015B98  0012               	return		;funcret
 11166  015B9A                     __end_of_adc_init:
 11167                           	opt stack 0
 11168                           tblptru	equ	0xFF8
 11169                           tblptrh	equ	0xFF7
 11170                           tblptrl	equ	0xFF6
 11171                           tablat	equ	0xFF5
 11172                           prodh	equ	0xFF4
 11173                           prodl	equ	0xFF3
 11174                           intcon3	equ	0xFF0
 11175                           postinc0	equ	0xFEE
 11176                           wreg	equ	0xFE8
 11177                           postdec1	equ	0xFE5
 11178                           plusw1	equ	0xFE3
 11179                           fsr1h	equ	0xFE2
 11180                           fsr1l	equ	0xFE1
 11181                           indf2	equ	0xFDF
 11182                           postinc2	equ	0xFDE
 11183                           postdec2	equ	0xFDD
 11184                           plusw2	equ	0xFDB
 11185                           fsr2h	equ	0xFDA
 11186                           fsr2l	equ	0xFD9
 11187                           status	equ	0xFD8
 11188                           
 11189 ;; *************** function __system_timer0_init *****************
 11190 ;; Defined at:
 11191 ;;		line 214 in file "os.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;		None
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;		None
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  1    wreg      void 
 11198 ;; Registers used:
 11199 ;;		wreg, status,2, status,0
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11209 ;;Total ram usage:        0 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; Hardware stack levels required when called:   10
 11212 ;; This function calls:
 11213 ;;		Nothing
 11214 ;; This function is called by:
 11215 ;;		_system_init
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219                           	psect	text44
 11220  01529C                     __ptext44:
 11221                           	opt stack 0
 11222  01529C                     __system_timer0_init:
 11223                           	opt stack 19
 11224                           
 11225                           ;os.c: 217: T0CONbits.T0CS = 0;
 11226                           
 11227                           ;incstack = 0
 11228  01529C  9AD5               	bcf	4053,5,c	;volatile
 11229                           
 11230                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11231  01529E  9CD5               	bcf	4053,6,c	;volatile
 11232                           
 11233                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11234  0152A0  94D5               	bcf	4053,2,c	;volatile
 11235                           
 11236                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11237  0152A2  82D5               	bsf	4053,1,c	;volatile
 11238                           
 11239                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11240  0152A4  90D5               	bcf	4053,0,c	;volatile
 11241                           
 11242                           ;os.c: 225: T0CONbits.PSA = 0;
 11243  0152A6  96D5               	bcf	4053,3,c	;volatile
 11244                           
 11245                           ;os.c: 227: switch(os.clockFrequency)
 11246  0152A8  D009               	goto	l1373
 11247  0152AA                     
 11248                           ;os.c: 230: TMR0H = 0xF8;
 11249  0152AA  0EF8               	movlw	248
 11250  0152AC  6ED7               	movwf	4055,c	;volatile
 11251                           
 11252                           ;os.c: 231: TMR0L = 0x30;
 11253  0152AE  0E30               	movlw	48
 11254  0152B0  D003               	goto	L8
 11255  0152B2                     
 11256                           ;os.c: 234: TMR0H = 0xD1;
 11257  0152B2  0ED1               	movlw	209
 11258  0152B4  6ED7               	movwf	4055,c	;volatile
 11259                           
 11260                           ;os.c: 235: TMR0L = 0x20;
 11261  0152B6  0E20               	movlw	32
 11262  0152B8                     L8:
 11263  0152B8  6ED6               	movwf	4054,c	;volatile
 11264                           
 11265                           ;os.c: 237: }
 11266                           
 11267                           ;os.c: 236: break;
 11268  0152BA  D008               	goto	l1375
 11269  0152BC                     l1373:
 11270  0152BC  0102               	movlb	2	; () banked
 11271  0152BE  5100               	movf	_os& (0+255),w,b	;volatile
 11272                           
 11273                           ; Switch size 1, requested type "space"
 11274                           ; Number of cases is 2, Range of values is 1 to 2
 11275                           ; switch strategies available:
 11276                           ; Name         Instructions Cycles
 11277                           ; simple_byte            7     4 (average)
 11278                           ;	Chosen strategy is simple_byte
 11279  0152C0  0A01               	xorlw	1	; case 1
 11280  0152C2  B4D8               	btfsc	status,2,c
 11281  0152C4  D7F2               	goto	l1374
 11282  0152C6  0A03               	xorlw	3	; case 2
 11283  0152C8  B4D8               	btfsc	status,2,c
 11284  0152CA  D7F3               	goto	l1376
 11285  0152CC                     l1375:
 11286                           
 11287                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11288  0152CC  8ED5               	bsf	4053,7,c	;volatile
 11289                           
 11290                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11291  0152CE  94F2               	bcf	intcon,2,c	;volatile
 11292                           
 11293                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11294  0152D0  8AF2               	bsf	intcon,5,c	;volatile
 11295                           
 11296                           ;os.c: 244: INTCONbits.GIE = 1;
 11297  0152D2  8EF2               	bsf	intcon,7,c	;volatile
 11298                           
 11299                           ;os.c: 247: os.timeSlot = 0;
 11300  0152D4  0E00               	movlw	0
 11301  0152D6  0102               	movlb	2	; () banked
 11302  0152D8  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11303                           
 11304                           ; BSR set to: 2
 11305  0152DA  0012               	return		;funcret
 11306  0152DC                     __end_of__system_timer0_init:
 11307                           	opt stack 0
 11308                           tblptru	equ	0xFF8
 11309                           tblptrh	equ	0xFF7
 11310                           tblptrl	equ	0xFF6
 11311                           tablat	equ	0xFF5
 11312                           prodh	equ	0xFF4
 11313                           prodl	equ	0xFF3
 11314                           intcon	equ	0xFF2
 11315                           intcon3	equ	0xFF0
 11316                           postinc0	equ	0xFEE
 11317                           wreg	equ	0xFE8
 11318                           postdec1	equ	0xFE5
 11319                           plusw1	equ	0xFE3
 11320                           fsr1h	equ	0xFE2
 11321                           fsr1l	equ	0xFE1
 11322                           indf2	equ	0xFDF
 11323                           postinc2	equ	0xFDE
 11324                           postdec2	equ	0xFDD
 11325                           plusw2	equ	0xFDB
 11326                           fsr2h	equ	0xFDA
 11327                           fsr2l	equ	0xFD9
 11328                           status	equ	0xFD8
 11329                           
 11330 ;; *************** function __system_encoder_init *****************
 11331 ;; Defined at:
 11332 ;;		line 160 in file "os.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;		None
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;		None
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  1    wreg      void 
 11339 ;; Registers used:
 11340 ;;		wreg, status,2
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11350 ;;Total ram usage:        0 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; Hardware stack levels required when called:   10
 11353 ;; This function calls:
 11354 ;;		Nothing
 11355 ;; This function is called by:
 11356 ;;		_system_init
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text45
 11361  0152DC                     __ptext45:
 11362                           	opt stack 0
 11363  0152DC                     __system_encoder_init:
 11364                           	opt stack 19
 11365                           
 11366                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11367                           
 11368                           ; BSR set to: 2
 11369                           ;incstack = 0
 11370  0152DC  0E55               	movlw	85
 11371  0152DE  6EA7               	movwf	4007,c	;volsfr
 11372  0152E0  0EAA               	movlw	170
 11373  0152E2  6EA7               	movwf	4007,c	;volsfr
 11374  0152E4  010E               	movlb	14	; () banked
 11375  0152E6  91BF               	bcf	191,0,b	;volatile
 11376                           
 11377                           ;os.c: 163: RPINR1 = 0;
 11378  0152E8  0E00               	movlw	0
 11379  0152EA  6FE1               	movwf	225,b	;volatile
 11380                           
 11381                           ;os.c: 164: RPINR3 = 9;
 11382  0152EC  0E09               	movlw	9
 11383  0152EE  6FE3               	movwf	227,b	;volatile
 11384                           
 11385                           ;os.c: 165: RPINR2 = 10;
 11386  0152F0  0E0A               	movlw	10
 11387  0152F2  6FE2               	movwf	226,b	;volatile
 11388                           
 11389                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11390  0152F4  0E55               	movlw	85
 11391  0152F6  6EA7               	movwf	4007,c	;volsfr
 11392  0152F8  0EAA               	movlw	170
 11393  0152FA  6EA7               	movwf	4007,c	;volsfr
 11394                           
 11395                           ; BSR set to: 14
 11396  0152FC  91BF               	bcf	191,0,b	;volatile
 11397                           
 11398                           ; BSR set to: 14
 11399                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11400  0152FE  9AF1               	bcf	intcon2,5,c	;volatile
 11401                           
 11402                           ; BSR set to: 14
 11403                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11404  015300  90F0               	bcf	intcon3,0,c	;volatile
 11405                           
 11406                           ; BSR set to: 14
 11407                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11408  015302  86F0               	bsf	intcon3,3,c	;volatile
 11409                           
 11410                           ; BSR set to: 14
 11411                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11412  015304  88F1               	bsf	intcon2,4,c	;volatile
 11413                           
 11414                           ; BSR set to: 14
 11415                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11416  015306  92F0               	bcf	intcon3,1,c	;volatile
 11417                           
 11418                           ; BSR set to: 14
 11419                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11420  015308  86F1               	bsf	intcon2,3,c	;volatile
 11421                           
 11422                           ; BSR set to: 14
 11423                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11424  01530A  94F0               	bcf	intcon3,2,c	;volatile
 11425                           
 11426                           ; BSR set to: 14
 11427                           ;os.c: 185: INTCONbits.GIE = 1;
 11428  01530C  8EF2               	bsf	intcon,7,c	;volatile
 11429                           
 11430                           ;os.c: 187: os.encoderCount = 0;
 11431  01530E  0E00               	movlw	0
 11432  015310  0102               	movlb	2	; () banked
 11433  015312  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11434                           
 11435                           ;os.c: 188: os.buttonCount = 0;
 11436  015314  0E00               	movlw	0
 11437  015316  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11438                           
 11439                           ; BSR set to: 2
 11440  015318  0012               	return		;funcret
 11441  01531A                     __end_of__system_encoder_init:
 11442                           	opt stack 0
 11443                           tblptru	equ	0xFF8
 11444                           tblptrh	equ	0xFF7
 11445                           tblptrl	equ	0xFF6
 11446                           tablat	equ	0xFF5
 11447                           prodh	equ	0xFF4
 11448                           prodl	equ	0xFF3
 11449                           intcon	equ	0xFF2
 11450                           intcon2	equ	0xFF1
 11451                           intcon3	equ	0xFF0
 11452                           postinc0	equ	0xFEE
 11453                           wreg	equ	0xFE8
 11454                           postdec1	equ	0xFE5
 11455                           plusw1	equ	0xFE3
 11456                           fsr1h	equ	0xFE2
 11457                           fsr1l	equ	0xFE1
 11458                           indf2	equ	0xFDF
 11459                           postinc2	equ	0xFDE
 11460                           postdec2	equ	0xFDD
 11461                           plusw2	equ	0xFDB
 11462                           fsr2h	equ	0xFDA
 11463                           fsr2l	equ	0xFD9
 11464                           status	equ	0xFD8
 11465                           
 11466 ;; *************** function _system_calculate_output_voltage *****************
 11467 ;; Defined at:
 11468 ;;		line 587 in file "os.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  tmp             4   16[BANK0 ] long 
 11473 ;; Return value:  Size  Location     Type
 11474 ;;                  1    wreg      void 
 11475 ;; Registers used:
 11476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11485 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11486 ;;Total ram usage:        8 bytes
 11487 ;; Hardware stack levels used:    1
 11488 ;; Hardware stack levels required when called:   11
 11489 ;; This function calls:
 11490 ;;		___lmul
 11491 ;; This function is called by:
 11492 ;;		_main
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text46
 11497  0123E8                     __ptext46:
 11498                           	opt stack 0
 11499  0123E8                     _system_calculate_output_voltage:
 11500                           	opt stack 19
 11501                           
 11502                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 11503                           
 11504                           ; BSR set to: 2
 11505                           ;incstack = 0
 11506  0123E8  0102               	movlb	2	; () banked
 11507  0123EA  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 11508  0123EC  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 11509  0123EE  0100               	movlb	0	; () banked
 11510  0123F0  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 11511  0123F2  0102               	movlb	2	; () banked
 11512  0123F4  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 11513  0123F6  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 11514  0123F8  0100               	movlb	0	; () banked
 11515  0123FA  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11516  0123FC  0102               	movlb	2	; () banked
 11517  0123FE  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 11518  012400  0100               	movlb	0	; () banked
 11519  012402  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11520  012404  0102               	movlb	2	; () banked
 11521  012406  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 11522  012408  0100               	movlb	0	; () banked
 11523  01240A  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11524  01240C  0102               	movlb	2	; () banked
 11525  01240E  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 11526  012410  0100               	movlb	0	; () banked
 11527  012412  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11528  012414  0102               	movlb	2	; () banked
 11529  012416  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 11530  012418  0100               	movlb	0	; () banked
 11531  01241A  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11532  01241C  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 11533  012420  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 11534  012424  0E00               	movlw	0
 11535  012426  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 11536  012428  0EFF               	movlw	-1
 11537  01242A  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 11538  01242C  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 11539                           
 11540                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 11541  01242E  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 11542  012432  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 11543  012436  0E00               	movlw	0
 11544  012438  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 11545  01243A  0EFF               	movlw	255
 11546  01243C  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 11547  01243E  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 11548  012440  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 11549  012442  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11550  012444  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 11551  012446  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11552  012448  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 11553  01244A  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11554  01244C  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 11555  01244E  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 11559  012450  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 11560  012454  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 11561  012458  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 11562  01245C  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 11563  012460  EE23  F013         	lfsr	2,_calibrationParameters+19
 11564  012464  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11565  012468  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11566  01246C  0E00               	movlw	0
 11567  01246E  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11568  012470  0EFF               	movlw	-1
 11569  012472  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11570  012474  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11571  012476  EC82  F0A5         	call	___lmul	;wreg free
 11572  01247A  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 11573  01247E  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 11574  012482  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 11575  012486  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 11576                           
 11577                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 11578  01248A  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 11579  01248E  0EFF               	movlw	-1
 11580  012490  0100               	movlb	0	; () banked
 11581  012492  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11582  012494  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 11583  012496  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11584  012498  D005               	goto	u22430
 11585  01249A                     u22435:
 11586  01249A  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11587  01249C  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11588  01249E  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11589  0124A0  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11590  0124A2  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11591  0124A4                     u22430:
 11592  0124A4  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11593  0124A6  D7F9               	goto	u22435
 11594                           
 11595                           ;os.c: 593: tmp += 1;
 11596  0124A8  0E01               	movlw	1
 11597  0124AA  0100               	movlb	0	; () banked
 11598  0124AC  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11599  0124AE  0E00               	movlw	0
 11600  0124B0  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11601  0124B2  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11602  0124B4  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;os.c: 594: tmp >>= 1;
 11606  0124B6  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11607  0124B8  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11608  0124BA  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11609  0124BC  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11610  0124BE  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 11614  0124C0  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 11615  0124C4  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 11616                           
 11617                           ; BSR set to: 0
 11618  0124C8  0012               	return		;funcret
 11619  0124CA                     __end_of_system_calculate_output_voltage:
 11620                           	opt stack 0
 11621                           tblptru	equ	0xFF8
 11622                           tblptrh	equ	0xFF7
 11623                           tblptrl	equ	0xFF6
 11624                           tablat	equ	0xFF5
 11625                           prodh	equ	0xFF4
 11626                           prodl	equ	0xFF3
 11627                           intcon	equ	0xFF2
 11628                           intcon2	equ	0xFF1
 11629                           intcon3	equ	0xFF0
 11630                           postinc0	equ	0xFEE
 11631                           wreg	equ	0xFE8
 11632                           postdec1	equ	0xFE5
 11633                           plusw1	equ	0xFE3
 11634                           fsr1h	equ	0xFE2
 11635                           fsr1l	equ	0xFE1
 11636                           indf2	equ	0xFDF
 11637                           postinc2	equ	0xFDE
 11638                           postdec2	equ	0xFDD
 11639                           plusw2	equ	0xFDB
 11640                           fsr2h	equ	0xFDA
 11641                           fsr2l	equ	0xFD9
 11642                           status	equ	0xFD8
 11643                           
 11644 ;; *************** function _system_calculate_output_current *****************
 11645 ;; Defined at:
 11646 ;;		line 625 in file "os.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;		None
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;  tmp             4   16[BANK0 ] long 
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      void 
 11653 ;; Registers used:
 11654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11663 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11664 ;;Total ram usage:        8 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; Hardware stack levels required when called:   11
 11667 ;; This function calls:
 11668 ;;		___lmul
 11669 ;;		_buck_get_mode
 11670 ;; This function is called by:
 11671 ;;		_main
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text47
 11676  01118E                     __ptext47:
 11677                           	opt stack 0
 11678  01118E                     _system_calculate_output_current:
 11679                           	opt stack 19
 11680                           
 11681                           ;os.c: 627: int32_t tmp;;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_m
      +                          ode()==BUCK_STATUS_REMOTE_OFF))
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;incstack = 0
 11685  01118E  EC79  F0AF         	call	_buck_get_mode	;wreg free
 11686  011192  0900               	iorlw	0
 11687  011194  B4D8               	btfsc	status,2,c
 11688  011196  D005               	goto	u22460
 11689  011198  EC79  F0AF         	call	_buck_get_mode	;wreg free
 11690  01119C  0A80               	xorlw	128
 11691  01119E  A4D8               	btfss	status,2,c
 11692  0111A0  D006               	goto	l1440
 11693  0111A2                     u22460:
 11694                           
 11695                           ;os.c: 630: {;os.c: 631: os.output_current = 0;
 11696  0111A2  0E00               	movlw	0
 11697  0111A4  0102               	movlb	2	; () banked
 11698  0111A6  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 11699  0111A8  0E00               	movlw	0
 11700  0111AA  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 11701                           
 11702                           ;os.c: 632: }
 11703  0111AC  0012               	return	
 11704  0111AE                     l1440:
 11705                           
 11706                           ;os.c: 633: else;os.c: 634: {;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.
      +                          output_current_adc[1] + os.output_current_adc[2] + os.output_current_adc[3]);
 11707                           
 11708                           ; BSR set to: 2
 11709  0111AE  0102               	movlb	2	; () banked
 11710  0111B0  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 11711  0111B2  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 11712  0111B4  0100               	movlb	0	; () banked
 11713  0111B6  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 11714  0111B8  0102               	movlb	2	; () banked
 11715  0111BA  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 11716  0111BC  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 11717  0111BE  0100               	movlb	0	; () banked
 11718  0111C0  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11719  0111C2  0102               	movlb	2	; () banked
 11720  0111C4  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 11721  0111C6  0100               	movlb	0	; () banked
 11722  0111C8  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11723  0111CA  0102               	movlb	2	; () banked
 11724  0111CC  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 11725  0111CE  0100               	movlb	0	; () banked
 11726  0111D0  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11727  0111D2  0102               	movlb	2	; () banked
 11728  0111D4  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 11729  0111D6  0100               	movlb	0	; () banked
 11730  0111D8  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11731  0111DA  0102               	movlb	2	; () banked
 11732  0111DC  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 11733  0111DE  0100               	movlb	0	; () banked
 11734  0111E0  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11735  0111E2  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 11736  0111E6  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 11737  0111EA  0E00               	movlw	0
 11738  0111EC  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 11739  0111EE  0EFF               	movlw	-1
 11740  0111F0  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 11741  0111F2  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 11742                           
 11743                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 11744  0111F4  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 11745  0111F8  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 11746  0111FC  0E00               	movlw	0
 11747  0111FE  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11748  011200  0EFF               	movlw	255
 11749  011202  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11750  011204  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11751  011206  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11752  011208  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11753  01120A  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11754  01120C  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11755  01120E  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11756  011210  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11757  011212  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11758  011214  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11759                           
 11760                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 11761  011216  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 11762  01121A  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 11763  01121E  0E00               	movlw	0
 11764  011220  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11765  011222  0EFF               	movlw	255
 11766  011224  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11767  011226  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11768  011228  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11769  01122A  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11770  01122C  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11771  01122E  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11772  011230  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11773  011232  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11774  011234  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11775  011236  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 11779  011238  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 11780  01123C  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 11781  011240  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 11782  011244  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 11783  011248  EE23  F02B         	lfsr	2,_calibrationParameters+43
 11784  01124C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11785  011250  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11786  011254  0E00               	movlw	0
 11787  011256  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11788  011258  0EFF               	movlw	-1
 11789  01125A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11790  01125C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11791  01125E  EC82  F0A5         	call	___lmul	;wreg free
 11792  011262  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 11793  011266  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 11794  01126A  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 11795  01126E  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 11796                           
 11797                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 11798  011272  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 11799  011276  0EFF               	movlw	-1
 11800  011278  0100               	movlb	0	; () banked
 11801  01127A  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11802  01127C  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 11803  01127E  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11804  011280  D005               	goto	u22470
 11805  011282                     u22475:
 11806  011282  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11807  011284  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11808  011286  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11809  011288  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11810  01128A  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11811  01128C                     u22470:
 11812  01128C  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 11813  01128E  D7F9               	goto	u22475
 11814                           
 11815                           ;os.c: 640: tmp += 1;
 11816  011290  0E01               	movlw	1
 11817  011292  0100               	movlb	0	; () banked
 11818  011294  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11819  011296  0E00               	movlw	0
 11820  011298  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11821  01129A  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11822  01129C  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;os.c: 641: tmp >>= 1;
 11826  01129E  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11827  0112A0  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11828  0112A2  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11829  0112A4  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11830  0112A6  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;os.c: 642: os.output_current = (int16_t) tmp;
 11834  0112A8  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 11835  0112AC  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 11836  0112B0  0012               	return	
 11837  0112B2                     __end_of_system_calculate_output_current:
 11838                           	opt stack 0
 11839                           tblptru	equ	0xFF8
 11840                           tblptrh	equ	0xFF7
 11841                           tblptrl	equ	0xFF6
 11842                           tablat	equ	0xFF5
 11843                           prodh	equ	0xFF4
 11844                           prodl	equ	0xFF3
 11845                           intcon	equ	0xFF2
 11846                           intcon2	equ	0xFF1
 11847                           intcon3	equ	0xFF0
 11848                           postinc0	equ	0xFEE
 11849                           wreg	equ	0xFE8
 11850                           postdec1	equ	0xFE5
 11851                           plusw1	equ	0xFE3
 11852                           fsr1h	equ	0xFE2
 11853                           fsr1l	equ	0xFE1
 11854                           indf2	equ	0xFDF
 11855                           postinc2	equ	0xFDE
 11856                           postdec2	equ	0xFDD
 11857                           plusw2	equ	0xFDB
 11858                           fsr2h	equ	0xFDA
 11859                           fsr2l	equ	0xFD9
 11860                           status	equ	0xFD8
 11861                           
 11862 ;; *************** function _system_calculate_input_voltage *****************
 11863 ;; Defined at:
 11864 ;;		line 570 in file "os.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;		None
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;  tmp             4   16[BANK0 ] long 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      void 
 11871 ;; Registers used:
 11872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11882 ;;Total ram usage:        8 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:   11
 11885 ;; This function calls:
 11886 ;;		___lmul
 11887 ;; This function is called by:
 11888 ;;		_main
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           	psect	text48
 11893  0124CA                     __ptext48:
 11894                           	opt stack 0
 11895  0124CA                     _system_calculate_input_voltage:
 11896                           	opt stack 19
 11897                           
 11898                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 11899                           
 11900                           ;incstack = 0
 11901  0124CA  0102               	movlb	2	; () banked
 11902  0124CC  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 11903  0124CE  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 11904  0124D0  0100               	movlb	0	; () banked
 11905  0124D2  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 11906  0124D4  0102               	movlb	2	; () banked
 11907  0124D6  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 11908  0124D8  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 11909  0124DA  0100               	movlb	0	; () banked
 11910  0124DC  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 11911  0124DE  0102               	movlb	2	; () banked
 11912  0124E0  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 11913  0124E2  0100               	movlb	0	; () banked
 11914  0124E4  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11915  0124E6  0102               	movlb	2	; () banked
 11916  0124E8  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 11917  0124EA  0100               	movlb	0	; () banked
 11918  0124EC  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11919  0124EE  0102               	movlb	2	; () banked
 11920  0124F0  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 11921  0124F2  0100               	movlb	0	; () banked
 11922  0124F4  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11923  0124F6  0102               	movlb	2	; () banked
 11924  0124F8  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 11925  0124FA  0100               	movlb	0	; () banked
 11926  0124FC  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11927  0124FE  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 11928  012502  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 11929  012506  0E00               	movlw	0
 11930  012508  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 11931  01250A  0EFF               	movlw	-1
 11932  01250C  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 11933  01250E  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 11934                           
 11935                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 11936  012510  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 11937  012514  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 11938  012518  0E00               	movlw	0
 11939  01251A  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 11940  01251C  0EFF               	movlw	255
 11941  01251E  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 11942  012520  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 11943  012522  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 11944  012524  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 11945  012526  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 11946  012528  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11947  01252A  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 11948  01252C  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11949  01252E  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 11950  012530  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11951                           
 11952                           ; BSR set to: 0
 11953                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 11954  012532  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 11955  012536  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 11956  01253A  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 11957  01253E  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 11958  012542  EE23  F007         	lfsr	2,_calibrationParameters+7
 11959  012546  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11960  01254A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11961  01254E  0E00               	movlw	0
 11962  012550  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11963  012552  0EFF               	movlw	-1
 11964  012554  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11965  012556  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11966  012558  EC82  F0A5         	call	___lmul	;wreg free
 11967  01255C  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 11968  012560  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 11969  012564  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 11970  012568  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 11971                           
 11972                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 11973  01256C  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 11974  012570  0EFF               	movlw	-1
 11975  012572  0100               	movlb	0	; () banked
 11976  012574  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11977  012576  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 11978  012578  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 11979  01257A  D005               	goto	u22440
 11980  01257C                     u22445:
 11981  01257C  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 11982  01257E  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11983  012580  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11984  012582  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11985  012584  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 11986  012586                     u22440:
 11987  012586  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11988  012588  D7F9               	goto	u22445
 11989                           
 11990                           ;os.c: 576: tmp += 1;
 11991  01258A  0E01               	movlw	1
 11992  01258C  0100               	movlb	0	; () banked
 11993  01258E  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 11994  012590  0E00               	movlw	0
 11995  012592  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11996  012594  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11997  012596  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;os.c: 577: tmp >>= 1;
 12001  012598  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12002  01259A  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12003  01259C  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12004  01259E  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12005  0125A0  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 12009  0125A2  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12010  0125A6  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12011                           
 12012                           ; BSR set to: 0
 12013  0125AA  0012               	return		;funcret
 12014  0125AC                     __end_of_system_calculate_input_voltage:
 12015                           	opt stack 0
 12016                           tblptru	equ	0xFF8
 12017                           tblptrh	equ	0xFF7
 12018                           tblptrl	equ	0xFF6
 12019                           tablat	equ	0xFF5
 12020                           prodh	equ	0xFF4
 12021                           prodl	equ	0xFF3
 12022                           intcon	equ	0xFF2
 12023                           intcon2	equ	0xFF1
 12024                           intcon3	equ	0xFF0
 12025                           postinc0	equ	0xFEE
 12026                           wreg	equ	0xFE8
 12027                           postdec1	equ	0xFE5
 12028                           plusw1	equ	0xFE3
 12029                           fsr1h	equ	0xFE2
 12030                           fsr1l	equ	0xFE1
 12031                           indf2	equ	0xFDF
 12032                           postinc2	equ	0xFDE
 12033                           postdec2	equ	0xFDD
 12034                           plusw2	equ	0xFDB
 12035                           fsr2h	equ	0xFDA
 12036                           fsr2l	equ	0xFD9
 12037                           status	equ	0xFD8
 12038                           
 12039 ;; *************** function _system_calculate_input_current *****************
 12040 ;; Defined at:
 12041 ;;		line 604 in file "os.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  tmp             4   16[BANK0 ] long 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12056 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12058 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12059 ;;Total ram usage:        8 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:   11
 12062 ;; This function calls:
 12063 ;;		___lmul
 12064 ;;		_buck_get_mode
 12065 ;; This function is called by:
 12066 ;;		_main
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           	psect	text49
 12071  0112B2                     __ptext49:
 12072                           	opt stack 0
 12073  0112B2                     _system_calculate_input_current:
 12074                           	opt stack 19
 12075                           
 12076                           ;os.c: 606: int32_t tmp;;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_m
      +                          ode()==BUCK_STATUS_REMOTE_OFF))
 12077                           
 12078                           ; BSR set to: 0
 12079                           ;incstack = 0
 12080  0112B2  EC79  F0AF         	call	_buck_get_mode	;wreg free
 12081  0112B6  0900               	iorlw	0
 12082  0112B8  B4D8               	btfsc	status,2,c
 12083  0112BA  D005               	goto	u22590
 12084  0112BC  EC79  F0AF         	call	_buck_get_mode	;wreg free
 12085  0112C0  0A80               	xorlw	128
 12086  0112C2  A4D8               	btfss	status,2,c
 12087  0112C4  D006               	goto	l1433
 12088  0112C6                     u22590:
 12089                           
 12090                           ;os.c: 609: {;os.c: 610: os.input_current = 0;
 12091  0112C6  0E00               	movlw	0
 12092  0112C8  0102               	movlb	2	; () banked
 12093  0112CA  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 12094  0112CC  0E00               	movlw	0
 12095  0112CE  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 12096                           
 12097                           ;os.c: 611: }
 12098  0112D0  0012               	return	
 12099  0112D2                     l1433:
 12100                           
 12101                           ;os.c: 612: else;os.c: 613: {;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.i
      +                          nput_current_adc[1] + os.input_current_adc[2] + os.input_current_adc[3]);
 12102                           
 12103                           ; BSR set to: 2
 12104  0112D2  0102               	movlb	2	; () banked
 12105  0112D4  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 12106  0112D6  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 12107  0112D8  0100               	movlb	0	; () banked
 12108  0112DA  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 12109  0112DC  0102               	movlb	2	; () banked
 12110  0112DE  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 12111  0112E0  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 12112  0112E2  0100               	movlb	0	; () banked
 12113  0112E4  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12114  0112E6  0102               	movlb	2	; () banked
 12115  0112E8  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 12116  0112EA  0100               	movlb	0	; () banked
 12117  0112EC  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12118  0112EE  0102               	movlb	2	; () banked
 12119  0112F0  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 12120  0112F2  0100               	movlb	0	; () banked
 12121  0112F4  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12122  0112F6  0102               	movlb	2	; () banked
 12123  0112F8  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 12124  0112FA  0100               	movlb	0	; () banked
 12125  0112FC  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12126  0112FE  0102               	movlb	2	; () banked
 12127  011300  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 12128  011302  0100               	movlb	0	; () banked
 12129  011304  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12130  011306  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 12131  01130A  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 12132  01130E  0E00               	movlw	0
 12133  011310  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 12134  011312  0EFF               	movlw	-1
 12135  011314  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 12136  011316  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 12137                           
 12138                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 12139  011318  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 12140  01131C  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 12141  011320  0E00               	movlw	0
 12142  011322  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12143  011324  0EFF               	movlw	255
 12144  011326  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12145  011328  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12146  01132A  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12147  01132C  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12148  01132E  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12149  011330  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12150  011332  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12151  011334  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12152  011336  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12153  011338  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12154                           
 12155                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 12156  01133A  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 12157  01133E  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 12158  011342  0E00               	movlw	0
 12159  011344  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12160  011346  0EFF               	movlw	255
 12161  011348  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12162  01134A  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12163  01134C  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12164  01134E  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12165  011350  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12166  011352  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12167  011354  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12168  011356  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12169  011358  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12170  01135A  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 12174  01135C  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 12175  011360  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 12176  011364  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 12177  011368  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 12178  01136C  EE23  F01F         	lfsr	2,_calibrationParameters+31
 12179  011370  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12180  011374  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12181  011378  0E00               	movlw	0
 12182  01137A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12183  01137C  0EFF               	movlw	-1
 12184  01137E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12185  011380  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12186  011382  EC82  F0A5         	call	___lmul	;wreg free
 12187  011386  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 12188  01138A  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 12189  01138E  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 12190  011392  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 12191                           
 12192                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 12193  011396  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 12194  01139A  0EFF               	movlw	-1
 12195  01139C  0100               	movlb	0	; () banked
 12196  01139E  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12197  0113A0  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12198  0113A2  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12199  0113A4  D005               	goto	u22600
 12200  0113A6                     u22605:
 12201  0113A6  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12202  0113A8  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12203  0113AA  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12204  0113AC  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12205  0113AE  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12206  0113B0                     u22600:
 12207  0113B0  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12208  0113B2  D7F9               	goto	u22605
 12209                           
 12210                           ;os.c: 619: tmp += 1;
 12211  0113B4  0E01               	movlw	1
 12212  0113B6  0100               	movlb	0	; () banked
 12213  0113B8  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12214  0113BA  0E00               	movlw	0
 12215  0113BC  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12216  0113BE  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12217  0113C0  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;os.c: 620: tmp >>= 1;
 12221  0113C2  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12222  0113C4  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12223  0113C6  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12224  0113C8  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12225  0113CA  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12229  0113CC  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12230  0113D0  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12231  0113D4  0012               	return	
 12232  0113D6                     __end_of_system_calculate_input_current:
 12233                           	opt stack 0
 12234                           tblptru	equ	0xFF8
 12235                           tblptrh	equ	0xFF7
 12236                           tblptrl	equ	0xFF6
 12237                           tablat	equ	0xFF5
 12238                           prodh	equ	0xFF4
 12239                           prodl	equ	0xFF3
 12240                           intcon	equ	0xFF2
 12241                           intcon2	equ	0xFF1
 12242                           intcon3	equ	0xFF0
 12243                           postinc0	equ	0xFEE
 12244                           wreg	equ	0xFE8
 12245                           postdec1	equ	0xFE5
 12246                           plusw1	equ	0xFE3
 12247                           fsr1h	equ	0xFE2
 12248                           fsr1l	equ	0xFE1
 12249                           indf2	equ	0xFDF
 12250                           postinc2	equ	0xFDE
 12251                           postdec2	equ	0xFDD
 12252                           plusw2	equ	0xFDB
 12253                           fsr2h	equ	0xFDA
 12254                           fsr2l	equ	0xFD9
 12255                           status	equ	0xFD8
 12256                           
 12257 ;; *************** function _log_write_to_disk *****************
 12258 ;; Defined at:
 12259 ;;		line 199 in file "log.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;		None
 12262 ;; Auto vars:     Size  Location     Type
 12263 ;;  log_entry      32    1[BANK1 ] struct .
 12264 ;;  file_number     1    0[BANK1 ] unsigned char 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1    wreg      void 
 12267 ;; Registers used:
 12268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12275 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12277 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12278 ;;Total ram usage:       33 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:   17
 12281 ;; This function calls:
 12282 ;;		_fat_append_to_file
 12283 ;;		_fat_create_file
 12284 ;;		_fat_find_file
 12285 ;;		_log_generate_entry
 12286 ;; This function is called by:
 12287 ;;		_main
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text50
 12292  014018                     __ptext50:
 12293                           	opt stack 0
 12294  014018                     _log_write_to_disk:
 12295                           	opt stack 13
 12296                           
 12297                           ;log.c: 201: uint8_t file_number;;log.c: 202: logEntry_t log_entry;;log.c: 205: log_gene
      +                          rate_entry(&log_entry);
 12298                           
 12299                           ;incstack = 0
 12300  014018  0E01               	movlw	low log_write_to_disk@log_entry
 12301  01401A  0100               	movlb	0	; () banked
 12302  01401C  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12303  01401E  0E01               	movlw	high log_write_to_disk@log_entry
 12304  014020  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12305  014022  EC22  F06D         	call	_log_generate_entry	;wreg free
 12306                           
 12307                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12308  014026  0EEB               	movlw	low _filename
 12309  014028  0100               	movlb	0	; () banked
 12310  01402A  6F87               	movwf	fat_find_file@name& (0+255),b
 12311  01402C  0E02               	movlw	high _filename
 12312  01402E  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12313  014030  0EF4               	movlw	low _extension
 12314  014032  6F89               	movwf	fat_find_file@extension& (0+255),b
 12315  014034  0E02               	movlw	high _extension
 12316  014036  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12317  014038  ECC3  F095         	call	_fat_find_file	;wreg free
 12318  01403C  0101               	movlb	1	; () banked
 12319  01403E  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;log.c: 209: if(file_number==0xFF)
 12323  014040  2900               	incf	log_write_to_disk@file_number& (0+255),w,b
 12324  014042  A4D8               	btfss	status,2,c
 12325  014044  D015               	goto	l3315
 12326                           
 12327                           ; BSR set to: 1
 12328                           ;log.c: 210: {;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12329  014046  0EEB               	movlw	low _filename
 12330  014048  0100               	movlb	0	; () banked
 12331  01404A  6F9B               	movwf	fat_create_file@name& (0+255),b
 12332  01404C  0E02               	movlw	high _filename
 12333  01404E  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12334  014050  0EF4               	movlw	low _extension
 12335  014052  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12336  014054  0E02               	movlw	high _extension
 12337  014056  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12338  014058  0E00               	movlw	0
 12339  01405A  6F9F               	movwf	fat_create_file@size& (0+255),b
 12340  01405C  0E00               	movlw	0
 12341  01405E  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12342  014060  0E00               	movlw	0
 12343  014062  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12344  014064  0E00               	movlw	0
 12345  014066  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12346  014068  EC90  F081         	call	_fat_create_file	;wreg free
 12347  01406C  0101               	movlb	1	; () banked
 12348  01406E  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12349  014070                     l3315:
 12350                           
 12351                           ; BSR set to: 1
 12352                           ;log.c: 213: };log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entr
      +                          y);
 12353                           
 12354                           ; BSR set to: 1
 12355  014070  0E00               	movlw	0
 12356  014072  0100               	movlb	0	; () banked
 12357  014074  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12358  014076  0E20               	movlw	32
 12359  014078  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12360  01407A  0E01               	movlw	low log_write_to_disk@log_entry
 12361  01407C  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12362  01407E  0E01               	movlw	high log_write_to_disk@log_entry
 12363  014080  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12364  014082  0101               	movlb	1	; () banked
 12365  014084  5100               	movf	log_write_to_disk@file_number& (0+255),w,b
 12366  014086  ECA1  F07B         	call	_fat_append_to_file
 12367  01408A  0012               	return		;funcret
 12368  01408C                     __end_of_log_write_to_disk:
 12369                           	opt stack 0
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           intcon2	equ	0xFF1
 12378                           intcon3	equ	0xFF0
 12379                           postinc0	equ	0xFEE
 12380                           wreg	equ	0xFE8
 12381                           postdec1	equ	0xFE5
 12382                           plusw1	equ	0xFE3
 12383                           fsr1h	equ	0xFE2
 12384                           fsr1l	equ	0xFE1
 12385                           indf2	equ	0xFDF
 12386                           postinc2	equ	0xFDE
 12387                           postdec2	equ	0xFDD
 12388                           plusw2	equ	0xFDB
 12389                           fsr2h	equ	0xFDA
 12390                           fsr2l	equ	0xFD9
 12391                           status	equ	0xFD8
 12392                           
 12393 ;; *************** function _log_generate_entry *****************
 12394 ;; Defined at:
 12395 ;;		line 174 in file "log.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  log_entry       2   24[BANK0 ] PTR struct .
 12398 ;;		 -> log_write_to_disk@log_entry(32), 
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;		None
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12414 ;;Total ram usage:        4 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:   13
 12417 ;; This function calls:
 12418 ;;		___aldiv
 12419 ;;		___lldiv
 12420 ;;		__get_checksum
 12421 ;;		__get_dateTime
 12422 ;;		__get_temperature
 12423 ;; This function is called by:
 12424 ;;		_log_write_to_disk
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text51
 12429  00DA44                     __ptext51:
 12430                           	opt stack 0
 12431  00DA44                     _log_generate_entry:
 12432                           	opt stack 16
 12433                           
 12434                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 12435                           
 12436                           ;incstack = 0
 12437  00DA44  ECD9  F083         	call	__get_dateTime	;wreg free
 12438  00DA48  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 12439  00DA4C  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 12440  00DA50  0100               	movlb	0	; () banked
 12441  00DA52  C064  FFDE         	movff	?__get_dateTime,postinc2
 12442  00DA56  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 12443  00DA5A  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 12444  00DA5E  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 12448  00DA62  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 12449  00DA66  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 12450  00DA6A  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 12451  00DA6E  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 12452  00DA72  C016  F064         	movff	_averageCount,___lldiv@divisor
 12453  00DA76  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12454  00DA7A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12455  00DA7C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12456  00DA7E  EC13  F09D         	call	___lldiv	;wreg free
 12457  00DA82  0100               	movlb	0	; () banked
 12458  00DA84  EE20 F004          	lfsr	2,4
 12459  00DA88  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12460  00DA8A  26D9               	addwf	fsr2l,f,c
 12461  00DA8C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12462  00DA8E  22DA               	addwfc	fsr2h,f,c
 12463  00DA90  C060  FFDE         	movff	?___lldiv,postinc2
 12464  00DA94  C061  FFDD         	movff	?___lldiv+1,postdec2
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 12468  00DA98  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 12469  00DA9C  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 12470  00DAA0  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 12471  00DAA4  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 12472  00DAA8  C016  F064         	movff	_averageCount,___lldiv@divisor
 12473  00DAAC  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12474  00DAB0  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12475  00DAB2  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12476  00DAB4  EC13  F09D         	call	___lldiv	;wreg free
 12477  00DAB8  0100               	movlb	0	; () banked
 12478  00DABA  EE20 F006          	lfsr	2,6
 12479  00DABE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12480  00DAC0  26D9               	addwf	fsr2l,f,c
 12481  00DAC2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12482  00DAC4  22DA               	addwfc	fsr2h,f,c
 12483  00DAC6  C060  FFDE         	movff	?___lldiv,postinc2
 12484  00DACA  C061  FFDD         	movff	?___lldiv+1,postdec2
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 12488  00DACE  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 12489  00DAD2  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 12490  00DAD6  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 12491  00DADA  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 12492  00DADE  C016  F064         	movff	_averageCount,___lldiv@divisor
 12493  00DAE2  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12494  00DAE6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12495  00DAE8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12496  00DAEA  EC13  F09D         	call	___lldiv	;wreg free
 12497  00DAEE  0100               	movlb	0	; () banked
 12498  00DAF0  EE20 F008          	lfsr	2,8
 12499  00DAF4  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12500  00DAF6  26D9               	addwf	fsr2l,f,c
 12501  00DAF8  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12502  00DAFA  22DA               	addwfc	fsr2h,f,c
 12503  00DAFC  C060  FFDE         	movff	?___lldiv,postinc2
 12504  00DB00  C061  FFDD         	movff	?___lldiv+1,postdec2
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 12508  00DB04  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 12509  00DB08  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 12510  00DB0C  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 12511  00DB10  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 12512  00DB14  C016  F064         	movff	_averageCount,___lldiv@divisor
 12513  00DB18  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12514  00DB1C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12515  00DB1E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12516  00DB20  EC13  F09D         	call	___lldiv	;wreg free
 12517  00DB24  0100               	movlb	0	; () banked
 12518  00DB26  EE20 F00A          	lfsr	2,10
 12519  00DB2A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12520  00DB2C  26D9               	addwf	fsr2l,f,c
 12521  00DB2E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12522  00DB30  22DA               	addwfc	fsr2h,f,c
 12523  00DB32  C060  FFDE         	movff	?___lldiv,postinc2
 12524  00DB36  C061  FFDD         	movff	?___lldiv+1,postdec2
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 12528  00DB3A  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 12529  00DB3E  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 12530  00DB42  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 12531  00DB46  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 12532  00DB4A  C016  F064         	movff	_averageCount,___lldiv@divisor
 12533  00DB4E  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12534  00DB52  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12535  00DB54  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12536  00DB56  EC13  F09D         	call	___lldiv	;wreg free
 12537  00DB5A  0100               	movlb	0	; () banked
 12538  00DB5C  EE20 F00C          	lfsr	2,12
 12539  00DB60  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12540  00DB62  26D9               	addwf	fsr2l,f,c
 12541  00DB64  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12542  00DB66  22DA               	addwfc	fsr2h,f,c
 12543  00DB68  C060  FFDE         	movff	?___lldiv,postinc2
 12544  00DB6C  C061  FFDD         	movff	?___lldiv+1,postdec2
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 12548  00DB70  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 12549  00DB74  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 12550  00DB78  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 12551  00DB7C  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 12552  00DB80  C016  F064         	movff	_averageCount,___lldiv@divisor
 12553  00DB84  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12554  00DB88  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12555  00DB8A  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12556  00DB8C  EC13  F09D         	call	___lldiv	;wreg free
 12557  00DB90  0100               	movlb	0	; () banked
 12558  00DB92  EE20 F00E          	lfsr	2,14
 12559  00DB96  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12560  00DB98  26D9               	addwf	fsr2l,f,c
 12561  00DB9A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12562  00DB9C  22DA               	addwfc	fsr2h,f,c
 12563  00DB9E  C060  FFDE         	movff	?___lldiv,postinc2
 12564  00DBA2  C061  FFDD         	movff	?___lldiv+1,postdec2
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 12568  00DBA6  0EF4               	movlw	244
 12569  00DBA8  0102               	movlb	2	; () banked
 12570  00DBAA  2582               	addwf	_inputCapacitySum& (0+255),w,b
 12571  00DBAC  0100               	movlb	0	; () banked
 12572  00DBAE  6F60               	movwf	___lldiv@dividend& (0+255),b
 12573  00DBB0  0E01               	movlw	1
 12574  00DBB2  0102               	movlb	2	; () banked
 12575  00DBB4  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 12576  00DBB6  0100               	movlb	0	; () banked
 12577  00DBB8  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12578  00DBBA  0E00               	movlw	0
 12579  00DBBC  0102               	movlb	2	; () banked
 12580  00DBBE  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 12581  00DBC0  0100               	movlb	0	; () banked
 12582  00DBC2  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12583  00DBC4  0E00               	movlw	0
 12584  00DBC6  0102               	movlb	2	; () banked
 12585  00DBC8  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 12586  00DBCA  0100               	movlb	0	; () banked
 12587  00DBCC  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12588  00DBCE  0EE8               	movlw	232
 12589  00DBD0  6F64               	movwf	___lldiv@divisor& (0+255),b
 12590  00DBD2  0E03               	movlw	3
 12591  00DBD4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12592  00DBD6  0E00               	movlw	0
 12593  00DBD8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12594  00DBDA  0E00               	movlw	0
 12595  00DBDC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12596  00DBDE  EC13  F09D         	call	___lldiv	;wreg free
 12597  00DBE2  0100               	movlb	0	; () banked
 12598  00DBE4  EE20 F010          	lfsr	2,16
 12599  00DBE8  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12600  00DBEA  26D9               	addwf	fsr2l,f,c
 12601  00DBEC  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12602  00DBEE  22DA               	addwfc	fsr2h,f,c
 12603  00DBF0  C060  FFDE         	movff	?___lldiv,postinc2
 12604  00DBF4  C061  FFDD         	movff	?___lldiv+1,postdec2
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 12608  00DBF8  0EF4               	movlw	244
 12609  00DBFA  0102               	movlb	2	; () banked
 12610  00DBFC  257E               	addwf	_outputCapacitySum& (0+255),w,b
 12611  00DBFE  0100               	movlb	0	; () banked
 12612  00DC00  6F60               	movwf	___lldiv@dividend& (0+255),b
 12613  00DC02  0E01               	movlw	1
 12614  00DC04  0102               	movlb	2	; () banked
 12615  00DC06  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 12616  00DC08  0100               	movlb	0	; () banked
 12617  00DC0A  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12618  00DC0C  0E00               	movlw	0
 12619  00DC0E  0102               	movlb	2	; () banked
 12620  00DC10  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 12621  00DC12  0100               	movlb	0	; () banked
 12622  00DC14  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12623  00DC16  0E00               	movlw	0
 12624  00DC18  0102               	movlb	2	; () banked
 12625  00DC1A  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 12626  00DC1C  0100               	movlb	0	; () banked
 12627  00DC1E  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12628  00DC20  0EE8               	movlw	232
 12629  00DC22  6F64               	movwf	___lldiv@divisor& (0+255),b
 12630  00DC24  0E03               	movlw	3
 12631  00DC26  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12632  00DC28  0E00               	movlw	0
 12633  00DC2A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12634  00DC2C  0E00               	movlw	0
 12635  00DC2E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12636  00DC30  EC13  F09D         	call	___lldiv	;wreg free
 12637  00DC34  0100               	movlb	0	; () banked
 12638  00DC36  EE20 F012          	lfsr	2,18
 12639  00DC3A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12640  00DC3C  26D9               	addwf	fsr2l,f,c
 12641  00DC3E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12642  00DC40  22DA               	addwfc	fsr2h,f,c
 12643  00DC42  C060  FFDE         	movff	?___lldiv,postinc2
 12644  00DC46  C061  FFDD         	movff	?___lldiv+1,postdec2
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 12648  00DC4A  EE20 F014          	lfsr	2,20
 12649  00DC4E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12650  00DC50  26D9               	addwf	fsr2l,f,c
 12651  00DC52  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12652  00DC54  22DA               	addwfc	fsr2h,f,c
 12653  00DC56  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 12654  00DC5A  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 12655  00DC5E  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 12656  00DC62  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 12657  00DC66  C016  F064         	movff	_averageCount,___aldiv@divisor
 12658  00DC6A  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12659  00DC6E  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12660  00DC70  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12661  00DC72  EC5C  F095         	call	___aldiv	;wreg free
 12662  00DC76  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12663  00DC7A  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12664  00DC7E  EC92  F0AB         	call	__get_temperature	;wreg free
 12665  00DC82  6EDF               	movwf	indf2,c
 12666                           
 12667                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 12668  00DC84  0100               	movlb	0	; () banked
 12669  00DC86  EE20 F015          	lfsr	2,21
 12670  00DC8A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12671  00DC8C  26D9               	addwf	fsr2l,f,c
 12672  00DC8E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12673  00DC90  22DA               	addwfc	fsr2h,f,c
 12674  00DC92  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 12675  00DC96  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 12676  00DC9A  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 12677  00DC9E  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 12678  00DCA2  C016  F064         	movff	_averageCount,___aldiv@divisor
 12679  00DCA6  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12680  00DCAA  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12681  00DCAC  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12682  00DCAE  EC5C  F095         	call	___aldiv	;wreg free
 12683  00DCB2  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12684  00DCB6  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12685  00DCBA  EC92  F0AB         	call	__get_temperature	;wreg free
 12686  00DCBE  6EDF               	movwf	indf2,c
 12687                           
 12688                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 12689  00DCC0  0100               	movlb	0	; () banked
 12690  00DCC2  EE20 F016          	lfsr	2,22
 12691  00DCC6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12692  00DCC8  26D9               	addwf	fsr2l,f,c
 12693  00DCCA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12694  00DCCC  22DA               	addwfc	fsr2h,f,c
 12695  00DCCE  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 12696  00DCD2  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 12697  00DCD6  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 12698  00DCDA  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 12699  00DCDE  C016  F064         	movff	_averageCount,___aldiv@divisor
 12700  00DCE2  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12701  00DCE6  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12702  00DCE8  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12703  00DCEA  EC5C  F095         	call	___aldiv	;wreg free
 12704  00DCEE  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12705  00DCF2  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12706  00DCF6  EC92  F0AB         	call	__get_temperature	;wreg free
 12707  00DCFA  6EDF               	movwf	indf2,c
 12708                           
 12709                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 12710  00DCFC  0100               	movlb	0	; () banked
 12711  00DCFE  EE20 F017          	lfsr	2,23
 12712  00DD02  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12713  00DD04  26D9               	addwf	fsr2l,f,c
 12714  00DD06  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12715  00DD08  22DA               	addwfc	fsr2h,f,c
 12716  00DD0A  90D8               	bcf	status,0,c
 12717  00DD0C  0102               	movlb	2	; () banked
 12718  00DD0E  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 12719  00DD10  0100               	movlb	0	; () banked
 12720  00DD12  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12721  00DD14  0102               	movlb	2	; () banked
 12722  00DD16  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 12723  00DD18  0100               	movlb	0	; () banked
 12724  00DD1A  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12725  00DD1C  517A               	movf	??_log_generate_entry& (0+255),w,b
 12726  00DD1E  6EDF               	movwf	indf2,c
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 12730  00DD20  EE20 F018          	lfsr	2,24
 12731  00DD24  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12732  00DD26  26D9               	addwf	fsr2l,f,c
 12733  00DD28  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12734  00DD2A  22DA               	addwfc	fsr2h,f,c
 12735  00DD2C  90D8               	bcf	status,0,c
 12736  00DD2E  0102               	movlb	2	; () banked
 12737  00DD30  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 12738  00DD32  0100               	movlb	0	; () banked
 12739  00DD34  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12740  00DD36  0102               	movlb	2	; () banked
 12741  00DD38  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 12742  00DD3A  0100               	movlb	0	; () banked
 12743  00DD3C  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12744  00DD3E  517A               	movf	??_log_generate_entry& (0+255),w,b
 12745  00DD40  6EDF               	movwf	indf2,c
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;log.c: 190: log_entry->unused[0] = 0x00;
 12749  00DD42  EE20 F019          	lfsr	2,25
 12750  00DD46  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12751  00DD48  26D9               	addwf	fsr2l,f,c
 12752  00DD4A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12753  00DD4C  22DA               	addwfc	fsr2h,f,c
 12754  00DD4E  0E00               	movlw	0
 12755  00DD50  6EDF               	movwf	indf2,c
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;log.c: 191: log_entry->unused[1] = 0x00;
 12759  00DD52  EE20 F01A          	lfsr	2,26
 12760  00DD56  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12761  00DD58  26D9               	addwf	fsr2l,f,c
 12762  00DD5A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12763  00DD5C  22DA               	addwfc	fsr2h,f,c
 12764  00DD5E  0E00               	movlw	0
 12765  00DD60  6EDF               	movwf	indf2,c
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;log.c: 192: log_entry->unused[2] = 0x00;
 12769  00DD62  EE20 F01B          	lfsr	2,27
 12770  00DD66  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12771  00DD68  26D9               	addwf	fsr2l,f,c
 12772  00DD6A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12773  00DD6C  22DA               	addwfc	fsr2h,f,c
 12774  00DD6E  0E00               	movlw	0
 12775  00DD70  6EDF               	movwf	indf2,c
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;log.c: 193: log_entry->unused[3] = 0x00;
 12779  00DD72  EE20 F01C          	lfsr	2,28
 12780  00DD76  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12781  00DD78  26D9               	addwf	fsr2l,f,c
 12782  00DD7A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12783  00DD7C  22DA               	addwfc	fsr2h,f,c
 12784  00DD7E  0E00               	movlw	0
 12785  00DD80  6EDF               	movwf	indf2,c
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;log.c: 194: log_entry->unused[4] = 0x00;
 12789  00DD82  EE20 F01D          	lfsr	2,29
 12790  00DD86  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12791  00DD88  26D9               	addwf	fsr2l,f,c
 12792  00DD8A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12793  00DD8C  22DA               	addwfc	fsr2h,f,c
 12794  00DD8E  0E00               	movlw	0
 12795  00DD90  6EDF               	movwf	indf2,c
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;log.c: 195: log_entry->status = status;
 12799  00DD92  EE20 F01E          	lfsr	2,30
 12800  00DD96  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12801  00DD98  26D9               	addwf	fsr2l,f,c
 12802  00DD9A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12803  00DD9C  22DA               	addwfc	fsr2h,f,c
 12804  00DD9E  C1F0  FFDF         	movff	_status,indf2
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 12808  00DDA2  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 12809  00DDA6  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 12810  00DDAA  EC06  F0AA         	call	__get_checksum	;wreg free
 12811  00DDAE  0100               	movlb	0	; () banked
 12812  00DDB0  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12813  00DDB2  EE20 F01F          	lfsr	2,31
 12814  00DDB6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12815  00DDB8  26D9               	addwf	fsr2l,f,c
 12816  00DDBA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12817  00DDBC  22DA               	addwfc	fsr2h,f,c
 12818  00DDBE  C07A  FFDF         	movff	??_log_generate_entry,indf2
 12819                           
 12820                           ; BSR set to: 0
 12821  00DDC2  0012               	return		;funcret
 12822  00DDC4                     __end_of_log_generate_entry:
 12823                           	opt stack 0
 12824                           tblptru	equ	0xFF8
 12825                           tblptrh	equ	0xFF7
 12826                           tblptrl	equ	0xFF6
 12827                           tablat	equ	0xFF5
 12828                           prodh	equ	0xFF4
 12829                           prodl	equ	0xFF3
 12830                           intcon	equ	0xFF2
 12831                           intcon2	equ	0xFF1
 12832                           intcon3	equ	0xFF0
 12833                           postinc0	equ	0xFEE
 12834                           wreg	equ	0xFE8
 12835                           postdec1	equ	0xFE5
 12836                           plusw1	equ	0xFE3
 12837                           fsr1h	equ	0xFE2
 12838                           fsr1l	equ	0xFE1
 12839                           indf2	equ	0xFDF
 12840                           postinc2	equ	0xFDE
 12841                           postdec2	equ	0xFDD
 12842                           plusw2	equ	0xFDB
 12843                           fsr2h	equ	0xFDA
 12844                           fsr2l	equ	0xFD9
 12845                           status	equ	0xFD8
 12846                           
 12847 ;; *************** function __get_temperature *****************
 12848 ;; Defined at:
 12849 ;;		line 107 in file "log.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;  temperature     2   14[BANK0 ] int 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;		None
 12854 ;; Return value:  Size  Location     Type
 12855 ;;                  1    wreg      unsigned char 
 12856 ;; Registers used:
 12857 ;;		wreg, status,2, status,0, cstack
 12858 ;; Tracked objects:
 12859 ;;		On entry : 0/0
 12860 ;;		On exit  : 0/0
 12861 ;;		Unchanged: 0/0
 12862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12867 ;;Total ram usage:        2 bytes
 12868 ;; Hardware stack levels used:    1
 12869 ;; Hardware stack levels required when called:   11
 12870 ;; This function calls:
 12871 ;;		___awdiv
 12872 ;; This function is called by:
 12873 ;;		_log_generate_entry
 12874 ;; This function uses a non-reentrant model
 12875 ;;
 12876                           
 12877                           	psect	text52
 12878  015724                     __ptext52:
 12879                           	opt stack 0
 12880  015724                     __get_temperature:
 12881                           	opt stack 17
 12882                           
 12883                           ;log.c: 109: temperature += 4025;
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;incstack = 0
 12887  015724  0100               	movlb	0	; () banked
 12888  015726  0EB9               	movlw	185
 12889  015728  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 12890  01572A  0E0F               	movlw	15
 12891  01572C  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;log.c: 110: temperature /= 50;
 12895  01572E  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 12896  015732  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 12897  015736  0E00               	movlw	0
 12898  015738  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 12899  01573A  0E32               	movlw	50
 12900  01573C  6F62               	movwf	___awdiv@divisor& (0+255),b
 12901  01573E  EC4A  F09C         	call	___awdiv	;wreg free
 12902  015742  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 12903  015746  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 12904                           
 12905                           ;log.c: 111: return (uint8_t) temperature;
 12906  01574A  0100               	movlb	0	; () banked
 12907  01574C  516E               	movf	__get_temperature@temperature& (0+255),w,b
 12908  01574E  0012               	return	
 12909  015750                     __end_of__get_temperature:
 12910                           	opt stack 0
 12911                           tblptru	equ	0xFF8
 12912                           tblptrh	equ	0xFF7
 12913                           tblptrl	equ	0xFF6
 12914                           tablat	equ	0xFF5
 12915                           prodh	equ	0xFF4
 12916                           prodl	equ	0xFF3
 12917                           intcon	equ	0xFF2
 12918                           intcon2	equ	0xFF1
 12919                           intcon3	equ	0xFF0
 12920                           postinc0	equ	0xFEE
 12921                           wreg	equ	0xFE8
 12922                           postdec1	equ	0xFE5
 12923                           plusw1	equ	0xFE3
 12924                           fsr1h	equ	0xFE2
 12925                           fsr1l	equ	0xFE1
 12926                           indf2	equ	0xFDF
 12927                           postinc2	equ	0xFDE
 12928                           postdec2	equ	0xFDD
 12929                           plusw2	equ	0xFDB
 12930                           fsr2h	equ	0xFDA
 12931                           fsr2l	equ	0xFD9
 12932                           status	equ	0xFD8
 12933                           
 12934 ;; *************** function ___awdiv *****************
 12935 ;; Defined at:
 12936 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;  dividend        2    0[BANK0 ] int 
 12939 ;;  divisor         2    2[BANK0 ] int 
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;  quotient        2    6[BANK0 ] int 
 12942 ;;  sign            1    5[BANK0 ] unsigned char 
 12943 ;;  counter         1    4[BANK0 ] unsigned char 
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  2    0[BANK0 ] int 
 12946 ;; Registers used:
 12947 ;;		wreg, status,2, status,0
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12954 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12956 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12957 ;;Total ram usage:        8 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:   10
 12960 ;; This function calls:
 12961 ;;		Nothing
 12962 ;; This function is called by:
 12963 ;;		__get_temperature
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text53
 12968  013894                     __ptext53:
 12969                           	opt stack 0
 12970  013894                     ___awdiv:
 12971                           	opt stack 17
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;incstack = 0
 12975  013894  0E00               	movlw	0
 12976  013896  0100               	movlb	0	; () banked
 12977  013898  6F65               	movwf	___awdiv@sign& (0+255),b
 12978                           
 12979                           ; BSR set to: 0
 12980  01389A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12981  01389C  D006               	goto	l3540
 12982                           
 12983                           ; BSR set to: 0
 12984  01389E  6D62               	negf	___awdiv@divisor& (0+255),b
 12985  0138A0  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12986  0138A2  B0D8               	btfsc	status,0,c
 12987  0138A4  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12988                           
 12989                           ; BSR set to: 0
 12990  0138A6  0E01               	movlw	1
 12991  0138A8  6F65               	movwf	___awdiv@sign& (0+255),b
 12992  0138AA                     l3540:
 12993                           
 12994                           ; BSR set to: 0
 12995                           
 12996                           ; BSR set to: 0
 12997  0138AA  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12998  0138AC  D006               	goto	l3541
 12999                           
 13000                           ; BSR set to: 0
 13001  0138AE  6D60               	negf	___awdiv@dividend& (0+255),b
 13002  0138B0  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13003  0138B2  B0D8               	btfsc	status,0,c
 13004  0138B4  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13005                           
 13006                           ; BSR set to: 0
 13007  0138B6  0E01               	movlw	1
 13008  0138B8  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13009  0138BA                     l3541:
 13010                           
 13011                           ; BSR set to: 0
 13012                           
 13013                           ; BSR set to: 0
 13014  0138BA  0E00               	movlw	0
 13015  0138BC  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13016  0138BE  0E00               	movlw	0
 13017  0138C0  6F66               	movwf	___awdiv@quotient& (0+255),b
 13018                           
 13019                           ; BSR set to: 0
 13020  0138C2  5162               	movf	___awdiv@divisor& (0+255),w,b
 13021  0138C4  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13022  0138C6  B4D8               	btfsc	status,2,c
 13023  0138C8  D01C               	goto	l3548
 13024                           
 13025                           ; BSR set to: 0
 13026  0138CA  0E01               	movlw	1
 13027  0138CC  6F64               	movwf	___awdiv@counter& (0+255),b
 13028  0138CE  D004               	goto	l3543
 13029  0138D0                     
 13030                           ; BSR set to: 0
 13031                           
 13032                           ; BSR set to: 0
 13033  0138D0  90D8               	bcf	status,0,c
 13034  0138D2  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13035  0138D4  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13036  0138D6  2B64               	incf	___awdiv@counter& (0+255),f,b
 13037  0138D8                     l3543:
 13038                           
 13039                           ; BSR set to: 0
 13040                           
 13041                           ; BSR set to: 0
 13042  0138D8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13043  0138DA  D7FA               	goto	l3544
 13044  0138DC                     u18350:
 13045                           
 13046                           ; BSR set to: 0
 13047                           
 13048                           ; BSR set to: 0
 13049                           
 13050                           ; BSR set to: 0
 13051  0138DC  90D8               	bcf	status,0,c
 13052  0138DE  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13053  0138E0  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13054                           
 13055                           ; BSR set to: 0
 13056  0138E2  5162               	movf	___awdiv@divisor& (0+255),w,b
 13057  0138E4  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13058  0138E6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13059  0138E8  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13060  0138EA  A0D8               	btfss	status,0,c
 13061  0138EC  D005               	goto	l3547
 13062                           
 13063                           ; BSR set to: 0
 13064  0138EE  5162               	movf	___awdiv@divisor& (0+255),w,b
 13065  0138F0  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13066  0138F2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13067  0138F4  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13068                           
 13069                           ; BSR set to: 0
 13070  0138F6  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13071  0138F8                     l3547:
 13072                           
 13073                           ; BSR set to: 0
 13074                           
 13075                           ; BSR set to: 0
 13076  0138F8  90D8               	bcf	status,0,c
 13077  0138FA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13078  0138FC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13079                           
 13080                           ; BSR set to: 0
 13081  0138FE  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13082  013900  D7ED               	goto	u18350
 13083  013902                     l3548:
 13084                           
 13085                           ; BSR set to: 0
 13086                           
 13087                           ; BSR set to: 0
 13088                           
 13089                           ; BSR set to: 0
 13090  013902  5165               	movf	___awdiv@sign& (0+255),w,b
 13091  013904  B4D8               	btfsc	status,2,c
 13092  013906  D004               	goto	l3549
 13093                           
 13094                           ; BSR set to: 0
 13095  013908  6D66               	negf	___awdiv@quotient& (0+255),b
 13096  01390A  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13097  01390C  B0D8               	btfsc	status,0,c
 13098  01390E  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13099  013910                     l3549:
 13100                           
 13101                           ; BSR set to: 0
 13102                           
 13103                           ; BSR set to: 0
 13104  013910  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13105  013914  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13106  013918  0012               	return	
 13107  01391A                     __end_of___awdiv:
 13108                           	opt stack 0
 13109                           tblptru	equ	0xFF8
 13110                           tblptrh	equ	0xFF7
 13111                           tblptrl	equ	0xFF6
 13112                           tablat	equ	0xFF5
 13113                           prodh	equ	0xFF4
 13114                           prodl	equ	0xFF3
 13115                           intcon	equ	0xFF2
 13116                           intcon2	equ	0xFF1
 13117                           intcon3	equ	0xFF0
 13118                           postinc0	equ	0xFEE
 13119                           wreg	equ	0xFE8
 13120                           postdec1	equ	0xFE5
 13121                           plusw1	equ	0xFE3
 13122                           fsr1h	equ	0xFE2
 13123                           fsr1l	equ	0xFE1
 13124                           indf2	equ	0xFDF
 13125                           postinc2	equ	0xFDE
 13126                           postdec2	equ	0xFDD
 13127                           plusw2	equ	0xFDB
 13128                           fsr2h	equ	0xFDA
 13129                           fsr2l	equ	0xFD9
 13130                           status	equ	0xFD8
 13131                           
 13132 ;; *************** function __get_dateTime *****************
 13133 ;; Defined at:
 13134 ;;		line 39 in file "log.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;		None
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;  datetime        4   20[BANK0 ] unsigned long 
 13139 ;;  seconds         1   19[BANK0 ] unsigned char 
 13140 ;;  minutes         1   18[BANK0 ] unsigned char 
 13141 ;;  hours           1   17[BANK0 ] unsigned char 
 13142 ;;  day             1   16[BANK0 ] unsigned char 
 13143 ;;  month           1   15[BANK0 ] unsigned char 
 13144 ;;  year            1   14[BANK0 ] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  4    4[BANK0 ] unsigned long 
 13147 ;; Registers used:
 13148 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13157 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13158 ;;Total ram usage:       20 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:   12
 13161 ;; This function calls:
 13162 ;;		_rtcc_get_day_decimal
 13163 ;;		_rtcc_get_hours_decimal
 13164 ;;		_rtcc_get_minutes_decimal
 13165 ;;		_rtcc_get_month_decimal
 13166 ;;		_rtcc_get_seconds_decimal
 13167 ;;		_rtcc_get_year_decimal
 13168 ;; This function is called by:
 13169 ;;		_log_generate_entry
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text54
 13174  0107B2                     __ptext54:
 13175                           	opt stack 0
 13176  0107B2                     __get_dateTime:
 13177                           	opt stack 16
 13178                           
 13179                           ;log.c: 41: uint32_t datetime;;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;incstack = 0
 13183  0107B2  ECD2  F0AE         	call	_rtcc_get_year_decimal	;wreg free
 13184  0107B6  0100               	movlb	0	; () banked
 13185  0107B8  6F6E               	movwf	__get_dateTime@year& (0+255),b
 13186                           
 13187                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 13188  0107BA  ECDA  F0AE         	call	_rtcc_get_month_decimal	;wreg free
 13189  0107BE  0100               	movlb	0	; () banked
 13190  0107C0  6F6F               	movwf	__get_dateTime@month& (0+255),b
 13191                           
 13192                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13193  0107C2  ECE2  F0AE         	call	_rtcc_get_day_decimal	;wreg free
 13194  0107C6  0100               	movlb	0	; () banked
 13195  0107C8  6F70               	movwf	__get_dateTime@day& (0+255),b
 13196                           
 13197                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13198  0107CA  ECCA  F0AE         	call	_rtcc_get_hours_decimal	;wreg free
 13199  0107CE  0100               	movlb	0	; () banked
 13200  0107D0  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13201                           
 13202                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13203  0107D2  ECC2  F0AE         	call	_rtcc_get_minutes_decimal	;wreg free
 13204  0107D6  0100               	movlb	0	; () banked
 13205  0107D8  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13206                           
 13207                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13208  0107DA  ECF2  F0AE         	call	_rtcc_get_seconds_decimal	;wreg free
 13209  0107DE  0100               	movlb	0	; () banked
 13210  0107E0  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13214  0107E2  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13215  0107E6  0E3F               	movlw	63
 13216  0107E8  1768               	andwf	??__get_dateTime& (0+255),f,b
 13217  0107EA  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13218  0107EE  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13219  0107F0  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13220  0107F2  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13221  0107F4  0E1A               	movlw	26
 13222  0107F6                     u19145:
 13223  0107F6  90D8               	bcf	status,0,c
 13224  0107F8  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13225  0107FA  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13226  0107FC  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13227  0107FE  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13228  010800  2EE8               	decfsz	wreg,f,c
 13229  010802  D7F9               	goto	u19145
 13230  010804  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13231  010808  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13232  01080C  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13233  010810  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13237  010814  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13238  010818  0E0F               	movlw	15
 13239  01081A  1768               	andwf	??__get_dateTime& (0+255),f,b
 13240  01081C  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13241  010820  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13242  010822  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13243  010824  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13244  010826  0E16               	movlw	22
 13245  010828                     u19155:
 13246  010828  90D8               	bcf	status,0,c
 13247  01082A  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13248  01082C  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13249  01082E  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13250  010830  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13251  010832  2EE8               	decfsz	wreg,f,c
 13252  010834  D7F9               	goto	u19155
 13253  010836  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13254  010838  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13255  01083A  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13256  01083C  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13257  01083E  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13258  010840  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13259  010842  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13260  010844  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13264  010846  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13265  01084A  0E1F               	movlw	31
 13266  01084C  1768               	andwf	??__get_dateTime& (0+255),f,b
 13267  01084E  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13268  010852  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13269  010854  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13270  010856  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13271  010858  0E11               	movlw	17
 13272  01085A                     u19165:
 13273  01085A  90D8               	bcf	status,0,c
 13274  01085C  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13275  01085E  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13276  010860  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13277  010862  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13278  010864  2EE8               	decfsz	wreg,f,c
 13279  010866  D7F9               	goto	u19165
 13280  010868  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13281  01086A  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13282  01086C  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13283  01086E  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13284  010870  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13285  010872  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13286  010874  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13287  010876  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 13291  010878  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 13292  01087C  0E1F               	movlw	31
 13293  01087E  1768               	andwf	??__get_dateTime& (0+255),f,b
 13294  010880  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13295  010884  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13296  010886  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13297  010888  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13298  01088A  0E0C               	movlw	12
 13299  01088C                     u19175:
 13300  01088C  90D8               	bcf	status,0,c
 13301  01088E  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13302  010890  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13303  010892  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13304  010894  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13305  010896  2EE8               	decfsz	wreg,f,c
 13306  010898  D7F9               	goto	u19175
 13307  01089A  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13308  01089C  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13309  01089E  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13310  0108A0  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13311  0108A2  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13312  0108A4  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13313  0108A6  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13314  0108A8  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 13318  0108AA  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 13319  0108AC  0B3F               	andlw	63
 13320  0108AE  6F68               	movwf	??__get_dateTime& (0+255),b
 13321  0108B0  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 13322  0108B2  0E06               	movlw	6
 13323  0108B4                     u19185:
 13324  0108B4  90D8               	bcf	status,0,c
 13325  0108B6  3768               	rlcf	??__get_dateTime& (0+255),f,b
 13326  0108B8  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13327  0108BA  2EE8               	decfsz	wreg,f,c
 13328  0108BC  D7FB               	goto	u19185
 13329  0108BE  5168               	movf	??__get_dateTime& (0+255),w,b
 13330  0108C0  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 13331  0108C2  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13332  0108C4  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 13333  0108C6  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13334  0108C8  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 13335  0108CA  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13336  0108CC  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13337  0108CE  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13338  0108D0  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13339  0108D2  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13340  0108D4  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13341  0108D6  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 13342  0108D8  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;log.c: 53: datetime |= (seconds&0b111111);
 13346  0108DA  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 13347  0108DE  0E3F               	movlw	63
 13348  0108E0  1768               	andwf	??__get_dateTime& (0+255),f,b
 13349  0108E2  5168               	movf	??__get_dateTime& (0+255),w,b
 13350  0108E4  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;log.c: 54: return datetime;
 13354  0108E6  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 13355  0108EA  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 13356  0108EE  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 13357  0108F2  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 13358  0108F6  0012               	return	
 13359  0108F8                     __end_of__get_dateTime:
 13360                           	opt stack 0
 13361                           tblptru	equ	0xFF8
 13362                           tblptrh	equ	0xFF7
 13363                           tblptrl	equ	0xFF6
 13364                           tablat	equ	0xFF5
 13365                           prodh	equ	0xFF4
 13366                           prodl	equ	0xFF3
 13367                           intcon	equ	0xFF2
 13368                           intcon2	equ	0xFF1
 13369                           intcon3	equ	0xFF0
 13370                           postinc0	equ	0xFEE
 13371                           wreg	equ	0xFE8
 13372                           postdec1	equ	0xFE5
 13373                           plusw1	equ	0xFE3
 13374                           fsr1h	equ	0xFE2
 13375                           fsr1l	equ	0xFE1
 13376                           indf2	equ	0xFDF
 13377                           postinc2	equ	0xFDE
 13378                           postdec2	equ	0xFDD
 13379                           plusw2	equ	0xFDB
 13380                           fsr2h	equ	0xFDA
 13381                           fsr2l	equ	0xFD9
 13382                           status	equ	0xFD8
 13383                           
 13384 ;; *************** function __get_checksum *****************
 13385 ;; Defined at:
 13386 ;;		line 57 in file "log.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;  log_entry       2    0[BANK0 ] PTR struct .
 13389 ;;		 -> log_write_to_disk@log_entry(32), 
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 13392 ;;		 -> log_write_to_disk@log_entry(32), 
 13393 ;;  cntr            1    5[BANK0 ] unsigned char 
 13394 ;;  checksum        1    4[BANK0 ] unsigned char 
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      unsigned char 
 13397 ;; Registers used:
 13398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13407 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13408 ;;Total ram usage:        6 bytes
 13409 ;; Hardware stack levels used:    1
 13410 ;; Hardware stack levels required when called:   10
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		_log_generate_entry
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           	psect	text55
 13419  01540C                     __ptext55:
 13420                           	opt stack 0
 13421  01540C                     __get_checksum:
 13422                           	opt stack 18
 13423                           
 13424                           ;log.c: 59: uint8_t checksum;;log.c: 60: uint8_t *byte_array;;log.c: 61: uint8_t cntr;;l
      +                          og.c: 62: byte_array = (uint8_t*) log_entry;
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;incstack = 0
 13428  01540C  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 13429  015410  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 13430                           
 13431                           ;log.c: 63: checksum = 0x00;
 13432  015414  0E00               	movlw	0
 13433  015416  0100               	movlb	0	; () banked
 13434  015418  6F64               	movwf	__get_checksum@checksum& (0+255),b
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 13438  01541A  0E00               	movlw	0
 13439  01541C  6F65               	movwf	__get_checksum@cntr& (0+255),b
 13440  01541E  0E1E               	movlw	30
 13441  015420  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 13442  015422  D001               	goto	l3280
 13443  015424  D00C               	goto	u19200
 13444  015426                     l3280:
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;log.c: 65: {;log.c: 66: checksum ^= byte_array[cntr];
 13448                           
 13449                           ; BSR set to: 0
 13450  015426  5165               	movf	__get_checksum@cntr& (0+255),w,b
 13451  015428  0D01               	mullw	1
 13452  01542A  50F3               	movf	prodl,w,c
 13453  01542C  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 13454  01542E  6ED9               	movwf	fsr2l,c
 13455  015430  50F4               	movf	prodh,w,c
 13456  015432  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 13457  015434  6EDA               	movwf	fsr2h,c
 13458  015436  50DF               	movf	indf2,w,c
 13459  015438  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 13460                           
 13461                           ; BSR set to: 0
 13462  01543A  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 13463  01543C  D7F0               	goto	L9
 13464  01543E                     u19200:
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;log.c: 67: };log.c: 68: return checksum;
 13468                           
 13469                           ; BSR set to: 0
 13470  01543E  5164               	movf	__get_checksum@checksum& (0+255),w,b
 13471  015440  0012               	return	
 13472  015442                     __end_of__get_checksum:
 13473                           	opt stack 0
 13474                           tblptru	equ	0xFF8
 13475                           tblptrh	equ	0xFF7
 13476                           tblptrl	equ	0xFF6
 13477                           tablat	equ	0xFF5
 13478                           prodh	equ	0xFF4
 13479                           prodl	equ	0xFF3
 13480                           intcon	equ	0xFF2
 13481                           intcon2	equ	0xFF1
 13482                           intcon3	equ	0xFF0
 13483                           postinc0	equ	0xFEE
 13484                           wreg	equ	0xFE8
 13485                           postdec1	equ	0xFE5
 13486                           plusw1	equ	0xFE3
 13487                           fsr1h	equ	0xFE2
 13488                           fsr1l	equ	0xFE1
 13489                           indf2	equ	0xFDF
 13490                           postinc2	equ	0xFDE
 13491                           postdec2	equ	0xFDD
 13492                           plusw2	equ	0xFDB
 13493                           fsr2h	equ	0xFDA
 13494                           fsr2l	equ	0xFD9
 13495                           status	equ	0xFD8
 13496                           
 13497 ;; *************** function _fat_create_file *****************
 13498 ;; Defined at:
 13499 ;;		line 321 in file "fat16.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  name            2   59[BANK0 ] PTR unsigned char 
 13502 ;;		 -> filename(9), 
 13503 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 13504 ;;		 -> extension(4), 
 13505 ;;  size            4   63[BANK0 ] unsigned long 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;  root_entry     32   80[BANK0 ] struct .
 13508 ;;  cluster         2   78[BANK0 ] unsigned int 
 13509 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 13510 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 13511 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 13512 ;;  root_slot       1   75[BANK0 ] unsigned char 
 13513 ;; Return value:  Size  Location     Type
 13514 ;;                  1    wreg      unsigned char 
 13515 ;; Registers used:
 13516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13517 ;; Tracked objects:
 13518 ;;		On entry : 0/0
 13519 ;;		On exit  : 0/0
 13520 ;;		Unchanged: 0/0
 13521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13522 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13525 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13526 ;;Total ram usage:       53 bytes
 13527 ;; Hardware stack levels used:    1
 13528 ;; Hardware stack levels required when called:   16
 13529 ;; This function calls:
 13530 ;;		__get_available_root_entry
 13531 ;;		__get_date
 13532 ;;		__get_empty_cluster
 13533 ;;		__get_time
 13534 ;;		__write_fat
 13535 ;;		__write_root
 13536 ;;		_fat_find_file
 13537 ;;		_fat_get_empty_clusters
 13538 ;;		_memcpy
 13539 ;; This function is called by:
 13540 ;;		_log_write_to_disk
 13541 ;; This function uses a non-reentrant model
 13542 ;;
 13543                           
 13544                           	psect	text56
 13545  010320                     __ptext56:
 13546                           	opt stack 0
 13547  010320                     _fat_create_file:
 13548                           	opt stack 13
 13549                           
 13550                           ;fat16.c: 323: uint8_t root_slot;;fat16.c: 324: rootEntry_t root_entry;;fat16.c: 325: ui
      +                          nt16_t cluster;;fat16.c: 326: uint16_t next_cluster;;fat16.c: 327: uint16_t number_of_cl
      +                          usters;;fat16.c: 328: uint16_t cluster_count;;fat16.c: 332: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;incstack = 0
 13554  010320  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 13555  010324  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 13556  010328  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 13557  01032C  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13558  010330  ECC3  F095         	call	_fat_find_file	;wreg free
 13559  010334  0AFF               	xorlw	255
 13560  010336  B4D8               	btfsc	status,2,c
 13561  010338  D002               	goto	l3014
 13562                           
 13563                           ;fat16.c: 333: {;fat16.c: 336: return 0xFF;
 13564  01033A  0EFF               	movlw	255
 13565  01033C  0012               	return	
 13566  01033E                     l3014:
 13567                           
 13568                           ;fat16.c: 337: };fat16.c: 341: root_slot = _get_available_root_entry();
 13569  01033E  EC00  F0AC         	call	__get_available_root_entry	;wreg free
 13570  010342  0100               	movlb	0	; () banked
 13571  010344  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;fat16.c: 342: if(root_slot == 0xFF)
 13575  010346  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 13576  010348  A4D8               	btfss	status,2,c
 13577  01034A  D002               	goto	l3016
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;fat16.c: 343: {;fat16.c: 346: return 0xFE;
 13581  01034C  0EFE               	movlw	254
 13582                           
 13583                           ; BSR set to: 0
 13584  01034E  0012               	return	
 13585  010350                     l3016:
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;fat16.c: 347: };fat16.c: 350: number_of_clusters = (size>>9) + 1;
 13589                           
 13590                           ; BSR set to: 0
 13591  010350  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 13592  010354  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 13593  010358  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 13594  01035C  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 13595  010360  0E0A               	movlw	10
 13596  010362  D005               	goto	u21680
 13597  010364                     u21685:
 13598  010364  90D8               	bcf	status,0,c
 13599  010366  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13600  010368  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13601  01036A  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13602  01036C  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 13603  01036E                     u21680:
 13604  01036E  2EE8               	decfsz	wreg,f,c
 13605  010370  D7F9               	goto	u21685
 13606  010372  0E01               	movlw	1
 13607  010374  25A3               	addwf	??_fat_create_file& (0+255),w,b
 13608  010376  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 13609  010378  0E00               	movlw	0
 13610  01037A  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 13611  01037C  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 13615  01037E  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 13616  010382  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 13617  010386  EC71  F09B         	call	_fat_get_empty_clusters	;wreg free
 13618  01038A  0100               	movlb	0	; () banked
 13619  01038C  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13620  01038E  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 13621  010390  E104               	bnz	u21690
 13622  010392  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13623  010394  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 13624  010396  B4D8               	btfsc	status,2,c
 13625  010398  D002               	goto	l3017
 13626  01039A                     u21690:
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;fat16.c: 352: {;fat16.c: 355: return 0xFD;
 13630  01039A  0EFD               	movlw	253
 13631                           
 13632                           ; BSR set to: 0
 13633  01039C  0012               	return	
 13634  01039E                     l3017:
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;fat16.c: 356: };fat16.c: 359: cluster = _get_empty_cluster(2);
 13638                           
 13639                           ; BSR set to: 0
 13640  01039E  0E00               	movlw	0
 13641  0103A0  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13642  0103A2  0E02               	movlw	2
 13643  0103A4  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13644  0103A6  EC55  F09F         	call	__get_empty_cluster	;wreg free
 13645  0103AA  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 13646  0103AE  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 13647                           
 13648                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 13649  0103B2  0EB0               	movlw	low fat_create_file@root_entry
 13650  0103B4  0100               	movlb	0	; () banked
 13651  0103B6  6F60               	movwf	memcpy@d1& (0+255),b
 13652  0103B8  0E00               	movlw	high fat_create_file@root_entry
 13653  0103BA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13654  0103BC  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 13655  0103C0  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13656  0103C4  0E00               	movlw	0
 13657  0103C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13658  0103C8  0E08               	movlw	8
 13659  0103CA  6F64               	movwf	memcpy@n& (0+255),b
 13660  0103CC  EC8B  F0A3         	call	_memcpy	;wreg free
 13661                           
 13662                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 13663  0103D0  0EB8               	movlw	low (fat_create_file@root_entry+8)
 13664  0103D2  0100               	movlb	0	; () banked
 13665  0103D4  6F60               	movwf	memcpy@d1& (0+255),b
 13666  0103D6  0E00               	movlw	high (fat_create_file@root_entry+8)
 13667  0103D8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13668  0103DA  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 13669  0103DE  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13670  0103E2  0E00               	movlw	0
 13671  0103E4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13672  0103E6  0E03               	movlw	3
 13673  0103E8  6F64               	movwf	memcpy@n& (0+255),b
 13674  0103EA  EC8B  F0A3         	call	_memcpy	;wreg free
 13675                           
 13676                           ;fat16.c: 364: root_entry.attributes = 0x00;
 13677  0103EE  0E00               	movlw	0
 13678  0103F0  0100               	movlb	0	; () banked
 13679  0103F2  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 13683  0103F4  0E00               	movlw	0
 13684  0103F6  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 13688  0103F8  0E00               	movlw	0
 13689  0103FA  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 13693  0103FC  EC5D  F0A1         	call	__get_time	;wreg free
 13694  010400  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 13695  010404  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 13696                           
 13697                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 13698  010408  EC2F  F0A2         	call	__get_date	;wreg free
 13699  01040C  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 13700  010410  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 13701                           
 13702                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 13703  010414  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13704  010418  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13705                           
 13706                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 13707  01041C  0E00               	movlw	0
 13708  01041E  0100               	movlb	0	; () banked
 13709  010420  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13710  010422  0E00               	movlw	0
 13711  010424  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 13715  010426  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13716  01042A  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 13720  01042E  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13721  010432  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 13725  010436  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 13726  01043A  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;fat16.c: 374: root_entry.fileSize = size;
 13730  01043E  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13731  010442  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13732  010446  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13733  01044A  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13734                           
 13735                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 13736  01044E  0EB0               	movlw	low fat_create_file@root_entry
 13737  010450  6F88               	movwf	__write_root@data& (0+255),b
 13738  010452  0E00               	movlw	high fat_create_file@root_entry
 13739  010454  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13740  010456  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13741  010458  ECBB  F0A3         	call	__write_root
 13742                           
 13743                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 13744  01045C  0E00               	movlw	0
 13745  01045E  0100               	movlb	0	; () banked
 13746  010460  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 13747  010462  0E01               	movlw	1
 13748  010464  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 13749  010466  D02F               	goto	l3018
 13750  010468                     
 13751                           ; BSR set to: 0
 13752                           ;fat16.c: 383: {;fat16.c: 385: if(cluster_count==number_of_clusters)
 13753                           
 13754                           ; BSR set to: 0
 13755  010468  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13756  01046A  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 13757  01046C  E10E               	bnz	l21965
 13758  01046E  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13759  010470  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13760  010472  A4D8               	btfss	status,2,c
 13761  010474  D00A               	goto	l3020
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;fat16.c: 386: {;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 13765  010476  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13766  01047A  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13767  01047E  0EFF               	movlw	255
 13768  010480  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 13769  010482  698A               	setf	__write_fat@value& (0+255),b
 13770  010484  EC2D  F0A9         	call	__write_fat	;wreg free
 13771                           
 13772                           ;fat16.c: 389: }
 13773  010488  D01B               	goto	l3021
 13774  01048A                     l3020:
 13775  01048A                     l21965:
 13776                           
 13777                           ;fat16.c: 390: else;fat16.c: 391: {;fat16.c: 393: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 13778  01048A  0E01               	movlw	1
 13779  01048C  0100               	movlb	0	; () banked
 13780  01048E  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 13781  010490  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13782  010492  0E00               	movlw	0
 13783  010494  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 13784  010496  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13785  010498  EC55  F09F         	call	__get_empty_cluster	;wreg free
 13786  01049C  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 13787  0104A0  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 13788                           
 13789                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 13790  0104A4  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13791  0104A8  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13792  0104AC  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 13793  0104B0  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 13794  0104B4  EC2D  F0A9         	call	__write_fat	;wreg free
 13795                           
 13796                           ;fat16.c: 397: cluster = next_cluster;
 13797  0104B8  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 13798  0104BC  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 13799  0104C0                     l3021:
 13800  0104C0  0100               	movlb	0	; () banked
 13801  0104C2  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 13802  0104C4  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 13803  0104C6                     l3018:
 13804                           
 13805                           ; BSR set to: 0
 13806                           
 13807                           ; BSR set to: 0
 13808  0104C6  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 13809  0104C8  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 13810  0104CA  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13811  0104CC  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13812  0104CE  B0D8               	btfsc	status,0,c
 13813  0104D0  D7CB               	goto	l3019
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;fat16.c: 398: };fat16.c: 399: };fat16.c: 400: return root_slot;
 13817                           
 13818                           ; BSR set to: 0
 13819  0104D2  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13820  0104D4  0012               	return	
 13821  0104D6                     __end_of_fat_create_file:
 13822                           	opt stack 0
 13823                           tblptru	equ	0xFF8
 13824                           tblptrh	equ	0xFF7
 13825                           tblptrl	equ	0xFF6
 13826                           tablat	equ	0xFF5
 13827                           prodh	equ	0xFF4
 13828                           prodl	equ	0xFF3
 13829                           intcon	equ	0xFF2
 13830                           intcon2	equ	0xFF1
 13831                           intcon3	equ	0xFF0
 13832                           postinc0	equ	0xFEE
 13833                           wreg	equ	0xFE8
 13834                           postdec1	equ	0xFE5
 13835                           plusw1	equ	0xFE3
 13836                           fsr1h	equ	0xFE2
 13837                           fsr1l	equ	0xFE1
 13838                           indf2	equ	0xFDF
 13839                           postinc2	equ	0xFDE
 13840                           postdec2	equ	0xFDD
 13841                           plusw2	equ	0xFDB
 13842                           fsr2h	equ	0xFDA
 13843                           fsr2l	equ	0xFD9
 13844                           status	equ	0xFD8
 13845                           
 13846 ;; *************** function _fat_get_empty_clusters *****************
 13847 ;; Defined at:
 13848 ;;		line 132 in file "fat16.c"
 13849 ;; Parameters:    Size  Location     Type
 13850 ;;  maximum         2   39[BANK0 ] unsigned int 
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;  cluster         2   49[BANK0 ] unsigned int 
 13853 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 13854 ;;  value           2   45[BANK0 ] unsigned int 
 13855 ;;  offset          2   43[BANK0 ] unsigned int 
 13856 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 13857 ;; Return value:  Size  Location     Type
 13858 ;;                  2   39[BANK0 ] unsigned int 
 13859 ;; Registers used:
 13860 ;;		wreg, status,2, status,0, cstack
 13861 ;; Tracked objects:
 13862 ;;		On entry : 0/0
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13867 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13869 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13870 ;;Total ram usage:       12 bytes
 13871 ;; Hardware stack levels used:    1
 13872 ;; Hardware stack levels required when called:   14
 13873 ;; This function calls:
 13874 ;;		_flash_partial_read
 13875 ;; This function is called by:
 13876 ;;		_fat_create_file
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text57
 13881  0136E2                     __ptext57:
 13882                           	opt stack 0
 13883  0136E2                     _fat_get_empty_clusters:
 13884                           	opt stack 14
 13885                           
 13886                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 13887                           
 13888                           ;incstack = 0
 13889  0136E2  0E00               	movlw	0
 13890  0136E4  0100               	movlb	0	; () banked
 13891  0136E6  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 13892  0136E8  0E00               	movlw	0
 13893  0136EA  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 13894                           
 13895                           ;fat16.c: 135: uint16_t cluster;;fat16.c: 136: uint16_t fat_sector;;fat16.c: 137: uint16
      +                          _t offset;;fat16.c: 138: uint16_t value;;fat16.c: 141: for(cluster=2; cluster<(8170+2); 
      +                          ++cluster)
 13896  0136EC  0E00               	movlw	0
 13897  0136EE  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 13898  0136F0  0E02               	movlw	2
 13899  0136F2  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 13900  0136F4  D034               	goto	l20111
 13901  0136F6                     
 13902                           ; BSR set to: 0
 13903                           ;fat16.c: 142: {;fat16.c: 143: fat_sector = cluster>>8;
 13904                           
 13905                           ; BSR set to: 0
 13906  0136F6  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 13907  0136F8  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 13908  0136FA  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;fat16.c: 144: fat_sector += 2;
 13912  0136FC  0E02               	movlw	2
 13913  0136FE  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 13914  013700  0E00               	movlw	0
 13915  013702  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;fat16.c: 145: offset = cluster & 0xFF;
 13919  013704  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 13920  013706  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 13921  013708  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;fat16.c: 146: offset <<= 1;
 13925  01370A  90D8               	bcf	status,0,c
 13926  01370C  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 13927  01370E  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 13931  013710  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 13932  013714  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 13933  013718  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 13934  01371C  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 13935  013720  0E00               	movlw	0
 13936  013722  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 13937  013724  0E02               	movlw	2
 13938  013726  6F77               	movwf	flash_partial_read@length& (0+255),b
 13939  013728  0E8D               	movlw	low fat_get_empty_clusters@value
 13940  01372A  6F79               	movwf	flash_partial_read@data& (0+255),b
 13941  01372C  0E00               	movlw	high fat_get_empty_clusters@value
 13942  01372E  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 13943  013730  ECCF  F09F         	call	_flash_partial_read	;wreg free
 13944                           
 13945                           ;fat16.c: 148: if(value==0x0000)
 13946  013734  0100               	movlb	0	; () banked
 13947  013736  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 13948  013738  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 13949  01373A  A4D8               	btfss	status,2,c
 13950  01373C  D00E               	goto	l2970
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;fat16.c: 149: {;fat16.c: 150: ++empty_clusters;
 13954  01373E  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 13955  013740  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;fat16.c: 151: if(empty_clusters==maximum)
 13959  013742  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 13960  013744  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 13961  013746  E109               	bnz	l20109
 13962  013748  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 13963  01374A  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 13964  01374C  A4D8               	btfss	status,2,c
 13965  01374E  D005               	goto	l2970
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;fat16.c: 152: {;fat16.c: 153: return empty_clusters;
 13969  013750  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 13970  013754  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 13971  013758  0012               	return	
 13972  01375A                     l2970:
 13973  01375A                     l20109:
 13974                           
 13975                           ; BSR set to: 0
 13976  01375A  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 13977  01375C  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 13978  01375E                     l20111:
 13979                           
 13980                           ; BSR set to: 0
 13981  01375E  0EEC               	movlw	236
 13982  013760  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 13983  013762  0E1F               	movlw	31
 13984  013764  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 13985  013766  A0D8               	btfss	status,0,c
 13986  013768  D7C6               	goto	l2967
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;fat16.c: 154: };fat16.c: 155: };fat16.c: 156: };fat16.c: 157: return empty_clusters;
 13990  01376A  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 13991  01376E  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 13992                           
 13993                           ; BSR set to: 0
 13994  013772  0012               	return		;funcret
 13995  013774                     __end_of_fat_get_empty_clusters:
 13996                           	opt stack 0
 13997                           tblptru	equ	0xFF8
 13998                           tblptrh	equ	0xFF7
 13999                           tblptrl	equ	0xFF6
 14000                           tablat	equ	0xFF5
 14001                           prodh	equ	0xFF4
 14002                           prodl	equ	0xFF3
 14003                           intcon	equ	0xFF2
 14004                           intcon2	equ	0xFF1
 14005                           intcon3	equ	0xFF0
 14006                           postinc0	equ	0xFEE
 14007                           wreg	equ	0xFE8
 14008                           postdec1	equ	0xFE5
 14009                           plusw1	equ	0xFE3
 14010                           fsr1h	equ	0xFE2
 14011                           fsr1l	equ	0xFE1
 14012                           indf2	equ	0xFDF
 14013                           postinc2	equ	0xFDE
 14014                           postdec2	equ	0xFDD
 14015                           plusw2	equ	0xFDB
 14016                           fsr2h	equ	0xFDA
 14017                           fsr2l	equ	0xFD9
 14018                           status	equ	0xFD8
 14019                           
 14020 ;; *************** function _fat_find_file *****************
 14021 ;; Defined at:
 14022 ;;		line 262 in file "fat16.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  name            2   39[BANK0 ] PTR unsigned char 
 14025 ;;		 -> filename(9), 
 14026 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 14027 ;;		 -> extension(4), 
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 14030 ;;  offset          2   57[BANK0 ] unsigned int 
 14031 ;;  sector          2   55[BANK0 ] unsigned int 
 14032 ;;  slot            1   54[BANK0 ] unsigned char 
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  1    wreg      unsigned char 
 14035 ;; Registers used:
 14036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14037 ;; Tracked objects:
 14038 ;;		On entry : 0/0
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14043 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14045 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14046 ;;Total ram usage:       20 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:   14
 14049 ;; This function calls:
 14050 ;;		_flash_partial_read
 14051 ;;		_strncmp
 14052 ;; This function is called by:
 14053 ;;		_fat_create_file
 14054 ;;		_log_write_to_disk
 14055 ;; This function uses a non-reentrant model
 14056 ;;
 14057                           
 14058                           	psect	text58
 14059  012B86                     __ptext58:
 14060                           	opt stack 0
 14061  012B86                     _fat_find_file:
 14062                           	opt stack 15
 14063                           
 14064                           ;fat16.c: 264: uint8_t slot;;fat16.c: 265: uint16_t sector;;fat16.c: 266: uint16_t offse
      +                          t;;fat16.c: 267: uint8_t buffer[11];;fat16.c: 268: slot = 0;
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;incstack = 0
 14068  012B86  0E00               	movlw	0
 14069  012B88  0100               	movlb	0	; () banked
 14070  012B8A  6F96               	movwf	fat_find_file@slot& (0+255),b
 14071                           
 14072                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 14073  012B8C  0E00               	movlw	0
 14074  012B8E  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 14075  012B90  0E12               	movlw	18
 14076  012B92  6F97               	movwf	fat_find_file@sector& (0+255),b
 14077  012B94                     l20147:
 14078                           
 14079                           ; BSR set to: 0
 14080  012B94  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 14081  012B96  E159               	bnz	l20189
 14082  012B98  0E16               	movlw	22
 14083  012B9A  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 14084  012B9C  B0D8               	btfsc	status,0,c
 14085  012B9E  D055               	goto	u19130
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;fat16.c: 270: {;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 14089                           
 14090                           ; BSR set to: 0
 14091                           
 14092                           ; BSR set to: 0
 14093  012BA0  0E00               	movlw	0
 14094  012BA2  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 14095  012BA4  0E00               	movlw	0
 14096  012BA6  6F99               	movwf	fat_find_file@offset& (0+255),b
 14097  012BA8                     l20153:
 14098                           
 14099                           ; BSR set to: 0
 14100  012BA8  0E02               	movlw	2
 14101  012BAA  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 14102  012BAC  B0D8               	btfsc	status,0,c
 14103  012BAE  D04A               	goto	u19120
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;fat16.c: 272: {;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 14107                           
 14108                           ; BSR set to: 0
 14109                           
 14110                           ; BSR set to: 0
 14111  012BB0  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 14112  012BB4  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 14113  012BB8  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 14114  012BBC  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 14115  012BC0  0E00               	movlw	0
 14116  012BC2  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14117  012BC4  0E0B               	movlw	11
 14118  012BC6  6F77               	movwf	flash_partial_read@length& (0+255),b
 14119  012BC8  0E8B               	movlw	low fat_find_file@buffer
 14120  012BCA  6F79               	movwf	flash_partial_read@data& (0+255),b
 14121  012BCC  0E00               	movlw	high fat_find_file@buffer
 14122  012BCE  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14123  012BD0  ECCF  F09F         	call	_flash_partial_read	;wreg free
 14124                           
 14125                           ;fat16.c: 274: if(buffer[0]==0x00)
 14126  012BD4  0100               	movlb	0	; () banked
 14127  012BD6  518B               	movf	fat_find_file@buffer& (0+255),w,b
 14128  012BD8  A4D8               	btfss	status,2,c
 14129  012BDA  D002               	goto	l3002
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;fat16.c: 275: {;fat16.c: 278: return 0xFF;
 14133  012BDC  0EFF               	movlw	255
 14134                           
 14135                           ; BSR set to: 0
 14136  012BDE  0012               	return	
 14137  012BE0                     l3002:
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 14141                           
 14142                           ; BSR set to: 0
 14143  012BE0  0EE5               	movlw	229
 14144  012BE2  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 14145  012BE4  B4D8               	btfsc	status,2,c
 14146  012BE6  D028               	goto	l3008
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;fat16.c: 286: else;fat16.c: 287: {;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 14150                           
 14151                           ; BSR set to: 0
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;fat16.c: 281: {;fat16.c: 285: }
 14155  012BE8  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14156  012BEC  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 14157  012BF0  0E8B               	movlw	low fat_find_file@buffer
 14158  012BF2  6F62               	movwf	strncmp@s2& (0+255),b
 14159  012BF4  0E00               	movlw	high fat_find_file@buffer
 14160  012BF6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14161  012BF8  0E00               	movlw	0
 14162  012BFA  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14163  012BFC  0E08               	movlw	8
 14164  012BFE  6F64               	movwf	strncmp@len& (0+255),b
 14165  012C00  EC59  F09E         	call	_strncmp	;wreg free
 14166  012C04  0100               	movlb	0	; () banked
 14167  012C06  5160               	movf	?_strncmp& (0+255),w,b
 14168  012C08  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14169  012C0A  A4D8               	btfss	status,2,c
 14170  012C0C  D015               	goto	l3008
 14171                           
 14172                           ; BSR set to: 0
 14173                           ;fat16.c: 290: {;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 14174  012C0E  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 14175  012C12  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 14176  012C16  0E93               	movlw	low (fat_find_file@buffer+8)
 14177  012C18  6F62               	movwf	strncmp@s2& (0+255),b
 14178  012C1A  0E00               	movlw	high (fat_find_file@buffer+8)
 14179  012C1C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14180  012C1E  0E00               	movlw	0
 14181  012C20  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14182  012C22  0E03               	movlw	3
 14183  012C24  6F64               	movwf	strncmp@len& (0+255),b
 14184  012C26  EC59  F09E         	call	_strncmp	;wreg free
 14185  012C2A  0100               	movlb	0	; () banked
 14186  012C2C  5160               	movf	?_strncmp& (0+255),w,b
 14187  012C2E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14188  012C30  A4D8               	btfss	status,2,c
 14189  012C32  D002               	goto	l3008
 14190                           
 14191                           ; BSR set to: 0
 14192                           ;fat16.c: 293: {;fat16.c: 296: return slot;
 14193  012C34  5196               	movf	fat_find_file@slot& (0+255),w,b
 14194                           
 14195                           ; BSR set to: 0
 14196  012C36  0012               	return	
 14197  012C38                     l3008:
 14198                           
 14199                           ; BSR set to: 0
 14200                           ;fat16.c: 297: };fat16.c: 298: };fat16.c: 299: };fat16.c: 300: ++slot;
 14201                           
 14202                           ; BSR set to: 0
 14203                           
 14204                           ; BSR set to: 0
 14205                           
 14206                           ; BSR set to: 0
 14207                           
 14208                           ; BSR set to: 0
 14209  012C38  2B96               	incf	fat_find_file@slot& (0+255),f,b
 14210                           
 14211                           ; BSR set to: 0
 14212  012C3A  0E20               	movlw	32
 14213  012C3C  2799               	addwf	fat_find_file@offset& (0+255),f,b
 14214  012C3E  0E00               	movlw	0
 14215  012C40  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 14216  012C42  D7B2               	goto	l20153
 14217  012C44                     u19120:
 14218                           
 14219                           ; BSR set to: 0
 14220                           
 14221                           ; BSR set to: 0
 14222  012C44  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 14223  012C46  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 14224  012C48  D7A5               	goto	l20147
 14225  012C4A                     u19130:
 14226  012C4A                     l20189:
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;fat16.c: 301: };fat16.c: 302: };fat16.c: 303: return 0xFF;
 14230  012C4A  0EFF               	movlw	255
 14231  012C4C  0012               	return	
 14232  012C4E                     __end_of_fat_find_file:
 14233                           	opt stack 0
 14234                           tblptru	equ	0xFF8
 14235                           tblptrh	equ	0xFF7
 14236                           tblptrl	equ	0xFF6
 14237                           tablat	equ	0xFF5
 14238                           prodh	equ	0xFF4
 14239                           prodl	equ	0xFF3
 14240                           intcon	equ	0xFF2
 14241                           intcon2	equ	0xFF1
 14242                           intcon3	equ	0xFF0
 14243                           postinc0	equ	0xFEE
 14244                           wreg	equ	0xFE8
 14245                           postdec1	equ	0xFE5
 14246                           plusw1	equ	0xFE3
 14247                           fsr1h	equ	0xFE2
 14248                           fsr1l	equ	0xFE1
 14249                           indf2	equ	0xFDF
 14250                           postinc2	equ	0xFDE
 14251                           postdec2	equ	0xFDD
 14252                           plusw2	equ	0xFDB
 14253                           fsr2h	equ	0xFDA
 14254                           fsr2l	equ	0xFD9
 14255                           status	equ	0xFD8
 14256                           
 14257 ;; *************** function _strncmp *****************
 14258 ;; Defined at:
 14259 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 14262 ;;		 -> extension(4), filename(9), 
 14263 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 14264 ;;		 -> fat_find_file@buffer(11), 
 14265 ;;  len             2    4[BANK0 ] unsigned int 
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;		None
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  2    0[BANK0 ] int 
 14270 ;; Registers used:
 14271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14277 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14279 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14280 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14281 ;;Total ram usage:        9 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:   10
 14284 ;; This function calls:
 14285 ;;		Nothing
 14286 ;; This function is called by:
 14287 ;;		_fat_find_file
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           	psect	text59
 14292  013CB2                     __ptext59:
 14293                           	opt stack 0
 14294  013CB2                     _strncmp:
 14295                           	opt stack 18
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;incstack = 0
 14299  013CB2  D031               	goto	l4013
 14300  013CB4                     l19403:
 14301  013CB4  C060  FFD9         	movff	strncmp@s1,fsr2l
 14302  013CB8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14303  013CBC  50DF               	movf	indf2,w,c
 14304  013CBE  B4D8               	btfsc	status,2,c
 14305  013CC0  D00C               	goto	u18300
 14306  013CC2  C062  FFD9         	movff	strncmp@s2,fsr2l
 14307  013CC6  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14308  013CCA  C060  FFE1         	movff	strncmp@s1,fsr1l
 14309  013CCE  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 14310  013CD2  50DE               	movf	postinc2,w,c
 14311  013CD4  18E6               	xorwf	postinc1,w,c
 14312  013CD6  B4D8               	btfsc	status,2,c
 14313  013CD8  D019               	goto	l4015
 14314  013CDA                     u18300:
 14315  013CDA  C062  FFD9         	movff	strncmp@s2,fsr2l
 14316  013CDE  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14317  013CE2  50DF               	movf	indf2,w,c
 14318  013CE4  0100               	movlb	0	; () banked
 14319  013CE6  6F66               	movwf	??_strncmp& (0+255),b
 14320  013CE8  6B67               	clrf	(??_strncmp+1)& (0+255),b
 14321  013CEA  1F66               	comf	??_strncmp& (0+255),f,b
 14322  013CEC  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 14323  013CEE  4B66               	infsnz	??_strncmp& (0+255),f,b
 14324  013CF0  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 14325  013CF2  C060  FFD9         	movff	strncmp@s1,fsr2l
 14326  013CF6  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14327  013CFA  50DF               	movf	indf2,w,c
 14328  013CFC  6F68               	movwf	(??_strncmp+2)& (0+255),b
 14329  013CFE  5168               	movf	(??_strncmp+2)& (0+255),w,b
 14330  013D00  2566               	addwf	??_strncmp& (0+255),w,b
 14331  013D02  6F60               	movwf	?_strncmp& (0+255),b
 14332  013D04  0E00               	movlw	0
 14333  013D06  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 14334  013D08  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14335                           
 14336                           ; BSR set to: 0
 14337  013D0A  0012               	return	
 14338  013D0C                     l4015:
 14339                           
 14340                           ; BSR set to: 0
 14341  013D0C  0100               	movlb	0	; () banked
 14342  013D0E  4B60               	infsnz	strncmp@s1& (0+255),f,b
 14343  013D10  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 14344  013D12  4B62               	infsnz	strncmp@s2& (0+255),f,b
 14345  013D14  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 14346  013D16                     l4013:
 14347                           
 14348                           ; BSR set to: 0
 14349  013D16  0100               	movlb	0	; () banked
 14350  013D18  0764               	decf	strncmp@len& (0+255),f,b
 14351  013D1A  A0D8               	btfss	status,0,c
 14352  013D1C  0765               	decf	(strncmp@len+1)& (0+255),f,b
 14353  013D1E  2964               	incf	strncmp@len& (0+255),w,b
 14354  013D20  E1C9               	bnz	l19403
 14355  013D22  2965               	incf	(strncmp@len+1)& (0+255),w,b
 14356  013D24  A4D8               	btfss	status,2,c
 14357  013D26  D7C6               	goto	l4014
 14358                           
 14359                           ; BSR set to: 0
 14360                           
 14361                           ; BSR set to: 0
 14362  013D28  0E00               	movlw	0
 14363  013D2A  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14364  013D2C  0E00               	movlw	0
 14365  013D2E  6F60               	movwf	?_strncmp& (0+255),b
 14366  013D30  0012               	return	
 14367  013D32                     __end_of_strncmp:
 14368                           	opt stack 0
 14369                           tblptru	equ	0xFF8
 14370                           tblptrh	equ	0xFF7
 14371                           tblptrl	equ	0xFF6
 14372                           tablat	equ	0xFF5
 14373                           prodh	equ	0xFF4
 14374                           prodl	equ	0xFF3
 14375                           intcon	equ	0xFF2
 14376                           intcon2	equ	0xFF1
 14377                           intcon3	equ	0xFF0
 14378                           postinc0	equ	0xFEE
 14379                           wreg	equ	0xFE8
 14380                           postinc1	equ	0xFE6
 14381                           postdec1	equ	0xFE5
 14382                           plusw1	equ	0xFE3
 14383                           fsr1h	equ	0xFE2
 14384                           fsr1l	equ	0xFE1
 14385                           indf2	equ	0xFDF
 14386                           postinc2	equ	0xFDE
 14387                           postdec2	equ	0xFDD
 14388                           plusw2	equ	0xFDB
 14389                           fsr2h	equ	0xFDA
 14390                           fsr2l	equ	0xFD9
 14391                           status	equ	0xFD8
 14392                           
 14393 ;; *************** function __get_available_root_entry *****************
 14394 ;; Defined at:
 14395 ;;		line 96 in file "fat16.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;		None
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;  file_number     1   46[BANK0 ] unsigned char 
 14400 ;; Return value:  Size  Location     Type
 14401 ;;                  1    wreg      unsigned char 
 14402 ;; Registers used:
 14403 ;;		wreg, status,2, status,0, cstack
 14404 ;; Tracked objects:
 14405 ;;		On entry : 0/0
 14406 ;;		On exit  : 0/0
 14407 ;;		Unchanged: 0/0
 14408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14413 ;;Total ram usage:        1 bytes
 14414 ;; Hardware stack levels used:    1
 14415 ;; Hardware stack levels required when called:   15
 14416 ;; This function calls:
 14417 ;;		__root_is_available
 14418 ;; This function is called by:
 14419 ;;		_fat_create_file
 14420 ;; This function uses a non-reentrant model
 14421 ;;
 14422                           
 14423                           	psect	text60
 14424  015800                     __ptext60:
 14425                           	opt stack 0
 14426  015800                     __get_available_root_entry:
 14427                           	opt stack 13
 14428                           
 14429                           ;fat16.c: 98: uint8_t file_number;;fat16.c: 99: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 14430                           
 14431                           ; BSR set to: 0
 14432                           ;incstack = 0
 14433  015800  0E00               	movlw	0
 14434  015802  0100               	movlb	0	; () banked
 14435  015804  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 14436  015806                     l20039:
 14437                           
 14438                           ; BSR set to: 0
 14439  015806  0E3F               	movlw	63
 14440  015808  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14441  01580A  D001               	goto	l2955
 14442  01580C  D00C               	goto	u18960
 14443  01580E                     l2955:
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;fat16.c: 100: {;fat16.c: 101: if(_root_is_available(file_number))
 14447                           
 14448                           ; BSR set to: 0
 14449  01580E  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14450  015810  ECD9  F09E         	call	__root_is_available
 14451  015814  0900               	iorlw	0
 14452  015816  B4D8               	btfsc	status,2,c
 14453  015818  D003               	goto	l2957
 14454                           
 14455                           ;fat16.c: 102: {;fat16.c: 103: return file_number;
 14456  01581A  0100               	movlb	0	; () banked
 14457  01581C  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14458                           
 14459                           ; BSR set to: 0
 14460  01581E  0012               	return	
 14461  015820                     l2957:
 14462                           
 14463                           ; BSR set to: 0
 14464  015820  0100               	movlb	0	; () banked
 14465  015822  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14466  015824  D7F0               	goto	l20039
 14467  015826                     u18960:
 14468                           
 14469                           ; BSR set to: 0
 14470                           ;fat16.c: 104: };fat16.c: 105: };fat16.c: 106: return 0xFF;
 14471                           
 14472                           ; BSR set to: 0
 14473  015826  0EFF               	movlw	255
 14474  015828  0012               	return	
 14475  01582A                     __end_of__get_available_root_entry:
 14476                           	opt stack 0
 14477                           tblptru	equ	0xFF8
 14478                           tblptrh	equ	0xFF7
 14479                           tblptrl	equ	0xFF6
 14480                           tablat	equ	0xFF5
 14481                           prodh	equ	0xFF4
 14482                           prodl	equ	0xFF3
 14483                           intcon	equ	0xFF2
 14484                           intcon2	equ	0xFF1
 14485                           intcon3	equ	0xFF0
 14486                           postinc0	equ	0xFEE
 14487                           wreg	equ	0xFE8
 14488                           postinc1	equ	0xFE6
 14489                           postdec1	equ	0xFE5
 14490                           plusw1	equ	0xFE3
 14491                           fsr1h	equ	0xFE2
 14492                           fsr1l	equ	0xFE1
 14493                           indf2	equ	0xFDF
 14494                           postinc2	equ	0xFDE
 14495                           postdec2	equ	0xFDD
 14496                           plusw2	equ	0xFDB
 14497                           fsr2h	equ	0xFDA
 14498                           fsr2l	equ	0xFD9
 14499                           status	equ	0xFD8
 14500                           
 14501 ;; *************** function _fat_append_to_file *****************
 14502 ;; Defined at:
 14503 ;;		line 460 in file "fat16.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  file_number     1    wreg     unsigned char 
 14506 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 14507 ;;  data            2   51[BANK0 ] PTR unsigned char 
 14508 ;;		 -> log_write_to_disk@log_entry(32), 
 14509 ;; Auto vars:     Size  Location     Type
 14510 ;;  file_number     1   73[BANK0 ] unsigned char 
 14511 ;;  root           32   80[BANK0 ] struct .
 14512 ;;  position        4   76[BANK0 ] unsigned long 
 14513 ;;  file_size       4   63[BANK0 ] unsigned long 
 14514 ;;  length          2   74[BANK0 ] unsigned int 
 14515 ;;  offset          2   71[BANK0 ] unsigned int 
 14516 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 14517 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 14518 ;;  sector          2   61[BANK0 ] unsigned int 
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      unsigned char 
 14521 ;; Registers used:
 14522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/0
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14529 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14530 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14531 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14532 ;;Total ram usage:       63 bytes
 14533 ;; Hardware stack levels used:    1
 14534 ;; Hardware stack levels required when called:   16
 14535 ;; This function calls:
 14536 ;;		__get_empty_cluster
 14537 ;;		__read_fat
 14538 ;;		__read_root
 14539 ;;		__root_is_available
 14540 ;;		__sector_from_cluster
 14541 ;;		__update_modified_time
 14542 ;;		__write_fat
 14543 ;;		__write_root
 14544 ;;		_flash_partial_write
 14545 ;; This function is called by:
 14546 ;;		_log_write_to_disk
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           	psect	text61
 14551  00F742                     __ptext61:
 14552                           	opt stack 0
 14553  00F742                     _fat_append_to_file:
 14554                           	opt stack 13
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;incstack = 0
 14558                           ;fat_append_to_file@file_number stored from wreg
 14559  00F742  0100               	movlb	0	; () banked
 14560  00F744  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 14561                           
 14562                           ;fat16.c: 462: rootEntry_t root;;fat16.c: 463: uint32_t file_size;;fat16.c: 464: uint16_
      +                          t fat_cluster;;fat16.c: 465: uint16_t new_cluster;;fat16.c: 466: uint32_t position;;fat1
      +                          6.c: 467: uint16_t offset;;fat16.c: 468: uint16_t sector;;fat16.c: 469: uint16_t length;
      +                          ;fat16.c: 472: if(file_number>=64)
 14563  00F746  0E3F               	movlw	63
 14564  00F748  0100               	movlb	0	; () banked
 14565  00F74A  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 14566  00F74C  D001               	goto	l3038
 14567  00F74E  0012               	return	
 14568  00F750                     l3038:
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;fat16.c: 476: };fat16.c: 479: if(_root_is_available(file_number))
 14572                           
 14573                           ; BSR set to: 0
 14574  00F750  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14575  00F752  ECD9  F09E         	call	__root_is_available
 14576  00F756  0900               	iorlw	0
 14577  00F758  A4D8               	btfss	status,2,c
 14578  00F75A  0012               	return	
 14579                           
 14580                           ;fat16.c: 483: };fat16.c: 486: _read_root(file_number, &root);
 14581                           
 14582                           ;fat16.c: 480: {;fat16.c: 482: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 14583  00F75C  0EB0               	movlw	low fat_append_to_file@root
 14584  00F75E  0100               	movlb	0	; () banked
 14585  00F760  6F87               	movwf	__read_root@data& (0+255),b
 14586  00F762  0E00               	movlw	high fat_append_to_file@root
 14587  00F764  6F88               	movwf	(__read_root@data+1)& (0+255),b
 14588  00F766  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14589  00F768  ECE9  F0A3         	call	__read_root
 14590                           
 14591                           ;fat16.c: 487: file_size = root.fileSize;
 14592  00F76C  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 14593  00F770  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 14594  00F774  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 14595  00F778  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 14596                           
 14597                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 14598  00F77C  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 14599  00F780  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 14600                           
 14601                           ;fat16.c: 491: position = 0;
 14602  00F784  0E00               	movlw	0
 14603  00F786  0100               	movlb	0	; () banked
 14604  00F788  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14605  00F78A  0E00               	movlw	0
 14606  00F78C  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14607  00F78E  0E00               	movlw	0
 14608  00F790  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14609  00F792  0E00               	movlw	0
 14610  00F794  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14611                           
 14612                           ;fat16.c: 492: while((file_size-position)>512)
 14613  00F796  D013               	goto	l3041
 14614  00F798                     l21993:
 14615                           
 14616                           ; BSR set to: 0
 14617                           ;fat16.c: 493: {;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 14618  00F798  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 14619  00F79C  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 14620  00F7A0  ECEE  F0A7         	call	__read_fat	;wreg free
 14621  00F7A4  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 14622  00F7A8  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 14623                           
 14624                           ;fat16.c: 495: position += 512;
 14625  00F7AC  0E00               	movlw	0
 14626  00F7AE  0100               	movlb	0	; () banked
 14627  00F7B0  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14628  00F7B2  0E02               	movlw	2
 14629  00F7B4  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14630  00F7B6  0E00               	movlw	0
 14631  00F7B8  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14632  00F7BA  0E00               	movlw	0
 14633  00F7BC  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14634  00F7BE                     l3041:
 14635                           
 14636                           ; BSR set to: 0
 14637                           
 14638                           ; BSR set to: 0
 14639  00F7BE  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14640  00F7C2  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14641  00F7C6  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 14642  00F7CA  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 14643  00F7CE  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14644  00F7D0  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14645  00F7D2  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 14646  00F7D4  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 14647  00F7D6  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 14648  00F7D8  0E00               	movlw	0
 14649  00F7DA  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 14650  00F7DC  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 14651  00F7DE  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 14652  00F7E0  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14653  00F7E2  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14654  00F7E4  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 14655  00F7E6  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14656  00F7E8  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14657  00F7EA  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 14658  00F7EC  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 14659  00F7EE  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 14660  00F7F0  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 14661  00F7F2  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 14662  00F7F4  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 14663  00F7F6  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 14664  00F7F8  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 14665  00F7FA  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 14666  00F7FC  E1CD               	bnz	l21993
 14667  00F7FE  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 14668  00F800  0E02               	movlw	2
 14669  00F802  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 14670  00F804  B0D8               	btfsc	status,0,c
 14671  00F806  D7C8               	goto	l3042
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;fat16.c: 496: };fat16.c: 499: offset = file_size - position;
 14675                           
 14676                           ; BSR set to: 0
 14677  00F808  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14678  00F80C  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14679  00F810  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14680  00F812  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14681  00F814  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14682  00F816  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14683  00F818  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14684  00F81A  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14685  00F81C  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14686  00F81E  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14687  00F820  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14688  00F822  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;fat16.c: 502: position = 0;
 14692  00F824  0E00               	movlw	0
 14693  00F826  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14694  00F828  0E00               	movlw	0
 14695  00F82A  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14696  00F82C  0E00               	movlw	0
 14697  00F82E  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14698  00F830  0E00               	movlw	0
 14699  00F832  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14700                           
 14701                           ;fat16.c: 503: while(position < number_of_bytes)
 14702  00F834  D070               	goto	l3044
 14703  00F836                     
 14704                           ; BSR set to: 0
 14705                           ;fat16.c: 504: {;fat16.c: 506: if(offset==512)
 14706                           
 14707                           ; BSR set to: 0
 14708  00F836  0E02               	movlw	2
 14709  00F838  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 14710  00F83A  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 14711  00F83C  A4D8               	btfss	status,2,c
 14712  00F83E  D027               	goto	l3046
 14713                           
 14714                           ; BSR set to: 0
 14715                           ;fat16.c: 507: {;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 14716  00F840  0E00               	movlw	0
 14717  00F842  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14718  00F844  0E00               	movlw	0
 14719  00F846  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14720  00F848  EC55  F09F         	call	__get_empty_cluster	;wreg free
 14721  00F84C  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 14722  00F850  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 14723                           
 14724                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 14725  00F854  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 14726  00F858  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 14727  00F85C  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 14728  00F860  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 14729  00F864  EC2D  F0A9         	call	__write_fat	;wreg free
 14730                           
 14731                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 14732  00F868  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 14733  00F86C  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 14734  00F870  0EFF               	movlw	255
 14735  00F872  0100               	movlb	0	; () banked
 14736  00F874  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 14737  00F876  698A               	setf	__write_fat@value& (0+255),b
 14738  00F878  EC2D  F0A9         	call	__write_fat	;wreg free
 14739                           
 14740                           ;fat16.c: 516: fat_cluster = new_cluster;
 14741  00F87C  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 14742  00F880  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 14743                           
 14744                           ;fat16.c: 517: offset = 0;
 14745  00F884  0E00               	movlw	0
 14746  00F886  0100               	movlb	0	; () banked
 14747  00F888  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14748  00F88A  0E00               	movlw	0
 14749  00F88C  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14750  00F88E                     l3046:
 14751                           
 14752                           ; BSR set to: 0
 14753                           ;fat16.c: 518: };fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 14754                           
 14755                           ; BSR set to: 0
 14756  00F88E  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 14757  00F892  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 14758  00F896  ECEA  F0AE         	call	__sector_from_cluster	;wreg free
 14759  00F89A  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 14760  00F89E  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 14761                           
 14762                           ;fat16.c: 524: length = 512 - offset;
 14763  00F8A2  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 14764  00F8A6  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 14765  00F8AA  0100               	movlb	0	; () banked
 14766  00F8AC  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14767  00F8AE  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14768  00F8B0  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14769  00F8B2  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14770  00F8B4  0E00               	movlw	0
 14771  00F8B6  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14772  00F8B8  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 14773  00F8BA  0E02               	movlw	2
 14774  00F8BC  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14775  00F8BE  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;fat16.c: 525: if(length>number_of_bytes)
 14779  00F8C0  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14780  00F8C2  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14781  00F8C4  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14782  00F8C6  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14783  00F8C8  B0D8               	btfsc	status,0,c
 14784  00F8CA  D004               	goto	l3047
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;fat16.c: 526: {;fat16.c: 527: length = number_of_bytes;
 14788  00F8CC  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 14789  00F8D0  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 14790  00F8D4                     l3047:
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;fat16.c: 528: };fat16.c: 531: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 14794                           
 14795                           ; BSR set to: 0
 14796  00F8D4  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 14797  00F8D8  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 14798  00F8DC  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 14799  00F8E0  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 14800  00F8E4  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 14801  00F8E8  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 14802  00F8EC  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 14803  00F8EE  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 14804  00F8F0  6F85               	movwf	flash_partial_write@data& (0+255),b
 14805  00F8F2  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 14806  00F8F4  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 14807  00F8F6  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 14808  00F8F8  EC27  F0A1         	call	_flash_partial_write	;wreg free
 14809                           
 14810                           ;fat16.c: 534: position += length;
 14811  00F8FC  0100               	movlb	0	; () banked
 14812  00F8FE  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14813  00F900  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14814  00F902  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14815  00F904  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14816  00F906  0E00               	movlw	0
 14817  00F908  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14818  00F90A  0E00               	movlw	0
 14819  00F90C  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;fat16.c: 535: offset += length;
 14823  00F90E  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14824  00F910  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 14825  00F912  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14826  00F914  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 14827  00F916                     l3044:
 14828                           
 14829                           ; BSR set to: 0
 14830                           
 14831                           ; BSR set to: 0
 14832  00F916  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14833  00F918  6F95               	movwf	??_fat_append_to_file& (0+255),b
 14834  00F91A  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14835  00F91C  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 14836  00F91E  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 14837  00F920  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 14838  00F922  5195               	movf	??_fat_append_to_file& (0+255),w,b
 14839  00F924  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 14840  00F926  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 14841  00F928  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 14842  00F92A  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 14843  00F92C  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 14844  00F92E  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 14845  00F930  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 14846  00F932  A0D8               	btfss	status,0,c
 14847  00F934  D780               	goto	l3045
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;fat16.c: 536: };fat16.c: 540: root.fileSize += number_of_bytes;
 14851                           
 14852                           ; BSR set to: 0
 14853  00F936  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14854  00F938  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 14855  00F93A  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14856  00F93C  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 14857  00F93E  0E00               	movlw	0
 14858  00F940  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 14859  00F942  0E00               	movlw	0
 14860  00F944  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 14861                           
 14862                           ; BSR set to: 0
 14863                           ;fat16.c: 541: _update_modified_time(&root);
 14864  00F946  0EB0               	movlw	low fat_append_to_file@root
 14865  00F948  6F6D               	movwf	__update_modified_time@root& (0+255),b
 14866  00F94A  0E00               	movlw	high fat_append_to_file@root
 14867  00F94C  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 14868  00F94E  EC21  F0AA         	call	__update_modified_time	;wreg free
 14869                           
 14870                           ;fat16.c: 542: _write_root(file_number, &root);
 14871  00F952  0EB0               	movlw	low fat_append_to_file@root
 14872  00F954  0100               	movlb	0	; () banked
 14873  00F956  6F88               	movwf	__write_root@data& (0+255),b
 14874  00F958  0E00               	movlw	high fat_append_to_file@root
 14875  00F95A  6F89               	movwf	(__write_root@data+1)& (0+255),b
 14876  00F95C  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14877  00F95E  ECBB  F0A3         	call	__write_root
 14878  00F962  0012               	return	
 14879  00F964                     __end_of_fat_append_to_file:
 14880                           	opt stack 0
 14881                           tblptru	equ	0xFF8
 14882                           tblptrh	equ	0xFF7
 14883                           tblptrl	equ	0xFF6
 14884                           tablat	equ	0xFF5
 14885                           prodh	equ	0xFF4
 14886                           prodl	equ	0xFF3
 14887                           intcon	equ	0xFF2
 14888                           intcon2	equ	0xFF1
 14889                           intcon3	equ	0xFF0
 14890                           postinc0	equ	0xFEE
 14891                           wreg	equ	0xFE8
 14892                           postinc1	equ	0xFE6
 14893                           postdec1	equ	0xFE5
 14894                           plusw1	equ	0xFE3
 14895                           fsr1h	equ	0xFE2
 14896                           fsr1l	equ	0xFE1
 14897                           indf2	equ	0xFDF
 14898                           postinc2	equ	0xFDE
 14899                           postdec2	equ	0xFDD
 14900                           plusw2	equ	0xFDB
 14901                           fsr2h	equ	0xFDA
 14902                           fsr2l	equ	0xFD9
 14903                           status	equ	0xFD8
 14904                           
 14905 ;; *************** function __write_root *****************
 14906 ;; Defined at:
 14907 ;;		line 184 in file "fat16.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;  slot            1    wreg     unsigned char 
 14910 ;;  data            2   40[BANK0 ] PTR struct .
 14911 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  slot            1   47[BANK0 ] unsigned char 
 14914 ;;  offset          2   45[BANK0 ] unsigned int 
 14915 ;;  root_sector     2   43[BANK0 ] unsigned int 
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  1    wreg      void 
 14918 ;; Registers used:
 14919 ;;		wreg, status,2, status,0, cstack
 14920 ;; Tracked objects:
 14921 ;;		On entry : 0/0
 14922 ;;		On exit  : 0/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14925 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14926 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14928 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14929 ;;Total ram usage:        8 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:   15
 14932 ;; This function calls:
 14933 ;;		_flash_partial_write
 14934 ;; This function is called by:
 14935 ;;		_fat_create_file
 14936 ;;		_fat_append_to_file
 14937 ;;		_fat_rename_file
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941                           	psect	text62
 14942  014776                     __ptext62:
 14943                           	opt stack 0
 14944  014776                     __write_root:
 14945                           	opt stack 13
 14946                           
 14947                           ;incstack = 0
 14948                           ;__write_root@slot stored from wreg
 14949  014776  0100               	movlb	0	; () banked
 14950  014778  6F8F               	movwf	__write_root@slot& (0+255),b
 14951                           
 14952                           ;fat16.c: 186: uint16_t root_sector;;fat16.c: 187: uint16_t offset;;fat16.c: 188: root_s
      +                          ector = (slot >> 4) + 18;
 14953  01477A  C08F  F08A         	movff	__write_root@slot,??__write_root
 14954  01477E  0100               	movlb	0	; () banked
 14955  014780  3B8A               	swapf	??__write_root& (0+255),f,b
 14956  014782  0E0F               	movlw	15
 14957  014784  178A               	andwf	??__write_root& (0+255),f,b
 14958  014786  0E12               	movlw	18
 14959  014788  258A               	addwf	??__write_root& (0+255),w,b
 14960  01478A  6F8B               	movwf	__write_root@root_sector& (0+255),b
 14961  01478C  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 14962  01478E  0E00               	movlw	0
 14963  014790  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 14964                           
 14965                           ;fat16.c: 189: offset = (slot & 0b1111);
 14966  014792  C08F  F08A         	movff	__write_root@slot,??__write_root
 14967  014796  0E0F               	movlw	15
 14968  014798  178A               	andwf	??__write_root& (0+255),f,b
 14969  01479A  518A               	movf	??__write_root& (0+255),w,b
 14970  01479C  6F8D               	movwf	__write_root@offset& (0+255),b
 14971  01479E  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 14972                           
 14973                           ;fat16.c: 190: offset <<= 5;
 14974  0147A0  0E05               	movlw	5
 14975  0147A2                     u19045:
 14976  0147A2  90D8               	bcf	status,0,c
 14977  0147A4  378D               	rlcf	__write_root@offset& (0+255),f,b
 14978  0147A6  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 14979  0147A8  2EE8               	decfsz	wreg,f,c
 14980  0147AA  D7FB               	goto	u19045
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 14984  0147AC  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 14985  0147B0  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 14986  0147B4  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 14987  0147B8  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 14988  0147BC  0E00               	movlw	0
 14989  0147BE  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 14990  0147C0  0E20               	movlw	32
 14991  0147C2  6F83               	movwf	flash_partial_write@length& (0+255),b
 14992  0147C4  C088  F085         	movff	__write_root@data,flash_partial_write@data
 14993  0147C8  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 14994  0147CC  EC27  F0A1         	call	_flash_partial_write	;wreg free
 14995  0147D0  0012               	return		;funcret
 14996  0147D2                     __end_of__write_root:
 14997                           	opt stack 0
 14998                           tblptru	equ	0xFF8
 14999                           tblptrh	equ	0xFF7
 15000                           tblptrl	equ	0xFF6
 15001                           tablat	equ	0xFF5
 15002                           prodh	equ	0xFF4
 15003                           prodl	equ	0xFF3
 15004                           intcon	equ	0xFF2
 15005                           intcon2	equ	0xFF1
 15006                           intcon3	equ	0xFF0
 15007                           postinc0	equ	0xFEE
 15008                           wreg	equ	0xFE8
 15009                           postinc1	equ	0xFE6
 15010                           postdec1	equ	0xFE5
 15011                           plusw1	equ	0xFE3
 15012                           fsr1h	equ	0xFE2
 15013                           fsr1l	equ	0xFE1
 15014                           indf2	equ	0xFDF
 15015                           postinc2	equ	0xFDE
 15016                           postdec2	equ	0xFDD
 15017                           plusw2	equ	0xFDB
 15018                           fsr2h	equ	0xFDA
 15019                           fsr2l	equ	0xFD9
 15020                           status	equ	0xFD8
 15021                           
 15022 ;; *************** function __write_fat *****************
 15023 ;; Defined at:
 15024 ;;		line 160 in file "fat16.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;  cluster         2   40[BANK0 ] unsigned int 
 15027 ;;  value           2   42[BANK0 ] unsigned int 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  offset          2   46[BANK0 ] unsigned int 
 15030 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 15031 ;; Return value:  Size  Location     Type
 15032 ;;                  1    wreg      void 
 15033 ;; Registers used:
 15034 ;;		wreg, status,2, status,0, cstack
 15035 ;; Tracked objects:
 15036 ;;		On entry : 0/0
 15037 ;;		On exit  : 0/0
 15038 ;;		Unchanged: 0/0
 15039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15040 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15041 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15043 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15044 ;;Total ram usage:        8 bytes
 15045 ;; Hardware stack levels used:    1
 15046 ;; Hardware stack levels required when called:   15
 15047 ;; This function calls:
 15048 ;;		_flash_partial_write
 15049 ;; This function is called by:
 15050 ;;		_fat_create_file
 15051 ;;		_fat_append_to_file
 15052 ;;		_fat_delete_file
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           	psect	text63
 15057  01525A                     __ptext63:
 15058                           	opt stack 0
 15059  01525A                     __write_fat:
 15060                           	opt stack 13
 15061                           
 15062                           ;fat16.c: 162: uint16_t fat_sector;;fat16.c: 163: uint16_t offset;;fat16.c: 164: fat_sec
      +                          tor = cluster>>8;
 15063                           
 15064                           ;incstack = 0
 15065  01525A  0100               	movlb	0	; () banked
 15066  01525C  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 15067  01525E  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 15068  015260  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 15069                           
 15070                           ; BSR set to: 0
 15071                           ;fat16.c: 165: fat_sector += 2;
 15072  015262  0E02               	movlw	2
 15073  015264  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 15074  015266  0E00               	movlw	0
 15075  015268  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;fat16.c: 166: offset = cluster & 0xFF;
 15079  01526A  5188               	movf	__write_fat@cluster& (0+255),w,b
 15080  01526C  6F8E               	movwf	__write_fat@offset& (0+255),b
 15081  01526E  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 15082                           
 15083                           ; BSR set to: 0
 15084                           ;fat16.c: 167: offset <<= 1;
 15085  015270  90D8               	bcf	status,0,c
 15086  015272  378E               	rlcf	__write_fat@offset& (0+255),f,b
 15087  015274  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 15091  015276  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 15092  01527A  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 15093  01527E  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 15094  015282  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 15095  015286  0E00               	movlw	0
 15096  015288  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15097  01528A  0E02               	movlw	2
 15098  01528C  6F83               	movwf	flash_partial_write@length& (0+255),b
 15099  01528E  0E8A               	movlw	low __write_fat@value
 15100  015290  6F85               	movwf	flash_partial_write@data& (0+255),b
 15101  015292  0E00               	movlw	high __write_fat@value
 15102  015294  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15103  015296  EC27  F0A1         	call	_flash_partial_write	;wreg free
 15104  01529A  0012               	return		;funcret
 15105  01529C                     __end_of__write_fat:
 15106                           	opt stack 0
 15107                           tblptru	equ	0xFF8
 15108                           tblptrh	equ	0xFF7
 15109                           tblptrl	equ	0xFF6
 15110                           tablat	equ	0xFF5
 15111                           prodh	equ	0xFF4
 15112                           prodl	equ	0xFF3
 15113                           intcon	equ	0xFF2
 15114                           intcon2	equ	0xFF1
 15115                           intcon3	equ	0xFF0
 15116                           postinc0	equ	0xFEE
 15117                           wreg	equ	0xFE8
 15118                           postinc1	equ	0xFE6
 15119                           postdec1	equ	0xFE5
 15120                           plusw1	equ	0xFE3
 15121                           fsr1h	equ	0xFE2
 15122                           fsr1l	equ	0xFE1
 15123                           indf2	equ	0xFDF
 15124                           postinc2	equ	0xFDE
 15125                           postdec2	equ	0xFDD
 15126                           plusw2	equ	0xFDB
 15127                           fsr2h	equ	0xFDA
 15128                           fsr2l	equ	0xFD9
 15129                           status	equ	0xFD8
 15130                           
 15131 ;; *************** function _flash_partial_write *****************
 15132 ;; Defined at:
 15133 ;;		line 589 in file "flash.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;  page            2   31[BANK0 ] unsigned int 
 15136 ;;  start           2   33[BANK0 ] unsigned int 
 15137 ;;  length          2   35[BANK0 ] unsigned int 
 15138 ;;  data            2   37[BANK0 ] PTR unsigned char 
 15139 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 15140 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;  match           1   39[BANK0 ] enum E6858
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  1    wreg      void 
 15145 ;; Registers used:
 15146 ;;		wreg, status,2, status,0, cstack
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15152 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15155 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15156 ;;Total ram usage:        9 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:   14
 15159 ;; This function calls:
 15160 ;;		__flash_compare_page_to_buffer
 15161 ;;		__flash_copy_page_to_buffer
 15162 ;;		__flash_write_page_from_buffer
 15163 ;;		__flash_write_to_buffer
 15164 ;;		_flash_is_busy
 15165 ;; This function is called by:
 15166 ;;		__write_fat
 15167 ;;		__write_root
 15168 ;;		_fat_append_to_file
 15169 ;;		__delete_root
 15170 ;;		__write_file_size
 15171 ;; This function uses a non-reentrant model
 15172 ;;
 15173                           
 15174                           	psect	text64
 15175  01424E                     __ptext64:
 15176                           	opt stack 0
 15177  01424E                     _flash_partial_write:
 15178                           	opt stack 13
 15179                           
 15180                           ;flash.c: 591: flashMatchResult_t match;;flash.c: 594: while(flash_is_busy());
 15181                           
 15182                           ;incstack = 0
 15183  01424E  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 15184  014252  0900               	iorlw	0
 15185  014254  A4D8               	btfss	status,2,c
 15186  014256  D7FB               	goto	_flash_partial_write
 15187                           
 15188                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 15189  014258  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 15190  01425C  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 15191  014260  0E00               	movlw	0
 15192  014262  0100               	movlb	0	; () banked
 15193  014264  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 15194  014266  ECA1  F0A4         	call	__flash_copy_page_to_buffer	;wreg free
 15195                           
 15196                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 15197  01426A  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 15198  01426E  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 15199  014272  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 15200  014276  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 15201  01427A  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 15202  01427E  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 15203  014282  0E00               	movlw	0
 15204  014284  0100               	movlb	0	; () banked
 15205  014286  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 15206  014288  ECD6  F0A6         	call	__flash_write_to_buffer	;wreg free
 15207                           
 15208                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 15209  01428C  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 15210  014290  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 15211  014294  0E00               	movlw	0
 15212  014296  0100               	movlb	0	; () banked
 15213  014298  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 15214  01429A  EC17  F09F         	call	__flash_compare_page_to_buffer	;wreg free
 15215  01429E  0100               	movlb	0	; () banked
 15216  0142A0  6F87               	movwf	flash_partial_write@match& (0+255),b
 15217                           
 15218                           ; BSR set to: 0
 15219                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 15220  0142A2  0587               	decf	flash_partial_write@match& (0+255),w,b
 15221  0142A4  A4D8               	btfss	status,2,c
 15222  0142A6  0012               	return	
 15223                           
 15224                           ; BSR set to: 0
 15225                           ;flash.c: 607: {;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 15226  0142A8  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 15227  0142AC  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 15228  0142B0  0E00               	movlw	0
 15229  0142B2  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 15230  0142B4  EC28  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 15231  0142B8  0012               	return	
 15232  0142BA                     __end_of_flash_partial_write:
 15233                           	opt stack 0
 15234                           tblptru	equ	0xFF8
 15235                           tblptrh	equ	0xFF7
 15236                           tblptrl	equ	0xFF6
 15237                           tablat	equ	0xFF5
 15238                           prodh	equ	0xFF4
 15239                           prodl	equ	0xFF3
 15240                           intcon	equ	0xFF2
 15241                           intcon2	equ	0xFF1
 15242                           intcon3	equ	0xFF0
 15243                           postinc0	equ	0xFEE
 15244                           wreg	equ	0xFE8
 15245                           postinc1	equ	0xFE6
 15246                           postdec1	equ	0xFE5
 15247                           plusw1	equ	0xFE3
 15248                           fsr1h	equ	0xFE2
 15249                           fsr1l	equ	0xFE1
 15250                           indf2	equ	0xFDF
 15251                           postinc2	equ	0xFDE
 15252                           postdec2	equ	0xFDD
 15253                           plusw2	equ	0xFDB
 15254                           fsr2h	equ	0xFDA
 15255                           fsr2l	equ	0xFD9
 15256                           status	equ	0xFD8
 15257                           
 15258 ;; *************** function __flash_copy_page_to_buffer *****************
 15259 ;; Defined at:
 15260 ;;		line 315 in file "flash.c"
 15261 ;; Parameters:    Size  Location     Type
 15262 ;;  page            2   19[BANK0 ] unsigned int 
 15263 ;;  buffer          1   21[BANK0 ] enum E6854
 15264 ;; Auto vars:     Size  Location     Type
 15265 ;;  command         4   25[BANK0 ] unsigned char [4]
 15266 ;; Return value:  Size  Location     Type
 15267 ;;                  1    wreg      void 
 15268 ;; Registers used:
 15269 ;;		wreg, status,2, status,0, cstack
 15270 ;; Tracked objects:
 15271 ;;		On entry : 0/0
 15272 ;;		On exit  : 0/0
 15273 ;;		Unchanged: 0/0
 15274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15275 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15276 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15277 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15278 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15279 ;;Total ram usage:       10 bytes
 15280 ;; Hardware stack levels used:    1
 15281 ;; Hardware stack levels required when called:   13
 15282 ;; This function calls:
 15283 ;;		__flash_spi_tx
 15284 ;;		_flash_is_busy
 15285 ;; This function is called by:
 15286 ;;		_flash_partial_write
 15287 ;; This function uses a non-reentrant model
 15288 ;;
 15289                           
 15290                           	psect	text65
 15291  014942                     __ptext65:
 15292                           	opt stack 0
 15293  014942                     __flash_copy_page_to_buffer:
 15294                           	opt stack 13
 15295                           
 15296                           ;flash.c: 317: uint8_t command[4];;flash.c: 320: while(flash_is_busy());
 15297                           
 15298                           ;incstack = 0
 15299  014942  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 15300  014946  0900               	iorlw	0
 15301  014948  A4D8               	btfss	status,2,c
 15302  01494A  D7FB               	goto	__flash_copy_page_to_buffer
 15303                           
 15304                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 15305  01494C  0100               	movlb	0	; () banked
 15306  01494E  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15307  014950  A4D8               	btfss	status,2,c
 15308  014952  D002               	goto	l2795
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;flash.c: 324: command[0] = 0x53;
 15312  014954  0E53               	movlw	83
 15313  014956  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15314  014958                     l2795:
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 15318                           
 15319                           ; BSR set to: 0
 15320  014958  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15321  01495A  A4D8               	btfss	status,2,c
 15322  01495C  D002               	goto	l2796
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;flash.c: 326: command[0] = 0x55;
 15326  01495E  0E55               	movlw	85
 15327  014960  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15328  014962                     l2796:
 15329                           
 15330                           ; BSR set to: 0
 15331                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 15332                           
 15333                           ; BSR set to: 0
 15334  014962  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 15335  014966  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 15336  01496A  0E07               	movlw	7
 15337  01496C  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 15338  01496E                     u17945:
 15339  01496E  90D8               	bcf	status,0,c
 15340  014970  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 15341  014972  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 15342  014974  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 15343  014976  D7FB               	goto	u17945
 15344  014978  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 15345  01497A  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 15346                           
 15347                           ; BSR set to: 0
 15348                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 15349  01497C  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15350  01497E  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15351  014980  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 15352                           
 15353                           ;flash.c: 330: command[3] = 0x00;
 15354  014982  0E00               	movlw	0
 15355  014984  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;flash.c: 333: _flash_spi_tx(command, 4);
 15359  014986  0E79               	movlw	low __flash_copy_page_to_buffer@command
 15360  014988  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 15361  01498A  0E00               	movlw	high __flash_copy_page_to_buffer@command
 15362  01498C  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 15363  01498E  0E00               	movlw	0
 15364  014990  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 15365  014992  0E04               	movlw	4
 15366  014994  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 15367  014996  EC55  F0A5         	call	__flash_spi_tx	;wreg free
 15368  01499A  0012               	return		;funcret
 15369  01499C                     __end_of__flash_copy_page_to_buffer:
 15370                           	opt stack 0
 15371                           tblptru	equ	0xFF8
 15372                           tblptrh	equ	0xFF7
 15373                           tblptrl	equ	0xFF6
 15374                           tablat	equ	0xFF5
 15375                           prodh	equ	0xFF4
 15376                           prodl	equ	0xFF3
 15377                           intcon	equ	0xFF2
 15378                           intcon2	equ	0xFF1
 15379                           intcon3	equ	0xFF0
 15380                           postinc0	equ	0xFEE
 15381                           wreg	equ	0xFE8
 15382                           postinc1	equ	0xFE6
 15383                           postdec1	equ	0xFE5
 15384                           plusw1	equ	0xFE3
 15385                           fsr1h	equ	0xFE2
 15386                           fsr1l	equ	0xFE1
 15387                           indf2	equ	0xFDF
 15388                           postinc2	equ	0xFDE
 15389                           postdec2	equ	0xFDD
 15390                           plusw2	equ	0xFDB
 15391                           fsr2h	equ	0xFDA
 15392                           fsr2l	equ	0xFD9
 15393                           status	equ	0xFD8
 15394                           
 15395 ;; *************** function __update_modified_time *****************
 15396 ;; Defined at:
 15397 ;;		line 55 in file "fat16.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;  root            2   13[BANK0 ] PTR struct .
 15400 ;;		 -> fat_append_to_file@root(32), 
 15401 ;; Auto vars:     Size  Location     Type
 15402 ;;		None
 15403 ;; Return value:  Size  Location     Type
 15404 ;;                  1    wreg      void 
 15405 ;; Registers used:
 15406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15407 ;; Tracked objects:
 15408 ;;		On entry : 0/0
 15409 ;;		On exit  : 0/0
 15410 ;;		Unchanged: 0/0
 15411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15416 ;;Total ram usage:        2 bytes
 15417 ;; Hardware stack levels used:    1
 15418 ;; Hardware stack levels required when called:   13
 15419 ;; This function calls:
 15420 ;;		__get_date
 15421 ;;		__get_time
 15422 ;; This function is called by:
 15423 ;;		_fat_append_to_file
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text66
 15428  015442                     __ptext66:
 15429                           	opt stack 0
 15430  015442                     __update_modified_time:
 15431                           	opt stack 15
 15432                           
 15433                           ;fat16.c: 57: root->modifiedDate = _get_date();
 15434                           
 15435                           ;incstack = 0
 15436  015442  EC2F  F0A2         	call	__get_date	;wreg free
 15437  015446  0100               	movlb	0	; () banked
 15438  015448  EE20 F018          	lfsr	2,24
 15439  01544C  516D               	movf	__update_modified_time@root& (0+255),w,b
 15440  01544E  26D9               	addwf	fsr2l,f,c
 15441  015450  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15442  015452  22DA               	addwfc	fsr2h,f,c
 15443  015454  C064  FFDE         	movff	?__get_date,postinc2
 15444  015458  C065  FFDD         	movff	?__get_date+1,postdec2
 15445                           
 15446                           ;fat16.c: 58: root->modifiedTime = _get_time();
 15447  01545C  EC5D  F0A1         	call	__get_time	;wreg free
 15448  015460  0100               	movlb	0	; () banked
 15449  015462  EE20 F016          	lfsr	2,22
 15450  015466  516D               	movf	__update_modified_time@root& (0+255),w,b
 15451  015468  26D9               	addwf	fsr2l,f,c
 15452  01546A  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15453  01546C  22DA               	addwfc	fsr2h,f,c
 15454  01546E  C064  FFDE         	movff	?__get_time,postinc2
 15455  015472  C065  FFDD         	movff	?__get_time+1,postdec2
 15456                           
 15457                           ; BSR set to: 0
 15458  015476  0012               	return		;funcret
 15459  015478                     __end_of__update_modified_time:
 15460                           	opt stack 0
 15461                           tblptru	equ	0xFF8
 15462                           tblptrh	equ	0xFF7
 15463                           tblptrl	equ	0xFF6
 15464                           tablat	equ	0xFF5
 15465                           prodh	equ	0xFF4
 15466                           prodl	equ	0xFF3
 15467                           intcon	equ	0xFF2
 15468                           intcon2	equ	0xFF1
 15469                           intcon3	equ	0xFF0
 15470                           postinc0	equ	0xFEE
 15471                           wreg	equ	0xFE8
 15472                           postinc1	equ	0xFE6
 15473                           postdec1	equ	0xFE5
 15474                           plusw1	equ	0xFE3
 15475                           fsr1h	equ	0xFE2
 15476                           fsr1l	equ	0xFE1
 15477                           indf2	equ	0xFDF
 15478                           postinc2	equ	0xFDE
 15479                           postdec2	equ	0xFDD
 15480                           plusw2	equ	0xFDB
 15481                           fsr2h	equ	0xFDA
 15482                           fsr2l	equ	0xFD9
 15483                           status	equ	0xFD8
 15484                           
 15485 ;; *************** function __get_time *****************
 15486 ;; Defined at:
 15487 ;;		line 31 in file "fat16.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;		None
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;  time            2   11[BANK0 ] unsigned int 
 15492 ;;  seconds         1   10[BANK0 ] unsigned char 
 15493 ;;  minutes         1    9[BANK0 ] unsigned char 
 15494 ;;  hours           1    8[BANK0 ] unsigned char 
 15495 ;; Return value:  Size  Location     Type
 15496 ;;                  2    4[BANK0 ] unsigned int 
 15497 ;; Registers used:
 15498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15505 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15507 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15508 ;;Total ram usage:        9 bytes
 15509 ;; Hardware stack levels used:    1
 15510 ;; Hardware stack levels required when called:   12
 15511 ;; This function calls:
 15512 ;;		_rtcc_get_hours_decimal
 15513 ;;		_rtcc_get_minutes_decimal
 15514 ;;		_rtcc_get_seconds_decimal
 15515 ;; This function is called by:
 15516 ;;		__update_modified_time
 15517 ;;		_fat_create_file
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text67
 15522  0142BA                     __ptext67:
 15523                           	opt stack 0
 15524  0142BA                     __get_time:
 15525                           	opt stack 16
 15526                           
 15527                           ;fat16.c: 33: uint16_t time;;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;incstack = 0
 15531  0142BA  ECCA  F0AE         	call	_rtcc_get_hours_decimal	;wreg free
 15532  0142BE  0100               	movlb	0	; () banked
 15533  0142C0  6F68               	movwf	__get_time@hours& (0+255),b
 15534                           
 15535                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 15536  0142C2  ECC2  F0AE         	call	_rtcc_get_minutes_decimal	;wreg free
 15537  0142C6  0100               	movlb	0	; () banked
 15538  0142C8  6F69               	movwf	__get_time@minutes& (0+255),b
 15539                           
 15540                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 15541  0142CA  ECF2  F0AE         	call	_rtcc_get_seconds_decimal	;wreg free
 15542  0142CE  0100               	movlb	0	; () banked
 15543  0142D0  6F6A               	movwf	__get_time@seconds& (0+255),b
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 15547  0142D2  5168               	movf	__get_time@hours& (0+255),w,b
 15548  0142D4  0B1F               	andlw	31
 15549  0142D6  6F66               	movwf	??__get_time& (0+255),b
 15550  0142D8  6B67               	clrf	(??__get_time+1)& (0+255),b
 15551  0142DA  0E0B               	movlw	11
 15552  0142DC                     u18215:
 15553  0142DC  90D8               	bcf	status,0,c
 15554  0142DE  3766               	rlcf	??__get_time& (0+255),f,b
 15555  0142E0  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15556  0142E2  2EE8               	decfsz	wreg,f,c
 15557  0142E4  D7FB               	goto	u18215
 15558  0142E6  C066  F06B         	movff	??__get_time,__get_time@time
 15559  0142EA  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 15560                           
 15561                           ; BSR set to: 0
 15562                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 15563  0142EE  5169               	movf	__get_time@minutes& (0+255),w,b
 15564  0142F0  0B3F               	andlw	63
 15565  0142F2  6F66               	movwf	??__get_time& (0+255),b
 15566  0142F4  6B67               	clrf	(??__get_time+1)& (0+255),b
 15567  0142F6  0E05               	movlw	5
 15568  0142F8                     u18225:
 15569  0142F8  90D8               	bcf	status,0,c
 15570  0142FA  3766               	rlcf	??__get_time& (0+255),f,b
 15571  0142FC  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15572  0142FE  2EE8               	decfsz	wreg,f,c
 15573  014300  D7FB               	goto	u18225
 15574  014302  5166               	movf	??__get_time& (0+255),w,b
 15575  014304  136B               	iorwf	__get_time@time& (0+255),f,b
 15576  014306  5167               	movf	(??__get_time+1)& (0+255),w,b
 15577  014308  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 15581  01430A  C06A  F066         	movff	__get_time@seconds,??__get_time
 15582  01430E  90D8               	bcf	status,0,c
 15583  014310  3366               	rrcf	??__get_time& (0+255),f,b
 15584  014312  0E1F               	movlw	31
 15585  014314  1766               	andwf	??__get_time& (0+255),f,b
 15586  014316  5166               	movf	??__get_time& (0+255),w,b
 15587  014318  136B               	iorwf	__get_time@time& (0+255),f,b
 15588                           
 15589                           ; BSR set to: 0
 15590                           ;fat16.c: 40: return time;
 15591  01431A  C06B  F064         	movff	__get_time@time,?__get_time
 15592  01431E  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 15593  014322  0012               	return	
 15594  014324                     __end_of__get_time:
 15595                           	opt stack 0
 15596                           tblptru	equ	0xFF8
 15597                           tblptrh	equ	0xFF7
 15598                           tblptrl	equ	0xFF6
 15599                           tablat	equ	0xFF5
 15600                           prodh	equ	0xFF4
 15601                           prodl	equ	0xFF3
 15602                           intcon	equ	0xFF2
 15603                           intcon2	equ	0xFF1
 15604                           intcon3	equ	0xFF0
 15605                           postinc0	equ	0xFEE
 15606                           wreg	equ	0xFE8
 15607                           postinc1	equ	0xFE6
 15608                           postdec1	equ	0xFE5
 15609                           plusw1	equ	0xFE3
 15610                           fsr1h	equ	0xFE2
 15611                           fsr1l	equ	0xFE1
 15612                           indf2	equ	0xFDF
 15613                           postinc2	equ	0xFDE
 15614                           postdec2	equ	0xFDD
 15615                           plusw2	equ	0xFDB
 15616                           fsr2h	equ	0xFDA
 15617                           fsr2l	equ	0xFD9
 15618                           status	equ	0xFD8
 15619                           
 15620 ;; *************** function _rtcc_get_minutes_decimal *****************
 15621 ;; Defined at:
 15622 ;;		line 287 in file "rtcc.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;		None
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      unsigned char 
 15629 ;; Registers used:
 15630 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15640 ;;Total ram usage:        1 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; Hardware stack levels required when called:   11
 15643 ;; This function calls:
 15644 ;;		__rtcc_bcd_to_decimal
 15645 ;;		_rtcc_get_minutes
 15646 ;; This function is called by:
 15647 ;;		__get_time
 15648 ;;		__get_dateTime
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           	psect	text68
 15653  015D84                     __ptext68:
 15654                           	opt stack 0
 15655  015D84                     _rtcc_get_minutes_decimal:
 15656                           	opt stack 16
 15657                           
 15658                           ;rtcc.c: 289: uint8_t bcd_minutes = rtcc_get_minutes();
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;incstack = 0
 15662  015D84  EC1E  F0AF         	call	_rtcc_get_minutes	;wreg free
 15663  015D88  0100               	movlb	0	; () banked
 15664  015D8A  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 15665                           
 15666                           ; BSR set to: 0
 15667                           ;rtcc.c: 290: return _rtcc_bcd_to_decimal(bcd_minutes);
 15668  015D8C  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 15669  015D8E  ECB0  F0AD         	call	__rtcc_bcd_to_decimal
 15670  015D92  0012               	return	
 15671  015D94                     __end_of_rtcc_get_minutes_decimal:
 15672                           	opt stack 0
 15673                           tblptru	equ	0xFF8
 15674                           tblptrh	equ	0xFF7
 15675                           tblptrl	equ	0xFF6
 15676                           tablat	equ	0xFF5
 15677                           prodh	equ	0xFF4
 15678                           prodl	equ	0xFF3
 15679                           intcon	equ	0xFF2
 15680                           intcon2	equ	0xFF1
 15681                           intcon3	equ	0xFF0
 15682                           postinc0	equ	0xFEE
 15683                           wreg	equ	0xFE8
 15684                           postinc1	equ	0xFE6
 15685                           postdec1	equ	0xFE5
 15686                           plusw1	equ	0xFE3
 15687                           fsr1h	equ	0xFE2
 15688                           fsr1l	equ	0xFE1
 15689                           indf2	equ	0xFDF
 15690                           postinc2	equ	0xFDE
 15691                           postdec2	equ	0xFDD
 15692                           plusw2	equ	0xFDB
 15693                           fsr2h	equ	0xFDA
 15694                           fsr2l	equ	0xFD9
 15695                           status	equ	0xFD8
 15696                           
 15697 ;; *************** function _rtcc_get_hours_decimal *****************
 15698 ;; Defined at:
 15699 ;;		line 249 in file "rtcc.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;		None
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 15704 ;; Return value:  Size  Location     Type
 15705 ;;                  1    wreg      unsigned char 
 15706 ;; Registers used:
 15707 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15708 ;; Tracked objects:
 15709 ;;		On entry : 0/0
 15710 ;;		On exit  : 0/0
 15711 ;;		Unchanged: 0/0
 15712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15717 ;;Total ram usage:        1 bytes
 15718 ;; Hardware stack levels used:    1
 15719 ;; Hardware stack levels required when called:   11
 15720 ;; This function calls:
 15721 ;;		__rtcc_bcd_to_decimal
 15722 ;;		_rtcc_get_hours
 15723 ;; This function is called by:
 15724 ;;		__get_time
 15725 ;;		__get_dateTime
 15726 ;; This function uses a non-reentrant model
 15727 ;;
 15728                           
 15729                           	psect	text69
 15730  015D94                     __ptext69:
 15731                           	opt stack 0
 15732  015D94                     _rtcc_get_hours_decimal:
 15733                           	opt stack 16
 15734                           
 15735                           ;rtcc.c: 251: uint8_t bcd_hours = rtcc_get_hours();
 15736                           
 15737                           ;incstack = 0
 15738  015D94  EC25  F0AF         	call	_rtcc_get_hours	;wreg free
 15739  015D98  0100               	movlb	0	; () banked
 15740  015D9A  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 15741                           
 15742                           ; BSR set to: 0
 15743                           ;rtcc.c: 252: return _rtcc_bcd_to_decimal(bcd_hours);
 15744  015D9C  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 15745  015D9E  ECB0  F0AD         	call	__rtcc_bcd_to_decimal
 15746  015DA2  0012               	return	
 15747  015DA4                     __end_of_rtcc_get_hours_decimal:
 15748                           	opt stack 0
 15749                           tblptru	equ	0xFF8
 15750                           tblptrh	equ	0xFF7
 15751                           tblptrl	equ	0xFF6
 15752                           tablat	equ	0xFF5
 15753                           prodh	equ	0xFF4
 15754                           prodl	equ	0xFF3
 15755                           intcon	equ	0xFF2
 15756                           intcon2	equ	0xFF1
 15757                           intcon3	equ	0xFF0
 15758                           postinc0	equ	0xFEE
 15759                           wreg	equ	0xFE8
 15760                           postinc1	equ	0xFE6
 15761                           postdec1	equ	0xFE5
 15762                           plusw1	equ	0xFE3
 15763                           fsr1h	equ	0xFE2
 15764                           fsr1l	equ	0xFE1
 15765                           indf2	equ	0xFDF
 15766                           postinc2	equ	0xFDE
 15767                           postdec2	equ	0xFDD
 15768                           plusw2	equ	0xFDB
 15769                           fsr2h	equ	0xFDA
 15770                           fsr2l	equ	0xFD9
 15771                           status	equ	0xFD8
 15772                           
 15773 ;; *************** function __get_date *****************
 15774 ;; Defined at:
 15775 ;;		line 43 in file "fat16.c"
 15776 ;; Parameters:    Size  Location     Type
 15777 ;;		None
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;  date            2   11[BANK0 ] unsigned int 
 15780 ;;  day             1   10[BANK0 ] unsigned char 
 15781 ;;  month           1    9[BANK0 ] unsigned char 
 15782 ;;  year            1    8[BANK0 ] unsigned char 
 15783 ;; Return value:  Size  Location     Type
 15784 ;;                  2    4[BANK0 ] unsigned int 
 15785 ;; Registers used:
 15786 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15787 ;; Tracked objects:
 15788 ;;		On entry : 0/0
 15789 ;;		On exit  : 0/0
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15793 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15795 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15796 ;;Total ram usage:        9 bytes
 15797 ;; Hardware stack levels used:    1
 15798 ;; Hardware stack levels required when called:   12
 15799 ;; This function calls:
 15800 ;;		_rtcc_get_day_decimal
 15801 ;;		_rtcc_get_month_decimal
 15802 ;;		_rtcc_get_year_decimal
 15803 ;; This function is called by:
 15804 ;;		__update_modified_time
 15805 ;;		_fat_create_file
 15806 ;; This function uses a non-reentrant model
 15807 ;;
 15808                           
 15809                           	psect	text70
 15810  01445E                     __ptext70:
 15811                           	opt stack 0
 15812  01445E                     __get_date:
 15813                           	opt stack 16
 15814                           
 15815                           ;fat16.c: 45: uint16_t date;;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 15816                           
 15817                           ;incstack = 0
 15818  01445E  ECD2  F0AE         	call	_rtcc_get_year_decimal	;wreg free
 15819  014462  0100               	movlb	0	; () banked
 15820  014464  6F68               	movwf	__get_date@year& (0+255),b
 15821                           
 15822                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 15823  014466  ECDA  F0AE         	call	_rtcc_get_month_decimal	;wreg free
 15824  01446A  0100               	movlb	0	; () banked
 15825  01446C  6F69               	movwf	__get_date@month& (0+255),b
 15826                           
 15827                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 15828  01446E  ECE2  F0AE         	call	_rtcc_get_day_decimal	;wreg free
 15829  014472  0100               	movlb	0	; () banked
 15830  014474  6F6A               	movwf	__get_date@day& (0+255),b
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 15834  014476  5168               	movf	__get_date@year& (0+255),w,b
 15835  014478  0F14               	addlw	20
 15836  01447A  0B7F               	andlw	127
 15837  01447C  6F66               	movwf	??__get_date& (0+255),b
 15838  01447E  6B67               	clrf	(??__get_date+1)& (0+255),b
 15839  014480  0E09               	movlw	9
 15840  014482                     u18235:
 15841  014482  90D8               	bcf	status,0,c
 15842  014484  3766               	rlcf	??__get_date& (0+255),f,b
 15843  014486  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 15844  014488  2EE8               	decfsz	wreg,f,c
 15845  01448A  D7FB               	goto	u18235
 15846  01448C  C066  F06B         	movff	??__get_date,__get_date@date
 15847  014490  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 15848                           
 15849                           ; BSR set to: 0
 15850                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 15851  014494  5169               	movf	__get_date@month& (0+255),w,b
 15852  014496  0B0F               	andlw	15
 15853  014498  6F66               	movwf	??__get_date& (0+255),b
 15854  01449A  6B67               	clrf	(??__get_date+1)& (0+255),b
 15855  01449C  0E05               	movlw	5
 15856  01449E                     u18245:
 15857  01449E  90D8               	bcf	status,0,c
 15858  0144A0  3766               	rlcf	??__get_date& (0+255),f,b
 15859  0144A2  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 15860  0144A4  2EE8               	decfsz	wreg,f,c
 15861  0144A6  D7FB               	goto	u18245
 15862  0144A8  5166               	movf	??__get_date& (0+255),w,b
 15863  0144AA  136B               	iorwf	__get_date@date& (0+255),f,b
 15864  0144AC  5167               	movf	(??__get_date+1)& (0+255),w,b
 15865  0144AE  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;fat16.c: 51: date |= (day&0b11111);
 15869  0144B0  C06A  F066         	movff	__get_date@day,??__get_date
 15870  0144B4  0E1F               	movlw	31
 15871  0144B6  1766               	andwf	??__get_date& (0+255),f,b
 15872  0144B8  5166               	movf	??__get_date& (0+255),w,b
 15873  0144BA  136B               	iorwf	__get_date@date& (0+255),f,b
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;fat16.c: 52: return date;
 15877  0144BC  C06B  F064         	movff	__get_date@date,?__get_date
 15878  0144C0  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 15879  0144C4  0012               	return	
 15880  0144C6                     __end_of__get_date:
 15881                           	opt stack 0
 15882                           tblptru	equ	0xFF8
 15883                           tblptrh	equ	0xFF7
 15884                           tblptrl	equ	0xFF6
 15885                           tablat	equ	0xFF5
 15886                           prodh	equ	0xFF4
 15887                           prodl	equ	0xFF3
 15888                           intcon	equ	0xFF2
 15889                           intcon2	equ	0xFF1
 15890                           intcon3	equ	0xFF0
 15891                           postinc0	equ	0xFEE
 15892                           wreg	equ	0xFE8
 15893                           postinc1	equ	0xFE6
 15894                           postdec1	equ	0xFE5
 15895                           plusw1	equ	0xFE3
 15896                           fsr1h	equ	0xFE2
 15897                           fsr1l	equ	0xFE1
 15898                           indf2	equ	0xFDF
 15899                           postinc2	equ	0xFDE
 15900                           postdec2	equ	0xFDD
 15901                           plusw2	equ	0xFDB
 15902                           fsr2h	equ	0xFDA
 15903                           fsr2l	equ	0xFD9
 15904                           status	equ	0xFD8
 15905                           
 15906 ;; *************** function _rtcc_get_year_decimal *****************
 15907 ;; Defined at:
 15908 ;;		line 135 in file "rtcc.c"
 15909 ;; Parameters:    Size  Location     Type
 15910 ;;		None
 15911 ;; Auto vars:     Size  Location     Type
 15912 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 15913 ;; Return value:  Size  Location     Type
 15914 ;;                  1    wreg      unsigned char 
 15915 ;; Registers used:
 15916 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15917 ;; Tracked objects:
 15918 ;;		On entry : 0/0
 15919 ;;		On exit  : 0/0
 15920 ;;		Unchanged: 0/0
 15921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15926 ;;Total ram usage:        1 bytes
 15927 ;; Hardware stack levels used:    1
 15928 ;; Hardware stack levels required when called:   11
 15929 ;; This function calls:
 15930 ;;		__rtcc_bcd_to_decimal
 15931 ;;		_rtcc_get_year
 15932 ;; This function is called by:
 15933 ;;		__get_date
 15934 ;;		__get_dateTime
 15935 ;; This function uses a non-reentrant model
 15936 ;;
 15937                           
 15938                           	psect	text71
 15939  015DA4                     __ptext71:
 15940                           	opt stack 0
 15941  015DA4                     _rtcc_get_year_decimal:
 15942                           	opt stack 16
 15943                           
 15944                           ;rtcc.c: 137: uint8_t bcd_year = rtcc_get_year();
 15945                           
 15946                           ; BSR set to: 0
 15947                           ;incstack = 0
 15948  015DA4  EC09  F0AF         	call	_rtcc_get_year	;wreg free
 15949  015DA8  0100               	movlb	0	; () banked
 15950  015DAA  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;rtcc.c: 138: return _rtcc_bcd_to_decimal(bcd_year);
 15954  015DAC  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 15955  015DAE  ECB0  F0AD         	call	__rtcc_bcd_to_decimal
 15956  015DB2  0012               	return	
 15957  015DB4                     __end_of_rtcc_get_year_decimal:
 15958                           	opt stack 0
 15959                           tblptru	equ	0xFF8
 15960                           tblptrh	equ	0xFF7
 15961                           tblptrl	equ	0xFF6
 15962                           tablat	equ	0xFF5
 15963                           prodh	equ	0xFF4
 15964                           prodl	equ	0xFF3
 15965                           intcon	equ	0xFF2
 15966                           intcon2	equ	0xFF1
 15967                           intcon3	equ	0xFF0
 15968                           postinc0	equ	0xFEE
 15969                           wreg	equ	0xFE8
 15970                           postinc1	equ	0xFE6
 15971                           postdec1	equ	0xFE5
 15972                           plusw1	equ	0xFE3
 15973                           fsr1h	equ	0xFE2
 15974                           fsr1l	equ	0xFE1
 15975                           indf2	equ	0xFDF
 15976                           postinc2	equ	0xFDE
 15977                           postdec2	equ	0xFDD
 15978                           plusw2	equ	0xFDB
 15979                           fsr2h	equ	0xFDA
 15980                           fsr2l	equ	0xFD9
 15981                           status	equ	0xFD8
 15982                           
 15983 ;; *************** function _rtcc_get_month_decimal *****************
 15984 ;; Defined at:
 15985 ;;		line 173 in file "rtcc.c"
 15986 ;; Parameters:    Size  Location     Type
 15987 ;;		None
 15988 ;; Auto vars:     Size  Location     Type
 15989 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 15990 ;; Return value:  Size  Location     Type
 15991 ;;                  1    wreg      unsigned char 
 15992 ;; Registers used:
 15993 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15994 ;; Tracked objects:
 15995 ;;		On entry : 0/0
 15996 ;;		On exit  : 0/0
 15997 ;;		Unchanged: 0/0
 15998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16003 ;;Total ram usage:        1 bytes
 16004 ;; Hardware stack levels used:    1
 16005 ;; Hardware stack levels required when called:   11
 16006 ;; This function calls:
 16007 ;;		__rtcc_bcd_to_decimal
 16008 ;;		_rtcc_get_month
 16009 ;; This function is called by:
 16010 ;;		__get_date
 16011 ;;		__get_dateTime
 16012 ;; This function uses a non-reentrant model
 16013 ;;
 16014                           
 16015                           	psect	text72
 16016  015DB4                     __ptext72:
 16017                           	opt stack 0
 16018  015DB4                     _rtcc_get_month_decimal:
 16019                           	opt stack 16
 16020                           
 16021                           ;rtcc.c: 175: uint8_t bcd_month = rtcc_get_month();
 16022                           
 16023                           ;incstack = 0
 16024  015DB4  EC17  F0AF         	call	_rtcc_get_month	;wreg free
 16025  015DB8  0100               	movlb	0	; () banked
 16026  015DBA  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 16027                           
 16028                           ; BSR set to: 0
 16029                           ;rtcc.c: 176: return _rtcc_bcd_to_decimal(bcd_month);
 16030  015DBC  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 16031  015DBE  ECB0  F0AD         	call	__rtcc_bcd_to_decimal
 16032  015DC2  0012               	return	
 16033  015DC4                     __end_of_rtcc_get_month_decimal:
 16034                           	opt stack 0
 16035                           tblptru	equ	0xFF8
 16036                           tblptrh	equ	0xFF7
 16037                           tblptrl	equ	0xFF6
 16038                           tablat	equ	0xFF5
 16039                           prodh	equ	0xFF4
 16040                           prodl	equ	0xFF3
 16041                           intcon	equ	0xFF2
 16042                           intcon2	equ	0xFF1
 16043                           intcon3	equ	0xFF0
 16044                           postinc0	equ	0xFEE
 16045                           wreg	equ	0xFE8
 16046                           postinc1	equ	0xFE6
 16047                           postdec1	equ	0xFE5
 16048                           plusw1	equ	0xFE3
 16049                           fsr1h	equ	0xFE2
 16050                           fsr1l	equ	0xFE1
 16051                           indf2	equ	0xFDF
 16052                           postinc2	equ	0xFDE
 16053                           postdec2	equ	0xFDD
 16054                           plusw2	equ	0xFDB
 16055                           fsr2h	equ	0xFDA
 16056                           fsr2l	equ	0xFD9
 16057                           status	equ	0xFD8
 16058                           
 16059 ;; *************** function _rtcc_get_day_decimal *****************
 16060 ;; Defined at:
 16061 ;;		line 211 in file "rtcc.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      unsigned char 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16079 ;;Total ram usage:        1 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:   11
 16082 ;; This function calls:
 16083 ;;		__rtcc_bcd_to_decimal
 16084 ;;		_rtcc_get_day
 16085 ;; This function is called by:
 16086 ;;		__get_date
 16087 ;;		__get_dateTime
 16088 ;; This function uses a non-reentrant model
 16089 ;;
 16090                           
 16091                           	psect	text73
 16092  015DC4                     __ptext73:
 16093                           	opt stack 0
 16094  015DC4                     _rtcc_get_day_decimal:
 16095                           	opt stack 16
 16096                           
 16097                           ;rtcc.c: 213: uint8_t bcd_day = rtcc_get_day();
 16098                           
 16099                           ;incstack = 0
 16100  015DC4  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
 16101  015DC8  0100               	movlb	0	; () banked
 16102  015DCA  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 16103                           
 16104                           ; BSR set to: 0
 16105                           ;rtcc.c: 214: return _rtcc_bcd_to_decimal(bcd_day);
 16106  015DCC  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 16107  015DCE  ECB0  F0AD         	call	__rtcc_bcd_to_decimal
 16108  015DD2  0012               	return	
 16109  015DD4                     __end_of_rtcc_get_day_decimal:
 16110                           	opt stack 0
 16111                           tblptru	equ	0xFF8
 16112                           tblptrh	equ	0xFF7
 16113                           tblptrl	equ	0xFF6
 16114                           tablat	equ	0xFF5
 16115                           prodh	equ	0xFF4
 16116                           prodl	equ	0xFF3
 16117                           intcon	equ	0xFF2
 16118                           intcon2	equ	0xFF1
 16119                           intcon3	equ	0xFF0
 16120                           postinc0	equ	0xFEE
 16121                           wreg	equ	0xFE8
 16122                           postinc1	equ	0xFE6
 16123                           postdec1	equ	0xFE5
 16124                           plusw1	equ	0xFE3
 16125                           fsr1h	equ	0xFE2
 16126                           fsr1l	equ	0xFE1
 16127                           indf2	equ	0xFDF
 16128                           postinc2	equ	0xFDE
 16129                           postdec2	equ	0xFDD
 16130                           plusw2	equ	0xFDB
 16131                           fsr2h	equ	0xFDA
 16132                           fsr2l	equ	0xFD9
 16133                           status	equ	0xFD8
 16134                           
 16135 ;; *************** function __sector_from_cluster *****************
 16136 ;; Defined at:
 16137 ;;		line 455 in file "fat16.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  2    0[BANK0 ] unsigned int 
 16144 ;; Registers used:
 16145 ;;		wreg, status,2, status,0
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16154 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16155 ;;Total ram usage:        2 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:   10
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_fat_append_to_file
 16162 ;;		_fat_read_from_file
 16163 ;; This function uses a non-reentrant model
 16164 ;;
 16165                           
 16166                           	psect	text74
 16167  015DD4                     __ptext74:
 16168                           	opt stack 0
 16169  015DD4                     __sector_from_cluster:
 16170                           	opt stack 18
 16171                           
 16172                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 16173                           
 16174                           ;incstack = 0
 16175  015DD4  0E14               	movlw	20
 16176  015DD6  0100               	movlb	0	; () banked
 16177  015DD8  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 16178  015DDA  6F60               	movwf	?__sector_from_cluster& (0+255),b
 16179  015DDC  0E00               	movlw	0
 16180  015DDE  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16181  015DE0  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 16182  015DE2  0012               	return	
 16183  015DE4                     __end_of__sector_from_cluster:
 16184                           	opt stack 0
 16185                           tblptru	equ	0xFF8
 16186                           tblptrh	equ	0xFF7
 16187                           tblptrl	equ	0xFF6
 16188                           tablat	equ	0xFF5
 16189                           prodh	equ	0xFF4
 16190                           prodl	equ	0xFF3
 16191                           intcon	equ	0xFF2
 16192                           intcon2	equ	0xFF1
 16193                           intcon3	equ	0xFF0
 16194                           postinc0	equ	0xFEE
 16195                           wreg	equ	0xFE8
 16196                           postinc1	equ	0xFE6
 16197                           postdec1	equ	0xFE5
 16198                           plusw1	equ	0xFE3
 16199                           fsr1h	equ	0xFE2
 16200                           fsr1l	equ	0xFE1
 16201                           indf2	equ	0xFDF
 16202                           postinc2	equ	0xFDE
 16203                           postdec2	equ	0xFDD
 16204                           plusw2	equ	0xFDB
 16205                           fsr2h	equ	0xFDA
 16206                           fsr2l	equ	0xFD9
 16207                           status	equ	0xFD8
 16208                           
 16209 ;; *************** function __root_is_available *****************
 16210 ;; Defined at:
 16211 ;;		line 61 in file "fat16.c"
 16212 ;; Parameters:    Size  Location     Type
 16213 ;;  file_number     1    wreg     unsigned char 
 16214 ;; Auto vars:     Size  Location     Type
 16215 ;;  file_number     1   44[BANK0 ] unsigned char 
 16216 ;;  offset          2   42[BANK0 ] unsigned int 
 16217 ;;  root_sector     2   40[BANK0 ] unsigned int 
 16218 ;;  first_byte      1   45[BANK0 ] unsigned char 
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  1    wreg      unsigned char 
 16221 ;; Registers used:
 16222 ;;		wreg, status,2, status,0, cstack
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16229 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16231 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16232 ;;Total ram usage:        7 bytes
 16233 ;; Hardware stack levels used:    1
 16234 ;; Hardware stack levels required when called:   14
 16235 ;; This function calls:
 16236 ;;		_flash_partial_read
 16237 ;; This function is called by:
 16238 ;;		__get_available_root_entry
 16239 ;;		_fat_append_to_file
 16240 ;;		_fat_delete_file
 16241 ;; This function uses a non-reentrant model
 16242 ;;
 16243                           
 16244                           	psect	text75
 16245  013DB2                     __ptext75:
 16246                           	opt stack 0
 16247  013DB2                     __root_is_available:
 16248                           	opt stack 13
 16249                           
 16250                           ; BSR set to: 0
 16251                           ;incstack = 0
 16252                           ;__root_is_available@file_number stored from wreg
 16253  013DB2  0100               	movlb	0	; () banked
 16254  013DB4  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 16255                           
 16256                           ;fat16.c: 63: uint16_t root_sector;;fat16.c: 64: uint16_t offset;;fat16.c: 65: uint8_t f
      +                          irst_byte;;fat16.c: 69: if(file_number>=64)
 16257  013DB6  0E3F               	movlw	63
 16258  013DB8  0100               	movlb	0	; () banked
 16259  013DBA  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 16260  013DBC  D002               	goto	l2947
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;fat16.c: 70: {;fat16.c: 72: return 0;
 16264  013DBE  0E00               	movlw	0
 16265                           
 16266                           ; BSR set to: 0
 16267  013DC0  0012               	return	
 16268  013DC2                     l2947:
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;fat16.c: 73: };fat16.c: 76: root_sector = (file_number >> 4) + 18;
 16272                           
 16273                           ; BSR set to: 0
 16274  013DC2  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16275  013DC6  3B87               	swapf	??__root_is_available& (0+255),f,b
 16276  013DC8  0E0F               	movlw	15
 16277  013DCA  1787               	andwf	??__root_is_available& (0+255),f,b
 16278  013DCC  0E12               	movlw	18
 16279  013DCE  2587               	addwf	??__root_is_available& (0+255),w,b
 16280  013DD0  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 16281  013DD2  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 16282  013DD4  0E00               	movlw	0
 16283  013DD6  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 16284                           
 16285                           ;fat16.c: 77: offset = (file_number & 0b1111);
 16286  013DD8  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16287  013DDC  0E0F               	movlw	15
 16288  013DDE  1787               	andwf	??__root_is_available& (0+255),f,b
 16289  013DE0  5187               	movf	??__root_is_available& (0+255),w,b
 16290  013DE2  6F8A               	movwf	__root_is_available@offset& (0+255),b
 16291  013DE4  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 16292                           
 16293                           ;fat16.c: 78: offset <<= 5;
 16294  013DE6  0E05               	movlw	5
 16295  013DE8                     u18265:
 16296  013DE8  90D8               	bcf	status,0,c
 16297  013DEA  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 16298  013DEC  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 16299  013DEE  2EE8               	decfsz	wreg,f,c
 16300  013DF0  D7FB               	goto	u18265
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 16304  013DF2  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 16305  013DF6  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 16306  013DFA  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 16307  013DFE  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 16308  013E02  0E00               	movlw	0
 16309  013E04  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16310  013E06  0E01               	movlw	1
 16311  013E08  6F77               	movwf	flash_partial_read@length& (0+255),b
 16312  013E0A  0E8D               	movlw	low __root_is_available@first_byte
 16313  013E0C  6F79               	movwf	flash_partial_read@data& (0+255),b
 16314  013E0E  0E00               	movlw	high __root_is_available@first_byte
 16315  013E10  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16316  013E12  ECCF  F09F         	call	_flash_partial_read	;wreg free
 16317                           
 16318                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 16319  013E16  0100               	movlb	0	; () banked
 16320  013E18  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 16321  013E1A  B4D8               	btfsc	status,2,c
 16322  013E1C  D004               	goto	u18280
 16323                           
 16324                           ; BSR set to: 0
 16325  013E1E  0EE5               	movlw	229
 16326  013E20  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 16327  013E22  A4D8               	btfss	status,2,c
 16328  013E24  D002               	goto	l2949
 16329  013E26                     u18280:
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;fat16.c: 85: {;fat16.c: 87: return 1;
 16333                           
 16334                           ; BSR set to: 0
 16335  013E26  0E01               	movlw	1
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;fat16.c: 88: }
 16339                           
 16340                           ; BSR set to: 0
 16341  013E28  0012               	return	
 16342  013E2A                     l2949:
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;fat16.c: 89: else;fat16.c: 90: {;fat16.c: 92: return 0;
 16346                           
 16347                           ; BSR set to: 0
 16348  013E2A  0E00               	movlw	0
 16349                           
 16350                           ; BSR set to: 0
 16351  013E2C  0012               	return	
 16352  013E2E                     __end_of__root_is_available:
 16353                           	opt stack 0
 16354                           tblptru	equ	0xFF8
 16355                           tblptrh	equ	0xFF7
 16356                           tblptrl	equ	0xFF6
 16357                           tablat	equ	0xFF5
 16358                           prodh	equ	0xFF4
 16359                           prodl	equ	0xFF3
 16360                           intcon	equ	0xFF2
 16361                           intcon2	equ	0xFF1
 16362                           intcon3	equ	0xFF0
 16363                           postinc0	equ	0xFEE
 16364                           wreg	equ	0xFE8
 16365                           postinc1	equ	0xFE6
 16366                           postdec1	equ	0xFE5
 16367                           plusw1	equ	0xFE3
 16368                           fsr1h	equ	0xFE2
 16369                           fsr1l	equ	0xFE1
 16370                           indf2	equ	0xFDF
 16371                           postinc2	equ	0xFDE
 16372                           postdec2	equ	0xFDD
 16373                           plusw2	equ	0xFDB
 16374                           fsr2h	equ	0xFDA
 16375                           fsr2l	equ	0xFD9
 16376                           status	equ	0xFD8
 16377                           
 16378 ;; *************** function __read_root *****************
 16379 ;; Defined at:
 16380 ;;		line 194 in file "fat16.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;  slot            1    wreg     unsigned char 
 16383 ;;  data            2   39[BANK0 ] PTR struct .
 16384 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 16385 ;; Auto vars:     Size  Location     Type
 16386 ;;  slot            1   46[BANK0 ] unsigned char 
 16387 ;;  offset          2   44[BANK0 ] unsigned int 
 16388 ;;  root_sector     2   42[BANK0 ] unsigned int 
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  1    wreg      void 
 16391 ;; Registers used:
 16392 ;;		wreg, status,2, status,0, cstack
 16393 ;; Tracked objects:
 16394 ;;		On entry : 0/0
 16395 ;;		On exit  : 0/0
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16399 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16401 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16402 ;;Total ram usage:        8 bytes
 16403 ;; Hardware stack levels used:    1
 16404 ;; Hardware stack levels required when called:   14
 16405 ;; This function calls:
 16406 ;;		_flash_partial_read
 16407 ;; This function is called by:
 16408 ;;		_fat_append_to_file
 16409 ;;		_fat_rename_file
 16410 ;;		_fat_read_from_file
 16411 ;; This function uses a non-reentrant model
 16412 ;;
 16413                           
 16414                           	psect	text76
 16415  0147D2                     __ptext76:
 16416                           	opt stack 0
 16417  0147D2                     __read_root:
 16418                           	opt stack 14
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;incstack = 0
 16422                           ;__read_root@slot stored from wreg
 16423  0147D2  0100               	movlb	0	; () banked
 16424  0147D4  6F8E               	movwf	__read_root@slot& (0+255),b
 16425                           
 16426                           ;fat16.c: 196: uint16_t root_sector;;fat16.c: 197: uint16_t offset;;fat16.c: 198: root_s
      +                          ector = (slot >> 4) + 18;
 16427  0147D6  C08E  F089         	movff	__read_root@slot,??__read_root
 16428  0147DA  0100               	movlb	0	; () banked
 16429  0147DC  3B89               	swapf	??__read_root& (0+255),f,b
 16430  0147DE  0E0F               	movlw	15
 16431  0147E0  1789               	andwf	??__read_root& (0+255),f,b
 16432  0147E2  0E12               	movlw	18
 16433  0147E4  2589               	addwf	??__read_root& (0+255),w,b
 16434  0147E6  6F8A               	movwf	__read_root@root_sector& (0+255),b
 16435  0147E8  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 16436  0147EA  0E00               	movlw	0
 16437  0147EC  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 16438                           
 16439                           ;fat16.c: 199: offset = (slot & 0b1111);
 16440  0147EE  C08E  F089         	movff	__read_root@slot,??__read_root
 16441  0147F2  0E0F               	movlw	15
 16442  0147F4  1789               	andwf	??__read_root& (0+255),f,b
 16443  0147F6  5189               	movf	??__read_root& (0+255),w,b
 16444  0147F8  6F8C               	movwf	__read_root@offset& (0+255),b
 16445  0147FA  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 16446                           
 16447                           ;fat16.c: 200: offset <<= 5;
 16448  0147FC  0E05               	movlw	5
 16449  0147FE                     u19055:
 16450  0147FE  90D8               	bcf	status,0,c
 16451  014800  378C               	rlcf	__read_root@offset& (0+255),f,b
 16452  014802  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 16453  014804  2EE8               	decfsz	wreg,f,c
 16454  014806  D7FB               	goto	u19055
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 16458  014808  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 16459  01480C  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 16460  014810  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 16461  014814  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 16462  014818  0E00               	movlw	0
 16463  01481A  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16464  01481C  0E20               	movlw	32
 16465  01481E  6F77               	movwf	flash_partial_read@length& (0+255),b
 16466  014820  C087  F079         	movff	__read_root@data,flash_partial_read@data
 16467  014824  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 16468  014828  ECCF  F09F         	call	_flash_partial_read	;wreg free
 16469  01482C  0012               	return		;funcret
 16470  01482E                     __end_of__read_root:
 16471                           	opt stack 0
 16472                           tblptru	equ	0xFF8
 16473                           tblptrh	equ	0xFF7
 16474                           tblptrl	equ	0xFF6
 16475                           tablat	equ	0xFF5
 16476                           prodh	equ	0xFF4
 16477                           prodl	equ	0xFF3
 16478                           intcon	equ	0xFF2
 16479                           intcon2	equ	0xFF1
 16480                           intcon3	equ	0xFF0
 16481                           postinc0	equ	0xFEE
 16482                           wreg	equ	0xFE8
 16483                           postinc1	equ	0xFE6
 16484                           postdec1	equ	0xFE5
 16485                           plusw1	equ	0xFE3
 16486                           fsr1h	equ	0xFE2
 16487                           fsr1l	equ	0xFE1
 16488                           indf2	equ	0xFDF
 16489                           postinc2	equ	0xFDE
 16490                           postdec2	equ	0xFDD
 16491                           plusw2	equ	0xFDB
 16492                           fsr2h	equ	0xFDA
 16493                           fsr2l	equ	0xFD9
 16494                           status	equ	0xFD8
 16495                           
 16496 ;; *************** function __read_fat *****************
 16497 ;; Defined at:
 16498 ;;		line 171 in file "fat16.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;  cluster         2   39[BANK0 ] unsigned int 
 16501 ;; Auto vars:     Size  Location     Type
 16502 ;;  value           2   45[BANK0 ] unsigned int 
 16503 ;;  offset          2   43[BANK0 ] unsigned int 
 16504 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2   39[BANK0 ] unsigned int 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16518 ;;Total ram usage:        8 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:   14
 16521 ;; This function calls:
 16522 ;;		_flash_partial_read
 16523 ;; This function is called by:
 16524 ;;		_fat_append_to_file
 16525 ;;		_fat_delete_file
 16526 ;;		_fat_read_from_file
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           	psect	text77
 16531  014FDC                     __ptext77:
 16532                           	opt stack 0
 16533  014FDC                     __read_fat:
 16534                           	opt stack 14
 16535                           
 16536                           ;fat16.c: 173: uint16_t fat_sector;;fat16.c: 174: uint16_t offset;;fat16.c: 175: uint16_
      +                          t value;;fat16.c: 176: fat_sector = cluster>>8;
 16537                           
 16538                           ;incstack = 0
 16539  014FDC  0100               	movlb	0	; () banked
 16540  014FDE  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 16541  014FE0  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 16542  014FE2  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;fat16.c: 177: fat_sector += 2;
 16546  014FE4  0E02               	movlw	2
 16547  014FE6  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 16548  014FE8  0E00               	movlw	0
 16549  014FEA  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;fat16.c: 178: offset = cluster & 0xFF;
 16553  014FEC  5187               	movf	__read_fat@cluster& (0+255),w,b
 16554  014FEE  6F8B               	movwf	__read_fat@offset& (0+255),b
 16555  014FF0  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;fat16.c: 179: offset <<= 1;
 16559  014FF2  90D8               	bcf	status,0,c
 16560  014FF4  378B               	rlcf	__read_fat@offset& (0+255),f,b
 16561  014FF6  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 16565  014FF8  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 16566  014FFC  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 16567  015000  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 16568  015004  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16569  015008  0E00               	movlw	0
 16570  01500A  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16571  01500C  0E02               	movlw	2
 16572  01500E  6F77               	movwf	flash_partial_read@length& (0+255),b
 16573  015010  0E8D               	movlw	low __read_fat@value
 16574  015012  6F79               	movwf	flash_partial_read@data& (0+255),b
 16575  015014  0E00               	movlw	high __read_fat@value
 16576  015016  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16577  015018  ECCF  F09F         	call	_flash_partial_read	;wreg free
 16578                           
 16579                           ;fat16.c: 181: return value;
 16580  01501C  C08D  F087         	movff	__read_fat@value,?__read_fat
 16581  015020  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 16582  015024  0012               	return	
 16583  015026                     __end_of__read_fat:
 16584                           	opt stack 0
 16585                           tblptru	equ	0xFF8
 16586                           tblptrh	equ	0xFF7
 16587                           tblptrl	equ	0xFF6
 16588                           tablat	equ	0xFF5
 16589                           prodh	equ	0xFF4
 16590                           prodl	equ	0xFF3
 16591                           intcon	equ	0xFF2
 16592                           intcon2	equ	0xFF1
 16593                           intcon3	equ	0xFF0
 16594                           postinc0	equ	0xFEE
 16595                           wreg	equ	0xFE8
 16596                           postinc1	equ	0xFE6
 16597                           postdec1	equ	0xFE5
 16598                           plusw1	equ	0xFE3
 16599                           fsr1h	equ	0xFE2
 16600                           fsr1l	equ	0xFE1
 16601                           indf2	equ	0xFDF
 16602                           postinc2	equ	0xFDE
 16603                           postdec2	equ	0xFDD
 16604                           plusw2	equ	0xFDB
 16605                           fsr2h	equ	0xFDA
 16606                           fsr2l	equ	0xFD9
 16607                           status	equ	0xFD8
 16608                           
 16609 ;; *************** function __get_empty_cluster *****************
 16610 ;; Defined at:
 16611 ;;		line 109 in file "fat16.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;  cluster         2   47[BANK0 ] unsigned int 
 16616 ;;  value           2   45[BANK0 ] unsigned int 
 16617 ;;  offset          2   43[BANK0 ] unsigned int 
 16618 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  2   39[BANK0 ] unsigned int 
 16621 ;; Registers used:
 16622 ;;		wreg, status,2, status,0, cstack
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16629 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16631 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16632 ;;Total ram usage:       10 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:   14
 16635 ;; This function calls:
 16636 ;;		_flash_partial_read
 16637 ;; This function is called by:
 16638 ;;		_fat_create_file
 16639 ;;		_fat_append_to_file
 16640 ;; This function uses a non-reentrant model
 16641 ;;
 16642                           
 16643                           	psect	text78
 16644  013EAA                     __ptext78:
 16645                           	opt stack 0
 16646  013EAA                     __get_empty_cluster:
 16647                           	opt stack 14
 16648                           
 16649                           ;fat16.c: 111: uint16_t cluster;;fat16.c: 112: uint16_t fat_sector;;fat16.c: 113: uint16
      +                          _t offset;;fat16.c: 114: uint16_t value;;fat16.c: 117: for(cluster=first_cluster; cluste
      +                          r<(8170+2); ++cluster)
 16650                           
 16651                           ;incstack = 0
 16652  013EAA  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 16653  013EAE  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 16654  013EB2  0EEC               	movlw	236
 16655  013EB4  0100               	movlb	0	; () banked
 16656  013EB6  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 16657  013EB8  0E1F               	movlw	31
 16658  013EBA  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16659  013EBC  B0D8               	btfsc	status,0,c
 16660  013EBE  D02D               	goto	u18990
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;fat16.c: 118: {;fat16.c: 119: fat_sector = cluster>>8;
 16664                           
 16665                           ; BSR set to: 0
 16666                           
 16667                           ; BSR set to: 0
 16668  013EC0  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16669  013EC2  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 16670  013EC4  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;fat16.c: 120: fat_sector += 2;
 16674  013EC6  0E02               	movlw	2
 16675  013EC8  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 16676  013ECA  0E00               	movlw	0
 16677  013ECC  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;fat16.c: 121: offset = cluster & 0xFF;
 16681  013ECE  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 16682  013ED0  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 16683  013ED2  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 16684                           
 16685                           ; BSR set to: 0
 16686                           ;fat16.c: 122: offset <<= 1;
 16687  013ED4  90D8               	bcf	status,0,c
 16688  013ED6  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 16689  013ED8  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 16690                           
 16691                           ; BSR set to: 0
 16692                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 16693  013EDA  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 16694  013EDE  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 16695  013EE2  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 16696  013EE6  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 16697  013EEA  0E00               	movlw	0
 16698  013EEC  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16699  013EEE  0E02               	movlw	2
 16700  013EF0  6F77               	movwf	flash_partial_read@length& (0+255),b
 16701  013EF2  0E8D               	movlw	low __get_empty_cluster@value
 16702  013EF4  6F79               	movwf	flash_partial_read@data& (0+255),b
 16703  013EF6  0E00               	movlw	high __get_empty_cluster@value
 16704  013EF8  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16705  013EFA  ECCF  F09F         	call	_flash_partial_read	;wreg free
 16706                           
 16707                           ;fat16.c: 124: if(value==0x0000)
 16708  013EFE  0100               	movlb	0	; () banked
 16709  013F00  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 16710  013F02  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 16711  013F04  A4D8               	btfss	status,2,c
 16712  013F06  D005               	goto	l2963
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;fat16.c: 125: {;fat16.c: 126: return cluster;
 16716  013F08  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 16717  013F0C  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 16718  013F10  0012               	return	
 16719  013F12                     l2963:
 16720                           
 16721                           ; BSR set to: 0
 16722                           
 16723                           ; BSR set to: 0
 16724  013F12  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 16725  013F14  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 16726                           
 16727                           ; BSR set to: 0
 16728  013F16  0EEC               	movlw	236
 16729  013F18  D7CE               	goto	L10
 16730  013F1A                     u18990:
 16731                           
 16732                           ; BSR set to: 0
 16733                           ;fat16.c: 127: };fat16.c: 128: };fat16.c: 129: return 0x0000;
 16734                           
 16735                           ; BSR set to: 0
 16736  013F1A  0E00               	movlw	0
 16737  013F1C  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 16738  013F1E  0E00               	movlw	0
 16739  013F20  6F87               	movwf	?__get_empty_cluster& (0+255),b
 16740  013F22  0012               	return	
 16741  013F24                     __end_of__get_empty_cluster:
 16742                           	opt stack 0
 16743                           tblptru	equ	0xFF8
 16744                           tblptrh	equ	0xFF7
 16745                           tblptrl	equ	0xFF6
 16746                           tablat	equ	0xFF5
 16747                           prodh	equ	0xFF4
 16748                           prodl	equ	0xFF3
 16749                           intcon	equ	0xFF2
 16750                           intcon2	equ	0xFF1
 16751                           intcon3	equ	0xFF0
 16752                           postinc0	equ	0xFEE
 16753                           wreg	equ	0xFE8
 16754                           postinc1	equ	0xFE6
 16755                           postdec1	equ	0xFE5
 16756                           plusw1	equ	0xFE3
 16757                           fsr1h	equ	0xFE2
 16758                           fsr1l	equ	0xFE1
 16759                           indf2	equ	0xFDF
 16760                           postinc2	equ	0xFDE
 16761                           postdec2	equ	0xFDD
 16762                           plusw2	equ	0xFDB
 16763                           fsr2h	equ	0xFDA
 16764                           fsr2l	equ	0xFD9
 16765                           status	equ	0xFD8
 16766                           
 16767 ;; *************** function _log_get_number_of_samples *****************
 16768 ;; Defined at:
 16769 ;;		line 169 in file "log.c"
 16770 ;; Parameters:    Size  Location     Type
 16771 ;;		None
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;		None
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  2    0[BANK0 ] unsigned int 
 16776 ;; Registers used:
 16777 ;;		None
 16778 ;; Tracked objects:
 16779 ;;		On entry : 0/0
 16780 ;;		On exit  : 0/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16787 ;;Total ram usage:        2 bytes
 16788 ;; Hardware stack levels used:    1
 16789 ;; Hardware stack levels required when called:   10
 16790 ;; This function calls:
 16791 ;;		Nothing
 16792 ;; This function is called by:
 16793 ;;		_main
 16794 ;; This function uses a non-reentrant model
 16795 ;;
 16796                           
 16797                           	psect	text79
 16798  015E8A                     __ptext79:
 16799                           	opt stack 0
 16800  015E8A                     _log_get_number_of_samples:
 16801                           	opt stack 20
 16802                           
 16803                           ;log.c: 171: return averageCount;
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;incstack = 0
 16807  015E8A  C016  F060         	movff	_averageCount,?_log_get_number_of_samples
 16808  015E8E  C017  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 16809  015E92  0012               	return		;funcret
 16810  015E94                     __end_of_log_get_number_of_samples:
 16811                           	opt stack 0
 16812                           tblptru	equ	0xFF8
 16813                           tblptrh	equ	0xFF7
 16814                           tblptrl	equ	0xFF6
 16815                           tablat	equ	0xFF5
 16816                           prodh	equ	0xFF4
 16817                           prodl	equ	0xFF3
 16818                           intcon	equ	0xFF2
 16819                           intcon2	equ	0xFF1
 16820                           intcon3	equ	0xFF0
 16821                           postinc0	equ	0xFEE
 16822                           wreg	equ	0xFE8
 16823                           postinc1	equ	0xFE6
 16824                           postdec1	equ	0xFE5
 16825                           plusw1	equ	0xFE3
 16826                           fsr1h	equ	0xFE2
 16827                           fsr1l	equ	0xFE1
 16828                           indf2	equ	0xFDF
 16829                           postinc2	equ	0xFDE
 16830                           postdec2	equ	0xFDD
 16831                           plusw2	equ	0xFDB
 16832                           fsr2h	equ	0xFDA
 16833                           fsr2l	equ	0xFD9
 16834                           status	equ	0xFD8
 16835                           
 16836 ;; *************** function _log_collect_data *****************
 16837 ;; Defined at:
 16838 ;;		line 114 in file "log.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;		None
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;  temp            2   24[BANK0 ] unsigned int 
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      void 
 16845 ;; Registers used:
 16846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16854 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16856 ;;Total ram usage:        6 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:   12
 16859 ;; This function calls:
 16860 ;;		__get_input_power
 16861 ;;		__get_output_power
 16862 ;;		_buck_get_mode
 16863 ;;		_rtcc_get_seconds_decimal
 16864 ;;		_system_output_is_on
 16865 ;; This function is called by:
 16866 ;;		_main
 16867 ;; This function uses a non-reentrant model
 16868 ;;
 16869                           
 16870                           	psect	text80
 16871  00ED70                     __ptext80:
 16872                           	opt stack 0
 16873  00ED70                     _log_collect_data:
 16874                           	opt stack 18
 16875                           
 16876                           ;log.c: 116: uint16_t temp;;log.c: 119: temp = rtcc_get_seconds_decimal();
 16877                           
 16878                           ;incstack = 0
 16879  00ED70  ECF2  F0AE         	call	_rtcc_get_seconds_decimal	;wreg free
 16880  00ED74  0100               	movlb	0	; () banked
 16881  00ED76  6F74               	movwf	??_log_collect_data& (0+255),b
 16882  00ED78  5174               	movf	??_log_collect_data& (0+255),w,b
 16883  00ED7A  6F78               	movwf	log_collect_data@temp& (0+255),b
 16884  00ED7C  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;log.c: 120: if(lastSecond==temp)
 16888  00ED7E  0101               	movlb	1	; () banked
 16889  00ED80  51EF               	movf	_lastSecond& (0+255),w,b
 16890  00ED82  0100               	movlb	0	; () banked
 16891  00ED84  6F74               	movwf	??_log_collect_data& (0+255),b
 16892  00ED86  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 16893  00ED88  5178               	movf	log_collect_data@temp& (0+255),w,b
 16894  00ED8A  1974               	xorwf	??_log_collect_data& (0+255),w,b
 16895  00ED8C  E104               	bnz	l3297
 16896  00ED8E  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 16897  00ED90  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 16898  00ED92  B4D8               	btfsc	status,2,c
 16899  00ED94  0012               	return	
 16900  00ED96                     l3297:
 16901                           
 16902                           ; BSR set to: 0
 16903                           ;log.c: 123: };log.c: 126: lastSecond = (uint8_t) temp;
 16904  00ED96  C078  F1EF         	movff	log_collect_data@temp,_lastSecond
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 16908  00ED9A  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 16909  00ED9E  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 16910  00EDA2  0E00               	movlw	0
 16911  00EDA4  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16912  00EDA6  0EFF               	movlw	255
 16913  00EDA8  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16914  00EDAA  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16915  00EDAC  5174               	movf	??_log_collect_data& (0+255),w,b
 16916  00EDAE  0102               	movlb	2	; () banked
 16917  00EDB0  279A               	addwf	_inputVoltageSum& (0+255),f,b
 16918  00EDB2  0100               	movlb	0	; () banked
 16919  00EDB4  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16920  00EDB6  0102               	movlb	2	; () banked
 16921  00EDB8  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 16922  00EDBA  0100               	movlb	0	; () banked
 16923  00EDBC  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16924  00EDBE  0102               	movlb	2	; () banked
 16925  00EDC0  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 16926  00EDC2  0100               	movlb	0	; () banked
 16927  00EDC4  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16928  00EDC6  0102               	movlb	2	; () banked
 16929  00EDC8  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 16930                           
 16931                           ;log.c: 130: inputCurrentSum += os.input_current;
 16932  00EDCA  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 16933  00EDCE  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 16934  00EDD2  0E00               	movlw	0
 16935  00EDD4  0100               	movlb	0	; () banked
 16936  00EDD6  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16937  00EDD8  0EFF               	movlw	255
 16938  00EDDA  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16939  00EDDC  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16940  00EDDE  5174               	movf	??_log_collect_data& (0+255),w,b
 16941  00EDE0  0102               	movlb	2	; () banked
 16942  00EDE2  2796               	addwf	_inputCurrentSum& (0+255),f,b
 16943  00EDE4  0100               	movlb	0	; () banked
 16944  00EDE6  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16945  00EDE8  0102               	movlb	2	; () banked
 16946  00EDEA  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 16947  00EDEC  0100               	movlb	0	; () banked
 16948  00EDEE  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16949  00EDF0  0102               	movlb	2	; () banked
 16950  00EDF2  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 16951  00EDF4  0100               	movlb	0	; () banked
 16952  00EDF6  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16953  00EDF8  0102               	movlb	2	; () banked
 16954  00EDFA  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 16955                           
 16956                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 16957  00EDFC  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 16958  00EE00  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 16959  00EE04  0E00               	movlw	0
 16960  00EE06  0100               	movlb	0	; () banked
 16961  00EE08  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16962  00EE0A  0EFF               	movlw	255
 16963  00EE0C  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16964  00EE0E  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16965  00EE10  5174               	movf	??_log_collect_data& (0+255),w,b
 16966  00EE12  0102               	movlb	2	; () banked
 16967  00EE14  2792               	addwf	_outputVoltageSum& (0+255),f,b
 16968  00EE16  0100               	movlb	0	; () banked
 16969  00EE18  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16970  00EE1A  0102               	movlb	2	; () banked
 16971  00EE1C  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 16972  00EE1E  0100               	movlb	0	; () banked
 16973  00EE20  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16974  00EE22  0102               	movlb	2	; () banked
 16975  00EE24  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 16976  00EE26  0100               	movlb	0	; () banked
 16977  00EE28  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16978  00EE2A  0102               	movlb	2	; () banked
 16979  00EE2C  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 16980                           
 16981                           ;log.c: 132: outputCurrentSum += os.output_current;
 16982  00EE2E  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 16983  00EE32  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 16984  00EE36  0E00               	movlw	0
 16985  00EE38  0100               	movlb	0	; () banked
 16986  00EE3A  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16987  00EE3C  0EFF               	movlw	255
 16988  00EE3E  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16989  00EE40  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16990  00EE42  5174               	movf	??_log_collect_data& (0+255),w,b
 16991  00EE44  0102               	movlb	2	; () banked
 16992  00EE46  278E               	addwf	_outputCurrentSum& (0+255),f,b
 16993  00EE48  0100               	movlb	0	; () banked
 16994  00EE4A  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16995  00EE4C  0102               	movlb	2	; () banked
 16996  00EE4E  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 16997  00EE50  0100               	movlb	0	; () banked
 16998  00EE52  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16999  00EE54  0102               	movlb	2	; () banked
 17000  00EE56  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 17001  00EE58  0100               	movlb	0	; () banked
 17002  00EE5A  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17003  00EE5C  0102               	movlb	2	; () banked
 17004  00EE5E  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 17005                           
 17006                           ; BSR set to: 2
 17007                           ;log.c: 133: temp = _get_input_power();
 17008  00EE60  EC96  F09D         	call	__get_input_power	;wreg free
 17009  00EE64  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 17010  00EE68  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 17011                           
 17012                           ;log.c: 134: inputPowerSum += temp>>1;
 17013  00EE6C  90D8               	bcf	status,0,c
 17014  00EE6E  0100               	movlb	0	; () banked
 17015  00EE70  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17016  00EE72  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17017  00EE74  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17018  00EE76  6F74               	movwf	??_log_collect_data& (0+255),b
 17019  00EE78  5174               	movf	??_log_collect_data& (0+255),w,b
 17020  00EE7A  0102               	movlb	2	; () banked
 17021  00EE7C  278A               	addwf	_inputPowerSum& (0+255),f,b
 17022  00EE7E  0100               	movlb	0	; () banked
 17023  00EE80  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17024  00EE82  0102               	movlb	2	; () banked
 17025  00EE84  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 17026  00EE86  0E00               	movlw	0
 17027  00EE88  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 17028  00EE8A  0E00               	movlw	0
 17029  00EE8C  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 17030                           
 17031                           ; BSR set to: 2
 17032                           ;log.c: 135: inputCapacitySum += temp;
 17033  00EE8E  0100               	movlb	0	; () banked
 17034  00EE90  5178               	movf	log_collect_data@temp& (0+255),w,b
 17035  00EE92  0102               	movlb	2	; () banked
 17036  00EE94  2782               	addwf	_inputCapacitySum& (0+255),f,b
 17037  00EE96  0100               	movlb	0	; () banked
 17038  00EE98  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17039  00EE9A  0102               	movlb	2	; () banked
 17040  00EE9C  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 17041  00EE9E  0E00               	movlw	0
 17042  00EEA0  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 17043  00EEA2  0E00               	movlw	0
 17044  00EEA4  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 17045                           
 17046                           ; BSR set to: 2
 17047                           ;log.c: 136: temp = _get_output_power();
 17048  00EEA6  EC55  F09D         	call	__get_output_power	;wreg free
 17049  00EEAA  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 17050  00EEAE  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 17051                           
 17052                           ;log.c: 137: outputPowerSum += temp>>1;
 17053  00EEB2  90D8               	bcf	status,0,c
 17054  00EEB4  0100               	movlb	0	; () banked
 17055  00EEB6  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17056  00EEB8  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17057  00EEBA  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17058  00EEBC  6F74               	movwf	??_log_collect_data& (0+255),b
 17059  00EEBE  5174               	movf	??_log_collect_data& (0+255),w,b
 17060  00EEC0  0102               	movlb	2	; () banked
 17061  00EEC2  2786               	addwf	_outputPowerSum& (0+255),f,b
 17062  00EEC4  0100               	movlb	0	; () banked
 17063  00EEC6  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17064  00EEC8  0102               	movlb	2	; () banked
 17065  00EECA  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 17066  00EECC  0E00               	movlw	0
 17067  00EECE  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 17068  00EED0  0E00               	movlw	0
 17069  00EED2  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 17070                           
 17071                           ; BSR set to: 2
 17072                           ;log.c: 138: outputCapacitySum += temp;
 17073  00EED4  0100               	movlb	0	; () banked
 17074  00EED6  5178               	movf	log_collect_data@temp& (0+255),w,b
 17075  00EED8  0102               	movlb	2	; () banked
 17076  00EEDA  277E               	addwf	_outputCapacitySum& (0+255),f,b
 17077  00EEDC  0100               	movlb	0	; () banked
 17078  00EEDE  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17079  00EEE0  0102               	movlb	2	; () banked
 17080  00EEE2  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 17081  00EEE4  0E00               	movlw	0
 17082  00EEE6  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 17083  00EEE8  0E00               	movlw	0
 17084  00EEEA  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 17085                           
 17086                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 17087  00EEEC  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 17088  00EEF0  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 17089  00EEF4  0E00               	movlw	0
 17090  00EEF6  0100               	movlb	0	; () banked
 17091  00EEF8  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17092  00EEFA  0EFF               	movlw	255
 17093  00EEFC  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17094  00EEFE  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17095  00EF00  5174               	movf	??_log_collect_data& (0+255),w,b
 17096  00EF02  0102               	movlb	2	; () banked
 17097  00EF04  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 17098  00EF06  0100               	movlb	0	; () banked
 17099  00EF08  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17100  00EF0A  0102               	movlb	2	; () banked
 17101  00EF0C  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 17102  00EF0E  0100               	movlb	0	; () banked
 17103  00EF10  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17104  00EF12  0102               	movlb	2	; () banked
 17105  00EF14  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 17106  00EF16  0100               	movlb	0	; () banked
 17107  00EF18  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17108  00EF1A  0102               	movlb	2	; () banked
 17109  00EF1C  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 17110                           
 17111                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 17112  00EF1E  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 17113  00EF22  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 17114  00EF26  0E00               	movlw	0
 17115  00EF28  0100               	movlb	0	; () banked
 17116  00EF2A  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17117  00EF2C  0EFF               	movlw	255
 17118  00EF2E  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17119  00EF30  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17120  00EF32  5174               	movf	??_log_collect_data& (0+255),w,b
 17121  00EF34  0102               	movlb	2	; () banked
 17122  00EF36  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 17123  00EF38  0100               	movlb	0	; () banked
 17124  00EF3A  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17125  00EF3C  0102               	movlb	2	; () banked
 17126  00EF3E  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 17127  00EF40  0100               	movlb	0	; () banked
 17128  00EF42  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17129  00EF44  0102               	movlb	2	; () banked
 17130  00EF46  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 17131  00EF48  0100               	movlb	0	; () banked
 17132  00EF4A  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17133  00EF4C  0102               	movlb	2	; () banked
 17134  00EF4E  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 17135                           
 17136                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 17137  00EF50  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 17138  00EF54  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 17139  00EF58  0E00               	movlw	0
 17140  00EF5A  0100               	movlb	0	; () banked
 17141  00EF5C  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17142  00EF5E  0EFF               	movlw	255
 17143  00EF60  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17144  00EF62  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17145  00EF64  5174               	movf	??_log_collect_data& (0+255),w,b
 17146  00EF66  0102               	movlb	2	; () banked
 17147  00EF68  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 17148  00EF6A  0100               	movlb	0	; () banked
 17149  00EF6C  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17150  00EF6E  0102               	movlb	2	; () banked
 17151  00EF70  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 17152  00EF72  0100               	movlb	0	; () banked
 17153  00EF74  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17154  00EF76  0102               	movlb	2	; () banked
 17155  00EF78  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 17156  00EF7A  0100               	movlb	0	; () banked
 17157  00EF7C  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17158  00EF7E  0102               	movlb	2	; () banked
 17159  00EF80  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 17160                           
 17161                           ; BSR set to: 2
 17162                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 17163  00EF82  EC79  F0AF         	call	_buck_get_mode	;wreg free
 17164  00EF86  0100               	movlb	0	; () banked
 17165  00EF88  6F74               	movwf	??_log_collect_data& (0+255),b
 17166  00EF8A  0E7F               	movlw	127
 17167  00EF8C  1774               	andwf	??_log_collect_data& (0+255),f,b
 17168  00EF8E  B4D8               	btfsc	status,2,c
 17169  00EF90  D003               	goto	l3299
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;log.c: 143: {;log.c: 144: ++chargerOnTime;
 17173  00EF92  0102               	movlb	2	; () banked
 17174  00EF94  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 17175  00EF96  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 17176  00EF98                     l3299:
 17177                           
 17178                           ;log.c: 145: };log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 17179                           
 17180                           ; BSR set to: 2
 17181  00EF98  0102               	movlb	2	; () banked
 17182  00EF9A  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 17183  00EF9C  A4D8               	btfss	status,2,c
 17184  00EF9E  D002               	goto	l3300
 17185                           
 17186                           ; BSR set to: 2
 17187                           ;log.c: 147: {;log.c: 148: ++lowPowerTime;
 17188  00EFA0  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 17189  00EFA2  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 17190  00EFA4                     l3300:
 17191                           
 17192                           ; BSR set to: 2
 17193                           ;log.c: 149: };log.c: 150: if(system_output_is_on(OUTPUT_1))
 17194                           
 17195                           ; BSR set to: 2
 17196  00EFA4  0E01               	movlw	1
 17197  00EFA6  ECF6  F0AD         	call	_system_output_is_on
 17198  00EFAA  0900               	iorlw	0
 17199  00EFAC  B4D8               	btfsc	status,2,c
 17200  00EFAE  D002               	goto	l3301
 17201                           
 17202                           ;log.c: 151: status |= 0b10000000;
 17203  00EFB0  0101               	movlb	1	; () banked
 17204  00EFB2  8FF0               	bsf	_status& (0+255),7,b
 17205  00EFB4                     l3301:
 17206                           
 17207                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 17208                           
 17209                           ; BSR set to: 1
 17210  00EFB4  0E02               	movlw	2
 17211  00EFB6  ECF6  F0AD         	call	_system_output_is_on
 17212  00EFBA  0900               	iorlw	0
 17213  00EFBC  B4D8               	btfsc	status,2,c
 17214  00EFBE  D002               	goto	l3302
 17215                           
 17216                           ;log.c: 153: status |= 0b01000000;
 17217  00EFC0  0101               	movlb	1	; () banked
 17218  00EFC2  8DF0               	bsf	_status& (0+255),6,b
 17219  00EFC4                     l3302:
 17220                           
 17221                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 17222                           
 17223                           ; BSR set to: 1
 17224  00EFC4  0E04               	movlw	4
 17225  00EFC6  ECF6  F0AD         	call	_system_output_is_on
 17226  00EFCA  0900               	iorlw	0
 17227  00EFCC  B4D8               	btfsc	status,2,c
 17228  00EFCE  D002               	goto	l3303
 17229                           
 17230                           ;log.c: 155: status |= 0b00100000;
 17231  00EFD0  0101               	movlb	1	; () banked
 17232  00EFD2  8BF0               	bsf	_status& (0+255),5,b
 17233  00EFD4                     l3303:
 17234                           
 17235                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 17236                           
 17237                           ; BSR set to: 1
 17238  00EFD4  0E08               	movlw	8
 17239  00EFD6  ECF6  F0AD         	call	_system_output_is_on
 17240  00EFDA  0900               	iorlw	0
 17241  00EFDC  B4D8               	btfsc	status,2,c
 17242  00EFDE  D002               	goto	l3304
 17243                           
 17244                           ;log.c: 157: status |= 0b00010000;
 17245  00EFE0  0101               	movlb	1	; () banked
 17246  00EFE2  89F0               	bsf	_status& (0+255),4,b
 17247  00EFE4                     l3304:
 17248                           
 17249                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 17250                           
 17251                           ; BSR set to: 1
 17252  00EFE4  0E10               	movlw	16
 17253  00EFE6  ECF6  F0AD         	call	_system_output_is_on
 17254  00EFEA  0900               	iorlw	0
 17255  00EFEC  B4D8               	btfsc	status,2,c
 17256  00EFEE  D002               	goto	l3305
 17257                           
 17258                           ;log.c: 159: status |= 0b00001000;
 17259  00EFF0  0101               	movlb	1	; () banked
 17260  00EFF2  87F0               	bsf	_status& (0+255),3,b
 17261  00EFF4                     l3305:
 17262                           
 17263                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 17264                           
 17265                           ; BSR set to: 1
 17266  00EFF4  0E20               	movlw	32
 17267  00EFF6  ECF6  F0AD         	call	_system_output_is_on
 17268  00EFFA  0900               	iorlw	0
 17269  00EFFC  B4D8               	btfsc	status,2,c
 17270  00EFFE  D002               	goto	l3306
 17271                           
 17272                           ;log.c: 161: status |= 0b00000100;
 17273  00F000  0101               	movlb	1	; () banked
 17274  00F002  85F0               	bsf	_status& (0+255),2,b
 17275  00F004                     l3306:
 17276                           
 17277                           ;log.c: 163: status |= 0b00000010;
 17278  00F004  0101               	movlb	1	; () banked
 17279  00F006  83F0               	bsf	_status& (0+255),1,b
 17280                           
 17281                           ;log.c: 164: ++averageCount;
 17282  00F008  4A16               	infsnz	_averageCount,f,c
 17283  00F00A  2A17               	incf	_averageCount+1,f,c
 17284  00F00C  0012               	return		;funcret
 17285  00F00E                     __end_of_log_collect_data:
 17286                           	opt stack 0
 17287                           tblptru	equ	0xFF8
 17288                           tblptrh	equ	0xFF7
 17289                           tblptrl	equ	0xFF6
 17290                           tablat	equ	0xFF5
 17291                           prodh	equ	0xFF4
 17292                           prodl	equ	0xFF3
 17293                           intcon	equ	0xFF2
 17294                           intcon2	equ	0xFF1
 17295                           intcon3	equ	0xFF0
 17296                           postinc0	equ	0xFEE
 17297                           wreg	equ	0xFE8
 17298                           postinc1	equ	0xFE6
 17299                           postdec1	equ	0xFE5
 17300                           plusw1	equ	0xFE3
 17301                           fsr1h	equ	0xFE2
 17302                           fsr1l	equ	0xFE1
 17303                           indf2	equ	0xFDF
 17304                           postinc2	equ	0xFDE
 17305                           postdec2	equ	0xFDD
 17306                           plusw2	equ	0xFDB
 17307                           fsr2h	equ	0xFDA
 17308                           fsr2l	equ	0xFD9
 17309                           status	equ	0xFD8
 17310                           
 17311 ;; *************** function _system_output_is_on *****************
 17312 ;; Defined at:
 17313 ;;		line 491 in file "os.c"
 17314 ;; Parameters:    Size  Location     Type
 17315 ;;  output          1    wreg     enum E6652
 17316 ;; Auto vars:     Size  Location     Type
 17317 ;;  output          1    0[BANK0 ] enum E6652
 17318 ;; Return value:  Size  Location     Type
 17319 ;;                  1    wreg      unsigned char 
 17320 ;; Registers used:
 17321 ;;		wreg, status,2, status,0
 17322 ;; Tracked objects:
 17323 ;;		On entry : 0/0
 17324 ;;		On exit  : 0/0
 17325 ;;		Unchanged: 0/0
 17326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17331 ;;Total ram usage:        1 bytes
 17332 ;; Hardware stack levels used:    1
 17333 ;; Hardware stack levels required when called:   10
 17334 ;; This function calls:
 17335 ;;		Nothing
 17336 ;; This function is called by:
 17337 ;;		_system_output_toggle
 17338 ;;		_log_collect_data
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           	psect	text81
 17343  015BEC                     __ptext81:
 17344                           	opt stack 0
 17345  015BEC                     _system_output_is_on:
 17346                           	opt stack 17
 17347                           
 17348                           ;incstack = 0
 17349                           ;system_output_is_on@output stored from wreg
 17350  015BEC  0100               	movlb	0	; () banked
 17351  015BEE  6F60               	movwf	system_output_is_on@output& (0+255),b
 17352                           
 17353                           ;os.c: 493: if(os.outputs&output)
 17354  015BF0  0102               	movlb	2	; () banked
 17355  015BF2  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 17356  015BF4  0100               	movlb	0	; () banked
 17357  015BF6  1560               	andwf	system_output_is_on@output& (0+255),w,b
 17358  015BF8  0900               	iorlw	0
 17359  015BFA  B4D8               	btfsc	status,2,c
 17360  015BFC  D002               	goto	l1396
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;os.c: 494: return 1;
 17364  015BFE  0E01               	movlw	1
 17365                           
 17366                           ; BSR set to: 0
 17367                           
 17368                           ; BSR set to: 0
 17369  015C00  0012               	return	
 17370  015C02                     l1396:
 17371                           
 17372                           ; BSR set to: 0
 17373                           ;os.c: 495: else;os.c: 496: return 0;
 17374                           
 17375                           ; BSR set to: 0
 17376  015C02  0E00               	movlw	0
 17377                           
 17378                           ; BSR set to: 0
 17379  015C04  0012               	return	
 17380  015C06                     __end_of_system_output_is_on:
 17381                           	opt stack 0
 17382                           tblptru	equ	0xFF8
 17383                           tblptrh	equ	0xFF7
 17384                           tblptrl	equ	0xFF6
 17385                           tablat	equ	0xFF5
 17386                           prodh	equ	0xFF4
 17387                           prodl	equ	0xFF3
 17388                           intcon	equ	0xFF2
 17389                           intcon2	equ	0xFF1
 17390                           intcon3	equ	0xFF0
 17391                           postinc0	equ	0xFEE
 17392                           wreg	equ	0xFE8
 17393                           postinc1	equ	0xFE6
 17394                           postdec1	equ	0xFE5
 17395                           plusw1	equ	0xFE3
 17396                           fsr1h	equ	0xFE2
 17397                           fsr1l	equ	0xFE1
 17398                           indf2	equ	0xFDF
 17399                           postinc2	equ	0xFDE
 17400                           postdec2	equ	0xFDD
 17401                           plusw2	equ	0xFDB
 17402                           fsr2h	equ	0xFDA
 17403                           fsr2l	equ	0xFD9
 17404                           status	equ	0xFD8
 17405                           
 17406 ;; *************** function _rtcc_get_seconds_decimal *****************
 17407 ;; Defined at:
 17408 ;;		line 325 in file "rtcc.c"
 17409 ;; Parameters:    Size  Location     Type
 17410 ;;		None
 17411 ;; Auto vars:     Size  Location     Type
 17412 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 17413 ;; Return value:  Size  Location     Type
 17414 ;;                  1    wreg      unsigned char 
 17415 ;; Registers used:
 17416 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17417 ;; Tracked objects:
 17418 ;;		On entry : 0/0
 17419 ;;		On exit  : 0/0
 17420 ;;		Unchanged: 0/0
 17421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17426 ;;Total ram usage:        1 bytes
 17427 ;; Hardware stack levels used:    1
 17428 ;; Hardware stack levels required when called:   11
 17429 ;; This function calls:
 17430 ;;		__rtcc_bcd_to_decimal
 17431 ;;		_rtcc_get_seconds
 17432 ;; This function is called by:
 17433 ;;		__get_time
 17434 ;;		__get_dateTime
 17435 ;;		_log_start_new
 17436 ;;		_log_collect_data
 17437 ;; This function uses a non-reentrant model
 17438 ;;
 17439                           
 17440                           	psect	text82
 17441  015DE4                     __ptext82:
 17442                           	opt stack 0
 17443  015DE4                     _rtcc_get_seconds_decimal:
 17444                           	opt stack 17
 17445                           
 17446                           ;rtcc.c: 327: uint8_t bcd_seconds = rtcc_get_seconds();
 17447                           
 17448                           ; BSR set to: 0
 17449                           ;incstack = 0
 17450  015DE4  EC10  F0AF         	call	_rtcc_get_seconds	;wreg free
 17451  015DE8  0100               	movlb	0	; () banked
 17452  015DEA  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 17453                           
 17454                           ; BSR set to: 0
 17455                           ;rtcc.c: 328: return _rtcc_bcd_to_decimal(bcd_seconds);
 17456  015DEC  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 17457  015DEE  ECB0  F0AD         	call	__rtcc_bcd_to_decimal
 17458  015DF2  0012               	return	
 17459  015DF4                     __end_of_rtcc_get_seconds_decimal:
 17460                           	opt stack 0
 17461                           tblptru	equ	0xFF8
 17462                           tblptrh	equ	0xFF7
 17463                           tblptrl	equ	0xFF6
 17464                           tablat	equ	0xFF5
 17465                           prodh	equ	0xFF4
 17466                           prodl	equ	0xFF3
 17467                           intcon	equ	0xFF2
 17468                           intcon2	equ	0xFF1
 17469                           intcon3	equ	0xFF0
 17470                           postinc0	equ	0xFEE
 17471                           wreg	equ	0xFE8
 17472                           postinc1	equ	0xFE6
 17473                           postdec1	equ	0xFE5
 17474                           plusw1	equ	0xFE3
 17475                           fsr1h	equ	0xFE2
 17476                           fsr1l	equ	0xFE1
 17477                           indf2	equ	0xFDF
 17478                           postinc2	equ	0xFDE
 17479                           postdec2	equ	0xFDD
 17480                           plusw2	equ	0xFDB
 17481                           fsr2h	equ	0xFDA
 17482                           fsr2l	equ	0xFD9
 17483                           status	equ	0xFD8
 17484                           
 17485 ;; *************** function __rtcc_bcd_to_decimal *****************
 17486 ;; Defined at:
 17487 ;;		line 7 in file "rtcc.c"
 17488 ;; Parameters:    Size  Location     Type
 17489 ;;  input           1    wreg     unsigned char 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;  input           1    2[BANK0 ] unsigned char 
 17492 ;;  ones            1    1[BANK0 ] unsigned char 
 17493 ;;  tens            1    0[BANK0 ] unsigned char 
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  1    wreg      unsigned char 
 17496 ;; Registers used:
 17497 ;;		wreg, status,2, status,0, prodl, prodh
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17504 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17507 ;;Total ram usage:        3 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:   10
 17510 ;; This function calls:
 17511 ;;		Nothing
 17512 ;; This function is called by:
 17513 ;;		_rtcc_get_year_decimal
 17514 ;;		_rtcc_get_month_decimal
 17515 ;;		_rtcc_get_day_decimal
 17516 ;;		_rtcc_get_hours_decimal
 17517 ;;		_rtcc_get_minutes_decimal
 17518 ;;		_rtcc_get_seconds_decimal
 17519 ;; This function uses a non-reentrant model
 17520 ;;
 17521                           
 17522                           	psect	text83
 17523  015B60                     __ptext83:
 17524                           	opt stack 0
 17525  015B60                     __rtcc_bcd_to_decimal:
 17526                           	opt stack 17
 17527                           
 17528                           ;incstack = 0
 17529                           ;__rtcc_bcd_to_decimal@input stored from wreg
 17530  015B60  0100               	movlb	0	; () banked
 17531  015B62  6F62               	movwf	__rtcc_bcd_to_decimal@input& (0+255),b
 17532                           
 17533                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 17534  015B64  0100               	movlb	0	; () banked
 17535  015B66  3962               	swapf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 17536  015B68  0B0F               	andlw	15
 17537  015B6A  0B0F               	andlw	15
 17538  015B6C  6F60               	movwf	__rtcc_bcd_to_decimal@tens& (0+255),b
 17539                           
 17540                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 17541  015B6E  5162               	movf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 17542  015B70  0B0F               	andlw	15
 17543  015B72  6F61               	movwf	__rtcc_bcd_to_decimal@ones& (0+255),b
 17544                           
 17545                           ; BSR set to: 0
 17546                           ;rtcc.c: 11: return ((10*tens) + ones);
 17547  015B74  5160               	movf	__rtcc_bcd_to_decimal@tens& (0+255),w,b
 17548  015B76  0D0A               	mullw	10
 17549  015B78  50F3               	movf	prodl,w,c
 17550  015B7A  2561               	addwf	__rtcc_bcd_to_decimal@ones& (0+255),w,b
 17551  015B7C  0012               	return	
 17552  015B7E                     __end_of__rtcc_bcd_to_decimal:
 17553                           	opt stack 0
 17554                           tblptru	equ	0xFF8
 17555                           tblptrh	equ	0xFF7
 17556                           tblptrl	equ	0xFF6
 17557                           tablat	equ	0xFF5
 17558                           prodh	equ	0xFF4
 17559                           prodl	equ	0xFF3
 17560                           intcon	equ	0xFF2
 17561                           intcon2	equ	0xFF1
 17562                           intcon3	equ	0xFF0
 17563                           postinc0	equ	0xFEE
 17564                           wreg	equ	0xFE8
 17565                           postinc1	equ	0xFE6
 17566                           postdec1	equ	0xFE5
 17567                           plusw1	equ	0xFE3
 17568                           fsr1h	equ	0xFE2
 17569                           fsr1l	equ	0xFE1
 17570                           indf2	equ	0xFDF
 17571                           postinc2	equ	0xFDE
 17572                           postdec2	equ	0xFDD
 17573                           plusw2	equ	0xFDB
 17574                           fsr2h	equ	0xFDA
 17575                           fsr2l	equ	0xFD9
 17576                           status	equ	0xFD8
 17577                           
 17578 ;; *************** function __get_output_power *****************
 17579 ;; Defined at:
 17580 ;;		line 99 in file "log.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;		None
 17583 ;; Auto vars:     Size  Location     Type
 17584 ;;  pwr             4   15[BANK0 ] unsigned long 
 17585 ;; Return value:  Size  Location     Type
 17586 ;;                  2   13[BANK0 ] unsigned int 
 17587 ;; Registers used:
 17588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17589 ;; Tracked objects:
 17590 ;;		On entry : 0/0
 17591 ;;		On exit  : 0/0
 17592 ;;		Unchanged: 0/0
 17593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17595 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17597 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17598 ;;Total ram usage:        6 bytes
 17599 ;; Hardware stack levels used:    1
 17600 ;; Hardware stack levels required when called:   11
 17601 ;; This function calls:
 17602 ;;		___lldiv
 17603 ;;		___lmul
 17604 ;; This function is called by:
 17605 ;;		_log_collect_data
 17606 ;; This function uses a non-reentrant model
 17607 ;;
 17608                           
 17609                           	psect	text84
 17610  013AAA                     __ptext84:
 17611                           	opt stack 0
 17612  013AAA                     __get_output_power:
 17613                           	opt stack 18
 17614                           
 17615                           ;log.c: 101: uint32_t pwr;;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) 
      +                          os.output_current);
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;incstack = 0
 17619  013AAA  EE22  F027         	lfsr	2,_os+39	;volatile
 17620  013AAE  CFDE F060          	movff	postinc2,___lmul@multiplier
 17621  013AB2  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17622  013AB6  0100               	movlb	0	; () banked
 17623  013AB8  0E00               	movlw	0
 17624  013ABA  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17625  013ABC  0EFF               	movlw	-1
 17626  013ABE  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17627  013AC0  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17628  013AC2  EE22  F032         	lfsr	2,_os+50	;volatile
 17629  013AC6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17630  013ACA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17631  013ACE  0E00               	movlw	0
 17632  013AD0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17633  013AD2  0EFF               	movlw	-1
 17634  013AD4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17635  013AD6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17636  013AD8  EC82  F0A5         	call	___lmul	;wreg free
 17637  013ADC  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 17638  013AE0  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 17639  013AE4  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 17640  013AE8  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 17641                           
 17642                           ;log.c: 103: pwr /= 1000;
 17643  013AEC  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 17644  013AF0  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 17645  013AF4  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 17646  013AF8  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 17647  013AFC  0EE8               	movlw	232
 17648  013AFE  0100               	movlb	0	; () banked
 17649  013B00  6F64               	movwf	___lldiv@divisor& (0+255),b
 17650  013B02  0E03               	movlw	3
 17651  013B04  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 17652  013B06  0E00               	movlw	0
 17653  013B08  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 17654  013B0A  0E00               	movlw	0
 17655  013B0C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 17656  013B0E  EC13  F09D         	call	___lldiv	;wreg free
 17657  013B12  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 17658  013B16  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 17659  013B1A  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 17660  013B1E  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 17661                           
 17662                           ;log.c: 104: return (uint16_t) pwr;
 17663  013B22  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 17664  013B26  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 17665  013B2A  0012               	return	
 17666  013B2C                     __end_of__get_output_power:
 17667                           	opt stack 0
 17668                           tblptru	equ	0xFF8
 17669                           tblptrh	equ	0xFF7
 17670                           tblptrl	equ	0xFF6
 17671                           tablat	equ	0xFF5
 17672                           prodh	equ	0xFF4
 17673                           prodl	equ	0xFF3
 17674                           intcon	equ	0xFF2
 17675                           intcon2	equ	0xFF1
 17676                           intcon3	equ	0xFF0
 17677                           postinc0	equ	0xFEE
 17678                           wreg	equ	0xFE8
 17679                           postinc1	equ	0xFE6
 17680                           postdec1	equ	0xFE5
 17681                           plusw1	equ	0xFE3
 17682                           fsr1h	equ	0xFE2
 17683                           fsr1l	equ	0xFE1
 17684                           indf2	equ	0xFDF
 17685                           postinc2	equ	0xFDE
 17686                           postdec2	equ	0xFDD
 17687                           plusw2	equ	0xFDB
 17688                           fsr2h	equ	0xFDA
 17689                           fsr2l	equ	0xFD9
 17690                           status	equ	0xFD8
 17691                           
 17692 ;; *************** function __get_input_power *****************
 17693 ;; Defined at:
 17694 ;;		line 91 in file "log.c"
 17695 ;; Parameters:    Size  Location     Type
 17696 ;;		None
 17697 ;; Auto vars:     Size  Location     Type
 17698 ;;  pwr             4   16[BANK0 ] long 
 17699 ;; Return value:  Size  Location     Type
 17700 ;;                  2   14[BANK0 ] unsigned int 
 17701 ;; Registers used:
 17702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17703 ;; Tracked objects:
 17704 ;;		On entry : 0/0
 17705 ;;		On exit  : 0/0
 17706 ;;		Unchanged: 0/0
 17707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17709 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17711 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17712 ;;Total ram usage:        6 bytes
 17713 ;; Hardware stack levels used:    1
 17714 ;; Hardware stack levels required when called:   11
 17715 ;; This function calls:
 17716 ;;		___aldiv
 17717 ;;		___lmul
 17718 ;; This function is called by:
 17719 ;;		_log_collect_data
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723                           	psect	text85
 17724  013B2C                     __ptext85:
 17725                           	opt stack 0
 17726  013B2C                     __get_input_power:
 17727                           	opt stack 18
 17728                           
 17729                           ;log.c: 93: int32_t pwr;;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.i
      +                          nput_current);
 17730                           
 17731                           ;incstack = 0
 17732  013B2C  EE22  F012         	lfsr	2,_os+18	;volatile
 17733  013B30  CFDE F060          	movff	postinc2,___lmul@multiplier
 17734  013B34  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17735  013B38  0100               	movlb	0	; () banked
 17736  013B3A  0E00               	movlw	0
 17737  013B3C  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17738  013B3E  0EFF               	movlw	-1
 17739  013B40  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17740  013B42  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17741  013B44  EE22  F01D         	lfsr	2,_os+29	;volatile
 17742  013B48  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17743  013B4C  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17744  013B50  0E00               	movlw	0
 17745  013B52  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17746  013B54  0EFF               	movlw	-1
 17747  013B56  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17748  013B58  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17749  013B5A  EC82  F0A5         	call	___lmul	;wreg free
 17750  013B5E  C060  F070         	movff	?___lmul,__get_input_power@pwr
 17751  013B62  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 17752  013B66  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 17753  013B6A  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 17754                           
 17755                           ;log.c: 95: pwr /= 1000;
 17756  013B6E  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 17757  013B72  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 17758  013B76  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 17759  013B7A  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 17760  013B7E  0EE8               	movlw	232
 17761  013B80  0100               	movlb	0	; () banked
 17762  013B82  6F64               	movwf	___aldiv@divisor& (0+255),b
 17763  013B84  0E03               	movlw	3
 17764  013B86  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 17765  013B88  0E00               	movlw	0
 17766  013B8A  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 17767  013B8C  0E00               	movlw	0
 17768  013B8E  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 17769  013B90  EC5C  F095         	call	___aldiv	;wreg free
 17770  013B94  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 17771  013B98  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 17772  013B9C  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 17773  013BA0  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 17774                           
 17775                           ;log.c: 96: return (uint16_t) pwr;
 17776  013BA4  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 17777  013BA8  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 17778  013BAC  0012               	return	
 17779  013BAE                     __end_of__get_input_power:
 17780                           	opt stack 0
 17781                           tblptru	equ	0xFF8
 17782                           tblptrh	equ	0xFF7
 17783                           tblptrl	equ	0xFF6
 17784                           tablat	equ	0xFF5
 17785                           prodh	equ	0xFF4
 17786                           prodl	equ	0xFF3
 17787                           intcon	equ	0xFF2
 17788                           intcon2	equ	0xFF1
 17789                           intcon3	equ	0xFF0
 17790                           postinc0	equ	0xFEE
 17791                           wreg	equ	0xFE8
 17792                           postinc1	equ	0xFE6
 17793                           postdec1	equ	0xFE5
 17794                           plusw1	equ	0xFE3
 17795                           fsr1h	equ	0xFE2
 17796                           fsr1l	equ	0xFE1
 17797                           indf2	equ	0xFDF
 17798                           postinc2	equ	0xFDE
 17799                           postdec2	equ	0xFDD
 17800                           plusw2	equ	0xFDB
 17801                           fsr2h	equ	0xFDA
 17802                           fsr2l	equ	0xFD9
 17803                           status	equ	0xFD8
 17804                           
 17805 ;; *************** function _i2c_eeprom_tasks *****************
 17806 ;; Defined at:
 17807 ;;		line 779 in file "i2c.c"
 17808 ;; Parameters:    Size  Location     Type
 17809 ;;		None
 17810 ;; Auto vars:     Size  Location     Type
 17811 ;;		None
 17812 ;; Return value:  Size  Location     Type
 17813 ;;                  1    wreg      void 
 17814 ;; Registers used:
 17815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17816 ;; Tracked objects:
 17817 ;;		On entry : 0/0
 17818 ;;		On exit  : 0/0
 17819 ;;		Unchanged: 0/0
 17820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17825 ;;Total ram usage:        0 bytes
 17826 ;; Hardware stack levels used:    1
 17827 ;; Hardware stack levels required when called:   14
 17828 ;; This function calls:
 17829 ;;		__write_calibration
 17830 ;;		_get_next_eeprom_write_task
 17831 ;; This function is called by:
 17832 ;;		_main
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836                           	psect	text86
 17837  014100                     __ptext86:
 17838                           	opt stack 0
 17839  014100                     _i2c_eeprom_tasks:
 17840                           	opt stack 16
 17841                           
 17842                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 17843                           
 17844                           ;incstack = 0
 17845  014100  D01C               	goto	l1672
 17846  014102                     
 17847                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 17848  014102  0E00               	movlw	0
 17849  014104  ECDD  F09A         	call	__write_calibration
 17850                           
 17851                           ;i2c.c: 787: break;
 17852  014108  0012               	return	
 17853  01410A                     
 17854                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 17855  01410A  0E01               	movlw	1
 17856  01410C  ECDD  F09A         	call	__write_calibration
 17857                           
 17858                           ;i2c.c: 790: break;
 17859  014110  0012               	return	
 17860  014112                     
 17861                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 17862  014112  0E02               	movlw	2
 17863  014114  ECDD  F09A         	call	__write_calibration
 17864                           
 17865                           ;i2c.c: 793: break;
 17866  014118  0012               	return	
 17867  01411A                     
 17868                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 17869  01411A  0E03               	movlw	3
 17870  01411C  ECDD  F09A         	call	__write_calibration
 17871                           
 17872                           ;i2c.c: 796: break;
 17873  014120  0012               	return	
 17874  014122                     
 17875                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 17876  014122  0E04               	movlw	4
 17877  014124  ECDD  F09A         	call	__write_calibration
 17878                           
 17879                           ;i2c.c: 799: break;
 17880  014128  0012               	return	
 17881  01412A                     
 17882                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 17883  01412A  0E05               	movlw	5
 17884  01412C  ECDD  F09A         	call	__write_calibration
 17885                           
 17886                           ;i2c.c: 802: break;
 17887  014130  0012               	return	
 17888  014132                     
 17889                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 17890  014132  0E06               	movlw	6
 17891  014134  ECDD  F09A         	call	__write_calibration
 17892                           
 17893                           ;i2c.c: 806: }
 17894                           
 17895                           ;i2c.c: 805: break;
 17896  014138  0012               	return	
 17897  01413A                     l1672:
 17898  01413A  ECA8  F0AB         	call	_get_next_eeprom_write_task	;wreg free
 17899                           
 17900                           ; Switch size 1, requested type "space"
 17901                           ; Number of cases is 8, Range of values is 1 to 8
 17902                           ; switch strategies available:
 17903                           ; Name         Instructions Cycles
 17904                           ; simple_byte           25    13 (average)
 17905                           ;	Chosen strategy is simple_byte
 17906  01413E  0A01               	xorlw	1	; case 1
 17907  014140  B4D8               	btfsc	status,2,c
 17908  014142  0012               	return	
 17909  014144  0A03               	xorlw	3	; case 2
 17910  014146  B4D8               	btfsc	status,2,c
 17911  014148  D7DC               	goto	l1675
 17912  01414A  0A01               	xorlw	1	; case 3
 17913  01414C  B4D8               	btfsc	status,2,c
 17914  01414E  D7DD               	goto	l1676
 17915  014150  0A07               	xorlw	7	; case 4
 17916  014152  B4D8               	btfsc	status,2,c
 17917  014154  D7DE               	goto	l1677
 17918  014156  0A01               	xorlw	1	; case 5
 17919  014158  B4D8               	btfsc	status,2,c
 17920  01415A  D7DF               	goto	l1678
 17921  01415C  0A03               	xorlw	3	; case 6
 17922  01415E  B4D8               	btfsc	status,2,c
 17923  014160  D7E0               	goto	l1679
 17924  014162  0A01               	xorlw	1	; case 7
 17925  014164  B4D8               	btfsc	status,2,c
 17926  014166  D7E1               	goto	l1680
 17927  014168  0A0F               	xorlw	15	; case 8
 17928  01416A  A4D8               	btfss	status,2,c
 17929  01416C  0012               	return	
 17930  01416E  D7E1               	goto	l1681
 17931  014170                     __end_of_i2c_eeprom_tasks:
 17932                           	opt stack 0
 17933                           tblptru	equ	0xFF8
 17934                           tblptrh	equ	0xFF7
 17935                           tblptrl	equ	0xFF6
 17936                           tablat	equ	0xFF5
 17937                           prodh	equ	0xFF4
 17938                           prodl	equ	0xFF3
 17939                           intcon	equ	0xFF2
 17940                           intcon2	equ	0xFF1
 17941                           intcon3	equ	0xFF0
 17942                           postinc0	equ	0xFEE
 17943                           wreg	equ	0xFE8
 17944                           postinc1	equ	0xFE6
 17945                           postdec1	equ	0xFE5
 17946                           plusw1	equ	0xFE3
 17947                           fsr1h	equ	0xFE2
 17948                           fsr1l	equ	0xFE1
 17949                           indf2	equ	0xFDF
 17950                           postinc2	equ	0xFDE
 17951                           postdec2	equ	0xFDD
 17952                           plusw2	equ	0xFDB
 17953                           fsr2h	equ	0xFDA
 17954                           fsr2l	equ	0xFD9
 17955                           status	equ	0xFD8
 17956                           
 17957 ;; *************** function _get_next_eeprom_write_task *****************
 17958 ;; Defined at:
 17959 ;;		line 759 in file "i2c.c"
 17960 ;; Parameters:    Size  Location     Type
 17961 ;;		None
 17962 ;; Auto vars:     Size  Location     Type
 17963 ;;  task            1    0[BANK0 ] enum E6775
 17964 ;; Return value:  Size  Location     Type
 17965 ;;                  1    wreg      enum E6775
 17966 ;; Registers used:
 17967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17968 ;; Tracked objects:
 17969 ;;		On entry : 0/0
 17970 ;;		On exit  : 0/0
 17971 ;;		Unchanged: 0/0
 17972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17977 ;;Total ram usage:        1 bytes
 17978 ;; Hardware stack levels used:    1
 17979 ;; Hardware stack levels required when called:   10
 17980 ;; This function calls:
 17981 ;;		Nothing
 17982 ;; This function is called by:
 17983 ;;		_i2c_eeprom_tasks
 17984 ;; This function uses a non-reentrant model
 17985 ;;
 17986                           
 17987                           	psect	text87
 17988  015750                     __ptext87:
 17989                           	opt stack 0
 17990  015750                     _get_next_eeprom_write_task:
 17991                           	opt stack 19
 17992                           
 17993                           ;i2c.c: 761: eeprom_write_task_t task;;i2c.c: 762: if (task_list_read_index == task_list
      +                          _write_index)
 17994                           
 17995                           ;incstack = 0
 17996  015750  501D               	movf	_task_list_write_index,w,c
 17997  015752  181E               	xorwf	_task_list_read_index,w,c
 17998  015754  A4D8               	btfss	status,2,c
 17999  015756  D002               	goto	l1667
 18000                           
 18001                           ;i2c.c: 763: {;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 18002  015758  0E00               	movlw	0
 18003                           
 18004                           ;i2c.c: 766: }
 18005  01575A  0012               	return	
 18006  01575C                     l1667:
 18007                           
 18008                           ;i2c.c: 767: else;i2c.c: 768: {;i2c.c: 770: task = task_list[task_list_read_index];
 18009  01575C  501E               	movf	_task_list_read_index,w,c
 18010  01575E  0D01               	mullw	1
 18011  015760  0E68               	movlw	low _task_list
 18012  015762  24F3               	addwf	prodl,w,c
 18013  015764  6ED9               	movwf	fsr2l,c
 18014  015766  0E04               	movlw	high _task_list
 18015  015768  20F4               	addwfc	prodh,w,c
 18016  01576A  6EDA               	movwf	fsr2h,c
 18017  01576C  50DF               	movf	indf2,w,c
 18018  01576E  0100               	movlb	0	; () banked
 18019  015770  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 18020                           
 18021                           ; BSR set to: 0
 18022                           ;i2c.c: 772: ++task_list_read_index;
 18023  015772  2A1E               	incf	_task_list_read_index,f,c
 18024                           
 18025                           ; BSR set to: 0
 18026                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 18027  015774  0E0F               	movlw	15
 18028  015776  161E               	andwf	_task_list_read_index,f,c
 18029                           
 18030                           ; BSR set to: 0
 18031                           ;i2c.c: 775: return task;
 18032  015778  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 18033                           
 18034                           ; BSR set to: 0
 18035  01577A  0012               	return	
 18036  01577C                     __end_of_get_next_eeprom_write_task:
 18037                           	opt stack 0
 18038                           tblptru	equ	0xFF8
 18039                           tblptrh	equ	0xFF7
 18040                           tblptrl	equ	0xFF6
 18041                           tablat	equ	0xFF5
 18042                           prodh	equ	0xFF4
 18043                           prodl	equ	0xFF3
 18044                           intcon	equ	0xFF2
 18045                           intcon2	equ	0xFF1
 18046                           intcon3	equ	0xFF0
 18047                           postinc0	equ	0xFEE
 18048                           wreg	equ	0xFE8
 18049                           postinc1	equ	0xFE6
 18050                           postdec1	equ	0xFE5
 18051                           plusw1	equ	0xFE3
 18052                           fsr1h	equ	0xFE2
 18053                           fsr1l	equ	0xFE1
 18054                           indf2	equ	0xFDF
 18055                           postinc2	equ	0xFDE
 18056                           postdec2	equ	0xFDD
 18057                           plusw2	equ	0xFDB
 18058                           fsr2h	equ	0xFDA
 18059                           fsr2l	equ	0xFD9
 18060                           status	equ	0xFD8
 18061                           
 18062 ;; *************** function __write_calibration *****************
 18063 ;; Defined at:
 18064 ;;		line 715 in file "i2c.c"
 18065 ;; Parameters:    Size  Location     Type
 18066 ;;  index           1    wreg     enum E6665
 18067 ;; Auto vars:     Size  Location     Type
 18068 ;;  index           1   59[BANK0 ] enum E6665
 18069 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 18070 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 18071 ;;		 -> calibrationParameters(84), 
 18072 ;;  addr            2   55[BANK0 ] unsigned int 
 18073 ;;  cntr            1   60[BANK0 ] unsigned char 
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  1    wreg      void 
 18076 ;; Registers used:
 18077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18084 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18086 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18087 ;;Total ram usage:       24 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:   13
 18090 ;; This function calls:
 18091 ;;		_i2c_eeprom_write
 18092 ;; This function is called by:
 18093 ;;		_i2c_eeprom_tasks
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           	psect	text88
 18098  0135BA                     __ptext88:
 18099                           	opt stack 0
 18100  0135BA                     __write_calibration:
 18101                           	opt stack 16
 18102                           
 18103                           ;incstack = 0
 18104                           ;__write_calibration@index stored from wreg
 18105  0135BA  0100               	movlb	0	; () banked
 18106  0135BC  6F9B               	movwf	__write_calibration@index& (0+255),b
 18107                           
 18108                           ;i2c.c: 717: uint8_t buffer[16];;i2c.c: 718: uint8_t *ptr;;i2c.c: 719: uint8_t cntr;;i2c
      +                          .c: 720: uint16_t addr;;i2c.c: 721: buffer[0] = 0x77;
 18109  0135BE  0E77               	movlw	119
 18110  0135C0  0100               	movlb	0	; () banked
 18111  0135C2  6F87               	movwf	__write_calibration@buffer& (0+255),b
 18112                           
 18113                           ;i2c.c: 722: buffer[1] = 0x55;
 18114  0135C4  0E55               	movlw	85
 18115  0135C6  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 18116                           
 18117                           ;i2c.c: 723: buffer[2] = 0x33;
 18118  0135C8  0E33               	movlw	51
 18119  0135CA  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 18123  0135CC  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 18127  0135D0  519B               	movf	__write_calibration@index& (0+255),w,b
 18128  0135D2  0D0C               	mullw	12
 18129  0135D4  0E00               	movlw	low _calibrationParameters
 18130  0135D6  24F3               	addwf	prodl,w,c
 18131  0135D8  6F99               	movwf	__write_calibration@ptr& (0+255),b
 18132  0135DA  0E03               	movlw	high _calibrationParameters
 18133  0135DC  20F4               	addwfc	prodh,w,c
 18134  0135DE  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 18138  0135E0  0E04               	movlw	4
 18139  0135E2  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 18140  0135E4                     l21007:
 18141                           
 18142                           ; BSR set to: 0
 18143  0135E4  0E0F               	movlw	15
 18144  0135E6  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 18145  0135E8  D001               	goto	l1652
 18146  0135EA  D012               	goto	u19900
 18147  0135EC                     l1652:
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;i2c.c: 727: {;i2c.c: 728: buffer[cntr] = *ptr;
 18151                           
 18152                           ; BSR set to: 0
 18153  0135EC  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 18154  0135F0  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 18155  0135F4  519C               	movf	__write_calibration@cntr& (0+255),w,b
 18156  0135F6  0D01               	mullw	1
 18157  0135F8  0E87               	movlw	low __write_calibration@buffer
 18158  0135FA  24F3               	addwf	prodl,w,c
 18159  0135FC  6EE1               	movwf	fsr1l,c
 18160  0135FE  0E00               	movlw	high __write_calibration@buffer
 18161  013600  20F4               	addwfc	prodh,w,c
 18162  013602  6EE2               	movwf	fsr1h,c
 18163  013604  CFDF FFE7          	movff	indf2,indf1
 18164                           
 18165                           ; BSR set to: 0
 18166                           ;i2c.c: 729: ++ptr;
 18167  013608  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 18168  01360A  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 18169                           
 18170                           ; BSR set to: 0
 18171  01360C  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 18172  01360E  D7EA               	goto	l21007
 18173  013610                     u19900:
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;i2c.c: 730: };i2c.c: 731: addr = 0x0200 + (index<<4);
 18177                           
 18178                           ; BSR set to: 0
 18179  013610  519B               	movf	__write_calibration@index& (0+255),w,b
 18180  013612  6F85               	movwf	??__write_calibration& (0+255),b
 18181  013614  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 18182  013616  3B85               	swapf	??__write_calibration& (0+255),f,b
 18183  013618  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 18184  01361A  0EF0               	movlw	240
 18185  01361C  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 18186  01361E  5185               	movf	??__write_calibration& (0+255),w,b
 18187  013620  0B0F               	andlw	15
 18188  013622  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 18189  013624  0EF0               	movlw	240
 18190  013626  1785               	andwf	??__write_calibration& (0+255),f,b
 18191  013628  0E00               	movlw	0
 18192  01362A  2585               	addwf	??__write_calibration& (0+255),w,b
 18193  01362C  6F97               	movwf	__write_calibration@addr& (0+255),b
 18194  01362E  0E02               	movlw	2
 18195  013630  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 18196  013632  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 18200  013634  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 18201  013638  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 18202  01363C  0E87               	movlw	low __write_calibration@buffer
 18203  01363E  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 18204  013640  0E00               	movlw	high __write_calibration@buffer
 18205  013642  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 18206  013644  0E10               	movlw	16
 18207  013646  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 18208  013648  EC18  F09E         	call	_i2c_eeprom_write	;wreg free
 18209  01364C  0012               	return		;funcret
 18210  01364E                     __end_of__write_calibration:
 18211                           	opt stack 0
 18212                           tblptru	equ	0xFF8
 18213                           tblptrh	equ	0xFF7
 18214                           tblptrl	equ	0xFF6
 18215                           tablat	equ	0xFF5
 18216                           prodh	equ	0xFF4
 18217                           prodl	equ	0xFF3
 18218                           intcon	equ	0xFF2
 18219                           intcon2	equ	0xFF1
 18220                           intcon3	equ	0xFF0
 18221                           postinc0	equ	0xFEE
 18222                           wreg	equ	0xFE8
 18223                           indf1	equ	0xFE7
 18224                           postinc1	equ	0xFE6
 18225                           postdec1	equ	0xFE5
 18226                           plusw1	equ	0xFE3
 18227                           fsr1h	equ	0xFE2
 18228                           fsr1l	equ	0xFE1
 18229                           indf2	equ	0xFDF
 18230                           postinc2	equ	0xFDE
 18231                           postdec2	equ	0xFDD
 18232                           plusw2	equ	0xFDB
 18233                           fsr2h	equ	0xFDA
 18234                           fsr2l	equ	0xFD9
 18235                           status	equ	0xFD8
 18236                           
 18237 ;; *************** function _i2c_adc_start *****************
 18238 ;; Defined at:
 18239 ;;		line 467 in file "i2c.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;  channel         1    wreg     enum E6747
 18242 ;;  resolution      1   10[BANK0 ] enum E6753
 18243 ;;  gain            1   11[BANK0 ] enum E6759
 18244 ;; Auto vars:     Size  Location     Type
 18245 ;;  channel         1   12[BANK0 ] enum E6747
 18246 ;;  configuratio    1   13[BANK0 ] unsigned char 
 18247 ;; Return value:  Size  Location     Type
 18248 ;;                  1    wreg      void 
 18249 ;; Registers used:
 18250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18251 ;; Tracked objects:
 18252 ;;		On entry : 0/0
 18253 ;;		On exit  : 0/0
 18254 ;;		Unchanged: 0/0
 18255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18259 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18260 ;;Total ram usage:        4 bytes
 18261 ;; Hardware stack levels used:    1
 18262 ;; Hardware stack levels required when called:   12
 18263 ;; This function calls:
 18264 ;;		__i2c_write
 18265 ;;		_i2c_set_frequency
 18266 ;; This function is called by:
 18267 ;;		_main
 18268 ;; This function uses a non-reentrant model
 18269 ;;
 18270                           
 18271                           	psect	text89
 18272  0153D2                     __ptext89:
 18273                           	opt stack 0
 18274  0153D2                     _i2c_adc_start:
 18275                           	opt stack 18
 18276                           
 18277                           ;incstack = 0
 18278                           ;i2c_adc_start@channel stored from wreg
 18279  0153D2  0100               	movlb	0	; () banked
 18280  0153D4  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 18281                           
 18282                           ;i2c.c: 469: uint8_t configuration_byte;;i2c.c: 470: configuration_byte = 0b10000000;
 18283  0153D6  0E80               	movlw	128
 18284  0153D8  0100               	movlb	0	; () banked
 18285  0153DA  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 18289  0153DC  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 18290  0153DE  46E8               	rlncf	wreg,f,c
 18291  0153E0  0BE0               	andlw	224
 18292  0153E2  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 18296  0153E4  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 18297  0153E6  46E8               	rlncf	wreg,f,c
 18298  0153E8  0BFC               	andlw	252
 18299  0153EA  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;i2c.c: 473: configuration_byte |= gain;
 18303  0153EC  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 18304  0153EE  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18308  0153F0  0E02               	movlw	2
 18309  0153F2  ECB8  F0A0         	call	_i2c_set_frequency
 18310                           
 18311                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 18312  0153F6  0E6D               	movlw	low i2c_adc_start@configuration_byte
 18313  0153F8  0100               	movlb	0	; () banked
 18314  0153FA  6F65               	movwf	__i2c_write@data& (0+255),b
 18315  0153FC  0E00               	movlw	high i2c_adc_start@configuration_byte
 18316  0153FE  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 18317  015400  0E01               	movlw	1
 18318  015402  6F67               	movwf	__i2c_write@length& (0+255),b
 18319  015404  0ED0               	movlw	208
 18320  015406  EC27  F0A7         	call	__i2c_write
 18321  01540A  0012               	return		;funcret
 18322  01540C                     __end_of_i2c_adc_start:
 18323                           	opt stack 0
 18324                           tblptru	equ	0xFF8
 18325                           tblptrh	equ	0xFF7
 18326                           tblptrl	equ	0xFF6
 18327                           tablat	equ	0xFF5
 18328                           prodh	equ	0xFF4
 18329                           prodl	equ	0xFF3
 18330                           intcon	equ	0xFF2
 18331                           intcon2	equ	0xFF1
 18332                           intcon3	equ	0xFF0
 18333                           postinc0	equ	0xFEE
 18334                           wreg	equ	0xFE8
 18335                           indf1	equ	0xFE7
 18336                           postinc1	equ	0xFE6
 18337                           postdec1	equ	0xFE5
 18338                           plusw1	equ	0xFE3
 18339                           fsr1h	equ	0xFE2
 18340                           fsr1l	equ	0xFE1
 18341                           indf2	equ	0xFDF
 18342                           postinc2	equ	0xFDE
 18343                           postdec2	equ	0xFDD
 18344                           plusw2	equ	0xFDB
 18345                           fsr2h	equ	0xFDA
 18346                           fsr2l	equ	0xFD9
 18347                           status	equ	0xFD8
 18348                           
 18349 ;; *************** function _i2c_adc_read *****************
 18350 ;; Defined at:
 18351 ;;		line 481 in file "i2c.c"
 18352 ;; Parameters:    Size  Location     Type
 18353 ;;		None
 18354 ;; Auto vars:     Size  Location     Type
 18355 ;;  result          2    8[BANK0 ] int 
 18356 ;; Return value:  Size  Location     Type
 18357 ;;                  2    5[BANK0 ] int 
 18358 ;; Registers used:
 18359 ;;		wreg, status,2, status,0, cstack
 18360 ;; Tracked objects:
 18361 ;;		On entry : 0/0
 18362 ;;		On exit  : 0/0
 18363 ;;		Unchanged: 0/0
 18364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18366 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18367 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18368 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18369 ;;Total ram usage:        5 bytes
 18370 ;; Hardware stack levels used:    1
 18371 ;; Hardware stack levels required when called:   11
 18372 ;; This function calls:
 18373 ;;		__i2c_acknowledge
 18374 ;;		__i2c_get
 18375 ;;		__i2c_not_acknowledge
 18376 ;;		__i2c_send
 18377 ;;		__i2c_start
 18378 ;;		__i2c_stop
 18379 ;;		__i2c_wait_idle
 18380 ;;		_i2c_set_frequency
 18381 ;; This function is called by:
 18382 ;;		_main
 18383 ;; This function uses a non-reentrant model
 18384 ;;
 18385                           
 18386                           	psect	text90
 18387  014D5A                     __ptext90:
 18388                           	opt stack 0
 18389  014D5A                     _i2c_adc_read:
 18390                           	opt stack 19
 18391                           
 18392                           ;i2c.c: 483: int16_t result;;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18393                           
 18394                           ;incstack = 0
 18395  014D5A  0E02               	movlw	2
 18396  014D5C  ECB8  F0A0         	call	_i2c_set_frequency
 18397                           
 18398                           ;i2c.c: 488: _i2c_wait_idle();
 18399  014D60  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18400                           
 18401                           ;i2c.c: 489: _i2c_start();
 18402  014D64  EC67  F0AF         	call	__i2c_start	;wreg free
 18403                           
 18404                           ;i2c.c: 490: _i2c_wait_idle();
 18405  014D68  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18406                           
 18407                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 18408  014D6C  0ED1               	movlw	209
 18409  014D6E  EC5E  F0AF         	call	__i2c_send
 18410                           
 18411                           ;i2c.c: 492: _i2c_wait_idle();
 18412  014D72  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18413                           
 18414                           ;i2c.c: 493: result = _i2c_get();
 18415  014D76  EC4F  F0AF         	call	__i2c_get	;wreg free
 18416  014D7A  0100               	movlb	0	; () banked
 18417  014D7C  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18418  014D7E  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18419  014D80  6F68               	movwf	i2c_adc_read@result& (0+255),b
 18420  014D82  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;i2c.c: 494: result <<= 8;
 18424  014D84  5168               	movf	i2c_adc_read@result& (0+255),w,b
 18425  014D86  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 18426  014D88  6B68               	clrf	i2c_adc_read@result& (0+255),b
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;i2c.c: 495: _i2c_acknowledge();
 18430  014D8A  EC54  F0AF         	call	__i2c_acknowledge	;wreg free
 18431                           
 18432                           ;i2c.c: 496: result |= _i2c_get();
 18433  014D8E  EC4F  F0AF         	call	__i2c_get	;wreg free
 18434  014D92  0100               	movlb	0	; () banked
 18435  014D94  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18436  014D96  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18437  014D98  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;i2c.c: 497: _i2c_not_acknowledge();
 18441  014D9A  EC4A  F0AF         	call	__i2c_not_acknowledge	;wreg free
 18442                           
 18443                           ;i2c.c: 498: _i2c_stop();
 18444  014D9E  EC63  F0AF         	call	__i2c_stop	;wreg free
 18445                           
 18446                           ;i2c.c: 500: return result;
 18447  014DA2  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 18448  014DA6  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 18449  014DAA  0012               	return	
 18450  014DAC                     __end_of_i2c_adc_read:
 18451                           	opt stack 0
 18452                           tblptru	equ	0xFF8
 18453                           tblptrh	equ	0xFF7
 18454                           tblptrl	equ	0xFF6
 18455                           tablat	equ	0xFF5
 18456                           prodh	equ	0xFF4
 18457                           prodl	equ	0xFF3
 18458                           intcon	equ	0xFF2
 18459                           intcon2	equ	0xFF1
 18460                           intcon3	equ	0xFF0
 18461                           postinc0	equ	0xFEE
 18462                           wreg	equ	0xFE8
 18463                           indf1	equ	0xFE7
 18464                           postinc1	equ	0xFE6
 18465                           postdec1	equ	0xFE5
 18466                           plusw1	equ	0xFE3
 18467                           fsr1h	equ	0xFE2
 18468                           fsr1l	equ	0xFE1
 18469                           indf2	equ	0xFDF
 18470                           postinc2	equ	0xFDE
 18471                           postdec2	equ	0xFDD
 18472                           plusw2	equ	0xFDB
 18473                           fsr2h	equ	0xFDA
 18474                           fsr2l	equ	0xFD9
 18475                           status	equ	0xFD8
 18476                           
 18477 ;; *************** function __i2c_not_acknowledge *****************
 18478 ;; Defined at:
 18479 ;;		line 87 in file "i2c.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;		None
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;		None
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  1    wreg      void 
 18486 ;; Registers used:
 18487 ;;		None
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18497 ;;Total ram usage:        0 bytes
 18498 ;; Hardware stack levels used:    1
 18499 ;; Hardware stack levels required when called:   10
 18500 ;; This function calls:
 18501 ;;		Nothing
 18502 ;; This function is called by:
 18503 ;;		__i2c_read
 18504 ;;		_i2c_adc_read
 18505 ;; This function uses a non-reentrant model
 18506 ;;
 18507                           
 18508                           	psect	text91
 18509  015E94                     __ptext91:
 18510                           	opt stack 0
 18511  015E94                     __i2c_not_acknowledge:
 18512                           	opt stack 15
 18513                           
 18514                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 18515                           
 18516                           ;incstack = 0
 18517  015E94  8AC5               	bsf	4037,5,c	;volatile
 18518                           
 18519                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 18520  015E96  88C5               	bsf	4037,4,c	;volatile
 18521  015E98  A8C5               	btfss	4037,4,c	;volatile
 18522  015E9A  0012               	return	
 18523  015E9C  D7FD               	goto	l1522
 18524  015E9E                     __end_of__i2c_not_acknowledge:
 18525                           	opt stack 0
 18526                           tblptru	equ	0xFF8
 18527                           tblptrh	equ	0xFF7
 18528                           tblptrl	equ	0xFF6
 18529                           tablat	equ	0xFF5
 18530                           prodh	equ	0xFF4
 18531                           prodl	equ	0xFF3
 18532                           intcon	equ	0xFF2
 18533                           intcon2	equ	0xFF1
 18534                           intcon3	equ	0xFF0
 18535                           postinc0	equ	0xFEE
 18536                           wreg	equ	0xFE8
 18537                           indf1	equ	0xFE7
 18538                           postinc1	equ	0xFE6
 18539                           postdec1	equ	0xFE5
 18540                           plusw1	equ	0xFE3
 18541                           fsr1h	equ	0xFE2
 18542                           fsr1l	equ	0xFE1
 18543                           indf2	equ	0xFDF
 18544                           postinc2	equ	0xFDE
 18545                           postdec2	equ	0xFDD
 18546                           plusw2	equ	0xFDB
 18547                           fsr2h	equ	0xFDA
 18548                           fsr2l	equ	0xFD9
 18549                           status	equ	0xFD8
 18550                           
 18551 ;; *************** function __i2c_get *****************
 18552 ;; Defined at:
 18553 ;;		line 64 in file "i2c.c"
 18554 ;; Parameters:    Size  Location     Type
 18555 ;;		None
 18556 ;; Auto vars:     Size  Location     Type
 18557 ;;		None
 18558 ;; Return value:  Size  Location     Type
 18559 ;;                  1    wreg      unsigned char 
 18560 ;; Registers used:
 18561 ;;		wreg, status,2
 18562 ;; Tracked objects:
 18563 ;;		On entry : 0/0
 18564 ;;		On exit  : 0/0
 18565 ;;		Unchanged: 0/0
 18566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18571 ;;Total ram usage:        0 bytes
 18572 ;; Hardware stack levels used:    1
 18573 ;; Hardware stack levels required when called:   10
 18574 ;; This function calls:
 18575 ;;		Nothing
 18576 ;; This function is called by:
 18577 ;;		__i2c_read
 18578 ;;		_i2c_adc_read
 18579 ;; This function uses a non-reentrant model
 18580 ;;
 18581                           
 18582                           	psect	text92
 18583  015E9E                     __ptext92:
 18584                           	opt stack 0
 18585  015E9E                     __i2c_get:
 18586                           	opt stack 15
 18587                           
 18588                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 18589                           
 18590                           ;incstack = 0
 18591  015E9E  86C5               	bsf	4037,3,c	;volatile
 18592  015EA0  B6C5               	btfsc	4037,3,c	;volatile
 18593  015EA2  D7FE               	goto	l1504
 18594                           
 18595                           ;i2c.c: 68: return SSP1BUF;
 18596  015EA4  50C9               	movf	4041,w,c	;volatile
 18597  015EA6  0012               	return	
 18598  015EA8                     __end_of__i2c_get:
 18599                           	opt stack 0
 18600                           tblptru	equ	0xFF8
 18601                           tblptrh	equ	0xFF7
 18602                           tblptrl	equ	0xFF6
 18603                           tablat	equ	0xFF5
 18604                           prodh	equ	0xFF4
 18605                           prodl	equ	0xFF3
 18606                           intcon	equ	0xFF2
 18607                           intcon2	equ	0xFF1
 18608                           intcon3	equ	0xFF0
 18609                           postinc0	equ	0xFEE
 18610                           wreg	equ	0xFE8
 18611                           indf1	equ	0xFE7
 18612                           postinc1	equ	0xFE6
 18613                           postdec1	equ	0xFE5
 18614                           plusw1	equ	0xFE3
 18615                           fsr1h	equ	0xFE2
 18616                           fsr1l	equ	0xFE1
 18617                           indf2	equ	0xFDF
 18618                           postinc2	equ	0xFDE
 18619                           postdec2	equ	0xFDD
 18620                           plusw2	equ	0xFDB
 18621                           fsr2h	equ	0xFDA
 18622                           fsr2l	equ	0xFD9
 18623                           status	equ	0xFD8
 18624                           
 18625 ;; *************** function __i2c_acknowledge *****************
 18626 ;; Defined at:
 18627 ;;		line 79 in file "i2c.c"
 18628 ;; Parameters:    Size  Location     Type
 18629 ;;		None
 18630 ;; Auto vars:     Size  Location     Type
 18631 ;;		None
 18632 ;; Return value:  Size  Location     Type
 18633 ;;                  1    wreg      void 
 18634 ;; Registers used:
 18635 ;;		None
 18636 ;; Tracked objects:
 18637 ;;		On entry : 0/0
 18638 ;;		On exit  : 0/0
 18639 ;;		Unchanged: 0/0
 18640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18645 ;;Total ram usage:        0 bytes
 18646 ;; Hardware stack levels used:    1
 18647 ;; Hardware stack levels required when called:   10
 18648 ;; This function calls:
 18649 ;;		Nothing
 18650 ;; This function is called by:
 18651 ;;		__i2c_read
 18652 ;;		_i2c_adc_read
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656                           	psect	text93
 18657  015EA8                     __ptext93:
 18658                           	opt stack 0
 18659  015EA8                     __i2c_acknowledge:
 18660                           	opt stack 15
 18661                           
 18662                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 18663                           
 18664                           ;incstack = 0
 18665  015EA8  9AC5               	bcf	4037,5,c	;volatile
 18666                           
 18667                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 18668  015EAA  88C5               	bsf	4037,4,c	;volatile
 18669  015EAC  A8C5               	btfss	4037,4,c	;volatile
 18670  015EAE  0012               	return	
 18671  015EB0  D7FD               	goto	l1516
 18672  015EB2                     __end_of__i2c_acknowledge:
 18673                           	opt stack 0
 18674                           tblptru	equ	0xFF8
 18675                           tblptrh	equ	0xFF7
 18676                           tblptrl	equ	0xFF6
 18677                           tablat	equ	0xFF5
 18678                           prodh	equ	0xFF4
 18679                           prodl	equ	0xFF3
 18680                           intcon	equ	0xFF2
 18681                           intcon2	equ	0xFF1
 18682                           intcon3	equ	0xFF0
 18683                           postinc0	equ	0xFEE
 18684                           wreg	equ	0xFE8
 18685                           indf1	equ	0xFE7
 18686                           postinc1	equ	0xFE6
 18687                           postdec1	equ	0xFE5
 18688                           plusw1	equ	0xFE3
 18689                           fsr1h	equ	0xFE2
 18690                           fsr1l	equ	0xFE1
 18691                           indf2	equ	0xFDF
 18692                           postinc2	equ	0xFDE
 18693                           postdec2	equ	0xFDD
 18694                           plusw2	equ	0xFDB
 18695                           fsr2h	equ	0xFDA
 18696                           fsr2l	equ	0xFD9
 18697                           status	equ	0xFD8
 18698                           
 18699 ;; *************** function _display_update *****************
 18700 ;; Defined at:
 18701 ;;		line 174 in file "display.c"
 18702 ;; Parameters:    Size  Location     Type
 18703 ;;		None
 18704 ;; Auto vars:     Size  Location     Type
 18705 ;;		None
 18706 ;; Return value:  Size  Location     Type
 18707 ;;                  1    wreg      void 
 18708 ;; Registers used:
 18709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18710 ;; Tracked objects:
 18711 ;;		On entry : 0/0
 18712 ;;		On exit  : 0/0
 18713 ;;		Unchanged: 0/0
 18714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18719 ;;Total ram usage:        0 bytes
 18720 ;; Hardware stack levels used:    1
 18721 ;; Hardware stack levels required when called:   14
 18722 ;; This function calls:
 18723 ;;		_i2c_display_cursor
 18724 ;;		_i2c_display_write_fixed
 18725 ;; This function is called by:
 18726 ;;		_main
 18727 ;; This function uses a non-reentrant model
 18728 ;;
 18729                           
 18730                           	psect	text94
 18731  013F24                     __ptext94:
 18732                           	opt stack 0
 18733  013F24                     _display_update:
 18734                           	opt stack 16
 18735                           
 18736                           ;display.c: 176: i2c_display_cursor(0, 0);
 18737                           
 18738                           ;incstack = 0
 18739  013F24  0E00               	movlw	0
 18740  013F26  0100               	movlb	0	; () banked
 18741  013F28  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18742  013F2A  0E00               	movlw	0
 18743  013F2C  EC15  F0AC         	call	_i2c_display_cursor
 18744                           
 18745                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 18746  013F30  0E54               	movlw	low _display_content
 18747  013F32  0100               	movlb	0	; () banked
 18748  013F34  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18749  013F36  0E03               	movlw	high _display_content
 18750  013F38  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18751  013F3A  0E14               	movlw	20
 18752  013F3C  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18753  013F3E  ECCE  F0A4         	call	_i2c_display_write_fixed	;wreg free
 18754                           
 18755                           ;display.c: 178: i2c_display_cursor(1, 0);
 18756  013F42  0E00               	movlw	0
 18757  013F44  0100               	movlb	0	; () banked
 18758  013F46  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18759  013F48  0E01               	movlw	1
 18760  013F4A  EC15  F0AC         	call	_i2c_display_cursor
 18761                           
 18762                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 18763  013F4E  0E68               	movlw	low (_display_content+20)
 18764  013F50  0100               	movlb	0	; () banked
 18765  013F52  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18766  013F54  0E03               	movlw	high (_display_content+20)
 18767  013F56  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18768  013F58  0E14               	movlw	20
 18769  013F5A  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18770  013F5C  ECCE  F0A4         	call	_i2c_display_write_fixed	;wreg free
 18771                           
 18772                           ;display.c: 180: i2c_display_cursor(2, 0);
 18773  013F60  0E00               	movlw	0
 18774  013F62  0100               	movlb	0	; () banked
 18775  013F64  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18776  013F66  0E02               	movlw	2
 18777  013F68  EC15  F0AC         	call	_i2c_display_cursor
 18778                           
 18779                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 18780  013F6C  0E7C               	movlw	low (_display_content+40)
 18781  013F6E  0100               	movlb	0	; () banked
 18782  013F70  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18783  013F72  0E03               	movlw	high (_display_content+40)
 18784  013F74  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18785  013F76  0E14               	movlw	20
 18786  013F78  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18787  013F7A  ECCE  F0A4         	call	_i2c_display_write_fixed	;wreg free
 18788                           
 18789                           ;display.c: 182: i2c_display_cursor(3, 0);
 18790  013F7E  0E00               	movlw	0
 18791  013F80  0100               	movlb	0	; () banked
 18792  013F82  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18793  013F84  0E03               	movlw	3
 18794  013F86  EC15  F0AC         	call	_i2c_display_cursor
 18795                           
 18796                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 18797  013F8A  0E90               	movlw	low (_display_content+60)
 18798  013F8C  0100               	movlb	0	; () banked
 18799  013F8E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18800  013F90  0E03               	movlw	high (_display_content+60)
 18801  013F92  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18802  013F94  0E14               	movlw	20
 18803  013F96  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18804  013F98  ECCE  F0A4         	call	_i2c_display_write_fixed	;wreg free
 18805  013F9C  0012               	return		;funcret
 18806  013F9E                     __end_of_display_update:
 18807                           	opt stack 0
 18808                           tblptru	equ	0xFF8
 18809                           tblptrh	equ	0xFF7
 18810                           tblptrl	equ	0xFF6
 18811                           tablat	equ	0xFF5
 18812                           prodh	equ	0xFF4
 18813                           prodl	equ	0xFF3
 18814                           intcon	equ	0xFF2
 18815                           intcon2	equ	0xFF1
 18816                           intcon3	equ	0xFF0
 18817                           postinc0	equ	0xFEE
 18818                           wreg	equ	0xFE8
 18819                           indf1	equ	0xFE7
 18820                           postinc1	equ	0xFE6
 18821                           postdec1	equ	0xFE5
 18822                           plusw1	equ	0xFE3
 18823                           fsr1h	equ	0xFE2
 18824                           fsr1l	equ	0xFE1
 18825                           indf2	equ	0xFDF
 18826                           postinc2	equ	0xFDE
 18827                           postdec2	equ	0xFDD
 18828                           plusw2	equ	0xFDB
 18829                           fsr2h	equ	0xFDA
 18830                           fsr2l	equ	0xFD9
 18831                           status	equ	0xFD8
 18832                           
 18833 ;; *************** function _i2c_display_write_fixed *****************
 18834 ;; Defined at:
 18835 ;;		line 364 in file "i2c.c"
 18836 ;; Parameters:    Size  Location     Type
 18837 ;;  data            2    5[BANK0 ] PTR unsigned char 
 18838 ;;		 -> display_content(80), 
 18839 ;;  length          1    7[BANK0 ] unsigned char 
 18840 ;; Auto vars:     Size  Location     Type
 18841 ;;  pos             1    8[BANK0 ] unsigned char 
 18842 ;; Return value:  Size  Location     Type
 18843 ;;                  1    wreg      void 
 18844 ;; Registers used:
 18845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18846 ;; Tracked objects:
 18847 ;;		On entry : 0/0
 18848 ;;		On exit  : 0/0
 18849 ;;		Unchanged: 0/0
 18850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18854 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18855 ;;Total ram usage:        4 bytes
 18856 ;; Hardware stack levels used:    1
 18857 ;; Hardware stack levels required when called:   11
 18858 ;; This function calls:
 18859 ;;		__i2c_send
 18860 ;;		__i2c_start
 18861 ;;		__i2c_stop
 18862 ;;		__i2c_wait_idle
 18863 ;;		_i2c_set_frequency
 18864 ;; This function is called by:
 18865 ;;		_display_update
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text95
 18870  01499C                     __ptext95:
 18871                           	opt stack 0
 18872  01499C                     _i2c_display_write_fixed:
 18873                           	opt stack 18
 18874                           
 18875                           ;i2c.c: 366: uint8_t pos;;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 18876                           
 18877                           ;incstack = 0
 18878  01499C  0E00               	movlw	0
 18879  01499E  ECB8  F0A0         	call	_i2c_set_frequency
 18880                           
 18881                           ;i2c.c: 371: _i2c_wait_idle();
 18882  0149A2  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18883                           
 18884                           ;i2c.c: 372: _i2c_start();
 18885  0149A6  EC67  F0AF         	call	__i2c_start	;wreg free
 18886                           
 18887                           ;i2c.c: 373: _i2c_wait_idle();
 18888  0149AA  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18889                           
 18890                           ;i2c.c: 374: _i2c_send(0b01111000);
 18891  0149AE  0E78               	movlw	120
 18892  0149B0  EC5E  F0AF         	call	__i2c_send
 18893                           
 18894                           ;i2c.c: 375: _i2c_wait_idle();
 18895  0149B4  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18896                           
 18897                           ;i2c.c: 376: _i2c_send(0b01000000);
 18898  0149B8  0E40               	movlw	64
 18899  0149BA  EC5E  F0AF         	call	__i2c_send
 18900                           
 18901                           ;i2c.c: 377: _i2c_wait_idle();
 18902  0149BE  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18903                           
 18904                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 18905  0149C2  0E00               	movlw	0
 18906  0149C4  0100               	movlb	0	; () banked
 18907  0149C6  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 18908  0149C8  D00F               	goto	l1585
 18909  0149CA                     
 18910                           ; BSR set to: 0
 18911                           ;i2c.c: 381: {;i2c.c: 382: _i2c_send(data[pos]);
 18912                           
 18913                           ; BSR set to: 0
 18914  0149CA  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 18915  0149CC  0D01               	mullw	1
 18916  0149CE  50F3               	movf	prodl,w,c
 18917  0149D0  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 18918  0149D2  6ED9               	movwf	fsr2l,c
 18919  0149D4  50F4               	movf	prodh,w,c
 18920  0149D6  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 18921  0149D8  6EDA               	movwf	fsr2h,c
 18922  0149DA  50DF               	movf	indf2,w,c
 18923  0149DC  EC5E  F0AF         	call	__i2c_send
 18924                           
 18925                           ;i2c.c: 383: _i2c_wait_idle();
 18926  0149E0  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 18927  0149E4  0100               	movlb	0	; () banked
 18928  0149E6  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 18929  0149E8                     l1585:
 18930                           
 18931                           ; BSR set to: 0
 18932                           
 18933                           ; BSR set to: 0
 18934  0149E8  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 18935  0149EA  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 18936  0149EC  A0D8               	btfss	status,0,c
 18937  0149EE  D7ED               	goto	l1586
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;i2c.c: 384: };i2c.c: 386: _i2c_stop();
 18941                           
 18942                           ; BSR set to: 0
 18943  0149F0  EC63  F0AF         	call	__i2c_stop	;wreg free
 18944  0149F4  0012               	return		;funcret
 18945  0149F6                     __end_of_i2c_display_write_fixed:
 18946                           	opt stack 0
 18947                           tblptru	equ	0xFF8
 18948                           tblptrh	equ	0xFF7
 18949                           tblptrl	equ	0xFF6
 18950                           tablat	equ	0xFF5
 18951                           prodh	equ	0xFF4
 18952                           prodl	equ	0xFF3
 18953                           intcon	equ	0xFF2
 18954                           intcon2	equ	0xFF1
 18955                           intcon3	equ	0xFF0
 18956                           postinc0	equ	0xFEE
 18957                           wreg	equ	0xFE8
 18958                           indf1	equ	0xFE7
 18959                           postinc1	equ	0xFE6
 18960                           postdec1	equ	0xFE5
 18961                           plusw1	equ	0xFE3
 18962                           fsr1h	equ	0xFE2
 18963                           fsr1l	equ	0xFE1
 18964                           indf2	equ	0xFDF
 18965                           postinc2	equ	0xFDE
 18966                           postdec2	equ	0xFDD
 18967                           plusw2	equ	0xFDB
 18968                           fsr2h	equ	0xFDA
 18969                           fsr2l	equ	0xFD9
 18970                           status	equ	0xFD8
 18971                           
 18972 ;; *************** function _i2c_display_cursor *****************
 18973 ;; Defined at:
 18974 ;;		line 324 in file "i2c.c"
 18975 ;; Parameters:    Size  Location     Type
 18976 ;;  line            1    wreg     unsigned char 
 18977 ;;  position        1   13[BANK0 ] unsigned char 
 18978 ;; Auto vars:     Size  Location     Type
 18979 ;;  line            1   14[BANK0 ] unsigned char 
 18980 ;;  address         1   15[BANK0 ] unsigned char 
 18981 ;; Return value:  Size  Location     Type
 18982 ;;                  1    wreg      void 
 18983 ;; Registers used:
 18984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18985 ;; Tracked objects:
 18986 ;;		On entry : 0/0
 18987 ;;		On exit  : 0/0
 18988 ;;		Unchanged: 0/0
 18989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18990 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18993 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18994 ;;Total ram usage:        3 bytes
 18995 ;; Hardware stack levels used:    1
 18996 ;; Hardware stack levels required when called:   13
 18997 ;; This function calls:
 18998 ;;		__ic2_display_set_address
 18999 ;;		_i2c_set_frequency
 19000 ;; This function is called by:
 19001 ;;		_display_update
 19002 ;; This function uses a non-reentrant model
 19003 ;;
 19004                           
 19005                           	psect	text96
 19006  01582A                     __ptext96:
 19007                           	opt stack 0
 19008  01582A                     _i2c_display_cursor:
 19009                           	opt stack 16
 19010                           
 19011                           ;incstack = 0
 19012                           ;i2c_display_cursor@line stored from wreg
 19013  01582A  0100               	movlb	0	; () banked
 19014  01582C  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 19015                           
 19016                           ;i2c.c: 326: uint8_t address;;i2c.c: 329: line &= 0b11;
 19017  01582E  0E03               	movlw	3
 19018  015830  0100               	movlb	0	; () banked
 19019  015832  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 19020                           
 19021                           ;i2c.c: 330: address = line<<5;
 19022  015834  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 19023  015836  46E8               	rlncf	wreg,f,c
 19024  015838  0BE0               	andlw	224
 19025  01583A  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 19026                           
 19027                           ;i2c.c: 331: position &= 0b11111;
 19028  01583C  0E1F               	movlw	31
 19029  01583E  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 19030                           
 19031                           ;i2c.c: 332: address |= position;
 19032  015840  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 19033  015842  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 19034                           
 19035                           ; BSR set to: 0
 19036                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19037  015844  0E00               	movlw	0
 19038  015846  ECB8  F0A0         	call	_i2c_set_frequency
 19039                           
 19040                           ;i2c.c: 338: _ic2_display_set_address(address);
 19041  01584A  0100               	movlb	0	; () banked
 19042  01584C  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 19043  01584E  ECBE  F0AB         	call	__ic2_display_set_address
 19044  015852  0012               	return		;funcret
 19045  015854                     __end_of_i2c_display_cursor:
 19046                           	opt stack 0
 19047                           tblptru	equ	0xFF8
 19048                           tblptrh	equ	0xFF7
 19049                           tblptrl	equ	0xFF6
 19050                           tablat	equ	0xFF5
 19051                           prodh	equ	0xFF4
 19052                           prodl	equ	0xFF3
 19053                           intcon	equ	0xFF2
 19054                           intcon2	equ	0xFF1
 19055                           intcon3	equ	0xFF0
 19056                           postinc0	equ	0xFEE
 19057                           wreg	equ	0xFE8
 19058                           indf1	equ	0xFE7
 19059                           postinc1	equ	0xFE6
 19060                           postdec1	equ	0xFE5
 19061                           plusw1	equ	0xFE3
 19062                           fsr1h	equ	0xFE2
 19063                           fsr1l	equ	0xFE1
 19064                           indf2	equ	0xFDF
 19065                           postinc2	equ	0xFDE
 19066                           postdec2	equ	0xFDD
 19067                           plusw2	equ	0xFDB
 19068                           fsr2h	equ	0xFDA
 19069                           fsr2l	equ	0xFD9
 19070                           status	equ	0xFD8
 19071                           
 19072 ;; *************** function __ic2_display_set_address *****************
 19073 ;; Defined at:
 19074 ;;		line 311 in file "i2c.c"
 19075 ;; Parameters:    Size  Location     Type
 19076 ;;  address         1    wreg     unsigned char 
 19077 ;; Auto vars:     Size  Location     Type
 19078 ;;  address         1   10[BANK0 ] unsigned char 
 19079 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 19080 ;; Return value:  Size  Location     Type
 19081 ;;                  1    wreg      void 
 19082 ;; Registers used:
 19083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19084 ;; Tracked objects:
 19085 ;;		On entry : 0/0
 19086 ;;		On exit  : 0/0
 19087 ;;		Unchanged: 0/0
 19088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19090 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19092 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19093 ;;Total ram usage:        3 bytes
 19094 ;; Hardware stack levels used:    1
 19095 ;; Hardware stack levels required when called:   12
 19096 ;; This function calls:
 19097 ;;		__i2c_write
 19098 ;;		_i2c_set_frequency
 19099 ;; This function is called by:
 19100 ;;		_i2c_display_cursor
 19101 ;; This function uses a non-reentrant model
 19102 ;;
 19103                           
 19104                           	psect	text97
 19105  01577C                     __ptext97:
 19106                           	opt stack 0
 19107  01577C                     __ic2_display_set_address:
 19108                           	opt stack 16
 19109                           
 19110                           ;incstack = 0
 19111                           ;__ic2_display_set_address@address stored from wreg
 19112  01577C  0100               	movlb	0	; () banked
 19113  01577E  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 19114                           
 19115                           ;i2c.c: 313: uint8_t data_array[2];;i2c.c: 314: data_array[0] = 0b00000000;
 19116  015780  0E00               	movlw	0
 19117  015782  0100               	movlb	0	; () banked
 19118  015784  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 19119                           
 19120                           ; BSR set to: 0
 19121                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 19122  015786  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 19123  015788  0980               	iorlw	128
 19124  01578A  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 19125                           
 19126                           ; BSR set to: 0
 19127                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19128  01578C  0E00               	movlw	0
 19129  01578E  ECB8  F0A0         	call	_i2c_set_frequency
 19130                           
 19131                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 19132  015792  0E6B               	movlw	low __ic2_display_set_address@data_array
 19133  015794  0100               	movlb	0	; () banked
 19134  015796  6F65               	movwf	__i2c_write@data& (0+255),b
 19135  015798  0E00               	movlw	high __ic2_display_set_address@data_array
 19136  01579A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19137  01579C  0E02               	movlw	2
 19138  01579E  6F67               	movwf	__i2c_write@length& (0+255),b
 19139  0157A0  0E78               	movlw	120
 19140  0157A2  EC27  F0A7         	call	__i2c_write
 19141  0157A6  0012               	return		;funcret
 19142  0157A8                     __end_of__ic2_display_set_address:
 19143                           	opt stack 0
 19144                           tblptru	equ	0xFF8
 19145                           tblptrh	equ	0xFF7
 19146                           tblptrl	equ	0xFF6
 19147                           tablat	equ	0xFF5
 19148                           prodh	equ	0xFF4
 19149                           prodl	equ	0xFF3
 19150                           intcon	equ	0xFF2
 19151                           intcon2	equ	0xFF1
 19152                           intcon3	equ	0xFF0
 19153                           postinc0	equ	0xFEE
 19154                           wreg	equ	0xFE8
 19155                           indf1	equ	0xFE7
 19156                           postinc1	equ	0xFE6
 19157                           postdec1	equ	0xFE5
 19158                           plusw1	equ	0xFE3
 19159                           fsr1h	equ	0xFE2
 19160                           fsr1l	equ	0xFE1
 19161                           indf2	equ	0xFDF
 19162                           postinc2	equ	0xFDE
 19163                           postdec2	equ	0xFDD
 19164                           plusw2	equ	0xFDB
 19165                           fsr2h	equ	0xFDA
 19166                           fsr2l	equ	0xFD9
 19167                           status	equ	0xFD8
 19168                           
 19169 ;; *************** function _display_prepare *****************
 19170 ;; Defined at:
 19171 ;;		line 108 in file "display.c"
 19172 ;; Parameters:    Size  Location     Type
 19173 ;;  mode            1    wreg     unsigned char 
 19174 ;; Auto vars:     Size  Location     Type
 19175 ;;  mode            1  117[BANK0 ] unsigned char 
 19176 ;; Return value:  Size  Location     Type
 19177 ;;                  1    wreg      void 
 19178 ;; Registers used:
 19179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19180 ;; Tracked objects:
 19181 ;;		On entry : 0/0
 19182 ;;		On exit  : 0/0
 19183 ;;		Unchanged: 0/0
 19184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19189 ;;Total ram usage:        3 bytes
 19190 ;; Hardware stack levels used:    1
 19191 ;; Hardware stack levels required when called:   15
 19192 ;; This function calls:
 19193 ;;		__display_charger
 19194 ;;		__display_clear
 19195 ;;		__display_efficiency
 19196 ;;		__display_inout
 19197 ;;		__display_outputs
 19198 ;;		__display_temperature
 19199 ;;		__display_time
 19200 ;;		__display_usb
 19201 ;; This function is called by:
 19202 ;;		_main
 19203 ;; This function uses a non-reentrant model
 19204 ;;
 19205                           
 19206                           	psect	text98
 19207  013BAE                     __ptext98:
 19208                           	opt stack 0
 19209  013BAE                     _display_prepare:
 19210                           	opt stack 15
 19211                           
 19212                           ;incstack = 0
 19213                           ;display_prepare@mode stored from wreg
 19214  013BAE  0100               	movlb	0	; () banked
 19215  013BB0  6FD5               	movwf	display_prepare@mode& (0+255),b
 19216                           
 19217                           ;display.c: 110: _display_clear();
 19218  013BB2  EC13  F0A8         	call	__display_clear	;wreg free
 19219                           
 19220                           ;display.c: 112: switch(mode&0xF0)
 19221  013BB6  D01C               	goto	l1935
 19222  013BB8                     
 19223                           ;display.c: 115: _display_inout();
 19224  013BB8  ECC6  F07E         	call	__display_inout	;wreg free
 19225                           
 19226                           ;display.c: 116: break;
 19227  013BBC  0012               	return	
 19228  013BBE                     
 19229                           ;display.c: 118: _display_time(mode);
 19230  013BBE  0100               	movlb	0	; () banked
 19231  013BC0  51D5               	movf	display_prepare@mode& (0+255),w,b
 19232  013BC2  EC33  F062         	call	__display_time
 19233                           
 19234                           ;display.c: 119: break;
 19235  013BC6  0012               	return	
 19236  013BC8                     
 19237                           ;display.c: 121: _display_usb();
 19238  013BC8  EC6B  F082         	call	__display_usb	;wreg free
 19239                           
 19240                           ;display.c: 122: break;
 19241  013BCC  0012               	return	
 19242  013BCE                     
 19243                           ;display.c: 124: _display_outputs(mode);
 19244  013BCE  0100               	movlb	0	; () banked
 19245  013BD0  51D5               	movf	display_prepare@mode& (0+255),w,b
 19246  013BD2  ECB2  F07C         	call	__display_outputs
 19247                           
 19248                           ;display.c: 125: break;
 19249  013BD6  0012               	return	
 19250  013BD8                     
 19251                           ;display.c: 127: _display_charger();
 19252  013BD8  ECC6  F073         	call	__display_charger	;wreg free
 19253                           
 19254                           ;display.c: 128: break;
 19255  013BDC  0012               	return	
 19256  013BDE                     
 19257                           ;display.c: 130: _display_efficiency();
 19258  013BDE  EC94  F070         	call	__display_efficiency	;wreg free
 19259                           
 19260                           ;display.c: 131: break;
 19261  013BE2  0012               	return	
 19262  013BE4                     
 19263                           ;display.c: 133: _display_temperature();
 19264  013BE4  ECAC  F080         	call	__display_temperature	;wreg free
 19265                           
 19266                           ;display.c: 134: break;
 19267  013BE8  0012               	return	
 19268  013BEA                     
 19269                           ;display.c: 136: _display_inout();
 19270  013BEA  ECC6  F07E         	call	__display_inout	;wreg free
 19271                           
 19272                           ;display.c: 137: }
 19273  013BEE  0012               	return	
 19274  013BF0                     l1935:
 19275  013BF0  0100               	movlb	0	; () banked
 19276  013BF2  51D5               	movf	display_prepare@mode& (0+255),w,b
 19277  013BF4  0BF0               	andlw	240
 19278  013BF6  6FD3               	movwf	??_display_prepare& (0+255),b
 19279  013BF8  6BD4               	clrf	(??_display_prepare+1)& (0+255),b
 19280                           
 19281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19282                           ; Switch size 1, requested type "space"
 19283                           ; Number of cases is 1, Range of values is 0 to 0
 19284                           ; switch strategies available:
 19285                           ; Name         Instructions Cycles
 19286                           ; simple_byte            4     3 (average)
 19287                           ;	Chosen strategy is simple_byte
 19288  013BFA  51D4               	movf	(??_display_prepare+1)& (0+255),w,b
 19289  013BFC  0A00               	xorlw	0	; case 0
 19290  013BFE  A4D8               	btfss	status,2,c
 19291  013C00  D7F4               	goto	l1944
 19292                           
 19293                           ; BSR set to: 0
 19294                           ; Switch size 1, requested type "space"
 19295                           ; Number of cases is 7, Range of values is 0 to 96
 19296                           ; switch strategies available:
 19297                           ; Name         Instructions Cycles
 19298                           ; simple_byte           22    12 (average)
 19299                           ;	Chosen strategy is simple_byte
 19300  013C02  51D3               	movf	??_display_prepare& (0+255),w,b
 19301  013C04  0A00               	xorlw	0	; case 0
 19302  013C06  B4D8               	btfsc	status,2,c
 19303  013C08  D7D7               	goto	l1936
 19304  013C0A  0A10               	xorlw	16	; case 16
 19305  013C0C  B4D8               	btfsc	status,2,c
 19306  013C0E  D7D7               	goto	l1938
 19307  013C10  0A30               	xorlw	48	; case 32
 19308  013C12  B4D8               	btfsc	status,2,c
 19309  013C14  D7D9               	goto	l1939
 19310  013C16  0A10               	xorlw	16	; case 48
 19311  013C18  B4D8               	btfsc	status,2,c
 19312  013C1A  D7D9               	goto	l1940
 19313  013C1C  0A70               	xorlw	112	; case 64
 19314  013C1E  B4D8               	btfsc	status,2,c
 19315  013C20  D7DB               	goto	l1941
 19316  013C22  0A10               	xorlw	16	; case 80
 19317  013C24  B4D8               	btfsc	status,2,c
 19318  013C26  D7DB               	goto	l1942
 19319  013C28  0A30               	xorlw	48	; case 96
 19320  013C2A  B4D8               	btfsc	status,2,c
 19321  013C2C  D7DB               	goto	l1943
 19322  013C2E  D7DD               	goto	l1944
 19323  013C30                     __end_of_display_prepare:
 19324                           	opt stack 0
 19325                           tblptru	equ	0xFF8
 19326                           tblptrh	equ	0xFF7
 19327                           tblptrl	equ	0xFF6
 19328                           tablat	equ	0xFF5
 19329                           prodh	equ	0xFF4
 19330                           prodl	equ	0xFF3
 19331                           intcon	equ	0xFF2
 19332                           intcon2	equ	0xFF1
 19333                           intcon3	equ	0xFF0
 19334                           postinc0	equ	0xFEE
 19335                           wreg	equ	0xFE8
 19336                           indf1	equ	0xFE7
 19337                           postinc1	equ	0xFE6
 19338                           postdec1	equ	0xFE5
 19339                           plusw1	equ	0xFE3
 19340                           fsr1h	equ	0xFE2
 19341                           fsr1l	equ	0xFE1
 19342                           indf2	equ	0xFDF
 19343                           postinc2	equ	0xFDE
 19344                           postdec2	equ	0xFDD
 19345                           plusw2	equ	0xFDB
 19346                           fsr2h	equ	0xFDA
 19347                           fsr2l	equ	0xFD9
 19348                           status	equ	0xFD8
 19349                           
 19350 ;; *************** function __display_usb *****************
 19351 ;; Defined at:
 19352 ;;		line 303 in file "display.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;		None
 19355 ;; Auto vars:     Size  Location     Type
 19356 ;;  header         20    0[BANK0 ] const unsigned char [20]
 19357 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 19358 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 19359 ;;  low            16   37[BANK0 ] const unsigned char [16]
 19360 ;;  cntr            1   69[BANK0 ] unsigned char 
 19361 ;; Return value:  Size  Location     Type
 19362 ;;                  1    wreg      void 
 19363 ;; Registers used:
 19364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19365 ;; Tracked objects:
 19366 ;;		On entry : 0/0
 19367 ;;		On exit  : 0/0
 19368 ;;		Unchanged: 0/0
 19369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19371 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19373 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19374 ;;Total ram usage:       70 bytes
 19375 ;; Hardware stack levels used:    1
 19376 ;; Hardware stack levels required when called:   10
 19377 ;; This function calls:
 19378 ;;		Nothing
 19379 ;; This function is called by:
 19380 ;;		_display_prepare
 19381 ;; This function uses a non-reentrant model
 19382 ;;
 19383                           
 19384                           	psect	text99
 19385  0104D6                     __ptext99:
 19386                           	opt stack 0
 19387  0104D6                     __display_usb:
 19388                           	opt stack 19
 19389                           
 19390                           ;display.c: 305: uint8_t cntr;;display.c: 306: const char header[] = "USB Charger Output
      +                          s";
 19391                           
 19392                           ;incstack = 0
 19393  0104D6  0E07               	movlw	low __display_usb@F7235
 19394  0104D8  6EF6               	movwf	tblptrl,c
 19395  0104DA                     	if	1	;There is more than 1 active tblptr byte
 19396  0104DA  0EC1               	movlw	high __display_usb@F7235
 19397  0104DC  6EF7               	movwf	tblptrh,c
 19398  0104DE                     	endif
 19399  0104DE                     	if	1	;There are 3 active tblptr bytes
 19400  0104DE  0E00               	movlw	low (__display_usb@F7235 shr (0+16))
 19401  0104E0  6EF8               	movwf	tblptru,c
 19402  0104E2                     	endif
 19403  0104E2  EE20  F060         	lfsr	2,__display_usb@header
 19404  0104E6  0E13               	movlw	19
 19405  0104E8                     u20840:
 19406  0104E8  0009               	tblrd		*+
 19407  0104EA  CFF5 FFDE          	movff	tablat,postinc2
 19408  0104EE  06E8               	decf	wreg,f,c
 19409  0104F0  E2FB               	bc	u20840
 19410                           
 19411                           ;display.c: 307: const char low[] = "Battery too low";
 19412  0104F2  0E2B               	movlw	low __display_usb@F7237
 19413  0104F4  6EF6               	movwf	tblptrl,c
 19414  0104F6                     	if	1	;There is more than 1 active tblptr byte
 19415  0104F6  0EC2               	movlw	high __display_usb@F7237
 19416  0104F8  6EF7               	movwf	tblptrh,c
 19417  0104FA                     	endif
 19418  0104FA                     	if	1	;There are 3 active tblptr bytes
 19419  0104FA  0E00               	movlw	low (__display_usb@F7237 shr (0+16))
 19420  0104FC  6EF8               	movwf	tblptru,c
 19421  0104FE                     	endif
 19422  0104FE  EE20  F085         	lfsr	2,__display_usb@low
 19423  010502  0E0F               	movlw	15
 19424  010504                     u20850:
 19425  010504  0009               	tblrd		*+
 19426  010506  CFF5 FFDE          	movff	tablat,postinc2
 19427  01050A  06E8               	decf	wreg,f,c
 19428  01050C  E2FB               	bc	u20850
 19429                           
 19430                           ;display.c: 308: const char usb_on[] = "USB charging on";
 19431  01050E  0E1B               	movlw	low __display_usb@F7239
 19432  010510  6EF6               	movwf	tblptrl,c
 19433  010512                     	if	1	;There is more than 1 active tblptr byte
 19434  010512  0EC2               	movlw	high __display_usb@F7239
 19435  010514  6EF7               	movwf	tblptrh,c
 19436  010516                     	endif
 19437  010516                     	if	1	;There are 3 active tblptr bytes
 19438  010516  0E00               	movlw	low (__display_usb@F7239 shr (0+16))
 19439  010518  6EF8               	movwf	tblptru,c
 19440  01051A                     	endif
 19441  01051A  EE20  F095         	lfsr	2,__display_usb@usb_on
 19442  01051E  0E0F               	movlw	15
 19443  010520                     u20860:
 19444  010520  0009               	tblrd		*+
 19445  010522  CFF5 FFDE          	movff	tablat,postinc2
 19446  010526  06E8               	decf	wreg,f,c
 19447  010528  E2FB               	bc	u20860
 19448                           
 19449                           ;display.c: 309: const char usb_off[] = "USB charging off";
 19450  01052A  0EEA               	movlw	low __display_usb@F7241
 19451  01052C  6EF6               	movwf	tblptrl,c
 19452  01052E                     	if	1	;There is more than 1 active tblptr byte
 19453  01052E  0EC1               	movlw	high __display_usb@F7241
 19454  010530  6EF7               	movwf	tblptrh,c
 19455  010532                     	endif
 19456  010532                     	if	1	;There are 3 active tblptr bytes
 19457  010532  0E00               	movlw	low (__display_usb@F7241 shr (0+16))
 19458  010534  6EF8               	movwf	tblptru,c
 19459  010536                     	endif
 19460  010536  EE20  F074         	lfsr	2,__display_usb@usb_off
 19461  01053A  0E10               	movlw	16
 19462  01053C                     u20870:
 19463  01053C  0009               	tblrd		*+
 19464  01053E  CFF5 FFDE          	movff	tablat,postinc2
 19465  010542  06E8               	decf	wreg,f,c
 19466  010544  E2FB               	bc	u20870
 19467                           
 19468                           ;display.c: 312: cntr = 0;
 19469  010546  0E00               	movlw	0
 19470  010548  0100               	movlb	0	; () banked
 19471  01054A  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19472                           
 19473                           ;display.c: 313: while(header[cntr])
 19474  01054C  D013               	goto	l2067
 19475  01054E                     
 19476                           ; BSR set to: 0
 19477                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 19478                           
 19479                           ; BSR set to: 0
 19480  01054E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19481  010550  0D01               	mullw	1
 19482  010552  0E60               	movlw	low __display_usb@header
 19483  010554  24F3               	addwf	prodl,w,c
 19484  010556  6ED9               	movwf	fsr2l,c
 19485  010558  0E00               	movlw	high __display_usb@header
 19486  01055A  20F4               	addwfc	prodh,w,c
 19487  01055C  6EDA               	movwf	fsr2h,c
 19488  01055E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19489  010560  0D01               	mullw	1
 19490  010562  0E54               	movlw	low _display_content
 19491  010564  24F3               	addwf	prodl,w,c
 19492  010566  6EE1               	movwf	fsr1l,c
 19493  010568  0E03               	movlw	high _display_content
 19494  01056A  20F4               	addwfc	prodh,w,c
 19495  01056C  6EE2               	movwf	fsr1h,c
 19496  01056E  CFDF FFE7          	movff	indf2,indf1
 19497                           
 19498                           ; BSR set to: 0
 19499  010572  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19500  010574                     l2067:
 19501                           
 19502                           ; BSR set to: 0
 19503                           
 19504                           ; BSR set to: 0
 19505  010574  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19506  010576  0D01               	mullw	1
 19507  010578  0E60               	movlw	low __display_usb@header
 19508  01057A  24F3               	addwf	prodl,w,c
 19509  01057C  6ED9               	movwf	fsr2l,c
 19510  01057E  0E00               	movlw	high __display_usb@header
 19511  010580  20F4               	addwfc	prodh,w,c
 19512  010582  6EDA               	movwf	fsr2h,c
 19513  010584  50DF               	movf	indf2,w,c
 19514  010586  A4D8               	btfss	status,2,c
 19515  010588  D7E2               	goto	l2068
 19516                           
 19517                           ; BSR set to: 0
 19518                           ;display.c: 316: if(os.output_voltage<12000)
 19519                           
 19520                           ; BSR set to: 0
 19521  01058A  0102               	movlb	2	; () banked
 19522  01058C  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 19523  01058E  D006               	goto	u20890
 19524  010590  0EE0               	movlw	224
 19525  010592  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 19526  010594  0E2E               	movlw	46
 19527  010596  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 19528  010598  B0D8               	btfsc	status,0,c
 19529  01059A  D022               	goto	u20900
 19530  01059C                     u20890:
 19531                           
 19532                           ; BSR set to: 2
 19533                           ;display.c: 317: {;display.c: 318: cntr = 0;
 19534  01059C  0E00               	movlw	0
 19535  01059E  0100               	movlb	0	; () banked
 19536  0105A0  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19537                           
 19538                           ;display.c: 319: while(low[cntr])
 19539  0105A2  D013               	goto	l2071
 19540  0105A4                     
 19541                           ; BSR set to: 0
 19542                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 19543                           
 19544                           ; BSR set to: 0
 19545  0105A4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19546  0105A6  0D01               	mullw	1
 19547  0105A8  0E85               	movlw	low __display_usb@low
 19548  0105AA  24F3               	addwf	prodl,w,c
 19549  0105AC  6ED9               	movwf	fsr2l,c
 19550  0105AE  0E00               	movlw	high __display_usb@low
 19551  0105B0  20F4               	addwfc	prodh,w,c
 19552  0105B2  6EDA               	movwf	fsr2h,c
 19553  0105B4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19554  0105B6  0D01               	mullw	1
 19555  0105B8  0E7C               	movlw	low (_display_content+40)
 19556  0105BA  24F3               	addwf	prodl,w,c
 19557  0105BC  6EE1               	movwf	fsr1l,c
 19558  0105BE  0E03               	movlw	high (_display_content+40)
 19559  0105C0  20F4               	addwfc	prodh,w,c
 19560  0105C2  6EE2               	movwf	fsr1h,c
 19561  0105C4  CFDF FFE7          	movff	indf2,indf1
 19562                           
 19563                           ; BSR set to: 0
 19564  0105C8  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19565  0105CA                     l2071:
 19566                           
 19567                           ; BSR set to: 0
 19568                           
 19569                           ; BSR set to: 0
 19570  0105CA  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19571  0105CC  0D01               	mullw	1
 19572  0105CE  0E85               	movlw	low __display_usb@low
 19573  0105D0  24F3               	addwf	prodl,w,c
 19574  0105D2  6ED9               	movwf	fsr2l,c
 19575  0105D4  0E00               	movlw	high __display_usb@low
 19576  0105D6  20F4               	addwfc	prodh,w,c
 19577  0105D8  6EDA               	movwf	fsr2h,c
 19578  0105DA  50DF               	movf	indf2,w,c
 19579  0105DC  A4D8               	btfss	status,2,c
 19580  0105DE  D7E2               	goto	l2072
 19581  0105E0                     u20900:
 19582                           
 19583                           ;display.c: 321: };display.c: 323: cntr = 0;
 19584                           
 19585                           ; BSR set to: 0
 19586                           
 19587                           ; BSR set to: 0
 19588  0105E0  0E00               	movlw	0
 19589  0105E2  0100               	movlb	0	; () banked
 19590  0105E4  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19591                           
 19592                           ; BSR set to: 0
 19593                           ;display.c: 324: if(LATDbits.LD3)
 19594  0105E6  B68C               	btfsc	3980,3,c	;volatile
 19595  0105E8  D014               	goto	l2075
 19596  0105EA  D032               	goto	l2079
 19597  0105EC                     
 19598                           ; BSR set to: 0
 19599                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 19600                           
 19601                           ; BSR set to: 0
 19602  0105EC  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19603  0105EE  0D01               	mullw	1
 19604  0105F0  0E95               	movlw	low __display_usb@usb_on
 19605  0105F2  24F3               	addwf	prodl,w,c
 19606  0105F4  6ED9               	movwf	fsr2l,c
 19607  0105F6  0E00               	movlw	high __display_usb@usb_on
 19608  0105F8  20F4               	addwfc	prodh,w,c
 19609  0105FA  6EDA               	movwf	fsr2h,c
 19610  0105FC  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19611  0105FE  0D01               	mullw	1
 19612  010600  0E90               	movlw	low (_display_content+60)
 19613  010602  24F3               	addwf	prodl,w,c
 19614  010604  6EE1               	movwf	fsr1l,c
 19615  010606  0E03               	movlw	high (_display_content+60)
 19616  010608  20F4               	addwfc	prodh,w,c
 19617  01060A  6EE2               	movwf	fsr1h,c
 19618  01060C  CFDF FFE7          	movff	indf2,indf1
 19619                           
 19620                           ; BSR set to: 0
 19621  010610  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19622  010612                     l2075:
 19623                           
 19624                           ; BSR set to: 0
 19625                           
 19626                           ; BSR set to: 0
 19627  010612  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19628  010614  0D01               	mullw	1
 19629  010616  0E95               	movlw	low __display_usb@usb_on
 19630  010618  24F3               	addwf	prodl,w,c
 19631  01061A  6ED9               	movwf	fsr2l,c
 19632  01061C  0E00               	movlw	high __display_usb@usb_on
 19633  01061E  20F4               	addwfc	prodh,w,c
 19634  010620  6EDA               	movwf	fsr2h,c
 19635  010622  50DF               	movf	indf2,w,c
 19636  010624  B4D8               	btfsc	status,2,c
 19637  010626  0012               	return	
 19638  010628  D7E1               	goto	l2076
 19639  01062A                     
 19640                           ; BSR set to: 0
 19641                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 19642                           
 19643                           ; BSR set to: 0
 19644  01062A  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19645  01062C  0D01               	mullw	1
 19646  01062E  0E74               	movlw	low __display_usb@usb_off
 19647  010630  24F3               	addwf	prodl,w,c
 19648  010632  6ED9               	movwf	fsr2l,c
 19649  010634  0E00               	movlw	high __display_usb@usb_off
 19650  010636  20F4               	addwfc	prodh,w,c
 19651  010638  6EDA               	movwf	fsr2h,c
 19652  01063A  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19653  01063C  0D01               	mullw	1
 19654  01063E  0E90               	movlw	low (_display_content+60)
 19655  010640  24F3               	addwf	prodl,w,c
 19656  010642  6EE1               	movwf	fsr1l,c
 19657  010644  0E03               	movlw	high (_display_content+60)
 19658  010646  20F4               	addwfc	prodh,w,c
 19659  010648  6EE2               	movwf	fsr1h,c
 19660  01064A  CFDF FFE7          	movff	indf2,indf1
 19661                           
 19662                           ; BSR set to: 0
 19663  01064E  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19664  010650                     l2079:
 19665                           
 19666                           ; BSR set to: 0
 19667                           
 19668                           ; BSR set to: 0
 19669  010650  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19670  010652  0D01               	mullw	1
 19671  010654  0E74               	movlw	low __display_usb@usb_off
 19672  010656  24F3               	addwf	prodl,w,c
 19673  010658  6ED9               	movwf	fsr2l,c
 19674  01065A  0E00               	movlw	high __display_usb@usb_off
 19675  01065C  20F4               	addwfc	prodh,w,c
 19676  01065E  6EDA               	movwf	fsr2h,c
 19677  010660  50DF               	movf	indf2,w,c
 19678  010662  B4D8               	btfsc	status,2,c
 19679  010664  0012               	return	
 19680  010666  D7E1               	goto	l2080
 19681  010668                     __end_of__display_usb:
 19682                           	opt stack 0
 19683                           tblptru	equ	0xFF8
 19684                           tblptrh	equ	0xFF7
 19685                           tblptrl	equ	0xFF6
 19686                           tablat	equ	0xFF5
 19687                           prodh	equ	0xFF4
 19688                           prodl	equ	0xFF3
 19689                           intcon	equ	0xFF2
 19690                           intcon2	equ	0xFF1
 19691                           intcon3	equ	0xFF0
 19692                           postinc0	equ	0xFEE
 19693                           wreg	equ	0xFE8
 19694                           indf1	equ	0xFE7
 19695                           postinc1	equ	0xFE6
 19696                           postdec1	equ	0xFE5
 19697                           plusw1	equ	0xFE3
 19698                           fsr1h	equ	0xFE2
 19699                           fsr1l	equ	0xFE1
 19700                           indf2	equ	0xFDF
 19701                           postinc2	equ	0xFDE
 19702                           postdec2	equ	0xFDD
 19703                           plusw2	equ	0xFDB
 19704                           fsr2h	equ	0xFDA
 19705                           fsr2l	equ	0xFD9
 19706                           status	equ	0xFD8
 19707                           
 19708 ;; *************** function __display_time *****************
 19709 ;; Defined at:
 19710 ;;		line 186 in file "display.c"
 19711 ;; Parameters:    Size  Location     Type
 19712 ;;  mode            1    wreg     unsigned char 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;  mode            1  203[BANK1 ] unsigned char 
 19715 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 19716 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 19717 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 19718 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 19719 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 19720 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 19721 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 19722 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 19723 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 19724 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 19725 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 19726 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 19727 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 19728 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 19729 ;;  cntr            1  210[BANK1 ] unsigned char 
 19730 ;;  seconds         1  209[BANK1 ] unsigned char 
 19731 ;;  minutes         1  208[BANK1 ] unsigned char 
 19732 ;;  hours           1  207[BANK1 ] unsigned char 
 19733 ;;  day             1  206[BANK1 ] unsigned char 
 19734 ;;  month           1  205[BANK1 ] unsigned char 
 19735 ;;  year            1  204[BANK1 ] unsigned char 
 19736 ;; Return value:  Size  Location     Type
 19737 ;;                  1    wreg      void 
 19738 ;; Registers used:
 19739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19740 ;; Tracked objects:
 19741 ;;		On entry : 0/0
 19742 ;;		On exit  : 0/0
 19743 ;;		Unchanged: 0/0
 19744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19746 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19748 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19749 ;;Total ram usage:      211 bytes
 19750 ;; Hardware stack levels used:    1
 19751 ;; Hardware stack levels required when called:   11
 19752 ;; This function calls:
 19753 ;;		_rtcc_get_day
 19754 ;;		_rtcc_get_hours
 19755 ;;		_rtcc_get_minutes
 19756 ;;		_rtcc_get_month
 19757 ;;		_rtcc_get_seconds
 19758 ;;		_rtcc_get_year
 19759 ;; This function is called by:
 19760 ;;		_display_prepare
 19761 ;; This function uses a non-reentrant model
 19762 ;;
 19763                           
 19764                           	psect	text100
 19765  00C466                     __ptext100:
 19766                           	opt stack 0
 19767  00C466                     __display_time:
 19768                           	opt stack 18
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;incstack = 0
 19772                           ;__display_time@mode stored from wreg
 19773  00C466  0101               	movlb	1	; () banked
 19774  00C468  6FCB               	movwf	__display_time@mode& (0+255),b
 19775                           
 19776                           ;display.c: 188: const char tad[] = "Time and Date";
 19777  00C46A  0E77               	movlw	low __display_time@F7198
 19778  00C46C  6EF6               	movwf	tblptrl,c
 19779  00C46E                     	if	1	;There is more than 1 active tblptr byte
 19780  00C46E  0EC2               	movlw	high __display_time@F7198
 19781  00C470  6EF7               	movwf	tblptrh,c
 19782  00C472                     	endif
 19783  00C472                     	if	1	;There are 3 active tblptr bytes
 19784  00C472  0E00               	movlw	low (__display_time@F7198 shr (0+16))
 19785  00C474  6EF8               	movwf	tblptru,c
 19786  00C476                     	endif
 19787  00C476  EE21  F080         	lfsr	2,__display_time@tad
 19788  00C47A  0E0D               	movlw	13
 19789  00C47C                     u20560:
 19790  00C47C  0009               	tblrd		*+
 19791  00C47E  CFF5 FFDE          	movff	tablat,postinc2
 19792  00C482  06E8               	decf	wreg,f,c
 19793  00C484  E2FB               	bc	u20560
 19794                           
 19795                           ;display.c: 189: const char setyear[] = "Set year";
 19796  00C486  0EEE               	movlw	low __display_time@F7200
 19797  00C488  6EF6               	movwf	tblptrl,c
 19798  00C48A                     	if	1	;There is more than 1 active tblptr byte
 19799  00C48A  0EC2               	movlw	high __display_time@F7200
 19800  00C48C  6EF7               	movwf	tblptrh,c
 19801  00C48E                     	endif
 19802  00C48E                     	if	1	;There are 3 active tblptr bytes
 19803  00C48E  0E00               	movlw	low (__display_time@F7200 shr (0+16))
 19804  00C490  6EF8               	movwf	tblptru,c
 19805  00C492                     	endif
 19806  00C492  EE21  F0BA         	lfsr	2,__display_time@setyear
 19807  00C496  0E08               	movlw	8
 19808  00C498                     u20570:
 19809  00C498  0009               	tblrd		*+
 19810  00C49A  CFF5 FFDE          	movff	tablat,postinc2
 19811  00C49E  06E8               	decf	wreg,f,c
 19812  00C4A0  E2FB               	bc	u20570
 19813                           
 19814                           ;display.c: 190: const char setmonth[] = "Set month";
 19815  00C4A2  0EE4               	movlw	low __display_time@F7202
 19816  00C4A4  6EF6               	movwf	tblptrl,c
 19817  00C4A6                     	if	1	;There is more than 1 active tblptr byte
 19818  00C4A6  0EC2               	movlw	high __display_time@F7202
 19819  00C4A8  6EF7               	movwf	tblptrh,c
 19820  00C4AA                     	endif
 19821  00C4AA                     	if	1	;There are 3 active tblptr bytes
 19822  00C4AA  0E00               	movlw	low (__display_time@F7202 shr (0+16))
 19823  00C4AC  6EF8               	movwf	tblptru,c
 19824  00C4AE                     	endif
 19825  00C4AE  EE21  F0A6         	lfsr	2,__display_time@setmonth
 19826  00C4B2  0E09               	movlw	9
 19827  00C4B4                     u20580:
 19828  00C4B4  0009               	tblrd		*+
 19829  00C4B6  CFF5 FFDE          	movff	tablat,postinc2
 19830  00C4BA  06E8               	decf	wreg,f,c
 19831  00C4BC  E2FB               	bc	u20580
 19832                           
 19833                           ;display.c: 191: const char setday[] = "Set day";
 19834  00C4BE  0EFF               	movlw	low __display_time@F7204
 19835  00C4C0  6EF6               	movwf	tblptrl,c
 19836  00C4C2                     	if	1	;There is more than 1 active tblptr byte
 19837  00C4C2  0EC2               	movlw	high __display_time@F7204
 19838  00C4C4  6EF7               	movwf	tblptrh,c
 19839  00C4C6                     	endif
 19840  00C4C6                     	if	1	;There are 3 active tblptr bytes
 19841  00C4C6  0E00               	movlw	low (__display_time@F7204 shr (0+16))
 19842  00C4C8  6EF8               	movwf	tblptru,c
 19843  00C4CA                     	endif
 19844  00C4CA  EE21  F0C3         	lfsr	2,__display_time@setday
 19845  00C4CE  0E07               	movlw	7
 19846  00C4D0                     u20590:
 19847  00C4D0  0009               	tblrd		*+
 19848  00C4D2  CFF5 FFDE          	movff	tablat,postinc2
 19849  00C4D6  06E8               	decf	wreg,f,c
 19850  00C4D8  E2FB               	bc	u20590
 19851                           
 19852                           ;display.c: 192: const char sethours[] = "Set hours";
 19853  00C4DA  0EDA               	movlw	low __display_time@F7206
 19854  00C4DC  6EF6               	movwf	tblptrl,c
 19855  00C4DE                     	if	1	;There is more than 1 active tblptr byte
 19856  00C4DE  0EC2               	movlw	high __display_time@F7206
 19857  00C4E0  6EF7               	movwf	tblptrh,c
 19858  00C4E2                     	endif
 19859  00C4E2                     	if	1	;There are 3 active tblptr bytes
 19860  00C4E2  0E00               	movlw	low (__display_time@F7206 shr (0+16))
 19861  00C4E4  6EF8               	movwf	tblptru,c
 19862  00C4E6                     	endif
 19863  00C4E6  EE21  F0B0         	lfsr	2,__display_time@sethours
 19864  00C4EA  0E09               	movlw	9
 19865  00C4EC                     u20600:
 19866  00C4EC  0009               	tblrd		*+
 19867  00C4EE  CFF5 FFDE          	movff	tablat,postinc2
 19868  00C4F2  06E8               	decf	wreg,f,c
 19869  00C4F4  E2FB               	bc	u20600
 19870                           
 19871                           ;display.c: 193: const char setminutes[] = "Set minutes";
 19872  00C4F6  0EC3               	movlw	low __display_time@F7208
 19873  00C4F8  6EF6               	movwf	tblptrl,c
 19874  00C4FA                     	if	1	;There is more than 1 active tblptr byte
 19875  00C4FA  0EC2               	movlw	high __display_time@F7208
 19876  00C4FC  6EF7               	movwf	tblptrh,c
 19877  00C4FE                     	endif
 19878  00C4FE                     	if	1	;There are 3 active tblptr bytes
 19879  00C4FE  0E00               	movlw	low (__display_time@F7208 shr (0+16))
 19880  00C500  6EF8               	movwf	tblptru,c
 19881  00C502                     	endif
 19882  00C502  EE21  F08E         	lfsr	2,__display_time@setminutes
 19883  00C506  0E0B               	movlw	11
 19884  00C508                     u20610:
 19885  00C508  0009               	tblrd		*+
 19886  00C50A  CFF5 FFDE          	movff	tablat,postinc2
 19887  00C50E  06E8               	decf	wreg,f,c
 19888  00C510  E2FB               	bc	u20610
 19889                           
 19890                           ;display.c: 194: const char setseconds[] = "Set seconds";
 19891  00C512  0EB7               	movlw	low __display_time@F7210
 19892  00C514  6EF6               	movwf	tblptrl,c
 19893  00C516                     	if	1	;There is more than 1 active tblptr byte
 19894  00C516  0EC2               	movlw	high __display_time@F7210
 19895  00C518  6EF7               	movwf	tblptrh,c
 19896  00C51A                     	endif
 19897  00C51A                     	if	1	;There are 3 active tblptr bytes
 19898  00C51A  0E00               	movlw	low (__display_time@F7210 shr (0+16))
 19899  00C51C  6EF8               	movwf	tblptru,c
 19900  00C51E                     	endif
 19901  00C51E  EE21  F09A         	lfsr	2,__display_time@setseconds
 19902  00C522  0E0B               	movlw	11
 19903  00C524                     u20620:
 19904  00C524  0009               	tblrd		*+
 19905  00C526  CFF5 FFDE          	movff	tablat,postinc2
 19906  00C52A  06E8               	decf	wreg,f,c
 19907  00C52C  E2FB               	bc	u20620
 19908                           
 19909                           ;display.c: 195: const char pts[] = "->Press to set time";
 19910  00C52E  0E43               	movlw	low __display_time@F7212
 19911  00C530  6EF6               	movwf	tblptrl,c
 19912  00C532                     	if	1	;There is more than 1 active tblptr byte
 19913  00C532  0EC1               	movlw	high __display_time@F7212
 19914  00C534  6EF7               	movwf	tblptrh,c
 19915  00C536                     	endif
 19916  00C536                     	if	1	;There are 3 active tblptr bytes
 19917  00C536  0E00               	movlw	low (__display_time@F7212 shr (0+16))
 19918  00C538  6EF8               	movwf	tblptru,c
 19919  00C53A                     	endif
 19920  00C53A  EE21  F000         	lfsr	2,__display_time@pts
 19921  00C53E  0E13               	movlw	19
 19922  00C540                     u20630:
 19923  00C540  0009               	tblrd		*+
 19924  00C542  CFF5 FFDE          	movff	tablat,postinc2
 19925  00C546  06E8               	decf	wreg,f,c
 19926  00C548  E2FB               	bc	u20630
 19927                           
 19928                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 19929  00C54A  0EB4               	movlw	low __display_time@F7214
 19930  00C54C  6EF6               	movwf	tblptrl,c
 19931  00C54E                     	if	1	;There is more than 1 active tblptr byte
 19932  00C54E  0EC1               	movlw	high __display_time@F7214
 19933  00C550  6EF7               	movwf	tblptrh,c
 19934  00C552                     	endif
 19935  00C552                     	if	1	;There are 3 active tblptr bytes
 19936  00C552  0E00               	movlw	low (__display_time@F7214 shr (0+16))
 19937  00C554  6EF8               	movwf	tblptru,c
 19938  00C556                     	endif
 19939  00C556  EE21  F03C         	lfsr	2,__display_time@pressmonth
 19940  00C55A  0E11               	movlw	17
 19941  00C55C                     u20640:
 19942  00C55C  0009               	tblrd		*+
 19943  00C55E  CFF5 FFDE          	movff	tablat,postinc2
 19944  00C562  06E8               	decf	wreg,f,c
 19945  00C564  E2FB               	bc	u20640
 19946                           
 19947                           ;display.c: 197: const char pressday[] = "->Press for day";
 19948  00C566  0E4B               	movlw	low __display_time@F7216
 19949  00C568  6EF6               	movwf	tblptrl,c
 19950  00C56A                     	if	1	;There is more than 1 active tblptr byte
 19951  00C56A  0EC2               	movlw	high __display_time@F7216
 19952  00C56C  6EF7               	movwf	tblptrh,c
 19953  00C56E                     	endif
 19954  00C56E                     	if	1	;There are 3 active tblptr bytes
 19955  00C56E  0E00               	movlw	low (__display_time@F7216 shr (0+16))
 19956  00C570  6EF8               	movwf	tblptru,c
 19957  00C572                     	endif
 19958  00C572  EE21  F060         	lfsr	2,__display_time@pressday
 19959  00C576  0E0F               	movlw	15
 19960  00C578                     u20650:
 19961  00C578  0009               	tblrd		*+
 19962  00C57A  CFF5 FFDE          	movff	tablat,postinc2
 19963  00C57E  06E8               	decf	wreg,f,c
 19964  00C580  E2FB               	bc	u20650
 19965                           
 19966                           ;display.c: 198: const char presshours[] = "->Press for hours";
 19967  00C582  0EA2               	movlw	low __display_time@F7218
 19968  00C584  6EF6               	movwf	tblptrl,c
 19969  00C586                     	if	1	;There is more than 1 active tblptr byte
 19970  00C586  0EC1               	movlw	high __display_time@F7218
 19971  00C588  6EF7               	movwf	tblptrh,c
 19972  00C58A                     	endif
 19973  00C58A                     	if	1	;There are 3 active tblptr bytes
 19974  00C58A  0E00               	movlw	low (__display_time@F7218 shr (0+16))
 19975  00C58C  6EF8               	movwf	tblptru,c
 19976  00C58E                     	endif
 19977  00C58E  EE21  F04E         	lfsr	2,__display_time@presshours
 19978  00C592  0E11               	movlw	17
 19979  00C594                     u20660:
 19980  00C594  0009               	tblrd		*+
 19981  00C596  CFF5 FFDE          	movff	tablat,postinc2
 19982  00C59A  06E8               	decf	wreg,f,c
 19983  00C59C  E2FB               	bc	u20660
 19984                           
 19985                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 19986  00C59E  0E2F               	movlw	low __display_time@F7220
 19987  00C5A0  6EF6               	movwf	tblptrl,c
 19988  00C5A2                     	if	1	;There is more than 1 active tblptr byte
 19989  00C5A2  0EC1               	movlw	high __display_time@F7220
 19990  00C5A4  6EF7               	movwf	tblptrh,c
 19991  00C5A6                     	endif
 19992  00C5A6                     	if	1	;There are 3 active tblptr bytes
 19993  00C5A6  0E00               	movlw	low (__display_time@F7220 shr (0+16))
 19994  00C5A8  6EF8               	movwf	tblptru,c
 19995  00C5AA                     	endif
 19996  00C5AA  EE21  F014         	lfsr	2,__display_time@pressminutes
 19997  00C5AE  0E13               	movlw	19
 19998  00C5B0                     u20670:
 19999  00C5B0  0009               	tblrd		*+
 20000  00C5B2  CFF5 FFDE          	movff	tablat,postinc2
 20001  00C5B6  06E8               	decf	wreg,f,c
 20002  00C5B8  E2FB               	bc	u20670
 20003                           
 20004                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 20005  00C5BA  0E1B               	movlw	low __display_time@F7222
 20006  00C5BC  6EF6               	movwf	tblptrl,c
 20007  00C5BE                     	if	1	;There is more than 1 active tblptr byte
 20008  00C5BE  0EC1               	movlw	high __display_time@F7222
 20009  00C5C0  6EF7               	movwf	tblptrh,c
 20010  00C5C2                     	endif
 20011  00C5C2                     	if	1	;There are 3 active tblptr bytes
 20012  00C5C2  0E00               	movlw	low (__display_time@F7222 shr (0+16))
 20013  00C5C4  6EF8               	movwf	tblptru,c
 20014  00C5C6                     	endif
 20015  00C5C6  EE21  F028         	lfsr	2,__display_time@pressseconds
 20016  00C5CA  0E13               	movlw	19
 20017  00C5CC                     u20680:
 20018  00C5CC  0009               	tblrd		*+
 20019  00C5CE  CFF5 FFDE          	movff	tablat,postinc2
 20020  00C5D2  06E8               	decf	wreg,f,c
 20021  00C5D4  E2FB               	bc	u20680
 20022                           
 20023                           ;display.c: 201: const char presssave[] = "->Press to save";
 20024  00C5D6  0E3B               	movlw	low __display_time@F7224
 20025  00C5D8  6EF6               	movwf	tblptrl,c
 20026  00C5DA                     	if	1	;There is more than 1 active tblptr byte
 20027  00C5DA  0EC2               	movlw	high __display_time@F7224
 20028  00C5DC  6EF7               	movwf	tblptrh,c
 20029  00C5DE                     	endif
 20030  00C5DE                     	if	1	;There are 3 active tblptr bytes
 20031  00C5DE  0E00               	movlw	low (__display_time@F7224 shr (0+16))
 20032  00C5E0  6EF8               	movwf	tblptru,c
 20033  00C5E2                     	endif
 20034  00C5E2  EE21  F070         	lfsr	2,__display_time@presssave
 20035  00C5E6  0E0F               	movlw	15
 20036  00C5E8                     u20690:
 20037  00C5E8  0009               	tblrd		*+
 20038  00C5EA  CFF5 FFDE          	movff	tablat,postinc2
 20039  00C5EE  06E8               	decf	wreg,f,c
 20040  00C5F0  E2FB               	bc	u20690
 20041                           
 20042                           ;display.c: 203: uint8_t cntr;;display.c: 204: uint8_t year = rtcc_get_year();
 20043  00C5F2  EC09  F0AF         	call	_rtcc_get_year	;wreg free
 20044  00C5F6  0101               	movlb	1	; () banked
 20045  00C5F8  6FCC               	movwf	__display_time@year& (0+255),b
 20046                           
 20047                           ; BSR set to: 1
 20048                           ;display.c: 205: uint8_t month = rtcc_get_month();
 20049  00C5FA  EC17  F0AF         	call	_rtcc_get_month	;wreg free
 20050  00C5FE  0101               	movlb	1	; () banked
 20051  00C600  6FCD               	movwf	__display_time@month& (0+255),b
 20052                           
 20053                           ; BSR set to: 1
 20054                           ;display.c: 206: uint8_t day = rtcc_get_day();
 20055  00C602  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
 20056  00C606  0101               	movlb	1	; () banked
 20057  00C608  6FCE               	movwf	__display_time@day& (0+255),b
 20058                           
 20059                           ; BSR set to: 1
 20060                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 20061  00C60A  EC25  F0AF         	call	_rtcc_get_hours	;wreg free
 20062  00C60E  0101               	movlb	1	; () banked
 20063  00C610  6FCF               	movwf	__display_time@hours& (0+255),b
 20064                           
 20065                           ; BSR set to: 1
 20066                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 20067  00C612  EC1E  F0AF         	call	_rtcc_get_minutes	;wreg free
 20068  00C616  0101               	movlb	1	; () banked
 20069  00C618  6FD0               	movwf	__display_time@minutes& (0+255),b
 20070                           
 20071                           ; BSR set to: 1
 20072                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 20073  00C61A  EC10  F0AF         	call	_rtcc_get_seconds	;wreg free
 20074  00C61E  0101               	movlb	1	; () banked
 20075  00C620  6FD1               	movwf	__display_time@seconds& (0+255),b
 20076                           
 20077                           ;display.c: 211: switch(mode)
 20078  00C622  D1D5               	goto	l2005
 20079  00C624                     
 20080                           ; BSR set to: 1
 20081                           ;display.c: 214: cntr = 0;
 20082                           
 20083                           ; BSR set to: 1
 20084  00C624  0E00               	movlw	0
 20085  00C626  6FD2               	movwf	__display_time@cntr& (0+255),b
 20086                           
 20087                           ;display.c: 215: while(tad[cntr])
 20088  00C628  D013               	goto	l2007
 20089  00C62A                     
 20090                           ; BSR set to: 1
 20091                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 20092                           
 20093                           ; BSR set to: 1
 20094  00C62A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20095  00C62C  0D01               	mullw	1
 20096  00C62E  0E80               	movlw	low __display_time@tad
 20097  00C630  24F3               	addwf	prodl,w,c
 20098  00C632  6ED9               	movwf	fsr2l,c
 20099  00C634  0E01               	movlw	high __display_time@tad
 20100  00C636  20F4               	addwfc	prodh,w,c
 20101  00C638  6EDA               	movwf	fsr2h,c
 20102  00C63A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20103  00C63C  0D01               	mullw	1
 20104  00C63E  0E54               	movlw	low _display_content
 20105  00C640  24F3               	addwf	prodl,w,c
 20106  00C642  6EE1               	movwf	fsr1l,c
 20107  00C644  0E03               	movlw	high _display_content
 20108  00C646  20F4               	addwfc	prodh,w,c
 20109  00C648  6EE2               	movwf	fsr1h,c
 20110  00C64A  CFDF FFE7          	movff	indf2,indf1
 20111                           
 20112                           ; BSR set to: 1
 20113  00C64E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20114  00C650                     l2007:
 20115                           
 20116                           ; BSR set to: 1
 20117                           
 20118                           ; BSR set to: 1
 20119  00C650  51D2               	movf	__display_time@cntr& (0+255),w,b
 20120  00C652  0D01               	mullw	1
 20121  00C654  0E80               	movlw	low __display_time@tad
 20122  00C656  24F3               	addwf	prodl,w,c
 20123  00C658  6ED9               	movwf	fsr2l,c
 20124  00C65A  0E01               	movlw	high __display_time@tad
 20125  00C65C  20F4               	addwfc	prodh,w,c
 20126  00C65E  6EDA               	movwf	fsr2h,c
 20127  00C660  50DF               	movf	indf2,w,c
 20128  00C662  A4D8               	btfss	status,2,c
 20129  00C664  D7E2               	goto	l2008
 20130                           
 20131                           ; BSR set to: 1
 20132                           ;display.c: 217: cntr = 0;
 20133                           
 20134                           ; BSR set to: 1
 20135  00C666  0E00               	movlw	0
 20136  00C668  6FD2               	movwf	__display_time@cntr& (0+255),b
 20137                           
 20138                           ;display.c: 218: while(pts[cntr])
 20139  00C66A  D013               	goto	l2010
 20140  00C66C                     
 20141                           ; BSR set to: 1
 20142                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 20143                           
 20144                           ; BSR set to: 1
 20145  00C66C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20146  00C66E  0D01               	mullw	1
 20147  00C670  0E00               	movlw	low __display_time@pts
 20148  00C672  24F3               	addwf	prodl,w,c
 20149  00C674  6ED9               	movwf	fsr2l,c
 20150  00C676  0E01               	movlw	high __display_time@pts
 20151  00C678  20F4               	addwfc	prodh,w,c
 20152  00C67A  6EDA               	movwf	fsr2h,c
 20153  00C67C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20154  00C67E  0D01               	mullw	1
 20155  00C680  0E90               	movlw	low (_display_content+60)
 20156  00C682  24F3               	addwf	prodl,w,c
 20157  00C684  6EE1               	movwf	fsr1l,c
 20158  00C686  0E03               	movlw	high (_display_content+60)
 20159  00C688  20F4               	addwfc	prodh,w,c
 20160  00C68A  6EE2               	movwf	fsr1h,c
 20161  00C68C  CFDF FFE7          	movff	indf2,indf1
 20162                           
 20163                           ; BSR set to: 1
 20164  00C690  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20165  00C692                     l2010:
 20166                           
 20167                           ; BSR set to: 1
 20168                           
 20169                           ; BSR set to: 1
 20170  00C692  51D2               	movf	__display_time@cntr& (0+255),w,b
 20171  00C694  0D01               	mullw	1
 20172  00C696  0E00               	movlw	low __display_time@pts
 20173  00C698  24F3               	addwf	prodl,w,c
 20174  00C69A  6ED9               	movwf	fsr2l,c
 20175  00C69C  0E01               	movlw	high __display_time@pts
 20176  00C69E  20F4               	addwfc	prodh,w,c
 20177  00C6A0  6EDA               	movwf	fsr2h,c
 20178  00C6A2  50DF               	movf	indf2,w,c
 20179  00C6A4  B4D8               	btfsc	status,2,c
 20180  00C6A6  D1A9               	goto	l2013
 20181  00C6A8  D7E1               	goto	l2011
 20182  00C6AA                     
 20183                           ; BSR set to: 1
 20184                           ;display.c: 223: cntr = 0;
 20185                           
 20186                           ; BSR set to: 1
 20187  00C6AA  0E00               	movlw	0
 20188  00C6AC  6FD2               	movwf	__display_time@cntr& (0+255),b
 20189                           
 20190                           ;display.c: 224: while(setyear[cntr])
 20191  00C6AE  D013               	goto	l2015
 20192  00C6B0                     
 20193                           ; BSR set to: 1
 20194                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 20195                           
 20196                           ; BSR set to: 1
 20197  00C6B0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20198  00C6B2  0D01               	mullw	1
 20199  00C6B4  0EBA               	movlw	low __display_time@setyear
 20200  00C6B6  24F3               	addwf	prodl,w,c
 20201  00C6B8  6ED9               	movwf	fsr2l,c
 20202  00C6BA  0E01               	movlw	high __display_time@setyear
 20203  00C6BC  20F4               	addwfc	prodh,w,c
 20204  00C6BE  6EDA               	movwf	fsr2h,c
 20205  00C6C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20206  00C6C2  0D01               	mullw	1
 20207  00C6C4  0E54               	movlw	low _display_content
 20208  00C6C6  24F3               	addwf	prodl,w,c
 20209  00C6C8  6EE1               	movwf	fsr1l,c
 20210  00C6CA  0E03               	movlw	high _display_content
 20211  00C6CC  20F4               	addwfc	prodh,w,c
 20212  00C6CE  6EE2               	movwf	fsr1h,c
 20213  00C6D0  CFDF FFE7          	movff	indf2,indf1
 20214                           
 20215                           ; BSR set to: 1
 20216  00C6D4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20217  00C6D6                     l2015:
 20218                           
 20219                           ; BSR set to: 1
 20220                           
 20221                           ; BSR set to: 1
 20222  00C6D6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20223  00C6D8  0D01               	mullw	1
 20224  00C6DA  0EBA               	movlw	low __display_time@setyear
 20225  00C6DC  24F3               	addwf	prodl,w,c
 20226  00C6DE  6ED9               	movwf	fsr2l,c
 20227  00C6E0  0E01               	movlw	high __display_time@setyear
 20228  00C6E2  20F4               	addwfc	prodh,w,c
 20229  00C6E4  6EDA               	movwf	fsr2h,c
 20230  00C6E6  50DF               	movf	indf2,w,c
 20231  00C6E8  A4D8               	btfss	status,2,c
 20232  00C6EA  D7E2               	goto	l2016
 20233                           
 20234                           ; BSR set to: 1
 20235                           ;display.c: 226: cntr = 0;
 20236                           
 20237                           ; BSR set to: 1
 20238  00C6EC  0E00               	movlw	0
 20239  00C6EE  6FD2               	movwf	__display_time@cntr& (0+255),b
 20240                           
 20241                           ;display.c: 227: while(pressmonth[cntr])
 20242  00C6F0  D013               	goto	l2018
 20243  00C6F2                     
 20244                           ; BSR set to: 1
 20245                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 20246                           
 20247                           ; BSR set to: 1
 20248  00C6F2  51D2               	movf	__display_time@cntr& (0+255),w,b
 20249  00C6F4  0D01               	mullw	1
 20250  00C6F6  0E3C               	movlw	low __display_time@pressmonth
 20251  00C6F8  24F3               	addwf	prodl,w,c
 20252  00C6FA  6ED9               	movwf	fsr2l,c
 20253  00C6FC  0E01               	movlw	high __display_time@pressmonth
 20254  00C6FE  20F4               	addwfc	prodh,w,c
 20255  00C700  6EDA               	movwf	fsr2h,c
 20256  00C702  51D2               	movf	__display_time@cntr& (0+255),w,b
 20257  00C704  0D01               	mullw	1
 20258  00C706  0E90               	movlw	low (_display_content+60)
 20259  00C708  24F3               	addwf	prodl,w,c
 20260  00C70A  6EE1               	movwf	fsr1l,c
 20261  00C70C  0E03               	movlw	high (_display_content+60)
 20262  00C70E  20F4               	addwfc	prodh,w,c
 20263  00C710  6EE2               	movwf	fsr1h,c
 20264  00C712  CFDF FFE7          	movff	indf2,indf1
 20265                           
 20266                           ; BSR set to: 1
 20267  00C716  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20268  00C718                     l2018:
 20269                           
 20270                           ; BSR set to: 1
 20271                           
 20272                           ; BSR set to: 1
 20273  00C718  51D2               	movf	__display_time@cntr& (0+255),w,b
 20274  00C71A  0D01               	mullw	1
 20275  00C71C  0E3C               	movlw	low __display_time@pressmonth
 20276  00C71E  24F3               	addwf	prodl,w,c
 20277  00C720  6ED9               	movwf	fsr2l,c
 20278  00C722  0E01               	movlw	high __display_time@pressmonth
 20279  00C724  20F4               	addwfc	prodh,w,c
 20280  00C726  6EDA               	movwf	fsr2h,c
 20281  00C728  50DF               	movf	indf2,w,c
 20282  00C72A  B4D8               	btfsc	status,2,c
 20283  00C72C  D166               	goto	l2013
 20284  00C72E  D7E1               	goto	l2019
 20285  00C730                     
 20286                           ; BSR set to: 1
 20287                           ;display.c: 232: cntr = 0;
 20288                           
 20289                           ; BSR set to: 1
 20290  00C730  0E00               	movlw	0
 20291  00C732  6FD2               	movwf	__display_time@cntr& (0+255),b
 20292                           
 20293                           ;display.c: 233: while(setmonth[cntr])
 20294  00C734  D013               	goto	l2022
 20295  00C736                     
 20296                           ; BSR set to: 1
 20297                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 20298                           
 20299                           ; BSR set to: 1
 20300  00C736  51D2               	movf	__display_time@cntr& (0+255),w,b
 20301  00C738  0D01               	mullw	1
 20302  00C73A  0EA6               	movlw	low __display_time@setmonth
 20303  00C73C  24F3               	addwf	prodl,w,c
 20304  00C73E  6ED9               	movwf	fsr2l,c
 20305  00C740  0E01               	movlw	high __display_time@setmonth
 20306  00C742  20F4               	addwfc	prodh,w,c
 20307  00C744  6EDA               	movwf	fsr2h,c
 20308  00C746  51D2               	movf	__display_time@cntr& (0+255),w,b
 20309  00C748  0D01               	mullw	1
 20310  00C74A  0E54               	movlw	low _display_content
 20311  00C74C  24F3               	addwf	prodl,w,c
 20312  00C74E  6EE1               	movwf	fsr1l,c
 20313  00C750  0E03               	movlw	high _display_content
 20314  00C752  20F4               	addwfc	prodh,w,c
 20315  00C754  6EE2               	movwf	fsr1h,c
 20316  00C756  CFDF FFE7          	movff	indf2,indf1
 20317                           
 20318                           ; BSR set to: 1
 20319  00C75A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20320  00C75C                     l2022:
 20321                           
 20322                           ; BSR set to: 1
 20323                           
 20324                           ; BSR set to: 1
 20325  00C75C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20326  00C75E  0D01               	mullw	1
 20327  00C760  0EA6               	movlw	low __display_time@setmonth
 20328  00C762  24F3               	addwf	prodl,w,c
 20329  00C764  6ED9               	movwf	fsr2l,c
 20330  00C766  0E01               	movlw	high __display_time@setmonth
 20331  00C768  20F4               	addwfc	prodh,w,c
 20332  00C76A  6EDA               	movwf	fsr2h,c
 20333  00C76C  50DF               	movf	indf2,w,c
 20334  00C76E  A4D8               	btfss	status,2,c
 20335  00C770  D7E2               	goto	l2023
 20336                           
 20337                           ; BSR set to: 1
 20338                           ;display.c: 235: cntr = 0;
 20339                           
 20340                           ; BSR set to: 1
 20341  00C772  0E00               	movlw	0
 20342  00C774  6FD2               	movwf	__display_time@cntr& (0+255),b
 20343                           
 20344                           ;display.c: 236: while(pressday[cntr])
 20345  00C776  D013               	goto	l2025
 20346  00C778                     
 20347                           ; BSR set to: 1
 20348                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 20349                           
 20350                           ; BSR set to: 1
 20351  00C778  51D2               	movf	__display_time@cntr& (0+255),w,b
 20352  00C77A  0D01               	mullw	1
 20353  00C77C  0E60               	movlw	low __display_time@pressday
 20354  00C77E  24F3               	addwf	prodl,w,c
 20355  00C780  6ED9               	movwf	fsr2l,c
 20356  00C782  0E01               	movlw	high __display_time@pressday
 20357  00C784  20F4               	addwfc	prodh,w,c
 20358  00C786  6EDA               	movwf	fsr2h,c
 20359  00C788  51D2               	movf	__display_time@cntr& (0+255),w,b
 20360  00C78A  0D01               	mullw	1
 20361  00C78C  0E90               	movlw	low (_display_content+60)
 20362  00C78E  24F3               	addwf	prodl,w,c
 20363  00C790  6EE1               	movwf	fsr1l,c
 20364  00C792  0E03               	movlw	high (_display_content+60)
 20365  00C794  20F4               	addwfc	prodh,w,c
 20366  00C796  6EE2               	movwf	fsr1h,c
 20367  00C798  CFDF FFE7          	movff	indf2,indf1
 20368                           
 20369                           ; BSR set to: 1
 20370  00C79C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20371  00C79E                     l2025:
 20372                           
 20373                           ; BSR set to: 1
 20374                           
 20375                           ; BSR set to: 1
 20376  00C79E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20377  00C7A0  0D01               	mullw	1
 20378  00C7A2  0E60               	movlw	low __display_time@pressday
 20379  00C7A4  24F3               	addwf	prodl,w,c
 20380  00C7A6  6ED9               	movwf	fsr2l,c
 20381  00C7A8  0E01               	movlw	high __display_time@pressday
 20382  00C7AA  20F4               	addwfc	prodh,w,c
 20383  00C7AC  6EDA               	movwf	fsr2h,c
 20384  00C7AE  50DF               	movf	indf2,w,c
 20385  00C7B0  B4D8               	btfsc	status,2,c
 20386  00C7B2  D123               	goto	l2013
 20387  00C7B4  D7E1               	goto	l2026
 20388  00C7B6                     
 20389                           ; BSR set to: 1
 20390                           ;display.c: 241: cntr = 0;
 20391                           
 20392                           ; BSR set to: 1
 20393  00C7B6  0E00               	movlw	0
 20394  00C7B8  6FD2               	movwf	__display_time@cntr& (0+255),b
 20395                           
 20396                           ;display.c: 242: while(setday[cntr])
 20397  00C7BA  D013               	goto	l2029
 20398  00C7BC                     
 20399                           ; BSR set to: 1
 20400                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 20401                           
 20402                           ; BSR set to: 1
 20403  00C7BC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20404  00C7BE  0D01               	mullw	1
 20405  00C7C0  0EC3               	movlw	low __display_time@setday
 20406  00C7C2  24F3               	addwf	prodl,w,c
 20407  00C7C4  6ED9               	movwf	fsr2l,c
 20408  00C7C6  0E01               	movlw	high __display_time@setday
 20409  00C7C8  20F4               	addwfc	prodh,w,c
 20410  00C7CA  6EDA               	movwf	fsr2h,c
 20411  00C7CC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20412  00C7CE  0D01               	mullw	1
 20413  00C7D0  0E54               	movlw	low _display_content
 20414  00C7D2  24F3               	addwf	prodl,w,c
 20415  00C7D4  6EE1               	movwf	fsr1l,c
 20416  00C7D6  0E03               	movlw	high _display_content
 20417  00C7D8  20F4               	addwfc	prodh,w,c
 20418  00C7DA  6EE2               	movwf	fsr1h,c
 20419  00C7DC  CFDF FFE7          	movff	indf2,indf1
 20420                           
 20421                           ; BSR set to: 1
 20422  00C7E0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20423  00C7E2                     l2029:
 20424                           
 20425                           ; BSR set to: 1
 20426                           
 20427                           ; BSR set to: 1
 20428  00C7E2  51D2               	movf	__display_time@cntr& (0+255),w,b
 20429  00C7E4  0D01               	mullw	1
 20430  00C7E6  0EC3               	movlw	low __display_time@setday
 20431  00C7E8  24F3               	addwf	prodl,w,c
 20432  00C7EA  6ED9               	movwf	fsr2l,c
 20433  00C7EC  0E01               	movlw	high __display_time@setday
 20434  00C7EE  20F4               	addwfc	prodh,w,c
 20435  00C7F0  6EDA               	movwf	fsr2h,c
 20436  00C7F2  50DF               	movf	indf2,w,c
 20437  00C7F4  A4D8               	btfss	status,2,c
 20438  00C7F6  D7E2               	goto	l2030
 20439                           
 20440                           ; BSR set to: 1
 20441                           ;display.c: 244: cntr = 0;
 20442                           
 20443                           ; BSR set to: 1
 20444  00C7F8  0E00               	movlw	0
 20445  00C7FA  6FD2               	movwf	__display_time@cntr& (0+255),b
 20446                           
 20447                           ;display.c: 245: while(presshours[cntr])
 20448  00C7FC  D013               	goto	l2032
 20449  00C7FE                     
 20450                           ; BSR set to: 1
 20451                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 20452                           
 20453                           ; BSR set to: 1
 20454  00C7FE  51D2               	movf	__display_time@cntr& (0+255),w,b
 20455  00C800  0D01               	mullw	1
 20456  00C802  0E4E               	movlw	low __display_time@presshours
 20457  00C804  24F3               	addwf	prodl,w,c
 20458  00C806  6ED9               	movwf	fsr2l,c
 20459  00C808  0E01               	movlw	high __display_time@presshours
 20460  00C80A  20F4               	addwfc	prodh,w,c
 20461  00C80C  6EDA               	movwf	fsr2h,c
 20462  00C80E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20463  00C810  0D01               	mullw	1
 20464  00C812  0E90               	movlw	low (_display_content+60)
 20465  00C814  24F3               	addwf	prodl,w,c
 20466  00C816  6EE1               	movwf	fsr1l,c
 20467  00C818  0E03               	movlw	high (_display_content+60)
 20468  00C81A  20F4               	addwfc	prodh,w,c
 20469  00C81C  6EE2               	movwf	fsr1h,c
 20470  00C81E  CFDF FFE7          	movff	indf2,indf1
 20471                           
 20472                           ; BSR set to: 1
 20473  00C822  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20474  00C824                     l2032:
 20475                           
 20476                           ; BSR set to: 1
 20477                           
 20478                           ; BSR set to: 1
 20479  00C824  51D2               	movf	__display_time@cntr& (0+255),w,b
 20480  00C826  0D01               	mullw	1
 20481  00C828  0E4E               	movlw	low __display_time@presshours
 20482  00C82A  24F3               	addwf	prodl,w,c
 20483  00C82C  6ED9               	movwf	fsr2l,c
 20484  00C82E  0E01               	movlw	high __display_time@presshours
 20485  00C830  20F4               	addwfc	prodh,w,c
 20486  00C832  6EDA               	movwf	fsr2h,c
 20487  00C834  50DF               	movf	indf2,w,c
 20488  00C836  B4D8               	btfsc	status,2,c
 20489  00C838  D0E0               	goto	l2013
 20490  00C83A  D7E1               	goto	l2033
 20491  00C83C                     
 20492                           ; BSR set to: 1
 20493                           ;display.c: 250: cntr = 0;
 20494                           
 20495                           ; BSR set to: 1
 20496  00C83C  0E00               	movlw	0
 20497  00C83E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20498                           
 20499                           ;display.c: 251: while(sethours[cntr])
 20500  00C840  D013               	goto	l2036
 20501  00C842                     
 20502                           ; BSR set to: 1
 20503                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 20504                           
 20505                           ; BSR set to: 1
 20506  00C842  51D2               	movf	__display_time@cntr& (0+255),w,b
 20507  00C844  0D01               	mullw	1
 20508  00C846  0EB0               	movlw	low __display_time@sethours
 20509  00C848  24F3               	addwf	prodl,w,c
 20510  00C84A  6ED9               	movwf	fsr2l,c
 20511  00C84C  0E01               	movlw	high __display_time@sethours
 20512  00C84E  20F4               	addwfc	prodh,w,c
 20513  00C850  6EDA               	movwf	fsr2h,c
 20514  00C852  51D2               	movf	__display_time@cntr& (0+255),w,b
 20515  00C854  0D01               	mullw	1
 20516  00C856  0E54               	movlw	low _display_content
 20517  00C858  24F3               	addwf	prodl,w,c
 20518  00C85A  6EE1               	movwf	fsr1l,c
 20519  00C85C  0E03               	movlw	high _display_content
 20520  00C85E  20F4               	addwfc	prodh,w,c
 20521  00C860  6EE2               	movwf	fsr1h,c
 20522  00C862  CFDF FFE7          	movff	indf2,indf1
 20523                           
 20524                           ; BSR set to: 1
 20525  00C866  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20526  00C868                     l2036:
 20527                           
 20528                           ; BSR set to: 1
 20529                           
 20530                           ; BSR set to: 1
 20531  00C868  51D2               	movf	__display_time@cntr& (0+255),w,b
 20532  00C86A  0D01               	mullw	1
 20533  00C86C  0EB0               	movlw	low __display_time@sethours
 20534  00C86E  24F3               	addwf	prodl,w,c
 20535  00C870  6ED9               	movwf	fsr2l,c
 20536  00C872  0E01               	movlw	high __display_time@sethours
 20537  00C874  20F4               	addwfc	prodh,w,c
 20538  00C876  6EDA               	movwf	fsr2h,c
 20539  00C878  50DF               	movf	indf2,w,c
 20540  00C87A  A4D8               	btfss	status,2,c
 20541  00C87C  D7E2               	goto	l2037
 20542                           
 20543                           ; BSR set to: 1
 20544                           ;display.c: 253: cntr = 0;
 20545                           
 20546                           ; BSR set to: 1
 20547  00C87E  0E00               	movlw	0
 20548  00C880  6FD2               	movwf	__display_time@cntr& (0+255),b
 20549                           
 20550                           ;display.c: 254: while(pressminutes[cntr])
 20551  00C882  D013               	goto	l2039
 20552  00C884                     
 20553                           ; BSR set to: 1
 20554                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 20555                           
 20556                           ; BSR set to: 1
 20557  00C884  51D2               	movf	__display_time@cntr& (0+255),w,b
 20558  00C886  0D01               	mullw	1
 20559  00C888  0E14               	movlw	low __display_time@pressminutes
 20560  00C88A  24F3               	addwf	prodl,w,c
 20561  00C88C  6ED9               	movwf	fsr2l,c
 20562  00C88E  0E01               	movlw	high __display_time@pressminutes
 20563  00C890  20F4               	addwfc	prodh,w,c
 20564  00C892  6EDA               	movwf	fsr2h,c
 20565  00C894  51D2               	movf	__display_time@cntr& (0+255),w,b
 20566  00C896  0D01               	mullw	1
 20567  00C898  0E90               	movlw	low (_display_content+60)
 20568  00C89A  24F3               	addwf	prodl,w,c
 20569  00C89C  6EE1               	movwf	fsr1l,c
 20570  00C89E  0E03               	movlw	high (_display_content+60)
 20571  00C8A0  20F4               	addwfc	prodh,w,c
 20572  00C8A2  6EE2               	movwf	fsr1h,c
 20573  00C8A4  CFDF FFE7          	movff	indf2,indf1
 20574                           
 20575                           ; BSR set to: 1
 20576  00C8A8  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20577  00C8AA                     l2039:
 20578                           
 20579                           ; BSR set to: 1
 20580                           
 20581                           ; BSR set to: 1
 20582  00C8AA  51D2               	movf	__display_time@cntr& (0+255),w,b
 20583  00C8AC  0D01               	mullw	1
 20584  00C8AE  0E14               	movlw	low __display_time@pressminutes
 20585  00C8B0  24F3               	addwf	prodl,w,c
 20586  00C8B2  6ED9               	movwf	fsr2l,c
 20587  00C8B4  0E01               	movlw	high __display_time@pressminutes
 20588  00C8B6  20F4               	addwfc	prodh,w,c
 20589  00C8B8  6EDA               	movwf	fsr2h,c
 20590  00C8BA  50DF               	movf	indf2,w,c
 20591  00C8BC  B4D8               	btfsc	status,2,c
 20592  00C8BE  D09D               	goto	l2013
 20593  00C8C0  D7E1               	goto	l2040
 20594  00C8C2                     
 20595                           ; BSR set to: 1
 20596                           ;display.c: 259: cntr = 0;
 20597                           
 20598                           ; BSR set to: 1
 20599  00C8C2  0E00               	movlw	0
 20600  00C8C4  6FD2               	movwf	__display_time@cntr& (0+255),b
 20601                           
 20602                           ;display.c: 260: while(setminutes[cntr])
 20603  00C8C6  D013               	goto	l2043
 20604  00C8C8                     
 20605                           ; BSR set to: 1
 20606                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 20607                           
 20608                           ; BSR set to: 1
 20609  00C8C8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20610  00C8CA  0D01               	mullw	1
 20611  00C8CC  0E8E               	movlw	low __display_time@setminutes
 20612  00C8CE  24F3               	addwf	prodl,w,c
 20613  00C8D0  6ED9               	movwf	fsr2l,c
 20614  00C8D2  0E01               	movlw	high __display_time@setminutes
 20615  00C8D4  20F4               	addwfc	prodh,w,c
 20616  00C8D6  6EDA               	movwf	fsr2h,c
 20617  00C8D8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20618  00C8DA  0D01               	mullw	1
 20619  00C8DC  0E54               	movlw	low _display_content
 20620  00C8DE  24F3               	addwf	prodl,w,c
 20621  00C8E0  6EE1               	movwf	fsr1l,c
 20622  00C8E2  0E03               	movlw	high _display_content
 20623  00C8E4  20F4               	addwfc	prodh,w,c
 20624  00C8E6  6EE2               	movwf	fsr1h,c
 20625  00C8E8  CFDF FFE7          	movff	indf2,indf1
 20626                           
 20627                           ; BSR set to: 1
 20628  00C8EC  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20629  00C8EE                     l2043:
 20630                           
 20631                           ; BSR set to: 1
 20632                           
 20633                           ; BSR set to: 1
 20634  00C8EE  51D2               	movf	__display_time@cntr& (0+255),w,b
 20635  00C8F0  0D01               	mullw	1
 20636  00C8F2  0E8E               	movlw	low __display_time@setminutes
 20637  00C8F4  24F3               	addwf	prodl,w,c
 20638  00C8F6  6ED9               	movwf	fsr2l,c
 20639  00C8F8  0E01               	movlw	high __display_time@setminutes
 20640  00C8FA  20F4               	addwfc	prodh,w,c
 20641  00C8FC  6EDA               	movwf	fsr2h,c
 20642  00C8FE  50DF               	movf	indf2,w,c
 20643  00C900  A4D8               	btfss	status,2,c
 20644  00C902  D7E2               	goto	l2044
 20645                           
 20646                           ; BSR set to: 1
 20647                           ;display.c: 262: cntr = 0;
 20648                           
 20649                           ; BSR set to: 1
 20650  00C904  0E00               	movlw	0
 20651  00C906  6FD2               	movwf	__display_time@cntr& (0+255),b
 20652                           
 20653                           ;display.c: 263: while(pressseconds[cntr])
 20654  00C908  D013               	goto	l2046
 20655  00C90A                     
 20656                           ; BSR set to: 1
 20657                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 20658                           
 20659                           ; BSR set to: 1
 20660  00C90A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20661  00C90C  0D01               	mullw	1
 20662  00C90E  0E28               	movlw	low __display_time@pressseconds
 20663  00C910  24F3               	addwf	prodl,w,c
 20664  00C912  6ED9               	movwf	fsr2l,c
 20665  00C914  0E01               	movlw	high __display_time@pressseconds
 20666  00C916  20F4               	addwfc	prodh,w,c
 20667  00C918  6EDA               	movwf	fsr2h,c
 20668  00C91A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20669  00C91C  0D01               	mullw	1
 20670  00C91E  0E90               	movlw	low (_display_content+60)
 20671  00C920  24F3               	addwf	prodl,w,c
 20672  00C922  6EE1               	movwf	fsr1l,c
 20673  00C924  0E03               	movlw	high (_display_content+60)
 20674  00C926  20F4               	addwfc	prodh,w,c
 20675  00C928  6EE2               	movwf	fsr1h,c
 20676  00C92A  CFDF FFE7          	movff	indf2,indf1
 20677                           
 20678                           ; BSR set to: 1
 20679  00C92E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20680  00C930                     l2046:
 20681                           
 20682                           ; BSR set to: 1
 20683                           
 20684                           ; BSR set to: 1
 20685  00C930  51D2               	movf	__display_time@cntr& (0+255),w,b
 20686  00C932  0D01               	mullw	1
 20687  00C934  0E28               	movlw	low __display_time@pressseconds
 20688  00C936  24F3               	addwf	prodl,w,c
 20689  00C938  6ED9               	movwf	fsr2l,c
 20690  00C93A  0E01               	movlw	high __display_time@pressseconds
 20691  00C93C  20F4               	addwfc	prodh,w,c
 20692  00C93E  6EDA               	movwf	fsr2h,c
 20693  00C940  50DF               	movf	indf2,w,c
 20694  00C942  B4D8               	btfsc	status,2,c
 20695  00C944  D05A               	goto	l2013
 20696  00C946  D7E1               	goto	l2047
 20697  00C948                     
 20698                           ; BSR set to: 1
 20699                           ;display.c: 268: cntr = 0;
 20700                           
 20701                           ; BSR set to: 1
 20702  00C948  0E00               	movlw	0
 20703  00C94A  6FD2               	movwf	__display_time@cntr& (0+255),b
 20704                           
 20705                           ;display.c: 269: while(setseconds[cntr])
 20706  00C94C  D013               	goto	l2050
 20707  00C94E                     
 20708                           ; BSR set to: 1
 20709                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 20710                           
 20711                           ; BSR set to: 1
 20712  00C94E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20713  00C950  0D01               	mullw	1
 20714  00C952  0E9A               	movlw	low __display_time@setseconds
 20715  00C954  24F3               	addwf	prodl,w,c
 20716  00C956  6ED9               	movwf	fsr2l,c
 20717  00C958  0E01               	movlw	high __display_time@setseconds
 20718  00C95A  20F4               	addwfc	prodh,w,c
 20719  00C95C  6EDA               	movwf	fsr2h,c
 20720  00C95E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20721  00C960  0D01               	mullw	1
 20722  00C962  0E54               	movlw	low _display_content
 20723  00C964  24F3               	addwf	prodl,w,c
 20724  00C966  6EE1               	movwf	fsr1l,c
 20725  00C968  0E03               	movlw	high _display_content
 20726  00C96A  20F4               	addwfc	prodh,w,c
 20727  00C96C  6EE2               	movwf	fsr1h,c
 20728  00C96E  CFDF FFE7          	movff	indf2,indf1
 20729                           
 20730                           ; BSR set to: 1
 20731  00C972  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20732  00C974                     l2050:
 20733                           
 20734                           ; BSR set to: 1
 20735                           
 20736                           ; BSR set to: 1
 20737  00C974  51D2               	movf	__display_time@cntr& (0+255),w,b
 20738  00C976  0D01               	mullw	1
 20739  00C978  0E9A               	movlw	low __display_time@setseconds
 20740  00C97A  24F3               	addwf	prodl,w,c
 20741  00C97C  6ED9               	movwf	fsr2l,c
 20742  00C97E  0E01               	movlw	high __display_time@setseconds
 20743  00C980  20F4               	addwfc	prodh,w,c
 20744  00C982  6EDA               	movwf	fsr2h,c
 20745  00C984  50DF               	movf	indf2,w,c
 20746  00C986  A4D8               	btfss	status,2,c
 20747  00C988  D7E2               	goto	l2051
 20748                           
 20749                           ; BSR set to: 1
 20750                           ;display.c: 271: cntr = 0;
 20751                           
 20752                           ; BSR set to: 1
 20753  00C98A  0E00               	movlw	0
 20754  00C98C  6FD2               	movwf	__display_time@cntr& (0+255),b
 20755                           
 20756                           ;display.c: 272: while(presssave[cntr])
 20757  00C98E  D013               	goto	l2053
 20758  00C990                     
 20759                           ; BSR set to: 1
 20760                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 20761                           
 20762                           ; BSR set to: 1
 20763  00C990  51D2               	movf	__display_time@cntr& (0+255),w,b
 20764  00C992  0D01               	mullw	1
 20765  00C994  0E70               	movlw	low __display_time@presssave
 20766  00C996  24F3               	addwf	prodl,w,c
 20767  00C998  6ED9               	movwf	fsr2l,c
 20768  00C99A  0E01               	movlw	high __display_time@presssave
 20769  00C99C  20F4               	addwfc	prodh,w,c
 20770  00C99E  6EDA               	movwf	fsr2h,c
 20771  00C9A0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20772  00C9A2  0D01               	mullw	1
 20773  00C9A4  0E90               	movlw	low (_display_content+60)
 20774  00C9A6  24F3               	addwf	prodl,w,c
 20775  00C9A8  6EE1               	movwf	fsr1l,c
 20776  00C9AA  0E03               	movlw	high (_display_content+60)
 20777  00C9AC  20F4               	addwfc	prodh,w,c
 20778  00C9AE  6EE2               	movwf	fsr1h,c
 20779  00C9B0  CFDF FFE7          	movff	indf2,indf1
 20780                           
 20781                           ; BSR set to: 1
 20782  00C9B4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20783  00C9B6                     l2053:
 20784                           
 20785                           ; BSR set to: 1
 20786                           
 20787                           ; BSR set to: 1
 20788  00C9B6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20789  00C9B8  0D01               	mullw	1
 20790  00C9BA  0E70               	movlw	low __display_time@presssave
 20791  00C9BC  24F3               	addwf	prodl,w,c
 20792  00C9BE  6ED9               	movwf	fsr2l,c
 20793  00C9C0  0E01               	movlw	high __display_time@presssave
 20794  00C9C2  20F4               	addwfc	prodh,w,c
 20795  00C9C4  6EDA               	movwf	fsr2h,c
 20796  00C9C6  50DF               	movf	indf2,w,c
 20797  00C9C8  B4D8               	btfsc	status,2,c
 20798  00C9CA  D017               	goto	l2013
 20799  00C9CC  D7E1               	goto	l2054
 20800  00C9CE                     l2005:
 20801                           
 20802                           ; BSR set to: 1
 20803                           
 20804                           ; BSR set to: 1
 20805  00C9CE  51CB               	movf	__display_time@mode& (0+255),w,b
 20806                           
 20807                           ; Switch size 1, requested type "space"
 20808                           ; Number of cases is 7, Range of values is 16 to 22
 20809                           ; switch strategies available:
 20810                           ; Name         Instructions Cycles
 20811                           ; simple_byte           22    12 (average)
 20812                           ;	Chosen strategy is simple_byte
 20813  00C9D0  0A10               	xorlw	16	; case 16
 20814  00C9D2  B4D8               	btfsc	status,2,c
 20815  00C9D4  D627               	goto	l2006
 20816  00C9D6  0A01               	xorlw	1	; case 17
 20817  00C9D8  B4D8               	btfsc	status,2,c
 20818  00C9DA  D667               	goto	l2014
 20819  00C9DC  0A03               	xorlw	3	; case 18
 20820  00C9DE  B4D8               	btfsc	status,2,c
 20821  00C9E0  D6A7               	goto	l2021
 20822  00C9E2  0A01               	xorlw	1	; case 19
 20823  00C9E4  B4D8               	btfsc	status,2,c
 20824  00C9E6  D6E7               	goto	l2028
 20825  00C9E8  0A07               	xorlw	7	; case 20
 20826  00C9EA  B4D8               	btfsc	status,2,c
 20827  00C9EC  D727               	goto	l2035
 20828  00C9EE  0A01               	xorlw	1	; case 21
 20829  00C9F0  B4D8               	btfsc	status,2,c
 20830  00C9F2  D767               	goto	l2042
 20831  00C9F4  0A03               	xorlw	3	; case 22
 20832  00C9F6  B4D8               	btfsc	status,2,c
 20833  00C9F8  D7A7               	goto	l2049
 20834  00C9FA                     l2013:
 20835                           
 20836                           ; BSR set to: 1
 20837                           ;display.c: 278: display_content[1][0] = '2';
 20838                           
 20839                           ; BSR set to: 1
 20840  00C9FA  0E32               	movlw	50
 20841  00C9FC  0103               	movlb	3	; () banked
 20842  00C9FE  6F68               	movwf	(_display_content+20)& (0+255),b
 20843                           
 20844                           ;display.c: 279: display_content[1][1] = '0';
 20845  00CA00  0E30               	movlw	48
 20846  00CA02  6F69               	movwf	(_display_content+21)& (0+255),b
 20847                           
 20848                           ; BSR set to: 3
 20849                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 20850  00CA04  0101               	movlb	1	; () banked
 20851  00CA06  39CC               	swapf	__display_time@year& (0+255),w,b
 20852  00CA08  0B0F               	andlw	15
 20853  00CA0A  0F30               	addlw	48
 20854  00CA0C  0103               	movlb	3	; () banked
 20855  00CA0E  6F6A               	movwf	(_display_content+22)& (0+255),b
 20856                           
 20857                           ; BSR set to: 3
 20858                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 20859  00CA10  0101               	movlb	1	; () banked
 20860  00CA12  51CC               	movf	__display_time@year& (0+255),w,b
 20861  00CA14  0B0F               	andlw	15
 20862  00CA16  0F30               	addlw	48
 20863  00CA18  0103               	movlb	3	; () banked
 20864  00CA1A  6F6B               	movwf	(_display_content+23)& (0+255),b
 20865                           
 20866                           ;display.c: 283: display_content[1][4] = '-';
 20867  00CA1C  0E2D               	movlw	45
 20868  00CA1E  6F6C               	movwf	(_display_content+24)& (0+255),b
 20869                           
 20870                           ; BSR set to: 3
 20871                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 20872  00CA20  0101               	movlb	1	; () banked
 20873  00CA22  39CD               	swapf	__display_time@month& (0+255),w,b
 20874  00CA24  0B0F               	andlw	15
 20875  00CA26  0F30               	addlw	48
 20876  00CA28  0103               	movlb	3	; () banked
 20877  00CA2A  6F6D               	movwf	(_display_content+25)& (0+255),b
 20878                           
 20879                           ; BSR set to: 3
 20880                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 20881  00CA2C  0101               	movlb	1	; () banked
 20882  00CA2E  51CD               	movf	__display_time@month& (0+255),w,b
 20883  00CA30  0B0F               	andlw	15
 20884  00CA32  0F30               	addlw	48
 20885  00CA34  0103               	movlb	3	; () banked
 20886  00CA36  6F6E               	movwf	(_display_content+26)& (0+255),b
 20887                           
 20888                           ;display.c: 287: display_content[1][7] = '-';
 20889  00CA38  0E2D               	movlw	45
 20890  00CA3A  6F6F               	movwf	(_display_content+27)& (0+255),b
 20891                           
 20892                           ; BSR set to: 3
 20893                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 20894  00CA3C  0101               	movlb	1	; () banked
 20895  00CA3E  39CE               	swapf	__display_time@day& (0+255),w,b
 20896  00CA40  0B0F               	andlw	15
 20897  00CA42  0F30               	addlw	48
 20898  00CA44  0103               	movlb	3	; () banked
 20899  00CA46  6F70               	movwf	(_display_content+28)& (0+255),b
 20900                           
 20901                           ; BSR set to: 3
 20902                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 20903  00CA48  0101               	movlb	1	; () banked
 20904  00CA4A  51CE               	movf	__display_time@day& (0+255),w,b
 20905  00CA4C  0B0F               	andlw	15
 20906  00CA4E  0F30               	addlw	48
 20907  00CA50  0103               	movlb	3	; () banked
 20908  00CA52  6F71               	movwf	(_display_content+29)& (0+255),b
 20909                           
 20910                           ; BSR set to: 3
 20911                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 20912  00CA54  0101               	movlb	1	; () banked
 20913  00CA56  39CF               	swapf	__display_time@hours& (0+255),w,b
 20914  00CA58  0B0F               	andlw	15
 20915  00CA5A  0F30               	addlw	48
 20916  00CA5C  0103               	movlb	3	; () banked
 20917  00CA5E  6F7C               	movwf	(_display_content+40)& (0+255),b
 20918                           
 20919                           ; BSR set to: 3
 20920                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 20921  00CA60  0101               	movlb	1	; () banked
 20922  00CA62  51CF               	movf	__display_time@hours& (0+255),w,b
 20923  00CA64  0B0F               	andlw	15
 20924  00CA66  0F30               	addlw	48
 20925  00CA68  0103               	movlb	3	; () banked
 20926  00CA6A  6F7D               	movwf	(_display_content+41)& (0+255),b
 20927                           
 20928                           ;display.c: 294: display_content[2][2] = ':';
 20929  00CA6C  0E3A               	movlw	58
 20930  00CA6E  6F7E               	movwf	(_display_content+42)& (0+255),b
 20931                           
 20932                           ; BSR set to: 3
 20933                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 20934  00CA70  0101               	movlb	1	; () banked
 20935  00CA72  39D0               	swapf	__display_time@minutes& (0+255),w,b
 20936  00CA74  0B0F               	andlw	15
 20937  00CA76  0F30               	addlw	48
 20938  00CA78  0103               	movlb	3	; () banked
 20939  00CA7A  6F7F               	movwf	(_display_content+43)& (0+255),b
 20940                           
 20941                           ; BSR set to: 3
 20942                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 20943  00CA7C  0101               	movlb	1	; () banked
 20944  00CA7E  51D0               	movf	__display_time@minutes& (0+255),w,b
 20945  00CA80  0B0F               	andlw	15
 20946  00CA82  0F30               	addlw	48
 20947  00CA84  0103               	movlb	3	; () banked
 20948  00CA86  6F80               	movwf	(_display_content+44)& (0+255),b
 20949                           
 20950                           ;display.c: 298: display_content[2][5] = ':';
 20951  00CA88  0E3A               	movlw	58
 20952  00CA8A  6F81               	movwf	(_display_content+45)& (0+255),b
 20953                           
 20954                           ; BSR set to: 3
 20955                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 20956  00CA8C  0101               	movlb	1	; () banked
 20957  00CA8E  39D1               	swapf	__display_time@seconds& (0+255),w,b
 20958  00CA90  0B0F               	andlw	15
 20959  00CA92  0F30               	addlw	48
 20960  00CA94  0103               	movlb	3	; () banked
 20961  00CA96  6F82               	movwf	(_display_content+46)& (0+255),b
 20962                           
 20963                           ; BSR set to: 3
 20964                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 20965  00CA98  0101               	movlb	1	; () banked
 20966  00CA9A  51D1               	movf	__display_time@seconds& (0+255),w,b
 20967  00CA9C  0B0F               	andlw	15
 20968  00CA9E  0F30               	addlw	48
 20969  00CAA0  0103               	movlb	3	; () banked
 20970  00CAA2  6F83               	movwf	(_display_content+47)& (0+255),b
 20971                           
 20972                           ; BSR set to: 3
 20973  00CAA4  0012               	return		;funcret
 20974  00CAA6                     __end_of__display_time:
 20975                           	opt stack 0
 20976                           tblptru	equ	0xFF8
 20977                           tblptrh	equ	0xFF7
 20978                           tblptrl	equ	0xFF6
 20979                           tablat	equ	0xFF5
 20980                           prodh	equ	0xFF4
 20981                           prodl	equ	0xFF3
 20982                           intcon	equ	0xFF2
 20983                           intcon2	equ	0xFF1
 20984                           intcon3	equ	0xFF0
 20985                           postinc0	equ	0xFEE
 20986                           wreg	equ	0xFE8
 20987                           indf1	equ	0xFE7
 20988                           postinc1	equ	0xFE6
 20989                           postdec1	equ	0xFE5
 20990                           plusw1	equ	0xFE3
 20991                           fsr1h	equ	0xFE2
 20992                           fsr1l	equ	0xFE1
 20993                           indf2	equ	0xFDF
 20994                           postinc2	equ	0xFDE
 20995                           postdec2	equ	0xFDD
 20996                           plusw2	equ	0xFDB
 20997                           fsr2h	equ	0xFDA
 20998                           fsr2l	equ	0xFD9
 20999                           status	equ	0xFD8
 21000                           
 21001 ;; *************** function __display_temperature *****************
 21002 ;; Defined at:
 21003 ;;		line 513 in file "display.c"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;		None
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;  header         20   48[BANK0 ] const unsigned char [20]
 21008 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 21009 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 21010 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 21011 ;;  cntr            1  103[BANK0 ] unsigned char 
 21012 ;; Return value:  Size  Location     Type
 21013 ;;                  1    wreg      void 
 21014 ;; Registers used:
 21015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21016 ;; Tracked objects:
 21017 ;;		On entry : 0/0
 21018 ;;		On exit  : 0/0
 21019 ;;		Unchanged: 0/0
 21020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21022 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21024 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21025 ;;Total ram usage:       56 bytes
 21026 ;; Hardware stack levels used:    1
 21027 ;; Hardware stack levels required when called:   14
 21028 ;; This function calls:
 21029 ;;		__display_itoa
 21030 ;; This function is called by:
 21031 ;;		_display_prepare
 21032 ;; This function uses a non-reentrant model
 21033 ;;
 21034                           
 21035                           	psect	text101
 21036  010158                     __ptext101:
 21037                           	opt stack 0
 21038  010158                     __display_temperature:
 21039                           	opt stack 15
 21040                           
 21041                           ;display.c: 515: uint8_t cntr;;display.c: 516: const char header[] = "Temperature Monito
      +                          r";
 21042                           
 21043                           ; BSR set to: 3
 21044                           ;incstack = 0
 21045  010158  0EDF               	movlw	low __display_temperature@F7296
 21046  01015A  6EF6               	movwf	tblptrl,c
 21047  01015C                     	if	1	;There is more than 1 active tblptr byte
 21048  01015C  0EC0               	movlw	high __display_temperature@F7296
 21049  01015E  6EF7               	movwf	tblptrh,c
 21050  010160                     	endif
 21051  010160                     	if	1	;There are 3 active tblptr bytes
 21052  010160  0E00               	movlw	low (__display_temperature@F7296 shr (0+16))
 21053  010162  6EF8               	movwf	tblptru,c
 21054  010164                     	endif
 21055  010164  EE20  F090         	lfsr	2,__display_temperature@header
 21056  010168  0E13               	movlw	19
 21057  01016A                     u21300:
 21058  01016A  0009               	tblrd		*+
 21059  01016C  CFF5 FFDE          	movff	tablat,postinc2
 21060  010170  06E8               	decf	wreg,f,c
 21061  010172  E2FB               	bc	u21300
 21062                           
 21063                           ;display.c: 517: const char internal[] = "On-board: ";
 21064  010174  0ECF               	movlw	low __display_temperature@F7298
 21065  010176  6EF6               	movwf	tblptrl,c
 21066  010178                     	if	1	;There is more than 1 active tblptr byte
 21067  010178  0EC2               	movlw	high __display_temperature@F7298
 21068  01017A  6EF7               	movwf	tblptrh,c
 21069  01017C                     	endif
 21070  01017C                     	if	1	;There are 3 active tblptr bytes
 21071  01017C  0E00               	movlw	low (__display_temperature@F7298 shr (0+16))
 21072  01017E  6EF8               	movwf	tblptru,c
 21073  010180                     	endif
 21074  010180  EE20  F0BC         	lfsr	2,__display_temperature@internal
 21075  010184  0E0A               	movlw	10
 21076  010186                     u21310:
 21077  010186  0009               	tblrd		*+
 21078  010188  CFF5 FFDE          	movff	tablat,postinc2
 21079  01018C  06E8               	decf	wreg,f,c
 21080  01018E  E2FB               	bc	u21310
 21081                           
 21082                           ;display.c: 518: const char external1[] = "External 1:";
 21083  010190  0E9F               	movlw	low __display_temperature@F7300
 21084  010192  6EF6               	movwf	tblptrl,c
 21085  010194                     	if	1	;There is more than 1 active tblptr byte
 21086  010194  0EC2               	movlw	high __display_temperature@F7300
 21087  010196  6EF7               	movwf	tblptrh,c
 21088  010198                     	endif
 21089  010198                     	if	1	;There are 3 active tblptr bytes
 21090  010198  0E00               	movlw	low (__display_temperature@F7300 shr (0+16))
 21091  01019A  6EF8               	movwf	tblptru,c
 21092  01019C                     	endif
 21093  01019C  EE20  F0A4         	lfsr	2,__display_temperature@external1
 21094  0101A0  0E0B               	movlw	11
 21095  0101A2                     u21320:
 21096  0101A2  0009               	tblrd		*+
 21097  0101A4  CFF5 FFDE          	movff	tablat,postinc2
 21098  0101A8  06E8               	decf	wreg,f,c
 21099  0101AA  E2FB               	bc	u21320
 21100                           
 21101                           ;display.c: 519: const char external2[] = "External 2:";
 21102  0101AC  0E93               	movlw	low __display_temperature@F7302
 21103  0101AE  6EF6               	movwf	tblptrl,c
 21104  0101B0                     	if	1	;There is more than 1 active tblptr byte
 21105  0101B0  0EC2               	movlw	high __display_temperature@F7302
 21106  0101B2  6EF7               	movwf	tblptrh,c
 21107  0101B4                     	endif
 21108  0101B4                     	if	1	;There are 3 active tblptr bytes
 21109  0101B4  0E00               	movlw	low (__display_temperature@F7302 shr (0+16))
 21110  0101B6  6EF8               	movwf	tblptru,c
 21111  0101B8                     	endif
 21112  0101B8  EE20  F0B0         	lfsr	2,__display_temperature@external2
 21113  0101BC  0E0B               	movlw	11
 21114  0101BE                     u21330:
 21115  0101BE  0009               	tblrd		*+
 21116  0101C0  CFF5 FFDE          	movff	tablat,postinc2
 21117  0101C4  06E8               	decf	wreg,f,c
 21118  0101C6  E2FB               	bc	u21330
 21119                           
 21120                           ;display.c: 521: cntr = 0;
 21121  0101C8  0E00               	movlw	0
 21122  0101CA  0100               	movlb	0	; () banked
 21123  0101CC  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21124                           
 21125                           ;display.c: 522: while(header[cntr])
 21126  0101CE  D013               	goto	l2197
 21127  0101D0                     
 21128                           ; BSR set to: 0
 21129                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 21130                           
 21131                           ; BSR set to: 0
 21132  0101D0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21133  0101D2  0D01               	mullw	1
 21134  0101D4  0E90               	movlw	low __display_temperature@header
 21135  0101D6  24F3               	addwf	prodl,w,c
 21136  0101D8  6ED9               	movwf	fsr2l,c
 21137  0101DA  0E00               	movlw	high __display_temperature@header
 21138  0101DC  20F4               	addwfc	prodh,w,c
 21139  0101DE  6EDA               	movwf	fsr2h,c
 21140  0101E0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21141  0101E2  0D01               	mullw	1
 21142  0101E4  0E54               	movlw	low _display_content
 21143  0101E6  24F3               	addwf	prodl,w,c
 21144  0101E8  6EE1               	movwf	fsr1l,c
 21145  0101EA  0E03               	movlw	high _display_content
 21146  0101EC  20F4               	addwfc	prodh,w,c
 21147  0101EE  6EE2               	movwf	fsr1h,c
 21148  0101F0  CFDF FFE7          	movff	indf2,indf1
 21149                           
 21150                           ; BSR set to: 0
 21151  0101F4  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21152  0101F6                     l2197:
 21153                           
 21154                           ; BSR set to: 0
 21155                           
 21156                           ; BSR set to: 0
 21157  0101F6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21158  0101F8  0D01               	mullw	1
 21159  0101FA  0E90               	movlw	low __display_temperature@header
 21160  0101FC  24F3               	addwf	prodl,w,c
 21161  0101FE  6ED9               	movwf	fsr2l,c
 21162  010200  0E00               	movlw	high __display_temperature@header
 21163  010202  20F4               	addwfc	prodh,w,c
 21164  010204  6EDA               	movwf	fsr2h,c
 21165  010206  50DF               	movf	indf2,w,c
 21166  010208  A4D8               	btfss	status,2,c
 21167  01020A  D7E2               	goto	l2198
 21168                           
 21169                           ; BSR set to: 0
 21170                           ;display.c: 525: cntr = 0;
 21171                           
 21172                           ; BSR set to: 0
 21173  01020C  0E00               	movlw	0
 21174  01020E  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21175                           
 21176                           ;display.c: 526: while(internal[cntr])
 21177  010210  D013               	goto	l2200
 21178  010212                     
 21179                           ; BSR set to: 0
 21180                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 21181                           
 21182                           ; BSR set to: 0
 21183  010212  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21184  010214  0D01               	mullw	1
 21185  010216  0EBC               	movlw	low __display_temperature@internal
 21186  010218  24F3               	addwf	prodl,w,c
 21187  01021A  6ED9               	movwf	fsr2l,c
 21188  01021C  0E00               	movlw	high __display_temperature@internal
 21189  01021E  20F4               	addwfc	prodh,w,c
 21190  010220  6EDA               	movwf	fsr2h,c
 21191  010222  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21192  010224  0D01               	mullw	1
 21193  010226  0E68               	movlw	low (_display_content+20)
 21194  010228  24F3               	addwf	prodl,w,c
 21195  01022A  6EE1               	movwf	fsr1l,c
 21196  01022C  0E03               	movlw	high (_display_content+20)
 21197  01022E  20F4               	addwfc	prodh,w,c
 21198  010230  6EE2               	movwf	fsr1h,c
 21199  010232  CFDF FFE7          	movff	indf2,indf1
 21200                           
 21201                           ; BSR set to: 0
 21202  010236  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21203  010238                     l2200:
 21204                           
 21205                           ; BSR set to: 0
 21206                           
 21207                           ; BSR set to: 0
 21208  010238  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21209  01023A  0D01               	mullw	1
 21210  01023C  0EBC               	movlw	low __display_temperature@internal
 21211  01023E  24F3               	addwf	prodl,w,c
 21212  010240  6ED9               	movwf	fsr2l,c
 21213  010242  0E00               	movlw	high __display_temperature@internal
 21214  010244  20F4               	addwfc	prodh,w,c
 21215  010246  6EDA               	movwf	fsr2h,c
 21216  010248  50DF               	movf	indf2,w,c
 21217  01024A  A4D8               	btfss	status,2,c
 21218  01024C  D7E2               	goto	l2201
 21219                           
 21220                           ; BSR set to: 0
 21221                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 21222                           
 21223                           ; BSR set to: 0
 21224  01024E  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 21225  010252  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 21226  010256  0E02               	movlw	2
 21227  010258  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21228  01025A  0E74               	movlw	low (_display_content+32)
 21229  01025C  6F7B               	movwf	__display_itoa@text& (0+255),b
 21230  01025E  0E03               	movlw	high (_display_content+32)
 21231  010260  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21232  010262  ECC3  F07D         	call	__display_itoa	;wreg free
 21233                           
 21234                           ;display.c: 531: cntr = 0;
 21235  010266  0E00               	movlw	0
 21236  010268  0100               	movlb	0	; () banked
 21237  01026A  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21238                           
 21239                           ;display.c: 532: while(external1[cntr])
 21240  01026C  D013               	goto	l2203
 21241  01026E                     
 21242                           ; BSR set to: 0
 21243                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 21244                           
 21245                           ; BSR set to: 0
 21246  01026E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21247  010270  0D01               	mullw	1
 21248  010272  0EA4               	movlw	low __display_temperature@external1
 21249  010274  24F3               	addwf	prodl,w,c
 21250  010276  6ED9               	movwf	fsr2l,c
 21251  010278  0E00               	movlw	high __display_temperature@external1
 21252  01027A  20F4               	addwfc	prodh,w,c
 21253  01027C  6EDA               	movwf	fsr2h,c
 21254  01027E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21255  010280  0D01               	mullw	1
 21256  010282  0E7C               	movlw	low (_display_content+40)
 21257  010284  24F3               	addwf	prodl,w,c
 21258  010286  6EE1               	movwf	fsr1l,c
 21259  010288  0E03               	movlw	high (_display_content+40)
 21260  01028A  20F4               	addwfc	prodh,w,c
 21261  01028C  6EE2               	movwf	fsr1h,c
 21262  01028E  CFDF FFE7          	movff	indf2,indf1
 21263                           
 21264                           ; BSR set to: 0
 21265  010292  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21266  010294                     l2203:
 21267                           
 21268                           ; BSR set to: 0
 21269                           
 21270                           ; BSR set to: 0
 21271  010294  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21272  010296  0D01               	mullw	1
 21273  010298  0EA4               	movlw	low __display_temperature@external1
 21274  01029A  24F3               	addwf	prodl,w,c
 21275  01029C  6ED9               	movwf	fsr2l,c
 21276  01029E  0E00               	movlw	high __display_temperature@external1
 21277  0102A0  20F4               	addwfc	prodh,w,c
 21278  0102A2  6EDA               	movwf	fsr2h,c
 21279  0102A4  50DF               	movf	indf2,w,c
 21280  0102A6  A4D8               	btfss	status,2,c
 21281  0102A8  D7E2               	goto	l2204
 21282                           
 21283                           ; BSR set to: 0
 21284                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 21285                           
 21286                           ; BSR set to: 0
 21287  0102AA  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 21288  0102AE  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 21289  0102B2  0E02               	movlw	2
 21290  0102B4  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21291  0102B6  0E88               	movlw	low (_display_content+52)
 21292  0102B8  6F7B               	movwf	__display_itoa@text& (0+255),b
 21293  0102BA  0E03               	movlw	high (_display_content+52)
 21294  0102BC  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21295  0102BE  ECC3  F07D         	call	__display_itoa	;wreg free
 21296                           
 21297                           ;display.c: 537: cntr = 0;
 21298  0102C2  0E00               	movlw	0
 21299  0102C4  0100               	movlb	0	; () banked
 21300  0102C6  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21301                           
 21302                           ;display.c: 538: while(external2[cntr])
 21303  0102C8  D013               	goto	l2206
 21304  0102CA                     
 21305                           ; BSR set to: 0
 21306                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 21307                           
 21308                           ; BSR set to: 0
 21309  0102CA  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21310  0102CC  0D01               	mullw	1
 21311  0102CE  0EB0               	movlw	low __display_temperature@external2
 21312  0102D0  24F3               	addwf	prodl,w,c
 21313  0102D2  6ED9               	movwf	fsr2l,c
 21314  0102D4  0E00               	movlw	high __display_temperature@external2
 21315  0102D6  20F4               	addwfc	prodh,w,c
 21316  0102D8  6EDA               	movwf	fsr2h,c
 21317  0102DA  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21318  0102DC  0D01               	mullw	1
 21319  0102DE  0E90               	movlw	low (_display_content+60)
 21320  0102E0  24F3               	addwf	prodl,w,c
 21321  0102E2  6EE1               	movwf	fsr1l,c
 21322  0102E4  0E03               	movlw	high (_display_content+60)
 21323  0102E6  20F4               	addwfc	prodh,w,c
 21324  0102E8  6EE2               	movwf	fsr1h,c
 21325  0102EA  CFDF FFE7          	movff	indf2,indf1
 21326                           
 21327                           ; BSR set to: 0
 21328  0102EE  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21329  0102F0                     l2206:
 21330                           
 21331                           ; BSR set to: 0
 21332                           
 21333                           ; BSR set to: 0
 21334  0102F0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21335  0102F2  0D01               	mullw	1
 21336  0102F4  0EB0               	movlw	low __display_temperature@external2
 21337  0102F6  24F3               	addwf	prodl,w,c
 21338  0102F8  6ED9               	movwf	fsr2l,c
 21339  0102FA  0E00               	movlw	high __display_temperature@external2
 21340  0102FC  20F4               	addwfc	prodh,w,c
 21341  0102FE  6EDA               	movwf	fsr2h,c
 21342  010300  50DF               	movf	indf2,w,c
 21343  010302  A4D8               	btfss	status,2,c
 21344  010304  D7E2               	goto	l2207
 21345                           
 21346                           ; BSR set to: 0
 21347                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 21348                           
 21349                           ; BSR set to: 0
 21350  010306  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 21351  01030A  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 21352  01030E  0E02               	movlw	2
 21353  010310  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21354  010312  0E9C               	movlw	low (_display_content+72)
 21355  010314  6F7B               	movwf	__display_itoa@text& (0+255),b
 21356  010316  0E03               	movlw	high (_display_content+72)
 21357  010318  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21358  01031A  ECC3  F07D         	call	__display_itoa	;wreg free
 21359  01031E  0012               	return		;funcret
 21360  010320                     __end_of__display_temperature:
 21361                           	opt stack 0
 21362                           tblptru	equ	0xFF8
 21363                           tblptrh	equ	0xFF7
 21364                           tblptrl	equ	0xFF6
 21365                           tablat	equ	0xFF5
 21366                           prodh	equ	0xFF4
 21367                           prodl	equ	0xFF3
 21368                           intcon	equ	0xFF2
 21369                           intcon2	equ	0xFF1
 21370                           intcon3	equ	0xFF0
 21371                           postinc0	equ	0xFEE
 21372                           wreg	equ	0xFE8
 21373                           indf1	equ	0xFE7
 21374                           postinc1	equ	0xFE6
 21375                           postdec1	equ	0xFE5
 21376                           plusw1	equ	0xFE3
 21377                           fsr1h	equ	0xFE2
 21378                           fsr1l	equ	0xFE1
 21379                           indf2	equ	0xFDF
 21380                           postinc2	equ	0xFDE
 21381                           postdec2	equ	0xFDD
 21382                           plusw2	equ	0xFDB
 21383                           fsr2h	equ	0xFDA
 21384                           fsr2l	equ	0xFD9
 21385                           status	equ	0xFD8
 21386                           
 21387 ;; *************** function __display_outputs *****************
 21388 ;; Defined at:
 21389 ;;		line 336 in file "display.c"
 21390 ;; Parameters:    Size  Location     Type
 21391 ;;  mode            1    wreg     unsigned char 
 21392 ;; Auto vars:     Size  Location     Type
 21393 ;;  mode            1   72[BANK0 ] unsigned char 
 21394 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 21395 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 21396 ;;  low            16   42[BANK0 ] const unsigned char [16]
 21397 ;;  header         14   58[BANK0 ] const unsigned char [14]
 21398 ;;  cntr            1   73[BANK0 ] unsigned char 
 21399 ;; Return value:  Size  Location     Type
 21400 ;;                  1    wreg      void 
 21401 ;; Registers used:
 21402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21403 ;; Tracked objects:
 21404 ;;		On entry : 0/0
 21405 ;;		On exit  : 0/0
 21406 ;;		Unchanged: 0/0
 21407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21409 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21411 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21412 ;;Total ram usage:       74 bytes
 21413 ;; Hardware stack levels used:    1
 21414 ;; Hardware stack levels required when called:   10
 21415 ;; This function calls:
 21416 ;;		Nothing
 21417 ;; This function is called by:
 21418 ;;		_display_prepare
 21419 ;; This function uses a non-reentrant model
 21420 ;;
 21421                           
 21422                           	psect	text102
 21423  00F964                     __ptext102:
 21424                           	opt stack 0
 21425  00F964                     __display_outputs:
 21426                           	opt stack 19
 21427                           
 21428                           ;incstack = 0
 21429                           ;__display_outputs@mode stored from wreg
 21430  00F964  0100               	movlb	0	; () banked
 21431  00F966  6FA8               	movwf	__display_outputs@mode& (0+255),b
 21432                           
 21433                           ;display.c: 338: uint8_t cntr;;display.c: 339: const char header[] = "Power Outputs";
 21434  00F968  0E69               	movlw	low __display_outputs@F7245
 21435  00F96A  6EF6               	movwf	tblptrl,c
 21436  00F96C                     	if	1	;There is more than 1 active tblptr byte
 21437  00F96C  0EC2               	movlw	high __display_outputs@F7245
 21438  00F96E  6EF7               	movwf	tblptrh,c
 21439  00F970                     	endif
 21440  00F970                     	if	1	;There are 3 active tblptr bytes
 21441  00F970  0E00               	movlw	low (__display_outputs@F7245 shr (0+16))
 21442  00F972  6EF8               	movwf	tblptru,c
 21443  00F974                     	endif
 21444  00F974  EE20  F09A         	lfsr	2,__display_outputs@header
 21445  00F978  0E0D               	movlw	13
 21446  00F97A                     u20940:
 21447  00F97A  0009               	tblrd		*+
 21448  00F97C  CFF5 FFDE          	movff	tablat,postinc2
 21449  00F980  06E8               	decf	wreg,f,c
 21450  00F982  E2FB               	bc	u20940
 21451                           
 21452                           ;display.c: 340: const char low[] = "Battery too low";
 21453  00F984  0E0B               	movlw	low __display_outputs@F7247
 21454  00F986  6EF6               	movwf	tblptrl,c
 21455  00F988                     	if	1	;There is more than 1 active tblptr byte
 21456  00F988  0EC2               	movlw	high __display_outputs@F7247
 21457  00F98A  6EF7               	movwf	tblptrh,c
 21458  00F98C                     	endif
 21459  00F98C                     	if	1	;There are 3 active tblptr bytes
 21460  00F98C  0E00               	movlw	low (__display_outputs@F7247 shr (0+16))
 21461  00F98E  6EF8               	movwf	tblptru,c
 21462  00F990                     	endif
 21463  00F990  EE20  F08A         	lfsr	2,__display_outputs@low
 21464  00F994  0E0F               	movlw	15
 21465  00F996                     u20950:
 21466  00F996  0009               	tblrd		*+
 21467  00F998  CFF5 FFDE          	movff	tablat,postinc2
 21468  00F99C  06E8               	decf	wreg,f,c
 21469  00F99E  E2FB               	bc	u20950
 21470                           
 21471                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 21472  00F9A0  0ECA               	movlw	low __display_outputs@F7249
 21473  00F9A2  6EF6               	movwf	tblptrl,c
 21474  00F9A4                     	if	1	;There is more than 1 active tblptr byte
 21475  00F9A4  0EC0               	movlw	high __display_outputs@F7249
 21476  00F9A6  6EF7               	movwf	tblptrh,c
 21477  00F9A8                     	endif
 21478  00F9A8                     	if	1	;There are 3 active tblptr bytes
 21479  00F9A8  0E00               	movlw	low (__display_outputs@F7249 shr (0+16))
 21480  00F9AA  6EF8               	movwf	tblptru,c
 21481  00F9AC                     	endif
 21482  00F9AC  EE20  F060         	lfsr	2,__display_outputs@line3
 21483  00F9B0  0E14               	movlw	20
 21484  00F9B2                     u20960:
 21485  00F9B2  0009               	tblrd		*+
 21486  00F9B4  CFF5 FFDE          	movff	tablat,postinc2
 21487  00F9B8  06E8               	decf	wreg,f,c
 21488  00F9BA  E2FB               	bc	u20960
 21489                           
 21490                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 21491  00F9BC  0EB5               	movlw	low __display_outputs@F7251
 21492  00F9BE  6EF6               	movwf	tblptrl,c
 21493  00F9C0                     	if	1	;There is more than 1 active tblptr byte
 21494  00F9C0  0EC0               	movlw	high __display_outputs@F7251
 21495  00F9C2  6EF7               	movwf	tblptrh,c
 21496  00F9C4                     	endif
 21497  00F9C4                     	if	1	;There are 3 active tblptr bytes
 21498  00F9C4  0E00               	movlw	low (__display_outputs@F7251 shr (0+16))
 21499  00F9C6  6EF8               	movwf	tblptru,c
 21500  00F9C8                     	endif
 21501  00F9C8  EE20  F075         	lfsr	2,__display_outputs@line4
 21502  00F9CC  0E14               	movlw	20
 21503  00F9CE                     u20970:
 21504  00F9CE  0009               	tblrd		*+
 21505  00F9D0  CFF5 FFDE          	movff	tablat,postinc2
 21506  00F9D4  06E8               	decf	wreg,f,c
 21507  00F9D6  E2FB               	bc	u20970
 21508                           
 21509                           ;display.c: 344: cntr = 0;
 21510  00F9D8  0E00               	movlw	0
 21511  00F9DA  0100               	movlb	0	; () banked
 21512  00F9DC  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21513                           
 21514                           ;display.c: 345: while(header[cntr])
 21515  00F9DE  D013               	goto	l2093
 21516  00F9E0                     
 21517                           ; BSR set to: 0
 21518                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 21519                           
 21520                           ; BSR set to: 0
 21521  00F9E0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21522  00F9E2  0D01               	mullw	1
 21523  00F9E4  0E9A               	movlw	low __display_outputs@header
 21524  00F9E6  24F3               	addwf	prodl,w,c
 21525  00F9E8  6ED9               	movwf	fsr2l,c
 21526  00F9EA  0E00               	movlw	high __display_outputs@header
 21527  00F9EC  20F4               	addwfc	prodh,w,c
 21528  00F9EE  6EDA               	movwf	fsr2h,c
 21529  00F9F0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21530  00F9F2  0D01               	mullw	1
 21531  00F9F4  0E54               	movlw	low _display_content
 21532  00F9F6  24F3               	addwf	prodl,w,c
 21533  00F9F8  6EE1               	movwf	fsr1l,c
 21534  00F9FA  0E03               	movlw	high _display_content
 21535  00F9FC  20F4               	addwfc	prodh,w,c
 21536  00F9FE  6EE2               	movwf	fsr1h,c
 21537  00FA00  CFDF FFE7          	movff	indf2,indf1
 21538                           
 21539                           ; BSR set to: 0
 21540  00FA04  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21541  00FA06                     l2093:
 21542                           
 21543                           ; BSR set to: 0
 21544                           
 21545                           ; BSR set to: 0
 21546  00FA06  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21547  00FA08  0D01               	mullw	1
 21548  00FA0A  0E9A               	movlw	low __display_outputs@header
 21549  00FA0C  24F3               	addwf	prodl,w,c
 21550  00FA0E  6ED9               	movwf	fsr2l,c
 21551  00FA10  0E00               	movlw	high __display_outputs@header
 21552  00FA12  20F4               	addwfc	prodh,w,c
 21553  00FA14  6EDA               	movwf	fsr2h,c
 21554  00FA16  50DF               	movf	indf2,w,c
 21555  00FA18  A4D8               	btfss	status,2,c
 21556  00FA1A  D7E2               	goto	l2094
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;display.c: 348: if(os.output_voltage<-1)
 21560                           
 21561                           ; BSR set to: 0
 21562  00FA1C  0102               	movlb	2	; () banked
 21563  00FA1E  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 21564  00FA20  D027               	goto	u21000
 21565  00FA22  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 21566  00FA24  0EFF               	movlw	255
 21567  00FA26  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 21568  00FA28  B0D8               	btfsc	status,0,c
 21569  00FA2A  D022               	goto	u21000
 21570                           
 21571                           ; BSR set to: 2
 21572                           ;display.c: 349: {;display.c: 350: cntr = 0;
 21573  00FA2C  0E00               	movlw	0
 21574  00FA2E  0100               	movlb	0	; () banked
 21575  00FA30  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21576                           
 21577                           ;display.c: 351: while(low[cntr])
 21578  00FA32  D013               	goto	l2097
 21579  00FA34                     
 21580                           ; BSR set to: 0
 21581                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 21582                           
 21583                           ; BSR set to: 0
 21584  00FA34  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21585  00FA36  0D01               	mullw	1
 21586  00FA38  0E8A               	movlw	low __display_outputs@low
 21587  00FA3A  24F3               	addwf	prodl,w,c
 21588  00FA3C  6ED9               	movwf	fsr2l,c
 21589  00FA3E  0E00               	movlw	high __display_outputs@low
 21590  00FA40  20F4               	addwfc	prodh,w,c
 21591  00FA42  6EDA               	movwf	fsr2h,c
 21592  00FA44  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21593  00FA46  0D01               	mullw	1
 21594  00FA48  0E68               	movlw	low (_display_content+20)
 21595  00FA4A  24F3               	addwf	prodl,w,c
 21596  00FA4C  6EE1               	movwf	fsr1l,c
 21597  00FA4E  0E03               	movlw	high (_display_content+20)
 21598  00FA50  20F4               	addwfc	prodh,w,c
 21599  00FA52  6EE2               	movwf	fsr1h,c
 21600  00FA54  CFDF FFE7          	movff	indf2,indf1
 21601                           
 21602                           ; BSR set to: 0
 21603  00FA58  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21604  00FA5A                     l2097:
 21605                           
 21606                           ; BSR set to: 0
 21607                           
 21608                           ; BSR set to: 0
 21609  00FA5A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21610  00FA5C  0D01               	mullw	1
 21611  00FA5E  0E8A               	movlw	low __display_outputs@low
 21612  00FA60  24F3               	addwf	prodl,w,c
 21613  00FA62  6ED9               	movwf	fsr2l,c
 21614  00FA64  0E00               	movlw	high __display_outputs@low
 21615  00FA66  20F4               	addwfc	prodh,w,c
 21616  00FA68  6EDA               	movwf	fsr2h,c
 21617  00FA6A  50DF               	movf	indf2,w,c
 21618  00FA6C  A4D8               	btfss	status,2,c
 21619  00FA6E  D7E2               	goto	l2098
 21620  00FA70                     u21000:
 21621                           
 21622                           ;display.c: 353: };display.c: 355: cntr = 0;
 21623                           
 21624                           ; BSR set to: 0
 21625                           
 21626                           ; BSR set to: 0
 21627  00FA70  0E00               	movlw	0
 21628  00FA72  0100               	movlb	0	; () banked
 21629  00FA74  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21630                           
 21631                           ;display.c: 356: while(line3[cntr])
 21632  00FA76  D013               	goto	l2100
 21633  00FA78                     
 21634                           ; BSR set to: 0
 21635                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 21636                           
 21637                           ; BSR set to: 0
 21638  00FA78  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21639  00FA7A  0D01               	mullw	1
 21640  00FA7C  0E60               	movlw	low __display_outputs@line3
 21641  00FA7E  24F3               	addwf	prodl,w,c
 21642  00FA80  6ED9               	movwf	fsr2l,c
 21643  00FA82  0E00               	movlw	high __display_outputs@line3
 21644  00FA84  20F4               	addwfc	prodh,w,c
 21645  00FA86  6EDA               	movwf	fsr2h,c
 21646  00FA88  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21647  00FA8A  0D01               	mullw	1
 21648  00FA8C  0E7C               	movlw	low (_display_content+40)
 21649  00FA8E  24F3               	addwf	prodl,w,c
 21650  00FA90  6EE1               	movwf	fsr1l,c
 21651  00FA92  0E03               	movlw	high (_display_content+40)
 21652  00FA94  20F4               	addwfc	prodh,w,c
 21653  00FA96  6EE2               	movwf	fsr1h,c
 21654  00FA98  CFDF FFE7          	movff	indf2,indf1
 21655                           
 21656                           ; BSR set to: 0
 21657  00FA9C  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21658  00FA9E                     l2100:
 21659                           
 21660                           ; BSR set to: 0
 21661                           
 21662                           ; BSR set to: 0
 21663  00FA9E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21664  00FAA0  0D01               	mullw	1
 21665  00FAA2  0E60               	movlw	low __display_outputs@line3
 21666  00FAA4  24F3               	addwf	prodl,w,c
 21667  00FAA6  6ED9               	movwf	fsr2l,c
 21668  00FAA8  0E00               	movlw	high __display_outputs@line3
 21669  00FAAA  20F4               	addwfc	prodh,w,c
 21670  00FAAC  6EDA               	movwf	fsr2h,c
 21671  00FAAE  50DF               	movf	indf2,w,c
 21672  00FAB0  A4D8               	btfss	status,2,c
 21673  00FAB2  D7E2               	goto	l2101
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;display.c: 359: cntr = 0;
 21677                           
 21678                           ; BSR set to: 0
 21679  00FAB4  0E00               	movlw	0
 21680  00FAB6  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21681                           
 21682                           ;display.c: 360: while(line4[cntr])
 21683  00FAB8  D013               	goto	l2103
 21684  00FABA                     
 21685                           ; BSR set to: 0
 21686                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 21687                           
 21688                           ; BSR set to: 0
 21689  00FABA  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21690  00FABC  0D01               	mullw	1
 21691  00FABE  0E75               	movlw	low __display_outputs@line4
 21692  00FAC0  24F3               	addwf	prodl,w,c
 21693  00FAC2  6ED9               	movwf	fsr2l,c
 21694  00FAC4  0E00               	movlw	high __display_outputs@line4
 21695  00FAC6  20F4               	addwfc	prodh,w,c
 21696  00FAC8  6EDA               	movwf	fsr2h,c
 21697  00FACA  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21698  00FACC  0D01               	mullw	1
 21699  00FACE  0E90               	movlw	low (_display_content+60)
 21700  00FAD0  24F3               	addwf	prodl,w,c
 21701  00FAD2  6EE1               	movwf	fsr1l,c
 21702  00FAD4  0E03               	movlw	high (_display_content+60)
 21703  00FAD6  20F4               	addwfc	prodh,w,c
 21704  00FAD8  6EE2               	movwf	fsr1h,c
 21705  00FADA  CFDF FFE7          	movff	indf2,indf1
 21706                           
 21707                           ; BSR set to: 0
 21708  00FADE  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21709  00FAE0                     l2103:
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714  00FAE0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21715  00FAE2  0D01               	mullw	1
 21716  00FAE4  0E75               	movlw	low __display_outputs@line4
 21717  00FAE6  24F3               	addwf	prodl,w,c
 21718  00FAE8  6ED9               	movwf	fsr2l,c
 21719  00FAEA  0E00               	movlw	high __display_outputs@line4
 21720  00FAEC  20F4               	addwfc	prodh,w,c
 21721  00FAEE  6EDA               	movwf	fsr2h,c
 21722  00FAF0  50DF               	movf	indf2,w,c
 21723  00FAF2  A4D8               	btfss	status,2,c
 21724  00FAF4  D7E2               	goto	l2104
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 21728  00FAF6  0102               	movlb	2	; () banked
 21729  00FAF8  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 21730  00FAFA  D005               	goto	l2106
 21731                           
 21732                           ; BSR set to: 2
 21733                           ;display.c: 364: {;display.c: 365: display_content[2][8] = 'n';
 21734  00FAFC  0E6E               	movlw	110
 21735  00FAFE  0103               	movlb	3	; () banked
 21736  00FB00  6F84               	movwf	(_display_content+48)& (0+255),b
 21737                           
 21738                           ;display.c: 366: display_content[2][9] = ' ';
 21739  00FB02  0E20               	movlw	32
 21740  00FB04  6F85               	movwf	(_display_content+49)& (0+255),b
 21741  00FB06                     l2106:
 21742                           
 21743                           ;display.c: 367: };display.c: 368: if(os.outputs & OUTPUT_2)
 21744                           
 21745                           ; BSR set to: 3
 21746  00FB06  0102               	movlb	2	; () banked
 21747  00FB08  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 21748  00FB0A  D005               	goto	l2107
 21749                           
 21750                           ; BSR set to: 2
 21751                           ;display.c: 369: {;display.c: 370: display_content[2][18] = 'n';
 21752  00FB0C  0E6E               	movlw	110
 21753  00FB0E  0103               	movlb	3	; () banked
 21754  00FB10  6F8E               	movwf	(_display_content+58)& (0+255),b
 21755                           
 21756                           ;display.c: 371: display_content[2][19] = ' ';
 21757  00FB12  0E20               	movlw	32
 21758  00FB14  6F8F               	movwf	(_display_content+59)& (0+255),b
 21759  00FB16                     l2107:
 21760                           
 21761                           ;display.c: 372: };display.c: 373: if(os.outputs & OUTPUT_3)
 21762                           
 21763                           ; BSR set to: 3
 21764  00FB16  0102               	movlb	2	; () banked
 21765  00FB18  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 21766  00FB1A  D005               	goto	l2108
 21767                           
 21768                           ; BSR set to: 2
 21769                           ;display.c: 374: {;display.c: 375: display_content[3][8] = 'n';
 21770  00FB1C  0E6E               	movlw	110
 21771  00FB1E  0103               	movlb	3	; () banked
 21772  00FB20  6F98               	movwf	(_display_content+68)& (0+255),b
 21773                           
 21774                           ;display.c: 376: display_content[3][9] = ' ';
 21775  00FB22  0E20               	movlw	32
 21776  00FB24  6F99               	movwf	(_display_content+69)& (0+255),b
 21777  00FB26                     l2108:
 21778                           
 21779                           ;display.c: 377: };display.c: 378: if(os.outputs & OUTPUT_4)
 21780                           
 21781                           ; BSR set to: 3
 21782  00FB26  0102               	movlb	2	; () banked
 21783  00FB28  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 21784  00FB2A  D01E               	goto	l2110
 21785                           
 21786                           ; BSR set to: 2
 21787                           ;display.c: 379: {;display.c: 380: display_content[3][18] = 'n';
 21788  00FB2C  0E6E               	movlw	110
 21789  00FB2E  0103               	movlb	3	; () banked
 21790  00FB30  6FA2               	movwf	(_display_content+78)& (0+255),b
 21791                           
 21792                           ;display.c: 381: display_content[3][19] = ' ';
 21793  00FB32  0E20               	movlw	32
 21794  00FB34  6FA3               	movwf	(_display_content+79)& (0+255),b
 21795                           
 21796                           ; BSR set to: 3
 21797                           ;display.c: 382: };display.c: 384: switch(mode)
 21798  00FB36  D018               	goto	l2110
 21799  00FB38                     
 21800                           ;display.c: 387: display_content[2][0] = '-';
 21801                           
 21802                           ; BSR set to: 3
 21803  00FB38  0E2D               	movlw	45
 21804  00FB3A  0103               	movlb	3	; () banked
 21805  00FB3C  6F7C               	movwf	(_display_content+40)& (0+255),b
 21806                           
 21807                           ;display.c: 388: display_content[2][1] = '>';
 21808  00FB3E  0E3E               	movlw	62
 21809  00FB40  6F7D               	movwf	(_display_content+41)& (0+255),b
 21810                           
 21811                           ;display.c: 389: break;
 21812  00FB42  0012               	return	
 21813  00FB44                     
 21814                           ;display.c: 391: display_content[2][10] = '-';
 21815                           
 21816                           ; BSR set to: 3
 21817  00FB44  0E2D               	movlw	45
 21818  00FB46  0103               	movlb	3	; () banked
 21819  00FB48  6F86               	movwf	(_display_content+50)& (0+255),b
 21820                           
 21821                           ;display.c: 392: display_content[2][11] = '>';
 21822  00FB4A  0E3E               	movlw	62
 21823  00FB4C  6F87               	movwf	(_display_content+51)& (0+255),b
 21824                           
 21825                           ;display.c: 393: break;
 21826  00FB4E  0012               	return	
 21827  00FB50                     
 21828                           ;display.c: 395: display_content[3][0] = '-';
 21829                           
 21830                           ; BSR set to: 3
 21831  00FB50  0E2D               	movlw	45
 21832  00FB52  0103               	movlb	3	; () banked
 21833  00FB54  6F90               	movwf	(_display_content+60)& (0+255),b
 21834                           
 21835                           ;display.c: 396: display_content[3][1] = '>';
 21836  00FB56  0E3E               	movlw	62
 21837  00FB58  6F91               	movwf	(_display_content+61)& (0+255),b
 21838                           
 21839                           ;display.c: 397: break;
 21840  00FB5A  0012               	return	
 21841  00FB5C                     
 21842                           ;display.c: 399: display_content[3][10] = '-';
 21843                           
 21844                           ; BSR set to: 3
 21845  00FB5C  0E2D               	movlw	45
 21846  00FB5E  0103               	movlb	3	; () banked
 21847  00FB60  6F9A               	movwf	(_display_content+70)& (0+255),b
 21848                           
 21849                           ;display.c: 400: display_content[3][11] = '>';
 21850  00FB62  0E3E               	movlw	62
 21851  00FB64  6F9B               	movwf	(_display_content+71)& (0+255),b
 21852                           
 21853                           ; BSR set to: 3
 21854                           ;display.c: 402: }
 21855                           
 21856                           ;display.c: 401: break;
 21857  00FB66  0012               	return	
 21858  00FB68                     l2110:
 21859                           
 21860                           ; BSR set to: 3
 21861  00FB68  0100               	movlb	0	; () banked
 21862  00FB6A  51A8               	movf	__display_outputs@mode& (0+255),w,b
 21863                           
 21864                           ; Switch size 1, requested type "space"
 21865                           ; Number of cases is 4, Range of values is 49 to 52
 21866                           ; switch strategies available:
 21867                           ; Name         Instructions Cycles
 21868                           ; simple_byte           13     7 (average)
 21869                           ;	Chosen strategy is simple_byte
 21870  00FB6C  0A31               	xorlw	49	; case 49
 21871  00FB6E  B4D8               	btfsc	status,2,c
 21872  00FB70  D7E3               	goto	l2111
 21873  00FB72  0A03               	xorlw	3	; case 50
 21874  00FB74  B4D8               	btfsc	status,2,c
 21875  00FB76  D7E6               	goto	l2113
 21876  00FB78  0A01               	xorlw	1	; case 51
 21877  00FB7A  B4D8               	btfsc	status,2,c
 21878  00FB7C  D7E9               	goto	l2114
 21879  00FB7E  0A07               	xorlw	7	; case 52
 21880  00FB80  A4D8               	btfss	status,2,c
 21881  00FB82  0012               	return	
 21882  00FB84  D7EB               	goto	l2115
 21883  00FB86                     __end_of__display_outputs:
 21884                           	opt stack 0
 21885                           tblptru	equ	0xFF8
 21886                           tblptrh	equ	0xFF7
 21887                           tblptrl	equ	0xFF6
 21888                           tablat	equ	0xFF5
 21889                           prodh	equ	0xFF4
 21890                           prodl	equ	0xFF3
 21891                           intcon	equ	0xFF2
 21892                           intcon2	equ	0xFF1
 21893                           intcon3	equ	0xFF0
 21894                           postinc0	equ	0xFEE
 21895                           wreg	equ	0xFE8
 21896                           indf1	equ	0xFE7
 21897                           postinc1	equ	0xFE6
 21898                           postdec1	equ	0xFE5
 21899                           plusw1	equ	0xFE3
 21900                           fsr1h	equ	0xFE2
 21901                           fsr1l	equ	0xFE1
 21902                           indf2	equ	0xFDF
 21903                           postinc2	equ	0xFDE
 21904                           postdec2	equ	0xFDD
 21905                           plusw2	equ	0xFDB
 21906                           fsr2h	equ	0xFDA
 21907                           fsr2l	equ	0xFD9
 21908                           status	equ	0xFD8
 21909                           
 21910 ;; *************** function __display_inout *****************
 21911 ;; Defined at:
 21912 ;;		line 141 in file "display.c"
 21913 ;; Parameters:    Size  Location     Type
 21914 ;;		None
 21915 ;; Auto vars:     Size  Location     Type
 21916 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 21917 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 21918 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 21919 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 21920 ;;  cntr            1  101[BANK0 ] unsigned char 
 21921 ;; Return value:  Size  Location     Type
 21922 ;;                  1    wreg      void 
 21923 ;; Registers used:
 21924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21925 ;; Tracked objects:
 21926 ;;		On entry : 0/0
 21927 ;;		On exit  : 0/0
 21928 ;;		Unchanged: 0/0
 21929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21931 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21933 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21934 ;;Total ram usage:       54 bytes
 21935 ;; Hardware stack levels used:    1
 21936 ;; Hardware stack levels required when called:   14
 21937 ;; This function calls:
 21938 ;;		__display_itoa
 21939 ;;		_buck_get_mode
 21940 ;; This function is called by:
 21941 ;;		_display_prepare
 21942 ;; This function uses a non-reentrant model
 21943 ;;
 21944                           
 21945                           	psect	text103
 21946  00FD8C                     __ptext103:
 21947                           	opt stack 0
 21948  00FD8C                     __display_inout:
 21949                           	opt stack 15
 21950                           
 21951                           ;display.c: 143: uint8_t cntr;;display.c: 144: const char line1[] = "Voltage & Current";
 21952                           
 21953                           ;incstack = 0
 21954  00FD8C  0ED8               	movlw	low __display_inout@F7188
 21955  00FD8E  6EF6               	movwf	tblptrl,c
 21956  00FD90                     	if	1	;There is more than 1 active tblptr byte
 21957  00FD90  0EC1               	movlw	high __display_inout@F7188
 21958  00FD92  6EF7               	movwf	tblptrh,c
 21959  00FD94                     	endif
 21960  00FD94                     	if	1	;There are 3 active tblptr bytes
 21961  00FD94  0E00               	movlw	low (__display_inout@F7188 shr (0+16))
 21962  00FD96  6EF8               	movwf	tblptru,c
 21963  00FD98                     	endif
 21964  00FD98  EE20  F090         	lfsr	2,__display_inout@line1
 21965  00FD9C  0E11               	movlw	17
 21966  00FD9E                     u20480:
 21967  00FD9E  0009               	tblrd		*+
 21968  00FDA0  CFF5 FFDE          	movff	tablat,postinc2
 21969  00FDA4  06E8               	decf	wreg,f,c
 21970  00FDA6  E2FB               	bc	u20480
 21971                           
 21972                           ;display.c: 145: const char line2[] = "   Input   Output";
 21973  00FDA8  0EC6               	movlw	low __display_inout@F7190
 21974  00FDAA  6EF6               	movwf	tblptrl,c
 21975  00FDAC                     	if	1	;There is more than 1 active tblptr byte
 21976  00FDAC  0EC1               	movlw	high __display_inout@F7190
 21977  00FDAE  6EF7               	movwf	tblptrh,c
 21978  00FDB0                     	endif
 21979  00FDB0                     	if	1	;There are 3 active tblptr bytes
 21980  00FDB0  0E00               	movlw	low (__display_inout@F7190 shr (0+16))
 21981  00FDB2  6EF8               	movwf	tblptru,c
 21982  00FDB4                     	endif
 21983  00FDB4  EE20  F0A2         	lfsr	2,__display_inout@line2
 21984  00FDB8  0E11               	movlw	17
 21985  00FDBA                     u20490:
 21986  00FDBA  0009               	tblrd		*+
 21987  00FDBC  CFF5 FFDE          	movff	tablat,postinc2
 21988  00FDC0  06E8               	decf	wreg,f,c
 21989  00FDC2  E2FB               	bc	u20490
 21990                           
 21991                           ;display.c: 146: const char line3[] = "V:";
 21992  00FDC4  0E16               	movlw	low __display_inout@F7192
 21993  00FDC6  6EF6               	movwf	tblptrl,c
 21994  00FDC8                     	if	1	;There is more than 1 active tblptr byte
 21995  00FDC8  0EC3               	movlw	high __display_inout@F7192
 21996  00FDCA  6EF7               	movwf	tblptrh,c
 21997  00FDCC                     	endif
 21998  00FDCC                     	if	1	;There are 3 active tblptr bytes
 21999  00FDCC  0E00               	movlw	low (__display_inout@F7192 shr (0+16))
 22000  00FDCE  6EF8               	movwf	tblptru,c
 22001  00FDD0                     	endif
 22002  00FDD0  0009               	tblrd		*+
 22003  00FDD2  CFF5 F0C2          	movff	tablat,__display_inout@line3
 22004  00FDD6  0009               	tblrd		*+
 22005  00FDD8  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 22006  00FDDC  000A               	tblrd		*-
 22007  00FDDE  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 22008                           
 22009                           ;display.c: 147: const char line4[] = "A: --      --";
 22010  00FDE2  0E85               	movlw	low __display_inout@F7194
 22011  00FDE4  6EF6               	movwf	tblptrl,c
 22012  00FDE6                     	if	1	;There is more than 1 active tblptr byte
 22013  00FDE6  0EC2               	movlw	high __display_inout@F7194
 22014  00FDE8  6EF7               	movwf	tblptrh,c
 22015  00FDEA                     	endif
 22016  00FDEA                     	if	1	;There are 3 active tblptr bytes
 22017  00FDEA  0E00               	movlw	low (__display_inout@F7194 shr (0+16))
 22018  00FDEC  6EF8               	movwf	tblptru,c
 22019  00FDEE                     	endif
 22020  00FDEE  EE20  F0B4         	lfsr	2,__display_inout@line4
 22021  00FDF2  0E0D               	movlw	13
 22022  00FDF4                     u20500:
 22023  00FDF4  0009               	tblrd		*+
 22024  00FDF6  CFF5 FFDE          	movff	tablat,postinc2
 22025  00FDFA  06E8               	decf	wreg,f,c
 22026  00FDFC  E2FB               	bc	u20500
 22027                           
 22028                           ;display.c: 149: cntr = 0;
 22029  00FDFE  0E00               	movlw	0
 22030  00FE00  0100               	movlb	0	; () banked
 22031  00FE02  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22032                           
 22033                           ;display.c: 150: while(line1[cntr])
 22034  00FE04  D013               	goto	l1956
 22035  00FE06                     
 22036                           ; BSR set to: 0
 22037                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 22038                           
 22039                           ; BSR set to: 0
 22040  00FE06  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22041  00FE08  0D01               	mullw	1
 22042  00FE0A  0E90               	movlw	low __display_inout@line1
 22043  00FE0C  24F3               	addwf	prodl,w,c
 22044  00FE0E  6ED9               	movwf	fsr2l,c
 22045  00FE10  0E00               	movlw	high __display_inout@line1
 22046  00FE12  20F4               	addwfc	prodh,w,c
 22047  00FE14  6EDA               	movwf	fsr2h,c
 22048  00FE16  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22049  00FE18  0D01               	mullw	1
 22050  00FE1A  0E54               	movlw	low _display_content
 22051  00FE1C  24F3               	addwf	prodl,w,c
 22052  00FE1E  6EE1               	movwf	fsr1l,c
 22053  00FE20  0E03               	movlw	high _display_content
 22054  00FE22  20F4               	addwfc	prodh,w,c
 22055  00FE24  6EE2               	movwf	fsr1h,c
 22056  00FE26  CFDF FFE7          	movff	indf2,indf1
 22057                           
 22058                           ; BSR set to: 0
 22059  00FE2A  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22060  00FE2C                     l1956:
 22061                           
 22062                           ; BSR set to: 0
 22063                           
 22064                           ; BSR set to: 0
 22065  00FE2C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22066  00FE2E  0D01               	mullw	1
 22067  00FE30  0E90               	movlw	low __display_inout@line1
 22068  00FE32  24F3               	addwf	prodl,w,c
 22069  00FE34  6ED9               	movwf	fsr2l,c
 22070  00FE36  0E00               	movlw	high __display_inout@line1
 22071  00FE38  20F4               	addwfc	prodh,w,c
 22072  00FE3A  6EDA               	movwf	fsr2h,c
 22073  00FE3C  50DF               	movf	indf2,w,c
 22074  00FE3E  A4D8               	btfss	status,2,c
 22075  00FE40  D7E2               	goto	l1957
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;display.c: 153: cntr = 0;
 22079                           
 22080                           ; BSR set to: 0
 22081  00FE42  0E00               	movlw	0
 22082  00FE44  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22083                           
 22084                           ;display.c: 154: while(line2[cntr])
 22085  00FE46  D013               	goto	l1959
 22086  00FE48                     
 22087                           ; BSR set to: 0
 22088                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 22089                           
 22090                           ; BSR set to: 0
 22091  00FE48  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22092  00FE4A  0D01               	mullw	1
 22093  00FE4C  0EA2               	movlw	low __display_inout@line2
 22094  00FE4E  24F3               	addwf	prodl,w,c
 22095  00FE50  6ED9               	movwf	fsr2l,c
 22096  00FE52  0E00               	movlw	high __display_inout@line2
 22097  00FE54  20F4               	addwfc	prodh,w,c
 22098  00FE56  6EDA               	movwf	fsr2h,c
 22099  00FE58  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22100  00FE5A  0D01               	mullw	1
 22101  00FE5C  0E68               	movlw	low (_display_content+20)
 22102  00FE5E  24F3               	addwf	prodl,w,c
 22103  00FE60  6EE1               	movwf	fsr1l,c
 22104  00FE62  0E03               	movlw	high (_display_content+20)
 22105  00FE64  20F4               	addwfc	prodh,w,c
 22106  00FE66  6EE2               	movwf	fsr1h,c
 22107  00FE68  CFDF FFE7          	movff	indf2,indf1
 22108                           
 22109                           ; BSR set to: 0
 22110  00FE6C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22111  00FE6E                     l1959:
 22112                           
 22113                           ; BSR set to: 0
 22114                           
 22115                           ; BSR set to: 0
 22116  00FE6E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22117  00FE70  0D01               	mullw	1
 22118  00FE72  0EA2               	movlw	low __display_inout@line2
 22119  00FE74  24F3               	addwf	prodl,w,c
 22120  00FE76  6ED9               	movwf	fsr2l,c
 22121  00FE78  0E00               	movlw	high __display_inout@line2
 22122  00FE7A  20F4               	addwfc	prodh,w,c
 22123  00FE7C  6EDA               	movwf	fsr2h,c
 22124  00FE7E  50DF               	movf	indf2,w,c
 22125  00FE80  A4D8               	btfss	status,2,c
 22126  00FE82  D7E2               	goto	l1960
 22127                           
 22128                           ; BSR set to: 0
 22129                           ;display.c: 157: cntr = 0;
 22130                           
 22131                           ; BSR set to: 0
 22132  00FE84  0E00               	movlw	0
 22133  00FE86  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22134                           
 22135                           ;display.c: 158: while(line3[cntr])
 22136  00FE88  D013               	goto	l1962
 22137  00FE8A                     
 22138                           ; BSR set to: 0
 22139                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 22140                           
 22141                           ; BSR set to: 0
 22142  00FE8A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22143  00FE8C  0D01               	mullw	1
 22144  00FE8E  0EC2               	movlw	low __display_inout@line3
 22145  00FE90  24F3               	addwf	prodl,w,c
 22146  00FE92  6ED9               	movwf	fsr2l,c
 22147  00FE94  0E00               	movlw	high __display_inout@line3
 22148  00FE96  20F4               	addwfc	prodh,w,c
 22149  00FE98  6EDA               	movwf	fsr2h,c
 22150  00FE9A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22151  00FE9C  0D01               	mullw	1
 22152  00FE9E  0E7C               	movlw	low (_display_content+40)
 22153  00FEA0  24F3               	addwf	prodl,w,c
 22154  00FEA2  6EE1               	movwf	fsr1l,c
 22155  00FEA4  0E03               	movlw	high (_display_content+40)
 22156  00FEA6  20F4               	addwfc	prodh,w,c
 22157  00FEA8  6EE2               	movwf	fsr1h,c
 22158  00FEAA  CFDF FFE7          	movff	indf2,indf1
 22159                           
 22160                           ; BSR set to: 0
 22161  00FEAE  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22162  00FEB0                     l1962:
 22163                           
 22164                           ; BSR set to: 0
 22165                           
 22166                           ; BSR set to: 0
 22167  00FEB0  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22168  00FEB2  0D01               	mullw	1
 22169  00FEB4  0EC2               	movlw	low __display_inout@line3
 22170  00FEB6  24F3               	addwf	prodl,w,c
 22171  00FEB8  6ED9               	movwf	fsr2l,c
 22172  00FEBA  0E00               	movlw	high __display_inout@line3
 22173  00FEBC  20F4               	addwfc	prodh,w,c
 22174  00FEBE  6EDA               	movwf	fsr2h,c
 22175  00FEC0  50DF               	movf	indf2,w,c
 22176  00FEC2  A4D8               	btfss	status,2,c
 22177  00FEC4  D7E2               	goto	l1963
 22178                           
 22179                           ; BSR set to: 0
 22180                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 22181                           
 22182                           ; BSR set to: 0
 22183  00FEC6  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 22184  00FECA  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 22185  00FECE  0E03               	movlw	3
 22186  00FED0  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22187  00FED2  0E7F               	movlw	low (_display_content+43)
 22188  00FED4  6F7B               	movwf	__display_itoa@text& (0+255),b
 22189  00FED6  0E03               	movlw	high (_display_content+43)
 22190  00FED8  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22191  00FEDA  ECC3  F07D         	call	__display_itoa	;wreg free
 22192                           
 22193                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 22194  00FEDE  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 22195  00FEE2  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 22196  00FEE6  0E03               	movlw	3
 22197  00FEE8  0100               	movlb	0	; () banked
 22198  00FEEA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22199  00FEEC  0E87               	movlw	low (_display_content+51)
 22200  00FEEE  6F7B               	movwf	__display_itoa@text& (0+255),b
 22201  00FEF0  0E03               	movlw	high (_display_content+51)
 22202  00FEF2  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22203  00FEF4  ECC3  F07D         	call	__display_itoa	;wreg free
 22204                           
 22205                           ;display.c: 163: cntr = 0;
 22206  00FEF8  0E00               	movlw	0
 22207  00FEFA  0100               	movlb	0	; () banked
 22208  00FEFC  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22209                           
 22210                           ;display.c: 164: while(line4[cntr])
 22211  00FEFE  D013               	goto	l1965
 22212  00FF00                     
 22213                           ; BSR set to: 0
 22214                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 22215                           
 22216                           ; BSR set to: 0
 22217  00FF00  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22218  00FF02  0D01               	mullw	1
 22219  00FF04  0EB4               	movlw	low __display_inout@line4
 22220  00FF06  24F3               	addwf	prodl,w,c
 22221  00FF08  6ED9               	movwf	fsr2l,c
 22222  00FF0A  0E00               	movlw	high __display_inout@line4
 22223  00FF0C  20F4               	addwfc	prodh,w,c
 22224  00FF0E  6EDA               	movwf	fsr2h,c
 22225  00FF10  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22226  00FF12  0D01               	mullw	1
 22227  00FF14  0E90               	movlw	low (_display_content+60)
 22228  00FF16  24F3               	addwf	prodl,w,c
 22229  00FF18  6EE1               	movwf	fsr1l,c
 22230  00FF1A  0E03               	movlw	high (_display_content+60)
 22231  00FF1C  20F4               	addwfc	prodh,w,c
 22232  00FF1E  6EE2               	movwf	fsr1h,c
 22233  00FF20  CFDF FFE7          	movff	indf2,indf1
 22234                           
 22235                           ; BSR set to: 0
 22236  00FF24  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22237  00FF26                     l1965:
 22238                           
 22239                           ; BSR set to: 0
 22240                           
 22241                           ; BSR set to: 0
 22242  00FF26  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22243  00FF28  0D01               	mullw	1
 22244  00FF2A  0EB4               	movlw	low __display_inout@line4
 22245  00FF2C  24F3               	addwf	prodl,w,c
 22246  00FF2E  6ED9               	movwf	fsr2l,c
 22247  00FF30  0E00               	movlw	high __display_inout@line4
 22248  00FF32  20F4               	addwfc	prodh,w,c
 22249  00FF34  6EDA               	movwf	fsr2h,c
 22250  00FF36  50DF               	movf	indf2,w,c
 22251  00FF38  A4D8               	btfss	status,2,c
 22252  00FF3A  D7E2               	goto	l1966
 22253                           
 22254                           ;display.c: 167: {;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3
      +                          ][3]);
 22255                           
 22256                           ; BSR set to: 0
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 22260  00FF3C  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 22261  00FF40  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 22262  00FF44  0E03               	movlw	3
 22263  00FF46  0100               	movlb	0	; () banked
 22264  00FF48  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22265  00FF4A  0E93               	movlw	low (_display_content+63)
 22266  00FF4C  6F7B               	movwf	__display_itoa@text& (0+255),b
 22267  00FF4E  0E03               	movlw	high (_display_content+63)
 22268  00FF50  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22269  00FF52  ECC3  F07D         	call	__display_itoa	;wreg free
 22270                           
 22271                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 22272  00FF56  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 22273  00FF5A  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 22274  00FF5E  0E03               	movlw	3
 22275  00FF60  0100               	movlb	0	; () banked
 22276  00FF62  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22277  00FF64  0E9B               	movlw	low (_display_content+71)
 22278  00FF66  6F7B               	movwf	__display_itoa@text& (0+255),b
 22279  00FF68  0E03               	movlw	high (_display_content+71)
 22280  00FF6A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22281  00FF6C  ECC3  F07D         	call	__display_itoa	;wreg free
 22282  00FF70  0012               	return	
 22283  00FF72                     __end_of__display_inout:
 22284                           	opt stack 0
 22285                           tblptru	equ	0xFF8
 22286                           tblptrh	equ	0xFF7
 22287                           tblptrl	equ	0xFF6
 22288                           tablat	equ	0xFF5
 22289                           prodh	equ	0xFF4
 22290                           prodl	equ	0xFF3
 22291                           intcon	equ	0xFF2
 22292                           intcon2	equ	0xFF1
 22293                           intcon3	equ	0xFF0
 22294                           postinc0	equ	0xFEE
 22295                           wreg	equ	0xFE8
 22296                           indf1	equ	0xFE7
 22297                           postinc1	equ	0xFE6
 22298                           postdec1	equ	0xFE5
 22299                           plusw1	equ	0xFE3
 22300                           fsr1h	equ	0xFE2
 22301                           fsr1l	equ	0xFE1
 22302                           indf2	equ	0xFDF
 22303                           postinc2	equ	0xFDE
 22304                           postdec2	equ	0xFDD
 22305                           plusw2	equ	0xFDB
 22306                           fsr2h	equ	0xFDA
 22307                           fsr2l	equ	0xFD9
 22308                           status	equ	0xFD8
 22309                           
 22310 ;; *************** function __display_efficiency *****************
 22311 ;; Defined at:
 22312 ;;		line 475 in file "display.c"
 22313 ;; Parameters:    Size  Location     Type
 22314 ;;		None
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;  source         19   69[BANK0 ] const unsigned char [19]
 22317 ;;  header         19   50[BANK0 ] const unsigned char [19]
 22318 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 22319 ;;  battery         4  110[BANK0 ] long 
 22320 ;;  panel           4  106[BANK0 ] long 
 22321 ;;  efficiency      4  102[BANK0 ] float 
 22322 ;;  cntr            1  114[BANK0 ] unsigned char 
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  1    wreg      void 
 22325 ;; Registers used:
 22326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22327 ;; Tracked objects:
 22328 ;;		On entry : 0/0
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22333 ;;      Locals:         0      65       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22335 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22336 ;;Total ram usage:       67 bytes
 22337 ;; Hardware stack levels used:    1
 22338 ;; Hardware stack levels required when called:   14
 22339 ;; This function calls:
 22340 ;;		___aldiv
 22341 ;;		___fltol
 22342 ;;		___lmul
 22343 ;;		___xxtofl
 22344 ;;		__display_itoa
 22345 ;; This function is called by:
 22346 ;;		_display_prepare
 22347 ;; This function uses a non-reentrant model
 22348 ;;
 22349                           
 22350                           	psect	text104
 22351  00E128                     __ptext104:
 22352                           	opt stack 0
 22353  00E128                     __display_efficiency:
 22354                           	opt stack 15
 22355                           
 22356                           ;display.c: 477: uint8_t cntr;;display.c: 478: const char header[] = "Charger Efficiency
      +                          ";
 22357                           
 22358                           ;incstack = 0
 22359  00E128  0E6A               	movlw	low __display_efficiency@F7276
 22360  00E12A  6EF6               	movwf	tblptrl,c
 22361  00E12C                     	if	1	;There is more than 1 active tblptr byte
 22362  00E12C  0EC1               	movlw	high __display_efficiency@F7276
 22363  00E12E  6EF7               	movwf	tblptrh,c
 22364  00E130                     	endif
 22365  00E130                     	if	1	;There are 3 active tblptr bytes
 22366  00E130  0E00               	movlw	low (__display_efficiency@F7276 shr (0+16))
 22367  00E132  6EF8               	movwf	tblptru,c
 22368  00E134                     	endif
 22369  00E134  EE20  F092         	lfsr	2,__display_efficiency@header
 22370  00E138  0E12               	movlw	18
 22371  00E13A                     u21240:
 22372  00E13A  0009               	tblrd		*+
 22373  00E13C  CFF5 FFDE          	movff	tablat,postinc2
 22374  00E140  06E8               	decf	wreg,f,c
 22375  00E142  E2FB               	bc	u21240
 22376                           
 22377                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 22378  00E144  0E57               	movlw	low __display_efficiency@F7278
 22379  00E146  6EF6               	movwf	tblptrl,c
 22380  00E148                     	if	1	;There is more than 1 active tblptr byte
 22381  00E148  0EC1               	movlw	high __display_efficiency@F7278
 22382  00E14A  6EF7               	movwf	tblptrh,c
 22383  00E14C                     	endif
 22384  00E14C                     	if	1	;There are 3 active tblptr bytes
 22385  00E14C  0E00               	movlw	low (__display_efficiency@F7278 shr (0+16))
 22386  00E14E  6EF8               	movwf	tblptru,c
 22387  00E150                     	endif
 22388  00E150  EE20  F0A5         	lfsr	2,__display_efficiency@source
 22389  00E154  0E12               	movlw	18
 22390  00E156                     u21250:
 22391  00E156  0009               	tblrd		*+
 22392  00E158  CFF5 FFDE          	movff	tablat,postinc2
 22393  00E15C  06E8               	decf	wreg,f,c
 22394  00E15E  E2FB               	bc	u21250
 22395                           
 22396                           ;display.c: 480: const char footer[] = "E:         L:";
 22397  00E160  0E5B               	movlw	low __display_efficiency@F7280
 22398  00E162  6EF6               	movwf	tblptrl,c
 22399  00E164                     	if	1	;There is more than 1 active tblptr byte
 22400  00E164  0EC2               	movlw	high __display_efficiency@F7280
 22401  00E166  6EF7               	movwf	tblptrh,c
 22402  00E168                     	endif
 22403  00E168                     	if	1	;There are 3 active tblptr bytes
 22404  00E168  0E00               	movlw	low (__display_efficiency@F7280 shr (0+16))
 22405  00E16A  6EF8               	movwf	tblptru,c
 22406  00E16C                     	endif
 22407  00E16C  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 22408  00E170  0E0D               	movlw	13
 22409  00E172                     u21260:
 22410  00E172  0009               	tblrd		*+
 22411  00E174  CFF5 FFDE          	movff	tablat,postinc2
 22412  00E178  06E8               	decf	wreg,f,c
 22413  00E17A  E2FB               	bc	u21260
 22414                           
 22415                           ;display.c: 481: int32_t panel;;display.c: 482: int32_t battery = (int32_t) os.output_vo
      +                          ltage * (int32_t) os.output_current;
 22416  00E17C  EE22  F027         	lfsr	2,_os+39	;volatile
 22417  00E180  CFDE F060          	movff	postinc2,___lmul@multiplier
 22418  00E184  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 22419  00E188  0100               	movlb	0	; () banked
 22420  00E18A  0E00               	movlw	0
 22421  00E18C  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22422  00E18E  0EFF               	movlw	-1
 22423  00E190  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 22424  00E192  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 22425  00E194  EE22  F032         	lfsr	2,_os+50	;volatile
 22426  00E198  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22427  00E19C  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22428  00E1A0  0E00               	movlw	0
 22429  00E1A2  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22430  00E1A4  0EFF               	movlw	-1
 22431  00E1A6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22432  00E1A8  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22433  00E1AA  EC82  F0A5         	call	___lmul	;wreg free
 22434  00E1AE  C060  F0CE         	movff	?___lmul,__display_efficiency@battery
 22435  00E1B2  C061  F0CF         	movff	?___lmul+1,__display_efficiency@battery+1
 22436  00E1B6  C062  F0D0         	movff	?___lmul+2,__display_efficiency@battery+2
 22437  00E1BA  C063  F0D1         	movff	?___lmul+3,__display_efficiency@battery+3
 22438                           
 22439                           ;display.c: 483: float efficiency;;display.c: 485: panel = (int32_t) os.input_voltage;
 22440  00E1BE  EE22  F012         	lfsr	2,_os+18	;volatile
 22441  00E1C2  CFDE F0CA          	movff	postinc2,__display_efficiency@panel
 22442  00E1C6  CFDD F0CB          	movff	postdec2,__display_efficiency@panel+1
 22443  00E1CA  0100               	movlb	0	; () banked
 22444  00E1CC  0E00               	movlw	0
 22445  00E1CE  BFCB               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 22446  00E1D0  0EFF               	movlw	-1
 22447  00E1D2  6FCC               	movwf	(__display_efficiency@panel+2)& (0+255),b
 22448  00E1D4  6FCD               	movwf	(__display_efficiency@panel+3)& (0+255),b
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;display.c: 486: panel *= (int32_t) os.input_current;
 22452  00E1D6  C0CA  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 22453  00E1DA  C0CB  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 22454  00E1DE  C0CC  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 22455  00E1E2  C0CD  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 22456  00E1E6  EE22  F01D         	lfsr	2,_os+29	;volatile
 22457  00E1EA  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22458  00E1EE  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22459  00E1F2  0E00               	movlw	0
 22460  00E1F4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22461  00E1F6  0EFF               	movlw	-1
 22462  00E1F8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22463  00E1FA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22464  00E1FC  EC82  F0A5         	call	___lmul	;wreg free
 22465  00E200  C060  F0CA         	movff	?___lmul,__display_efficiency@panel
 22466  00E204  C061  F0CB         	movff	?___lmul+1,__display_efficiency@panel+1
 22467  00E208  C062  F0CC         	movff	?___lmul+2,__display_efficiency@panel+2
 22468  00E20C  C063  F0CD         	movff	?___lmul+3,__display_efficiency@panel+3
 22469                           
 22470                           ;display.c: 487: panel /= 1000;
 22471  00E210  C0CA  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 22472  00E214  C0CB  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 22473  00E218  C0CC  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 22474  00E21C  C0CD  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 22475  00E220  0EE8               	movlw	232
 22476  00E222  0100               	movlb	0	; () banked
 22477  00E224  6F64               	movwf	___aldiv@divisor& (0+255),b
 22478  00E226  0E03               	movlw	3
 22479  00E228  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22480  00E22A  0E00               	movlw	0
 22481  00E22C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22482  00E22E  0E00               	movlw	0
 22483  00E230  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22484  00E232  EC5C  F095         	call	___aldiv	;wreg free
 22485  00E236  C060  F0CA         	movff	?___aldiv,__display_efficiency@panel
 22486  00E23A  C061  F0CB         	movff	?___aldiv+1,__display_efficiency@panel+1
 22487  00E23E  C062  F0CC         	movff	?___aldiv+2,__display_efficiency@panel+2
 22488  00E242  C063  F0CD         	movff	?___aldiv+3,__display_efficiency@panel+3
 22489                           
 22490                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 22491  00E246  EE22  F027         	lfsr	2,_os+39	;volatile
 22492  00E24A  CFDE F0CE          	movff	postinc2,__display_efficiency@battery
 22493  00E24E  CFDD F0CF          	movff	postdec2,__display_efficiency@battery+1
 22494  00E252  0100               	movlb	0	; () banked
 22495  00E254  0E00               	movlw	0
 22496  00E256  BFCF               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 22497  00E258  0EFF               	movlw	-1
 22498  00E25A  6FD0               	movwf	(__display_efficiency@battery+2)& (0+255),b
 22499  00E25C  6FD1               	movwf	(__display_efficiency@battery+3)& (0+255),b
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;display.c: 490: battery *= os.output_current;
 22503  00E25E  C0CE  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 22504  00E262  C0CF  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 22505  00E266  C0D0  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 22506  00E26A  C0D1  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 22507  00E26E  EE22  F032         	lfsr	2,_os+50	;volatile
 22508  00E272  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22509  00E276  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22510  00E27A  0E00               	movlw	0
 22511  00E27C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22512  00E27E  0EFF               	movlw	-1
 22513  00E280  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22514  00E282  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22515  00E284  EC82  F0A5         	call	___lmul	;wreg free
 22516  00E288  C060  F0CE         	movff	?___lmul,__display_efficiency@battery
 22517  00E28C  C061  F0CF         	movff	?___lmul+1,__display_efficiency@battery+1
 22518  00E290  C062  F0D0         	movff	?___lmul+2,__display_efficiency@battery+2
 22519  00E294  C063  F0D1         	movff	?___lmul+3,__display_efficiency@battery+3
 22520                           
 22521                           ;display.c: 491: efficiency = battery / panel;
 22522  00E298  C0CA  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 22523  00E29C  C0CB  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 22524  00E2A0  C0CC  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 22525  00E2A4  C0CD  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 22526  00E2A8  C0CE  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22527  00E2AC  C0CF  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22528  00E2B0  C0D0  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22529  00E2B4  C0D1  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22530  00E2B8  EC5C  F095         	call	___aldiv	;wreg free
 22531  00E2BC  C060  F06E         	movff	?___aldiv,___xxtofl@val
 22532  00E2C0  C061  F06F         	movff	?___aldiv+1,___xxtofl@val+1
 22533  00E2C4  C062  F070         	movff	?___aldiv+2,___xxtofl@val+2
 22534  00E2C8  C063  F071         	movff	?___aldiv+3,___xxtofl@val+3
 22535  00E2CC  0E01               	movlw	1
 22536  00E2CE  EC7C  F084         	call	___xxtofl
 22537  00E2D2  C06E  F0C6         	movff	?___xxtofl,__display_efficiency@efficiency
 22538  00E2D6  C06F  F0C7         	movff	?___xxtofl+1,__display_efficiency@efficiency+1
 22539  00E2DA  C070  F0C8         	movff	?___xxtofl+2,__display_efficiency@efficiency+2
 22540  00E2DE  C071  F0C9         	movff	?___xxtofl+3,__display_efficiency@efficiency+3
 22541                           
 22542                           ;display.c: 492: battery /= 1000;
 22543  00E2E2  C0CE  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22544  00E2E6  C0CF  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22545  00E2EA  C0D0  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22546  00E2EE  C0D1  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22547  00E2F2  0EE8               	movlw	232
 22548  00E2F4  0100               	movlb	0	; () banked
 22549  00E2F6  6F64               	movwf	___aldiv@divisor& (0+255),b
 22550  00E2F8  0E03               	movlw	3
 22551  00E2FA  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22552  00E2FC  0E00               	movlw	0
 22553  00E2FE  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22554  00E300  0E00               	movlw	0
 22555  00E302  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22556  00E304  EC5C  F095         	call	___aldiv	;wreg free
 22557  00E308  C060  F0CE         	movff	?___aldiv,__display_efficiency@battery
 22558  00E30C  C061  F0CF         	movff	?___aldiv+1,__display_efficiency@battery+1
 22559  00E310  C062  F0D0         	movff	?___aldiv+2,__display_efficiency@battery+2
 22560  00E314  C063  F0D1         	movff	?___aldiv+3,__display_efficiency@battery+3
 22561                           
 22562                           ;display.c: 494: cntr = 0;
 22563  00E318  0E00               	movlw	0
 22564  00E31A  0100               	movlb	0	; () banked
 22565  00E31C  6FD2               	movwf	__display_efficiency@cntr& (0+255),b
 22566                           
 22567                           ;display.c: 495: while(header[cntr])
 22568  00E31E  D013               	goto	l2177
 22569  00E320                     
 22570                           ; BSR set to: 0
 22571                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 22572                           
 22573                           ; BSR set to: 0
 22574  00E320  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22575  00E322  0D01               	mullw	1
 22576  00E324  0E92               	movlw	low __display_efficiency@header
 22577  00E326  24F3               	addwf	prodl,w,c
 22578  00E328  6ED9               	movwf	fsr2l,c
 22579  00E32A  0E00               	movlw	high __display_efficiency@header
 22580  00E32C  20F4               	addwfc	prodh,w,c
 22581  00E32E  6EDA               	movwf	fsr2h,c
 22582  00E330  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22583  00E332  0D01               	mullw	1
 22584  00E334  0E54               	movlw	low _display_content
 22585  00E336  24F3               	addwf	prodl,w,c
 22586  00E338  6EE1               	movwf	fsr1l,c
 22587  00E33A  0E03               	movlw	high _display_content
 22588  00E33C  20F4               	addwfc	prodh,w,c
 22589  00E33E  6EE2               	movwf	fsr1h,c
 22590  00E340  CFDF FFE7          	movff	indf2,indf1
 22591                           
 22592                           ; BSR set to: 0
 22593  00E344  2BD2               	incf	__display_efficiency@cntr& (0+255),f,b
 22594  00E346                     l2177:
 22595                           
 22596                           ; BSR set to: 0
 22597                           
 22598                           ; BSR set to: 0
 22599  00E346  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22600  00E348  0D01               	mullw	1
 22601  00E34A  0E92               	movlw	low __display_efficiency@header
 22602  00E34C  24F3               	addwf	prodl,w,c
 22603  00E34E  6ED9               	movwf	fsr2l,c
 22604  00E350  0E00               	movlw	high __display_efficiency@header
 22605  00E352  20F4               	addwfc	prodh,w,c
 22606  00E354  6EDA               	movwf	fsr2h,c
 22607  00E356  50DF               	movf	indf2,w,c
 22608  00E358  A4D8               	btfss	status,2,c
 22609  00E35A  D7E2               	goto	l2178
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;display.c: 498: cntr = 0;
 22613                           
 22614                           ; BSR set to: 0
 22615  00E35C  0E00               	movlw	0
 22616  00E35E  6FD2               	movwf	__display_efficiency@cntr& (0+255),b
 22617                           
 22618                           ;display.c: 499: while(source[cntr])
 22619  00E360  D013               	goto	l2180
 22620  00E362                     
 22621                           ; BSR set to: 0
 22622                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 22623                           
 22624                           ; BSR set to: 0
 22625  00E362  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22626  00E364  0D01               	mullw	1
 22627  00E366  0EA5               	movlw	low __display_efficiency@source
 22628  00E368  24F3               	addwf	prodl,w,c
 22629  00E36A  6ED9               	movwf	fsr2l,c
 22630  00E36C  0E00               	movlw	high __display_efficiency@source
 22631  00E36E  20F4               	addwfc	prodh,w,c
 22632  00E370  6EDA               	movwf	fsr2h,c
 22633  00E372  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22634  00E374  0D01               	mullw	1
 22635  00E376  0E68               	movlw	low (_display_content+20)
 22636  00E378  24F3               	addwf	prodl,w,c
 22637  00E37A  6EE1               	movwf	fsr1l,c
 22638  00E37C  0E03               	movlw	high (_display_content+20)
 22639  00E37E  20F4               	addwfc	prodh,w,c
 22640  00E380  6EE2               	movwf	fsr1h,c
 22641  00E382  CFDF FFE7          	movff	indf2,indf1
 22642                           
 22643                           ; BSR set to: 0
 22644  00E386  2BD2               	incf	__display_efficiency@cntr& (0+255),f,b
 22645  00E388                     l2180:
 22646                           
 22647                           ; BSR set to: 0
 22648                           
 22649                           ; BSR set to: 0
 22650  00E388  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22651  00E38A  0D01               	mullw	1
 22652  00E38C  0EA5               	movlw	low __display_efficiency@source
 22653  00E38E  24F3               	addwf	prodl,w,c
 22654  00E390  6ED9               	movwf	fsr2l,c
 22655  00E392  0E00               	movlw	high __display_efficiency@source
 22656  00E394  20F4               	addwfc	prodh,w,c
 22657  00E396  6EDA               	movwf	fsr2h,c
 22658  00E398  50DF               	movf	indf2,w,c
 22659  00E39A  A4D8               	btfss	status,2,c
 22660  00E39C  D7E2               	goto	l2181
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 22664                           
 22665                           ; BSR set to: 0
 22666  00E39E  C0CA  F078         	movff	__display_efficiency@panel,__display_itoa@value
 22667  00E3A2  C0CB  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 22668  00E3A6  0E03               	movlw	3
 22669  00E3A8  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22670  00E3AA  0E7C               	movlw	low (_display_content+40)
 22671  00E3AC  6F7B               	movwf	__display_itoa@text& (0+255),b
 22672  00E3AE  0E03               	movlw	high (_display_content+40)
 22673  00E3B0  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22674  00E3B2  ECC3  F07D         	call	__display_itoa	;wreg free
 22675                           
 22676                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 22677  00E3B6  C0CE  F078         	movff	__display_efficiency@battery,__display_itoa@value
 22678  00E3BA  C0CF  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 22679  00E3BE  0E03               	movlw	3
 22680  00E3C0  0100               	movlb	0	; () banked
 22681  00E3C2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22682  00E3C4  0E86               	movlw	low (_display_content+50)
 22683  00E3C6  6F7B               	movwf	__display_itoa@text& (0+255),b
 22684  00E3C8  0E03               	movlw	high (_display_content+50)
 22685  00E3CA  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22686  00E3CC  ECC3  F07D         	call	__display_itoa	;wreg free
 22687                           
 22688                           ;display.c: 505: cntr = 0;
 22689  00E3D0  0E00               	movlw	0
 22690  00E3D2  0100               	movlb	0	; () banked
 22691  00E3D4  6FD2               	movwf	__display_efficiency@cntr& (0+255),b
 22692                           
 22693                           ;display.c: 506: while(footer[cntr])
 22694  00E3D6  D013               	goto	l2183
 22695  00E3D8                     
 22696                           ; BSR set to: 0
 22697                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 22698                           
 22699                           ; BSR set to: 0
 22700  00E3D8  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22701  00E3DA  0D01               	mullw	1
 22702  00E3DC  0EB8               	movlw	low __display_efficiency@footer
 22703  00E3DE  24F3               	addwf	prodl,w,c
 22704  00E3E0  6ED9               	movwf	fsr2l,c
 22705  00E3E2  0E00               	movlw	high __display_efficiency@footer
 22706  00E3E4  20F4               	addwfc	prodh,w,c
 22707  00E3E6  6EDA               	movwf	fsr2h,c
 22708  00E3E8  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22709  00E3EA  0D01               	mullw	1
 22710  00E3EC  0E90               	movlw	low (_display_content+60)
 22711  00E3EE  24F3               	addwf	prodl,w,c
 22712  00E3F0  6EE1               	movwf	fsr1l,c
 22713  00E3F2  0E03               	movlw	high (_display_content+60)
 22714  00E3F4  20F4               	addwfc	prodh,w,c
 22715  00E3F6  6EE2               	movwf	fsr1h,c
 22716  00E3F8  CFDF FFE7          	movff	indf2,indf1
 22717                           
 22718                           ; BSR set to: 0
 22719  00E3FC  2BD2               	incf	__display_efficiency@cntr& (0+255),f,b
 22720  00E3FE                     l2183:
 22721                           
 22722                           ; BSR set to: 0
 22723                           
 22724                           ; BSR set to: 0
 22725  00E3FE  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 22726  00E400  0D01               	mullw	1
 22727  00E402  0EB8               	movlw	low __display_efficiency@footer
 22728  00E404  24F3               	addwf	prodl,w,c
 22729  00E406  6ED9               	movwf	fsr2l,c
 22730  00E408  0E00               	movlw	high __display_efficiency@footer
 22731  00E40A  20F4               	addwfc	prodh,w,c
 22732  00E40C  6EDA               	movwf	fsr2h,c
 22733  00E40E  50DF               	movf	indf2,w,c
 22734  00E410  A4D8               	btfss	status,2,c
 22735  00E412  D7E2               	goto	l2184
 22736                           
 22737                           ; BSR set to: 0
 22738                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 22739                           
 22740                           ; BSR set to: 0
 22741  00E414  C0C6  F060         	movff	__display_efficiency@efficiency,___fltol@f1
 22742  00E418  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fltol@f1+1
 22743  00E41C  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fltol@f1+2
 22744  00E420  C0C9  F063         	movff	__display_efficiency@efficiency+3,___fltol@f1+3
 22745  00E424  ECD6  F092         	call	___fltol	;wreg free
 22746  00E428  C060  F078         	movff	?___fltol,__display_itoa@value
 22747  00E42C  C061  F079         	movff	?___fltol+1,__display_itoa@value+1
 22748  00E430  0E01               	movlw	1
 22749  00E432  0100               	movlb	0	; () banked
 22750  00E434  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22751  00E436  0E93               	movlw	low (_display_content+63)
 22752  00E438  6F7B               	movwf	__display_itoa@text& (0+255),b
 22753  00E43A  0E03               	movlw	high (_display_content+63)
 22754  00E43C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22755  00E43E  ECC3  F07D         	call	__display_itoa	;wreg free
 22756                           
 22757                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 22758  00E442  C0CE  F090         	movff	__display_efficiency@battery,??__display_efficiency
 22759  00E446  C0CF  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 22760  00E44A  0100               	movlb	0	; () banked
 22761  00E44C  1F90               	comf	??__display_efficiency& (0+255),f,b
 22762  00E44E  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 22763  00E450  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 22764  00E452  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 22765  00E454  51CA               	movf	__display_efficiency@panel& (0+255),w,b
 22766  00E456  2590               	addwf	??__display_efficiency& (0+255),w,b
 22767  00E458  6F78               	movwf	__display_itoa@value& (0+255),b
 22768  00E45A  51CB               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 22769  00E45C  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 22770  00E45E  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 22771  00E460  0E03               	movlw	3
 22772  00E462  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22773  00E464  0E9E               	movlw	low (_display_content+74)
 22774  00E466  6F7B               	movwf	__display_itoa@text& (0+255),b
 22775  00E468  0E03               	movlw	high (_display_content+74)
 22776  00E46A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22777  00E46C  ECC3  F07D         	call	__display_itoa	;wreg free
 22778  00E470  0012               	return		;funcret
 22779  00E472                     __end_of__display_efficiency:
 22780                           	opt stack 0
 22781                           tblptru	equ	0xFF8
 22782                           tblptrh	equ	0xFF7
 22783                           tblptrl	equ	0xFF6
 22784                           tablat	equ	0xFF5
 22785                           prodh	equ	0xFF4
 22786                           prodl	equ	0xFF3
 22787                           intcon	equ	0xFF2
 22788                           intcon2	equ	0xFF1
 22789                           intcon3	equ	0xFF0
 22790                           postinc0	equ	0xFEE
 22791                           wreg	equ	0xFE8
 22792                           indf1	equ	0xFE7
 22793                           postinc1	equ	0xFE6
 22794                           postdec1	equ	0xFE5
 22795                           plusw1	equ	0xFE3
 22796                           fsr1h	equ	0xFE2
 22797                           fsr1l	equ	0xFE1
 22798                           indf2	equ	0xFDF
 22799                           postinc2	equ	0xFDE
 22800                           postdec2	equ	0xFDD
 22801                           plusw2	equ	0xFDB
 22802                           fsr2h	equ	0xFDA
 22803                           fsr2l	equ	0xFD9
 22804                           status	equ	0xFD8
 22805                           
 22806 ;; *************** function ___xxtofl *****************
 22807 ;; Defined at:
 22808 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 22809 ;; Parameters:    Size  Location     Type
 22810 ;;  sign            1    wreg     unsigned char 
 22811 ;;  val             4   14[BANK0 ] long 
 22812 ;; Auto vars:     Size  Location     Type
 22813 ;;  sign            1   22[BANK0 ] unsigned char 
 22814 ;;  arg             4   24[BANK0 ] unsigned long 
 22815 ;;  exp             1   23[BANK0 ] unsigned char 
 22816 ;; Return value:  Size  Location     Type
 22817 ;;                  4   14[BANK0 ] unsigned char 
 22818 ;; Registers used:
 22819 ;;		wreg, status,2, status,0
 22820 ;; Tracked objects:
 22821 ;;		On entry : 0/0
 22822 ;;		On exit  : 0/0
 22823 ;;		Unchanged: 0/0
 22824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22826 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22827 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22828 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22829 ;;Total ram usage:       14 bytes
 22830 ;; Hardware stack levels used:    1
 22831 ;; Hardware stack levels required when called:   10
 22832 ;; This function calls:
 22833 ;;		Nothing
 22834 ;; This function is called by:
 22835 ;;		__display_efficiency
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839                           	psect	text105
 22840  0108F8                     __ptext105:
 22841                           	opt stack 0
 22842  0108F8                     ___xxtofl:
 22843                           	opt stack 18
 22844                           
 22845                           ;incstack = 0
 22846                           ;___xxtofl@sign stored from wreg
 22847  0108F8  0100               	movlb	0	; () banked
 22848  0108FA  6F76               	movwf	___xxtofl@sign& (0+255),b
 22849  0108FC  0100               	movlb	0	; () banked
 22850  0108FE  5176               	movf	___xxtofl@sign& (0+255),w,b
 22851  010900  A4D8               	btfss	status,2,c
 22852                           
 22853                           ; BSR set to: 0
 22854  010902  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 22855  010904  D01A               	goto	l3962
 22856                           
 22857                           ; BSR set to: 0
 22858  010906  C06E  F072         	movff	___xxtofl@val,??___xxtofl
 22859  01090A  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
 22860  01090E  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
 22861  010912  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
 22862  010916  1F72               	comf	??___xxtofl& (0+255),f,b
 22863  010918  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 22864  01091A  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 22865  01091C  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 22866  01091E  2B72               	incf	??___xxtofl& (0+255),f,b
 22867  010920  0E00               	movlw	0
 22868  010922  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 22869  010924  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 22870  010926  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 22871  010928  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 22872  01092C  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 22873  010930  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 22874  010934  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 22875  010938  D008               	goto	l3963
 22876  01093A                     l3962:
 22877                           
 22878                           ; BSR set to: 0
 22879  01093A  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 22880  01093E  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 22881  010942  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 22882  010946  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 22883  01094A                     l3963:
 22884                           
 22885                           ; BSR set to: 0
 22886                           
 22887                           ; BSR set to: 0
 22888  01094A  516E               	movf	___xxtofl@val& (0+255),w,b
 22889  01094C  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 22890  01094E  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 22891  010950  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 22892  010952  A4D8               	btfss	status,2,c
 22893  010954  D009               	goto	l3964
 22894                           
 22895                           ; BSR set to: 0
 22896  010956  0E00               	movlw	0
 22897  010958  6F6E               	movwf	?___xxtofl& (0+255),b
 22898  01095A  0E00               	movlw	0
 22899  01095C  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 22900  01095E  0E00               	movlw	0
 22901  010960  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 22902  010962  0E00               	movlw	0
 22903  010964  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 22904                           
 22905                           ; BSR set to: 0
 22906  010966  0012               	return	
 22907  010968                     l3964:
 22908                           
 22909                           ; BSR set to: 0
 22910                           
 22911                           ; BSR set to: 0
 22912  010968  0E96               	movlw	150
 22913  01096A  6F77               	movwf	___xxtofl@exp& (0+255),b
 22914  01096C  D006               	goto	l3966
 22915  01096E                     
 22916                           ; BSR set to: 0
 22917                           
 22918                           ; BSR set to: 0
 22919  01096E  2B77               	incf	___xxtofl@exp& (0+255),f,b
 22920  010970  90D8               	bcf	status,0,c
 22921  010972  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 22922  010974  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 22923  010976  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 22924  010978  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 22925  01097A                     l3966:
 22926                           
 22927                           ; BSR set to: 0
 22928                           
 22929                           ; BSR set to: 0
 22930  01097A  0E00               	movlw	0
 22931  01097C  1578               	andwf	___xxtofl@arg& (0+255),w,b
 22932  01097E  6F72               	movwf	??___xxtofl& (0+255),b
 22933  010980  0E00               	movlw	0
 22934  010982  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 22935  010984  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 22936  010986  0E00               	movlw	0
 22937  010988  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 22938  01098A  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 22939  01098C  0EFE               	movlw	254
 22940  01098E  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 22941  010990  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 22942  010992  5172               	movf	??___xxtofl& (0+255),w,b
 22943  010994  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 22944  010996  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 22945  010998  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 22946  01099A  B4D8               	btfsc	status,2,c
 22947  01099C  D00D               	goto	l3969
 22948  01099E  D7E7               	goto	l3967
 22949  0109A0                     
 22950                           ; BSR set to: 0
 22951                           
 22952                           ; BSR set to: 0
 22953  0109A0  2B77               	incf	___xxtofl@exp& (0+255),f,b
 22954                           
 22955                           ; BSR set to: 0
 22956  0109A2  0E01               	movlw	1
 22957  0109A4  2778               	addwf	___xxtofl@arg& (0+255),f,b
 22958  0109A6  0E00               	movlw	0
 22959  0109A8  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 22960  0109AA  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 22961  0109AC  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 22962                           
 22963                           ; BSR set to: 0
 22964  0109AE  90D8               	bcf	status,0,c
 22965  0109B0  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 22966  0109B2  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 22967  0109B4  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 22968  0109B6  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 22969  0109B8                     l3969:
 22970                           
 22971                           ; BSR set to: 0
 22972  0109B8  0E00               	movlw	0
 22973  0109BA  1578               	andwf	___xxtofl@arg& (0+255),w,b
 22974  0109BC  6F72               	movwf	??___xxtofl& (0+255),b
 22975  0109BE  0E00               	movlw	0
 22976  0109C0  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 22977  0109C2  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 22978  0109C4  0E00               	movlw	0
 22979  0109C6  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 22980  0109C8  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 22981  0109CA  0EFF               	movlw	255
 22982  0109CC  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 22983  0109CE  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 22984  0109D0  5172               	movf	??___xxtofl& (0+255),w,b
 22985  0109D2  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 22986  0109D4  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 22987  0109D6  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 22988  0109D8  B4D8               	btfsc	status,2,c
 22989  0109DA  D007               	goto	l3972
 22990  0109DC  D7E1               	goto	l3970
 22991  0109DE                     
 22992                           ; BSR set to: 0
 22993                           
 22994                           ; BSR set to: 0
 22995  0109DE  0777               	decf	___xxtofl@exp& (0+255),f,b
 22996  0109E0  90D8               	bcf	status,0,c
 22997  0109E2  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 22998  0109E4  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 22999  0109E6  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 23000  0109E8  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 23001  0109EA                     l3972:
 23002                           
 23003                           ; BSR set to: 0
 23004                           
 23005                           ; BSR set to: 0
 23006  0109EA  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 23007  0109EC  D003               	goto	u19420
 23008                           
 23009                           ; BSR set to: 0
 23010  0109EE  0E02               	movlw	2
 23011  0109F0  6177               	cpfslt	___xxtofl@exp& (0+255),b
 23012  0109F2  D7F5               	goto	l3973
 23013  0109F4                     u19420:
 23014                           
 23015                           ; BSR set to: 0
 23016                           
 23017                           ; BSR set to: 0
 23018  0109F4  A177               	btfss	___xxtofl@exp& (0+255),0,b
 23019                           
 23020                           ; BSR set to: 0
 23021  0109F6  9F7A               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 23022                           
 23023                           ; BSR set to: 0
 23024                           
 23025                           ; BSR set to: 0
 23026  0109F8  90D8               	bcf	status,0,c
 23027  0109FA  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 23028                           
 23029                           ; BSR set to: 0
 23030  0109FC  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 23031  010A00  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 23032  010A02  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 23033  010A04  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 23034  010A06  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 23035  010A0A  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 23036  010A0C  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 23037  010A0E  6B72               	clrf	??___xxtofl& (0+255),b
 23038  010A10  5172               	movf	??___xxtofl& (0+255),w,b
 23039  010A12  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 23040  010A14  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 23041  010A16  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 23042  010A18  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 23043  010A1A  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 23044  010A1C  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 23045  010A1E  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 23046                           
 23047                           ; BSR set to: 0
 23048  010A20  5176               	movf	___xxtofl@sign& (0+255),w,b
 23049  010A22  A4D8               	btfss	status,2,c
 23050                           
 23051                           ; BSR set to: 0
 23052  010A24  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 23053  010A26  D001               	goto	l3978
 23054                           
 23055                           ; BSR set to: 0
 23056  010A28  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 23057  010A2A                     l3978:
 23058                           
 23059                           ; BSR set to: 0
 23060                           
 23061                           ; BSR set to: 0
 23062  010A2A  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 23063  010A2E  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 23064  010A32  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 23065  010A36  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 23066  010A3A  0012               	return	
 23067  010A3C                     __end_of___xxtofl:
 23068                           	opt stack 0
 23069                           tblptru	equ	0xFF8
 23070                           tblptrh	equ	0xFF7
 23071                           tblptrl	equ	0xFF6
 23072                           tablat	equ	0xFF5
 23073                           prodh	equ	0xFF4
 23074                           prodl	equ	0xFF3
 23075                           intcon	equ	0xFF2
 23076                           intcon2	equ	0xFF1
 23077                           intcon3	equ	0xFF0
 23078                           postinc0	equ	0xFEE
 23079                           wreg	equ	0xFE8
 23080                           indf1	equ	0xFE7
 23081                           postinc1	equ	0xFE6
 23082                           postdec1	equ	0xFE5
 23083                           plusw1	equ	0xFE3
 23084                           fsr1h	equ	0xFE2
 23085                           fsr1l	equ	0xFE1
 23086                           indf2	equ	0xFDF
 23087                           postinc2	equ	0xFDE
 23088                           postdec2	equ	0xFDD
 23089                           plusw2	equ	0xFDB
 23090                           fsr2h	equ	0xFDA
 23091                           fsr2l	equ	0xFD9
 23092                           status	equ	0xFD8
 23093                           
 23094 ;; *************** function ___fltol *****************
 23095 ;; Defined at:
 23096 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;  f1              4    0[BANK0 ] unsigned char 
 23099 ;; Auto vars:     Size  Location     Type
 23100 ;;  exp1            1    9[BANK0 ] unsigned char 
 23101 ;;  sign1           1    8[BANK0 ] unsigned char 
 23102 ;; Return value:  Size  Location     Type
 23103 ;;                  4    0[BANK0 ] long 
 23104 ;; Registers used:
 23105 ;;		wreg, status,2, status,0
 23106 ;; Tracked objects:
 23107 ;;		On entry : 0/0
 23108 ;;		On exit  : 0/0
 23109 ;;		Unchanged: 0/0
 23110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23113 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23114 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23115 ;;Total ram usage:       10 bytes
 23116 ;; Hardware stack levels used:    1
 23117 ;; Hardware stack levels required when called:   10
 23118 ;; This function calls:
 23119 ;;		Nothing
 23120 ;; This function is called by:
 23121 ;;		__display_efficiency
 23122 ;; This function uses a non-reentrant model
 23123 ;;
 23124                           
 23125                           	psect	text106
 23126  0125AC                     __ptext106:
 23127                           	opt stack 0
 23128  0125AC                     ___fltol:
 23129                           	opt stack 18
 23130                           
 23131                           ; BSR set to: 0
 23132                           ;incstack = 0
 23133  0125AC  0100               	movlb	0	; () banked
 23134  0125AE  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 23135  0125B0  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 23136  0125B2  6F69               	movwf	___fltol@exp1& (0+255),b
 23137  0125B4  5169               	movf	___fltol@exp1& (0+255),w,b
 23138  0125B6  A4D8               	btfss	status,2,c
 23139  0125B8  D009               	goto	l3607
 23140                           
 23141                           ; BSR set to: 0
 23142  0125BA  0E00               	movlw	0
 23143  0125BC  6F60               	movwf	?___fltol& (0+255),b
 23144  0125BE  0E00               	movlw	0
 23145  0125C0  6F61               	movwf	(?___fltol+1)& (0+255),b
 23146  0125C2  0E00               	movlw	0
 23147  0125C4  6F62               	movwf	(?___fltol+2)& (0+255),b
 23148  0125C6  0E00               	movlw	0
 23149  0125C8  6F63               	movwf	(?___fltol+3)& (0+255),b
 23150                           
 23151                           ; BSR set to: 0
 23152  0125CA  0012               	return	
 23153  0125CC                     l3607:
 23154                           
 23155                           ; BSR set to: 0
 23156                           
 23157                           ; BSR set to: 0
 23158  0125CC  C060  F064         	movff	___fltol@f1,??___fltol
 23159  0125D0  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 23160  0125D4  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 23161  0125D8  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 23162  0125DC  0E20               	movlw	32
 23163  0125DE  D005               	goto	u19300
 23164  0125E0                     u19305:
 23165  0125E0  90D8               	bcf	status,0,c
 23166  0125E2  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 23167  0125E4  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 23168  0125E6  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 23169  0125E8  3364               	rrcf	??___fltol& (0+255),f,b
 23170  0125EA                     u19300:
 23171  0125EA  2EE8               	decfsz	wreg,f,c
 23172  0125EC  D7F9               	goto	u19305
 23173  0125EE  5164               	movf	??___fltol& (0+255),w,b
 23174  0125F0  6F68               	movwf	___fltol@sign1& (0+255),b
 23175                           
 23176                           ; BSR set to: 0
 23177  0125F2  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 23178                           
 23179                           ; BSR set to: 0
 23180  0125F4  0EFF               	movlw	255
 23181  0125F6  1760               	andwf	___fltol@f1& (0+255),f,b
 23182  0125F8  0EFF               	movlw	255
 23183  0125FA  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 23184  0125FC  0EFF               	movlw	255
 23185  0125FE  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 23186  012600  0E00               	movlw	0
 23187  012602  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 23188                           
 23189                           ; BSR set to: 0
 23190  012604  0E96               	movlw	150
 23191  012606  5F69               	subwf	___fltol@exp1& (0+255),f,b
 23192                           
 23193                           ; BSR set to: 0
 23194  012608  AF69               	btfss	___fltol@exp1& (0+255),7,b
 23195  01260A  D016               	goto	l3609
 23196                           
 23197                           ; BSR set to: 0
 23198  01260C  5169               	movf	___fltol@exp1& (0+255),w,b
 23199  01260E  0A80               	xorlw	128
 23200  012610  0F97               	addlw	151
 23201  012612  B0D8               	btfsc	status,0,c
 23202  012614  D009               	goto	l3610
 23203                           
 23204                           ; BSR set to: 0
 23205  012616  0E00               	movlw	0
 23206  012618  6F60               	movwf	?___fltol& (0+255),b
 23207  01261A  0E00               	movlw	0
 23208  01261C  6F61               	movwf	(?___fltol+1)& (0+255),b
 23209  01261E  0E00               	movlw	0
 23210  012620  6F62               	movwf	(?___fltol+2)& (0+255),b
 23211  012622  0E00               	movlw	0
 23212  012624  6F63               	movwf	(?___fltol+3)& (0+255),b
 23213                           
 23214                           ; BSR set to: 0
 23215  012626  0012               	return	
 23216  012628                     l3610:
 23217                           
 23218                           ; BSR set to: 0
 23219                           
 23220                           ; BSR set to: 0
 23221                           
 23222                           ; BSR set to: 0
 23223  012628  90D8               	bcf	status,0,c
 23224  01262A  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 23225  01262C  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 23226  01262E  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 23227  012630  3360               	rrcf	___fltol@f1& (0+255),f,b
 23228                           
 23229                           ; BSR set to: 0
 23230  012632  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 23231  012634  D7F9               	goto	l3610
 23232                           
 23233                           ; BSR set to: 0
 23234  012636  D015               	goto	u19340
 23235  012638                     l3609:
 23236                           
 23237                           ; BSR set to: 0
 23238                           
 23239                           ; BSR set to: 0
 23240  012638  0E1F               	movlw	31
 23241  01263A  6569               	cpfsgt	___fltol@exp1& (0+255),b
 23242  01263C  D00F               	goto	l3615
 23243                           
 23244                           ; BSR set to: 0
 23245  01263E  0E00               	movlw	0
 23246  012640  6F60               	movwf	?___fltol& (0+255),b
 23247  012642  0E00               	movlw	0
 23248  012644  6F61               	movwf	(?___fltol+1)& (0+255),b
 23249  012646  0E00               	movlw	0
 23250  012648  6F62               	movwf	(?___fltol+2)& (0+255),b
 23251  01264A  0E00               	movlw	0
 23252  01264C  6F63               	movwf	(?___fltol+3)& (0+255),b
 23253                           
 23254                           ; BSR set to: 0
 23255  01264E  0012               	return	
 23256  012650                     
 23257                           ; BSR set to: 0
 23258                           
 23259                           ; BSR set to: 0
 23260  012650  90D8               	bcf	status,0,c
 23261  012652  3760               	rlcf	___fltol@f1& (0+255),f,b
 23262  012654  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 23263  012656  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 23264  012658  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 23265  01265A  0769               	decf	___fltol@exp1& (0+255),f,b
 23266  01265C                     l3615:
 23267                           
 23268                           ; BSR set to: 0
 23269                           
 23270                           ; BSR set to: 0
 23271  01265C  5169               	movf	___fltol@exp1& (0+255),w,b
 23272  01265E  A4D8               	btfss	status,2,c
 23273  012660  D7F7               	goto	l3616
 23274  012662                     u19340:
 23275                           
 23276                           ; BSR set to: 0
 23277                           
 23278                           ; BSR set to: 0
 23279                           
 23280                           ; BSR set to: 0
 23281  012662  5168               	movf	___fltol@sign1& (0+255),w,b
 23282  012664  B4D8               	btfsc	status,2,c
 23283  012666  D008               	goto	l3618
 23284                           
 23285                           ; BSR set to: 0
 23286  012668  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 23287  01266A  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 23288  01266C  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 23289  01266E  6D60               	negf	___fltol@f1& (0+255),b
 23290  012670  0E00               	movlw	0
 23291  012672  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 23292  012674  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 23293  012676  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 23294  012678                     l3618:
 23295                           
 23296                           ; BSR set to: 0
 23297                           
 23298                           ; BSR set to: 0
 23299  012678  C060  F060         	movff	___fltol@f1,?___fltol
 23300  01267C  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 23301  012680  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 23302  012684  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 23303  012688  0012               	return	
 23304  01268A                     __end_of___fltol:
 23305                           	opt stack 0
 23306                           tblptru	equ	0xFF8
 23307                           tblptrh	equ	0xFF7
 23308                           tblptrl	equ	0xFF6
 23309                           tablat	equ	0xFF5
 23310                           prodh	equ	0xFF4
 23311                           prodl	equ	0xFF3
 23312                           intcon	equ	0xFF2
 23313                           intcon2	equ	0xFF1
 23314                           intcon3	equ	0xFF0
 23315                           postinc0	equ	0xFEE
 23316                           wreg	equ	0xFE8
 23317                           indf1	equ	0xFE7
 23318                           postinc1	equ	0xFE6
 23319                           postdec1	equ	0xFE5
 23320                           plusw1	equ	0xFE3
 23321                           fsr1h	equ	0xFE2
 23322                           fsr1l	equ	0xFE1
 23323                           indf2	equ	0xFDF
 23324                           postinc2	equ	0xFDE
 23325                           postdec2	equ	0xFDD
 23326                           plusw2	equ	0xFDB
 23327                           fsr2h	equ	0xFDA
 23328                           fsr2l	equ	0xFD9
 23329                           status	equ	0xFD8
 23330                           
 23331 ;; *************** function ___aldiv *****************
 23332 ;; Defined at:
 23333 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 23334 ;; Parameters:    Size  Location     Type
 23335 ;;  dividend        4    0[BANK0 ] long 
 23336 ;;  divisor         4    4[BANK0 ] long 
 23337 ;; Auto vars:     Size  Location     Type
 23338 ;;  quotient        4   10[BANK0 ] long 
 23339 ;;  sign            1    9[BANK0 ] unsigned char 
 23340 ;;  counter         1    8[BANK0 ] unsigned char 
 23341 ;; Return value:  Size  Location     Type
 23342 ;;                  4    0[BANK0 ] long 
 23343 ;; Registers used:
 23344 ;;		wreg, status,2, status,0
 23345 ;; Tracked objects:
 23346 ;;		On entry : 0/0
 23347 ;;		On exit  : 0/0
 23348 ;;		Unchanged: 0/0
 23349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23350 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23351 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23353 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23354 ;;Total ram usage:       14 bytes
 23355 ;; Hardware stack levels used:    1
 23356 ;; Hardware stack levels required when called:   10
 23357 ;; This function calls:
 23358 ;;		Nothing
 23359 ;; This function is called by:
 23360 ;;		__display_efficiency
 23361 ;;		__get_input_power
 23362 ;;		_log_generate_entry
 23363 ;; This function uses a non-reentrant model
 23364 ;;
 23365                           
 23366                           	psect	text107
 23367  012AB8                     __ptext107:
 23368                           	opt stack 0
 23369  012AB8                     ___aldiv:
 23370                           	opt stack 18
 23371                           
 23372                           ; BSR set to: 0
 23373                           ;incstack = 0
 23374  012AB8  0E00               	movlw	0
 23375  012ABA  0100               	movlb	0	; () banked
 23376  012ABC  6F69               	movwf	___aldiv@sign& (0+255),b
 23377                           
 23378                           ; BSR set to: 0
 23379  012ABE  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23380  012AC0  D00A               	goto	l3388
 23381                           
 23382                           ; BSR set to: 0
 23383  012AC2  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 23384  012AC4  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 23385  012AC6  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 23386  012AC8  6D64               	negf	___aldiv@divisor& (0+255),b
 23387  012ACA  0E00               	movlw	0
 23388  012ACC  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 23389  012ACE  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 23390  012AD0  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 23391                           
 23392                           ; BSR set to: 0
 23393  012AD2  0E01               	movlw	1
 23394  012AD4  6F69               	movwf	___aldiv@sign& (0+255),b
 23395  012AD6                     l3388:
 23396                           
 23397                           ; BSR set to: 0
 23398                           
 23399                           ; BSR set to: 0
 23400  012AD6  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 23401  012AD8  D00A               	goto	l3389
 23402                           
 23403                           ; BSR set to: 0
 23404  012ADA  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 23405  012ADC  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 23406  012ADE  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 23407  012AE0  6D60               	negf	___aldiv@dividend& (0+255),b
 23408  012AE2  0E00               	movlw	0
 23409  012AE4  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 23410  012AE6  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 23411  012AE8  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 23412                           
 23413                           ; BSR set to: 0
 23414  012AEA  0E01               	movlw	1
 23415  012AEC  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 23416  012AEE                     l3389:
 23417                           
 23418                           ; BSR set to: 0
 23419                           
 23420                           ; BSR set to: 0
 23421  012AEE  0E00               	movlw	0
 23422  012AF0  6F6A               	movwf	___aldiv@quotient& (0+255),b
 23423  012AF2  0E00               	movlw	0
 23424  012AF4  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 23425  012AF6  0E00               	movlw	0
 23426  012AF8  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 23427  012AFA  0E00               	movlw	0
 23428  012AFC  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 23429                           
 23430                           ; BSR set to: 0
 23431  012AFE  5164               	movf	___aldiv@divisor& (0+255),w,b
 23432  012B00  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 23433  012B02  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 23434  012B04  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 23435  012B06  B4D8               	btfsc	status,2,c
 23436  012B08  D02A               	goto	l3396
 23437                           
 23438                           ; BSR set to: 0
 23439  012B0A  0E01               	movlw	1
 23440  012B0C  6F68               	movwf	___aldiv@counter& (0+255),b
 23441  012B0E  D006               	goto	l3391
 23442  012B10                     
 23443                           ; BSR set to: 0
 23444                           
 23445                           ; BSR set to: 0
 23446  012B10  90D8               	bcf	status,0,c
 23447  012B12  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 23448  012B14  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 23449  012B16  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 23450  012B18  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 23451  012B1A  2B68               	incf	___aldiv@counter& (0+255),f,b
 23452  012B1C                     l3391:
 23453                           
 23454                           ; BSR set to: 0
 23455                           
 23456                           ; BSR set to: 0
 23457  012B1C  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23458  012B1E  D7F8               	goto	l3392
 23459  012B20                     u19260:
 23460                           
 23461                           ; BSR set to: 0
 23462                           
 23463                           ; BSR set to: 0
 23464                           
 23465                           ; BSR set to: 0
 23466  012B20  90D8               	bcf	status,0,c
 23467  012B22  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 23468  012B24  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 23469  012B26  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 23470  012B28  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 23471                           
 23472                           ; BSR set to: 0
 23473  012B2A  5164               	movf	___aldiv@divisor& (0+255),w,b
 23474  012B2C  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 23475  012B2E  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23476  012B30  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 23477  012B32  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23478  012B34  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 23479  012B36  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23480  012B38  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 23481  012B3A  A0D8               	btfss	status,0,c
 23482  012B3C  D009               	goto	l3395
 23483                           
 23484                           ; BSR set to: 0
 23485  012B3E  5164               	movf	___aldiv@divisor& (0+255),w,b
 23486  012B40  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 23487  012B42  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23488  012B44  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 23489  012B46  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23490  012B48  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 23491  012B4A  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23492  012B4C  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 23493                           
 23494                           ; BSR set to: 0
 23495  012B4E  816A               	bsf	___aldiv@quotient& (0+255),0,b
 23496  012B50                     l3395:
 23497                           
 23498                           ; BSR set to: 0
 23499                           
 23500                           ; BSR set to: 0
 23501  012B50  90D8               	bcf	status,0,c
 23502  012B52  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 23503  012B54  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 23504  012B56  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 23505  012B58  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 23506                           
 23507                           ; BSR set to: 0
 23508  012B5A  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 23509  012B5C  D7E1               	goto	u19260
 23510  012B5E                     l3396:
 23511                           
 23512                           ; BSR set to: 0
 23513                           
 23514                           ; BSR set to: 0
 23515                           
 23516                           ; BSR set to: 0
 23517  012B5E  5169               	movf	___aldiv@sign& (0+255),w,b
 23518  012B60  B4D8               	btfsc	status,2,c
 23519  012B62  D008               	goto	l3397
 23520                           
 23521                           ; BSR set to: 0
 23522  012B64  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 23523  012B66  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 23524  012B68  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 23525  012B6A  6D6A               	negf	___aldiv@quotient& (0+255),b
 23526  012B6C  0E00               	movlw	0
 23527  012B6E  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 23528  012B70  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 23529  012B72  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 23530  012B74                     l3397:
 23531                           
 23532                           ; BSR set to: 0
 23533                           
 23534                           ; BSR set to: 0
 23535  012B74  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 23536  012B78  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 23537  012B7C  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 23538  012B80  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 23539  012B84  0012               	return	
 23540  012B86                     __end_of___aldiv:
 23541                           	opt stack 0
 23542                           tblptru	equ	0xFF8
 23543                           tblptrh	equ	0xFF7
 23544                           tblptrl	equ	0xFF6
 23545                           tablat	equ	0xFF5
 23546                           prodh	equ	0xFF4
 23547                           prodl	equ	0xFF3
 23548                           intcon	equ	0xFF2
 23549                           intcon2	equ	0xFF1
 23550                           intcon3	equ	0xFF0
 23551                           postinc0	equ	0xFEE
 23552                           wreg	equ	0xFE8
 23553                           indf1	equ	0xFE7
 23554                           postinc1	equ	0xFE6
 23555                           postdec1	equ	0xFE5
 23556                           plusw1	equ	0xFE3
 23557                           fsr1h	equ	0xFE2
 23558                           fsr1l	equ	0xFE1
 23559                           indf2	equ	0xFDF
 23560                           postinc2	equ	0xFDE
 23561                           postdec2	equ	0xFDD
 23562                           plusw2	equ	0xFDB
 23563                           fsr2h	equ	0xFDA
 23564                           fsr2l	equ	0xFD9
 23565                           status	equ	0xFD8
 23566                           
 23567 ;; *************** function __display_clear *****************
 23568 ;; Defined at:
 23569 ;;		line 28 in file "display.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;		None
 23572 ;; Auto vars:     Size  Location     Type
 23573 ;;  col             1    3[BANK0 ] unsigned char 
 23574 ;;  row             1    2[BANK0 ] unsigned char 
 23575 ;; Return value:  Size  Location     Type
 23576 ;;                  1    wreg      void 
 23577 ;; Registers used:
 23578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23579 ;; Tracked objects:
 23580 ;;		On entry : 0/0
 23581 ;;		On exit  : 0/0
 23582 ;;		Unchanged: 0/0
 23583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23587 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23588 ;;Total ram usage:        4 bytes
 23589 ;; Hardware stack levels used:    1
 23590 ;; Hardware stack levels required when called:   10
 23591 ;; This function calls:
 23592 ;;		Nothing
 23593 ;; This function is called by:
 23594 ;;		_display_prepare
 23595 ;; This function uses a non-reentrant model
 23596 ;;
 23597                           
 23598                           	psect	text108
 23599  015026                     __ptext108:
 23600                           	opt stack 0
 23601  015026                     __display_clear:
 23602                           	opt stack 19
 23603                           
 23604                           ;display.c: 30: uint8_t row;;display.c: 31: uint8_t col;;display.c: 32: for(row=0;row<4;
      +                          ++row)
 23605                           
 23606                           ; BSR set to: 0
 23607                           ;incstack = 0
 23608  015026  0E00               	movlw	0
 23609  015028  0100               	movlb	0	; () banked
 23610  01502A  6F62               	movwf	__display_clear@row& (0+255),b
 23611  01502C                     l21271:
 23612                           
 23613                           ; BSR set to: 0
 23614  01502C  0E03               	movlw	3
 23615  01502E  6562               	cpfsgt	__display_clear@row& (0+255),b
 23616  015030  D001               	goto	l1906
 23617  015032  0012               	return	
 23618  015034                     l1906:
 23619                           
 23620                           ; BSR set to: 0
 23621                           ;display.c: 33: {;display.c: 34: for(col=0;col<20;++col)
 23622                           
 23623                           ; BSR set to: 0
 23624  015034  0E00               	movlw	0
 23625  015036  6F63               	movwf	__display_clear@col& (0+255),b
 23626  015038                     l21277:
 23627                           
 23628                           ; BSR set to: 0
 23629  015038  0E13               	movlw	19
 23630  01503A  6563               	cpfsgt	__display_clear@col& (0+255),b
 23631  01503C  D001               	goto	l1908
 23632  01503E  D016               	goto	u20460
 23633  015040                     l1908:
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;display.c: 35: {;display.c: 36: display_content[row][col] = ' ';
 23637                           
 23638                           ; BSR set to: 0
 23639  015040  5162               	movf	__display_clear@row& (0+255),w,b
 23640  015042  0D14               	mullw	20
 23641  015044  0E54               	movlw	low _display_content
 23642  015046  6F60               	movwf	??__display_clear& (0+255),b
 23643  015048  0E03               	movlw	high _display_content
 23644  01504A  6F61               	movwf	(??__display_clear+1)& (0+255),b
 23645  01504C  50F3               	movf	prodl,w,c
 23646  01504E  2760               	addwf	??__display_clear& (0+255),f,b
 23647  015050  50F4               	movf	prodh,w,c
 23648  015052  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 23649  015054  5163               	movf	__display_clear@col& (0+255),w,b
 23650  015056  0D01               	mullw	1
 23651  015058  50F3               	movf	prodl,w,c
 23652  01505A  2560               	addwf	??__display_clear& (0+255),w,b
 23653  01505C  6ED9               	movwf	fsr2l,c
 23654  01505E  50F4               	movf	prodh,w,c
 23655  015060  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 23656  015062  6EDA               	movwf	fsr2h,c
 23657  015064  0E20               	movlw	32
 23658  015066  6EDF               	movwf	indf2,c
 23659                           
 23660                           ; BSR set to: 0
 23661  015068  2B63               	incf	__display_clear@col& (0+255),f,b
 23662  01506A  D7E6               	goto	l21277
 23663  01506C                     u20460:
 23664                           
 23665                           ; BSR set to: 0
 23666                           
 23667                           ; BSR set to: 0
 23668  01506C  2B62               	incf	__display_clear@row& (0+255),f,b
 23669  01506E  D7DE               	goto	l21271
 23670  015070                     __end_of__display_clear:
 23671                           	opt stack 0
 23672                           tblptru	equ	0xFF8
 23673                           tblptrh	equ	0xFF7
 23674                           tblptrl	equ	0xFF6
 23675                           tablat	equ	0xFF5
 23676                           prodh	equ	0xFF4
 23677                           prodl	equ	0xFF3
 23678                           intcon	equ	0xFF2
 23679                           intcon2	equ	0xFF1
 23680                           intcon3	equ	0xFF0
 23681                           postinc0	equ	0xFEE
 23682                           wreg	equ	0xFE8
 23683                           indf1	equ	0xFE7
 23684                           postinc1	equ	0xFE6
 23685                           postdec1	equ	0xFE5
 23686                           plusw1	equ	0xFE3
 23687                           fsr1h	equ	0xFE2
 23688                           fsr1l	equ	0xFE1
 23689                           indf2	equ	0xFDF
 23690                           postinc2	equ	0xFDE
 23691                           postdec2	equ	0xFDD
 23692                           plusw2	equ	0xFDB
 23693                           fsr2h	equ	0xFDA
 23694                           fsr2l	equ	0xFD9
 23695                           status	equ	0xFD8
 23696                           
 23697 ;; *************** function __display_charger *****************
 23698 ;; Defined at:
 23699 ;;		line 405 in file "display.c"
 23700 ;; Parameters:    Size  Location     Type
 23701 ;;		None
 23702 ;; Auto vars:     Size  Location     Type
 23703 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 23704 ;;  header         21   15[BANK1 ] const unsigned char [21]
 23705 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 23706 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 23707 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 23708 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 23709 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 23710 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 23711 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 23712 ;;  cntr            1  142[BANK1 ] unsigned char 
 23713 ;; Return value:  Size  Location     Type
 23714 ;;                  1    wreg      void 
 23715 ;; Registers used:
 23716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23717 ;; Tracked objects:
 23718 ;;		On entry : 0/0
 23719 ;;		On exit  : 0/0
 23720 ;;		Unchanged: 0/0
 23721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23723 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23725 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23726 ;;Total ram usage:      144 bytes
 23727 ;; Hardware stack levels used:    1
 23728 ;; Hardware stack levels required when called:   14
 23729 ;; This function calls:
 23730 ;;		__display_itoa
 23731 ;;		_buck_get_dutycycle
 23732 ;;		_buck_get_mode
 23733 ;; This function is called by:
 23734 ;;		_display_prepare
 23735 ;; This function uses a non-reentrant model
 23736 ;;
 23737                           
 23738                           	psect	text109
 23739  00E78C                     __ptext109:
 23740                           	opt stack 0
 23741  00E78C                     __display_charger:
 23742                           	opt stack 15
 23743                           
 23744                           ;display.c: 407: uint8_t cntr;;display.c: 408: const char header[] = "MPPT Charger Detai
      +                          ls";
 23745                           
 23746                           ; BSR set to: 0
 23747                           ;incstack = 0
 23748  00E78C  0EA0               	movlw	low __display_charger@F7255
 23749  00E78E  6EF6               	movwf	tblptrl,c
 23750  00E790                     	if	1	;There is more than 1 active tblptr byte
 23751  00E790  0EC0               	movlw	high __display_charger@F7255
 23752  00E792  6EF7               	movwf	tblptrh,c
 23753  00E794                     	endif
 23754  00E794                     	if	1	;There are 3 active tblptr bytes
 23755  00E794  0E00               	movlw	low (__display_charger@F7255 shr (0+16))
 23756  00E796  6EF8               	movwf	tblptru,c
 23757  00E798                     	endif
 23758  00E798  EE21  F00F         	lfsr	2,__display_charger@header
 23759  00E79C  0E14               	movlw	20
 23760  00E79E                     u21070:
 23761  00E79E  0009               	tblrd		*+
 23762  00E7A0  CFF5 FFDE          	movff	tablat,postinc2
 23763  00E7A4  06E8               	decf	wreg,f,c
 23764  00E7A6  E2FB               	bc	u21070
 23765                           
 23766                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 23767  00E7A8  0E90               	movlw	low __display_charger@F7257
 23768  00E7AA  6EF6               	movwf	tblptrl,c
 23769  00E7AC                     	if	1	;There is more than 1 active tblptr byte
 23770  00E7AC  0EC1               	movlw	high __display_charger@F7257
 23771  00E7AE  6EF7               	movwf	tblptrh,c
 23772  00E7B0                     	endif
 23773  00E7B0                     	if	1	;There are 3 active tblptr bytes
 23774  00E7B0  0E00               	movlw	low (__display_charger@F7257 shr (0+16))
 23775  00E7B2  6EF8               	movwf	tblptru,c
 23776  00E7B4                     	endif
 23777  00E7B4  EE21  F060         	lfsr	2,__display_charger@supply_on
 23778  00E7B8  0E11               	movlw	17
 23779  00E7BA                     u21080:
 23780  00E7BA  0009               	tblrd		*+
 23781  00E7BC  CFF5 FFDE          	movff	tablat,postinc2
 23782  00E7C0  06E8               	decf	wreg,f,c
 23783  00E7C2  E2FB               	bc	u21080
 23784                           
 23785                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 23786  00E7C4  0E7D               	movlw	low __display_charger@F7259
 23787  00E7C6  6EF6               	movwf	tblptrl,c
 23788  00E7C8                     	if	1	;There is more than 1 active tblptr byte
 23789  00E7C8  0EC1               	movlw	high __display_charger@F7259
 23790  00E7CA  6EF7               	movwf	tblptrh,c
 23791  00E7CC                     	endif
 23792  00E7CC                     	if	1	;There are 3 active tblptr bytes
 23793  00E7CC  0E00               	movlw	low (__display_charger@F7259 shr (0+16))
 23794  00E7CE  6EF8               	movwf	tblptru,c
 23795  00E7D0                     	endif
 23796  00E7D0  EE21  F04D         	lfsr	2,__display_charger@supply_off
 23797  00E7D4  0E12               	movlw	18
 23798  00E7D6                     u21090:
 23799  00E7D6  0009               	tblrd		*+
 23800  00E7D8  CFF5 FFDE          	movff	tablat,postinc2
 23801  00E7DC  06E8               	decf	wreg,f,c
 23802  00E7DE  E2FB               	bc	u21090
 23803                           
 23804                           ;display.c: 411: const char fan_on[] = "Fan on";
 23805  00E7E0  0E0F               	movlw	low __display_charger@F7261
 23806  00E7E2  6EF6               	movwf	tblptrl,c
 23807  00E7E4                     	if	1	;There is more than 1 active tblptr byte
 23808  00E7E4  0EC3               	movlw	high __display_charger@F7261
 23809  00E7E6  6EF7               	movwf	tblptrh,c
 23810  00E7E8                     	endif
 23811  00E7E8                     	if	1	;There are 3 active tblptr bytes
 23812  00E7E8  0E00               	movlw	low (__display_charger@F7261 shr (0+16))
 23813  00E7EA  6EF8               	movwf	tblptru,c
 23814  00E7EC                     	endif
 23815  00E7EC  EE21  F008         	lfsr	2,__display_charger@fan_on
 23816  00E7F0  0E06               	movlw	6
 23817  00E7F2                     u21100:
 23818  00E7F2  0009               	tblrd		*+
 23819  00E7F4  CFF5 FFDE          	movff	tablat,postinc2
 23820  00E7F8  06E8               	decf	wreg,f,c
 23821  00E7FA  E2FB               	bc	u21100
 23822                           
 23823                           ;display.c: 412: const char fan_off[] = "Fan off";
 23824  00E7FC  0EF7               	movlw	low __display_charger@F7263
 23825  00E7FE  6EF6               	movwf	tblptrl,c
 23826  00E800                     	if	1	;There is more than 1 active tblptr byte
 23827  00E800  0EC2               	movlw	high __display_charger@F7263
 23828  00E802  6EF7               	movwf	tblptrh,c
 23829  00E804                     	endif
 23830  00E804                     	if	1	;There are 3 active tblptr bytes
 23831  00E804  0E00               	movlw	low (__display_charger@F7263 shr (0+16))
 23832  00E806  6EF8               	movwf	tblptru,c
 23833  00E808                     	endif
 23834  00E808  EE21  F000         	lfsr	2,__display_charger@fan_off
 23835  00E80C  0E07               	movlw	7
 23836  00E80E                     u21110:
 23837  00E80E  0009               	tblrd		*+
 23838  00E810  CFF5 FFDE          	movff	tablat,postinc2
 23839  00E814  06E8               	decf	wreg,f,c
 23840  00E816  E2FB               	bc	u21110
 23841                           
 23842                           ;display.c: 414: const char charger_off[] = "Charger off";
 23843  00E818  0EAB               	movlw	low __display_charger@F7265
 23844  00E81A  6EF6               	movwf	tblptrl,c
 23845  00E81C                     	if	1	;There is more than 1 active tblptr byte
 23846  00E81C  0EC2               	movlw	high __display_charger@F7265
 23847  00E81E  6EF7               	movwf	tblptrh,c
 23848  00E820                     	endif
 23849  00E820                     	if	1	;There are 3 active tblptr bytes
 23850  00E820  0E00               	movlw	low (__display_charger@F7265 shr (0+16))
 23851  00E822  6EF8               	movwf	tblptru,c
 23852  00E824                     	endif
 23853  00E824  EE21  F082         	lfsr	2,__display_charger@charger_off
 23854  00E828  0E0B               	movlw	11
 23855  00E82A                     u21120:
 23856  00E82A  0009               	tblrd		*+
 23857  00E82C  CFF5 FFDE          	movff	tablat,postinc2
 23858  00E830  06E8               	decf	wreg,f,c
 23859  00E832  E2FB               	bc	u21120
 23860                           
 23861                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 23862  00E834  0EFB               	movlw	low __display_charger@F7267
 23863  00E836  6EF6               	movwf	tblptrl,c
 23864  00E838                     	if	1	;There is more than 1 active tblptr byte
 23865  00E838  0EC1               	movlw	high __display_charger@F7267
 23866  00E83A  6EF7               	movwf	tblptrh,c
 23867  00E83C                     	endif
 23868  00E83C                     	if	1	;There are 3 active tblptr bytes
 23869  00E83C  0E00               	movlw	low (__display_charger@F7267 shr (0+16))
 23870  00E83E  6EF8               	movwf	tblptru,c
 23871  00E840                     	endif
 23872  00E840  EE21  F072         	lfsr	2,__display_charger@charger_startup
 23873  00E844  0E0F               	movlw	15
 23874  00E846                     u21130:
 23875  00E846  0009               	tblrd		*+
 23876  00E848  CFF5 FFDE          	movff	tablat,postinc2
 23877  00E84C  06E8               	decf	wreg,f,c
 23878  00E84E  E2FB               	bc	u21130
 23879                           
 23880                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 23881  00E850  0E8B               	movlw	low __display_charger@F7269
 23882  00E852  6EF6               	movwf	tblptrl,c
 23883  00E854                     	if	1	;There is more than 1 active tblptr byte
 23884  00E854  0EC0               	movlw	high __display_charger@F7269
 23885  00E856  6EF7               	movwf	tblptrh,c
 23886  00E858                     	endif
 23887  00E858                     	if	1	;There are 3 active tblptr bytes
 23888  00E858  0E00               	movlw	low (__display_charger@F7269 shr (0+16))
 23889  00E85A  6EF8               	movwf	tblptru,c
 23890  00E85C                     	endif
 23891  00E85C  EE21  F024         	lfsr	2,__display_charger@charger_async
 23892  00E860  0E14               	movlw	20
 23893  00E862                     u21140:
 23894  00E862  0009               	tblrd		*+
 23895  00E864  CFF5 FFDE          	movff	tablat,postinc2
 23896  00E868  06E8               	decf	wreg,f,c
 23897  00E86A  E2FB               	bc	u21140
 23898                           
 23899                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 23900  00E86C  0EF3               	movlw	low __display_charger@F7271
 23901  00E86E  6EF6               	movwf	tblptrl,c
 23902  00E870                     	if	1	;There is more than 1 active tblptr byte
 23903  00E870  0EC0               	movlw	high __display_charger@F7271
 23904  00E872  6EF7               	movwf	tblptrh,c
 23905  00E874                     	endif
 23906  00E874                     	if	1	;There are 3 active tblptr bytes
 23907  00E874  0E00               	movlw	low (__display_charger@F7271 shr (0+16))
 23908  00E876  6EF8               	movwf	tblptru,c
 23909  00E878                     	endif
 23910  00E878  EE21  F039         	lfsr	2,__display_charger@charger_sync
 23911  00E87C  0E13               	movlw	19
 23912  00E87E                     u21150:
 23913  00E87E  0009               	tblrd		*+
 23914  00E880  CFF5 FFDE          	movff	tablat,postinc2
 23915  00E884  06E8               	decf	wreg,f,c
 23916  00E886  E2FB               	bc	u21150
 23917                           
 23918                           ;display.c: 419: cntr = 0;
 23919  00E888  0E00               	movlw	0
 23920  00E88A  0101               	movlb	1	; () banked
 23921  00E88C  6F8E               	movwf	__display_charger@cntr& (0+255),b
 23922                           
 23923                           ;display.c: 420: while(header[cntr])
 23924  00E88E  D013               	goto	l2137
 23925  00E890                     
 23926                           ; BSR set to: 1
 23927                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 23928                           
 23929                           ; BSR set to: 1
 23930  00E890  518E               	movf	__display_charger@cntr& (0+255),w,b
 23931  00E892  0D01               	mullw	1
 23932  00E894  0E0F               	movlw	low __display_charger@header
 23933  00E896  24F3               	addwf	prodl,w,c
 23934  00E898  6ED9               	movwf	fsr2l,c
 23935  00E89A  0E01               	movlw	high __display_charger@header
 23936  00E89C  20F4               	addwfc	prodh,w,c
 23937  00E89E  6EDA               	movwf	fsr2h,c
 23938  00E8A0  518E               	movf	__display_charger@cntr& (0+255),w,b
 23939  00E8A2  0D01               	mullw	1
 23940  00E8A4  0E54               	movlw	low _display_content
 23941  00E8A6  24F3               	addwf	prodl,w,c
 23942  00E8A8  6EE1               	movwf	fsr1l,c
 23943  00E8AA  0E03               	movlw	high _display_content
 23944  00E8AC  20F4               	addwfc	prodh,w,c
 23945  00E8AE  6EE2               	movwf	fsr1h,c
 23946  00E8B0  CFDF FFE7          	movff	indf2,indf1
 23947                           
 23948                           ; BSR set to: 1
 23949  00E8B4  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 23950  00E8B6                     l2137:
 23951                           
 23952                           ; BSR set to: 1
 23953                           
 23954                           ; BSR set to: 1
 23955  00E8B6  518E               	movf	__display_charger@cntr& (0+255),w,b
 23956  00E8B8  0D01               	mullw	1
 23957  00E8BA  0E0F               	movlw	low __display_charger@header
 23958  00E8BC  24F3               	addwf	prodl,w,c
 23959  00E8BE  6ED9               	movwf	fsr2l,c
 23960  00E8C0  0E01               	movlw	high __display_charger@header
 23961  00E8C2  20F4               	addwfc	prodh,w,c
 23962  00E8C4  6EDA               	movwf	fsr2h,c
 23963  00E8C6  50DF               	movf	indf2,w,c
 23964  00E8C8  A4D8               	btfss	status,2,c
 23965  00E8CA  D7E2               	goto	l2138
 23966                           
 23967                           ; BSR set to: 1
 23968                           ;display.c: 423: cntr = 0;
 23969                           
 23970                           ; BSR set to: 1
 23971  00E8CC  0E00               	movlw	0
 23972  00E8CE  6F8E               	movwf	__display_charger@cntr& (0+255),b
 23973                           
 23974                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 23975  00E8D0  D014               	goto	l2143
 23976  00E8D2                     
 23977                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 23978  00E8D2  0101               	movlb	1	; () banked
 23979  00E8D4  518E               	movf	__display_charger@cntr& (0+255),w,b
 23980  00E8D6  0D01               	mullw	1
 23981  00E8D8  0E60               	movlw	low __display_charger@supply_on
 23982  00E8DA  24F3               	addwf	prodl,w,c
 23983  00E8DC  6ED9               	movwf	fsr2l,c
 23984  00E8DE  0E01               	movlw	high __display_charger@supply_on
 23985  00E8E0  20F4               	addwfc	prodh,w,c
 23986  00E8E2  6EDA               	movwf	fsr2h,c
 23987  00E8E4  518E               	movf	__display_charger@cntr& (0+255),w,b
 23988  00E8E6  0D01               	mullw	1
 23989  00E8E8  0E68               	movlw	low (_display_content+20)
 23990  00E8EA  24F3               	addwf	prodl,w,c
 23991  00E8EC  6EE1               	movwf	fsr1l,c
 23992  00E8EE  0E03               	movlw	high (_display_content+20)
 23993  00E8F0  20F4               	addwfc	prodh,w,c
 23994  00E8F2  6EE2               	movwf	fsr1h,c
 23995  00E8F4  CFDF FFE7          	movff	indf2,indf1
 23996                           
 23997                           ; BSR set to: 1
 23998  00E8F8  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 23999  00E8FA                     l2143:
 24000                           
 24001                           ; BSR set to: 1
 24002  00E8FA  0101               	movlb	1	; () banked
 24003  00E8FC  518E               	movf	__display_charger@cntr& (0+255),w,b
 24004  00E8FE  0D01               	mullw	1
 24005  00E900  0E60               	movlw	low __display_charger@supply_on
 24006  00E902  24F3               	addwf	prodl,w,c
 24007  00E904  6ED9               	movwf	fsr2l,c
 24008  00E906  0E01               	movlw	high __display_charger@supply_on
 24009  00E908  20F4               	addwfc	prodh,w,c
 24010  00E90A  6EDA               	movwf	fsr2h,c
 24011  00E90C  50DF               	movf	indf2,w,c
 24012  00E90E  B4D8               	btfsc	status,2,c
 24013  00E910  D020               	goto	u21190
 24014  00E912  D7DF               	goto	l2144
 24015  00E914                     
 24016                           ; BSR set to: 1
 24017                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 24018                           
 24019                           ; BSR set to: 1
 24020  00E914  518E               	movf	__display_charger@cntr& (0+255),w,b
 24021  00E916  0D01               	mullw	1
 24022  00E918  0E4D               	movlw	low __display_charger@supply_off
 24023  00E91A  24F3               	addwf	prodl,w,c
 24024  00E91C  6ED9               	movwf	fsr2l,c
 24025  00E91E  0E01               	movlw	high __display_charger@supply_off
 24026  00E920  20F4               	addwfc	prodh,w,c
 24027  00E922  6EDA               	movwf	fsr2h,c
 24028  00E924  518E               	movf	__display_charger@cntr& (0+255),w,b
 24029  00E926  0D01               	mullw	1
 24030  00E928  0E68               	movlw	low (_display_content+20)
 24031  00E92A  24F3               	addwf	prodl,w,c
 24032  00E92C  6EE1               	movwf	fsr1l,c
 24033  00E92E  0E03               	movlw	high (_display_content+20)
 24034  00E930  20F4               	addwfc	prodh,w,c
 24035  00E932  6EE2               	movwf	fsr1h,c
 24036  00E934  CFDF FFE7          	movff	indf2,indf1
 24037                           
 24038                           ; BSR set to: 1
 24039  00E938  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24040                           
 24041                           ; BSR set to: 1
 24042  00E93A  0101               	movlb	1	; () banked
 24043  00E93C  518E               	movf	__display_charger@cntr& (0+255),w,b
 24044  00E93E  0D01               	mullw	1
 24045  00E940  0E4D               	movlw	low __display_charger@supply_off
 24046  00E942  24F3               	addwf	prodl,w,c
 24047  00E944  6ED9               	movwf	fsr2l,c
 24048  00E946  0E01               	movlw	high __display_charger@supply_off
 24049  00E948  20F4               	addwfc	prodh,w,c
 24050  00E94A  6EDA               	movwf	fsr2h,c
 24051  00E94C  50DF               	movf	indf2,w,c
 24052  00E94E  A4D8               	btfss	status,2,c
 24053  00E950  D7E1               	goto	l2148
 24054  00E952                     u21190:
 24055                           
 24056                           ; BSR set to: 1
 24057                           ;display.c: 433: };display.c: 435: cntr = 0;
 24058                           
 24059                           ; BSR set to: 1
 24060                           
 24061                           ; BSR set to: 1
 24062  00E952  0E00               	movlw	0
 24063  00E954  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24064                           
 24065                           ;display.c: 436: switch(buck_get_mode())
 24066  00E956  D080               	goto	l2150
 24067  00E958                     
 24068                           ; BSR set to: 1
 24069                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 24070                           
 24071                           ; BSR set to: 1
 24072  00E958  518E               	movf	__display_charger@cntr& (0+255),w,b
 24073  00E95A  0D01               	mullw	1
 24074  00E95C  0E82               	movlw	low __display_charger@charger_off
 24075  00E95E  24F3               	addwf	prodl,w,c
 24076  00E960  6ED9               	movwf	fsr2l,c
 24077  00E962  0E01               	movlw	high __display_charger@charger_off
 24078  00E964  20F4               	addwfc	prodh,w,c
 24079  00E966  6EDA               	movwf	fsr2h,c
 24080  00E968  518E               	movf	__display_charger@cntr& (0+255),w,b
 24081  00E96A  0D01               	mullw	1
 24082  00E96C  0E7C               	movlw	low (_display_content+40)
 24083  00E96E  24F3               	addwf	prodl,w,c
 24084  00E970  6EE1               	movwf	fsr1l,c
 24085  00E972  0E03               	movlw	high (_display_content+40)
 24086  00E974  20F4               	addwfc	prodh,w,c
 24087  00E976  6EE2               	movwf	fsr1h,c
 24088  00E978  CFDF FFE7          	movff	indf2,indf1
 24089                           
 24090                           ; BSR set to: 1
 24091  00E97C  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24092  00E97E                     
 24093                           ; BSR set to: 1
 24094  00E97E  0101               	movlb	1	; () banked
 24095  00E980  518E               	movf	__display_charger@cntr& (0+255),w,b
 24096  00E982  0D01               	mullw	1
 24097  00E984  0E82               	movlw	low __display_charger@charger_off
 24098  00E986  24F3               	addwf	prodl,w,c
 24099  00E988  6ED9               	movwf	fsr2l,c
 24100  00E98A  0E01               	movlw	high __display_charger@charger_off
 24101  00E98C  20F4               	addwfc	prodh,w,c
 24102  00E98E  6EDA               	movwf	fsr2h,c
 24103  00E990  50DF               	movf	indf2,w,c
 24104  00E992  B4D8               	btfsc	status,2,c
 24105  00E994  D06F               	goto	l2155
 24106  00E996  D7E0               	goto	l2153
 24107  00E998                     
 24108                           ; BSR set to: 1
 24109                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 24110                           
 24111                           ; BSR set to: 1
 24112  00E998  518E               	movf	__display_charger@cntr& (0+255),w,b
 24113  00E99A  0D01               	mullw	1
 24114  00E99C  0E72               	movlw	low __display_charger@charger_startup
 24115  00E99E  24F3               	addwf	prodl,w,c
 24116  00E9A0  6ED9               	movwf	fsr2l,c
 24117  00E9A2  0E01               	movlw	high __display_charger@charger_startup
 24118  00E9A4  20F4               	addwfc	prodh,w,c
 24119  00E9A6  6EDA               	movwf	fsr2h,c
 24120  00E9A8  518E               	movf	__display_charger@cntr& (0+255),w,b
 24121  00E9AA  0D01               	mullw	1
 24122  00E9AC  0E7C               	movlw	low (_display_content+40)
 24123  00E9AE  24F3               	addwf	prodl,w,c
 24124  00E9B0  6EE1               	movwf	fsr1l,c
 24125  00E9B2  0E03               	movlw	high (_display_content+40)
 24126  00E9B4  20F4               	addwfc	prodh,w,c
 24127  00E9B6  6EE2               	movwf	fsr1h,c
 24128  00E9B8  CFDF FFE7          	movff	indf2,indf1
 24129                           
 24130                           ; BSR set to: 1
 24131  00E9BC  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24132  00E9BE                     
 24133                           ; BSR set to: 1
 24134  00E9BE  0101               	movlb	1	; () banked
 24135  00E9C0  518E               	movf	__display_charger@cntr& (0+255),w,b
 24136  00E9C2  0D01               	mullw	1
 24137  00E9C4  0E72               	movlw	low __display_charger@charger_startup
 24138  00E9C6  24F3               	addwf	prodl,w,c
 24139  00E9C8  6ED9               	movwf	fsr2l,c
 24140  00E9CA  0E01               	movlw	high __display_charger@charger_startup
 24141  00E9CC  20F4               	addwfc	prodh,w,c
 24142  00E9CE  6EDA               	movwf	fsr2h,c
 24143  00E9D0  50DF               	movf	indf2,w,c
 24144  00E9D2  B4D8               	btfsc	status,2,c
 24145  00E9D4  D04F               	goto	l2155
 24146  00E9D6  D7E0               	goto	l2158
 24147  00E9D8                     
 24148                           ; BSR set to: 1
 24149                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 24150                           
 24151                           ; BSR set to: 1
 24152  00E9D8  518E               	movf	__display_charger@cntr& (0+255),w,b
 24153  00E9DA  0D01               	mullw	1
 24154  00E9DC  0E24               	movlw	low __display_charger@charger_async
 24155  00E9DE  24F3               	addwf	prodl,w,c
 24156  00E9E0  6ED9               	movwf	fsr2l,c
 24157  00E9E2  0E01               	movlw	high __display_charger@charger_async
 24158  00E9E4  20F4               	addwfc	prodh,w,c
 24159  00E9E6  6EDA               	movwf	fsr2h,c
 24160  00E9E8  518E               	movf	__display_charger@cntr& (0+255),w,b
 24161  00E9EA  0D01               	mullw	1
 24162  00E9EC  0E7C               	movlw	low (_display_content+40)
 24163  00E9EE  24F3               	addwf	prodl,w,c
 24164  00E9F0  6EE1               	movwf	fsr1l,c
 24165  00E9F2  0E03               	movlw	high (_display_content+40)
 24166  00E9F4  20F4               	addwfc	prodh,w,c
 24167  00E9F6  6EE2               	movwf	fsr1h,c
 24168  00E9F8  CFDF FFE7          	movff	indf2,indf1
 24169                           
 24170                           ; BSR set to: 1
 24171  00E9FC  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24172  00E9FE                     
 24173                           ; BSR set to: 1
 24174  00E9FE  0101               	movlb	1	; () banked
 24175  00EA00  518E               	movf	__display_charger@cntr& (0+255),w,b
 24176  00EA02  0D01               	mullw	1
 24177  00EA04  0E24               	movlw	low __display_charger@charger_async
 24178  00EA06  24F3               	addwf	prodl,w,c
 24179  00EA08  6ED9               	movwf	fsr2l,c
 24180  00EA0A  0E01               	movlw	high __display_charger@charger_async
 24181  00EA0C  20F4               	addwfc	prodh,w,c
 24182  00EA0E  6EDA               	movwf	fsr2h,c
 24183  00EA10  50DF               	movf	indf2,w,c
 24184  00EA12  B4D8               	btfsc	status,2,c
 24185  00EA14  D02F               	goto	l2155
 24186  00EA16  D7E0               	goto	l2162
 24187  00EA18                     
 24188                           ; BSR set to: 1
 24189                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 24190                           
 24191                           ; BSR set to: 1
 24192  00EA18  518E               	movf	__display_charger@cntr& (0+255),w,b
 24193  00EA1A  0D01               	mullw	1
 24194  00EA1C  0E39               	movlw	low __display_charger@charger_sync
 24195  00EA1E  24F3               	addwf	prodl,w,c
 24196  00EA20  6ED9               	movwf	fsr2l,c
 24197  00EA22  0E01               	movlw	high __display_charger@charger_sync
 24198  00EA24  20F4               	addwfc	prodh,w,c
 24199  00EA26  6EDA               	movwf	fsr2h,c
 24200  00EA28  518E               	movf	__display_charger@cntr& (0+255),w,b
 24201  00EA2A  0D01               	mullw	1
 24202  00EA2C  0E7C               	movlw	low (_display_content+40)
 24203  00EA2E  24F3               	addwf	prodl,w,c
 24204  00EA30  6EE1               	movwf	fsr1l,c
 24205  00EA32  0E03               	movlw	high (_display_content+40)
 24206  00EA34  20F4               	addwfc	prodh,w,c
 24207  00EA36  6EE2               	movwf	fsr1h,c
 24208  00EA38  CFDF FFE7          	movff	indf2,indf1
 24209                           
 24210                           ; BSR set to: 1
 24211  00EA3C  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24212  00EA3E                     
 24213                           ; BSR set to: 1
 24214  00EA3E  0101               	movlb	1	; () banked
 24215  00EA40  518E               	movf	__display_charger@cntr& (0+255),w,b
 24216  00EA42  0D01               	mullw	1
 24217  00EA44  0E39               	movlw	low __display_charger@charger_sync
 24218  00EA46  24F3               	addwf	prodl,w,c
 24219  00EA48  6ED9               	movwf	fsr2l,c
 24220  00EA4A  0E01               	movlw	high __display_charger@charger_sync
 24221  00EA4C  20F4               	addwfc	prodh,w,c
 24222  00EA4E  6EDA               	movwf	fsr2h,c
 24223  00EA50  50DF               	movf	indf2,w,c
 24224  00EA52  B4D8               	btfsc	status,2,c
 24225  00EA54  D00F               	goto	l2155
 24226  00EA56  D7E0               	goto	l2166
 24227  00EA58                     l2150:
 24228                           
 24229                           ; BSR set to: 1
 24230                           
 24231                           ; BSR set to: 1
 24232  00EA58  EC79  F0AF         	call	_buck_get_mode	;wreg free
 24233                           
 24234                           ; Switch size 1, requested type "space"
 24235                           ; Number of cases is 4, Range of values is 0 to 3
 24236                           ; switch strategies available:
 24237                           ; Name         Instructions Cycles
 24238                           ; simple_byte           13     7 (average)
 24239                           ;	Chosen strategy is simple_byte
 24240  00EA5C  0A00               	xorlw	0	; case 0
 24241  00EA5E  B4D8               	btfsc	status,2,c
 24242  00EA60  D78E               	goto	l2152
 24243  00EA62  0A01               	xorlw	1	; case 1
 24244  00EA64  B4D8               	btfsc	status,2,c
 24245  00EA66  D7AB               	goto	l2157
 24246  00EA68  0A03               	xorlw	3	; case 2
 24247  00EA6A  B4D8               	btfsc	status,2,c
 24248  00EA6C  D7C8               	goto	l2161
 24249  00EA6E  0A01               	xorlw	1	; case 3
 24250  00EA70  B4D8               	btfsc	status,2,c
 24251  00EA72  D7E5               	goto	l2165
 24252  00EA74                     l2155:
 24253                           
 24254                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 24255  00EA74  EC74  F0AF         	call	_buck_get_dutycycle	;wreg free
 24256  00EA78  0100               	movlb	0	; () banked
 24257  00EA7A  6F90               	movwf	??__display_charger& (0+255),b
 24258  00EA7C  5190               	movf	??__display_charger& (0+255),w,b
 24259  00EA7E  6F78               	movwf	__display_itoa@value& (0+255),b
 24260  00EA80  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 24261  00EA82  0E00               	movlw	0
 24262  00EA84  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24263  00EA86  0E90               	movlw	low (_display_content+60)
 24264  00EA88  6F7B               	movwf	__display_itoa@text& (0+255),b
 24265  00EA8A  0E03               	movlw	high (_display_content+60)
 24266  00EA8C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24267  00EA8E  ECC3  F07D         	call	__display_itoa	;wreg free
 24268  00EA92  0012               	return		;funcret
 24269  00EA94                     __end_of__display_charger:
 24270                           	opt stack 0
 24271                           tblptru	equ	0xFF8
 24272                           tblptrh	equ	0xFF7
 24273                           tblptrl	equ	0xFF6
 24274                           tablat	equ	0xFF5
 24275                           prodh	equ	0xFF4
 24276                           prodl	equ	0xFF3
 24277                           intcon	equ	0xFF2
 24278                           intcon2	equ	0xFF1
 24279                           intcon3	equ	0xFF0
 24280                           postinc0	equ	0xFEE
 24281                           wreg	equ	0xFE8
 24282                           indf1	equ	0xFE7
 24283                           postinc1	equ	0xFE6
 24284                           postdec1	equ	0xFE5
 24285                           plusw1	equ	0xFE3
 24286                           fsr1h	equ	0xFE2
 24287                           fsr1l	equ	0xFE1
 24288                           indf2	equ	0xFDF
 24289                           postinc2	equ	0xFDE
 24290                           postdec2	equ	0xFDD
 24291                           plusw2	equ	0xFDB
 24292                           fsr2h	equ	0xFDA
 24293                           fsr2l	equ	0xFD9
 24294                           status	equ	0xFD8
 24295                           
 24296 ;; *************** function __display_itoa *****************
 24297 ;; Defined at:
 24298 ;;		line 41 in file "display.c"
 24299 ;; Parameters:    Size  Location     Type
 24300 ;;  value           2   24[BANK0 ] int 
 24301 ;;  decimals        1   26[BANK0 ] unsigned char 
 24302 ;;  text            2   27[BANK0 ] PTR unsigned char 
 24303 ;;		 -> display_content(80), 
 24304 ;; Auto vars:     Size  Location     Type
 24305 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 24306 ;;  pos             1   47[BANK0 ] unsigned char 
 24307 ;;  missing         1   46[BANK0 ] char 
 24308 ;;  len             1   45[BANK0 ] unsigned char 
 24309 ;; Return value:  Size  Location     Type
 24310 ;;                  1    wreg      void 
 24311 ;; Registers used:
 24312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24313 ;; Tracked objects:
 24314 ;;		On entry : 0/0
 24315 ;;		On exit  : 0/0
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24318 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24319 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24320 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24321 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24322 ;;Total ram usage:       24 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; Hardware stack levels required when called:   13
 24325 ;; This function calls:
 24326 ;;		_itoa
 24327 ;;		_strlen
 24328 ;; This function is called by:
 24329 ;;		__display_inout
 24330 ;;		__display_charger
 24331 ;;		__display_efficiency
 24332 ;;		__display_temperature
 24333 ;; This function uses a non-reentrant model
 24334 ;;
 24335                           
 24336                           	psect	text110
 24337  00FB86                     __ptext110:
 24338                           	opt stack 0
 24339  00FB86                     __display_itoa:
 24340                           	opt stack 15
 24341                           
 24342                           ;display.c: 43: uint8_t pos;;display.c: 44: uint8_t len;;display.c: 45: int8_t missing;;
      +                          display.c: 46: char tmp[10];;display.c: 47: itoa(tmp, value, 10);
 24343                           
 24344                           ;incstack = 0
 24345  00FB86  0E83               	movlw	low __display_itoa@tmp
 24346  00FB88  0100               	movlb	0	; () banked
 24347  00FB8A  6F70               	movwf	itoa@buf& (0+255),b
 24348  00FB8C  0E00               	movlw	high __display_itoa@tmp
 24349  00FB8E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 24350  00FB90  C078  F072         	movff	__display_itoa@value,itoa@val
 24351  00FB94  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 24352  00FB98  0E00               	movlw	0
 24353  00FB9A  6F75               	movwf	(itoa@base+1)& (0+255),b
 24354  00FB9C  0E0A               	movlw	10
 24355  00FB9E  6F74               	movwf	itoa@base& (0+255),b
 24356  00FBA0  ECC7  F0A8         	call	_itoa	;wreg free
 24357                           
 24358                           ;display.c: 48: len = strlen(tmp);
 24359  00FBA4  0E83               	movlw	low __display_itoa@tmp
 24360  00FBA6  0100               	movlb	0	; () banked
 24361  00FBA8  6F60               	movwf	strlen@s& (0+255),b
 24362  00FBAA  0E00               	movlw	high __display_itoa@tmp
 24363  00FBAC  6F61               	movwf	(strlen@s+1)& (0+255),b
 24364  00FBAE  EC8D  F0A9         	call	_strlen	;wreg free
 24365  00FBB2  0100               	movlb	0	; () banked
 24366  00FBB4  5160               	movf	?_strlen& (0+255),w,b
 24367  00FBB6  6F8D               	movwf	__display_itoa@len& (0+255),b
 24368                           
 24369                           ; BSR set to: 0
 24370                           ;display.c: 50: if(value<0)
 24371  00FBB8  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 24372  00FBBA  D054               	goto	l1913
 24373                           
 24374                           ; BSR set to: 0
 24375                           ;display.c: 51: {;display.c: 52: missing = decimals + 2 - len;
 24376  00FBBC  518D               	movf	__display_itoa@len& (0+255),w,b
 24377  00FBBE  0800               	sublw	0
 24378  00FBC0  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24379  00FBC2  0F02               	addlw	2
 24380  00FBC4  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24381                           
 24382                           ;display.c: 53: if(missing>0)
 24383  00FBC6  518E               	movf	__display_itoa@missing& (0+255),w,b
 24384  00FBC8  0A80               	xorlw	128
 24385  00FBCA  0F7F               	addlw	-129
 24386  00FBCC  A0D8               	btfss	status,0,c
 24387  00FBCE  D090               	goto	l1920
 24388                           
 24389                           ; BSR set to: 0
 24390                           ;display.c: 54: {;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 24391  00FBD0  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24392  00FBD4                     l19813:
 24393                           
 24394                           ; BSR set to: 0
 24395  00FBD4  298F               	incf	__display_itoa@pos& (0+255),w,b
 24396  00FBD6  B4D8               	btfsc	status,2,c
 24397  00FBD8  D042               	goto	u18640
 24398                           
 24399                           ; BSR set to: 0
 24400                           ;display.c: 56: {;display.c: 57: if(pos>=missing)
 24401                           
 24402                           ; BSR set to: 0
 24403                           
 24404                           ; BSR set to: 0
 24405  00FBDA  518F               	movf	__display_itoa@pos& (0+255),w,b
 24406  00FBDC  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24407  00FBDE  D004               	goto	u18630
 24408  00FBE0  0AFF               	xorlw	255
 24409  00FBE2  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24410  00FBE4  B0D8               	btfsc	status,0,c
 24411  00FBE6  D02A               	goto	l1917
 24412  00FBE8                     u18630:
 24413                           
 24414                           ; BSR set to: 0
 24415                           ;display.c: 58: {;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 24416  00FBE8  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24417  00FBEC  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24418  00FBEE  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24419  00FBF0  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24420  00FBF2  1F7D               	comf	??__display_itoa& (0+255),f,b
 24421  00FBF4  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24422  00FBF6  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24423  00FBF8  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24424  00FBFA  518F               	movf	__display_itoa@pos& (0+255),w,b
 24425  00FBFC  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24426  00FBFE  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24427  00FC00  517D               	movf	??__display_itoa& (0+255),w,b
 24428  00FC02  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24429  00FC04  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24430  00FC06  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24431  00FC08  0E01               	movlw	1
 24432  00FC0A  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24433  00FC0C  0E00               	movlw	0
 24434  00FC0E  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24435  00FC10  0E83               	movlw	low __display_itoa@tmp
 24436  00FC12  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24437  00FC14  6ED9               	movwf	fsr2l,c
 24438  00FC16  0E00               	movlw	high __display_itoa@tmp
 24439  00FC18  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24440  00FC1A  6EDA               	movwf	fsr2h,c
 24441  00FC1C  518F               	movf	__display_itoa@pos& (0+255),w,b
 24442  00FC1E  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 24443  00FC20  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 24444  00FC22  0E01               	movlw	1
 24445  00FC24  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 24446  00FC26  0E00               	movlw	0
 24447  00FC28  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 24448  00FC2A  0E83               	movlw	low __display_itoa@tmp
 24449  00FC2C  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 24450  00FC2E  6EE1               	movwf	fsr1l,c
 24451  00FC30  0E00               	movlw	high __display_itoa@tmp
 24452  00FC32  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 24453  00FC34  6EE2               	movwf	fsr1h,c
 24454  00FC36  CFDF FFE7          	movff	indf2,indf1
 24455                           
 24456                           ;display.c: 60: }
 24457  00FC3A  D00F               	goto	l1918
 24458  00FC3C                     l1917:
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;display.c: 61: else;display.c: 62: {;display.c: 63: tmp[pos+1] = '0';
 24462                           
 24463                           ; BSR set to: 0
 24464  00FC3C  518F               	movf	__display_itoa@pos& (0+255),w,b
 24465  00FC3E  6F7D               	movwf	??__display_itoa& (0+255),b
 24466  00FC40  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24467  00FC42  0E01               	movlw	1
 24468  00FC44  277D               	addwf	??__display_itoa& (0+255),f,b
 24469  00FC46  0E00               	movlw	0
 24470  00FC48  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24471  00FC4A  0E83               	movlw	low __display_itoa@tmp
 24472  00FC4C  257D               	addwf	??__display_itoa& (0+255),w,b
 24473  00FC4E  6ED9               	movwf	fsr2l,c
 24474  00FC50  0E00               	movlw	high __display_itoa@tmp
 24475  00FC52  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 24476  00FC54  6EDA               	movwf	fsr2h,c
 24477  00FC56  0E30               	movlw	48
 24478  00FC58  6EDF               	movwf	indf2,c
 24479  00FC5A                     l1918:
 24480                           
 24481                           ; BSR set to: 0
 24482                           
 24483                           ; BSR set to: 0
 24484  00FC5A  078F               	decf	__display_itoa@pos& (0+255),f,b
 24485  00FC5C  D7BB               	goto	l19813
 24486  00FC5E                     u18640:
 24487                           
 24488                           ; BSR set to: 0
 24489                           ;display.c: 64: };display.c: 65: };display.c: 66: len = decimals + 2;
 24490                           
 24491                           ; BSR set to: 0
 24492  00FC5E  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24493  00FC60  0F02               	addlw	2
 24494  00FC62  D045               	goto	L11
 24495  00FC64                     l1913:
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;display.c: 69: else;display.c: 70: {;display.c: 71: missing = decimals + 1 - len;
 24499                           
 24500                           ; BSR set to: 0
 24501  00FC64  518D               	movf	__display_itoa@len& (0+255),w,b
 24502  00FC66  0800               	sublw	0
 24503  00FC68  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24504  00FC6A  6F7D               	movwf	??__display_itoa& (0+255),b
 24505  00FC6C  297D               	incf	??__display_itoa& (0+255),w,b
 24506  00FC6E  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24507                           
 24508                           ;display.c: 72: if(missing>0)
 24509  00FC70  518E               	movf	__display_itoa@missing& (0+255),w,b
 24510  00FC72  0A80               	xorlw	128
 24511  00FC74  0F7F               	addlw	-129
 24512  00FC76  A0D8               	btfss	status,0,c
 24513  00FC78  D03B               	goto	l1920
 24514                           
 24515                           ; BSR set to: 0
 24516                           ;display.c: 73: {;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 24517  00FC7A  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24518  00FC7E                     l19833:
 24519                           
 24520                           ; BSR set to: 0
 24521  00FC7E  298F               	incf	__display_itoa@pos& (0+255),w,b
 24522  00FC80  B4D8               	btfsc	status,2,c
 24523  00FC82  D034               	goto	u18680
 24524                           
 24525                           ; BSR set to: 0
 24526                           ;display.c: 75: {;display.c: 76: if(pos>=missing)
 24527                           
 24528                           ; BSR set to: 0
 24529                           
 24530                           ; BSR set to: 0
 24531  00FC84  518F               	movf	__display_itoa@pos& (0+255),w,b
 24532  00FC86  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24533  00FC88  D004               	goto	u18670
 24534  00FC8A  0AFF               	xorlw	255
 24535  00FC8C  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24536  00FC8E  B0D8               	btfsc	status,0,c
 24537  00FC90  D021               	goto	l1923
 24538  00FC92                     u18670:
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;display.c: 77: {;display.c: 78: tmp[pos] = tmp[pos-missing];
 24542  00FC92  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24543  00FC96  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24544  00FC98  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24545  00FC9A  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24546  00FC9C  1F7D               	comf	??__display_itoa& (0+255),f,b
 24547  00FC9E  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24548  00FCA0  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24549  00FCA2  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24550  00FCA4  518F               	movf	__display_itoa@pos& (0+255),w,b
 24551  00FCA6  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24552  00FCA8  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24553  00FCAA  517D               	movf	??__display_itoa& (0+255),w,b
 24554  00FCAC  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24555  00FCAE  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24556  00FCB0  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24557  00FCB2  0E83               	movlw	low __display_itoa@tmp
 24558  00FCB4  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24559  00FCB6  6ED9               	movwf	fsr2l,c
 24560  00FCB8  0E00               	movlw	high __display_itoa@tmp
 24561  00FCBA  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24562  00FCBC  6EDA               	movwf	fsr2h,c
 24563  00FCBE  518F               	movf	__display_itoa@pos& (0+255),w,b
 24564  00FCC0  0D01               	mullw	1
 24565  00FCC2  0E83               	movlw	low __display_itoa@tmp
 24566  00FCC4  24F3               	addwf	prodl,w,c
 24567  00FCC6  6EE1               	movwf	fsr1l,c
 24568  00FCC8  0E00               	movlw	high __display_itoa@tmp
 24569  00FCCA  20F4               	addwfc	prodh,w,c
 24570  00FCCC  6EE2               	movwf	fsr1h,c
 24571  00FCCE  CFDF FFE7          	movff	indf2,indf1
 24572                           
 24573                           ;display.c: 79: }
 24574  00FCD2  D00A               	goto	l1924
 24575  00FCD4                     l1923:
 24576                           
 24577                           ; BSR set to: 0
 24578                           ;display.c: 80: else;display.c: 81: {;display.c: 82: tmp[pos] = '0';
 24579                           
 24580                           ; BSR set to: 0
 24581  00FCD4  518F               	movf	__display_itoa@pos& (0+255),w,b
 24582  00FCD6  0D01               	mullw	1
 24583  00FCD8  0E83               	movlw	low __display_itoa@tmp
 24584  00FCDA  24F3               	addwf	prodl,w,c
 24585  00FCDC  6ED9               	movwf	fsr2l,c
 24586  00FCDE  0E00               	movlw	high __display_itoa@tmp
 24587  00FCE0  20F4               	addwfc	prodh,w,c
 24588  00FCE2  6EDA               	movwf	fsr2h,c
 24589  00FCE4  0E30               	movlw	48
 24590  00FCE6  6EDF               	movwf	indf2,c
 24591  00FCE8                     l1924:
 24592                           
 24593                           ; BSR set to: 0
 24594                           
 24595                           ; BSR set to: 0
 24596  00FCE8  078F               	decf	__display_itoa@pos& (0+255),f,b
 24597  00FCEA  D7C9               	goto	l19833
 24598  00FCEC                     u18680:
 24599                           
 24600                           ; BSR set to: 0
 24601                           ;display.c: 83: };display.c: 84: };display.c: 85: len = decimals + 1;
 24602                           
 24603                           ; BSR set to: 0
 24604  00FCEC  297A               	incf	__display_itoa@decimals& (0+255),w,b
 24605  00FCEE                     L11:
 24606  00FCEE  6F8D               	movwf	__display_itoa@len& (0+255),b
 24607  00FCF0                     l1920:
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;display.c: 86: };display.c: 87: };display.c: 89: decimals = len - decimals - 1;
 24611                           
 24612                           ; BSR set to: 0
 24613  00FCF0  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24614  00FCF2  0800               	sublw	0
 24615  00FCF4  258D               	addwf	__display_itoa@len& (0+255),w,b
 24616  00FCF6  6F7D               	movwf	??__display_itoa& (0+255),b
 24617  00FCF8  057D               	decf	??__display_itoa& (0+255),w,b
 24618  00FCFA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;display.c: 91: for(pos=0;pos<len;++pos)
 24622  00FCFC  0E00               	movlw	0
 24623  00FCFE  6F8F               	movwf	__display_itoa@pos& (0+255),b
 24624  00FD00  D023               	goto	l1925
 24625  00FD02                     
 24626                           ; BSR set to: 0
 24627                           ;display.c: 92: {;display.c: 93: text[pos] = tmp[pos];
 24628                           
 24629                           ; BSR set to: 0
 24630  00FD02  518F               	movf	__display_itoa@pos& (0+255),w,b
 24631  00FD04  0D01               	mullw	1
 24632  00FD06  0E83               	movlw	low __display_itoa@tmp
 24633  00FD08  24F3               	addwf	prodl,w,c
 24634  00FD0A  6ED9               	movwf	fsr2l,c
 24635  00FD0C  0E00               	movlw	high __display_itoa@tmp
 24636  00FD0E  20F4               	addwfc	prodh,w,c
 24637  00FD10  6EDA               	movwf	fsr2h,c
 24638  00FD12  518F               	movf	__display_itoa@pos& (0+255),w,b
 24639  00FD14  0D01               	mullw	1
 24640  00FD16  50F3               	movf	prodl,w,c
 24641  00FD18  257B               	addwf	__display_itoa@text& (0+255),w,b
 24642  00FD1A  6EE1               	movwf	fsr1l,c
 24643  00FD1C  50F4               	movf	prodh,w,c
 24644  00FD1E  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24645  00FD20  6EE2               	movwf	fsr1h,c
 24646  00FD22  CFDF FFE7          	movff	indf2,indf1
 24647                           
 24648                           ; BSR set to: 0
 24649                           ;display.c: 94: if(pos==decimals)
 24650  00FD26  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24651  00FD28  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 24652  00FD2A  A4D8               	btfss	status,2,c
 24653  00FD2C  D00C               	goto	l1927
 24654                           
 24655                           ; BSR set to: 0
 24656                           ;display.c: 95: {;display.c: 97: ++pos;
 24657  00FD2E  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24658                           
 24659                           ; BSR set to: 0
 24660                           ;display.c: 98: text[pos] = '.';
 24661  00FD30  518F               	movf	__display_itoa@pos& (0+255),w,b
 24662  00FD32  0D01               	mullw	1
 24663  00FD34  50F3               	movf	prodl,w,c
 24664  00FD36  257B               	addwf	__display_itoa@text& (0+255),w,b
 24665  00FD38  6ED9               	movwf	fsr2l,c
 24666  00FD3A  50F4               	movf	prodh,w,c
 24667  00FD3C  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24668  00FD3E  6EDA               	movwf	fsr2h,c
 24669  00FD40  0E2E               	movlw	46
 24670  00FD42  6EDF               	movwf	indf2,c
 24671                           
 24672                           ;display.c: 99: break;
 24673  00FD44  D01E               	goto	l1929
 24674  00FD46                     l1927:
 24675                           
 24676                           ; BSR set to: 0
 24677                           
 24678                           ; BSR set to: 0
 24679  00FD46  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24680  00FD48                     l1925:
 24681                           
 24682                           ; BSR set to: 0
 24683                           
 24684                           ; BSR set to: 0
 24685  00FD48  518D               	movf	__display_itoa@len& (0+255),w,b
 24686  00FD4A  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 24687  00FD4C  B0D8               	btfsc	status,0,c
 24688  00FD4E  D019               	goto	l1929
 24689  00FD50  D7D8               	goto	l1926
 24690  00FD52                     
 24691                           ; BSR set to: 0
 24692                           ;display.c: 103: {;display.c: 104: text[pos+1] = tmp[pos];
 24693                           
 24694                           ; BSR set to: 0
 24695  00FD52  518F               	movf	__display_itoa@pos& (0+255),w,b
 24696  00FD54  0D01               	mullw	1
 24697  00FD56  0E83               	movlw	low __display_itoa@tmp
 24698  00FD58  24F3               	addwf	prodl,w,c
 24699  00FD5A  6ED9               	movwf	fsr2l,c
 24700  00FD5C  0E00               	movlw	high __display_itoa@tmp
 24701  00FD5E  20F4               	addwfc	prodh,w,c
 24702  00FD60  6EDA               	movwf	fsr2h,c
 24703  00FD62  518F               	movf	__display_itoa@pos& (0+255),w,b
 24704  00FD64  6F7D               	movwf	??__display_itoa& (0+255),b
 24705  00FD66  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24706  00FD68  0E01               	movlw	1
 24707  00FD6A  277D               	addwf	??__display_itoa& (0+255),f,b
 24708  00FD6C  0E00               	movlw	0
 24709  00FD6E  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24710  00FD70  517D               	movf	??__display_itoa& (0+255),w,b
 24711  00FD72  257B               	addwf	__display_itoa@text& (0+255),w,b
 24712  00FD74  6EE1               	movwf	fsr1l,c
 24713  00FD76  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24714  00FD78  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24715  00FD7A  6EE2               	movwf	fsr1h,c
 24716  00FD7C  CFDF FFE7          	movff	indf2,indf1
 24717                           
 24718                           ; BSR set to: 0
 24719  00FD80  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24720  00FD82                     l1929:
 24721                           
 24722                           ; BSR set to: 0
 24723                           
 24724                           ; BSR set to: 0
 24725  00FD82  518D               	movf	__display_itoa@len& (0+255),w,b
 24726  00FD84  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 24727  00FD86  B0D8               	btfsc	status,0,c
 24728  00FD88  0012               	return	
 24729  00FD8A  D7E3               	goto	l1930
 24730  00FD8C                     __end_of__display_itoa:
 24731                           	opt stack 0
 24732                           tblptru	equ	0xFF8
 24733                           tblptrh	equ	0xFF7
 24734                           tblptrl	equ	0xFF6
 24735                           tablat	equ	0xFF5
 24736                           prodh	equ	0xFF4
 24737                           prodl	equ	0xFF3
 24738                           intcon	equ	0xFF2
 24739                           intcon2	equ	0xFF1
 24740                           intcon3	equ	0xFF0
 24741                           postinc0	equ	0xFEE
 24742                           wreg	equ	0xFE8
 24743                           indf1	equ	0xFE7
 24744                           postinc1	equ	0xFE6
 24745                           postdec1	equ	0xFE5
 24746                           plusw1	equ	0xFE3
 24747                           fsr1h	equ	0xFE2
 24748                           fsr1l	equ	0xFE1
 24749                           indf2	equ	0xFDF
 24750                           postinc2	equ	0xFDE
 24751                           postdec2	equ	0xFDD
 24752                           plusw2	equ	0xFDB
 24753                           fsr2h	equ	0xFDA
 24754                           fsr2l	equ	0xFD9
 24755                           status	equ	0xFD8
 24756                           
 24757 ;; *************** function _strlen *****************
 24758 ;; Defined at:
 24759 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 24760 ;; Parameters:    Size  Location     Type
 24761 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 24762 ;;		 -> _display_itoa@tmp(10), 
 24763 ;; Auto vars:     Size  Location     Type
 24764 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 24765 ;;		 -> _display_itoa@tmp(10), 
 24766 ;; Return value:  Size  Location     Type
 24767 ;;                  2    0[BANK0 ] unsigned int 
 24768 ;; Registers used:
 24769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24770 ;; Tracked objects:
 24771 ;;		On entry : 0/0
 24772 ;;		On exit  : 0/0
 24773 ;;		Unchanged: 0/0
 24774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24776 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24778 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24779 ;;Total ram usage:        6 bytes
 24780 ;; Hardware stack levels used:    1
 24781 ;; Hardware stack levels required when called:   10
 24782 ;; This function calls:
 24783 ;;		Nothing
 24784 ;; This function is called by:
 24785 ;;		__display_itoa
 24786 ;; This function uses a non-reentrant model
 24787 ;;
 24788                           
 24789                           	psect	text111
 24790  01531A                     __ptext111:
 24791                           	opt stack 0
 24792  01531A                     _strlen:
 24793                           	opt stack 17
 24794                           
 24795                           ; BSR set to: 0
 24796                           ;incstack = 0
 24797  01531A  C060  F064         	movff	strlen@s,strlen@cp
 24798  01531E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 24799  015322  D003               	goto	l4007
 24800  015324  0100               	movlb	0	; () banked
 24801  015326  4B64               	infsnz	strlen@cp& (0+255),f,b
 24802  015328  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 24803  01532A                     l4007:
 24804                           
 24805                           ; BSR set to: 0
 24806  01532A  C064  FFD9         	movff	strlen@cp,fsr2l
 24807  01532E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 24808  015332  50DF               	movf	indf2,w,c
 24809  015334  A4D8               	btfss	status,2,c
 24810  015336  D7F6               	goto	l4008
 24811  015338  C060  F062         	movff	strlen@s,??_strlen
 24812  01533C  C061  F063         	movff	strlen@s+1,??_strlen+1
 24813  015340  0100               	movlb	0	; () banked
 24814  015342  1F62               	comf	??_strlen& (0+255),f,b
 24815  015344  1F63               	comf	(??_strlen+1)& (0+255),f,b
 24816  015346  4B62               	infsnz	??_strlen& (0+255),f,b
 24817  015348  2B63               	incf	(??_strlen+1)& (0+255),f,b
 24818  01534A  5164               	movf	strlen@cp& (0+255),w,b
 24819  01534C  2562               	addwf	??_strlen& (0+255),w,b
 24820  01534E  6F60               	movwf	?_strlen& (0+255),b
 24821  015350  5165               	movf	(strlen@cp+1)& (0+255),w,b
 24822  015352  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 24823  015354  6F61               	movwf	(?_strlen+1)& (0+255),b
 24824  015356  0012               	return	
 24825  015358                     __end_of_strlen:
 24826                           	opt stack 0
 24827                           tblptru	equ	0xFF8
 24828                           tblptrh	equ	0xFF7
 24829                           tblptrl	equ	0xFF6
 24830                           tablat	equ	0xFF5
 24831                           prodh	equ	0xFF4
 24832                           prodl	equ	0xFF3
 24833                           intcon	equ	0xFF2
 24834                           intcon2	equ	0xFF1
 24835                           intcon3	equ	0xFF0
 24836                           postinc0	equ	0xFEE
 24837                           wreg	equ	0xFE8
 24838                           indf1	equ	0xFE7
 24839                           postinc1	equ	0xFE6
 24840                           postdec1	equ	0xFE5
 24841                           plusw1	equ	0xFE3
 24842                           fsr1h	equ	0xFE2
 24843                           fsr1l	equ	0xFE1
 24844                           indf2	equ	0xFDF
 24845                           postinc2	equ	0xFDE
 24846                           postdec2	equ	0xFDD
 24847                           plusw2	equ	0xFDB
 24848                           fsr2h	equ	0xFDA
 24849                           fsr2l	equ	0xFD9
 24850                           status	equ	0xFD8
 24851                           
 24852 ;; *************** function _itoa *****************
 24853 ;; Defined at:
 24854 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 24855 ;; Parameters:    Size  Location     Type
 24856 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 24857 ;;		 -> _display_itoa@tmp(10), 
 24858 ;;  val             2   18[BANK0 ] int 
 24859 ;;  base            2   20[BANK0 ] int 
 24860 ;; Auto vars:     Size  Location     Type
 24861 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 24862 ;;		 -> _display_itoa@tmp(10), 
 24863 ;; Return value:  Size  Location     Type
 24864 ;;                  2   16[BANK0 ] PTR unsigned char 
 24865 ;; Registers used:
 24866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24867 ;; Tracked objects:
 24868 ;;		On entry : 0/0
 24869 ;;		On exit  : 0/0
 24870 ;;		Unchanged: 0/0
 24871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24872 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24873 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24875 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24876 ;;Total ram usage:        8 bytes
 24877 ;; Hardware stack levels used:    1
 24878 ;; Hardware stack levels required when called:   12
 24879 ;; This function calls:
 24880 ;;		_utoa
 24881 ;; This function is called by:
 24882 ;;		__display_itoa
 24883 ;; This function uses a non-reentrant model
 24884 ;;
 24885                           
 24886                           	psect	text112
 24887  01518E                     __ptext112:
 24888                           	opt stack 0
 24889  01518E                     _itoa:
 24890                           	opt stack 15
 24891                           
 24892                           ; BSR set to: 0
 24893                           ;incstack = 0
 24894  01518E  C070  F076         	movff	itoa@buf,itoa@cp
 24895  015192  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 24896  015196  0100               	movlb	0	; () banked
 24897  015198  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 24898  01519A  D00C               	goto	l3983
 24899                           
 24900                           ; BSR set to: 0
 24901  01519C  C070  FFD9         	movff	itoa@buf,fsr2l
 24902  0151A0  C071  FFDA         	movff	itoa@buf+1,fsr2h
 24903  0151A4  0E2D               	movlw	45
 24904  0151A6  6EDF               	movwf	indf2,c
 24905                           
 24906                           ; BSR set to: 0
 24907  0151A8  4B70               	infsnz	itoa@buf& (0+255),f,b
 24908  0151AA  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 24909                           
 24910                           ; BSR set to: 0
 24911  0151AC  6D72               	negf	itoa@val& (0+255),b
 24912  0151AE  1F73               	comf	(itoa@val+1)& (0+255),f,b
 24913  0151B0  B0D8               	btfsc	status,0,c
 24914  0151B2  2B73               	incf	(itoa@val+1)& (0+255),f,b
 24915  0151B4                     l3983:
 24916                           
 24917                           ; BSR set to: 0
 24918                           
 24919                           ; BSR set to: 0
 24920  0151B4  C070  F067         	movff	itoa@buf,utoa@buf
 24921  0151B8  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 24922  0151BC  C072  F069         	movff	itoa@val,utoa@val
 24923  0151C0  C073  F06A         	movff	itoa@val+1,utoa@val+1
 24924  0151C4  C074  F06B         	movff	itoa@base,utoa@base
 24925  0151C8  C075  F06C         	movff	itoa@base+1,utoa@base+1
 24926  0151CC  ECC2  F098         	call	_utoa	;wreg free
 24927  0151D0  0012               	return	
 24928  0151D2                     __end_of_itoa:
 24929                           	opt stack 0
 24930                           tblptru	equ	0xFF8
 24931                           tblptrh	equ	0xFF7
 24932                           tblptrl	equ	0xFF6
 24933                           tablat	equ	0xFF5
 24934                           prodh	equ	0xFF4
 24935                           prodl	equ	0xFF3
 24936                           intcon	equ	0xFF2
 24937                           intcon2	equ	0xFF1
 24938                           intcon3	equ	0xFF0
 24939                           postinc0	equ	0xFEE
 24940                           wreg	equ	0xFE8
 24941                           indf1	equ	0xFE7
 24942                           postinc1	equ	0xFE6
 24943                           postdec1	equ	0xFE5
 24944                           plusw1	equ	0xFE3
 24945                           fsr1h	equ	0xFE2
 24946                           fsr1l	equ	0xFE1
 24947                           indf2	equ	0xFDF
 24948                           postinc2	equ	0xFDE
 24949                           postdec2	equ	0xFDD
 24950                           plusw2	equ	0xFDB
 24951                           fsr2h	equ	0xFDA
 24952                           fsr2l	equ	0xFD9
 24953                           status	equ	0xFD8
 24954                           
 24955 ;; *************** function _utoa *****************
 24956 ;; Defined at:
 24957 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 24958 ;; Parameters:    Size  Location     Type
 24959 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 24960 ;;		 -> _display_itoa@tmp(10), 
 24961 ;;  val             2    9[BANK0 ] unsigned int 
 24962 ;;  base            2   11[BANK0 ] int 
 24963 ;; Auto vars:     Size  Location     Type
 24964 ;;  v               2   13[BANK0 ] unsigned int 
 24965 ;;  c               1   15[BANK0 ] unsigned char 
 24966 ;; Return value:  Size  Location     Type
 24967 ;;                  2    7[BANK0 ] PTR unsigned char 
 24968 ;; Registers used:
 24969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24970 ;; Tracked objects:
 24971 ;;		On entry : 0/0
 24972 ;;		On exit  : 0/0
 24973 ;;		Unchanged: 0/0
 24974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24975 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24976 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24978 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24979 ;;Total ram usage:        9 bytes
 24980 ;; Hardware stack levels used:    1
 24981 ;; Hardware stack levels required when called:   11
 24982 ;; This function calls:
 24983 ;;		___lwdiv
 24984 ;;		___lwmod
 24985 ;; This function is called by:
 24986 ;;		_itoa
 24987 ;; This function uses a non-reentrant model
 24988 ;;
 24989                           
 24990                           	psect	text113
 24991  013184                     __ptext113:
 24992                           	opt stack 0
 24993  013184                     _utoa:
 24994                           	opt stack 15
 24995                           
 24996                           ;incstack = 0
 24997  013184  C069  F06D         	movff	utoa@val,utoa@v
 24998  013188  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 24999  01318C  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 25000  013190  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 25001  013194  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25002  013198  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25003  01319C  EC30  F0A6         	call	___lwdiv	;wreg free
 25004  0131A0  C060  F06D         	movff	?___lwdiv,utoa@v
 25005  0131A4  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 25006  0131A8  0100               	movlb	0	; () banked
 25007  0131AA  4B67               	infsnz	utoa@buf& (0+255),f,b
 25008  0131AC  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25009                           
 25010                           ; BSR set to: 0
 25011  0131AE  516D               	movf	utoa@v& (0+255),w,b
 25012  0131B0  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 25013  0131B2  A4D8               	btfss	status,2,c
 25014  0131B4  D7EB               	goto	l3987
 25015                           
 25016                           ; BSR set to: 0
 25017                           
 25018                           ; BSR set to: 0
 25019  0131B6  C067  FFD9         	movff	utoa@buf,fsr2l
 25020  0131BA  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25021  0131BE  0E00               	movlw	0
 25022  0131C0  6EDF               	movwf	indf2,c
 25023                           
 25024                           ; BSR set to: 0
 25025  0131C2  0767               	decf	utoa@buf& (0+255),f,b
 25026  0131C4  A0D8               	btfss	status,0,c
 25027  0131C6  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25028  0131C8                     
 25029                           ; BSR set to: 0
 25030                           
 25031                           ; BSR set to: 0
 25032  0131C8  C069  F060         	movff	utoa@val,___lwmod@dividend
 25033  0131CC  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 25034  0131D0  C06B  F062         	movff	utoa@base,___lwmod@divisor
 25035  0131D4  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 25036  0131D8  ECE9  F0A8         	call	___lwmod	;wreg free
 25037  0131DC  0100               	movlb	0	; () banked
 25038  0131DE  5160               	movf	?___lwmod& (0+255),w,b
 25039  0131E0  6F6F               	movwf	utoa@c& (0+255),b
 25040                           
 25041                           ; BSR set to: 0
 25042  0131E2  C069  F060         	movff	utoa@val,___lwdiv@dividend
 25043  0131E6  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 25044  0131EA  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25045  0131EE  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25046  0131F2  EC30  F0A6         	call	___lwdiv	;wreg free
 25047  0131F6  C060  F069         	movff	?___lwdiv,utoa@val
 25048  0131FA  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 25049  0131FE  0E09               	movlw	9
 25050  013200  0100               	movlb	0	; () banked
 25051  013202  656F               	cpfsgt	utoa@c& (0+255),b
 25052  013204  D002               	goto	l3990
 25053                           
 25054                           ; BSR set to: 0
 25055  013206  0E07               	movlw	7
 25056  013208  276F               	addwf	utoa@c& (0+255),f,b
 25057  01320A                     l3990:
 25058                           
 25059                           ; BSR set to: 0
 25060  01320A  0E30               	movlw	48
 25061  01320C  276F               	addwf	utoa@c& (0+255),f,b
 25062                           
 25063                           ; BSR set to: 0
 25064  01320E  C067  FFD9         	movff	utoa@buf,fsr2l
 25065  013212  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25066  013216  C06F  FFDF         	movff	utoa@c,indf2
 25067                           
 25068                           ; BSR set to: 0
 25069  01321A  0767               	decf	utoa@buf& (0+255),f,b
 25070  01321C  A0D8               	btfss	status,0,c
 25071  01321E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25072                           
 25073                           ; BSR set to: 0
 25074  013220  5169               	movf	utoa@val& (0+255),w,b
 25075  013222  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 25076  013224  A4D8               	btfss	status,2,c
 25077  013226  D7D0               	goto	l3989
 25078                           
 25079                           ; BSR set to: 0
 25080                           ;	Return value of _utoa is never used
 25081                           
 25082                           ; BSR set to: 0
 25083  013228  4B67               	infsnz	utoa@buf& (0+255),f,b
 25084  01322A  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25085  01322C  0012               	return	
 25086  01322E                     __end_of_utoa:
 25087                           	opt stack 0
 25088                           tblptru	equ	0xFF8
 25089                           tblptrh	equ	0xFF7
 25090                           tblptrl	equ	0xFF6
 25091                           tablat	equ	0xFF5
 25092                           prodh	equ	0xFF4
 25093                           prodl	equ	0xFF3
 25094                           intcon	equ	0xFF2
 25095                           intcon2	equ	0xFF1
 25096                           intcon3	equ	0xFF0
 25097                           postinc0	equ	0xFEE
 25098                           wreg	equ	0xFE8
 25099                           indf1	equ	0xFE7
 25100                           postinc1	equ	0xFE6
 25101                           postdec1	equ	0xFE5
 25102                           plusw1	equ	0xFE3
 25103                           fsr1h	equ	0xFE2
 25104                           fsr1l	equ	0xFE1
 25105                           indf2	equ	0xFDF
 25106                           postinc2	equ	0xFDE
 25107                           postdec2	equ	0xFDD
 25108                           plusw2	equ	0xFDB
 25109                           fsr2h	equ	0xFDA
 25110                           fsr2l	equ	0xFD9
 25111                           status	equ	0xFD8
 25112                           
 25113 ;; *************** function ___lwmod *****************
 25114 ;; Defined at:
 25115 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 25116 ;; Parameters:    Size  Location     Type
 25117 ;;  dividend        2    0[BANK0 ] unsigned int 
 25118 ;;  divisor         2    2[BANK0 ] unsigned int 
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;  counter         1    4[BANK0 ] unsigned char 
 25121 ;; Return value:  Size  Location     Type
 25122 ;;                  2    0[BANK0 ] unsigned int 
 25123 ;; Registers used:
 25124 ;;		wreg, status,2, status,0
 25125 ;; Tracked objects:
 25126 ;;		On entry : 0/0
 25127 ;;		On exit  : 0/0
 25128 ;;		Unchanged: 0/0
 25129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25133 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25134 ;;Total ram usage:        5 bytes
 25135 ;; Hardware stack levels used:    1
 25136 ;; Hardware stack levels required when called:   10
 25137 ;; This function calls:
 25138 ;;		Nothing
 25139 ;; This function is called by:
 25140 ;;		_utoa
 25141 ;; This function uses a non-reentrant model
 25142 ;;
 25143                           
 25144                           	psect	text114
 25145  0151D2                     __ptext114:
 25146                           	opt stack 0
 25147  0151D2                     ___lwmod:
 25148                           	opt stack 15
 25149                           
 25150                           ; BSR set to: 0
 25151                           ;incstack = 0
 25152  0151D2  0100               	movlb	0	; () banked
 25153  0151D4  5162               	movf	___lwmod@divisor& (0+255),w,b
 25154  0151D6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 25155  0151D8  B4D8               	btfsc	status,2,c
 25156  0151DA  D018               	goto	l3814
 25157                           
 25158                           ; BSR set to: 0
 25159  0151DC  0E01               	movlw	1
 25160  0151DE  6F64               	movwf	___lwmod@counter& (0+255),b
 25161  0151E0  D004               	goto	l3809
 25162  0151E2                     
 25163                           ; BSR set to: 0
 25164                           
 25165                           ; BSR set to: 0
 25166  0151E2  90D8               	bcf	status,0,c
 25167  0151E4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 25168  0151E6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 25169  0151E8  2B64               	incf	___lwmod@counter& (0+255),f,b
 25170  0151EA                     l3809:
 25171                           
 25172                           ; BSR set to: 0
 25173                           
 25174                           ; BSR set to: 0
 25175  0151EA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 25176  0151EC  D7FA               	goto	l3810
 25177  0151EE                     u17310:
 25178                           
 25179                           ; BSR set to: 0
 25180                           
 25181                           ; BSR set to: 0
 25182                           
 25183                           ; BSR set to: 0
 25184  0151EE  5162               	movf	___lwmod@divisor& (0+255),w,b
 25185  0151F0  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 25186  0151F2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25187  0151F4  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 25188  0151F6  A0D8               	btfss	status,0,c
 25189  0151F8  D004               	goto	l3813
 25190                           
 25191                           ; BSR set to: 0
 25192  0151FA  5162               	movf	___lwmod@divisor& (0+255),w,b
 25193  0151FC  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 25194  0151FE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25195  015200  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 25196  015202                     l3813:
 25197                           
 25198                           ; BSR set to: 0
 25199                           
 25200                           ; BSR set to: 0
 25201  015202  90D8               	bcf	status,0,c
 25202  015204  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 25203  015206  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 25204                           
 25205                           ; BSR set to: 0
 25206  015208  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 25207  01520A  D7F1               	goto	u17310
 25208  01520C                     l3814:
 25209                           
 25210                           ; BSR set to: 0
 25211                           
 25212                           ; BSR set to: 0
 25213  01520C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 25214  015210  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 25215                           
 25216                           ; BSR set to: 0
 25217  015214  0012               	return		;funcret
 25218  015216                     __end_of___lwmod:
 25219                           	opt stack 0
 25220                           tblptru	equ	0xFF8
 25221                           tblptrh	equ	0xFF7
 25222                           tblptrl	equ	0xFF6
 25223                           tablat	equ	0xFF5
 25224                           prodh	equ	0xFF4
 25225                           prodl	equ	0xFF3
 25226                           intcon	equ	0xFF2
 25227                           intcon2	equ	0xFF1
 25228                           intcon3	equ	0xFF0
 25229                           postinc0	equ	0xFEE
 25230                           wreg	equ	0xFE8
 25231                           indf1	equ	0xFE7
 25232                           postinc1	equ	0xFE6
 25233                           postdec1	equ	0xFE5
 25234                           plusw1	equ	0xFE3
 25235                           fsr1h	equ	0xFE2
 25236                           fsr1l	equ	0xFE1
 25237                           indf2	equ	0xFDF
 25238                           postinc2	equ	0xFDE
 25239                           postdec2	equ	0xFDD
 25240                           plusw2	equ	0xFDB
 25241                           fsr2h	equ	0xFDA
 25242                           fsr2l	equ	0xFD9
 25243                           status	equ	0xFD8
 25244                           
 25245 ;; *************** function ___lwdiv *****************
 25246 ;; Defined at:
 25247 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 25248 ;; Parameters:    Size  Location     Type
 25249 ;;  dividend        2    0[BANK0 ] unsigned int 
 25250 ;;  divisor         2    2[BANK0 ] unsigned int 
 25251 ;; Auto vars:     Size  Location     Type
 25252 ;;  quotient        2    5[BANK0 ] unsigned int 
 25253 ;;  counter         1    4[BANK0 ] unsigned char 
 25254 ;; Return value:  Size  Location     Type
 25255 ;;                  2    0[BANK0 ] unsigned int 
 25256 ;; Registers used:
 25257 ;;		wreg, status,2, status,0
 25258 ;; Tracked objects:
 25259 ;;		On entry : 0/0
 25260 ;;		On exit  : 0/0
 25261 ;;		Unchanged: 0/0
 25262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25264 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25266 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25267 ;;Total ram usage:        7 bytes
 25268 ;; Hardware stack levels used:    1
 25269 ;; Hardware stack levels required when called:   10
 25270 ;; This function calls:
 25271 ;;		Nothing
 25272 ;; This function is called by:
 25273 ;;		_utoa
 25274 ;; This function uses a non-reentrant model
 25275 ;;
 25276                           
 25277                           	psect	text115
 25278  014C60                     __ptext115:
 25279                           	opt stack 0
 25280  014C60                     ___lwdiv:
 25281                           	opt stack 15
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;incstack = 0
 25285  014C60  0E00               	movlw	0
 25286  014C62  0100               	movlb	0	; () banked
 25287  014C64  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 25288  014C66  0E00               	movlw	0
 25289  014C68  6F65               	movwf	___lwdiv@quotient& (0+255),b
 25290                           
 25291                           ; BSR set to: 0
 25292  014C6A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25293  014C6C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 25294  014C6E  B4D8               	btfsc	status,2,c
 25295  014C70  D01C               	goto	l3804
 25296                           
 25297                           ; BSR set to: 0
 25298  014C72  0E01               	movlw	1
 25299  014C74  6F64               	movwf	___lwdiv@counter& (0+255),b
 25300  014C76  D004               	goto	l3799
 25301  014C78                     
 25302                           ; BSR set to: 0
 25303                           
 25304                           ; BSR set to: 0
 25305  014C78  90D8               	bcf	status,0,c
 25306  014C7A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 25307  014C7C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 25308  014C7E  2B64               	incf	___lwdiv@counter& (0+255),f,b
 25309  014C80                     l3799:
 25310                           
 25311                           ; BSR set to: 0
 25312                           
 25313                           ; BSR set to: 0
 25314  014C80  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 25315  014C82  D7FA               	goto	l3800
 25316  014C84                     u17280:
 25317                           
 25318                           ; BSR set to: 0
 25319                           
 25320                           ; BSR set to: 0
 25321                           
 25322                           ; BSR set to: 0
 25323  014C84  90D8               	bcf	status,0,c
 25324  014C86  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 25325  014C88  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 25326                           
 25327                           ; BSR set to: 0
 25328  014C8A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25329  014C8C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 25330  014C8E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25331  014C90  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 25332  014C92  A0D8               	btfss	status,0,c
 25333  014C94  D005               	goto	l3803
 25334                           
 25335                           ; BSR set to: 0
 25336  014C96  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25337  014C98  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 25338  014C9A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25339  014C9C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 25340                           
 25341                           ; BSR set to: 0
 25342  014C9E  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 25343  014CA0                     l3803:
 25344                           
 25345                           ; BSR set to: 0
 25346                           
 25347                           ; BSR set to: 0
 25348  014CA0  90D8               	bcf	status,0,c
 25349  014CA2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 25350  014CA4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 25351                           
 25352                           ; BSR set to: 0
 25353  014CA6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 25354  014CA8  D7ED               	goto	u17280
 25355  014CAA                     l3804:
 25356                           
 25357                           ; BSR set to: 0
 25358                           
 25359                           ; BSR set to: 0
 25360  014CAA  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 25361  014CAE  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25362                           
 25363                           ; BSR set to: 0
 25364  014CB2  0012               	return		;funcret
 25365  014CB4                     __end_of___lwdiv:
 25366                           	opt stack 0
 25367                           tblptru	equ	0xFF8
 25368                           tblptrh	equ	0xFF7
 25369                           tblptrl	equ	0xFF6
 25370                           tablat	equ	0xFF5
 25371                           prodh	equ	0xFF4
 25372                           prodl	equ	0xFF3
 25373                           intcon	equ	0xFF2
 25374                           intcon2	equ	0xFF1
 25375                           intcon3	equ	0xFF0
 25376                           postinc0	equ	0xFEE
 25377                           wreg	equ	0xFE8
 25378                           indf1	equ	0xFE7
 25379                           postinc1	equ	0xFE6
 25380                           postdec1	equ	0xFE5
 25381                           plusw1	equ	0xFE3
 25382                           fsr1h	equ	0xFE2
 25383                           fsr1l	equ	0xFE1
 25384                           indf2	equ	0xFDF
 25385                           postinc2	equ	0xFDE
 25386                           postdec2	equ	0xFDD
 25387                           plusw2	equ	0xFDB
 25388                           fsr2h	equ	0xFDA
 25389                           fsr2l	equ	0xFD9
 25390                           status	equ	0xFD8
 25391                           
 25392 ;; *************** function _buck_operate *****************
 25393 ;; Defined at:
 25394 ;;		line 550 in file "buck.c"
 25395 ;; Parameters:    Size  Location     Type
 25396 ;;		None
 25397 ;; Auto vars:     Size  Location     Type
 25398 ;;		None
 25399 ;; Return value:  Size  Location     Type
 25400 ;;                  1    wreg      void 
 25401 ;; Registers used:
 25402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25403 ;; Tracked objects:
 25404 ;;		On entry : 0/0
 25405 ;;		On exit  : 0/0
 25406 ;;		Unchanged: 0/0
 25407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25412 ;;Total ram usage:        0 bytes
 25413 ;; Hardware stack levels used:    1
 25414 ;; Hardware stack levels required when called:   14
 25415 ;; This function calls:
 25416 ;;		__buck_operate_local
 25417 ;;		__buck_operate_remote
 25418 ;; This function is called by:
 25419 ;;		_main
 25420 ;; This function uses a non-reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text116
 25424  01482E                     __ptext116:
 25425                           	opt stack 0
 25426  01482E                     _buck_operate:
 25427                           	opt stack 16
 25428                           
 25429                           ;buck.c: 553: if(buck_remote_enable)
 25430                           
 25431                           ; BSR set to: 0
 25432                           ;incstack = 0
 25433  01482E  0101               	movlb	1	; () banked
 25434  014830  51F1               	movf	_buck_remote_enable& (0+255),w,b
 25435  014832  B4D8               	btfsc	status,2,c
 25436  014834  D022               	goto	l2602
 25437                           
 25438                           ; BSR set to: 1
 25439                           ;buck.c: 554: {;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 25440  014836  0E80               	movlw	128
 25441  014838  601C               	cpfslt	_buck_status,c
 25442  01483A  D01C               	goto	l2603
 25443  01483C  D00D               	goto	l2604
 25444  01483E                     
 25445                           ;buck.c: 563: buck_remote_on = 0;
 25446                           
 25447                           ; BSR set to: 1
 25448  01483E  0E00               	movlw	0
 25449  014840  D001               	goto	L12
 25450  014842                     
 25451                           ;buck.c: 567: buck_remote_on = 1;
 25452                           
 25453                           ; BSR set to: 0
 25454  014842  0E01               	movlw	1
 25455  014844                     L12:
 25456  014844  0100               	movlb	0	; () banked
 25457  014846  6FE4               	movwf	_buck_remote_on& (0+255),b
 25458                           
 25459                           ;buck.c: 568: buck_remote_synchronous = 0;
 25460  014848  0E00               	movlw	0
 25461  01484A  D004               	goto	L13
 25462  01484C                     
 25463                           ;buck.c: 571: buck_remote_on = 1;
 25464                           
 25465                           ; BSR set to: 0
 25466  01484C  0E01               	movlw	1
 25467  01484E  0100               	movlb	0	; () banked
 25468  014850  6FE4               	movwf	_buck_remote_on& (0+255),b
 25469                           
 25470                           ;buck.c: 572: buck_remote_synchronous = 1;
 25471  014852  0E01               	movlw	1
 25472  014854                     L13:
 25473  014854  6FE3               	movwf	_buck_remote_synchronous& (0+255),b
 25474                           
 25475                           ; BSR set to: 0
 25476                           ;buck.c: 574: }
 25477                           
 25478                           ;buck.c: 573: break;
 25479  014856  D00A               	goto	l2606
 25480  014858                     l2604:
 25481                           
 25482                           ; BSR set to: 0
 25483  014858  501C               	movf	_buck_status,w,c
 25484                           
 25485                           ; Switch size 1, requested type "space"
 25486                           ; Number of cases is 3, Range of values is 0 to 3
 25487                           ; switch strategies available:
 25488                           ; Name         Instructions Cycles
 25489                           ; simple_byte           10     6 (average)
 25490                           ;	Chosen strategy is simple_byte
 25491  01485A  0A00               	xorlw	0	; case 0
 25492  01485C  B4D8               	btfsc	status,2,c
 25493  01485E  D7EF               	goto	l2605
 25494  014860  0A02               	xorlw	2	; case 2
 25495  014862  B4D8               	btfsc	status,2,c
 25496  014864  D7EE               	goto	l2607
 25497  014866  0A01               	xorlw	1	; case 3
 25498  014868  B4D8               	btfsc	status,2,c
 25499  01486A  D7F0               	goto	l2608
 25500  01486C                     l2606:
 25501                           
 25502                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 25503  01486C  C0E5  F0E2         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25504                           
 25505                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 25506  014870  0E80               	movlw	128
 25507  014872  261C               	addwf	_buck_status,f,c
 25508  014874                     l2603:
 25509                           
 25510                           ;buck.c: 577: };buck.c: 578: _buck_operate_remote();
 25511  014874  ECA5  F08E         	call	__buck_operate_remote	;wreg free
 25512                           
 25513                           ;buck.c: 579: }
 25514  014878  0012               	return	
 25515  01487A                     l2602:
 25516                           
 25517                           ;buck.c: 580: else;buck.c: 581: {;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 25518  01487A  0E7F               	movlw	127
 25519  01487C  641C               	cpfsgt	_buck_status,c
 25520  01487E  D002               	goto	l2610
 25521                           
 25522                           ;buck.c: 583: {;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 25523  014880  0E80               	movlw	128
 25524  014882  5E1C               	subwf	_buck_status,f,c
 25525  014884                     l2610:
 25526                           
 25527                           ;buck.c: 587: };buck.c: 588: _buck_operate_local();
 25528  014884  EC53  F065         	call	__buck_operate_local	;wreg free
 25529  014888  0012               	return	
 25530  01488A                     __end_of_buck_operate:
 25531                           	opt stack 0
 25532                           tblptru	equ	0xFF8
 25533                           tblptrh	equ	0xFF7
 25534                           tblptrl	equ	0xFF6
 25535                           tablat	equ	0xFF5
 25536                           prodh	equ	0xFF4
 25537                           prodl	equ	0xFF3
 25538                           intcon	equ	0xFF2
 25539                           intcon2	equ	0xFF1
 25540                           intcon3	equ	0xFF0
 25541                           postinc0	equ	0xFEE
 25542                           wreg	equ	0xFE8
 25543                           indf1	equ	0xFE7
 25544                           postinc1	equ	0xFE6
 25545                           postdec1	equ	0xFE5
 25546                           plusw1	equ	0xFE3
 25547                           fsr1h	equ	0xFE2
 25548                           fsr1l	equ	0xFE1
 25549                           indf2	equ	0xFDF
 25550                           postinc2	equ	0xFDE
 25551                           postdec2	equ	0xFDD
 25552                           plusw2	equ	0xFDB
 25553                           fsr2h	equ	0xFDA
 25554                           fsr2l	equ	0xFD9
 25555                           status	equ	0xFD8
 25556                           
 25557 ;; *************** function __buck_operate_remote *****************
 25558 ;; Defined at:
 25559 ;;		line 453 in file "buck.c"
 25560 ;; Parameters:    Size  Location     Type
 25561 ;;		None
 25562 ;; Auto vars:     Size  Location     Type
 25563 ;;		None
 25564 ;; Return value:  Size  Location     Type
 25565 ;;                  1    wreg      void 
 25566 ;; Registers used:
 25567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25568 ;; Tracked objects:
 25569 ;;		On entry : 0/0
 25570 ;;		On exit  : 0/0
 25571 ;;		Unchanged: 0/0
 25572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25577 ;;Total ram usage:        1 bytes
 25578 ;; Hardware stack levels used:    1
 25579 ;; Hardware stack levels required when called:   13
 25580 ;; This function calls:
 25581 ;;		__buck_initial_dutycycle
 25582 ;;		__buck_prepare
 25583 ;;		__buck_set_dutycycle
 25584 ;;		__buck_set_sync_async
 25585 ;;		__buck_start
 25586 ;;		__buck_stop
 25587 ;; This function is called by:
 25588 ;;		_buck_operate
 25589 ;; This function uses a non-reentrant model
 25590 ;;
 25591                           
 25592                           	psect	text117
 25593  011D4A                     __ptext117:
 25594                           	opt stack 0
 25595  011D4A                     __buck_operate_remote:
 25596                           	opt stack 16
 25597                           
 25598                           ;buck.c: 455: switch(buck_status)
 25599                           
 25600                           ;incstack = 0
 25601  011D4A  D070               	goto	l2574
 25602  011D4C                     
 25603                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 25604  011D4C  0102               	movlb	2	; () banked
 25605  011D4E  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 25606  011D50  0B30               	andlw	48
 25607  011D52  0A30               	xorlw	48
 25608  011D54  A4D8               	btfss	status,2,c
 25609  011D56  0012               	return	
 25610                           
 25611                           ; BSR set to: 2
 25612                           ;buck.c: 459: {;buck.c: 460: if(buck_remote_on)
 25613  011D58  0100               	movlb	0	; () banked
 25614  011D5A  51E4               	movf	_buck_remote_on& (0+255),w,b
 25615  011D5C  B4D8               	btfsc	status,2,c
 25616  011D5E  0012               	return	
 25617                           
 25618                           ; BSR set to: 0
 25619                           ;buck.c: 461: {;buck.c: 464: _buck_prepare();
 25620  011D60  EC63  F0A2         	call	__buck_prepare	;wreg free
 25621                           
 25622                           ;buck.c: 465: };buck.c: 466: };buck.c: 467: break;
 25623  011D64  0012               	return	
 25624  011D66                     
 25625                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 25626  011D66  0102               	movlb	2	; () banked
 25627  011D68  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 25628  011D6A  0B30               	andlw	48
 25629  011D6C  0A30               	xorlw	48
 25630  011D6E  A4D8               	btfss	status,2,c
 25631  011D70  0012               	return	
 25632                           
 25633                           ; BSR set to: 2
 25634                           ;buck.c: 471: {;buck.c: 473: if(buck_remote_synchronous)
 25635  011D72  0100               	movlb	0	; () banked
 25636  011D74  51E3               	movf	_buck_remote_synchronous& (0+255),w,b
 25637  011D76  B4D8               	btfsc	status,2,c
 25638  011D78  D00C               	goto	l2581
 25639                           
 25640                           ; BSR set to: 0
 25641                           ;buck.c: 474: {;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle(
      +                          ));
 25642  011D7A  EC0C  F098         	call	__buck_initial_dutycycle	;wreg free
 25643  011D7E  0100               	movlb	0	; () banked
 25644  011D80  6F76               	movwf	__buck_operate_remote$8818& (0+255),b
 25645                           
 25646                           ; BSR set to: 0
 25647                           ;buck.c: 474: {;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle(
      +                          ));
 25648  011D82  C076  F072         	movff	__buck_operate_remote$8818,__buck_start@dutycycle
 25649  011D86  0E01               	movlw	1
 25650  011D88  EC8A  F096         	call	__buck_start
 25651                           
 25652                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 25653  011D8C  C0E5  F0E2         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25654                           
 25655                           ;buck.c: 478: }
 25656  011D90  0012               	return	
 25657  011D92                     l2581:
 25658                           
 25659                           ;buck.c: 479: else;buck.c: 480: {;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 25660  011D92  0E28               	movlw	40
 25661  011D94  0100               	movlb	0	; () banked
 25662  011D96  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 25663  011D98  0E00               	movlw	0
 25664  011D9A  EC8A  F096         	call	__buck_start
 25665                           
 25666                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 25667  011D9E  C0E5  F0E2         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25668                           
 25669                           ;buck.c: 484: };buck.c: 485: };buck.c: 486: break;
 25670  011DA2  0012               	return	
 25671  011DA4                     
 25672                           ;buck.c: 490: if(!buck_remote_on)
 25673  011DA4  0100               	movlb	0	; () banked
 25674  011DA6  51E4               	movf	_buck_remote_on& (0+255),w,b
 25675  011DA8  A4D8               	btfss	status,2,c
 25676  011DAA  D003               	goto	l2584
 25677                           
 25678                           ; BSR set to: 0
 25679                           ;buck.c: 491: {;buck.c: 493: _buck_stop();
 25680  011DAC  ECD4  F0AB         	call	__buck_stop	;wreg free
 25681                           
 25682                           ;buck.c: 494: }
 25683  011DB0  0012               	return	
 25684  011DB2                     l2584:
 25685                           
 25686                           ;buck.c: 496: else if(buck_remote_synchronous)
 25687  011DB2  0100               	movlb	0	; () banked
 25688  011DB4  51E3               	movf	_buck_remote_synchronous& (0+255),w,b
 25689  011DB6  B4D8               	btfsc	status,2,c
 25690  011DB8  D00A               	goto	l2586
 25691                           
 25692                           ; BSR set to: 0
 25693                           ;buck.c: 497: {;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 25694  011DBA  EC0C  F098         	call	__buck_initial_dutycycle	;wreg free
 25695  011DBE  0100               	movlb	0	; () banked
 25696  011DC0  6FE2               	movwf	_buck_remote_dutycycle& (0+255),b
 25697                           
 25698                           ; BSR set to: 0
 25699                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 25700  011DC2  C0E2  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 25701  011DC6  0E01               	movlw	1
 25702  011DC8  EC46  F0A0         	call	__buck_set_sync_async
 25703                           
 25704                           ;buck.c: 502: }
 25705  011DCC  0012               	return	
 25706  011DCE                     l2586:
 25707                           
 25708                           ;buck.c: 503: else;buck.c: 504: {;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 25709  011DCE  0100               	movlb	0	; () banked
 25710  011DD0  51E2               	movf	_buck_remote_dutycycle& (0+255),w,b
 25711  011DD2  19E5               	xorwf	_buck_dutycycle& (0+255),w,b
 25712  011DD4  B4D8               	btfsc	status,2,c
 25713  011DD6  0012               	return	
 25714                           
 25715                           ; BSR set to: 0
 25716                           ;buck.c: 507: {;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 25717  011DD8  51E2               	movf	_buck_remote_dutycycle& (0+255),w,b
 25718  011DDA  EC92  F0A1         	call	__buck_set_dutycycle
 25719                           
 25720                           ;buck.c: 509: };buck.c: 510: };buck.c: 511: break;
 25721  011DDE  0012               	return	
 25722  011DE0                     
 25723                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 25724  011DE0  0100               	movlb	0	; () banked
 25725  011DE2  51E2               	movf	_buck_remote_dutycycle& (0+255),w,b
 25726  011DE4  EC92  F0A1         	call	__buck_set_dutycycle
 25727                           
 25728                           ;buck.c: 515: if(!buck_remote_on)
 25729  011DE8  0100               	movlb	0	; () banked
 25730  011DEA  51E4               	movf	_buck_remote_on& (0+255),w,b
 25731  011DEC  A4D8               	btfss	status,2,c
 25732  011DEE  D003               	goto	l2590
 25733                           
 25734                           ; BSR set to: 0
 25735                           ;buck.c: 516: {;buck.c: 518: _buck_stop();
 25736  011DF0  ECD4  F0AB         	call	__buck_stop	;wreg free
 25737                           
 25738                           ;buck.c: 519: }
 25739  011DF4  0012               	return	
 25740  011DF6                     l2590:
 25741                           
 25742                           ;buck.c: 521: else if(!buck_remote_synchronous)
 25743  011DF6  0100               	movlb	0	; () banked
 25744  011DF8  51E3               	movf	_buck_remote_synchronous& (0+255),w,b
 25745  011DFA  A4D8               	btfss	status,2,c
 25746  011DFC  D00B               	goto	l2592
 25747                           
 25748                           ; BSR set to: 0
 25749                           ;buck.c: 522: {;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 25750  011DFE  EC0C  F098         	call	__buck_initial_dutycycle	;wreg free
 25751  011E02  0FFB               	addlw	251
 25752  011E04  0100               	movlb	0	; () banked
 25753  011E06  6FE2               	movwf	_buck_remote_dutycycle& (0+255),b
 25754                           
 25755                           ; BSR set to: 0
 25756                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 25757  011E08  C0E2  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 25758  011E0C  0E00               	movlw	0
 25759  011E0E  EC46  F0A0         	call	__buck_set_sync_async
 25760                           
 25761                           ;buck.c: 526: }
 25762  011E12  0012               	return	
 25763  011E14                     l2592:
 25764                           
 25765                           ;buck.c: 527: else;buck.c: 528: {;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 25766  011E14  0100               	movlb	0	; () banked
 25767  011E16  51E2               	movf	_buck_remote_dutycycle& (0+255),w,b
 25768  011E18  19E5               	xorwf	_buck_dutycycle& (0+255),w,b
 25769  011E1A  B4D8               	btfsc	status,2,c
 25770  011E1C  0012               	return	
 25771                           
 25772                           ; BSR set to: 0
 25773                           ;buck.c: 531: {;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 25774  011E1E  51E2               	movf	_buck_remote_dutycycle& (0+255),w,b
 25775  011E20  EC92  F0A1         	call	__buck_set_dutycycle
 25776                           
 25777                           ;buck.c: 533: };buck.c: 534: };buck.c: 535: break;
 25778  011E24  0012               	return	
 25779  011E26                     
 25780                           ;buck.c: 539: _buck_stop();
 25781  011E26  ECD4  F0AB         	call	__buck_stop	;wreg free
 25782                           
 25783                           ;buck.c: 540: }
 25784  011E2A  0012               	return	
 25785  011E2C                     l2574:
 25786  011E2C  501C               	movf	_buck_status,w,c
 25787                           
 25788                           ; Switch size 1, requested type "space"
 25789                           ; Number of cases is 4, Range of values is 128 to 131
 25790                           ; switch strategies available:
 25791                           ; Name         Instructions Cycles
 25792                           ; simple_byte           13     7 (average)
 25793                           ;	Chosen strategy is simple_byte
 25794  011E2E  0A80               	xorlw	128	; case 128
 25795  011E30  B4D8               	btfsc	status,2,c
 25796  011E32  D78C               	goto	l2575
 25797  011E34  0A01               	xorlw	1	; case 129
 25798  011E36  B4D8               	btfsc	status,2,c
 25799  011E38  D796               	goto	l2579
 25800  011E3A  0A03               	xorlw	3	; case 130
 25801  011E3C  B4D8               	btfsc	status,2,c
 25802  011E3E  D7B2               	goto	l2583
 25803  011E40  0A01               	xorlw	1	; case 131
 25804  011E42  B4D8               	btfsc	status,2,c
 25805  011E44  D7CD               	goto	l2589
 25806  011E46  D7EF               	goto	l2595
 25807  011E48                     __end_of__buck_operate_remote:
 25808                           	opt stack 0
 25809                           tblptru	equ	0xFF8
 25810                           tblptrh	equ	0xFF7
 25811                           tblptrl	equ	0xFF6
 25812                           tablat	equ	0xFF5
 25813                           prodh	equ	0xFF4
 25814                           prodl	equ	0xFF3
 25815                           intcon	equ	0xFF2
 25816                           intcon2	equ	0xFF1
 25817                           intcon3	equ	0xFF0
 25818                           postinc0	equ	0xFEE
 25819                           wreg	equ	0xFE8
 25820                           indf1	equ	0xFE7
 25821                           postinc1	equ	0xFE6
 25822                           postdec1	equ	0xFE5
 25823                           plusw1	equ	0xFE3
 25824                           fsr1h	equ	0xFE2
 25825                           fsr1l	equ	0xFE1
 25826                           indf2	equ	0xFDF
 25827                           postinc2	equ	0xFDE
 25828                           postdec2	equ	0xFDD
 25829                           plusw2	equ	0xFDB
 25830                           fsr2h	equ	0xFDA
 25831                           fsr2l	equ	0xFD9
 25832                           status	equ	0xFD8
 25833                           
 25834 ;; *************** function __buck_prepare *****************
 25835 ;; Defined at:
 25836 ;;		line 125 in file "buck.c"
 25837 ;; Parameters:    Size  Location     Type
 25838 ;;		None
 25839 ;; Auto vars:     Size  Location     Type
 25840 ;;  cntr            1    0[BANK0 ] unsigned char 
 25841 ;; Return value:  Size  Location     Type
 25842 ;;                  1    wreg      void 
 25843 ;; Registers used:
 25844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25845 ;; Tracked objects:
 25846 ;;		On entry : 0/0
 25847 ;;		On exit  : 0/0
 25848 ;;		Unchanged: 0/0
 25849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25851 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25853 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25854 ;;Total ram usage:        1 bytes
 25855 ;; Hardware stack levels used:    1
 25856 ;; Hardware stack levels required when called:   10
 25857 ;; This function calls:
 25858 ;;		Nothing
 25859 ;; This function is called by:
 25860 ;;		__buck_operate_remote
 25861 ;; This function uses a non-reentrant model
 25862 ;;
 25863                           
 25864                           	psect	text118
 25865  0144C6                     __ptext118:
 25866                           	opt stack 0
 25867  0144C6                     __buck_prepare:
 25868                           	opt stack 18
 25869                           
 25870                           ;buck.c: 127: uint8_t cntr;;buck.c: 128: LATBbits.LB1 = 1;
 25871                           
 25872                           ;incstack = 0
 25873  0144C6  828A               	bsf	3978,1,c	;volatile
 25874                           
 25875                           ;buck.c: 129: if(buck_status<0x80)
 25876  0144C8  0E80               	movlw	128
 25877  0144CA  601C               	cpfslt	_buck_status,c
 25878  0144CC  D002               	goto	l2492
 25879                           
 25880                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 25881  0144CE  0E01               	movlw	1
 25882  0144D0  D001               	goto	L14
 25883  0144D2                     l2492:
 25884                           
 25885                           ;buck.c: 131: else;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 25886  0144D2  0E81               	movlw	129
 25887  0144D4                     L14:
 25888  0144D4  6E1C               	movwf	_buck_status,c
 25889                           
 25890                           ;buck.c: 134: os.input_current = 0;
 25891  0144D6  0E00               	movlw	0
 25892  0144D8  0102               	movlb	2	; () banked
 25893  0144DA  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 25894  0144DC  0E00               	movlw	0
 25895  0144DE  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 25896                           
 25897                           ;buck.c: 135: os.output_current = 0;
 25898  0144E0  0E00               	movlw	0
 25899  0144E2  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 25900  0144E4  0E00               	movlw	0
 25901  0144E6  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 25902                           
 25903                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 25904  0144E8  0E00               	movlw	0
 25905  0144EA  0100               	movlb	0	; () banked
 25906  0144EC  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 25907  0144EE                     l19957:
 25908                           
 25909                           ; BSR set to: 0
 25910  0144EE  0E03               	movlw	3
 25911  0144F0  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 25912  0144F2  D001               	goto	l2494
 25913  0144F4  0012               	return	
 25914  0144F6                     l2494:
 25915                           
 25916                           ; BSR set to: 0
 25917                           ;buck.c: 137: {;buck.c: 138: os.input_current_adc[cntr] = 0;
 25918                           
 25919                           ; BSR set to: 0
 25920  0144F6  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 25921  0144F8  0D02               	mullw	2
 25922  0144FA  0E14               	movlw	low (_os+20)
 25923  0144FC  24F3               	addwf	prodl,w,c
 25924  0144FE  6ED9               	movwf	fsr2l,c
 25925  014500  0E02               	movlw	high (_os+20)
 25926  014502  20F4               	addwfc	prodh,w,c
 25927  014504  6EDA               	movwf	fsr2h,c
 25928  014506  0E00               	movlw	0
 25929  014508  6EDE               	movwf	postinc2,c
 25930  01450A  0E00               	movlw	0
 25931  01450C  6EDD               	movwf	postdec2,c
 25932                           
 25933                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 25934  01450E  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 25935  014510  0D02               	mullw	2
 25936  014512  0E29               	movlw	low (_os+41)
 25937  014514  24F3               	addwf	prodl,w,c
 25938  014516  6ED9               	movwf	fsr2l,c
 25939  014518  0E02               	movlw	high (_os+41)
 25940  01451A  20F4               	addwfc	prodh,w,c
 25941  01451C  6EDA               	movwf	fsr2h,c
 25942  01451E  0E00               	movlw	0
 25943  014520  6EDE               	movwf	postinc2,c
 25944  014522  0E00               	movlw	0
 25945  014524  6EDD               	movwf	postdec2,c
 25946                           
 25947                           ; BSR set to: 0
 25948  014526  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 25949  014528  D7E2               	goto	l19957
 25950  01452A                     __end_of__buck_prepare:
 25951                           	opt stack 0
 25952                           tblptru	equ	0xFF8
 25953                           tblptrh	equ	0xFF7
 25954                           tblptrl	equ	0xFF6
 25955                           tablat	equ	0xFF5
 25956                           prodh	equ	0xFF4
 25957                           prodl	equ	0xFF3
 25958                           intcon	equ	0xFF2
 25959                           intcon2	equ	0xFF1
 25960                           intcon3	equ	0xFF0
 25961                           postinc0	equ	0xFEE
 25962                           wreg	equ	0xFE8
 25963                           indf1	equ	0xFE7
 25964                           postinc1	equ	0xFE6
 25965                           postdec1	equ	0xFE5
 25966                           plusw1	equ	0xFE3
 25967                           fsr1h	equ	0xFE2
 25968                           fsr1l	equ	0xFE1
 25969                           indf2	equ	0xFDF
 25970                           postinc2	equ	0xFDE
 25971                           postdec2	equ	0xFDD
 25972                           plusw2	equ	0xFDB
 25973                           fsr2h	equ	0xFDA
 25974                           fsr2l	equ	0xFD9
 25975                           status	equ	0xFD8
 25976                           
 25977 ;; *************** function __buck_operate_local *****************
 25978 ;; Defined at:
 25979 ;;		line 308 in file "buck.c"
 25980 ;; Parameters:    Size  Location     Type
 25981 ;;		None
 25982 ;; Auto vars:     Size  Location     Type
 25983 ;;  cntr            1   29[BANK0 ] unsigned char 
 25984 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 25985 ;; Return value:  Size  Location     Type
 25986 ;;                  1    wreg      void 
 25987 ;; Registers used:
 25988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25989 ;; Tracked objects:
 25990 ;;		On entry : 0/0
 25991 ;;		On exit  : 0/0
 25992 ;;		Unchanged: 0/0
 25993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25995 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25996 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25997 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25998 ;;Total ram usage:        8 bytes
 25999 ;; Hardware stack levels used:    1
 26000 ;; Hardware stack levels required when called:   13
 26001 ;; This function calls:
 26002 ;;		___lmul
 26003 ;;		__buck_initial_dutycycle
 26004 ;;		__buck_set_dutycycle
 26005 ;;		__buck_set_sync_async
 26006 ;;		__buck_start
 26007 ;;		__buck_stop
 26008 ;; This function is called by:
 26009 ;;		_buck_operate
 26010 ;; This function uses a non-reentrant model
 26011 ;;
 26012                           
 26013                           	psect	text119
 26014  00CAA6                     __ptext119:
 26015                           	opt stack 0
 26016  00CAA6                     __buck_operate_local:
 26017                           	opt stack 16
 26018                           
 26019                           ;buck.c: 310: uint8_t cntr;;buck.c: 311: uint8_t tmp_dutycycle;;buck.c: 313: switch(buck
      +                          _status)
 26020                           
 26021                           ; BSR set to: 0
 26022                           ;incstack = 0
 26023  00CAA6  D230               	goto	l2537
 26024  00CAA8                     
 26025                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 26026  00CAA8  0102               	movlb	2	; () banked
 26027  00CAAA  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26028  00CAAC  0B30               	andlw	48
 26029  00CAAE  0A30               	xorlw	48
 26030  00CAB0  A4D8               	btfss	status,2,c
 26031  00CAB2  0012               	return	
 26032                           
 26033                           ; BSR set to: 2
 26034                           ;buck.c: 317: {;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 26035  00CAB4  0E0C               	movlw	12
 26036  00CAB6  0100               	movlb	0	; () banked
 26037  00CAB8  6F76               	movwf	??__buck_operate_local& (0+255),b
 26038  00CABA  0EFE               	movlw	254
 26039  00CABC  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 26040  00CABE  EE22  F012         	lfsr	2,_os+18	;volatile
 26041  00CAC2  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 26042  00CAC6  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 26043  00CACA  5176               	movf	??__buck_operate_local& (0+255),w,b
 26044  00CACC  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 26045  00CACE  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 26046  00CAD0  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 26047  00CAD2  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 26048  00CAD4  0102               	movlb	2	; () banked
 26049  00CAD6  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 26050  00CAD8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26051  00CADA  0A80               	xorlw	128
 26052  00CADC  0100               	movlb	0	; () banked
 26053  00CADE  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 26054  00CAE0  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 26055  00CAE2  0A80               	xorlw	128
 26056  00CAE4  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 26057  00CAE6  B0D8               	btfsc	status,0,c
 26058  00CAE8  0012               	return	
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;buck.c: 319: {;buck.c: 320: LATBbits.LB1 = 1;
 26062  00CAEA  828A               	bsf	3978,1,c	;volatile
 26063                           
 26064                           ; BSR set to: 0
 26065                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 26066  00CAEC  0E01               	movlw	1
 26067  00CAEE  6E1C               	movwf	_buck_status,c
 26068                           
 26069                           ;buck.c: 323: os.input_current = 0;
 26070  00CAF0  0E00               	movlw	0
 26071  00CAF2  0102               	movlb	2	; () banked
 26072  00CAF4  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 26073  00CAF6  0E00               	movlw	0
 26074  00CAF8  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 26075                           
 26076                           ;buck.c: 324: os.output_current = 0;
 26077  00CAFA  0E00               	movlw	0
 26078  00CAFC  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 26079  00CAFE  0E00               	movlw	0
 26080  00CB00  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 26081                           
 26082                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 26083  00CB02  0E00               	movlw	0
 26084  00CB04  0100               	movlb	0	; () banked
 26085  00CB06  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26086  00CB08                     l21745:
 26087                           
 26088                           ; BSR set to: 0
 26089  00CB08  0E03               	movlw	3
 26090  00CB0A  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26091  00CB0C  D001               	goto	l2541
 26092  00CB0E  0012               	return	
 26093  00CB10                     l2541:
 26094                           
 26095                           ; BSR set to: 0
 26096                           ;buck.c: 326: {;buck.c: 327: os.input_current_adc[cntr] = 0;
 26097                           
 26098                           ; BSR set to: 0
 26099  00CB10  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26100  00CB12  0D02               	mullw	2
 26101  00CB14  0E14               	movlw	low (_os+20)
 26102  00CB16  24F3               	addwf	prodl,w,c
 26103  00CB18  6ED9               	movwf	fsr2l,c
 26104  00CB1A  0E02               	movlw	high (_os+20)
 26105  00CB1C  20F4               	addwfc	prodh,w,c
 26106  00CB1E  6EDA               	movwf	fsr2h,c
 26107  00CB20  0E00               	movlw	0
 26108  00CB22  6EDE               	movwf	postinc2,c
 26109  00CB24  0E00               	movlw	0
 26110  00CB26  6EDD               	movwf	postdec2,c
 26111                           
 26112                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 26113  00CB28  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26114  00CB2A  0D02               	mullw	2
 26115  00CB2C  0E29               	movlw	low (_os+41)
 26116  00CB2E  24F3               	addwf	prodl,w,c
 26117  00CB30  6ED9               	movwf	fsr2l,c
 26118  00CB32  0E02               	movlw	high (_os+41)
 26119  00CB34  20F4               	addwfc	prodh,w,c
 26120  00CB36  6EDA               	movwf	fsr2h,c
 26121  00CB38  0E00               	movlw	0
 26122  00CB3A  6EDE               	movwf	postinc2,c
 26123  00CB3C  0E00               	movlw	0
 26124  00CB3E  6EDD               	movwf	postdec2,c
 26125                           
 26126                           ; BSR set to: 0
 26127  00CB40  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26128  00CB42  D7E2               	goto	l21745
 26129  00CB44                     
 26130                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 26131                           
 26132                           ; BSR set to: 0
 26133  00CB44  0102               	movlb	2	; () banked
 26134  00CB46  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26135  00CB48  0B30               	andlw	48
 26136  00CB4A  0A30               	xorlw	48
 26137  00CB4C  A4D8               	btfss	status,2,c
 26138  00CB4E  0012               	return	
 26139                           
 26140                           ; BSR set to: 2
 26141                           ;buck.c: 336: {;buck.c: 338: os.input_current_calibration = 0;
 26142  00CB50  0E00               	movlw	0
 26143  00CB52  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 26144                           
 26145                           ;buck.c: 339: os.output_current_calibration = 0;
 26146  00CB54  0E00               	movlw	0
 26147  00CB56  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 26148                           
 26149                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 26150  00CB58  0E00               	movlw	0
 26151  00CB5A  0100               	movlb	0	; () banked
 26152  00CB5C  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26153  00CB5E                     l21759:
 26154                           
 26155                           ; BSR set to: 0
 26156  00CB5E  0E03               	movlw	3
 26157  00CB60  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26158  00CB62  D001               	goto	l2546
 26159  00CB64  D01A               	goto	u21440
 26160  00CB66                     l2546:
 26161                           
 26162                           ; BSR set to: 0
 26163                           ;buck.c: 341: {;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 26164                           
 26165                           ; BSR set to: 0
 26166  00CB66  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26167  00CB68  0D02               	mullw	2
 26168  00CB6A  0E14               	movlw	low (_os+20)
 26169  00CB6C  24F3               	addwf	prodl,w,c
 26170  00CB6E  6ED9               	movwf	fsr2l,c
 26171  00CB70  0E02               	movlw	high (_os+20)
 26172  00CB72  20F4               	addwfc	prodh,w,c
 26173  00CB74  6EDA               	movwf	fsr2h,c
 26174  00CB76  50DF               	movf	indf2,w,c
 26175  00CB78  0102               	movlb	2	; () banked
 26176  00CB7A  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 26177                           
 26178                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 26179  00CB7C  0100               	movlb	0	; () banked
 26180  00CB7E  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26181  00CB80  0D02               	mullw	2
 26182  00CB82  0E29               	movlw	low (_os+41)
 26183  00CB84  24F3               	addwf	prodl,w,c
 26184  00CB86  6ED9               	movwf	fsr2l,c
 26185  00CB88  0E02               	movlw	high (_os+41)
 26186  00CB8A  20F4               	addwfc	prodh,w,c
 26187  00CB8C  6EDA               	movwf	fsr2h,c
 26188  00CB8E  50DF               	movf	indf2,w,c
 26189  00CB90  0102               	movlb	2	; () banked
 26190  00CB92  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 26191                           
 26192                           ; BSR set to: 2
 26193  00CB94  0100               	movlb	0	; () banked
 26194  00CB96  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26195  00CB98  D7E2               	goto	l21759
 26196  00CB9A                     u21440:
 26197                           
 26198                           ; BSR set to: 0
 26199                           ;buck.c: 344: };buck.c: 346: buck_dutycycle_last_step = 1;
 26200                           
 26201                           ; BSR set to: 0
 26202  00CB9A  0E01               	movlw	1
 26203  00CB9C  0101               	movlb	1	; () banked
 26204  00CB9E  6FF2               	movwf	_buck_dutycycle_last_step& (0+255),b
 26205                           
 26206                           ; BSR set to: 1
 26207                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26208  00CBA0  EC0C  F098         	call	__buck_initial_dutycycle	;wreg free
 26209  00CBA4  0100               	movlb	0	; () banked
 26210  00CBA6  6F7B               	movwf	__buck_operate_local$8817& (0+255),b
 26211                           
 26212                           ; BSR set to: 0
 26213                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26214  00CBA8  C07B  F072         	movff	__buck_operate_local$8817,__buck_start@dutycycle
 26215  00CBAC  0E00               	movlw	0
 26216  00CBAE  EC8A  F096         	call	__buck_start
 26217                           
 26218                           ;buck.c: 349: };buck.c: 350: break;
 26219  00CBB2  0012               	return	
 26220  00CBB4                     l2548:
 26221                           
 26222                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 26223  00CBB4  0102               	movlb	2	; () banked
 26224  00CBB6  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26225  00CBB8  0012               	return	
 26226                           
 26227                           ; BSR set to: 2
 26228                           ;buck.c: 354: {;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 26229  00CBBA  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26230  00CBBC  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 26231  00CBBE  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26232  00CBC0  0A80               	xorlw	128
 26233  00CBC2  0100               	movlb	0	; () banked
 26234  00CBC4  6F76               	movwf	??__buck_operate_local& (0+255),b
 26235  00CBC6  0102               	movlb	2	; () banked
 26236  00CBC8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26237  00CBCA  0A80               	xorlw	128
 26238  00CBCC  0100               	movlb	0	; () banked
 26239  00CBCE  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26240  00CBD0  B0D8               	btfsc	status,0,c
 26241  00CBD2  D006               	goto	l2550
 26242                           
 26243                           ; BSR set to: 0
 26244                           ;buck.c: 357: {;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26245  00CBD4  05E5               	decf	_buck_dutycycle& (0+255),w,b
 26246  00CBD6  EC92  F0A1         	call	__buck_set_dutycycle
 26247                           
 26248                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 26249  00CBDA  0101               	movlb	1	; () banked
 26250  00CBDC  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 26251                           
 26252                           ;buck.c: 360: }
 26253  00CBDE  0012               	return	
 26254  00CBE0                     l2550:
 26255                           
 26256                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 26257                           
 26258                           ; BSR set to: 1
 26259  00CBE0  0102               	movlb	2	; () banked
 26260  00CBE2  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26261  00CBE4  D013               	goto	u21480
 26262  00CBE6  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26263  00CBE8  E104               	bnz	u21470
 26264  00CBEA  0E05               	movlw	5
 26265  00CBEC  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26266  00CBEE  A0D8               	btfss	status,0,c
 26267  00CBF0  D00D               	goto	u21480
 26268  00CBF2                     u21470:
 26269                           
 26270                           ; BSR set to: 2
 26271  00CBF2  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26272  00CBF4  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26273  00CBF6  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26274  00CBF8  0A80               	xorlw	128
 26275  00CBFA  0100               	movlb	0	; () banked
 26276  00CBFC  6F76               	movwf	??__buck_operate_local& (0+255),b
 26277  00CBFE  0102               	movlb	2	; () banked
 26278  00CC00  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26279  00CC02  0A80               	xorlw	128
 26280  00CC04  0100               	movlb	0	; () banked
 26281  00CC06  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26282  00CC08  B0D8               	btfsc	status,0,c
 26283  00CC0A  D005               	goto	l2552
 26284  00CC0C                     u21480:
 26285                           
 26286                           ;buck.c: 363: {;buck.c: 364: _buck_stop();
 26287                           
 26288                           ; BSR set to: 0
 26289  00CC0C  ECD4  F0AB         	call	__buck_stop	;wreg free
 26290                           
 26291                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 26292  00CC10  0E00               	movlw	0
 26293  00CC12  6E1C               	movwf	_buck_status,c
 26294                           
 26295                           ;buck.c: 366: }
 26296  00CC14  0012               	return	
 26297  00CC16                     l2552:
 26298                           
 26299                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 26300  00CC16  EE22  F027         	lfsr	2,_os+39	;volatile
 26301  00CC1A  CFDE F076          	movff	postinc2,??__buck_operate_local
 26302  00CC1E  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 26303  00CC22  0100               	movlb	0	; () banked
 26304  00CC24  1F76               	comf	??__buck_operate_local& (0+255),f,b
 26305  00CC26  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 26306  00CC28  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 26307  00CC2A  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 26308  00CC2C  0102               	movlb	2	; () banked
 26309  00CC2E  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 26310  00CC30  0100               	movlb	0	; () banked
 26311  00CC32  2776               	addwf	??__buck_operate_local& (0+255),f,b
 26312  00CC34  0102               	movlb	2	; () banked
 26313  00CC36  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26314  00CC38  0100               	movlb	0	; () banked
 26315  00CC3A  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 26316  00CC3C  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 26317  00CC3E  D006               	goto	u21490
 26318  00CC40  0EE8               	movlw	232
 26319  00CC42  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 26320  00CC44  0E03               	movlw	3
 26321  00CC46  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 26322  00CC48  B0D8               	btfsc	status,0,c
 26323  00CC4A  D006               	goto	l2556
 26324  00CC4C                     u21490:
 26325                           
 26326                           ; BSR set to: 0
 26327                           ;buck.c: 369: {;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26328  00CC4C  05E5               	decf	_buck_dutycycle& (0+255),w,b
 26329  00CC4E  EC92  F0A1         	call	__buck_set_dutycycle
 26330                           
 26331                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 26332  00CC52  0101               	movlb	1	; () banked
 26333  00CC54  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 26334                           
 26335                           ;buck.c: 372: }
 26336  00CC56  0012               	return	
 26337  00CC58                     l2556:
 26338                           
 26339                           ;buck.c: 374: else if (os.input_current>600)
 26340                           
 26341                           ; BSR set to: 1
 26342  00CC58  0102               	movlb	2	; () banked
 26343  00CC5A  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26344  00CC5C  D011               	goto	l2558
 26345  00CC5E  0E59               	movlw	89
 26346  00CC60  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26347  00CC62  0E02               	movlw	2
 26348  00CC64  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 26349  00CC66  A0D8               	btfss	status,0,c
 26350  00CC68  D00B               	goto	l2558
 26351                           
 26352                           ; BSR set to: 2
 26353                           ;buck.c: 375: {;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 26354  00CC6A  EC0C  F098         	call	__buck_initial_dutycycle	;wreg free
 26355  00CC6E  0F05               	addlw	5
 26356  00CC70  0100               	movlb	0	; () banked
 26357  00CC72  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26358                           
 26359                           ; BSR set to: 0
 26360                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 26361  00CC74  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26362  00CC78  0E01               	movlw	1
 26363  00CC7A  EC46  F0A0         	call	__buck_set_sync_async
 26364                           
 26365                           ;buck.c: 380: }
 26366  00CC7E  0012               	return	
 26367  00CC80                     l2558:
 26368                           
 26369                           ;buck.c: 382: else;buck.c: 383: {;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000
      +                          );
 26370  00CC80  0102               	movlb	2	; () banked
 26371  00CC82  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26372  00CC84  0B30               	andlw	48
 26373  00CC86  0100               	movlb	0	; () banked
 26374  00CC88  6FE1               	movwf	_idx& (0+255),b
 26375                           
 26376                           ;buck.c: 386: idx >>= 4;
 26377  00CC8A  3BE1               	swapf	_idx& (0+255),f,b
 26378  00CC8C  0E0F               	movlw	15
 26379  00CC8E  17E1               	andwf	_idx& (0+255),f,b
 26380                           
 26381                           ; BSR set to: 0
 26382                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 26383  00CC90  51E1               	movf	_idx& (0+255),w,b
 26384  00CC92  0D02               	mullw	2
 26385  00CC94  0E0A               	movlw	low (_os+10)
 26386  00CC96  24F3               	addwf	prodl,w,c
 26387  00CC98  6ED9               	movwf	fsr2l,c
 26388  00CC9A  0E02               	movlw	high (_os+10)
 26389  00CC9C  20F4               	addwfc	prodh,w,c
 26390  00CC9E  6EDA               	movwf	fsr2h,c
 26391  00CCA0  CFDE F29E          	movff	postinc2,_now
 26392  00CCA4  CFDD F29F          	movff	postdec2,_now+1
 26393  00CCA8  0102               	movlb	2	; () banked
 26394  00CCAA  0E00               	movlw	0
 26395  00CCAC  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26396  00CCAE  0EFF               	movlw	-1
 26397  00CCB0  6FA0               	movwf	(_now+2)& (0+255),b
 26398  00CCB2  6FA1               	movwf	(_now+3)& (0+255),b
 26399                           
 26400                           ; BSR set to: 2
 26401                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 26402  00CCB4  C29E  F060         	movff	_now,___lmul@multiplier
 26403  00CCB8  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26404  00CCBC  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26405  00CCC0  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26406  00CCC4  0100               	movlb	0	; () banked
 26407  00CCC6  51E1               	movf	_idx& (0+255),w,b
 26408  00CCC8  0D02               	mullw	2
 26409  00CCCA  0E14               	movlw	low (_os+20)
 26410  00CCCC  24F3               	addwf	prodl,w,c
 26411  00CCCE  6ED9               	movwf	fsr2l,c
 26412  00CCD0  0E02               	movlw	high (_os+20)
 26413  00CCD2  20F4               	addwfc	prodh,w,c
 26414  00CCD4  6EDA               	movwf	fsr2h,c
 26415  00CCD6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26416  00CCDA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26417  00CCDE  0E00               	movlw	0
 26418  00CCE0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26419  00CCE2  0EFF               	movlw	-1
 26420  00CCE4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26421  00CCE6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26422  00CCE8  EC82  F0A5         	call	___lmul	;wreg free
 26423  00CCEC  C060  F29E         	movff	?___lmul,_now
 26424  00CCF0  C061  F29F         	movff	?___lmul+1,_now+1
 26425  00CCF4  C062  F2A0         	movff	?___lmul+2,_now+2
 26426  00CCF8  C063  F2A1         	movff	?___lmul+3,_now+3
 26427                           
 26428                           ;buck.c: 390: idx += 2;
 26429  00CCFC  0E02               	movlw	2
 26430  00CCFE  0100               	movlb	0	; () banked
 26431  00CD00  27E1               	addwf	_idx& (0+255),f,b
 26432                           
 26433                           ; BSR set to: 0
 26434                           ;buck.c: 391: idx &= 0b11;
 26435  00CD02  0E03               	movlw	3
 26436  00CD04  17E1               	andwf	_idx& (0+255),f,b
 26437                           
 26438                           ; BSR set to: 0
 26439                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 26440  00CD06  51E1               	movf	_idx& (0+255),w,b
 26441  00CD08  0D02               	mullw	2
 26442  00CD0A  0E0A               	movlw	low (_os+10)
 26443  00CD0C  24F3               	addwf	prodl,w,c
 26444  00CD0E  6ED9               	movwf	fsr2l,c
 26445  00CD10  0E02               	movlw	high (_os+10)
 26446  00CD12  20F4               	addwfc	prodh,w,c
 26447  00CD14  6EDA               	movwf	fsr2h,c
 26448  00CD16  CFDE F2A2          	movff	postinc2,_last
 26449  00CD1A  CFDD F2A3          	movff	postdec2,_last+1
 26450  00CD1E  0102               	movlb	2	; () banked
 26451  00CD20  0E00               	movlw	0
 26452  00CD22  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26453  00CD24  0EFF               	movlw	-1
 26454  00CD26  6FA4               	movwf	(_last+2)& (0+255),b
 26455  00CD28  6FA5               	movwf	(_last+3)& (0+255),b
 26456                           
 26457                           ; BSR set to: 2
 26458                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 26459  00CD2A  C2A2  F060         	movff	_last,___lmul@multiplier
 26460  00CD2E  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26461  00CD32  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26462  00CD36  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26463  00CD3A  0100               	movlb	0	; () banked
 26464  00CD3C  51E1               	movf	_idx& (0+255),w,b
 26465  00CD3E  0D02               	mullw	2
 26466  00CD40  0E14               	movlw	low (_os+20)
 26467  00CD42  24F3               	addwf	prodl,w,c
 26468  00CD44  6ED9               	movwf	fsr2l,c
 26469  00CD46  0E02               	movlw	high (_os+20)
 26470  00CD48  20F4               	addwfc	prodh,w,c
 26471  00CD4A  6EDA               	movwf	fsr2h,c
 26472  00CD4C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26473  00CD50  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26474  00CD54  0E00               	movlw	0
 26475  00CD56  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26476  00CD58  0EFF               	movlw	-1
 26477  00CD5A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26478  00CD5C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26479  00CD5E  EC82  F0A5         	call	___lmul	;wreg free
 26480  00CD62  C060  F2A2         	movff	?___lmul,_last
 26481  00CD66  C061  F2A3         	movff	?___lmul+1,_last+1
 26482  00CD6A  C062  F2A4         	movff	?___lmul+2,_last+2
 26483  00CD6E  C063  F2A5         	movff	?___lmul+3,_last+3
 26484                           
 26485                           ;buck.c: 395: if(os.input_voltage>15185)
 26486  00CD72  0102               	movlb	2	; () banked
 26487  00CD74  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 26488  00CD76  D00B               	goto	l2560
 26489  00CD78  0E52               	movlw	82
 26490  00CD7A  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26491  00CD7C  0E3B               	movlw	59
 26492  00CD7E  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 26493  00CD80  A0D8               	btfss	status,0,c
 26494  00CD82  D005               	goto	l2560
 26495                           
 26496                           ; BSR set to: 2
 26497                           ;buck.c: 396: {;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 26498  00CD84  0100               	movlb	0	; () banked
 26499  00CD86  29E5               	incf	_buck_dutycycle& (0+255),w,b
 26500  00CD88  EC92  F0A1         	call	__buck_set_dutycycle
 26501                           
 26502                           ;buck.c: 398: }
 26503  00CD8C  0012               	return	
 26504  00CD8E                     l2560:
 26505                           
 26506                           ;buck.c: 399: else;buck.c: 400: {;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 26507  00CD8E  0100               	movlb	0	; () banked
 26508  00CD90  05E5               	decf	_buck_dutycycle& (0+255),w,b
 26509  00CD92  EC92  F0A1         	call	__buck_set_dutycycle
 26510                           
 26511                           ;buck.c: 402: };buck.c: 403: };buck.c: 404: };buck.c: 405: break;
 26512  00CD96  0012               	return	
 26513  00CD98                     l2562:
 26514                           
 26515                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 26516  00CD98  0102               	movlb	2	; () banked
 26517  00CD9A  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26518  00CD9C  0012               	return	
 26519                           
 26520                           ; BSR set to: 2
 26521                           ;buck.c: 409: {;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 26522  00CD9E  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26523  00CDA0  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 26524  00CDA2  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26525  00CDA4  0A80               	xorlw	128
 26526  00CDA6  0100               	movlb	0	; () banked
 26527  00CDA8  6F76               	movwf	??__buck_operate_local& (0+255),b
 26528  00CDAA  0102               	movlb	2	; () banked
 26529  00CDAC  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26530  00CDAE  0A80               	xorlw	128
 26531  00CDB0  0100               	movlb	0	; () banked
 26532  00CDB2  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26533  00CDB4  B0D8               	btfsc	status,0,c
 26534  00CDB6  D006               	goto	l2564
 26535                           
 26536                           ; BSR set to: 0
 26537                           ;buck.c: 412: {;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 26538  00CDB8  05E5               	decf	_buck_dutycycle& (0+255),w,b
 26539  00CDBA  EC92  F0A1         	call	__buck_set_dutycycle
 26540                           
 26541                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 26542  00CDBE  0101               	movlb	1	; () banked
 26543  00CDC0  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 26544                           
 26545                           ;buck.c: 415: }
 26546  00CDC2  0012               	return	
 26547  00CDC4                     l2564:
 26548                           
 26549                           ;buck.c: 417: else if (os.input_current<200)
 26550                           
 26551                           ; BSR set to: 1
 26552  00CDC4  0102               	movlb	2	; () banked
 26553  00CDC6  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26554  00CDC8  D006               	goto	u21540
 26555  00CDCA  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26556  00CDCC  E10E               	bnz	l21831
 26557  00CDCE  0EC8               	movlw	200
 26558  00CDD0  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26559  00CDD2  B0D8               	btfsc	status,0,c
 26560  00CDD4  D00A               	goto	l2566
 26561  00CDD6                     u21540:
 26562                           
 26563                           ; BSR set to: 2
 26564                           ;buck.c: 418: {;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 26565  00CDD6  0100               	movlb	0	; () banked
 26566  00CDD8  51E5               	movf	_buck_dutycycle& (0+255),w,b
 26567  00CDDA  0FFB               	addlw	251
 26568  00CDDC  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 26572  00CDDE  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26573  00CDE2  0E00               	movlw	0
 26574  00CDE4  EC46  F0A0         	call	__buck_set_sync_async
 26575                           
 26576                           ;buck.c: 421: }
 26577  00CDE8  0012               	return	
 26578  00CDEA                     l2566:
 26579  00CDEA                     l21831:
 26580                           
 26581                           ;buck.c: 423: else;buck.c: 424: {;buck.c: 426: idx = os.timeSlot & 0b00110000;
 26582  00CDEA  0102               	movlb	2	; () banked
 26583  00CDEC  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26584  00CDEE  0B30               	andlw	48
 26585  00CDF0  0100               	movlb	0	; () banked
 26586  00CDF2  6FE1               	movwf	_idx& (0+255),b
 26587                           
 26588                           ;buck.c: 427: idx >>= 4;
 26589  00CDF4  3BE1               	swapf	_idx& (0+255),f,b
 26590  00CDF6  0E0F               	movlw	15
 26591  00CDF8  17E1               	andwf	_idx& (0+255),f,b
 26592                           
 26593                           ; BSR set to: 0
 26594                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 26595  00CDFA  51E1               	movf	_idx& (0+255),w,b
 26596  00CDFC  0D02               	mullw	2
 26597  00CDFE  0E0A               	movlw	low (_os+10)
 26598  00CE00  24F3               	addwf	prodl,w,c
 26599  00CE02  6ED9               	movwf	fsr2l,c
 26600  00CE04  0E02               	movlw	high (_os+10)
 26601  00CE06  20F4               	addwfc	prodh,w,c
 26602  00CE08  6EDA               	movwf	fsr2h,c
 26603  00CE0A  CFDE F29E          	movff	postinc2,_now
 26604  00CE0E  CFDD F29F          	movff	postdec2,_now+1
 26605  00CE12  0102               	movlb	2	; () banked
 26606  00CE14  0E00               	movlw	0
 26607  00CE16  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26608  00CE18  0EFF               	movlw	-1
 26609  00CE1A  6FA0               	movwf	(_now+2)& (0+255),b
 26610  00CE1C  6FA1               	movwf	(_now+3)& (0+255),b
 26611                           
 26612                           ; BSR set to: 2
 26613                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 26614  00CE1E  C29E  F060         	movff	_now,___lmul@multiplier
 26615  00CE22  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26616  00CE26  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26617  00CE2A  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26618  00CE2E  0100               	movlb	0	; () banked
 26619  00CE30  51E1               	movf	_idx& (0+255),w,b
 26620  00CE32  0D02               	mullw	2
 26621  00CE34  0E14               	movlw	low (_os+20)
 26622  00CE36  24F3               	addwf	prodl,w,c
 26623  00CE38  6ED9               	movwf	fsr2l,c
 26624  00CE3A  0E02               	movlw	high (_os+20)
 26625  00CE3C  20F4               	addwfc	prodh,w,c
 26626  00CE3E  6EDA               	movwf	fsr2h,c
 26627  00CE40  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26628  00CE44  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26629  00CE48  0E00               	movlw	0
 26630  00CE4A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26631  00CE4C  0EFF               	movlw	-1
 26632  00CE4E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26633  00CE50  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26634  00CE52  EC82  F0A5         	call	___lmul	;wreg free
 26635  00CE56  C060  F29E         	movff	?___lmul,_now
 26636  00CE5A  C061  F29F         	movff	?___lmul+1,_now+1
 26637  00CE5E  C062  F2A0         	movff	?___lmul+2,_now+2
 26638  00CE62  C063  F2A1         	movff	?___lmul+3,_now+3
 26639                           
 26640                           ;buck.c: 431: idx += 2;
 26641  00CE66  0E02               	movlw	2
 26642  00CE68  0100               	movlb	0	; () banked
 26643  00CE6A  27E1               	addwf	_idx& (0+255),f,b
 26644                           
 26645                           ; BSR set to: 0
 26646                           ;buck.c: 432: idx &= 0b11;
 26647  00CE6C  0E03               	movlw	3
 26648  00CE6E  17E1               	andwf	_idx& (0+255),f,b
 26649                           
 26650                           ; BSR set to: 0
 26651                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 26652  00CE70  51E1               	movf	_idx& (0+255),w,b
 26653  00CE72  0D02               	mullw	2
 26654  00CE74  0E0A               	movlw	low (_os+10)
 26655  00CE76  24F3               	addwf	prodl,w,c
 26656  00CE78  6ED9               	movwf	fsr2l,c
 26657  00CE7A  0E02               	movlw	high (_os+10)
 26658  00CE7C  20F4               	addwfc	prodh,w,c
 26659  00CE7E  6EDA               	movwf	fsr2h,c
 26660  00CE80  CFDE F2A2          	movff	postinc2,_last
 26661  00CE84  CFDD F2A3          	movff	postdec2,_last+1
 26662  00CE88  0102               	movlb	2	; () banked
 26663  00CE8A  0E00               	movlw	0
 26664  00CE8C  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26665  00CE8E  0EFF               	movlw	-1
 26666  00CE90  6FA4               	movwf	(_last+2)& (0+255),b
 26667  00CE92  6FA5               	movwf	(_last+3)& (0+255),b
 26668                           
 26669                           ; BSR set to: 2
 26670                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 26671  00CE94  C2A2  F060         	movff	_last,___lmul@multiplier
 26672  00CE98  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26673  00CE9C  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26674  00CEA0  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26675  00CEA4  0100               	movlb	0	; () banked
 26676  00CEA6  51E1               	movf	_idx& (0+255),w,b
 26677  00CEA8  0D02               	mullw	2
 26678  00CEAA  0E14               	movlw	low (_os+20)
 26679  00CEAC  24F3               	addwf	prodl,w,c
 26680  00CEAE  6ED9               	movwf	fsr2l,c
 26681  00CEB0  0E02               	movlw	high (_os+20)
 26682  00CEB2  20F4               	addwfc	prodh,w,c
 26683  00CEB4  6EDA               	movwf	fsr2h,c
 26684  00CEB6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26685  00CEBA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26686  00CEBE  0E00               	movlw	0
 26687  00CEC0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26688  00CEC2  0EFF               	movlw	-1
 26689  00CEC4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26690  00CEC6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26691  00CEC8  EC82  F0A5         	call	___lmul	;wreg free
 26692  00CECC  C060  F2A2         	movff	?___lmul,_last
 26693  00CED0  C061  F2A3         	movff	?___lmul+1,_last+1
 26694  00CED4  C062  F2A4         	movff	?___lmul+2,_last+2
 26695  00CED8  C063  F2A5         	movff	?___lmul+3,_last+3
 26696                           
 26697                           ;buck.c: 436: if(os.input_voltage>15185)
 26698  00CEDC  0102               	movlb	2	; () banked
 26699  00CEDE  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 26700  00CEE0  D00B               	goto	l2568
 26701  00CEE2  0E52               	movlw	82
 26702  00CEE4  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26703  00CEE6  0E3B               	movlw	59
 26704  00CEE8  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 26705  00CEEA  A0D8               	btfss	status,0,c
 26706  00CEEC  D005               	goto	l2568
 26707                           
 26708                           ; BSR set to: 2
 26709                           ;buck.c: 437: {;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 26710  00CEEE  0100               	movlb	0	; () banked
 26711  00CEF0  29E5               	incf	_buck_dutycycle& (0+255),w,b
 26712  00CEF2  EC92  F0A1         	call	__buck_set_dutycycle
 26713                           
 26714                           ;buck.c: 439: }
 26715  00CEF6  0012               	return	
 26716  00CEF8                     l2568:
 26717                           
 26718                           ;buck.c: 440: else;buck.c: 441: {;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 26719  00CEF8  0100               	movlb	0	; () banked
 26720  00CEFA  05E5               	decf	_buck_dutycycle& (0+255),w,b
 26721  00CEFC  EC92  F0A1         	call	__buck_set_dutycycle
 26722                           
 26723                           ;buck.c: 443: };buck.c: 444: };buck.c: 445: };buck.c: 446: break;
 26724  00CF00  0012               	return	
 26725  00CF02                     
 26726                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 26727  00CF02  0E00               	movlw	0
 26728  00CF04  6E1C               	movwf	_buck_status,c
 26729                           
 26730                           ;buck.c: 450: }
 26731  00CF06  0012               	return	
 26732  00CF08                     l2537:
 26733  00CF08  501C               	movf	_buck_status,w,c
 26734                           
 26735                           ; Switch size 1, requested type "space"
 26736                           ; Number of cases is 4, Range of values is 0 to 3
 26737                           ; switch strategies available:
 26738                           ; Name         Instructions Cycles
 26739                           ; simple_byte           13     7 (average)
 26740                           ;	Chosen strategy is simple_byte
 26741  00CF0A  0A00               	xorlw	0	; case 0
 26742  00CF0C  B4D8               	btfsc	status,2,c
 26743  00CF0E  D5CC               	goto	l2538
 26744  00CF10  0A01               	xorlw	1	; case 1
 26745  00CF12  B4D8               	btfsc	status,2,c
 26746  00CF14  D617               	goto	l2544
 26747  00CF16  0A03               	xorlw	3	; case 2
 26748  00CF18  B4D8               	btfsc	status,2,c
 26749  00CF1A  D64C               	goto	l2548
 26750  00CF1C  0A01               	xorlw	1	; case 3
 26751  00CF1E  B4D8               	btfsc	status,2,c
 26752  00CF20  D73B               	goto	l2562
 26753  00CF22  D7EF               	goto	l2570
 26754  00CF24                     __end_of__buck_operate_local:
 26755                           	opt stack 0
 26756                           tblptru	equ	0xFF8
 26757                           tblptrh	equ	0xFF7
 26758                           tblptrl	equ	0xFF6
 26759                           tablat	equ	0xFF5
 26760                           prodh	equ	0xFF4
 26761                           prodl	equ	0xFF3
 26762                           intcon	equ	0xFF2
 26763                           intcon2	equ	0xFF1
 26764                           intcon3	equ	0xFF0
 26765                           postinc0	equ	0xFEE
 26766                           wreg	equ	0xFE8
 26767                           indf1	equ	0xFE7
 26768                           postinc1	equ	0xFE6
 26769                           postdec1	equ	0xFE5
 26770                           plusw1	equ	0xFE3
 26771                           fsr1h	equ	0xFE2
 26772                           fsr1l	equ	0xFE1
 26773                           indf2	equ	0xFDF
 26774                           postinc2	equ	0xFDE
 26775                           postdec2	equ	0xFDD
 26776                           plusw2	equ	0xFDB
 26777                           fsr2h	equ	0xFDA
 26778                           fsr2l	equ	0xFD9
 26779                           status	equ	0xFD8
 26780                           
 26781 ;; *************** function __buck_stop *****************
 26782 ;; Defined at:
 26783 ;;		line 283 in file "buck.c"
 26784 ;; Parameters:    Size  Location     Type
 26785 ;;		None
 26786 ;; Auto vars:     Size  Location     Type
 26787 ;;		None
 26788 ;; Return value:  Size  Location     Type
 26789 ;;                  1    wreg      void 
 26790 ;; Registers used:
 26791 ;;		wreg, status,2, status,0
 26792 ;; Tracked objects:
 26793 ;;		On entry : 0/0
 26794 ;;		On exit  : 0/0
 26795 ;;		Unchanged: 0/0
 26796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26801 ;;Total ram usage:        0 bytes
 26802 ;; Hardware stack levels used:    1
 26803 ;; Hardware stack levels required when called:   10
 26804 ;; This function calls:
 26805 ;;		Nothing
 26806 ;; This function is called by:
 26807 ;;		__buck_operate_local
 26808 ;;		__buck_operate_remote
 26809 ;; This function uses a non-reentrant model
 26810 ;;
 26811                           
 26812                           	psect	text120
 26813  0157A8                     __ptext120:
 26814                           	opt stack 0
 26815  0157A8                     __buck_stop:
 26816                           	opt stack 18
 26817                           
 26818                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 26819                           
 26820                           ;incstack = 0
 26821  0157A8  96CA               	bcf	4042,3,c	;volatile
 26822  0157AA  98CA               	bcf	4042,4,c	;volatile
 26823  0157AC  9ACA               	bcf	4042,5,c	;volatile
 26824  0157AE  9CCA               	bcf	4042,6,c	;volatile
 26825                           
 26826                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 26827  0157B0  929E               	bcf	3998,1,c	;volatile
 26828  0157B2  A29E               	btfss	3998,1,c	;volatile
 26829  0157B4  D7FE               	goto	l2530
 26830                           
 26831                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 26832  0157B6  90BA               	bcf	4026,0,c	;volatile
 26833  0157B8  92BA               	bcf	4026,1,c	;volatile
 26834  0157BA  94BA               	bcf	4026,2,c	;volatile
 26835  0157BC  96BA               	bcf	4026,3,c	;volatile
 26836                           
 26837                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 26838  0157BE  94CA               	bcf	4042,2,c	;volatile
 26839                           
 26840                           ;buck.c: 295: LATBbits.LB1 = 0;
 26841  0157C0  928A               	bcf	3978,1,c	;volatile
 26842                           
 26843                           ;buck.c: 297: if(buck_status<0x80)
 26844  0157C2  0E80               	movlw	128
 26845  0157C4  601C               	cpfslt	_buck_status,c
 26846  0157C6  D003               	goto	l2532
 26847                           
 26848                           ;buck.c: 298: {;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 26849  0157C8  0E00               	movlw	0
 26850  0157CA  6E1C               	movwf	_buck_status,c
 26851                           
 26852                           ;buck.c: 300: }
 26853  0157CC  0012               	return	
 26854  0157CE                     l2532:
 26855                           
 26856                           ;buck.c: 301: else;buck.c: 302: {;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 26857  0157CE  0E80               	movlw	128
 26858  0157D0  6E1C               	movwf	_buck_status,c
 26859  0157D2  0012               	return	
 26860  0157D4                     __end_of__buck_stop:
 26861                           	opt stack 0
 26862                           tblptru	equ	0xFF8
 26863                           tblptrh	equ	0xFF7
 26864                           tblptrl	equ	0xFF6
 26865                           tablat	equ	0xFF5
 26866                           prodh	equ	0xFF4
 26867                           prodl	equ	0xFF3
 26868                           intcon	equ	0xFF2
 26869                           intcon2	equ	0xFF1
 26870                           intcon3	equ	0xFF0
 26871                           postinc0	equ	0xFEE
 26872                           wreg	equ	0xFE8
 26873                           indf1	equ	0xFE7
 26874                           postinc1	equ	0xFE6
 26875                           postdec1	equ	0xFE5
 26876                           plusw1	equ	0xFE3
 26877                           fsr1h	equ	0xFE2
 26878                           fsr1l	equ	0xFE1
 26879                           indf2	equ	0xFDF
 26880                           postinc2	equ	0xFDE
 26881                           postdec2	equ	0xFDD
 26882                           plusw2	equ	0xFDB
 26883                           fsr2h	equ	0xFDA
 26884                           fsr2l	equ	0xFD9
 26885                           status	equ	0xFD8
 26886                           
 26887 ;; *************** function __buck_start *****************
 26888 ;; Defined at:
 26889 ;;		line 143 in file "buck.c"
 26890 ;; Parameters:    Size  Location     Type
 26891 ;;  mode            1    wreg     enum E6632
 26892 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 26893 ;; Auto vars:     Size  Location     Type
 26894 ;;  mode            1   19[BANK0 ] enum E6632
 26895 ;;  cntr            1   21[BANK0 ] unsigned char 
 26896 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 26897 ;; Return value:  Size  Location     Type
 26898 ;;                  1    wreg      void 
 26899 ;; Registers used:
 26900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26901 ;; Tracked objects:
 26902 ;;		On entry : 0/0
 26903 ;;		On exit  : 0/0
 26904 ;;		Unchanged: 0/0
 26905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26906 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26907 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26909 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26910 ;;Total ram usage:        4 bytes
 26911 ;; Hardware stack levels used:    1
 26912 ;; Hardware stack levels required when called:   12
 26913 ;; This function calls:
 26914 ;;		__buck_initial_dutycycle
 26915 ;;		__buck_set_dutycycle
 26916 ;;		__buck_set_sync_async
 26917 ;; This function is called by:
 26918 ;;		__buck_operate_local
 26919 ;;		__buck_operate_remote
 26920 ;; This function uses a non-reentrant model
 26921 ;;
 26922                           
 26923                           	psect	text121
 26924  012D14                     __ptext121:
 26925                           	opt stack 0
 26926  012D14                     __buck_start:
 26927                           	opt stack 16
 26928                           
 26929                           ;incstack = 0
 26930                           ;__buck_start@mode stored from wreg
 26931  012D14  0100               	movlb	0	; () banked
 26932  012D16  6F73               	movwf	__buck_start@mode& (0+255),b
 26933                           
 26934                           ;buck.c: 145: uint8_t startup_dutycycle;;buck.c: 146: uint8_t cntr;;buck.c: 149: calibra
      +                          tionParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0;
 26935  012D18  0E00               	movlw	0
 26936  012D1A  0103               	movlb	3	; () banked
 26937  012D1C  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 26938  012D1E  0E00               	movlw	0
 26939  012D20  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 26940                           
 26941                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 26942  012D22  0E00               	movlw	0
 26943  012D24  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 26944  012D26  0E00               	movlw	0
 26945  012D28  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 26946                           
 26947                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 26948  012D2A  0E00               	movlw	0
 26949  012D2C  0100               	movlb	0	; () banked
 26950  012D2E  6F75               	movwf	__buck_start@cntr& (0+255),b
 26951  012D30                     l19969:
 26952                           
 26953                           ; BSR set to: 0
 26954  012D30  0E03               	movlw	3
 26955  012D32  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 26956  012D34  D001               	goto	l2499
 26957  012D36  D01E               	goto	u18840
 26958  012D38                     l2499:
 26959                           
 26960                           ; BSR set to: 0
 26961                           ;buck.c: 154: {;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Auto
      +                          Calibration -= os.input_current_adc[cntr];
 26962                           
 26963                           ; BSR set to: 0
 26964  012D38  5175               	movf	__buck_start@cntr& (0+255),w,b
 26965  012D3A  0D02               	mullw	2
 26966  012D3C  0E14               	movlw	low (_os+20)
 26967  012D3E  24F3               	addwf	prodl,w,c
 26968  012D40  6ED9               	movwf	fsr2l,c
 26969  012D42  0E02               	movlw	high (_os+20)
 26970  012D44  20F4               	addwfc	prodh,w,c
 26971  012D46  6EDA               	movwf	fsr2h,c
 26972  012D48  50DE               	movf	postinc2,w,c
 26973  012D4A  0103               	movlb	3	; () banked
 26974  012D4C  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 26975  012D4E  50DD               	movf	postdec2,w,c
 26976  012D50  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 26977                           
 26978                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 26979  012D52  0100               	movlb	0	; () banked
 26980  012D54  5175               	movf	__buck_start@cntr& (0+255),w,b
 26981  012D56  0D02               	mullw	2
 26982  012D58  0E29               	movlw	low (_os+41)
 26983  012D5A  24F3               	addwf	prodl,w,c
 26984  012D5C  6ED9               	movwf	fsr2l,c
 26985  012D5E  0E02               	movlw	high (_os+41)
 26986  012D60  20F4               	addwfc	prodh,w,c
 26987  012D62  6EDA               	movwf	fsr2h,c
 26988  012D64  50DE               	movf	postinc2,w,c
 26989  012D66  0103               	movlb	3	; () banked
 26990  012D68  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 26991  012D6A  50DD               	movf	postdec2,w,c
 26992  012D6C  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 26993                           
 26994                           ; BSR set to: 3
 26995  012D6E  0100               	movlb	0	; () banked
 26996  012D70  2B75               	incf	__buck_start@cntr& (0+255),f,b
 26997  012D72  D7DE               	goto	l19969
 26998  012D74                     u18840:
 26999                           
 27000                           ; BSR set to: 0
 27001                           ;buck.c: 159: };buck.c: 163: PR2 = 63;
 27002                           
 27003                           ; BSR set to: 0
 27004  012D74  0E3F               	movlw	63
 27005  012D76  6ECB               	movwf	4043,c	;volatile
 27006                           
 27007                           ;buck.c: 165: TMR2 = 0x00;
 27008  012D78  0E00               	movlw	0
 27009  012D7A  6ECC               	movwf	4044,c	;volatile
 27010                           
 27011                           ; BSR set to: 0
 27012                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 27013  012D7C  86CA               	bsf	4042,3,c	;volatile
 27014  012D7E  88CA               	bsf	4042,4,c	;volatile
 27015  012D80  8ACA               	bsf	4042,5,c	;volatile
 27016  012D82  8CCA               	bsf	4042,6,c	;volatile
 27017                           
 27018                           ; BSR set to: 0
 27019                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 27020  012D84  929E               	bcf	3998,1,c	;volatile
 27021                           
 27022                           ; BSR set to: 0
 27023                           ;buck.c: 172: if(buck_status<0x80)
 27024  012D86  0E80               	movlw	128
 27025  012D88  601C               	cpfslt	_buck_status,c
 27026  012D8A  D002               	goto	l2501
 27027                           
 27028                           ; BSR set to: 0
 27029                           ;buck.c: 173: {;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27030  012D8C  0E03               	movlw	3
 27031  012D8E  D001               	goto	L15
 27032  012D90                     l2501:
 27033                           
 27034                           ; BSR set to: 0
 27035                           ;buck.c: 176: else;buck.c: 177: {;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRON
      +                          OUS;
 27036                           
 27037                           ; BSR set to: 0
 27038  012D90  0E83               	movlw	131
 27039  012D92                     L15:
 27040  012D92  6E1C               	movwf	_buck_status,c
 27041                           
 27042                           ; BSR set to: 0
 27043                           ;buck.c: 179: };buck.c: 182: CCP1CON = 0x00;
 27044  012D94  0E00               	movlw	0
 27045  012D96  6EBA               	movwf	4026,c	;volatile
 27046                           
 27047                           ; BSR set to: 0
 27048                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 27049  012D98  EC0C  F098         	call	__buck_initial_dutycycle	;wreg free
 27050  012D9C  0100               	movlb	0	; () banked
 27051  012D9E  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 27052                           
 27053                           ; BSR set to: 0
 27054                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 27055  012DA0  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27056  012DA2  EC92  F0A1         	call	__buck_set_dutycycle
 27057                           
 27058                           ;buck.c: 188: INTCONbits.GIE = 0;
 27059  012DA6  9EF2               	bcf	intcon,7,c	;volatile
 27060                           
 27061                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 27062  012DA8  84CA               	bsf	4042,2,c	;volatile
 27063                           
 27064                           ;buck.c: 192: CCP1CON |= 0b00001100;
 27065  012DAA  0E0C               	movlw	12
 27066  012DAC  12BA               	iorwf	4026,f,c	;volatile
 27067                           
 27068                           ;buck.c: 194: CCP1CON |= 0b10000000;
 27069  012DAE  8EBA               	bsf	4026,7,c	;volatile
 27070                           
 27071                           ;buck.c: 196: INTCONbits.GIE = 1;
 27072  012DB0  8EF2               	bsf	intcon,7,c	;volatile
 27073  012DB2  A29E               	btfss	3998,1,c	;volatile
 27074  012DB4  D7FE               	goto	l2504
 27075                           
 27076                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 27077  012DB6  0100               	movlb	0	; () banked
 27078  012DB8  0573               	decf	__buck_start@mode& (0+255),w,b
 27079  012DBA  A4D8               	btfss	status,2,c
 27080  012DBC  D008               	goto	l2506
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;buck.c: 203: {;buck.c: 205: if(dutycycle!=startup_dutycycle)
 27084  012DBE  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27085  012DC0  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 27086  012DC2  B4D8               	btfsc	status,2,c
 27087  012DC4  0012               	return	
 27088                           
 27089                           ; BSR set to: 0
 27090                           ;buck.c: 206: {;buck.c: 207: _buck_set_dutycycle(dutycycle);
 27091  012DC6  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 27092  012DC8  EC92  F0A1         	call	__buck_set_dutycycle
 27093                           
 27094                           ;buck.c: 208: };buck.c: 209: }
 27095  012DCC  0012               	return	
 27096  012DCE                     l2506:
 27097                           
 27098                           ;buck.c: 210: else;buck.c: 211: {;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONO
      +                          US, dutycycle);
 27099  012DCE  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 27100  012DD2  0E00               	movlw	0
 27101  012DD4  EC46  F0A0         	call	__buck_set_sync_async
 27102  012DD8  0012               	return	
 27103  012DDA                     __end_of__buck_start:
 27104                           	opt stack 0
 27105                           tblptru	equ	0xFF8
 27106                           tblptrh	equ	0xFF7
 27107                           tblptrl	equ	0xFF6
 27108                           tablat	equ	0xFF5
 27109                           prodh	equ	0xFF4
 27110                           prodl	equ	0xFF3
 27111                           intcon	equ	0xFF2
 27112                           intcon2	equ	0xFF1
 27113                           intcon3	equ	0xFF0
 27114                           postinc0	equ	0xFEE
 27115                           wreg	equ	0xFE8
 27116                           indf1	equ	0xFE7
 27117                           postinc1	equ	0xFE6
 27118                           postdec1	equ	0xFE5
 27119                           plusw1	equ	0xFE3
 27120                           fsr1h	equ	0xFE2
 27121                           fsr1l	equ	0xFE1
 27122                           indf2	equ	0xFDF
 27123                           postinc2	equ	0xFDE
 27124                           postdec2	equ	0xFDD
 27125                           plusw2	equ	0xFDB
 27126                           fsr2h	equ	0xFDA
 27127                           fsr2l	equ	0xFD9
 27128                           status	equ	0xFD8
 27129                           
 27130 ;; *************** function __buck_set_sync_async *****************
 27131 ;; Defined at:
 27132 ;;		line 217 in file "buck.c"
 27133 ;; Parameters:    Size  Location     Type
 27134 ;;  mode            1    wreg     enum E6632
 27135 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 27136 ;; Auto vars:     Size  Location     Type
 27137 ;;  mode            1    3[BANK0 ] enum E6632
 27138 ;; Return value:  Size  Location     Type
 27139 ;;                  1    wreg      void 
 27140 ;; Registers used:
 27141 ;;		wreg, status,2, status,0, cstack
 27142 ;; Tracked objects:
 27143 ;;		On entry : 0/0
 27144 ;;		On exit  : 0/0
 27145 ;;		Unchanged: 0/0
 27146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27147 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27151 ;;Total ram usage:        2 bytes
 27152 ;; Hardware stack levels used:    1
 27153 ;; Hardware stack levels required when called:   11
 27154 ;; This function calls:
 27155 ;;		__buck_set_dutycycle
 27156 ;; This function is called by:
 27157 ;;		__buck_start
 27158 ;;		__buck_operate_local
 27159 ;;		__buck_operate_remote
 27160 ;; This function uses a non-reentrant model
 27161 ;;
 27162                           
 27163                           	psect	text122
 27164  01408C                     __ptext122:
 27165                           	opt stack 0
 27166  01408C                     __buck_set_sync_async:
 27167                           	opt stack 16
 27168                           
 27169                           ;incstack = 0
 27170                           ;__buck_set_sync_async@mode stored from wreg
 27171  01408C  0100               	movlb	0	; () banked
 27172  01408E  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 27173                           
 27174                           ;buck.c: 219: switch(mode)
 27175  014090  D02E               	goto	l2512
 27176  014092                     l2513:
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 27180  014092  96CA               	bcf	4042,3,c	;volatile
 27181  014094  98CA               	bcf	4042,4,c	;volatile
 27182  014096  9ACA               	bcf	4042,5,c	;volatile
 27183  014098  9CCA               	bcf	4042,6,c	;volatile
 27184                           
 27185                           ;buck.c: 228: INTCONbits.GIE = 0;
 27186  01409A  9EF2               	bcf	intcon,7,c	;volatile
 27187                           
 27188                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 27189  01409C  929E               	bcf	3998,1,c	;volatile
 27190  01409E                     
 27191                           ; BSR set to: 0
 27192  01409E  A29E               	btfss	3998,1,c	;volatile
 27193  0140A0  D7FE               	goto	l2515
 27194                           
 27195                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 27196  0140A2  9EBA               	bcf	4026,7,c	;volatile
 27197                           
 27198                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 27199  0140A4  9CBA               	bcf	4026,6,c	;volatile
 27200                           
 27201                           ;buck.c: 237: if(buck_status<0x80)
 27202  0140A6  0E80               	movlw	128
 27203  0140A8  601C               	cpfslt	_buck_status,c
 27204  0140AA  D002               	goto	l2517
 27205                           
 27206                           ;buck.c: 238: {;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 27207  0140AC  0E02               	movlw	2
 27208  0140AE  D001               	goto	L16
 27209  0140B0                     l2517:
 27210                           
 27211                           ;buck.c: 241: else;buck.c: 242: {;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRO
      +                          NOUS;
 27212  0140B0  0E82               	movlw	130
 27213  0140B2                     L16:
 27214  0140B2  6E1C               	movwf	_buck_status,c
 27215                           
 27216                           ;buck.c: 244: };buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 27217  0140B4  0100               	movlb	0	; () banked
 27218  0140B6  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27219  0140B8  EC92  F0A1         	call	__buck_set_dutycycle
 27220                           
 27221                           ;buck.c: 248: INTCONbits.GIE = 1;
 27222  0140BC  8EF2               	bsf	intcon,7,c	;volatile
 27223                           
 27224                           ;buck.c: 249: break;
 27225  0140BE  0012               	return	
 27226  0140C0                     
 27227                           ;buck.c: 255: if(buck_status<0x80)
 27228  0140C0  0E80               	movlw	128
 27229  0140C2  601C               	cpfslt	_buck_status,c
 27230  0140C4  D002               	goto	l2521
 27231                           
 27232                           ;buck.c: 256: {;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27233  0140C6  0E03               	movlw	3
 27234  0140C8  D001               	goto	L17
 27235  0140CA                     l2521:
 27236                           
 27237                           ;buck.c: 259: else;buck.c: 260: {;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRON
      +                          OUS;
 27238  0140CA  0E83               	movlw	131
 27239  0140CC                     L17:
 27240  0140CC  6E1C               	movwf	_buck_status,c
 27241                           
 27242                           ;buck.c: 262: };buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 27243  0140CE  96CA               	bcf	4042,3,c	;volatile
 27244  0140D0  98CA               	bcf	4042,4,c	;volatile
 27245  0140D2  9ACA               	bcf	4042,5,c	;volatile
 27246  0140D4  9CCA               	bcf	4042,6,c	;volatile
 27247                           
 27248                           ;buck.c: 267: INTCONbits.GIE = 0;
 27249  0140D6  9EF2               	bcf	intcon,7,c	;volatile
 27250                           
 27251                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 27252  0140D8  929E               	bcf	3998,1,c	;volatile
 27253  0140DA  A29E               	btfss	3998,1,c	;volatile
 27254  0140DC  D7FE               	goto	l2524
 27255                           
 27256                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 27257  0140DE  0100               	movlb	0	; () banked
 27258  0140E0  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27259  0140E2  EC92  F0A1         	call	__buck_set_dutycycle
 27260                           
 27261                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 27262  0140E6  8EBA               	bsf	4026,7,c	;volatile
 27263                           
 27264                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 27265  0140E8  9CBA               	bcf	4026,6,c	;volatile
 27266                           
 27267                           ;buck.c: 278: INTCONbits.GIE = 1;
 27268  0140EA  8EF2               	bsf	intcon,7,c	;volatile
 27269                           
 27270                           ;buck.c: 280: }
 27271                           
 27272                           ;buck.c: 279: break;
 27273  0140EC  0012               	return	
 27274  0140EE                     l2512:
 27275  0140EE  0100               	movlb	0	; () banked
 27276  0140F0  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 27277                           
 27278                           ; Switch size 1, requested type "space"
 27279                           ; Number of cases is 2, Range of values is 0 to 1
 27280                           ; switch strategies available:
 27281                           ; Name         Instructions Cycles
 27282                           ; simple_byte            7     4 (average)
 27283                           ;	Chosen strategy is simple_byte
 27284  0140F2  0A00               	xorlw	0	; case 0
 27285  0140F4  B4D8               	btfsc	status,2,c
 27286  0140F6  D7CD               	goto	l2513
 27287  0140F8  0A01               	xorlw	1	; case 1
 27288  0140FA  A4D8               	btfss	status,2,c
 27289  0140FC  0012               	return	
 27290  0140FE  D7E0               	goto	l2520
 27291  014100                     __end_of__buck_set_sync_async:
 27292                           	opt stack 0
 27293                           tblptru	equ	0xFF8
 27294                           tblptrh	equ	0xFF7
 27295                           tblptrl	equ	0xFF6
 27296                           tablat	equ	0xFF5
 27297                           prodh	equ	0xFF4
 27298                           prodl	equ	0xFF3
 27299                           intcon	equ	0xFF2
 27300                           intcon2	equ	0xFF1
 27301                           intcon3	equ	0xFF0
 27302                           postinc0	equ	0xFEE
 27303                           wreg	equ	0xFE8
 27304                           indf1	equ	0xFE7
 27305                           postinc1	equ	0xFE6
 27306                           postdec1	equ	0xFE5
 27307                           plusw1	equ	0xFE3
 27308                           fsr1h	equ	0xFE2
 27309                           fsr1l	equ	0xFE1
 27310                           indf2	equ	0xFDF
 27311                           postinc2	equ	0xFDE
 27312                           postdec2	equ	0xFDD
 27313                           plusw2	equ	0xFDB
 27314                           fsr2h	equ	0xFDA
 27315                           fsr2l	equ	0xFD9
 27316                           status	equ	0xFD8
 27317                           
 27318 ;; *************** function __buck_set_dutycycle *****************
 27319 ;; Defined at:
 27320 ;;		line 98 in file "buck.c"
 27321 ;; Parameters:    Size  Location     Type
 27322 ;;  dutyCycle       1    wreg     unsigned char 
 27323 ;; Auto vars:     Size  Location     Type
 27324 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 27325 ;; Return value:  Size  Location     Type
 27326 ;;                  1    wreg      void 
 27327 ;; Registers used:
 27328 ;;		wreg, status,2, status,0
 27329 ;; Tracked objects:
 27330 ;;		On entry : 0/0
 27331 ;;		On exit  : 0/0
 27332 ;;		Unchanged: 0/0
 27333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27338 ;;Total ram usage:        2 bytes
 27339 ;; Hardware stack levels used:    1
 27340 ;; Hardware stack levels required when called:   10
 27341 ;; This function calls:
 27342 ;;		Nothing
 27343 ;; This function is called by:
 27344 ;;		__buck_start
 27345 ;;		__buck_set_sync_async
 27346 ;;		__buck_operate_local
 27347 ;;		__buck_operate_remote
 27348 ;; This function uses a non-reentrant model
 27349 ;;
 27350                           
 27351                           	psect	text123
 27352  014324                     __ptext123:
 27353                           	opt stack 0
 27354  014324                     __buck_set_dutycycle:
 27355                           	opt stack 16
 27356                           
 27357                           ;incstack = 0
 27358                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 27359  014324  0100               	movlb	0	; () banked
 27360  014326  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27361                           
 27362                           ;buck.c: 101: if(dutyCycle>242)
 27363  014328  0EF2               	movlw	242
 27364  01432A  0100               	movlb	0	; () banked
 27365  01432C  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27366  01432E  D002               	goto	l2480
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;buck.c: 102: dutyCycle = 242;
 27370  014330  0EF2               	movlw	242
 27371  014332  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27372  014334                     l2480:
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 27376                           
 27377                           ; BSR set to: 0
 27378  014334  0E03               	movlw	3
 27379  014336  181C               	xorwf	_buck_status,w,c
 27380  014338  B4D8               	btfsc	status,2,c
 27381  01433A  D004               	goto	u17860
 27382                           
 27383                           ; BSR set to: 0
 27384  01433C  0E83               	movlw	131
 27385  01433E  181C               	xorwf	_buck_status,w,c
 27386  014340  A4D8               	btfss	status,2,c
 27387  014342  D005               	goto	l2484
 27388  014344                     u17860:
 27389                           
 27390                           ; BSR set to: 0
 27391                           ;buck.c: 104: {;buck.c: 105: if(dutyCycle<150)
 27392                           
 27393                           ; BSR set to: 0
 27394  014344  0E96               	movlw	150
 27395  014346  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27396  014348  D002               	goto	l2484
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;buck.c: 106: dutyCycle = 150;
 27400  01434A  0E96               	movlw	150
 27401  01434C  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27402  01434E                     l2484:
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;buck.c: 107: };buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BU
      +                          CK_STATUS_REMOTE_ASYNCHRONOUS)
 27406                           
 27407                           ; BSR set to: 0
 27408                           
 27409                           ; BSR set to: 0
 27410  01434E  0E02               	movlw	2
 27411  014350  181C               	xorwf	_buck_status,w,c
 27412  014352  B4D8               	btfsc	status,2,c
 27413  014354  D004               	goto	u17890
 27414                           
 27415                           ; BSR set to: 0
 27416  014356  0E82               	movlw	130
 27417  014358  181C               	xorwf	_buck_status,w,c
 27418  01435A  A4D8               	btfss	status,2,c
 27419  01435C  D005               	goto	l2488
 27420  01435E                     u17890:
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;buck.c: 109: {;buck.c: 110: if(dutyCycle<40)
 27424                           
 27425                           ; BSR set to: 0
 27426  01435E  0E28               	movlw	40
 27427  014360  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27428  014362  D002               	goto	l2488
 27429                           
 27430                           ; BSR set to: 0
 27431                           ;buck.c: 111: dutyCycle = 40;
 27432  014364  0E28               	movlw	40
 27433  014366  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27434  014368                     l2488:
 27435                           
 27436                           ; BSR set to: 0
 27437                           ;buck.c: 112: };buck.c: 114: buck_dutycycle = dutyCycle;
 27438                           
 27439                           ; BSR set to: 0
 27440                           
 27441                           ; BSR set to: 0
 27442  014368  C061  F0E5         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 27443                           
 27444                           ; BSR set to: 0
 27445                           ;buck.c: 116: INTCONbits.GIE = 0;
 27446  01436C  9EF2               	bcf	intcon,7,c	;volatile
 27447                           
 27448                           ; BSR set to: 0
 27449                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 27450  01436E  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 27451  014372  0E03               	movlw	3
 27452  014374  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 27453  014376  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 27454  014378  50BA               	movf	4026,w,c	;volatile
 27455  01437A  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 27456  01437C  0BCF               	andlw	-49
 27457  01437E  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 27458  014380  6EBA               	movwf	4026,c	;volatile
 27459                           
 27460                           ; BSR set to: 0
 27461                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 27462  014382  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 27463  014384  42E8               	rrncf	wreg,f,c
 27464  014386  0B3F               	andlw	63
 27465  014388  6EBB               	movwf	4027,c	;volatile
 27466                           
 27467                           ; BSR set to: 0
 27468                           ;buck.c: 122: INTCONbits.GIE = 1;
 27469  01438A  8EF2               	bsf	intcon,7,c	;volatile
 27470                           
 27471                           ; BSR set to: 0
 27472  01438C  0012               	return		;funcret
 27473  01438E                     __end_of__buck_set_dutycycle:
 27474                           	opt stack 0
 27475                           tblptru	equ	0xFF8
 27476                           tblptrh	equ	0xFF7
 27477                           tblptrl	equ	0xFF6
 27478                           tablat	equ	0xFF5
 27479                           prodh	equ	0xFF4
 27480                           prodl	equ	0xFF3
 27481                           intcon	equ	0xFF2
 27482                           intcon2	equ	0xFF1
 27483                           intcon3	equ	0xFF0
 27484                           postinc0	equ	0xFEE
 27485                           wreg	equ	0xFE8
 27486                           indf1	equ	0xFE7
 27487                           postinc1	equ	0xFE6
 27488                           postdec1	equ	0xFE5
 27489                           plusw1	equ	0xFE3
 27490                           fsr1h	equ	0xFE2
 27491                           fsr1l	equ	0xFE1
 27492                           indf2	equ	0xFDF
 27493                           postinc2	equ	0xFDE
 27494                           postdec2	equ	0xFDD
 27495                           plusw2	equ	0xFDB
 27496                           fsr2h	equ	0xFDA
 27497                           fsr2l	equ	0xFD9
 27498                           status	equ	0xFD8
 27499                           
 27500 ;; *************** function __buck_initial_dutycycle *****************
 27501 ;; Defined at:
 27502 ;;		line 81 in file "buck.c"
 27503 ;; Parameters:    Size  Location     Type
 27504 ;;		None
 27505 ;; Auto vars:     Size  Location     Type
 27506 ;;  dc              4   14[BANK0 ] unsigned long 
 27507 ;; Return value:  Size  Location     Type
 27508 ;;                  1    wreg      unsigned char 
 27509 ;; Registers used:
 27510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27511 ;; Tracked objects:
 27512 ;;		On entry : 0/0
 27513 ;;		On exit  : 0/0
 27514 ;;		Unchanged: 0/0
 27515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27517 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27519 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27520 ;;Total ram usage:        5 bytes
 27521 ;; Hardware stack levels used:    1
 27522 ;; Hardware stack levels required when called:   11
 27523 ;; This function calls:
 27524 ;;		___lldiv
 27525 ;; This function is called by:
 27526 ;;		__buck_start
 27527 ;;		__buck_operate_local
 27528 ;;		__buck_operate_remote
 27529 ;; This function uses a non-reentrant model
 27530 ;;
 27531                           
 27532                           	psect	text124
 27533  013018                     __ptext124:
 27534                           	opt stack 0
 27535  013018                     __buck_initial_dutycycle:
 27536                           	opt stack 16
 27537                           
 27538                           ;buck.c: 83: uint32_t dc;;buck.c: 85: if(os.input_voltage<os.output_voltage)
 27539                           
 27540                           ; BSR set to: 0
 27541                           ;incstack = 0
 27542  013018  0102               	movlb	2	; () banked
 27543  01301A  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27544  01301C  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27545  01301E  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27546  013020  0A80               	xorlw	128
 27547  013022  0100               	movlb	0	; () banked
 27548  013024  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 27549  013026  0102               	movlb	2	; () banked
 27550  013028  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27551  01302A  0A80               	xorlw	128
 27552  01302C  0100               	movlb	0	; () banked
 27553  01302E  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 27554  013030  B0D8               	btfsc	status,0,c
 27555  013032  D002               	goto	l2474
 27556                           
 27557                           ; BSR set to: 0
 27558                           ;buck.c: 86: return 242;
 27559  013034  0EF2               	movlw	242
 27560                           
 27561                           ; BSR set to: 0
 27562  013036  0012               	return	
 27563  013038                     l2474:
 27564                           
 27565                           ; BSR set to: 0
 27566                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 27567                           
 27568                           ; BSR set to: 0
 27569  013038  EE22  F027         	lfsr	2,_os+39	;volatile
 27570  01303C  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 27571  013040  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 27572  013044  0E00               	movlw	0
 27573  013046  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 27574  013048  0EFF               	movlw	-1
 27575  01304A  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27576  01304C  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;buck.c: 88: dc <<= 8;
 27580  01304E  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 27581  013052  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 27582  013056  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 27583  01305A  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 27584                           
 27585                           ; BSR set to: 0
 27586                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 27587  01305C  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 27588  013060  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 27589  013064  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 27590  013068  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 27591  01306C  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 27592  013070  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 27593  013074  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 27594  013076  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 27595  013078  EC13  F09D         	call	___lldiv	;wreg free
 27596  01307C  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 27597  013080  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 27598  013084  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 27599  013088  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 27600                           
 27601                           ;buck.c: 91: if(dc>242)
 27602  01308C  0100               	movlb	0	; () banked
 27603  01308E  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 27604  013090  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 27605  013092  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 27606  013094  E104               	bnz	u18130
 27607  013096  0EF3               	movlw	243
 27608  013098  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 27609  01309A  A0D8               	btfss	status,0,c
 27610  01309C  D008               	goto	l2476
 27611  01309E                     u18130:
 27612                           
 27613                           ; BSR set to: 0
 27614                           ;buck.c: 92: dc = 242;
 27615  01309E  0EF2               	movlw	242
 27616  0130A0  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 27617  0130A2  0E00               	movlw	0
 27618  0130A4  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 27619  0130A6  0E00               	movlw	0
 27620  0130A8  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27621  0130AA  0E00               	movlw	0
 27622  0130AC  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27623  0130AE                     l2476:
 27624                           
 27625                           ; BSR set to: 0
 27626                           ;buck.c: 93: if(dc<150)
 27627                           
 27628                           ; BSR set to: 0
 27629  0130AE  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 27630  0130B0  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 27631  0130B2  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 27632  0130B4  E10C               	bnz	l2477
 27633  0130B6  0E96               	movlw	150
 27634  0130B8  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 27635  0130BA  B0D8               	btfsc	status,0,c
 27636  0130BC  D008               	goto	l2477
 27637                           
 27638                           ; BSR set to: 0
 27639                           ;buck.c: 94: dc = 150;
 27640  0130BE  0E96               	movlw	150
 27641  0130C0  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 27642  0130C2  0E00               	movlw	0
 27643  0130C4  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 27644  0130C6  0E00               	movlw	0
 27645  0130C8  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27646  0130CA  0E00               	movlw	0
 27647  0130CC  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27648  0130CE                     l2477:
 27649                           
 27650                           ; BSR set to: 0
 27651                           ;buck.c: 95: return (uint8_t) dc;
 27652  0130CE  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 27653  0130D0  0012               	return	
 27654  0130D2                     __end_of__buck_initial_dutycycle:
 27655                           	opt stack 0
 27656                           tblptru	equ	0xFF8
 27657                           tblptrh	equ	0xFF7
 27658                           tblptrl	equ	0xFF6
 27659                           tablat	equ	0xFF5
 27660                           prodh	equ	0xFF4
 27661                           prodl	equ	0xFF3
 27662                           intcon	equ	0xFF2
 27663                           intcon2	equ	0xFF1
 27664                           intcon3	equ	0xFF0
 27665                           postinc0	equ	0xFEE
 27666                           wreg	equ	0xFE8
 27667                           indf1	equ	0xFE7
 27668                           postinc1	equ	0xFE6
 27669                           postdec1	equ	0xFE5
 27670                           plusw1	equ	0xFE3
 27671                           fsr1h	equ	0xFE2
 27672                           fsr1l	equ	0xFE1
 27673                           indf2	equ	0xFDF
 27674                           postinc2	equ	0xFDE
 27675                           postdec2	equ	0xFDD
 27676                           plusw2	equ	0xFDB
 27677                           fsr2h	equ	0xFDA
 27678                           fsr2l	equ	0xFD9
 27679                           status	equ	0xFD8
 27680                           
 27681 ;; *************** function ___lldiv *****************
 27682 ;; Defined at:
 27683 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 27684 ;; Parameters:    Size  Location     Type
 27685 ;;  dividend        4    0[BANK0 ] unsigned long 
 27686 ;;  divisor         4    4[BANK0 ] unsigned long 
 27687 ;; Auto vars:     Size  Location     Type
 27688 ;;  quotient        4    8[BANK0 ] unsigned long 
 27689 ;;  counter         1   12[BANK0 ] unsigned char 
 27690 ;; Return value:  Size  Location     Type
 27691 ;;                  4    0[BANK0 ] unsigned long 
 27692 ;; Registers used:
 27693 ;;		wreg, status,2, status,0
 27694 ;; Tracked objects:
 27695 ;;		On entry : 0/0
 27696 ;;		On exit  : 0/0
 27697 ;;		Unchanged: 0/0
 27698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27699 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27700 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27702 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27703 ;;Total ram usage:       13 bytes
 27704 ;; Hardware stack levels used:    1
 27705 ;; Hardware stack levels required when called:   10
 27706 ;; This function calls:
 27707 ;;		Nothing
 27708 ;; This function is called by:
 27709 ;;		__buck_initial_dutycycle
 27710 ;;		__get_output_power
 27711 ;;		_log_generate_entry
 27712 ;; This function uses a non-reentrant model
 27713 ;;
 27714                           
 27715                           	psect	text125
 27716  013A26                     __ptext125:
 27717                           	opt stack 0
 27718  013A26                     ___lldiv:
 27719                           	opt stack 18
 27720                           
 27721                           ; BSR set to: 0
 27722                           ;incstack = 0
 27723  013A26  0E00               	movlw	0
 27724  013A28  0100               	movlb	0	; () banked
 27725  013A2A  6F68               	movwf	___lldiv@quotient& (0+255),b
 27726  013A2C  0E00               	movlw	0
 27727  013A2E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 27728  013A30  0E00               	movlw	0
 27729  013A32  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 27730  013A34  0E00               	movlw	0
 27731  013A36  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 27732                           
 27733                           ; BSR set to: 0
 27734  013A38  5164               	movf	___lldiv@divisor& (0+255),w,b
 27735  013A3A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 27736  013A3C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 27737  013A3E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 27738  013A40  B4D8               	btfsc	status,2,c
 27739  013A42  D02A               	goto	l3352
 27740                           
 27741                           ; BSR set to: 0
 27742  013A44  0E01               	movlw	1
 27743  013A46  6F6C               	movwf	___lldiv@counter& (0+255),b
 27744  013A48  D006               	goto	l3347
 27745  013A4A                     
 27746                           ; BSR set to: 0
 27747                           
 27748                           ; BSR set to: 0
 27749  013A4A  90D8               	bcf	status,0,c
 27750  013A4C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 27751  013A4E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 27752  013A50  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 27753  013A52  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 27754  013A54  2B6C               	incf	___lldiv@counter& (0+255),f,b
 27755  013A56                     l3347:
 27756                           
 27757                           ; BSR set to: 0
 27758                           
 27759                           ; BSR set to: 0
 27760  013A56  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 27761  013A58  D7F8               	goto	l3348
 27762  013A5A                     u17960:
 27763                           
 27764                           ; BSR set to: 0
 27765                           
 27766                           ; BSR set to: 0
 27767                           
 27768                           ; BSR set to: 0
 27769  013A5A  90D8               	bcf	status,0,c
 27770  013A5C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 27771  013A5E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 27772  013A60  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 27773  013A62  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 27774                           
 27775                           ; BSR set to: 0
 27776  013A64  5164               	movf	___lldiv@divisor& (0+255),w,b
 27777  013A66  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 27778  013A68  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27779  013A6A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 27780  013A6C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27781  013A6E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 27782  013A70  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27783  013A72  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 27784  013A74  A0D8               	btfss	status,0,c
 27785  013A76  D009               	goto	l3351
 27786                           
 27787                           ; BSR set to: 0
 27788  013A78  5164               	movf	___lldiv@divisor& (0+255),w,b
 27789  013A7A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 27790  013A7C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27791  013A7E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 27792  013A80  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27793  013A82  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 27794  013A84  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27795  013A86  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 27796                           
 27797                           ; BSR set to: 0
 27798  013A88  8168               	bsf	___lldiv@quotient& (0+255),0,b
 27799  013A8A                     l3351:
 27800                           
 27801                           ; BSR set to: 0
 27802                           
 27803                           ; BSR set to: 0
 27804  013A8A  90D8               	bcf	status,0,c
 27805  013A8C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 27806  013A8E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 27807  013A90  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 27808  013A92  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 27809                           
 27810                           ; BSR set to: 0
 27811  013A94  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 27812  013A96  D7E1               	goto	u17960
 27813  013A98                     l3352:
 27814                           
 27815                           ; BSR set to: 0
 27816                           
 27817                           ; BSR set to: 0
 27818  013A98  C068  F060         	movff	___lldiv@quotient,?___lldiv
 27819  013A9C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 27820  013AA0  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 27821  013AA4  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 27822                           
 27823                           ; BSR set to: 0
 27824  013AA8  0012               	return		;funcret
 27825  013AAA                     __end_of___lldiv:
 27826                           	opt stack 0
 27827                           tblptru	equ	0xFF8
 27828                           tblptrh	equ	0xFF7
 27829                           tblptrl	equ	0xFF6
 27830                           tablat	equ	0xFF5
 27831                           prodh	equ	0xFF4
 27832                           prodl	equ	0xFF3
 27833                           intcon	equ	0xFF2
 27834                           intcon2	equ	0xFF1
 27835                           intcon3	equ	0xFF0
 27836                           postinc0	equ	0xFEE
 27837                           wreg	equ	0xFE8
 27838                           indf1	equ	0xFE7
 27839                           postinc1	equ	0xFE6
 27840                           postdec1	equ	0xFE5
 27841                           plusw1	equ	0xFE3
 27842                           fsr1h	equ	0xFE2
 27843                           fsr1l	equ	0xFE1
 27844                           indf2	equ	0xFDF
 27845                           postinc2	equ	0xFDE
 27846                           postdec2	equ	0xFDD
 27847                           plusw2	equ	0xFDB
 27848                           fsr2h	equ	0xFDA
 27849                           fsr2l	equ	0xFD9
 27850                           status	equ	0xFD8
 27851                           
 27852 ;; *************** function _adc_read *****************
 27853 ;; Defined at:
 27854 ;;		line 30 in file "adc.c"
 27855 ;; Parameters:    Size  Location     Type
 27856 ;;  channel         1    wreg     enum E6744
 27857 ;; Auto vars:     Size  Location     Type
 27858 ;;  channel         1    2[BANK0 ] enum E6744
 27859 ;;  adc_value       2    3[BANK0 ] unsigned int 
 27860 ;; Return value:  Size  Location     Type
 27861 ;;                  2    0[BANK0 ] unsigned int 
 27862 ;; Registers used:
 27863 ;;		wreg, status,2, status,0
 27864 ;; Tracked objects:
 27865 ;;		On entry : 0/0
 27866 ;;		On exit  : 0/0
 27867 ;;		Unchanged: 0/0
 27868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27872 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27873 ;;Total ram usage:        5 bytes
 27874 ;; Hardware stack levels used:    1
 27875 ;; Hardware stack levels required when called:   10
 27876 ;; This function calls:
 27877 ;;		Nothing
 27878 ;; This function is called by:
 27879 ;;		_main
 27880 ;; This function uses a non-reentrant model
 27881 ;;
 27882                           
 27883                           	psect	text126
 27884  01391A                     __ptext126:
 27885                           	opt stack 0
 27886  01391A                     _adc_read:
 27887                           	opt stack 20
 27888                           
 27889                           ; BSR set to: 0
 27890                           ;incstack = 0
 27891                           ;adc_read@channel stored from wreg
 27892  01391A  0100               	movlb	0	; () banked
 27893  01391C  6F62               	movwf	adc_read@channel& (0+255),b
 27894                           
 27895                           ;adc.c: 32: uint16_t adc_value;;adc.c: 34: switch(channel)
 27896  01391E  D010               	goto	l2681
 27897  013920                     
 27898                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 27899  013920  50C2               	movf	4034,w,c	;volatile
 27900  013922  0BC3               	andlw	-61
 27901  013924  0930               	iorlw	48
 27902  013926  D007               	goto	L19
 27903  013928                     
 27904                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 27905  013928  50C2               	movf	4034,w,c	;volatile
 27906  01392A  0BC3               	andlw	-61
 27907  01392C  0904               	iorlw	4
 27908  01392E  D003               	goto	L19
 27909  013930                     
 27910                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 27911  013930  50C2               	movf	4034,w,c	;volatile
 27912  013932  0BC3               	andlw	-61
 27913  013934  0908               	iorlw	8
 27914  013936                     L19:
 27915  013936  6EC2               	movwf	4034,c	;volatile
 27916                           
 27917                           ;adc.c: 44: break;
 27918  013938  D017               	goto	l2688
 27919  01393A                     l2686:
 27920                           
 27921                           ; BSR set to: 0
 27922                           ;adc.c: 46: return 0xFFFF;
 27923  01393A  6960               	setf	?_adc_read& (0+255),b
 27924  01393C  6961               	setf	(?_adc_read+1)& (0+255),b
 27925  01393E  0012               	return	
 27926  013940                     l2681:
 27927                           
 27928                           ; BSR set to: 0
 27929  013940  0100               	movlb	0	; () banked
 27930  013942  5162               	movf	adc_read@channel& (0+255),w,b
 27931                           
 27932                           ; Switch size 1, requested type "space"
 27933                           ; Number of cases is 3, Range of values is 0 to 2
 27934                           ; switch strategies available:
 27935                           ; Name         Instructions Cycles
 27936                           ; simple_byte           10     6 (average)
 27937                           ;	Chosen strategy is simple_byte
 27938  013944  0A00               	xorlw	0	; case 0
 27939  013946  B4D8               	btfsc	status,2,c
 27940  013948  D7EB               	goto	l2682
 27941  01394A  0A01               	xorlw	1	; case 1
 27942  01394C  B4D8               	btfsc	status,2,c
 27943  01394E  D7EC               	goto	l2684
 27944  013950  0A03               	xorlw	3	; case 2
 27945  013952  B4D8               	btfsc	status,2,c
 27946  013954  D7ED               	goto	l2685
 27947  013956  D7F1               	goto	l2686
 27948  013958                     
 27949                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 27950                           
 27951                           ; BSR set to: 0
 27952  013958  0E0A               	movlw	10
 27953  01395A                     u23227:
 27954  01395A  2EE8               	decfsz	wreg,f,c
 27955  01395C  D7FE               	bra	u23227
 27956                           
 27957                           ;adc.c: 54: break;
 27958  01395E  D00C               	goto	l2690
 27959  013960                     
 27960                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 27961  013960  0E3C               	movlw	60
 27962  013962                     u23237:
 27963  013962  2EE8               	decfsz	wreg,f,c
 27964  013964  D7FE               	bra	u23237
 27965                           
 27966                           ;adc.c: 58: }
 27967                           
 27968                           ;adc.c: 57: break;
 27969  013966  D008               	goto	l2690
 27970  013968                     l2688:
 27971  013968  0102               	movlb	2	; () banked
 27972  01396A  5100               	movf	_os& (0+255),w,b	;volatile
 27973                           
 27974                           ; Switch size 1, requested type "space"
 27975                           ; Number of cases is 2, Range of values is 1 to 2
 27976                           ; switch strategies available:
 27977                           ; Name         Instructions Cycles
 27978                           ; simple_byte            7     4 (average)
 27979                           ;	Chosen strategy is simple_byte
 27980  01396C  0A01               	xorlw	1	; case 1
 27981  01396E  B4D8               	btfsc	status,2,c
 27982  013970  D7F3               	goto	l2689
 27983  013972  0A03               	xorlw	3	; case 2
 27984  013974  B4D8               	btfsc	status,2,c
 27985  013976  D7F4               	goto	l2691
 27986  013978                     l2690:
 27987                           
 27988                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 27989  013978  82C2               	bsf	4034,1,c	;volatile
 27990  01397A  B2C2               	btfsc	4034,1,c	;volatile
 27991  01397C  D7FE               	goto	l2693
 27992                           
 27993                           ;adc.c: 67: adc_value = ADRESH;
 27994  01397E  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 27995  013982  0100               	movlb	0	; () banked
 27996  013984  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 27997                           
 27998                           ; BSR set to: 0
 27999                           ;adc.c: 68: adc_value <<= 2;
 28000  013986  90D8               	bcf	status,0,c
 28001  013988  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28002  01398A  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28003  01398C  90D8               	bcf	status,0,c
 28004  01398E  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28005  013990  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;adc.c: 69: adc_value |= ADRESL;
 28009  013992  50C3               	movf	4035,w,c	;volatile
 28010  013994  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 28011                           
 28012                           ; BSR set to: 0
 28013                           ;adc.c: 71: return adc_value;
 28014  013996  C063  F060         	movff	adc_read@adc_value,?_adc_read
 28015  01399A  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 28016  01399E  0012               	return	
 28017  0139A0                     __end_of_adc_read:
 28018                           	opt stack 0
 28019                           tblptru	equ	0xFF8
 28020                           tblptrh	equ	0xFF7
 28021                           tblptrl	equ	0xFF6
 28022                           tablat	equ	0xFF5
 28023                           prodh	equ	0xFF4
 28024                           prodl	equ	0xFF3
 28025                           intcon	equ	0xFF2
 28026                           intcon2	equ	0xFF1
 28027                           intcon3	equ	0xFF0
 28028                           postinc0	equ	0xFEE
 28029                           wreg	equ	0xFE8
 28030                           indf1	equ	0xFE7
 28031                           postinc1	equ	0xFE6
 28032                           postdec1	equ	0xFE5
 28033                           plusw1	equ	0xFE3
 28034                           fsr1h	equ	0xFE2
 28035                           fsr1l	equ	0xFE1
 28036                           indf2	equ	0xFDF
 28037                           postinc2	equ	0xFDE
 28038                           postdec2	equ	0xFDD
 28039                           plusw2	equ	0xFDB
 28040                           fsr2h	equ	0xFDA
 28041                           fsr2l	equ	0xFD9
 28042                           status	equ	0xFD8
 28043                           
 28044 ;; *************** function _adc_calibrate *****************
 28045 ;; Defined at:
 28046 ;;		line 20 in file "adc.c"
 28047 ;; Parameters:    Size  Location     Type
 28048 ;;		None
 28049 ;; Auto vars:     Size  Location     Type
 28050 ;;		None
 28051 ;; Return value:  Size  Location     Type
 28052 ;;                  1    wreg      void 
 28053 ;; Registers used:
 28054 ;;		None
 28055 ;; Tracked objects:
 28056 ;;		On entry : 0/0
 28057 ;;		On exit  : 0/0
 28058 ;;		Unchanged: 0/0
 28059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28064 ;;Total ram usage:        0 bytes
 28065 ;; Hardware stack levels used:    1
 28066 ;; Hardware stack levels required when called:   10
 28067 ;; This function calls:
 28068 ;;		Nothing
 28069 ;; This function is called by:
 28070 ;;		_main
 28071 ;; This function uses a non-reentrant model
 28072 ;;
 28073                           
 28074                           	psect	text127
 28075  015E72                     __ptext127:
 28076                           	opt stack 0
 28077  015E72                     _adc_calibrate:
 28078                           	opt stack 20
 28079                           
 28080                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 28081                           
 28082                           ; BSR set to: 0
 28083                           ;incstack = 0
 28084  015E72  8CC1               	bsf	4033,6,c	;volatile
 28085                           
 28086                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 28087  015E74  82C2               	bsf	4034,1,c	;volatile
 28088  015E76  B2C2               	btfsc	4034,1,c	;volatile
 28089  015E78  D7FE               	goto	l2676
 28090                           
 28091                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 28092  015E7A  9CC1               	bcf	4033,6,c	;volatile
 28093  015E7C  0012               	return		;funcret
 28094  015E7E                     __end_of_adc_calibrate:
 28095                           	opt stack 0
 28096                           tblptru	equ	0xFF8
 28097                           tblptrh	equ	0xFF7
 28098                           tblptrl	equ	0xFF6
 28099                           tablat	equ	0xFF5
 28100                           prodh	equ	0xFF4
 28101                           prodl	equ	0xFF3
 28102                           intcon	equ	0xFF2
 28103                           intcon2	equ	0xFF1
 28104                           intcon3	equ	0xFF0
 28105                           postinc0	equ	0xFEE
 28106                           wreg	equ	0xFE8
 28107                           indf1	equ	0xFE7
 28108                           postinc1	equ	0xFE6
 28109                           postdec1	equ	0xFE5
 28110                           plusw1	equ	0xFE3
 28111                           fsr1h	equ	0xFE2
 28112                           fsr1l	equ	0xFE1
 28113                           indf2	equ	0xFDF
 28114                           postinc2	equ	0xFDE
 28115                           postdec2	equ	0xFDD
 28116                           plusw2	equ	0xFDB
 28117                           fsr2h	equ	0xFDA
 28118                           fsr2l	equ	0xFD9
 28119                           status	equ	0xFD8
 28120                           
 28121 ;; *************** function _adc_calculate_temperature *****************
 28122 ;; Defined at:
 28123 ;;		line 74 in file "adc.c"
 28124 ;; Parameters:    Size  Location     Type
 28125 ;;  adc_value       2   12[BANK0 ] unsigned int 
 28126 ;;  calibration     1   14[BANK0 ] enum E6665
 28127 ;; Auto vars:     Size  Location     Type
 28128 ;;  tmp             4   21[BANK0 ] long 
 28129 ;; Return value:  Size  Location     Type
 28130 ;;                  2   12[BANK0 ] int 
 28131 ;; Registers used:
 28132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28133 ;; Tracked objects:
 28134 ;;		On entry : 0/0
 28135 ;;		On exit  : 0/0
 28136 ;;		Unchanged: 0/0
 28137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28139 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28140 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28141 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28142 ;;Total ram usage:       13 bytes
 28143 ;; Hardware stack levels used:    1
 28144 ;; Hardware stack levels required when called:   11
 28145 ;; This function calls:
 28146 ;;		___lmul
 28147 ;; This function is called by:
 28148 ;;		_main
 28149 ;; This function uses a non-reentrant model
 28150 ;;
 28151                           
 28152                           	psect	text128
 28153  011F44                     __ptext128:
 28154                           	opt stack 0
 28155  011F44                     _adc_calculate_temperature:
 28156                           	opt stack 19
 28157                           
 28158                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 28159                           
 28160                           ;incstack = 0
 28161  011F44  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 28162  011F48  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 28163  011F4C  0100               	movlb	0	; () banked
 28164  011F4E  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 28165  011F50  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 28166                           
 28167                           ; BSR set to: 0
 28168                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 28169  011F52  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28170  011F54  0D0C               	mullw	12
 28171  011F56  0E05               	movlw	5
 28172  011F58  26F3               	addwf	prodl,f,c
 28173  011F5A  0E00               	movlw	0
 28174  011F5C  22F4               	addwfc	prodh,f,c
 28175  011F5E  0E00               	movlw	low _calibrationParameters
 28176  011F60  24F3               	addwf	prodl,w,c
 28177  011F62  6ED9               	movwf	fsr2l,c
 28178  011F64  0E03               	movlw	high _calibrationParameters
 28179  011F66  20F4               	addwfc	prodh,w,c
 28180  011F68  6EDA               	movwf	fsr2h,c
 28181  011F6A  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 28182  011F6E  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 28183  011F72  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 28184  011F76  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 28185  011F7A  0E00               	movlw	0
 28186  011F7C  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 28187  011F7E  0EFF               	movlw	255
 28188  011F80  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 28189  011F82  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 28190  011F84  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 28191  011F86  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28192  011F88  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 28193  011F8A  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28194  011F8C  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 28195  011F8E  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28196  011F90  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 28197  011F92  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28198                           
 28199                           ; BSR set to: 0
 28200                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 28201  011F94  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 28202  011F98  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 28203  011F9C  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 28204  011FA0  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 28205  011FA4  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28206  011FA6  0D0C               	mullw	12
 28207  011FA8  0E07               	movlw	7
 28208  011FAA  26F3               	addwf	prodl,f,c
 28209  011FAC  0E00               	movlw	0
 28210  011FAE  22F4               	addwfc	prodh,f,c
 28211  011FB0  0E00               	movlw	low _calibrationParameters
 28212  011FB2  24F3               	addwf	prodl,w,c
 28213  011FB4  6ED9               	movwf	fsr2l,c
 28214  011FB6  0E03               	movlw	high _calibrationParameters
 28215  011FB8  20F4               	addwfc	prodh,w,c
 28216  011FBA  6EDA               	movwf	fsr2h,c
 28217  011FBC  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28218  011FC0  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28219  011FC4  0E00               	movlw	0
 28220  011FC6  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28221  011FC8  0EFF               	movlw	-1
 28222  011FCA  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28223  011FCC  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28224  011FCE  EC82  F0A5         	call	___lmul	;wreg free
 28225  011FD2  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 28226  011FD6  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 28227  011FDA  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 28228  011FDE  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 28229                           
 28230                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 28231  011FE2  0100               	movlb	0	; () banked
 28232  011FE4  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28233  011FE6  0D0C               	mullw	12
 28234  011FE8  0E09               	movlw	9
 28235  011FEA  26F3               	addwf	prodl,f,c
 28236  011FEC  0E00               	movlw	0
 28237  011FEE  22F4               	addwfc	prodh,f,c
 28238  011FF0  0E00               	movlw	low _calibrationParameters
 28239  011FF2  24F3               	addwf	prodl,w,c
 28240  011FF4  6ED9               	movwf	fsr2l,c
 28241  011FF6  0E03               	movlw	high _calibrationParameters
 28242  011FF8  20F4               	addwfc	prodh,w,c
 28243  011FFA  6EDA               	movwf	fsr2h,c
 28244  011FFC  50DF               	movf	indf2,w,c
 28245  011FFE  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 28246  012000  0EFF               	movlw	-1
 28247  012002  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 28248  012004  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 28249  012006  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 28250  012008  D005               	goto	u22640
 28251  01200A                     u22645:
 28252  01200A  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28253  01200C  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28254  01200E  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28255  012010  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28256  012012  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28257  012014                     u22640:
 28258  012014  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 28259  012016  D7F9               	goto	u22645
 28260                           
 28261                           ;adc.c: 80: tmp += 1;
 28262  012018  0E01               	movlw	1
 28263  01201A  0100               	movlb	0	; () banked
 28264  01201C  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28265  01201E  0E00               	movlw	0
 28266  012020  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28267  012022  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28268  012024  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28269                           
 28270                           ; BSR set to: 0
 28271                           ;adc.c: 81: tmp >>= 1;
 28272  012026  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28273  012028  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28274  01202A  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28275  01202C  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28276  01202E  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28277                           
 28278                           ; BSR set to: 0
 28279                           ;adc.c: 82: return (int16_t) tmp;
 28280  012030  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 28281  012034  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 28282  012038  0012               	return	
 28283  01203A                     __end_of_adc_calculate_temperature:
 28284                           	opt stack 0
 28285                           tblptru	equ	0xFF8
 28286                           tblptrh	equ	0xFF7
 28287                           tblptrl	equ	0xFF6
 28288                           tablat	equ	0xFF5
 28289                           prodh	equ	0xFF4
 28290                           prodl	equ	0xFF3
 28291                           intcon	equ	0xFF2
 28292                           intcon2	equ	0xFF1
 28293                           intcon3	equ	0xFF0
 28294                           postinc0	equ	0xFEE
 28295                           wreg	equ	0xFE8
 28296                           indf1	equ	0xFE7
 28297                           postinc1	equ	0xFE6
 28298                           postdec1	equ	0xFE5
 28299                           plusw1	equ	0xFE3
 28300                           fsr1h	equ	0xFE2
 28301                           fsr1l	equ	0xFE1
 28302                           indf2	equ	0xFDF
 28303                           postinc2	equ	0xFDE
 28304                           postdec2	equ	0xFDD
 28305                           plusw2	equ	0xFDB
 28306                           fsr2h	equ	0xFDA
 28307                           fsr2l	equ	0xFD9
 28308                           status	equ	0xFD8
 28309                           
 28310 ;; *************** function ___lmul *****************
 28311 ;; Defined at:
 28312 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 28313 ;; Parameters:    Size  Location     Type
 28314 ;;  multiplier      4    0[BANK0 ] unsigned long 
 28315 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 28316 ;; Auto vars:     Size  Location     Type
 28317 ;;  product         4    8[BANK0 ] unsigned long 
 28318 ;; Return value:  Size  Location     Type
 28319 ;;                  4    0[BANK0 ] unsigned long 
 28320 ;; Registers used:
 28321 ;;		wreg, status,2, status,0
 28322 ;; Tracked objects:
 28323 ;;		On entry : 0/0
 28324 ;;		On exit  : 0/0
 28325 ;;		Unchanged: 0/0
 28326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28327 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28328 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28330 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28331 ;;Total ram usage:       12 bytes
 28332 ;; Hardware stack levels used:    1
 28333 ;; Hardware stack levels required when called:   10
 28334 ;; This function calls:
 28335 ;;		Nothing
 28336 ;; This function is called by:
 28337 ;;		_system_calculate_input_voltage
 28338 ;;		_system_calculate_output_voltage
 28339 ;;		_system_calculate_input_current
 28340 ;;		_system_calculate_output_current
 28341 ;;		__display_efficiency
 28342 ;;		__buck_operate_local
 28343 ;;		_adc_calculate_temperature
 28344 ;;		__get_input_power
 28345 ;;		__get_output_power
 28346 ;; This function uses a non-reentrant model
 28347 ;;
 28348                           
 28349                           	psect	text129
 28350  014B04                     __ptext129:
 28351                           	opt stack 0
 28352  014B04                     ___lmul:
 28353                           	opt stack 19
 28354                           
 28355                           ; BSR set to: 0
 28356                           ;incstack = 0
 28357  014B04  0E00               	movlw	0
 28358  014B06  0100               	movlb	0	; () banked
 28359  014B08  6F68               	movwf	___lmul@product& (0+255),b
 28360  014B0A  0E00               	movlw	0
 28361  014B0C  6F69               	movwf	(___lmul@product+1)& (0+255),b
 28362  014B0E  0E00               	movlw	0
 28363  014B10  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 28364  014B12  0E00               	movlw	0
 28365  014B14  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 28366  014B16                     
 28367                           ; BSR set to: 0
 28368                           
 28369                           ; BSR set to: 0
 28370  014B16  A160               	btfss	___lmul@multiplier& (0+255),0,b
 28371  014B18  D008               	goto	l3329
 28372                           
 28373                           ; BSR set to: 0
 28374  014B1A  5164               	movf	___lmul@multiplicand& (0+255),w,b
 28375  014B1C  2768               	addwf	___lmul@product& (0+255),f,b
 28376  014B1E  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28377  014B20  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 28378  014B22  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28379  014B24  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 28380  014B26  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28381  014B28  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 28382  014B2A                     l3329:
 28383                           
 28384                           ; BSR set to: 0
 28385                           
 28386                           ; BSR set to: 0
 28387  014B2A  90D8               	bcf	status,0,c
 28388  014B2C  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 28389  014B2E  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28390  014B30  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28391  014B32  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28392                           
 28393                           ; BSR set to: 0
 28394  014B34  90D8               	bcf	status,0,c
 28395  014B36  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28396  014B38  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28397  014B3A  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28398  014B3C  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 28399  014B3E  5160               	movf	___lmul@multiplier& (0+255),w,b
 28400  014B40  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28401  014B42  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28402  014B44  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28403  014B46  A4D8               	btfss	status,2,c
 28404  014B48  D7E6               	goto	l3328
 28405                           
 28406                           ; BSR set to: 0
 28407  014B4A  C068  F060         	movff	___lmul@product,?___lmul
 28408  014B4E  C069  F061         	movff	___lmul@product+1,?___lmul+1
 28409  014B52  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 28410  014B56  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 28411                           
 28412                           ; BSR set to: 0
 28413  014B5A  0012               	return		;funcret
 28414  014B5C                     __end_of___lmul:
 28415                           	opt stack 0
 28416                           tblptru	equ	0xFF8
 28417                           tblptrh	equ	0xFF7
 28418                           tblptrl	equ	0xFF6
 28419                           tablat	equ	0xFF5
 28420                           prodh	equ	0xFF4
 28421                           prodl	equ	0xFF3
 28422                           intcon	equ	0xFF2
 28423                           intcon2	equ	0xFF1
 28424                           intcon3	equ	0xFF0
 28425                           postinc0	equ	0xFEE
 28426                           wreg	equ	0xFE8
 28427                           indf1	equ	0xFE7
 28428                           postinc1	equ	0xFE6
 28429                           postdec1	equ	0xFE5
 28430                           plusw1	equ	0xFE3
 28431                           fsr1h	equ	0xFE2
 28432                           fsr1l	equ	0xFE1
 28433                           indf2	equ	0xFDF
 28434                           postinc2	equ	0xFDE
 28435                           postdec2	equ	0xFDD
 28436                           plusw2	equ	0xFDB
 28437                           fsr2h	equ	0xFDA
 28438                           fsr2l	equ	0xFD9
 28439                           status	equ	0xFD8
 28440                           
 28441 ;; *************** function _USBDeviceInit *****************
 28442 ;; Defined at:
 28443 ;;		line 277 in file "usb_device.c"
 28444 ;; Parameters:    Size  Location     Type
 28445 ;;		None
 28446 ;; Auto vars:     Size  Location     Type
 28447 ;;  i               1    8[BANK0 ] unsigned char 
 28448 ;; Return value:  Size  Location     Type
 28449 ;;                  1    wreg      void 
 28450 ;; Registers used:
 28451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28452 ;; Tracked objects:
 28453 ;;		On entry : 0/0
 28454 ;;		On exit  : 0/0
 28455 ;;		Unchanged: 0/0
 28456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28460 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28461 ;;Total ram usage:        1 bytes
 28462 ;; Hardware stack levels used:    1
 28463 ;; Hardware stack levels required when called:   11
 28464 ;; This function calls:
 28465 ;;		_memset
 28466 ;; This function is called by:
 28467 ;;		_main
 28468 ;; This function uses a non-reentrant model
 28469 ;;
 28470                           
 28471                           	psect	text130
 28472  010668                     __ptext130:
 28473                           	opt stack 0
 28474  010668                     _USBDeviceInit:
 28475                           	opt stack 19
 28476                           
 28477                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 28478                           
 28479                           ; BSR set to: 0
 28480                           ;incstack = 0
 28481  010668  98A0               	bcf	4000,4,c	;volatile
 28482                           
 28483                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 28484  01066A  0E00               	movlw	0
 28485  01066C  6E63               	movwf	3939,c	;volatile
 28486                           
 28487                           ;usb_device.c: 291: {UIR = 0;};
 28488  01066E  0E00               	movlw	0
 28489  010670  6E62               	movwf	3938,c	;volatile
 28490                           
 28491                           ;usb_device.c: 294: UEP0 = 0;
 28492  010672  0E00               	movlw	0
 28493  010674  010F               	movlb	15	; () banked
 28494  010676  6F26               	movwf	38,b	;volatile
 28495                           
 28496                           ; BSR set to: 15
 28497                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 28498  010678  0E27               	movlw	39
 28499  01067A  0100               	movlb	0	; () banked
 28500  01067C  6F60               	movwf	memset@p1& (0+255),b
 28501  01067E  0E0F               	movlw	15
 28502  010680  6F61               	movwf	(memset@p1+1)& (0+255),b
 28503  010682  0E00               	movlw	0
 28504  010684  6F63               	movwf	(memset@c+1)& (0+255),b
 28505  010686  0E00               	movlw	0
 28506  010688  6F62               	movwf	memset@c& (0+255),b
 28507  01068A  0E00               	movlw	0
 28508  01068C  6F65               	movwf	(memset@n+1)& (0+255),b
 28509  01068E  0E02               	movlw	2
 28510  010690  6F64               	movwf	memset@n& (0+255),b
 28511  010692  ECF0  F0AA         	call	_memset	;wreg free
 28512                           
 28513                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 28514  010696  0E16               	movlw	22
 28515  010698  010F               	movlb	15	; () banked
 28516  01069A  6F39               	movwf	57,b	;volatile
 28517                           
 28518                           ; BSR set to: 15
 28519  01069C  0E9F               	movlw	159
 28520  01069E  6F37               	movwf	55,b	;volatile
 28521                           
 28522                           ; BSR set to: 15
 28523  0106A0  0E7B               	movlw	123
 28524  0106A2  6F36               	movwf	54,b	;volatile
 28525                           
 28526                           ; BSR set to: 15
 28527                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 28528  0106A4  0E00               	movlw	0
 28529  0106A6  0100               	movlb	0	; () banked
 28530  0106A8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 28531  0106AA                     l22107:
 28532                           
 28533                           ; BSR set to: 0
 28534  0106AA  0E0B               	movlw	11
 28535  0106AC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 28536  0106AE  D001               	goto	l147
 28537  0106B0  D00E               	goto	u21790
 28538  0106B2                     l147:
 28539                           
 28540                           ; BSR set to: 0
 28541                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 28542                           
 28543                           ; BSR set to: 0
 28544  0106B2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28545  0106B4  0D04               	mullw	4
 28546  0106B6  0E00               	movlw	0
 28547  0106B8  24F3               	addwf	prodl,w,c
 28548  0106BA  6ED9               	movwf	fsr2l,c
 28549  0106BC  0E0D               	movlw	13
 28550  0106BE  20F4               	addwfc	prodh,w,c
 28551  0106C0  6EDA               	movwf	fsr2h,c
 28552  0106C2  6ADE               	clrf	postinc2,c
 28553  0106C4  6ADE               	clrf	postinc2,c
 28554  0106C6  6ADE               	clrf	postinc2,c
 28555  0106C8  6ADD               	clrf	postdec2,c
 28556                           
 28557                           ; BSR set to: 0
 28558  0106CA  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 28559  0106CC  D7EE               	goto	l22107
 28560  0106CE                     u21790:
 28561                           
 28562                           ; BSR set to: 0
 28563                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 28564  0106CE  8C65               	bsf	3941,6,c	;volatile
 28565                           
 28566                           ; BSR set to: 0
 28567                           ;usb_device.c: 316: UADDR = 0x00;
 28568  0106D0  0E00               	movlw	0
 28569  0106D2  010F               	movlb	15	; () banked
 28570  0106D4  6F38               	movwf	56,b	;volatile
 28571                           
 28572                           ; BSR set to: 15
 28573                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 28574  0106D6  9865               	bcf	3941,4,c	;volatile
 28575                           
 28576                           ; BSR set to: 15
 28577                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 28578  0106D8  9C65               	bcf	3941,6,c	;volatile
 28579  0106DA                     
 28580                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 28581                           
 28582                           ; BSR set to: 15
 28583  0106DA  9662               	bcf	3938,3,c	;volatile
 28584                           
 28585                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 28586  0106DC  0E00               	movlw	0
 28587  0106DE  6E0D               	movwf	_inPipes+3,c	;volatile
 28588                           
 28589                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 28590  0106E0  0E00               	movlw	0
 28591  0106E2  6E04               	movwf	_outPipes+3,c	;volatile
 28592                           
 28593                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 28594  0106E4  0E00               	movlw	0
 28595  0106E6  6E06               	movwf	_outPipes+5,c	;volatile
 28596  0106E8  0E00               	movlw	0
 28597  0106EA  6E05               	movwf	_outPipes+4,c	;volatile
 28598                           
 28599                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 28600  0106EC  B662               	btfsc	3938,3,c	;volatile
 28601  0106EE  D7F5               	goto	l149
 28602                           
 28603                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 28604  0106F0  0E01               	movlw	1
 28605  0106F2  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28606                           
 28607                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 28608  0106F4  0E01               	movlw	1
 28609  0106F6  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28610                           
 28611                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 28612  0106F8  0E00               	movlw	0
 28613  0106FA  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 28614                           
 28615                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 28616  0106FC  0E00               	movlw	0
 28617  0106FE  0101               	movlb	1	; () banked
 28618  010700  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28619                           
 28620                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 28621  010702  0E00               	movlw	0
 28622  010704  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 28623                           
 28624                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 28625  010706  0E00               	movlw	0
 28626  010708  0100               	movlb	0	; () banked
 28627  01070A  6F68               	movwf	USBDeviceInit@i& (0+255),b
 28628  01070C                     l22135:
 28629                           
 28630                           ; BSR set to: 0
 28631  01070C  0E02               	movlw	2
 28632  01070E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 28633  010710  D001               	goto	l151
 28634  010712  D02E               	goto	u21820
 28635  010714                     l151:
 28636                           
 28637                           ; BSR set to: 0
 28638                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 28639                           
 28640                           ; BSR set to: 0
 28641  010714  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28642  010716  0D02               	mullw	2
 28643  010718  0E10               	movlw	low _pBDTEntryIn
 28644  01071A  24F3               	addwf	prodl,w,c
 28645  01071C  6ED9               	movwf	fsr2l,c
 28646  01071E  0E00               	movlw	high _pBDTEntryIn
 28647  010720  20F4               	addwfc	prodh,w,c
 28648  010722  6EDA               	movwf	fsr2h,c
 28649  010724  0E00               	movlw	0
 28650  010726  6EDE               	movwf	postinc2,c
 28651  010728  0E00               	movlw	0
 28652  01072A  6EDD               	movwf	postdec2,c
 28653                           
 28654                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 28655  01072C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28656  01072E  0D02               	mullw	2
 28657  010730  0ED3               	movlw	low _pBDTEntryOut
 28658  010732  24F3               	addwf	prodl,w,c
 28659  010734  6ED9               	movwf	fsr2l,c
 28660  010736  0E01               	movlw	high _pBDTEntryOut
 28661  010738  20F4               	addwfc	prodh,w,c
 28662  01073A  6EDA               	movwf	fsr2h,c
 28663  01073C  0E00               	movlw	0
 28664  01073E  6EDE               	movwf	postinc2,c
 28665  010740  0E00               	movlw	0
 28666  010742  6EDD               	movwf	postdec2,c
 28667                           
 28668                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 28669  010744  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28670  010746  0D01               	mullw	1
 28671  010748  0EE4               	movlw	low _ep_data_in
 28672  01074A  24F3               	addwf	prodl,w,c
 28673  01074C  6ED9               	movwf	fsr2l,c
 28674  01074E  0E01               	movlw	high _ep_data_in
 28675  010750  20F4               	addwfc	prodh,w,c
 28676  010752  6EDA               	movwf	fsr2h,c
 28677  010754  0E00               	movlw	0
 28678  010756  6EDF               	movwf	indf2,c
 28679                           
 28680                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 28681  010758  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28682  01075A  0D01               	mullw	1
 28683  01075C  0EE1               	movlw	low _ep_data_out
 28684  01075E  24F3               	addwf	prodl,w,c
 28685  010760  6ED9               	movwf	fsr2l,c
 28686  010762  0E01               	movlw	high _ep_data_out
 28687  010764  20F4               	addwfc	prodh,w,c
 28688  010766  6EDA               	movwf	fsr2h,c
 28689  010768  0E00               	movlw	0
 28690  01076A  6EDF               	movwf	indf2,c
 28691                           
 28692                           ; BSR set to: 0
 28693  01076C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 28694  01076E  D7CE               	goto	l22135
 28695  010770                     u21820:
 28696                           
 28697                           ; BSR set to: 0
 28698                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28699                           
 28700                           ; BSR set to: 0
 28701  010770  0E08               	movlw	8
 28702  010772  6E10               	movwf	_pBDTEntryIn,c
 28703  010774  0E0D               	movlw	13
 28704  010776  6E11               	movwf	_pBDTEntryIn+1,c
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 28708  010778  0E16               	movlw	22
 28709  01077A  010F               	movlb	15	; () banked
 28710  01077C  6F26               	movwf	38,b	;volatile
 28711                           
 28712                           ; BSR set to: 15
 28713                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 28714  01077E  0E0D               	movlw	13
 28715  010780  010D               	movlb	13	; () banked
 28716  010782  6F03               	movwf	3,b	;volatile
 28717  010784  0E30               	movlw	48
 28718  010786  6F02               	movwf	2,b	;volatile
 28719                           
 28720                           ; BSR set to: 13
 28721                           ;usb_device.c: 359: BDT[0].CNT = 8;
 28722  010788  0E08               	movlw	8
 28723  01078A  6F01               	movwf	1,b	;volatile
 28724                           
 28725                           ; BSR set to: 13
 28726                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 28727  01078C  0E04               	movlw	4
 28728  01078E  6F00               	movwf	0,b	;volatile
 28729                           
 28730                           ; BSR set to: 13
 28731                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 28732  010790  8F00               	bsf	0,7,b	;volatile
 28733                           
 28734                           ; BSR set to: 13
 28735                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 28736  010792  0E00               	movlw	0
 28737  010794  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 28738                           
 28739                           ; BSR set to: 13
 28740                           ;usb_device.c: 366: USB1msTickCount = 0;
 28741  010796  0E00               	movlw	0
 28742  010798  0101               	movlb	1	; () banked
 28743  01079A  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 28744  01079C  0E00               	movlw	0
 28745  01079E  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 28746  0107A0  0E00               	movlw	0
 28747  0107A2  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 28748  0107A4  0E00               	movlw	0
 28749  0107A6  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 28750                           
 28751                           ; BSR set to: 1
 28752                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 28753  0107A8  0E00               	movlw	0
 28754  0107AA  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 28755                           
 28756                           ; BSR set to: 1
 28757                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 28758  0107AC  0E00               	movlw	0
 28759  0107AE  6E2B               	movwf	_USBDeviceState,c	;volatile
 28760                           
 28761                           ; BSR set to: 1
 28762  0107B0  0012               	return		;funcret
 28763  0107B2                     __end_of_USBDeviceInit:
 28764                           	opt stack 0
 28765                           tblptru	equ	0xFF8
 28766                           tblptrh	equ	0xFF7
 28767                           tblptrl	equ	0xFF6
 28768                           tablat	equ	0xFF5
 28769                           prodh	equ	0xFF4
 28770                           prodl	equ	0xFF3
 28771                           intcon	equ	0xFF2
 28772                           intcon2	equ	0xFF1
 28773                           intcon3	equ	0xFF0
 28774                           postinc0	equ	0xFEE
 28775                           wreg	equ	0xFE8
 28776                           indf1	equ	0xFE7
 28777                           postinc1	equ	0xFE6
 28778                           postdec1	equ	0xFE5
 28779                           plusw1	equ	0xFE3
 28780                           fsr1h	equ	0xFE2
 28781                           fsr1l	equ	0xFE1
 28782                           indf2	equ	0xFDF
 28783                           postinc2	equ	0xFDE
 28784                           postdec2	equ	0xFDD
 28785                           plusw2	equ	0xFDB
 28786                           fsr2h	equ	0xFDA
 28787                           fsr2l	equ	0xFD9
 28788                           status	equ	0xFD8
 28789                           
 28790 ;; *************** function _memset *****************
 28791 ;; Defined at:
 28792 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 28793 ;; Parameters:    Size  Location     Type
 28794 ;;  p1              2    0[BANK0 ] PTR void 
 28795 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28796 ;;  c               2    2[BANK0 ] int 
 28797 ;;  n               2    4[BANK0 ] unsigned int 
 28798 ;; Auto vars:     Size  Location     Type
 28799 ;;  p               2    6[BANK0 ] PTR unsigned char 
 28800 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28801 ;; Return value:  Size  Location     Type
 28802 ;;                  2    0[BANK0 ] PTR void 
 28803 ;; Registers used:
 28804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28805 ;; Tracked objects:
 28806 ;;		On entry : 0/0
 28807 ;;		On exit  : 0/0
 28808 ;;		Unchanged: 0/0
 28809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28810 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28813 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28814 ;;Total ram usage:        8 bytes
 28815 ;; Hardware stack levels used:    1
 28816 ;; Hardware stack levels required when called:   10
 28817 ;; This function calls:
 28818 ;;		Nothing
 28819 ;; This function is called by:
 28820 ;;		_USBDeviceInit
 28821 ;; This function uses a non-reentrant model
 28822 ;;
 28823                           
 28824                           	psect	text131
 28825  0155E0                     __ptext131:
 28826                           	opt stack 0
 28827  0155E0                     _memset:
 28828                           	opt stack 19
 28829                           
 28830                           ; BSR set to: 1
 28831                           ;incstack = 0
 28832  0155E0  C060  F066         	movff	memset@p1,memset@p
 28833  0155E4  C061  F067         	movff	memset@p1+1,memset@p+1
 28834  0155E8  D009               	goto	l4001
 28835  0155EA                     l20387:
 28836  0155EA  C066  FFD9         	movff	memset@p,fsr2l
 28837  0155EE  C067  FFDA         	movff	memset@p+1,fsr2h
 28838  0155F2  C062  FFDF         	movff	memset@c,indf2
 28839  0155F6  0100               	movlb	0	; () banked
 28840  0155F8  4B66               	infsnz	memset@p& (0+255),f,b
 28841  0155FA  2B67               	incf	(memset@p+1)& (0+255),f,b
 28842  0155FC                     l4001:
 28843                           
 28844                           ; BSR set to: 0
 28845  0155FC  0100               	movlb	0	; () banked
 28846  0155FE  0764               	decf	memset@n& (0+255),f,b
 28847  015600  A0D8               	btfss	status,0,c
 28848  015602  0765               	decf	(memset@n+1)& (0+255),f,b
 28849  015604  2964               	incf	memset@n& (0+255),w,b
 28850  015606  E1F1               	bnz	l20387
 28851  015608  2965               	incf	(memset@n+1)& (0+255),w,b
 28852  01560A  B4D8               	btfsc	status,2,c
 28853  01560C  0012               	return	
 28854  01560E  D7ED               	goto	l4002
 28855  015610                     __end_of_memset:
 28856                           	opt stack 0
 28857                           tblptru	equ	0xFF8
 28858                           tblptrh	equ	0xFF7
 28859                           tblptrl	equ	0xFF6
 28860                           tablat	equ	0xFF5
 28861                           prodh	equ	0xFF4
 28862                           prodl	equ	0xFF3
 28863                           intcon	equ	0xFF2
 28864                           intcon2	equ	0xFF1
 28865                           intcon3	equ	0xFF0
 28866                           postinc0	equ	0xFEE
 28867                           wreg	equ	0xFE8
 28868                           indf1	equ	0xFE7
 28869                           postinc1	equ	0xFE6
 28870                           postdec1	equ	0xFE5
 28871                           plusw1	equ	0xFE3
 28872                           fsr1h	equ	0xFE2
 28873                           fsr1l	equ	0xFE1
 28874                           indf2	equ	0xFDF
 28875                           postinc2	equ	0xFDE
 28876                           postdec2	equ	0xFDD
 28877                           plusw2	equ	0xFDB
 28878                           fsr2h	equ	0xFDA
 28879                           fsr2l	equ	0xFD9
 28880                           status	equ	0xFD8
 28881                           
 28882 ;; *************** function _USBDeviceAttach *****************
 28883 ;; Defined at:
 28884 ;;		line 1354 in file "usb_device.c"
 28885 ;; Parameters:    Size  Location     Type
 28886 ;;		None
 28887 ;; Auto vars:     Size  Location     Type
 28888 ;;		None
 28889 ;; Return value:  Size  Location     Type
 28890 ;;                  1    wreg      void 
 28891 ;; Registers used:
 28892 ;;		wreg, status,2
 28893 ;; Tracked objects:
 28894 ;;		On entry : 0/0
 28895 ;;		On exit  : 0/0
 28896 ;;		Unchanged: 0/0
 28897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28902 ;;Total ram usage:        0 bytes
 28903 ;; Hardware stack levels used:    1
 28904 ;; Hardware stack levels required when called:   10
 28905 ;; This function calls:
 28906 ;;		Nothing
 28907 ;; This function is called by:
 28908 ;;		_main
 28909 ;; This function uses a non-reentrant model
 28910 ;;
 28911                           
 28912                           	psect	text132
 28913  01557E                     __ptext132:
 28914                           	opt stack 0
 28915  01557E                     _USBDeviceAttach:
 28916                           	opt stack 20
 28917                           
 28918                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 28919                           
 28920                           ; BSR set to: 0
 28921                           ;incstack = 0
 28922  01557E  502B               	movf	_USBDeviceState,w,c	;volatile
 28923  015580  A4D8               	btfss	status,2,c
 28924  015582  0012               	return	
 28925                           
 28926                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 28927  015584  0E00               	movlw	0
 28928  015586  6E65               	movwf	3941,c	;volatile
 28929                           
 28930                           ;usb_device.c: 1365: UIE = 0;
 28931  015588  0E00               	movlw	0
 28932  01558A  010F               	movlb	15	; () banked
 28933  01558C  6F36               	movwf	54,b	;volatile
 28934                           
 28935                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 28936  01558E  0E16               	movlw	22
 28937  015590  6F39               	movwf	57,b	;volatile
 28938  015592  0E9F               	movlw	159
 28939  015594  6F37               	movwf	55,b	;volatile
 28940  015596  0E7B               	movlw	123
 28941  015598  6F36               	movwf	54,b	;volatile
 28942                           
 28943                           ; BSR set to: 15
 28944                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 28945  01559A  8ED0               	bsf	4048,7,c	;volatile
 28946                           
 28947                           ; BSR set to: 15
 28948  01559C  88A2               	bsf	4002,4,c	;volatile
 28949                           
 28950                           ; BSR set to: 15
 28951  01559E  88A0               	bsf	4000,4,c	;volatile
 28952                           
 28953                           ; BSR set to: 15
 28954  0155A0  8EF2               	bsf	intcon,7,c	;volatile
 28955                           
 28956                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 28957  0155A2  D001               	goto	l208
 28958  0155A4                     l209:
 28959  0155A4  8665               	bsf	3941,3,c	;volatile
 28960  0155A6                     l208:
 28961  0155A6  A665               	btfss	3941,3,c	;volatile
 28962  0155A8  D7FD               	goto	l209
 28963                           
 28964                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 28965  0155AA  0E01               	movlw	1
 28966  0155AC  6E2B               	movwf	_USBDeviceState,c	;volatile
 28967  0155AE  0012               	return	
 28968  0155B0                     __end_of_USBDeviceAttach:
 28969                           	opt stack 0
 28970                           tblptru	equ	0xFF8
 28971                           tblptrh	equ	0xFF7
 28972                           tblptrl	equ	0xFF6
 28973                           tablat	equ	0xFF5
 28974                           prodh	equ	0xFF4
 28975                           prodl	equ	0xFF3
 28976                           intcon	equ	0xFF2
 28977                           intcon2	equ	0xFF1
 28978                           intcon3	equ	0xFF0
 28979                           postinc0	equ	0xFEE
 28980                           wreg	equ	0xFE8
 28981                           indf1	equ	0xFE7
 28982                           postinc1	equ	0xFE6
 28983                           postdec1	equ	0xFE5
 28984                           plusw1	equ	0xFE3
 28985                           fsr1h	equ	0xFE2
 28986                           fsr1l	equ	0xFE1
 28987                           indf2	equ	0xFDF
 28988                           postinc2	equ	0xFDE
 28989                           postdec2	equ	0xFDD
 28990                           plusw2	equ	0xFDB
 28991                           fsr2h	equ	0xFDA
 28992                           fsr2l	equ	0xFD9
 28993                           status	equ	0xFD8
 28994                           
 28995 ;; *************** function _SYSTEM_Initialize *****************
 28996 ;; Defined at:
 28997 ;;		line 78 in file "system.c"
 28998 ;; Parameters:    Size  Location     Type
 28999 ;;  state           1    wreg     enum E6751
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;  state           1    0[BANK0 ] enum E6751
 29002 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 29003 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 29004 ;; Return value:  Size  Location     Type
 29005 ;;                  1    wreg      void 
 29006 ;; Registers used:
 29007 ;;		wreg, status,2, status,0
 29008 ;; Tracked objects:
 29009 ;;		On entry : 0/0
 29010 ;;		On exit  : 0/0
 29011 ;;		Unchanged: 0/0
 29012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29014 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29016 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29017 ;;Total ram usage:        5 bytes
 29018 ;; Hardware stack levels used:    1
 29019 ;; Hardware stack levels required when called:   10
 29020 ;; This function calls:
 29021 ;;		Nothing
 29022 ;; This function is called by:
 29023 ;;		_main
 29024 ;; This function uses a non-reentrant model
 29025 ;;
 29026                           
 29027                           	psect	text133
 29028  0149F6                     __ptext133:
 29029                           	opt stack 0
 29030  0149F6                     _SYSTEM_Initialize:
 29031                           	opt stack 20
 29032                           
 29033                           ;incstack = 0
 29034                           ;SYSTEM_Initialize@state stored from wreg
 29035  0149F6  0100               	movlb	0	; () banked
 29036  0149F8  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 29037                           
 29038                           ;system.c: 80: switch(state)
 29039  0149FA  D01E               	goto	l949
 29040  0149FC                     
 29041                           ;system.c: 89: {;system.c: 90: unsigned int pll_startup_counter = 600;
 29042  0149FC  0E02               	movlw	2
 29043  0149FE  0100               	movlb	0	; () banked
 29044  014A00  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 29045  014A02  0E58               	movlw	88
 29046  014A04  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 29050  014A06  8C9B               	bsf	3995,6,c	;volatile
 29051  014A08                     l22287:
 29052                           
 29053                           ; BSR set to: 0
 29054  014A08  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 29055  014A0A  A0D8               	btfss	status,0,c
 29056  014A0C  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 29057  014A0E  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 29058  014A10  E1FB               	bnz	l22287
 29059  014A12  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 29060  014A14  B4D8               	btfsc	status,2,c
 29061  014A16  0012               	return	
 29062  014A18  D7F7               	goto	l952
 29063  014A1A                     
 29064                           ; BSR set to: 0
 29065                           ;system.c: 117: OSCCON = 0x70;
 29066                           
 29067                           ; BSR set to: 0
 29068  014A1A  0E70               	movlw	112
 29069  014A1C  6ED3               	movwf	4051,c	;volatile
 29070                           
 29071                           ;system.c: 123: {;system.c: 124: unsigned int pll_startup_counter = 800;
 29072  014A1E  0E03               	movlw	3
 29073  014A20  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3287+1)& (0+255),b
 29074  014A22  0E20               	movlw	32
 29075  014A24  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3287& (0+255),b
 29076  014A26                     l22291:
 29077                           
 29078                           ; BSR set to: 0
 29079  014A26  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3287& (0+255),f,b
 29080  014A28  A0D8               	btfss	status,0,c
 29081  014A2A  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3287+1)& (0+255),f,b
 29082  014A2C  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3287& (0+255),w,b
 29083  014A2E  E1FB               	bnz	l22291
 29084  014A30  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3287+1)& (0+255),w,b
 29085  014A32  B4D8               	btfsc	status,2,c
 29086  014A34  0012               	return	
 29087  014A36  D7F7               	goto	l958
 29088  014A38                     l949:
 29089                           
 29090                           ; BSR set to: 0
 29091  014A38  0100               	movlb	0	; () banked
 29092  014A3A  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 29093                           
 29094                           ; Switch size 1, requested type "space"
 29095                           ; Number of cases is 3, Range of values is 0 to 2
 29096                           ; switch strategies available:
 29097                           ; Name         Instructions Cycles
 29098                           ; simple_byte           10     6 (average)
 29099                           ;	Chosen strategy is simple_byte
 29100  014A3C  0A00               	xorlw	0	; case 0
 29101  014A3E  B4D8               	btfsc	status,2,c
 29102  014A40  D7DD               	goto	l950
 29103  014A42  0A01               	xorlw	1	; case 1
 29104  014A44  B4D8               	btfsc	status,2,c
 29105  014A46  0012               	return	
 29106  014A48  0A03               	xorlw	3	; case 2
 29107  014A4A  A4D8               	btfss	status,2,c
 29108  014A4C  0012               	return	
 29109  014A4E  D7E5               	goto	l956
 29110  014A50                     __end_of_SYSTEM_Initialize:
 29111                           	opt stack 0
 29112                           tblptru	equ	0xFF8
 29113                           tblptrh	equ	0xFF7
 29114                           tblptrl	equ	0xFF6
 29115                           tablat	equ	0xFF5
 29116                           prodh	equ	0xFF4
 29117                           prodl	equ	0xFF3
 29118                           intcon	equ	0xFF2
 29119                           intcon2	equ	0xFF1
 29120                           intcon3	equ	0xFF0
 29121                           postinc0	equ	0xFEE
 29122                           wreg	equ	0xFE8
 29123                           indf1	equ	0xFE7
 29124                           postinc1	equ	0xFE6
 29125                           postdec1	equ	0xFE5
 29126                           plusw1	equ	0xFE3
 29127                           fsr1h	equ	0xFE2
 29128                           fsr1l	equ	0xFE1
 29129                           indf2	equ	0xFDF
 29130                           postinc2	equ	0xFDE
 29131                           postdec2	equ	0xFDD
 29132                           plusw2	equ	0xFDB
 29133                           fsr2h	equ	0xFDA
 29134                           fsr2l	equ	0xFD9
 29135                           status	equ	0xFD8
 29136                           
 29137 ;; *************** function _APP_DeviceMSDTasks *****************
 29138 ;; Defined at:
 29139 ;;		line 110 in file "app_device_msd.c"
 29140 ;; Parameters:    Size  Location     Type
 29141 ;;		None
 29142 ;; Auto vars:     Size  Location     Type
 29143 ;;		None
 29144 ;; Return value:  Size  Location     Type
 29145 ;;                  1    wreg      void 
 29146 ;; Registers used:
 29147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29148 ;; Tracked objects:
 29149 ;;		On entry : 0/0
 29150 ;;		On exit  : 0/0
 29151 ;;		Unchanged: 0/0
 29152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29157 ;;Total ram usage:        0 bytes
 29158 ;; Hardware stack levels used:    1
 29159 ;; Hardware stack levels required when called:   21
 29160 ;; This function calls:
 29161 ;;		_MSDTasks
 29162 ;; This function is called by:
 29163 ;;		_main
 29164 ;; This function uses a non-reentrant model
 29165 ;;
 29166                           
 29167                           	psect	text134
 29168  015D62                     __ptext134:
 29169                           	opt stack 0
 29170  015D62                     _APP_DeviceMSDTasks:
 29171                           	opt stack 9
 29172                           
 29173                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 29174                           
 29175                           ; BSR set to: 0
 29176                           ;incstack = 0
 29177  015D62  0E20               	movlw	32
 29178  015D64  602B               	cpfslt	_USBDeviceState,c	;volatile
 29179  015D66  D001               	goto	l1233
 29180  015D68  0012               	return	
 29181  015D6A                     l1233:
 29182                           
 29183                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 29184  015D6A  B265               	btfsc	3941,1,c	;volatile
 29185  015D6C  0012               	return	
 29186                           
 29187                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 29188                           
 29189                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 29190  015D6E  EC43  F079         	call	_MSDTasks	;wreg free
 29191  015D72  0012               	return		;funcret
 29192  015D74                     __end_of_APP_DeviceMSDTasks:
 29193                           	opt stack 0
 29194                           tblptru	equ	0xFF8
 29195                           tblptrh	equ	0xFF7
 29196                           tblptrl	equ	0xFF6
 29197                           tablat	equ	0xFF5
 29198                           prodh	equ	0xFF4
 29199                           prodl	equ	0xFF3
 29200                           intcon	equ	0xFF2
 29201                           intcon2	equ	0xFF1
 29202                           intcon3	equ	0xFF0
 29203                           postinc0	equ	0xFEE
 29204                           wreg	equ	0xFE8
 29205                           indf1	equ	0xFE7
 29206                           postinc1	equ	0xFE6
 29207                           postdec1	equ	0xFE5
 29208                           plusw1	equ	0xFE3
 29209                           fsr1h	equ	0xFE2
 29210                           fsr1l	equ	0xFE1
 29211                           indf2	equ	0xFDF
 29212                           postinc2	equ	0xFDE
 29213                           postdec2	equ	0xFDD
 29214                           plusw2	equ	0xFDB
 29215                           fsr2h	equ	0xFDA
 29216                           fsr2l	equ	0xFD9
 29217                           status	equ	0xFD8
 29218                           
 29219 ;; *************** function _MSDTasks *****************
 29220 ;; Defined at:
 29221 ;;		line 335 in file "usb_device_msd.c"
 29222 ;; Parameters:    Size  Location     Type
 29223 ;;		None
 29224 ;; Auto vars:     Size  Location     Type
 29225 ;;  i               1   81[BANK0 ] unsigned char 
 29226 ;; Return value:  Size  Location     Type
 29227 ;;                  1    wreg      unsigned char 
 29228 ;; Registers used:
 29229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29230 ;; Tracked objects:
 29231 ;;		On entry : 0/0
 29232 ;;		On exit  : 0/0
 29233 ;;		Unchanged: 0/0
 29234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29236 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29239 ;;Total ram usage:        6 bytes
 29240 ;; Hardware stack levels used:    1
 29241 ;; Hardware stack levels required when called:   20
 29242 ;; This function calls:
 29243 ;;		_MSDProcessCommand
 29244 ;;		_USBStallEndpoint
 29245 ;;		_USBTransferOnePacket
 29246 ;; This function is called by:
 29247 ;;		_APP_DeviceMSDTasks
 29248 ;; This function uses a non-reentrant model
 29249 ;;
 29250                           
 29251                           	psect	text135
 29252  00F286                     __ptext135:
 29253                           	opt stack 0
 29254  00F286                     _MSDTasks:
 29255                           	opt stack 9
 29256                           
 29257                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 29258                           
 29259                           ;incstack = 0
 29260  00F286  0E20               	movlw	32
 29261  00F288  182B               	xorwf	_USBDeviceState,w,c	;volatile
 29262  00F28A  A4D8               	btfss	status,2,c
 29263  00F28C  0012               	return	
 29264                           
 29265                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 29266                           
 29267                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 29268  00F28E  98A0               	bcf	4000,4,c	;volatile
 29269                           
 29270                           ;usb_device_msd.c: 357: switch(MSD_State)
 29271  00F290  D119               	goto	l574
 29272  00F292                     
 29273                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 29274  00F292  0100               	movlb	0	; () banked
 29275  00F294  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 29276  00F296  11DF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 29277  00F298  B4D8               	btfsc	status,2,c
 29278  00F29A  D006               	goto	u19530
 29279                           
 29280                           ; BSR set to: 0
 29281  00F29C  C0DE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29282  00F2A0  C0DF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29283  00F2A4  BEDF               	btfsc	indf2,7,c
 29284  00F2A6  D11D               	goto	l590
 29285  00F2A8                     u19530:
 29286                           
 29287                           ; BSR set to: 0
 29288                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 29289                           
 29290                           ; BSR set to: 0
 29291  00F2A8  0E00               	movlw	0
 29292  00F2AA  6FB1               	movwf	MSDTasks@i& (0+255),b
 29293  00F2AC                     l20451:
 29294                           
 29295                           ; BSR set to: 0
 29296  00F2AC  0E1E               	movlw	30
 29297  00F2AE  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 29298  00F2B0  D001               	goto	l579
 29299  00F2B2  D014               	goto	u19550
 29300  00F2B4                     l579:
 29301                           
 29302                           ; BSR set to: 0
 29303                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 29304                           
 29305                           ; BSR set to: 0
 29306  00F2B4  51B1               	movf	MSDTasks@i& (0+255),w,b
 29307  00F2B6  0D01               	mullw	1
 29308  00F2B8  0E40               	movlw	64
 29309  00F2BA  24F3               	addwf	prodl,w,c
 29310  00F2BC  6ED9               	movwf	fsr2l,c
 29311  00F2BE  0E0D               	movlw	13
 29312  00F2C0  20F4               	addwfc	prodh,w,c
 29313  00F2C2  6EDA               	movwf	fsr2h,c
 29314  00F2C4  51B1               	movf	MSDTasks@i& (0+255),w,b
 29315  00F2C6  0D01               	mullw	1
 29316  00F2C8  0E41               	movlw	low _gblCBW
 29317  00F2CA  24F3               	addwf	prodl,w,c
 29318  00F2CC  6EE1               	movwf	fsr1l,c
 29319  00F2CE  0E02               	movlw	high _gblCBW
 29320  00F2D0  20F4               	addwfc	prodh,w,c
 29321  00F2D2  6EE2               	movwf	fsr1h,c
 29322  00F2D4  CFDF FFE7          	movff	indf2,indf1
 29323                           
 29324                           ; BSR set to: 0
 29325  00F2D8  2BB1               	incf	MSDTasks@i& (0+255),f,b
 29326  00F2DA  D7E8               	goto	l20451
 29327  00F2DC                     u19550:
 29328                           
 29329                           ; BSR set to: 0
 29330                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 29331                           
 29332                           ; BSR set to: 0
 29333  00F2DC  EE20 F001          	lfsr	2,1
 29334  00F2E0  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 29335  00F2E2  26D9               	addwf	fsr2l,f,c
 29336  00F2E4  51DF               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 29337  00F2E6  22DA               	addwfc	fsr2h,f,c
 29338  00F2E8  0E1F               	movlw	31
 29339  00F2EA  18DE               	xorwf	postinc2,w,c
 29340  00F2EC  A4D8               	btfss	status,2,c
 29341  00F2EE  D076               	goto	l581
 29342                           
 29343                           ; BSR set to: 0
 29344  00F2F0  0E55               	movlw	85
 29345  00F2F2  0102               	movlb	2	; () banked
 29346  00F2F4  1941               	xorwf	_gblCBW& (0+255),w,b
 29347  00F2F6  E172               	bnz	l581
 29348  00F2F8  0E53               	movlw	83
 29349  00F2FA  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 29350  00F2FC  E16F               	bnz	l581
 29351  00F2FE  0E42               	movlw	66
 29352  00F300  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 29353  00F302  E16C               	bnz	l581
 29354  00F304  0E43               	movlw	67
 29355  00F306  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 29356  00F308  A4D8               	btfss	status,2,c
 29357  00F30A  D068               	goto	l581
 29358                           
 29359                           ; BSR set to: 2
 29360                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 29361  00F30C  0E01               	movlw	1
 29362  00F30E  0101               	movlb	1	; () banked
 29363  00F310  6FF5               	movwf	_MSDCBWValid& (0+255),b
 29364                           
 29365                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 29366  00F312  0102               	movlb	2	; () banked
 29367  00F314  514E               	movf	(_gblCBW+13)& (0+255),w,b
 29368  00F316  A4D8               	btfss	status,2,c
 29369  00F318  D054               	goto	l582
 29370                           
 29371                           ; BSR set to: 2
 29372  00F31A  0E11               	movlw	17
 29373  00F31C  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 29374  00F31E  D051               	goto	l582
 29375                           
 29376                           ; BSR set to: 2
 29377  00F320  514F               	movf	(_gblCBW+14)& (0+255),w,b
 29378  00F322  B4D8               	btfsc	status,2,c
 29379  00F324  D04E               	goto	l582
 29380                           
 29381                           ; BSR set to: 2
 29382  00F326  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 29383  00F32A  0E3F               	movlw	63
 29384  00F32C  0100               	movlb	0	; () banked
 29385  00F32E  17AC               	andwf	??_MSDTasks& (0+255),f,b
 29386  00F330  A4D8               	btfss	status,2,c
 29387  00F332  D047               	goto	l582
 29388                           
 29389                           ; BSR set to: 0
 29390                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 29391  00F334  0E55               	movlw	85
 29392  00F336  010D               	movlb	13	; () banked
 29393  00F338  6F80               	movwf	128,b	;volatile
 29394  00F33A  0E53               	movlw	83
 29395  00F33C  6F81               	movwf	129,b	;volatile
 29396  00F33E  0E42               	movlw	66
 29397  00F340  6F82               	movwf	130,b	;volatile
 29398  00F342  0E53               	movlw	83
 29399  00F344  6F83               	movwf	131,b	;volatile
 29400                           
 29401                           ; BSR set to: 13
 29402                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 29403  00F346  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 29404  00F34A  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 29405  00F34E  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 29406  00F352  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 29407                           
 29408                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 29409  00F356  0E00               	movlw	0
 29410  00F358  6F88               	movwf	136,b	;volatile
 29411  00F35A  0E00               	movlw	0
 29412  00F35C  6F89               	movwf	137,b	;volatile
 29413  00F35E  0E00               	movlw	0
 29414  00F360  6F8A               	movwf	138,b	;volatile
 29415  00F362  0E00               	movlw	0
 29416  00F364  6F8B               	movwf	139,b	;volatile
 29417                           
 29418                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 29419  00F366  0E00               	movlw	0
 29420  00F368  6F8C               	movwf	140,b	;volatile
 29421                           
 29422                           ; BSR set to: 13
 29423                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 29424  00F36A  0100               	movlb	0	; () banked
 29425  00F36C  69E7               	setf	_MSDCommandState& (0+255),b
 29426                           
 29427                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 29428  00F36E  0E00               	movlw	0
 29429  00F370  0101               	movlb	1	; () banked
 29430  00F372  6FF9               	movwf	_MSDReadState& (0+255),b
 29431                           
 29432                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 29433  00F374  0E00               	movlw	0
 29434  00F376  6E1F               	movwf	_MSDWriteState,c
 29435                           
 29436                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 29437  00F378  0E00               	movlw	0
 29438  00F37A  6FF8               	movwf	_MSDRetryAttempt& (0+255),b
 29439                           
 29440                           ; BSR set to: 1
 29441                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 29442  00F37C  0E03               	movlw	3
 29443  00F37E  0102               	movlb	2	; () banked
 29444  00F380  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 29445  00F382  B4D8               	btfsc	status,2,c
 29446  00F384  D008               	goto	l583
 29447                           
 29448                           ; BSR set to: 2
 29449                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 29450  00F386  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 29451  00F388  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 29452  00F38A  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 29453  00F38C  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 29454                           
 29455                           ; BSR set to: 2
 29456                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 29457  00F38E  0E00               	movlw	0
 29458  00F390  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 29459                           
 29460                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 29461  00F392  0E00               	movlw	0
 29462  00F394  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 29463  00F396                     l583:
 29464                           
 29465                           ; BSR set to: 2
 29466                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 29467                           
 29468                           ; BSR set to: 2
 29469  00F396  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 29470  00F398  D002               	goto	l584
 29471                           
 29472                           ; BSR set to: 2
 29473                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 29474  00F39A  0E01               	movlw	1
 29475  00F39C  D001               	goto	L21
 29476  00F39E                     l584:
 29477                           
 29478                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 29479                           
 29480                           ; BSR set to: 0
 29481  00F39E  0E02               	movlw	2
 29482  00F3A0                     L21:
 29483  00F3A0  0100               	movlb	0	; () banked
 29484  00F3A2  6FE8               	movwf	_MSD_State& (0+255),b
 29485                           
 29486                           ; BSR set to: 0
 29487                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 29488                           
 29489                           ; BSR set to: 0
 29490  00F3A4  0102               	movlb	2	; () banked
 29491  00F3A6  5149               	movf	(_gblCBW+8)& (0+255),w,b
 29492  00F3A8  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 29493  00F3AA  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 29494  00F3AC  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 29495  00F3AE  B4D8               	btfsc	status,2,c
 29496  00F3B0  D002               	goto	l586
 29497                           
 29498                           ; BSR set to: 2
 29499                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 29500  00F3B2  0E00               	movlw	0
 29501  00F3B4  D001               	goto	L22
 29502  00F3B6                     l586:
 29503                           
 29504                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 29505                           
 29506                           ; BSR set to: 0
 29507  00F3B6  0E01               	movlw	1
 29508  00F3B8                     L22:
 29509  00F3B8  0100               	movlb	0	; () banked
 29510  00F3BA  6FE6               	movwf	_MSDHostNoData& (0+255),b
 29511                           
 29512                           ; BSR set to: 0
 29513                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 29514                           
 29515                           ; BSR set to: 0
 29516  00F3BC  C250  F0E7         	movff	_gblCBW+15,_MSDCommandState
 29517                           
 29518                           ;usb_device_msd.c: 454: }
 29519  00F3C0  D090               	goto	l590
 29520  00F3C2                     l582:
 29521                           
 29522                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 29523                           
 29524                           ; BSR set to: 0
 29525  00F3C2  0E01               	movlw	1
 29526  00F3C4  0100               	movlb	0	; () banked
 29527  00F3C6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29528  00F3C8  0E02               	movlw	2
 29529  00F3CA  EC17  F08C         	call	_USBStallEndpoint
 29530                           
 29531                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 29532  00F3CE  0E00               	movlw	0
 29533  00F3D0  0100               	movlb	0	; () banked
 29534  00F3D2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29535  00F3D4  0E02               	movlw	2
 29536  00F3D6  EC17  F08C         	call	_USBStallEndpoint
 29537                           
 29538                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 29539  00F3DA  D083               	goto	l590
 29540  00F3DC                     l581:
 29541                           
 29542                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 29543  00F3DC  0E01               	movlw	1
 29544  00F3DE  0100               	movlb	0	; () banked
 29545  00F3E0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29546  00F3E2  0E02               	movlw	2
 29547  00F3E4  EC17  F08C         	call	_USBStallEndpoint
 29548                           
 29549                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 29550  00F3E8  0E00               	movlw	0
 29551  00F3EA  0100               	movlb	0	; () banked
 29552  00F3EC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29553  00F3EE  0E02               	movlw	2
 29554  00F3F0  EC17  F08C         	call	_USBStallEndpoint
 29555                           
 29556                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 29557  00F3F4  0E00               	movlw	0
 29558  00F3F6  0101               	movlb	1	; () banked
 29559  00F3F8  6FF5               	movwf	_MSDCBWValid& (0+255),b
 29560                           
 29561                           ; BSR set to: 1
 29562                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 29563                           
 29564                           ; BSR set to: 1
 29565  00F3FA  D073               	goto	l590
 29566  00F3FC                     
 29567                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 29568                           
 29569                           ; BSR set to: 1
 29570  00F3FC  EC03  F087         	call	_MSDProcessCommand	;wreg free
 29571  00F400  0AFF               	xorlw	255
 29572  00F402  A4D8               	btfss	status,2,c
 29573  00F404  D06E               	goto	l590
 29574  00F406  D011               	goto	l595
 29575  00F408                     
 29576                           ; BSR set to: 0
 29577                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 29578                           
 29579                           ; BSR set to: 0
 29580  00F408  EC03  F087         	call	_MSDProcessCommand	;wreg free
 29581  00F40C  0AFF               	xorlw	255
 29582  00F40E  A4D8               	btfss	status,2,c
 29583  00F410  D068               	goto	l590
 29584                           
 29585                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 29586  00F412  010D               	movlb	13	; () banked
 29587  00F414  518C               	movf	140,w,b	;volatile
 29588  00F416  A4D8               	btfss	status,2,c
 29589  00F418  D008               	goto	l595
 29590                           
 29591                           ; BSR set to: 13
 29592  00F41A  5188               	movf	136,w,b	;volatile
 29593  00F41C  1189               	iorwf	137,w,b	;volatile
 29594  00F41E  118A               	iorwf	138,w,b	;volatile
 29595  00F420  118B               	iorwf	139,w,b	;volatile
 29596  00F422  B4D8               	btfsc	status,2,c
 29597  00F424  D002               	goto	l595
 29598                           
 29599                           ; BSR set to: 13
 29600                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 29601  00F426  0E02               	movlw	2
 29602  00F428  6F8C               	movwf	140,b	;volatile
 29603  00F42A                     l595:
 29604                           
 29605                           ; BSR set to: 13
 29606                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 29607  00F42A  0E03               	movlw	3
 29608  00F42C  D03C               	goto	L20
 29609  00F42E                     
 29610                           ; BSR set to: 0
 29611                           
 29612                           ; BSR set to: 0
 29613  00F42E  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2697
 29614  00F432  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2697+1
 29615                           
 29616                           ; BSR set to: 0
 29617                           
 29618                           ; BSR set to: 0
 29619                           
 29620                           ; BSR set to: 0
 29621  00F436  51AD               	movf	_MSDTasks$2697& (0+255),w,b
 29622  00F438  11AE               	iorwf	(_MSDTasks$2697+1)& (0+255),w,b
 29623  00F43A  B4D8               	btfsc	status,2,c
 29624  00F43C  D00A               	goto	l597
 29625                           
 29626                           ; BSR set to: 0
 29627  00F43E  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2698
 29628  00F442  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2698+1
 29629                           
 29630                           ; BSR set to: 0
 29631                           
 29632                           ; BSR set to: 0
 29633                           
 29634                           ; BSR set to: 0
 29635                           
 29636                           ; BSR set to: 0
 29637  00F446  C0AF  FFD9         	movff	_MSDTasks$2698,fsr2l
 29638  00F44A  C0B0  FFDA         	movff	_MSDTasks$2698+1,fsr2h
 29639  00F44E  BEDF               	btfsc	indf2,7,c
 29640  00F450  D048               	goto	l590
 29641  00F452                     l597:
 29642                           
 29643                           ; BSR set to: 0
 29644                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 29645                           
 29646                           ; BSR set to: 0
 29647  00F452  0E01               	movlw	1
 29648  00F454  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29649  00F456  0E80               	movlw	128
 29650  00F458  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29651  00F45A  0E0D               	movlw	13
 29652  00F45C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29653  00F45E  0E0D               	movlw	13
 29654  00F460  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29655  00F462  0E02               	movlw	2
 29656  00F464  EC9C  F08C         	call	_USBTransferOnePacket
 29657  00F468  C060  F0DC         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 29658  00F46C  C061  F0DD         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 29659                           
 29660                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 29661  00F470  0100               	movlb	0	; () banked
 29662  00F472  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 29663  00F474  11DF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 29664  00F476  B4D8               	btfsc	status,2,c
 29665  00F478  D006               	goto	u19720
 29666                           
 29667                           ; BSR set to: 0
 29668  00F47A  C0DE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29669  00F47E  C0DF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29670  00F482  BEDF               	btfsc	indf2,7,c
 29671  00F484  D00F               	goto	l606
 29672  00F486                     u19720:
 29673                           
 29674                           ; BSR set to: 0
 29675                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 29676                           
 29677                           ; BSR set to: 0
 29678  00F486  0E00               	movlw	0
 29679  00F488  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29680  00F48A  0E40               	movlw	64
 29681  00F48C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29682  00F48E  0E0D               	movlw	13
 29683  00F490  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29684  00F492  0E40               	movlw	64
 29685  00F494  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29686  00F496  0E02               	movlw	2
 29687  00F498  EC9C  F08C         	call	_USBTransferOnePacket
 29688  00F49C  C060  F0DE         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 29689  00F4A0  C061  F0DF         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 29690  00F4A4                     l606:
 29691                           
 29692                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 29693  00F4A4  0E00               	movlw	0
 29694  00F4A6                     L20:
 29695  00F4A6  0100               	movlb	0	; () banked
 29696  00F4A8  6FE8               	movwf	_MSD_State& (0+255),b
 29697                           
 29698                           ;usb_device_msd.c: 513: break;
 29699  00F4AA  D01B               	goto	l590
 29700  00F4AC                     
 29701                           ; BSR set to: 0
 29702                           ;usb_device_msd.c: 518: MSD_State=0x00;
 29703                           
 29704                           ; BSR set to: 0
 29705  00F4AC  0E00               	movlw	0
 29706  00F4AE  6FE8               	movwf	_MSD_State& (0+255),b
 29707                           
 29708                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 29709  00F4B0  0E02               	movlw	2
 29710  00F4B2  010D               	movlb	13	; () banked
 29711  00F4B4  6F8C               	movwf	140,b	;volatile
 29712                           
 29713                           ; BSR set to: 13
 29714                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 29715  00F4B6  0E00               	movlw	0
 29716  00F4B8  0100               	movlb	0	; () banked
 29717  00F4BA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29718  00F4BC  0E02               	movlw	2
 29719  00F4BE  EC17  F08C         	call	_USBStallEndpoint
 29720                           
 29721                           ;usb_device_msd.c: 521: }
 29722  00F4C2  D00F               	goto	l590
 29723  00F4C4                     l574:
 29724  00F4C4  0100               	movlb	0	; () banked
 29725  00F4C6  51E8               	movf	_MSD_State& (0+255),w,b
 29726                           
 29727                           ; Switch size 1, requested type "space"
 29728                           ; Number of cases is 4, Range of values is 0 to 3
 29729                           ; switch strategies available:
 29730                           ; Name         Instructions Cycles
 29731                           ; simple_byte           13     7 (average)
 29732                           ;	Chosen strategy is simple_byte
 29733  00F4C8  0A00               	xorlw	0	; case 0
 29734  00F4CA  B4D8               	btfsc	status,2,c
 29735  00F4CC  D6E2               	goto	l575
 29736  00F4CE  0A01               	xorlw	1	; case 1
 29737  00F4D0  B4D8               	btfsc	status,2,c
 29738  00F4D2  D794               	goto	l591
 29739  00F4D4  0A03               	xorlw	3	; case 2
 29740  00F4D6  B4D8               	btfsc	status,2,c
 29741  00F4D8  D797               	goto	l593
 29742  00F4DA  0A01               	xorlw	1	; case 3
 29743  00F4DC  B4D8               	btfsc	status,2,c
 29744  00F4DE  D7A7               	goto	l596
 29745  00F4E0  D7E5               	goto	l609
 29746  00F4E2                     l590:
 29747                           
 29748                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 29749  00F4E2  88A0               	bsf	4000,4,c	;volatile
 29750                           
 29751                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 29752  00F4E4  0012               	return		;funcret
 29753  00F4E6                     __end_of_MSDTasks:
 29754                           	opt stack 0
 29755                           tblptru	equ	0xFF8
 29756                           tblptrh	equ	0xFF7
 29757                           tblptrl	equ	0xFF6
 29758                           tablat	equ	0xFF5
 29759                           prodh	equ	0xFF4
 29760                           prodl	equ	0xFF3
 29761                           intcon	equ	0xFF2
 29762                           intcon2	equ	0xFF1
 29763                           intcon3	equ	0xFF0
 29764                           postinc0	equ	0xFEE
 29765                           wreg	equ	0xFE8
 29766                           indf1	equ	0xFE7
 29767                           postinc1	equ	0xFE6
 29768                           postdec1	equ	0xFE5
 29769                           plusw1	equ	0xFE3
 29770                           fsr1h	equ	0xFE2
 29771                           fsr1l	equ	0xFE1
 29772                           indf2	equ	0xFDF
 29773                           postinc2	equ	0xFDE
 29774                           postdec2	equ	0xFDD
 29775                           plusw2	equ	0xFDB
 29776                           fsr2h	equ	0xFDA
 29777                           fsr2l	equ	0xFD9
 29778                           status	equ	0xFD8
 29779                           
 29780 ;; *************** function _MSDProcessCommand *****************
 29781 ;; Defined at:
 29782 ;;		line 553 in file "usb_device_msd.c"
 29783 ;; Parameters:    Size  Location     Type
 29784 ;;		None
 29785 ;; Auto vars:     Size  Location     Type
 29786 ;;		None
 29787 ;; Return value:  Size  Location     Type
 29788 ;;                  1    wreg      unsigned char 
 29789 ;; Registers used:
 29790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29791 ;; Tracked objects:
 29792 ;;		On entry : 0/0
 29793 ;;		On exit  : 0/0
 29794 ;;		Unchanged: 0/0
 29795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29798 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29799 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29800 ;;Total ram usage:        5 bytes
 29801 ;; Hardware stack levels used:    1
 29802 ;; Hardware stack levels required when called:   19
 29803 ;; This function calls:
 29804 ;;		_ExternalFlash_MediaDetect
 29805 ;;		_ExternalFlash_MediaInitialize
 29806 ;;		_MSDProcessCommandMediaAbsent
 29807 ;;		_MSDProcessCommandMediaPresent
 29808 ;; This function is called by:
 29809 ;;		_MSDTasks
 29810 ;; This function uses a non-reentrant model
 29811 ;;
 29812                           
 29813                           	psect	text136
 29814  010E06                     __ptext136:
 29815                           	opt stack 0
 29816  010E06                     _MSDProcessCommand:
 29817                           	opt stack 9
 29818                           
 29819                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 29820                           
 29821                           ;incstack = 0
 29822  010E06  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 29823  010E0A  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 29824  010E0E  EE22  F0C4         	lfsr	2,_LUN+9
 29825  010E12  D801               	call	u18388
 29826  010E14  D00A               	goto	u18389
 29827  010E16                     u18388:
 29828  010E16  0005               	push	
 29829  010E18  6EFA               	movwf	pclath,c
 29830  010E1A  50DE               	movf	postinc2,w,c
 29831  010E1C  6EFD               	movwf	tosl,c
 29832  010E1E  50DE               	movf	postinc2,w,c
 29833  010E20  6EFE               	movwf	tosh,c
 29834  010E22  50DE               	movf	postinc2,w,c
 29835  010E24  6EFF               	movwf	tosu,c
 29836  010E26  50FA               	movf	pclath,w,c
 29837  010E28  0012               	return		;indir
 29838  010E2A                     u18389:
 29839  010E2A  0900               	iorlw	0
 29840  010E2C  B4D8               	btfsc	status,2,c
 29841  010E2E  D00C               	goto	u18400
 29842  010E30  0102               	movlb	2	; () banked
 29843  010E32  514E               	movf	(_gblCBW+13)& (0+255),w,b
 29844  010E34  0D01               	mullw	1
 29845  010E36  0EF6               	movlw	low _SoftDetach
 29846  010E38  24F3               	addwf	prodl,w,c
 29847  010E3A  6ED9               	movwf	fsr2l,c
 29848  010E3C  0E01               	movlw	high _SoftDetach
 29849  010E3E  20F4               	addwfc	prodh,w,c
 29850  010E40  6EDA               	movwf	fsr2h,c
 29851  010E42  04DE               	decf	postinc2,w,c
 29852  010E44  A4D8               	btfss	status,2,c
 29853  010E46  D01D               	goto	l612
 29854  010E48                     u18400:
 29855                           
 29856                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 29857                           
 29858                           ; BSR set to: 2
 29859  010E48  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 29860  010E4C  0E01               	movlw	1
 29861  010E4E  0100               	movlb	0	; () banked
 29862  010E50  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 29863  010E52  0E00               	movlw	0
 29864  010E54  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 29865  010E56  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 29866  010E58  D003               	goto	u18414
 29867  010E5A                     u18415:
 29868  010E5A  90D8               	bcf	status,0,c
 29869  010E5C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 29870  010E5E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 29871  010E60                     u18414:
 29872  010E60  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 29873  010E62  D7FB               	goto	u18415
 29874  010E64  0100               	movlb	0	; () banked
 29875  010E66  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 29876  010E68  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 29877  010E6A  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 29878  010E6C  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 29879  010E6E  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 29880  010E70  0102               	movlb	2	; () banked
 29881  010E72  17B2               	andwf	_gblMediaPresent& (0+255),f,b
 29882  010E74  0100               	movlb	0	; () banked
 29883  010E76  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 29884  010E78  0102               	movlb	2	; () banked
 29885  010E7A  17B3               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 29886                           
 29887                           ; BSR set to: 2
 29888                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 29889  010E7C  ECC7  F0A2         	call	_MSDProcessCommandMediaAbsent	;wreg free
 29890                           
 29891                           ;usb_device_msd.c: 563: }
 29892  010E80  D058               	goto	l619
 29893  010E82                     l612:
 29894                           
 29895                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 29896  010E82  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 29897  010E86  0E01               	movlw	1
 29898  010E88  0100               	movlb	0	; () banked
 29899  010E8A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 29900  010E8C  0E00               	movlw	0
 29901  010E8E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 29902  010E90  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 29903  010E92  D003               	goto	u18424
 29904  010E94                     u18425:
 29905  010E94  90D8               	bcf	status,0,c
 29906  010E96  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 29907  010E98  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 29908  010E9A                     u18424:
 29909  010E9A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 29910  010E9C  D7FB               	goto	u18425
 29911  010E9E  0102               	movlb	2	; () banked
 29912  010EA0  51B2               	movf	_gblMediaPresent& (0+255),w,b
 29913  010EA2  0100               	movlb	0	; () banked
 29914  010EA4  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 29915  010EA6  0102               	movlb	2	; () banked
 29916  010EA8  51B3               	movf	(_gblMediaPresent+1)& (0+255),w,b
 29917  010EAA  0100               	movlb	0	; () banked
 29918  010EAC  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 29919  010EAE  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 29920  010EB0  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 29921  010EB2  A4D8               	btfss	status,2,c
 29922  010EB4  D03C               	goto	l616
 29923                           
 29924                           ; BSR set to: 0
 29925                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 29926  010EB6  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 29927  010EBA  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 29928  010EBE  D801               	call	u18448
 29929  010EC0  D00B               	goto	u18449
 29930  010EC2                     u18448:
 29931  010EC2  0005               	push	
 29932  010EC4  6EFA               	movwf	pclath,c
 29933  010EC6  0102               	movlb	2	; () banked
 29934  010EC8  51BB               	movf	_LUN& (0+255),w,b
 29935  010ECA  6EFD               	movwf	tosl,c
 29936  010ECC  51BC               	movf	(_LUN+1)& (0+255),w,b
 29937  010ECE  6EFE               	movwf	tosh,c
 29938  010ED0  51BD               	movf	(_LUN+2)& (0+255),w,b
 29939  010ED2  6EFF               	movwf	tosu,c
 29940  010ED4  50FA               	movf	pclath,w,c
 29941  010ED6  0012               	return		;indir
 29942  010ED8                     u18449:
 29943  010ED8  0100               	movlb	0	; () banked
 29944  010EDA  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 29945  010EDC  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 29946  010EDE  B4D8               	btfsc	status,2,c
 29947  010EE0  D023               	goto	l617
 29948                           
 29949                           ; BSR set to: 0
 29950                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 29951  010EE2  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 29952  010EE6  0E01               	movlw	1
 29953  010EE8  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 29954  010EEA  0E00               	movlw	0
 29955  010EEC  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 29956  010EEE  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 29957  010EF0  D003               	goto	u18464
 29958  010EF2                     u18465:
 29959  010EF2  90D8               	bcf	status,0,c
 29960  010EF4  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 29961  010EF6  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 29962  010EF8                     u18464:
 29963  010EF8  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 29964  010EFA  D7FB               	goto	u18465
 29965  010EFC  0100               	movlb	0	; () banked
 29966  010EFE  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 29967  010F00  0102               	movlb	2	; () banked
 29968  010F02  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 29969  010F04  0100               	movlb	0	; () banked
 29970  010F06  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 29971  010F08  0102               	movlb	2	; () banked
 29972  010F0A  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 29973                           
 29974                           ; BSR set to: 2
 29975                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 29976  010F0C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 29977  010F0E  0BF0               	andlw	-16
 29978  010F10  0906               	iorlw	6
 29979  010F12  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 29980                           
 29981                           ; BSR set to: 2
 29982                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 29983  010F14  0E28               	movlw	40
 29984  010F16  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 29985                           
 29986                           ; BSR set to: 2
 29987                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 29988  010F18  0E00               	movlw	0
 29989  010F1A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 29990                           
 29991                           ; BSR set to: 2
 29992                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 29993  010F1C  0E01               	movlw	1
 29994  010F1E  010D               	movlb	13	; () banked
 29995  010F20  6F8C               	movwf	140,b	;volatile
 29996                           
 29997                           ; BSR set to: 13
 29998                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 29999  010F22  EC92  F067         	call	_MSDProcessCommandMediaPresent	;wreg free
 30000                           
 30001                           ;usb_device_msd.c: 589: }
 30002  010F26  D005               	goto	l619
 30003  010F28                     l617:
 30004                           
 30005                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 30006  010F28  ECC7  F0A2         	call	_MSDProcessCommandMediaAbsent	;wreg free
 30007                           
 30008                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 30009  010F2C  D002               	goto	l619
 30010  010F2E                     l616:
 30011                           
 30012                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 30013  010F2E  EC92  F067         	call	_MSDProcessCommandMediaPresent	;wreg free
 30014  010F32                     l619:
 30015                           
 30016                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 30017  010F32  0100               	movlb	0	; () banked
 30018  010F34  51E7               	movf	_MSDCommandState& (0+255),w,b
 30019  010F36  0012               	return	
 30020  010F38                     __end_of_MSDProcessCommand:
 30021                           	opt stack 0
 30022                           tosu	equ	0xFFF
 30023                           tosh	equ	0xFFE
 30024                           tosl	equ	0xFFD
 30025                           pclath	equ	0xFFA
 30026                           tblptru	equ	0xFF8
 30027                           tblptrh	equ	0xFF7
 30028                           tblptrl	equ	0xFF6
 30029                           tablat	equ	0xFF5
 30030                           prodh	equ	0xFF4
 30031                           prodl	equ	0xFF3
 30032                           intcon	equ	0xFF2
 30033                           intcon2	equ	0xFF1
 30034                           intcon3	equ	0xFF0
 30035                           postinc0	equ	0xFEE
 30036                           wreg	equ	0xFE8
 30037                           indf1	equ	0xFE7
 30038                           postinc1	equ	0xFE6
 30039                           postdec1	equ	0xFE5
 30040                           plusw1	equ	0xFE3
 30041                           fsr1h	equ	0xFE2
 30042                           fsr1l	equ	0xFE1
 30043                           indf2	equ	0xFDF
 30044                           postinc2	equ	0xFDE
 30045                           postdec2	equ	0xFDD
 30046                           plusw2	equ	0xFDB
 30047                           fsr2h	equ	0xFDA
 30048                           fsr2l	equ	0xFD9
 30049                           status	equ	0xFD8
 30050                           
 30051 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 30052 ;; Defined at:
 30053 ;;		line 635 in file "usb_device_msd.c"
 30054 ;; Parameters:    Size  Location     Type
 30055 ;;		None
 30056 ;; Auto vars:     Size  Location     Type
 30057 ;;		None
 30058 ;; Return value:  Size  Location     Type
 30059 ;;                  1    wreg      void 
 30060 ;; Registers used:
 30061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30062 ;; Tracked objects:
 30063 ;;		On entry : 0/0
 30064 ;;		On exit  : 0/0
 30065 ;;		Unchanged: 0/0
 30066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30071 ;;Total ram usage:        0 bytes
 30072 ;; Hardware stack levels used:    1
 30073 ;; Hardware stack levels required when called:   18
 30074 ;; This function calls:
 30075 ;;		_MSDErrorHandler
 30076 ;;		_MSDProcessCommandMediaPresent
 30077 ;;		_ResetSenseData
 30078 ;; This function is called by:
 30079 ;;		_MSDProcessCommand
 30080 ;; This function uses a non-reentrant model
 30081 ;;
 30082                           
 30083                           	psect	text137
 30084  01458E                     __ptext137:
 30085                           	opt stack 0
 30086  01458E                     _MSDProcessCommandMediaAbsent:
 30087                           	opt stack 9
 30088                           
 30089                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 30090                           
 30091                           ; BSR set to: 0
 30092                           ;incstack = 0
 30093  01458E  D01E               	goto	l623
 30094  014590                     
 30095                           ;usb_device_msd.c: 646: ResetSenseData();
 30096  014590  ECF8  F0A2         	call	_ResetSenseData	;wreg free
 30097                           
 30098                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 30099  014594  0102               	movlb	2	; () banked
 30100  014596  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30101  014598  0BF0               	andlw	-16
 30102  01459A  0902               	iorlw	2
 30103  01459C  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30104                           
 30105                           ; BSR set to: 2
 30106                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 30107  01459E  0E3A               	movlw	58
 30108  0145A0  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30109                           
 30110                           ; BSR set to: 2
 30111                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 30112  0145A2  0E00               	movlw	0
 30113  0145A4  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30114                           
 30115                           ; BSR set to: 2
 30116                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 30117  0145A6  EC92  F067         	call	_MSDProcessCommandMediaPresent	;wreg free
 30118                           
 30119                           ;usb_device_msd.c: 655: break;
 30120  0145AA  0012               	return	
 30121  0145AC                     
 30122                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 30123  0145AC  0E01               	movlw	1
 30124  0145AE  010D               	movlb	13	; () banked
 30125  0145B0  6F8C               	movwf	140,b	;volatile
 30126                           
 30127                           ; BSR set to: 13
 30128                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 30129  0145B2  0100               	movlb	0	; () banked
 30130  0145B4  69E7               	setf	_MSDCommandState& (0+255),b
 30131                           
 30132                           ;usb_device_msd.c: 665: break;
 30133  0145B6  0012               	return	
 30134  0145B8                     
 30135                           ; BSR set to: 0
 30136                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 30137                           
 30138                           ; BSR set to: 0
 30139  0145B8  EC92  F067         	call	_MSDProcessCommandMediaPresent	;wreg free
 30140                           
 30141                           ;usb_device_msd.c: 671: break;
 30142  0145BC  0012               	return	
 30143  0145BE                     
 30144                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 30145  0145BE  EC92  F067         	call	_MSDProcessCommandMediaPresent	;wreg free
 30146                           
 30147                           ;usb_device_msd.c: 677: break;
 30148  0145C2  0012               	return	
 30149  0145C4                     
 30150                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 30151  0145C4  0E7F               	movlw	127
 30152  0145C6  EC7A  F08A         	call	_MSDErrorHandler
 30153                           
 30154                           ;usb_device_msd.c: 685: }
 30155                           
 30156                           ;usb_device_msd.c: 684: break;
 30157  0145CA  0012               	return	
 30158  0145CC                     l623:
 30159  0145CC  0100               	movlb	0	; () banked
 30160  0145CE  51E7               	movf	_MSDCommandState& (0+255),w,b
 30161                           
 30162                           ; Switch size 1, requested type "space"
 30163                           ; Number of cases is 5, Range of values is 0 to 253
 30164                           ; switch strategies available:
 30165                           ; Name         Instructions Cycles
 30166                           ; simple_byte           16     9 (average)
 30167                           ;	Chosen strategy is simple_byte
 30168  0145D0  0A00               	xorlw	0	; case 0
 30169  0145D2  B4D8               	btfsc	status,2,c
 30170  0145D4  D7EB               	goto	l626
 30171  0145D6  0A03               	xorlw	3	; case 3
 30172  0145D8  B4D8               	btfsc	status,2,c
 30173  0145DA  D7DA               	goto	l624
 30174  0145DC  0A11               	xorlw	17	; case 18
 30175  0145DE  B4D8               	btfsc	status,2,c
 30176  0145E0  D7EB               	goto	l628
 30177  0145E2  0A0C               	xorlw	12	; case 30
 30178  0145E4  B4D8               	btfsc	status,2,c
 30179  0145E6  D7E2               	goto	l626
 30180  0145E8  0AE3               	xorlw	227	; case 253
 30181  0145EA  B4D8               	btfsc	status,2,c
 30182  0145EC  D7E8               	goto	l629
 30183  0145EE  D7EA               	goto	l630
 30184  0145F0                     __end_of_MSDProcessCommandMediaAbsent:
 30185                           	opt stack 0
 30186                           tosu	equ	0xFFF
 30187                           tosh	equ	0xFFE
 30188                           tosl	equ	0xFFD
 30189                           pclath	equ	0xFFA
 30190                           tblptru	equ	0xFF8
 30191                           tblptrh	equ	0xFF7
 30192                           tblptrl	equ	0xFF6
 30193                           tablat	equ	0xFF5
 30194                           prodh	equ	0xFF4
 30195                           prodl	equ	0xFF3
 30196                           intcon	equ	0xFF2
 30197                           intcon2	equ	0xFF1
 30198                           intcon3	equ	0xFF0
 30199                           postinc0	equ	0xFEE
 30200                           wreg	equ	0xFE8
 30201                           indf1	equ	0xFE7
 30202                           postinc1	equ	0xFE6
 30203                           postdec1	equ	0xFE5
 30204                           plusw1	equ	0xFE3
 30205                           fsr1h	equ	0xFE2
 30206                           fsr1l	equ	0xFE1
 30207                           indf2	equ	0xFDF
 30208                           postinc2	equ	0xFDE
 30209                           postdec2	equ	0xFDD
 30210                           plusw2	equ	0xFDB
 30211                           fsr2h	equ	0xFDA
 30212                           fsr2l	equ	0xFD9
 30213                           status	equ	0xFD8
 30214                           
 30215 ;; *************** function _MSDProcessCommandMediaPresent *****************
 30216 ;; Defined at:
 30217 ;;		line 712 in file "usb_device_msd.c"
 30218 ;; Parameters:    Size  Location     Type
 30219 ;;		None
 30220 ;; Auto vars:     Size  Location     Type
 30221 ;;  capacity        4   66[BANK0 ] struct .
 30222 ;;  sectorSize      4   62[BANK0 ] struct .
 30223 ;;  i               1   70[BANK0 ] unsigned char 
 30224 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 30225 ;; Return value:  Size  Location     Type
 30226 ;;                  1    wreg      void 
 30227 ;; Registers used:
 30228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30229 ;; Tracked objects:
 30230 ;;		On entry : 0/0
 30231 ;;		On exit  : 0/0
 30232 ;;		Unchanged: 0/0
 30233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30235 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30237 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30238 ;;Total ram usage:       14 bytes
 30239 ;; Hardware stack levels used:    1
 30240 ;; Hardware stack levels required when called:   17
 30241 ;; This function calls:
 30242 ;;		_ExternalFlash_CapacityRead
 30243 ;;		_ExternalFlash_SectorSizeRead
 30244 ;;		_ExternalFlash_WriteProtectStateGet
 30245 ;;		_MSDCheckForErrorCases
 30246 ;;		_MSDComputeDeviceInAndResidue
 30247 ;;		_MSDErrorHandler
 30248 ;;		_MSDReadHandler
 30249 ;;		_MSDWriteHandler
 30250 ;;		_ResetSenseData
 30251 ;;		_USBTransferOnePacket
 30252 ;;		_memcpy
 30253 ;; This function is called by:
 30254 ;;		_MSDProcessCommand
 30255 ;;		_MSDProcessCommandMediaAbsent
 30256 ;; This function uses a non-reentrant model
 30257 ;;
 30258                           
 30259                           	psect	text138
 30260  00CF24                     __ptext138:
 30261                           	opt stack 0
 30262  00CF24                     _MSDProcessCommandMediaPresent:
 30263                           	opt stack 10
 30264                           
 30265                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 30266                           
 30267                           ;incstack = 0
 30268  00CF24  D1BF               	goto	l634
 30269  00CF26                     
 30270                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 30271  00CF26  ECB9  F07F         	call	_MSDReadHandler	;wreg free
 30272  00CF2A  0900               	iorlw	0
 30273  00CF2C  A4D8               	btfss	status,2,c
 30274  00CF2E  0012               	return	
 30275                           
 30276                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 30277  00CF30  0100               	movlb	0	; () banked
 30278  00CF32  69E7               	setf	_MSDCommandState& (0+255),b
 30279                           
 30280                           ; BSR set to: 0
 30281                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 30282  00CF34  0012               	return	
 30283  00CF36                     
 30284                           ; BSR set to: 0
 30285                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 30286                           
 30287                           ; BSR set to: 0
 30288  00CF36  EC4A  F075         	call	_MSDWriteHandler	;wreg free
 30289  00CF3A  0900               	iorlw	0
 30290  00CF3C  A4D8               	btfss	status,2,c
 30291  00CF3E  0012               	return	
 30292                           
 30293                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 30294  00CF40  0100               	movlb	0	; () banked
 30295  00CF42  69E7               	setf	_MSDCommandState& (0+255),b
 30296                           
 30297                           ; BSR set to: 0
 30298                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 30299  00CF44  0012               	return	
 30300  00CF46                     
 30301                           ; BSR set to: 0
 30302                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 30303                           
 30304                           ; BSR set to: 0
 30305  00CF46  05E6               	decf	_MSDHostNoData& (0+255),w,b
 30306  00CF48  A4D8               	btfss	status,2,c
 30307  00CF4A  D002               	goto	l641
 30308                           
 30309                           ; BSR set to: 0
 30310                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 30311  00CF4C  69E7               	setf	_MSDCommandState& (0+255),b
 30312                           
 30313                           ;usb_device_msd.c: 751: break;
 30314  00CF4E  0012               	return	
 30315  00CF50                     l641:
 30316                           
 30317                           ; BSR set to: 0
 30318                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 30319  00CF50  C253  F0DB         	movff	_gblCBW+18,_TransferLength+1
 30320                           
 30321                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 30322  00CF54  C254  F0DA         	movff	_gblCBW+19,_TransferLength
 30323                           
 30324                           ; BSR set to: 0
 30325                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 30326  00CF58  C0DA  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 30327  00CF5C  C0DB  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 30328  00CF60  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30329  00CF62  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30330  00CF64  EC24  F08F         	call	_MSDCheckForErrorCases	;wreg free
 30331  00CF68  0900               	iorlw	0
 30332  00CF6A  A4D8               	btfss	status,2,c
 30333  00CF6C  0012               	return	
 30334                           
 30335                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 30336                           
 30337                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 30338  00CF6E  0E00               	movlw	0
 30339  00CF70  0100               	movlb	0	; () banked
 30340  00CF72  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30341  00CF74  0E24               	movlw	36
 30342  00CF76  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30343  00CF78  EC69  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30344                           
 30345                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 30346  00CF7C  0E00               	movlw	0
 30347  00CF7E  0100               	movlb	0	; () banked
 30348  00CF80  6F60               	movwf	memcpy@d1& (0+255),b
 30349  00CF82  0E06               	movlw	6
 30350  00CF84  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30351  00CF86  0EBD               	movlw	low _inq_resp
 30352  00CF88  6F62               	movwf	memcpy@s1& (0+255),b
 30353  00CF8A  0EC3               	movlw	high _inq_resp
 30354  00CF8C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30355  00CF8E  0E00               	movlw	0
 30356  00CF90  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30357  00CF92  0E24               	movlw	36
 30358  00CF94  6F64               	movwf	memcpy@n& (0+255),b
 30359  00CF96  EC8B  F0A3         	call	_memcpy	;wreg free
 30360                           
 30361                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 30362  00CF9A  0EFD               	movlw	253
 30363  00CF9C  0100               	movlb	0	; () banked
 30364  00CF9E  6FE7               	movwf	_MSDCommandState& (0+255),b
 30365                           
 30366                           ;usb_device_msd.c: 773: break;
 30367  00CFA0  0012               	return	
 30368  00CFA2                     
 30369                           ; BSR set to: 0
 30370                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 30371                           
 30372                           ; BSR set to: 0
 30373  00CFA2  C2D0  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 30374  00CFA6  C2D1  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 30375  00CFAA  EE22  F0BE         	lfsr	2,_LUN+3
 30376  00CFAE  D801               	call	u17588
 30377  00CFB0  D00A               	goto	u17589
 30378  00CFB2                     u17588:
 30379  00CFB2  0005               	push	
 30380  00CFB4  6EFA               	movwf	pclath,c
 30381  00CFB6  50DE               	movf	postinc2,w,c
 30382  00CFB8  6EFD               	movwf	tosl,c
 30383  00CFBA  50DE               	movf	postinc2,w,c
 30384  00CFBC  6EFE               	movwf	tosh,c
 30385  00CFBE  50DE               	movf	postinc2,w,c
 30386  00CFC0  6EFF               	movwf	tosu,c
 30387  00CFC2  50FA               	movf	pclath,w,c
 30388  00CFC4  0012               	return		;indir
 30389  00CFC6                     u17589:
 30390  00CFC6  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 30391  00CFCA  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 30392  00CFCE  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 30393  00CFD2  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 30394                           
 30395                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 30396  00CFD6  C2D0  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 30397  00CFDA  C2D1  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 30398  00CFDE  EE22  F0C1         	lfsr	2,_LUN+6
 30399  00CFE2  D801               	call	u17598
 30400  00CFE4  D00A               	goto	u17599
 30401  00CFE6                     u17598:
 30402  00CFE6  0005               	push	
 30403  00CFE8  6EFA               	movwf	pclath,c
 30404  00CFEA  50DE               	movf	postinc2,w,c
 30405  00CFEC  6EFD               	movwf	tosl,c
 30406  00CFEE  50DE               	movf	postinc2,w,c
 30407  00CFF0  6EFE               	movwf	tosh,c
 30408  00CFF2  50DE               	movf	postinc2,w,c
 30409  00CFF4  6EFF               	movwf	tosu,c
 30410  00CFF6  50FA               	movf	pclath,w,c
 30411  00CFF8  0012               	return		;indir
 30412  00CFFA                     u17599:
 30413  00CFFA  0100               	movlb	0	; () banked
 30414  00CFFC  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 30415  00D000  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 30416  00D004  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 30417  00D006  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 30418                           
 30419                           ; BSR set to: 0
 30420                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 30421  00D008  EE26 F000          	lfsr	2,1536
 30422  00D00C  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 30423                           
 30424                           ; BSR set to: 0
 30425                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 30426  00D010  EE26 F001          	lfsr	2,1537	;volatile
 30427  00D014  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 30428                           
 30429                           ; BSR set to: 0
 30430                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 30431  00D018  EE26 F002          	lfsr	2,1538	;volatile
 30432  00D01C  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 30433                           
 30434                           ; BSR set to: 0
 30435                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 30436  00D020  EE26 F003          	lfsr	2,1539	;volatile
 30437  00D024  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 30438                           
 30439                           ; BSR set to: 0
 30440                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 30441  00D028  EE26 F004          	lfsr	2,1540	;volatile
 30442  00D02C  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 30443                           
 30444                           ; BSR set to: 0
 30445                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 30446  00D030  EE26 F005          	lfsr	2,1541	;volatile
 30447  00D034  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 30448                           
 30449                           ; BSR set to: 0
 30450                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 30451  00D038  EE26 F006          	lfsr	2,1542	;volatile
 30452  00D03C  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 30453                           
 30454                           ; BSR set to: 0
 30455                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 30456  00D040  EE26 F007          	lfsr	2,1543	;volatile
 30457  00D044  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 30458                           
 30459                           ; BSR set to: 0
 30460                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 30461  00D048  0E00               	movlw	0
 30462  00D04A  6FDB               	movwf	(_TransferLength+1)& (0+255),b
 30463  00D04C  0E08               	movlw	8
 30464  00D04E  6FDA               	movwf	_TransferLength& (0+255),b
 30465                           
 30466                           ; BSR set to: 0
 30467                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 30468  00D050  0E00               	movlw	0
 30469  00D052  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30470  00D054  0E08               	movlw	8
 30471  00D056  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30472  00D058  EC69  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30473                           
 30474                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 30475  00D05C  0EFD               	movlw	253
 30476  00D05E  0100               	movlb	0	; () banked
 30477  00D060  6FE7               	movwf	_MSDCommandState& (0+255),b
 30478                           
 30479                           ;usb_device_msd.c: 802: break;
 30480  00D062  0012               	return	
 30481  00D064                     
 30482                           ; BSR set to: 0
 30483                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 30484                           
 30485                           ; BSR set to: 0
 30486  00D064  05E6               	decf	_MSDHostNoData& (0+255),w,b
 30487  00D066  A4D8               	btfss	status,2,c
 30488  00D068  D002               	goto	l645
 30489                           
 30490                           ; BSR set to: 0
 30491                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 30492  00D06A  69E7               	setf	_MSDCommandState& (0+255),b
 30493                           
 30494                           ;usb_device_msd.c: 814: break;
 30495  00D06C  0012               	return	
 30496  00D06E                     l645:
 30497                           
 30498                           ; BSR set to: 0
 30499                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 30500                           
 30501                           ; BSR set to: 0
 30502  00D06E  0E00               	movlw	0
 30503  00D070  6FDB               	movwf	(_TransferLength+1)& (0+255),b
 30504  00D072  0E12               	movlw	18
 30505  00D074  6FDA               	movwf	_TransferLength& (0+255),b
 30506                           
 30507                           ; BSR set to: 0
 30508                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 30509  00D076  0E00               	movlw	0
 30510  00D078  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30511  00D07A  0E12               	movlw	18
 30512  00D07C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30513  00D07E  EC69  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30514                           
 30515                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 30516  00D082  0E00               	movlw	0
 30517  00D084  0100               	movlb	0	; () banked
 30518  00D086  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 30519  00D088                     l18753:
 30520                           
 30521                           ; BSR set to: 0
 30522  00D088  0E11               	movlw	17
 30523  00D08A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 30524  00D08C  D001               	goto	l646
 30525  00D08E  D014               	goto	u17620
 30526  00D090                     l646:
 30527                           
 30528                           ; BSR set to: 0
 30529                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 30530                           
 30531                           ; BSR set to: 0
 30532  00D090  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30533  00D092  0D01               	mullw	1
 30534  00D094  0E60               	movlw	low _gblSenseData
 30535  00D096  24F3               	addwf	prodl,w,c
 30536  00D098  6ED9               	movwf	fsr2l,c
 30537  00D09A  0E02               	movlw	high _gblSenseData
 30538  00D09C  20F4               	addwfc	prodh,w,c
 30539  00D09E  6EDA               	movwf	fsr2h,c
 30540  00D0A0  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30541  00D0A2  0D01               	mullw	1
 30542  00D0A4  0E00               	movlw	0
 30543  00D0A6  24F3               	addwf	prodl,w,c
 30544  00D0A8  6EE1               	movwf	fsr1l,c
 30545  00D0AA  0E06               	movlw	6
 30546  00D0AC  20F4               	addwfc	prodh,w,c
 30547  00D0AE  6EE2               	movwf	fsr1h,c
 30548  00D0B0  CFDF FFE7          	movff	indf2,indf1
 30549                           
 30550                           ; BSR set to: 0
 30551  00D0B4  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 30552  00D0B6  D7E8               	goto	l18753
 30553  00D0B8                     u17620:
 30554                           
 30555                           ; BSR set to: 0
 30556                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 30557                           
 30558                           ; BSR set to: 0
 30559  00D0B8  0EFD               	movlw	253
 30560  00D0BA  6FE7               	movwf	_MSDCommandState& (0+255),b
 30561                           
 30562                           ;usb_device_msd.c: 827: break;
 30563  00D0BC  0012               	return	
 30564  00D0BE                     l648:
 30565                           
 30566                           ; BSR set to: 0
 30567                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 30568  00D0BE  0E03               	movlw	3
 30569  00D0C0  CFE8 F600          	movff	wreg,1536
 30570                           
 30571                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 30572  00D0C4  0E00               	movlw	0
 30573  00D0C6  CFE8 F601          	movff	wreg,1537	;volatile
 30574                           
 30575                           ; BSR set to: 0
 30576                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 30577  00D0CA  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 30578  00D0CE  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 30579  00D0D2  EE22  F0CA         	lfsr	2,_LUN+15
 30580  00D0D6  D801               	call	u17638
 30581  00D0D8  D00A               	goto	u17639
 30582  00D0DA                     u17638:
 30583  00D0DA  0005               	push	
 30584  00D0DC  6EFA               	movwf	pclath,c
 30585  00D0DE  50DE               	movf	postinc2,w,c
 30586  00D0E0  6EFD               	movwf	tosl,c
 30587  00D0E2  50DE               	movf	postinc2,w,c
 30588  00D0E4  6EFE               	movwf	tosh,c
 30589  00D0E6  50DE               	movf	postinc2,w,c
 30590  00D0E8  6EFF               	movwf	tosu,c
 30591  00D0EA  50FA               	movf	pclath,w,c
 30592  00D0EC  0012               	return		;indir
 30593  00D0EE                     u17639:
 30594  00D0EE  0900               	iorlw	0
 30595  00D0F0  A4D8               	btfss	status,2,c
 30596  00D0F2  D005               	goto	l650
 30597  00D0F4  0E00               	movlw	0
 30598  00D0F6  0100               	movlb	0	; () banked
 30599  00D0F8  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2715+1)& (0+255),b
 30600  00D0FA  0E00               	movlw	0
 30601  00D0FC  D004               	goto	L23
 30602  00D0FE                     l650:
 30603                           
 30604                           ; BSR set to: 0
 30605  00D0FE  0E00               	movlw	0
 30606  00D100  0100               	movlb	0	; () banked
 30607  00D102  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2715+1)& (0+255),b
 30608  00D104  0E80               	movlw	128
 30609  00D106                     L23:
 30610  00D106  6F9B               	movwf	_MSDProcessCommandMediaPresent$2715& (0+255),b
 30611                           
 30612                           ; BSR set to: 0
 30613                           
 30614                           ; BSR set to: 0
 30615  00D108  EE26 F002          	lfsr	2,1538	;volatile
 30616  00D10C  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2715,indf2
 30617                           
 30618                           ; BSR set to: 0
 30619                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 30620  00D110  0E00               	movlw	0
 30621  00D112  CFE8 F603          	movff	wreg,1539	;volatile
 30622                           
 30623                           ; BSR set to: 0
 30624                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 30625  00D116  0E00               	movlw	0
 30626  00D118  6FDB               	movwf	(_TransferLength+1)& (0+255),b
 30627  00D11A  0E04               	movlw	4
 30628  00D11C  6FDA               	movwf	_TransferLength& (0+255),b
 30629                           
 30630                           ; BSR set to: 0
 30631                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 30632  00D11E  0E00               	movlw	0
 30633  00D120  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30634  00D122  0E04               	movlw	4
 30635  00D124  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30636  00D126  EC69  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30637                           
 30638                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 30639  00D12A  0EFD               	movlw	253
 30640  00D12C  0100               	movlb	0	; () banked
 30641  00D12E  6FE7               	movwf	_MSDCommandState& (0+255),b
 30642                           
 30643                           ;usb_device_msd.c: 839: break;
 30644  00D130  0012               	return	
 30645  00D132                     
 30646                           ; BSR set to: 0
 30647                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 30648                           
 30649                           ; BSR set to: 0
 30650  00D132  0102               	movlb	2	; () banked
 30651  00D134  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30652  00D136  0BF0               	andlw	-16
 30653  00D138  0905               	iorlw	5
 30654  00D13A  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30655                           
 30656                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 30657  00D13C  0E20               	movlw	32
 30658  00D13E  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30659                           
 30660                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 30661  00D140  0E00               	movlw	0
 30662  00D142  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30663                           
 30664                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 30665  00D144  0E01               	movlw	1
 30666  00D146  010D               	movlb	13	; () banked
 30667  00D148  6F8C               	movwf	140,b	;volatile
 30668                           
 30669                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 30670  00D14A  0E00               	movlw	0
 30671  00D14C  6F88               	movwf	136,b	;volatile
 30672  00D14E  0E00               	movlw	0
 30673  00D150  6F89               	movwf	137,b	;volatile
 30674  00D152  0E00               	movlw	0
 30675  00D154  6F8A               	movwf	138,b	;volatile
 30676  00D156  0E00               	movlw	0
 30677  00D158  6F8B               	movwf	139,b	;volatile
 30678                           
 30679                           ; BSR set to: 13
 30680                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 30681  00D15A  0100               	movlb	0	; () banked
 30682  00D15C  69E7               	setf	_MSDCommandState& (0+255),b
 30683                           
 30684                           ;usb_device_msd.c: 848: break;
 30685  00D15E  0012               	return	
 30686  00D160                     
 30687                           ; BSR set to: 0
 30688                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 30689                           
 30690                           ; BSR set to: 0
 30691  00D160  0E00               	movlw	0
 30692  00D162  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 30693  00D164  0E00               	movlw	0
 30694  00D166  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 30695  00D168  0E00               	movlw	0
 30696  00D16A  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30697  00D16C  0E00               	movlw	0
 30698  00D16E  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30699  00D170  EC24  F08F         	call	_MSDCheckForErrorCases	;wreg free
 30700  00D174  0900               	iorlw	0
 30701  00D176  A4D8               	btfss	status,2,c
 30702  00D178  0012               	return	
 30703                           
 30704                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 30705                           
 30706                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 30707  00D17A  0102               	movlb	2	; () banked
 30708  00D17C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30709  00D17E  0B0F               	andlw	15
 30710  00D180  0A06               	xorlw	6
 30711  00D182  A4D8               	btfss	status,2,c
 30712  00D184  D007               	goto	l656
 30713                           
 30714                           ; BSR set to: 2
 30715  00D186  010D               	movlb	13	; () banked
 30716  00D188  058C               	decf	140,w,b	;volatile
 30717  00D18A  A4D8               	btfss	status,2,c
 30718  00D18C  D003               	goto	l656
 30719                           
 30720                           ; BSR set to: 13
 30721                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 30722  00D18E  0100               	movlb	0	; () banked
 30723  00D190  69E7               	setf	_MSDCommandState& (0+255),b
 30724                           
 30725                           ;usb_device_msd.c: 870: }
 30726  00D192  0012               	return	
 30727  00D194                     l656:
 30728                           
 30729                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 30730                           
 30731                           ; BSR set to: 0
 30732  00D194  ECF8  F0A2         	call	_ResetSenseData	;wreg free
 30733                           
 30734                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 30735  00D198  0E00               	movlw	0
 30736  00D19A  010D               	movlb	13	; () banked
 30737  00D19C  6F88               	movwf	136,b	;volatile
 30738  00D19E  0E00               	movlw	0
 30739  00D1A0  6F89               	movwf	137,b	;volatile
 30740  00D1A2  0E00               	movlw	0
 30741  00D1A4  6F8A               	movwf	138,b	;volatile
 30742  00D1A6  0E00               	movlw	0
 30743  00D1A8  6F8B               	movwf	139,b	;volatile
 30744                           
 30745                           ; BSR set to: 13
 30746                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 30747  00D1AA  0100               	movlb	0	; () banked
 30748  00D1AC  69E7               	setf	_MSDCommandState& (0+255),b
 30749                           
 30750                           ; BSR set to: 0
 30751                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 30752  00D1AE  0012               	return	
 30753  00D1B0                     
 30754                           ; BSR set to: 0
 30755                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 30756                           
 30757                           ; BSR set to: 0
 30758                           
 30759                           ; BSR set to: 0
 30760  00D1B0  0E00               	movlw	0
 30761  00D1B2  010D               	movlb	13	; () banked
 30762  00D1B4  6F88               	movwf	136,b	;volatile
 30763  00D1B6  0E00               	movlw	0
 30764  00D1B8  6F89               	movwf	137,b	;volatile
 30765  00D1BA  0E00               	movlw	0
 30766  00D1BC  6F8A               	movwf	138,b	;volatile
 30767  00D1BE  0E00               	movlw	0
 30768  00D1C0  6F8B               	movwf	139,b	;volatile
 30769                           
 30770                           ; BSR set to: 13
 30771                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 30772  00D1C2  0100               	movlb	0	; () banked
 30773  00D1C4  69E7               	setf	_MSDCommandState& (0+255),b
 30774                           
 30775                           ;usb_device_msd.c: 885: break;
 30776  00D1C6  0012               	return	
 30777  00D1C8                     
 30778                           ; BSR set to: 0
 30779                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 30780                           
 30781                           ; BSR set to: 0
 30782  00D1C8  51DC               	movf	_USBMSDInHandle& (0+255),w,b
 30783  00D1CA  11DD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 30784  00D1CC  B4D8               	btfsc	status,2,c
 30785  00D1CE  D006               	goto	u17690
 30786                           
 30787                           ; BSR set to: 0
 30788  00D1D0  C0DC  FFD9         	movff	_USBMSDInHandle,fsr2l
 30789  00D1D4  C0DD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 30790  00D1D8  BEDF               	btfsc	indf2,7,c
 30791  00D1DA  0012               	return	
 30792  00D1DC                     u17690:
 30793                           
 30794                           ; BSR set to: 0
 30795                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 30796                           
 30797                           ; BSR set to: 0
 30798  00D1DC  0102               	movlb	2	; () banked
 30799  00D1DE  514C               	movf	(_gblCBW+11)& (0+255),w,b
 30800  00D1E0  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 30801  00D1E2  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 30802  00D1E4  E104               	bnz	u17700
 30803  00D1E6  0E40               	movlw	64
 30804  00D1E8  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 30805  00D1EA  A0D8               	btfss	status,0,c
 30806  00D1EC  D00B               	goto	l664
 30807  00D1EE                     u17700:
 30808                           
 30809                           ; BSR set to: 2
 30810                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 30811  00D1EE  0E40               	movlw	64
 30812  00D1F0  0100               	movlb	0	; () banked
 30813  00D1F2  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 30814                           
 30815                           ; BSR set to: 0
 30816                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 30817  00D1F4  0E40               	movlw	64
 30818  00D1F6  0102               	movlb	2	; () banked
 30819  00D1F8  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 30820  00D1FA  0E00               	movlw	0
 30821  00D1FC  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 30822  00D1FE  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 30823  00D200  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 30824                           
 30825                           ;usb_device_msd.c: 900: }
 30826  00D202  D00A               	goto	l665
 30827  00D204                     l664:
 30828                           
 30829                           ; BSR set to: 2
 30830                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 30831  00D204  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 30832                           
 30833                           ; BSR set to: 2
 30834                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 30835  00D208  0E00               	movlw	0
 30836  00D20A  6F49               	movwf	(_gblCBW+8)& (0+255),b
 30837  00D20C  0E00               	movlw	0
 30838  00D20E  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 30839  00D210  0E00               	movlw	0
 30840  00D212  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 30841  00D214  0E00               	movlw	0
 30842  00D216  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 30843  00D218                     l665:
 30844                           
 30845                           ; BSR set to: 2
 30846                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 30847                           
 30848                           ; BSR set to: 2
 30849  00D218  0100               	movlb	0	; () banked
 30850  00D21A  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 30851  00D21C  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 30852  00D21E  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 30853  00D220  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 30854  00D222  5DDA               	subwf	_TransferLength& (0+255),w,b
 30855  00D224  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 30856  00D226  59DB               	subwfb	(_TransferLength+1)& (0+255),w,b
 30857  00D228  A0D8               	btfss	status,0,c
 30858  00D22A  D005               	goto	l666
 30859                           
 30860                           ; BSR set to: 0
 30861                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 30862  00D22C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 30863  00D22E  5FDA               	subwf	_TransferLength& (0+255),f,b
 30864  00D230  0E00               	movlw	0
 30865  00D232  5BDB               	subwfb	(_TransferLength+1)& (0+255),f,b
 30866                           
 30867                           ;usb_device_msd.c: 918: }
 30868  00D234  D01A               	goto	u17730
 30869  00D236                     l666:
 30870                           
 30871                           ; BSR set to: 0
 30872                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 30873                           
 30874                           ; BSR set to: 0
 30875  00D236  0E00               	movlw	0
 30876  00D238  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 30877  00D23A  D013               	goto	l668
 30878  00D23C                     
 30879                           ; BSR set to: 0
 30880                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 30881                           
 30882                           ; BSR set to: 0
 30883  00D23C  51DA               	movf	_TransferLength& (0+255),w,b
 30884  00D23E  11DB               	iorwf	(_TransferLength+1)& (0+255),w,b
 30885  00D240  B4D8               	btfsc	status,2,c
 30886  00D242  D004               	goto	l670
 30887                           
 30888                           ; BSR set to: 0
 30889                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 30890  00D244  07DA               	decf	_TransferLength& (0+255),f,b
 30891  00D246  A0D8               	btfss	status,0,c
 30892  00D248  07DB               	decf	(_TransferLength+1)& (0+255),f,b
 30893                           
 30894                           ;usb_device_msd.c: 932: }
 30895  00D24A  D00A               	goto	l671
 30896  00D24C                     l670:
 30897                           
 30898                           ; BSR set to: 0
 30899                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 30900                           
 30901                           ; BSR set to: 0
 30902  00D24C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30903  00D24E  0D01               	mullw	1
 30904  00D250  0E00               	movlw	0
 30905  00D252  24F3               	addwf	prodl,w,c
 30906  00D254  6ED9               	movwf	fsr2l,c
 30907  00D256  0E06               	movlw	6
 30908  00D258  20F4               	addwfc	prodh,w,c
 30909  00D25A  6EDA               	movwf	fsr2h,c
 30910  00D25C  0E00               	movlw	0
 30911  00D25E  6EDF               	movwf	indf2,c
 30912  00D260                     l671:
 30913                           
 30914                           ; BSR set to: 0
 30915                           
 30916                           ; BSR set to: 0
 30917  00D260  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 30918  00D262                     l668:
 30919                           
 30920                           ; BSR set to: 0
 30921                           
 30922                           ; BSR set to: 0
 30923  00D262  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 30924  00D264  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30925  00D266  A0D8               	btfss	status,0,c
 30926  00D268  D7E9               	goto	l669
 30927  00D26A                     u17730:
 30928                           
 30929                           ; BSR set to: 0
 30930                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 30931                           
 30932                           ; BSR set to: 0
 30933                           
 30934                           ; BSR set to: 0
 30935  00D26A  0E01               	movlw	1
 30936  00D26C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 30937  00D26E  0E00               	movlw	0
 30938  00D270  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 30939  00D272  0E06               	movlw	6
 30940  00D274  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 30941  00D276  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 30942  00D27A  0E02               	movlw	2
 30943  00D27C  EC9C  F08C         	call	_USBTransferOnePacket
 30944  00D280  C060  F0DC         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 30945  00D284  C061  F0DD         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 30946                           
 30947                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 30948  00D288  0102               	movlb	2	; () banked
 30949  00D28A  5149               	movf	(_gblCBW+8)& (0+255),w,b
 30950  00D28C  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 30951  00D28E  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 30952  00D290  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 30953  00D292  A4D8               	btfss	status,2,c
 30954  00D294  0012               	return	
 30955                           
 30956                           ; BSR set to: 2
 30957                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 30958  00D296  0100               	movlb	0	; () banked
 30959  00D298  69E7               	setf	_MSDCommandState& (0+255),b
 30960                           
 30961                           ; BSR set to: 0
 30962                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 30963                           
 30964                           ; BSR set to: 0
 30965                           
 30966                           ;usb_device_msd.c: 949: break;
 30967  00D29A  0012               	return	
 30968  00D29C                     
 30969                           ; BSR set to: 0
 30970                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 30971                           
 30972                           ; BSR set to: 0
 30973                           
 30974                           ;usb_device_msd.c: 954: default:
 30975                           
 30976                           ; BSR set to: 0
 30977  00D29C  0E7F               	movlw	127
 30978  00D29E  EC7A  F08A         	call	_MSDErrorHandler
 30979                           
 30980                           ;usb_device_msd.c: 960: }
 30981                           
 30982                           ;usb_device_msd.c: 959: break;
 30983  00D2A2  0012               	return	
 30984  00D2A4                     l634:
 30985  00D2A4  0100               	movlb	0	; () banked
 30986  00D2A6  51E7               	movf	_MSDCommandState& (0+255),w,b
 30987                           
 30988                           ; Switch size 1, requested type "space"
 30989                           ; Number of cases is 12, Range of values is 0 to 254
 30990                           ; switch strategies available:
 30991                           ; Name         Instructions Cycles
 30992                           ; simple_byte           37    19 (average)
 30993                           ;	Chosen strategy is simple_byte
 30994  00D2A8  0A00               	xorlw	0	; case 0
 30995  00D2AA  B4D8               	btfsc	status,2,c
 30996  00D2AC  D759               	goto	l654
 30997  00D2AE  0A03               	xorlw	3	; case 3
 30998  00D2B0  B4D8               	btfsc	status,2,c
 30999  00D2B2  D6D8               	goto	l644
 31000  00D2B4  0A11               	xorlw	17	; case 18
 31001  00D2B6  B4D8               	btfsc	status,2,c
 31002  00D2B8  D646               	goto	l640
 31003  00D2BA  0A08               	xorlw	8	; case 26
 31004  00D2BC  B4D8               	btfsc	status,2,c
 31005  00D2BE  D6FF               	goto	l648
 31006  00D2C0  0A01               	xorlw	1	; case 27
 31007  00D2C2  B4D8               	btfsc	status,2,c
 31008  00D2C4  D775               	goto	l658
 31009  00D2C6  0A05               	xorlw	5	; case 30
 31010  00D2C8  B4D8               	btfsc	status,2,c
 31011  00D2CA  D733               	goto	l653
 31012  00D2CC  0A3B               	xorlw	59	; case 37
 31013  00D2CE  B4D8               	btfsc	status,2,c
 31014  00D2D0  D668               	goto	l643
 31015  00D2D2  0A0D               	xorlw	13	; case 40
 31016  00D2D4  B4D8               	btfsc	status,2,c
 31017  00D2D6  D627               	goto	l635
 31018  00D2D8  0A02               	xorlw	2	; case 42
 31019  00D2DA  B4D8               	btfsc	status,2,c
 31020  00D2DC  D62C               	goto	l638
 31021  00D2DE  0A05               	xorlw	5	; case 47
 31022  00D2E0  B4D8               	btfsc	status,2,c
 31023  00D2E2  D766               	goto	l658
 31024  00D2E4  0AD2               	xorlw	210	; case 253
 31025  00D2E6  B4D8               	btfsc	status,2,c
 31026  00D2E8  D76F               	goto	l660
 31027  00D2EA  0A03               	xorlw	3	; case 254
 31028  00D2EC  D7D7               	goto	l674
 31029  00D2EE                     __end_of_MSDProcessCommandMediaPresent:
 31030                           	opt stack 0
 31031                           tosu	equ	0xFFF
 31032                           tosh	equ	0xFFE
 31033                           tosl	equ	0xFFD
 31034                           pclath	equ	0xFFA
 31035                           tblptru	equ	0xFF8
 31036                           tblptrh	equ	0xFF7
 31037                           tblptrl	equ	0xFF6
 31038                           tablat	equ	0xFF5
 31039                           prodh	equ	0xFF4
 31040                           prodl	equ	0xFF3
 31041                           intcon	equ	0xFF2
 31042                           intcon2	equ	0xFF1
 31043                           intcon3	equ	0xFF0
 31044                           postinc0	equ	0xFEE
 31045                           wreg	equ	0xFE8
 31046                           indf1	equ	0xFE7
 31047                           postinc1	equ	0xFE6
 31048                           postdec1	equ	0xFE5
 31049                           plusw1	equ	0xFE3
 31050                           fsr1h	equ	0xFE2
 31051                           fsr1l	equ	0xFE1
 31052                           indf2	equ	0xFDF
 31053                           postinc2	equ	0xFDE
 31054                           postdec2	equ	0xFDD
 31055                           plusw2	equ	0xFDB
 31056                           fsr2h	equ	0xFDA
 31057                           fsr2l	equ	0xFD9
 31058                           status	equ	0xFD8
 31059                           
 31060 ;; *************** function _MSDWriteHandler *****************
 31061 ;; Defined at:
 31062 ;;		line 1188 in file "usb_device_msd.c"
 31063 ;; Parameters:    Size  Location     Type
 31064 ;;		None
 31065 ;; Auto vars:     Size  Location     Type
 31066 ;;		None
 31067 ;; Return value:  Size  Location     Type
 31068 ;;                  1    wreg      unsigned char 
 31069 ;; Registers used:
 31070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31071 ;; Tracked objects:
 31072 ;;		On entry : 0/0
 31073 ;;		On exit  : 0/0
 31074 ;;		Unchanged: 0/0
 31075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31078 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31079 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31080 ;;Total ram usage:        5 bytes
 31081 ;; Hardware stack levels used:    1
 31082 ;; Hardware stack levels required when called:   16
 31083 ;; This function calls:
 31084 ;;		_ExternalFlash_SectorWrite
 31085 ;;		_ExternalFlash_WriteProtectStateGet
 31086 ;;		_MSDCheckForErrorCases
 31087 ;;		_USBStallEndpoint
 31088 ;;		_USBTransferOnePacket
 31089 ;; This function is called by:
 31090 ;;		_MSDProcessCommandMediaPresent
 31091 ;; This function uses a non-reentrant model
 31092 ;;
 31093                           
 31094                           	psect	text139
 31095  00EA94                     __ptext139:
 31096                           	opt stack 0
 31097  00EA94                     _MSDWriteHandler:
 31098                           	opt stack 10
 31099                           
 31100                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 31101                           
 31102                           ;incstack = 0
 31103  00EA94  D15A               	goto	l704
 31104  00EA96                     l705:
 31105                           
 31106                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 31107  00EA96  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 31108                           
 31109                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 31110  00EA9A  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 31111                           
 31112                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 31113  00EA9E  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 31114                           
 31115                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 31116  00EAA2  C255  F1D9         	movff	_gblCBW+20,_LBA
 31117                           
 31118                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 31119  00EAA6  C257  F0DB         	movff	_gblCBW+22,_TransferLength+1
 31120                           
 31121                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 31122  00EAAA  C258  F0DA         	movff	_gblCBW+23,_TransferLength
 31123                           
 31124                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 31125  00EAAE  0100               	movlb	0	; () banked
 31126  00EAB0  51DA               	movf	_TransferLength& (0+255),w,b
 31127  00EAB2  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31128  00EAB4  51DB               	movf	(_TransferLength+1)& (0+255),w,b
 31129  00EAB6  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 31130  00EAB8  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31131  00EABA  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31132  00EABC  0E09               	movlw	9
 31133  00EABE                     u16955:
 31134  00EABE  90D8               	bcf	status,0,c
 31135  00EAC0  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 31136  00EAC2  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 31137  00EAC4  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 31138  00EAC6  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 31139  00EAC8  2EE8               	decfsz	wreg,f,c
 31140  00EACA  D7F9               	goto	u16955
 31141  00EACC  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 31142  00EAD0  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 31143  00EAD4  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 31144  00EAD8  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 31145  00EADC  EC24  F08F         	call	_MSDCheckForErrorCases	;wreg free
 31146  00EAE0  0900               	iorlw	0
 31147  00EAE2  A4D8               	btfss	status,2,c
 31148  00EAE4  D143               	goto	l707
 31149                           
 31150                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 31151                           
 31152                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 31153  00EAE6  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31154  00EAEA  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31155  00EAEE  EE22  F0CA         	lfsr	2,_LUN+15
 31156  00EAF2  D801               	call	u16978
 31157  00EAF4  D00A               	goto	u16979
 31158  00EAF6                     u16978:
 31159  00EAF6  0005               	push	
 31160  00EAF8  6EFA               	movwf	pclath,c
 31161  00EAFA  50DE               	movf	postinc2,w,c
 31162  00EAFC  6EFD               	movwf	tosl,c
 31163  00EAFE  50DE               	movf	postinc2,w,c
 31164  00EB00  6EFE               	movwf	tosh,c
 31165  00EB02  50DE               	movf	postinc2,w,c
 31166  00EB04  6EFF               	movwf	tosu,c
 31167  00EB06  50FA               	movf	pclath,w,c
 31168  00EB08  0012               	return		;indir
 31169  00EB0A                     u16979:
 31170  00EB0A  0900               	iorlw	0
 31171  00EB0C  B4D8               	btfsc	status,2,c
 31172  00EB0E  D016               	goto	l708
 31173                           
 31174                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 31175  00EB10  0E01               	movlw	1
 31176  00EB12  010D               	movlb	13	; () banked
 31177  00EB14  6F8C               	movwf	140,b	;volatile
 31178                           
 31179                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 31180  00EB16  0102               	movlb	2	; () banked
 31181  00EB18  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31182  00EB1A  0BF0               	andlw	-16
 31183  00EB1C  0907               	iorlw	7
 31184  00EB1E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31185                           
 31186                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 31187  00EB20  0E27               	movlw	39
 31188  00EB22  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31189                           
 31190                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 31191  00EB24  0E00               	movlw	0
 31192  00EB26  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31193                           
 31194                           ; BSR set to: 2
 31195                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 31196  00EB28  0E00               	movlw	0
 31197  00EB2A  0100               	movlb	0	; () banked
 31198  00EB2C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31199  00EB2E  0E02               	movlw	2
 31200  00EB30  EC17  F08C         	call	_USBStallEndpoint
 31201                           
 31202                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 31203  00EB34  0E00               	movlw	0
 31204  00EB36  6E1F               	movwf	_MSDWriteState,c
 31205                           
 31206                           ;usb_device_msd.c: 1228: return MSDWriteState;
 31207  00EB38  501F               	movf	_MSDWriteState,w,c
 31208  00EB3A  0012               	return	
 31209  00EB3C                     l708:
 31210                           
 31211                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 31212  00EB3C  0E01               	movlw	1
 31213  00EB3E  0100               	movlb	0	; () banked
 31214  00EB40  6FE8               	movwf	_MSD_State& (0+255),b
 31215  00EB42                     
 31216                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 31217                           
 31218                           ; BSR set to: 0
 31219  00EB42  0100               	movlb	0	; () banked
 31220  00EB44  51DA               	movf	_TransferLength& (0+255),w,b
 31221  00EB46  11DB               	iorwf	(_TransferLength+1)& (0+255),w,b
 31222  00EB48  B4D8               	btfsc	status,2,c
 31223  00EB4A  D0FC               	goto	l18387
 31224                           
 31225                           ; BSR set to: 0
 31226                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 31227                           
 31228                           ; BSR set to: 0
 31229                           
 31230                           ;usb_device_msd.c: 1238: break;
 31231                           
 31232                           ; BSR set to: 0
 31233                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 31234  00EB4C  0E03               	movlw	3
 31235  00EB4E  6E1F               	movwf	_MSDWriteState,c
 31236                           
 31237                           ; BSR set to: 0
 31238                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 31239  00EB50  0E00               	movlw	0
 31240  00EB52  0101               	movlb	1	; () banked
 31241  00EB54  6FEB               	movwf	_ptrNextData& (0+255),b
 31242  00EB56  0E06               	movlw	6
 31243  00EB58  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 31244                           
 31245                           ; BSR set to: 1
 31246                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 31247  00EB5A  0E00               	movlw	0
 31248  00EB5C  010D               	movlb	13	; () banked
 31249  00EB5E  6F88               	movwf	136,b	;volatile
 31250  00EB60  0E02               	movlw	2
 31251  00EB62  6F89               	movwf	137,b	;volatile
 31252  00EB64  0E00               	movlw	0
 31253  00EB66  6F8A               	movwf	138,b	;volatile
 31254  00EB68  0E00               	movlw	0
 31255  00EB6A  6F8B               	movwf	139,b	;volatile
 31256  00EB6C                     l712:
 31257                           
 31258                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 31259  00EB6C  010D               	movlb	13	; () banked
 31260  00EB6E  5188               	movf	136,w,b	;volatile
 31261  00EB70  1189               	iorwf	137,w,b	;volatile
 31262  00EB72  118A               	iorwf	138,w,b	;volatile
 31263  00EB74  118B               	iorwf	139,w,b	;volatile
 31264  00EB76  B4D8               	btfsc	status,2,c
 31265  00EB78  D01D               	goto	l713
 31266                           
 31267                           ; BSR set to: 13
 31268                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 31269  00EB7A  0100               	movlb	0	; () banked
 31270  00EB7C  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 31271  00EB7E  11DF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31272  00EB80  B4D8               	btfsc	status,2,c
 31273  00EB82  D006               	goto	l714
 31274                           
 31275                           ; BSR set to: 0
 31276  00EB84  C0DE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31277  00EB88  C0DF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31278  00EB8C  BEDF               	btfsc	indf2,7,c
 31279  00EB8E  D0EE               	goto	l707
 31280  00EB90                     l714:
 31281                           
 31282                           ; BSR set to: 0
 31283                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 31284                           
 31285                           ; BSR set to: 0
 31286  00EB90  0E00               	movlw	0
 31287  00EB92  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31288  00EB94  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 31289  00EB98  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 31290  00EB9C  0E40               	movlw	64
 31291  00EB9E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31292  00EBA0  0E02               	movlw	2
 31293  00EBA2  EC9C  F08C         	call	_USBTransferOnePacket
 31294  00EBA6  C060  F0DE         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31295  00EBAA  C061  F0DF         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31296                           
 31297                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 31298  00EBAE  0E04               	movlw	4
 31299  00EBB0  6E1F               	movwf	_MSDWriteState,c
 31300                           
 31301                           ;usb_device_msd.c: 1260: }
 31302  00EBB2  D023               	goto	l715
 31303  00EBB4                     l713:
 31304                           
 31305                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 31306  00EBB4  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31307  00EBB8  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31308  00EBBC  EE22  F0CA         	lfsr	2,_LUN+15
 31309  00EBC0  D801               	call	u17038
 31310  00EBC2  D00A               	goto	u17039
 31311  00EBC4                     u17038:
 31312  00EBC4  0005               	push	
 31313  00EBC6  6EFA               	movwf	pclath,c
 31314  00EBC8  50DE               	movf	postinc2,w,c
 31315  00EBCA  6EFD               	movwf	tosl,c
 31316  00EBCC  50DE               	movf	postinc2,w,c
 31317  00EBCE  6EFE               	movwf	tosh,c
 31318  00EBD0  50DE               	movf	postinc2,w,c
 31319  00EBD2  6EFF               	movwf	tosu,c
 31320  00EBD4  50FA               	movf	pclath,w,c
 31321  00EBD6  0012               	return		;indir
 31322  00EBD8                     u17039:
 31323  00EBD8  0900               	iorlw	0
 31324  00EBDA  B4D8               	btfsc	status,2,c
 31325  00EBDC  D00C               	goto	l716
 31326                           
 31327                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 31328  00EBDE  0E01               	movlw	1
 31329  00EBE0  010D               	movlb	13	; () banked
 31330  00EBE2  6F8C               	movwf	140,b	;volatile
 31331                           
 31332                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 31333  00EBE4  0102               	movlb	2	; () banked
 31334  00EBE6  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31335  00EBE8  0BF0               	andlw	-16
 31336  00EBEA  0902               	iorlw	2
 31337  00EBEC  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31338                           
 31339                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 31340  00EBEE  0E27               	movlw	39
 31341  00EBF0  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31342                           
 31343                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 31344  00EBF2  0E00               	movlw	0
 31345  00EBF4  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31346  00EBF6                     l716:
 31347                           
 31348                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 31349  00EBF6  0E02               	movlw	2
 31350  00EBF8  D0A6               	goto	L27
 31351  00EBFA                     l715:
 31352                           
 31353                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 31354                           
 31355                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 31356  00EBFA  0100               	movlb	0	; () banked
 31357  00EBFC  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 31358  00EBFE  11DF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31359  00EC00  B4D8               	btfsc	status,2,c
 31360  00EC02  D006               	goto	l718
 31361                           
 31362                           ; BSR set to: 0
 31363  00EC04  C0DE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31364  00EC08  C0DF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31365  00EC0C  BEDF               	btfsc	indf2,7,c
 31366  00EC0E  D0AE               	goto	l707
 31367  00EC10                     l718:
 31368                           
 31369                           ; BSR set to: 0
 31370                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 31371                           
 31372                           ; BSR set to: 0
 31373  00EC10  EE20 F001          	lfsr	2,1
 31374  00EC14  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 31375  00EC16  26D9               	addwf	fsr2l,f,c
 31376  00EC18  51DF               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31377  00EC1A  22DA               	addwfc	fsr2h,f,c
 31378  00EC1C  50DF               	movf	indf2,w,c
 31379  00EC1E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31380  00EC20  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 31381  00EC24  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31382  00EC26  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31383  00EC28  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 31384  00EC2A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 31385  00EC2C  0102               	movlb	2	; () banked
 31386  00EC2E  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 31387  00EC30  0100               	movlb	0	; () banked
 31388  00EC32  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 31389  00EC34  0102               	movlb	2	; () banked
 31390  00EC36  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 31391  00EC38  0100               	movlb	0	; () banked
 31392  00EC3A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 31393  00EC3C  0102               	movlb	2	; () banked
 31394  00EC3E  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 31395  00EC40  0100               	movlb	0	; () banked
 31396  00EC42  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 31397  00EC44  0102               	movlb	2	; () banked
 31398  00EC46  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 31399                           
 31400                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 31401  00EC48  0100               	movlb	0	; () banked
 31402  00EC4A  EE20 F001          	lfsr	2,1
 31403  00EC4E  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 31404  00EC50  26D9               	addwf	fsr2l,f,c
 31405  00EC52  51DF               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31406  00EC54  22DA               	addwfc	fsr2h,f,c
 31407  00EC56  50DF               	movf	indf2,w,c
 31408  00EC58  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31409  00EC5A  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 31410  00EC5E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31411  00EC60  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31412  00EC62  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 31413  00EC64  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 31414  00EC66  010D               	movlb	13	; () banked
 31415  00EC68  5F88               	subwf	136,f,b	;volatile
 31416  00EC6A  0100               	movlb	0	; () banked
 31417  00EC6C  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 31418  00EC6E  010D               	movlb	13	; () banked
 31419  00EC70  5B89               	subwfb	137,f,b	;volatile
 31420  00EC72  0100               	movlb	0	; () banked
 31421  00EC74  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 31422  00EC76  010D               	movlb	13	; () banked
 31423  00EC78  5B8A               	subwfb	138,f,b	;volatile
 31424  00EC7A  0100               	movlb	0	; () banked
 31425  00EC7C  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 31426  00EC7E  010D               	movlb	13	; () banked
 31427  00EC80  5B8B               	subwfb	139,f,b	;volatile
 31428                           
 31429                           ; BSR set to: 13
 31430                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 31431  00EC82  0E40               	movlw	64
 31432  00EC84  0101               	movlb	1	; () banked
 31433  00EC86  27EB               	addwf	_ptrNextData& (0+255),f,b
 31434  00EC88  0E00               	movlw	0
 31435  00EC8A  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 31436                           
 31437                           ; BSR set to: 1
 31438                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 31439  00EC8C  0E03               	movlw	3
 31440  00EC8E  D05B               	goto	L27
 31441  00EC90                     
 31442                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 31443                           
 31444                           ; BSR set to: 1
 31445  00EC90  010D               	movlb	13	; () banked
 31446  00EC92  518C               	movf	140,w,b	;volatile
 31447  00EC94  A4D8               	btfss	status,2,c
 31448  00EC96  D040               	goto	l723
 31449                           
 31450                           ; BSR set to: 13
 31451                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 31452  00EC98  C2D0  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 31453  00EC9C  C2D1  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 31454  00ECA0  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 31455  00ECA4  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 31456  00ECA8  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 31457  00ECAC  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 31458  00ECB0  0E00               	movlw	0
 31459  00ECB2  0100               	movlb	0	; () banked
 31460  00ECB4  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 31461  00ECB6  0E06               	movlw	6
 31462  00ECB8  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 31463  00ECBA  0101               	movlb	1	; () banked
 31464  00ECBC  51D9               	movf	_LBA& (0+255),w,b
 31465  00ECBE  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 31466  00ECC0  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 31467  00ECC2  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 31468  00ECC4  A4D8               	btfss	status,2,c
 31469  00ECC6  D002               	goto	u17080
 31470  00ECC8  0E01               	movlw	1
 31471  00ECCA  D001               	goto	u17090
 31472  00ECCC                     u17080:
 31473  00ECCC  0E00               	movlw	0
 31474  00ECCE                     u17090:
 31475  00ECCE  0100               	movlb	0	; () banked
 31476  00ECD0  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 31477  00ECD2  EE22  F0CD         	lfsr	2,_LUN+18
 31478  00ECD6  D801               	call	u17108
 31479  00ECD8  D00A               	goto	u17109
 31480  00ECDA                     u17108:
 31481  00ECDA  0005               	push	
 31482  00ECDC  6EFA               	movwf	pclath,c
 31483  00ECDE  50DE               	movf	postinc2,w,c
 31484  00ECE0  6EFD               	movwf	tosl,c
 31485  00ECE2  50DE               	movf	postinc2,w,c
 31486  00ECE4  6EFE               	movwf	tosh,c
 31487  00ECE6  50DE               	movf	postinc2,w,c
 31488  00ECE8  6EFF               	movwf	tosu,c
 31489  00ECEA  50FA               	movf	pclath,w,c
 31490  00ECEC  0012               	return		;indir
 31491  00ECEE                     u17109:
 31492  00ECEE  06E8               	decf	wreg,f,c
 31493  00ECF0  B4D8               	btfsc	status,2,c
 31494  00ECF2  D012               	goto	l723
 31495                           
 31496                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 31497  00ECF4  0E64               	movlw	100
 31498  00ECF6  0101               	movlb	1	; () banked
 31499  00ECF8  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 31500  00ECFA  D002               	goto	l722
 31501                           
 31502                           ; BSR set to: 1
 31503                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 31504  00ECFC  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 31505                           
 31506                           ;usb_device_msd.c: 1314: break;
 31507  00ECFE  D036               	goto	l707
 31508  00ED00                     l722:
 31509                           
 31510                           ; BSR set to: 1
 31511                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 31512                           
 31513                           ; BSR set to: 1
 31514  00ED00  0E01               	movlw	1
 31515  00ED02  010D               	movlb	13	; () banked
 31516  00ED04  6F8C               	movwf	140,b	;volatile
 31517                           
 31518                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 31519  00ED06  0102               	movlb	2	; () banked
 31520  00ED08  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31521  00ED0A  0BF0               	andlw	-16
 31522  00ED0C  0903               	iorlw	3
 31523  00ED0E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31524                           
 31525                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 31526  00ED10  0E00               	movlw	0
 31527  00ED12  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31528                           
 31529                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 31530  00ED14  0E00               	movlw	0
 31531  00ED16  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31532  00ED18                     l723:
 31533                           
 31534                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 31535                           
 31536                           ; BSR set to: 2
 31537                           
 31538                           ; BSR set to: 2
 31539                           
 31540                           ; BSR set to: 2
 31541  00ED18  0E01               	movlw	1
 31542  00ED1A  0101               	movlb	1	; () banked
 31543  00ED1C  27D9               	addwf	_LBA& (0+255),f,b
 31544  00ED1E  0E00               	movlw	0
 31545  00ED20  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 31546  00ED22  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 31547  00ED24  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 31548                           
 31549                           ; BSR set to: 1
 31550                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 31551  00ED26  0100               	movlb	0	; () banked
 31552  00ED28  07DA               	decf	_TransferLength& (0+255),f,b
 31553  00ED2A  A0D8               	btfss	status,0,c
 31554  00ED2C  07DB               	decf	(_TransferLength+1)& (0+255),f,b
 31555                           
 31556                           ; BSR set to: 0
 31557                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 31558  00ED2E  0E01               	movlw	1
 31559  00ED30  D00A               	goto	L27
 31560  00ED32                     
 31561                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 31562                           
 31563                           ; BSR set to: 0
 31564  00ED32  0E02               	movlw	2
 31565  00ED34  010D               	movlb	13	; () banked
 31566  00ED36  6F8C               	movwf	140,b	;volatile
 31567                           
 31568                           ; BSR set to: 13
 31569                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 31570  00ED38  0E00               	movlw	0
 31571  00ED3A  0100               	movlb	0	; () banked
 31572  00ED3C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31573  00ED3E  0E02               	movlw	2
 31574  00ED40  EC17  F08C         	call	_USBStallEndpoint
 31575  00ED44                     l18387:
 31576                           
 31577                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 31578  00ED44  0E00               	movlw	0
 31579  00ED46                     L27:
 31580  00ED46  6E1F               	movwf	_MSDWriteState,c
 31581                           
 31582                           ;usb_device_msd.c: 1345: }
 31583                           
 31584                           ;usb_device_msd.c: 1344: break;
 31585  00ED48  D011               	goto	l707
 31586  00ED4A                     l704:
 31587  00ED4A  501F               	movf	_MSDWriteState,w,c
 31588                           
 31589                           ; Switch size 1, requested type "space"
 31590                           ; Number of cases is 5, Range of values is 0 to 4
 31591                           ; switch strategies available:
 31592                           ; Name         Instructions Cycles
 31593                           ; simple_byte           16     9 (average)
 31594                           ;	Chosen strategy is simple_byte
 31595  00ED4C  0A00               	xorlw	0	; case 0
 31596  00ED4E  B4D8               	btfsc	status,2,c
 31597  00ED50  D6A2               	goto	l705
 31598  00ED52  0A01               	xorlw	1	; case 1
 31599  00ED54  B4D8               	btfsc	status,2,c
 31600  00ED56  D6F5               	goto	l710
 31601  00ED58  0A03               	xorlw	3	; case 2
 31602  00ED5A  B4D8               	btfsc	status,2,c
 31603  00ED5C  D799               	goto	l719
 31604  00ED5E  0A01               	xorlw	1	; case 3
 31605  00ED60  B4D8               	btfsc	status,2,c
 31606  00ED62  D704               	goto	l712
 31607  00ED64  0A07               	xorlw	7	; case 4
 31608  00ED66  B4D8               	btfsc	status,2,c
 31609  00ED68  D748               	goto	l715
 31610  00ED6A  D7E3               	goto	l724
 31611  00ED6C                     l707:
 31612                           
 31613                           ;usb_device_msd.c: 1347: return MSDWriteState;
 31614  00ED6C  501F               	movf	_MSDWriteState,w,c
 31615  00ED6E  0012               	return	
 31616  00ED70                     __end_of_MSDWriteHandler:
 31617                           	opt stack 0
 31618                           tosu	equ	0xFFF
 31619                           tosh	equ	0xFFE
 31620                           tosl	equ	0xFFD
 31621                           pclath	equ	0xFFA
 31622                           tblptru	equ	0xFF8
 31623                           tblptrh	equ	0xFF7
 31624                           tblptrl	equ	0xFF6
 31625                           tablat	equ	0xFF5
 31626                           prodh	equ	0xFF4
 31627                           prodl	equ	0xFF3
 31628                           intcon	equ	0xFF2
 31629                           intcon2	equ	0xFF1
 31630                           intcon3	equ	0xFF0
 31631                           postinc0	equ	0xFEE
 31632                           wreg	equ	0xFE8
 31633                           indf1	equ	0xFE7
 31634                           postinc1	equ	0xFE6
 31635                           postdec1	equ	0xFE5
 31636                           plusw1	equ	0xFE3
 31637                           fsr1h	equ	0xFE2
 31638                           fsr1l	equ	0xFE1
 31639                           indf2	equ	0xFDF
 31640                           postinc2	equ	0xFDE
 31641                           postdec2	equ	0xFDD
 31642                           plusw2	equ	0xFDB
 31643                           fsr2h	equ	0xFDA
 31644                           fsr2l	equ	0xFD9
 31645                           status	equ	0xFD8
 31646                           
 31647 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 31648 ;; Defined at:
 31649 ;;		line 34 in file "external_flash.c"
 31650 ;; Parameters:    Size  Location     Type
 31651 ;;  config          2    0[BANK0 ] PTR void 
 31652 ;;		 -> NULL(0), 
 31653 ;; Auto vars:     Size  Location     Type
 31654 ;;		None
 31655 ;; Return value:  Size  Location     Type
 31656 ;;                  1    wreg      unsigned char 
 31657 ;; Registers used:
 31658 ;;		wreg
 31659 ;; Tracked objects:
 31660 ;;		On entry : 0/0
 31661 ;;		On exit  : 0/0
 31662 ;;		Unchanged: 0/0
 31663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31668 ;;Total ram usage:        2 bytes
 31669 ;; Hardware stack levels used:    1
 31670 ;; Hardware stack levels required when called:   10
 31671 ;; This function calls:
 31672 ;;		Nothing
 31673 ;; This function is called by:
 31674 ;;		_MSDWriteHandler
 31675 ;;		_MSDProcessCommandMediaPresent
 31676 ;; This function uses a non-reentrant model
 31677 ;;
 31678                           
 31679                           	psect	text140
 31680  015EEE                     __ptext140:
 31681                           	opt stack 0
 31682  015EEE                     _ExternalFlash_WriteProtectStateGet:
 31683                           	opt stack 15
 31684                           
 31685                           ;external_flash.c: 37: return 0;
 31686                           
 31687                           ;incstack = 0
 31688  015EEE  0E00               	movlw	0
 31689  015EF0  0012               	return	
 31690  015EF2                     __end_of_ExternalFlash_WriteProtectStateGet:
 31691                           	opt stack 0
 31692                           tosu	equ	0xFFF
 31693                           tosh	equ	0xFFE
 31694                           tosl	equ	0xFFD
 31695                           pclath	equ	0xFFA
 31696                           tblptru	equ	0xFF8
 31697                           tblptrh	equ	0xFF7
 31698                           tblptrl	equ	0xFF6
 31699                           tablat	equ	0xFF5
 31700                           prodh	equ	0xFF4
 31701                           prodl	equ	0xFF3
 31702                           intcon	equ	0xFF2
 31703                           intcon2	equ	0xFF1
 31704                           intcon3	equ	0xFF0
 31705                           postinc0	equ	0xFEE
 31706                           wreg	equ	0xFE8
 31707                           indf1	equ	0xFE7
 31708                           postinc1	equ	0xFE6
 31709                           postdec1	equ	0xFE5
 31710                           plusw1	equ	0xFE3
 31711                           fsr1h	equ	0xFE2
 31712                           fsr1l	equ	0xFE1
 31713                           indf2	equ	0xFDF
 31714                           postinc2	equ	0xFDE
 31715                           postdec2	equ	0xFDD
 31716                           plusw2	equ	0xFDB
 31717                           fsr2h	equ	0xFDA
 31718                           fsr2l	equ	0xFD9
 31719                           status	equ	0xFD8
 31720                           
 31721 ;; *************** function _ExternalFlash_SectorWrite *****************
 31722 ;; Defined at:
 31723 ;;		line 104 in file "external_flash.c"
 31724 ;; Parameters:    Size  Location     Type
 31725 ;;  config          2   36[BANK0 ] PTR void 
 31726 ;;		 -> NULL(0), 
 31727 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 31728 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 31729 ;;		 -> msd_buffer(512), 
 31730 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 31731 ;; Auto vars:     Size  Location     Type
 31732 ;;  page            2   45[BANK0 ] unsigned int 
 31733 ;; Return value:  Size  Location     Type
 31734 ;;                  1    wreg      unsigned char 
 31735 ;; Registers used:
 31736 ;;		wreg, status,2, status,0, cstack
 31737 ;; Tracked objects:
 31738 ;;		On entry : 0/0
 31739 ;;		On exit  : 0/0
 31740 ;;		Unchanged: 0/0
 31741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31742 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31745 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31746 ;;Total ram usage:       11 bytes
 31747 ;; Hardware stack levels used:    1
 31748 ;; Hardware stack levels required when called:   15
 31749 ;; This function calls:
 31750 ;;		_flash_page_write
 31751 ;; This function is called by:
 31752 ;;		_MSDWriteHandler
 31753 ;; This function uses a non-reentrant model
 31754 ;;
 31755                           
 31756                           	psect	text141
 31757  0154AE                     __ptext141:
 31758                           	opt stack 0
 31759  0154AE                     _ExternalFlash_SectorWrite:
 31760                           	opt stack 10
 31761                           
 31762                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 31763                           
 31764                           ;incstack = 0
 31765  0154AE  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 31766  0154B2  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 31767                           
 31768                           ;external_flash.c: 110: if(sector_addr >= 4096)
 31769  0154B6  0100               	movlb	0	; () banked
 31770  0154B8  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 31771  0154BA  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 31772  0154BC  E104               	bnz	u16810
 31773  0154BE  0E10               	movlw	16
 31774  0154C0  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 31775  0154C2  A0D8               	btfss	status,0,c
 31776  0154C4  D002               	goto	l2908
 31777  0154C6                     u16810:
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;external_flash.c: 111: {;external_flash.c: 112: return 0;
 31781  0154C6  0E00               	movlw	0
 31782                           
 31783                           ; BSR set to: 0
 31784  0154C8  0012               	return	
 31785  0154CA                     l2908:
 31786                           
 31787                           ; BSR set to: 0
 31788                           ;external_flash.c: 113: };external_flash.c: 141: flash_page_write(page, buffer);
 31789                           
 31790                           ; BSR set to: 0
 31791  0154CA  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 31792  0154CE  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 31793  0154D2  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 31794  0154D6  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 31795  0154DA  ECFF  F0A6         	call	_flash_page_write	;wreg free
 31796                           
 31797                           ;external_flash.c: 143: return 1;
 31798  0154DE  0E01               	movlw	1
 31799  0154E0  0012               	return	
 31800  0154E2                     __end_of_ExternalFlash_SectorWrite:
 31801                           	opt stack 0
 31802                           tosu	equ	0xFFF
 31803                           tosh	equ	0xFFE
 31804                           tosl	equ	0xFFD
 31805                           pclath	equ	0xFFA
 31806                           tblptru	equ	0xFF8
 31807                           tblptrh	equ	0xFF7
 31808                           tblptrl	equ	0xFF6
 31809                           tablat	equ	0xFF5
 31810                           prodh	equ	0xFF4
 31811                           prodl	equ	0xFF3
 31812                           intcon	equ	0xFF2
 31813                           intcon2	equ	0xFF1
 31814                           intcon3	equ	0xFF0
 31815                           postinc0	equ	0xFEE
 31816                           wreg	equ	0xFE8
 31817                           indf1	equ	0xFE7
 31818                           postinc1	equ	0xFE6
 31819                           postdec1	equ	0xFE5
 31820                           plusw1	equ	0xFE3
 31821                           fsr1h	equ	0xFE2
 31822                           fsr1l	equ	0xFE1
 31823                           indf2	equ	0xFDF
 31824                           postinc2	equ	0xFDE
 31825                           postdec2	equ	0xFDD
 31826                           plusw2	equ	0xFDB
 31827                           fsr2h	equ	0xFDA
 31828                           fsr2l	equ	0xFD9
 31829                           status	equ	0xFD8
 31830                           
 31831 ;; *************** function _flash_page_write *****************
 31832 ;; Defined at:
 31833 ;;		line 546 in file "flash.c"
 31834 ;; Parameters:    Size  Location     Type
 31835 ;;  page            2   31[BANK0 ] unsigned int 
 31836 ;;  data            2   33[BANK0 ] PTR unsigned char 
 31837 ;;		 -> buffer(512), msd_buffer(512), 
 31838 ;; Auto vars:     Size  Location     Type
 31839 ;;  match           1   35[BANK0 ] enum E6858
 31840 ;; Return value:  Size  Location     Type
 31841 ;;                  1    wreg      void 
 31842 ;; Registers used:
 31843 ;;		wreg, status,2, status,0, cstack
 31844 ;; Tracked objects:
 31845 ;;		On entry : 0/0
 31846 ;;		On exit  : 0/0
 31847 ;;		Unchanged: 0/0
 31848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31852 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31853 ;;Total ram usage:        5 bytes
 31854 ;; Hardware stack levels used:    1
 31855 ;; Hardware stack levels required when called:   14
 31856 ;; This function calls:
 31857 ;;		__flash_compare_page_to_buffer
 31858 ;;		__flash_write_page_from_buffer
 31859 ;;		__flash_write_to_buffer
 31860 ;; This function is called by:
 31861 ;;		_ExternalFlash_SectorWrite
 31862 ;;		_fat_format
 31863 ;; This function uses a non-reentrant model
 31864 ;;
 31865                           
 31866                           	psect	text142
 31867  014DFE                     __ptext142:
 31868                           	opt stack 0
 31869  014DFE                     _flash_page_write:
 31870                           	opt stack 10
 31871                           
 31872                           ;flash.c: 548: flashMatchResult_t match;;flash.c: 551: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 31873                           
 31874                           ;incstack = 0
 31875  014DFE  0E00               	movlw	0
 31876  014E00  0100               	movlb	0	; () banked
 31877  014E02  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 31878  014E04  0E00               	movlw	0
 31879  014E06  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 31880  014E08  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 31881  014E0C  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 31882  014E10  0E02               	movlw	2
 31883  014E12  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 31884  014E14  0E00               	movlw	0
 31885  014E16  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 31886  014E18  0E00               	movlw	0
 31887  014E1A  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 31888  014E1C  ECD6  F0A6         	call	__flash_write_to_buffer	;wreg free
 31889                           
 31890                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 31891  014E20  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 31892  014E24  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 31893  014E28  0E00               	movlw	0
 31894  014E2A  0100               	movlb	0	; () banked
 31895  014E2C  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 31896  014E2E  EC17  F09F         	call	__flash_compare_page_to_buffer	;wreg free
 31897  014E32  0100               	movlb	0	; () banked
 31898  014E34  6F83               	movwf	flash_page_write@match& (0+255),b
 31899                           
 31900                           ; BSR set to: 0
 31901                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 31902  014E36  0583               	decf	flash_page_write@match& (0+255),w,b
 31903  014E38  A4D8               	btfss	status,2,c
 31904  014E3A  0012               	return	
 31905                           
 31906                           ; BSR set to: 0
 31907                           ;flash.c: 558: {;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 31908  014E3C  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 31909  014E40  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 31910  014E44  0E00               	movlw	0
 31911  014E46  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 31912  014E48  EC28  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 31913  014E4C  0012               	return	
 31914  014E4E                     __end_of_flash_page_write:
 31915                           	opt stack 0
 31916                           tosu	equ	0xFFF
 31917                           tosh	equ	0xFFE
 31918                           tosl	equ	0xFFD
 31919                           pclath	equ	0xFFA
 31920                           tblptru	equ	0xFF8
 31921                           tblptrh	equ	0xFF7
 31922                           tblptrl	equ	0xFF6
 31923                           tablat	equ	0xFF5
 31924                           prodh	equ	0xFF4
 31925                           prodl	equ	0xFF3
 31926                           intcon	equ	0xFF2
 31927                           intcon2	equ	0xFF1
 31928                           intcon3	equ	0xFF0
 31929                           postinc0	equ	0xFEE
 31930                           wreg	equ	0xFE8
 31931                           indf1	equ	0xFE7
 31932                           postinc1	equ	0xFE6
 31933                           postdec1	equ	0xFE5
 31934                           plusw1	equ	0xFE3
 31935                           fsr1h	equ	0xFE2
 31936                           fsr1l	equ	0xFE1
 31937                           indf2	equ	0xFDF
 31938                           postinc2	equ	0xFDE
 31939                           postdec2	equ	0xFDD
 31940                           plusw2	equ	0xFDB
 31941                           fsr2h	equ	0xFDA
 31942                           fsr2l	equ	0xFD9
 31943                           status	equ	0xFD8
 31944                           
 31945 ;; *************** function __flash_write_to_buffer *****************
 31946 ;; Defined at:
 31947 ;;		line 397 in file "flash.c"
 31948 ;; Parameters:    Size  Location     Type
 31949 ;;  start           2   19[BANK0 ] unsigned int 
 31950 ;;  data            2   21[BANK0 ] PTR unsigned char 
 31951 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 31952 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 31953 ;;		 -> msd_buffer(512), 
 31954 ;;  data_length     2   23[BANK0 ] unsigned int 
 31955 ;;  buffer          1   25[BANK0 ] enum E6854
 31956 ;; Auto vars:     Size  Location     Type
 31957 ;;  command         4   26[BANK0 ] unsigned char [4]
 31958 ;; Return value:  Size  Location     Type
 31959 ;;                  1    wreg      void 
 31960 ;; Registers used:
 31961 ;;		wreg, status,2, status,0, cstack
 31962 ;; Tracked objects:
 31963 ;;		On entry : 0/0
 31964 ;;		On exit  : 0/0
 31965 ;;		Unchanged: 0/0
 31966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31967 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31968 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31970 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31971 ;;Total ram usage:       11 bytes
 31972 ;; Hardware stack levels used:    1
 31973 ;; Hardware stack levels required when called:   13
 31974 ;; This function calls:
 31975 ;;		__flash_spi_tx_tx
 31976 ;;		_flash_is_busy
 31977 ;; This function is called by:
 31978 ;;		_flash_page_write
 31979 ;;		_flash_partial_write
 31980 ;; This function uses a non-reentrant model
 31981 ;;
 31982                           
 31983                           	psect	text143
 31984  014DAC                     __ptext143:
 31985                           	opt stack 0
 31986  014DAC                     __flash_write_to_buffer:
 31987                           	opt stack 13
 31988                           
 31989                           ;flash.c: 399: uint8_t command[4];;flash.c: 402: while(flash_is_busy());
 31990                           
 31991                           ;incstack = 0
 31992  014DAC  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 31993  014DB0  0900               	iorlw	0
 31994  014DB2  A4D8               	btfss	status,2,c
 31995  014DB4  D7FB               	goto	__flash_write_to_buffer
 31996                           
 31997                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 31998  014DB6  0100               	movlb	0	; () banked
 31999  014DB8  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 32000  014DBA  A4D8               	btfss	status,2,c
 32001  014DBC  D002               	goto	l2822
 32002                           
 32003                           ; BSR set to: 0
 32004                           ;flash.c: 406: command[0] = 0x84;
 32005  014DBE  0E84               	movlw	132
 32006  014DC0  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32007  014DC2                     l2822:
 32008                           
 32009                           ; BSR set to: 0
 32010                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 32011                           
 32012                           ; BSR set to: 0
 32013  014DC2  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 32014  014DC4  A4D8               	btfss	status,2,c
 32015  014DC6  D002               	goto	l2823
 32016                           
 32017                           ; BSR set to: 0
 32018                           ;flash.c: 408: command[0] = 0x87;
 32019  014DC8  0E87               	movlw	135
 32020  014DCA  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32021  014DCC                     l2823:
 32022                           
 32023                           ; BSR set to: 0
 32024                           ;flash.c: 410: command[1] = 0x00;
 32025  014DCC  0E00               	movlw	0
 32026  014DCE  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 32027                           
 32028                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 32029  014DD0  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 32030  014DD2  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 32031                           
 32032                           ; BSR set to: 0
 32033                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 32034  014DD4  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 32035                           
 32036                           ; BSR set to: 0
 32037                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 32038  014DD8  0E7A               	movlw	low __flash_write_to_buffer@command
 32039  014DDA  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 32040  014DDC  0E00               	movlw	high __flash_write_to_buffer@command
 32041  014DDE  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 32042  014DE0  0E00               	movlw	0
 32043  014DE2  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 32044  014DE4  0E04               	movlw	4
 32045  014DE6  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 32046  014DE8  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 32047  014DEC  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 32048  014DF0  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 32049  014DF4  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 32050  014DF8  ECBA  F09B         	call	__flash_spi_tx_tx	;wreg free
 32051  014DFC  0012               	return		;funcret
 32052  014DFE                     __end_of__flash_write_to_buffer:
 32053                           	opt stack 0
 32054                           tosu	equ	0xFFF
 32055                           tosh	equ	0xFFE
 32056                           tosl	equ	0xFFD
 32057                           pclath	equ	0xFFA
 32058                           tblptru	equ	0xFF8
 32059                           tblptrh	equ	0xFF7
 32060                           tblptrl	equ	0xFF6
 32061                           tablat	equ	0xFF5
 32062                           prodh	equ	0xFF4
 32063                           prodl	equ	0xFF3
 32064                           intcon	equ	0xFF2
 32065                           intcon2	equ	0xFF1
 32066                           intcon3	equ	0xFF0
 32067                           postinc0	equ	0xFEE
 32068                           wreg	equ	0xFE8
 32069                           indf1	equ	0xFE7
 32070                           postinc1	equ	0xFE6
 32071                           postdec1	equ	0xFE5
 32072                           plusw1	equ	0xFE3
 32073                           fsr1h	equ	0xFE2
 32074                           fsr1l	equ	0xFE1
 32075                           indf2	equ	0xFDF
 32076                           postinc2	equ	0xFDE
 32077                           postdec2	equ	0xFDD
 32078                           plusw2	equ	0xFDB
 32079                           fsr2h	equ	0xFDA
 32080                           fsr2l	equ	0xFD9
 32081                           status	equ	0xFD8
 32082                           
 32083 ;; *************** function __flash_spi_tx_tx *****************
 32084 ;; Defined at:
 32085 ;;		line 141 in file "flash.c"
 32086 ;; Parameters:    Size  Location     Type
 32087 ;;  command         2    0[BANK0 ] PTR unsigned char 
 32088 ;;		 -> _flash_write_to_buffer@command(4), 
 32089 ;;  command_leng    2    2[BANK0 ] unsigned int 
 32090 ;;  data            2    4[BANK0 ] PTR unsigned char 
 32091 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32092 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32093 ;;		 -> msd_buffer(512), 
 32094 ;;  data_length     2    6[BANK0 ] unsigned int 
 32095 ;; Auto vars:     Size  Location     Type
 32096 ;;		None
 32097 ;; Return value:  Size  Location     Type
 32098 ;;                  1    wreg      void 
 32099 ;; Registers used:
 32100 ;;		wreg, status,2, status,0
 32101 ;; Tracked objects:
 32102 ;;		On entry : 0/0
 32103 ;;		On exit  : 0/0
 32104 ;;		Unchanged: 0/0
 32105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32106 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32109 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32110 ;;Total ram usage:       12 bytes
 32111 ;; Hardware stack levels used:    1
 32112 ;; Hardware stack levels required when called:   10
 32113 ;; This function calls:
 32114 ;;		Nothing
 32115 ;; This function is called by:
 32116 ;;		__flash_write_to_buffer
 32117 ;; This function uses a non-reentrant model
 32118 ;;
 32119                           
 32120                           	psect	text144
 32121  013774                     __ptext144:
 32122                           	opt stack 0
 32123  013774                     __flash_spi_tx_tx:
 32124                           	opt stack 15
 32125                           
 32126                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 32127                           
 32128                           ;incstack = 0
 32129  013774  9E88               	bcf	3976,7,c	;volatile
 32130                           
 32131                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 32132  013776  9C88               	bcf	3976,6,c	;volatile
 32133                           
 32134                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 32135  013778  8A88               	bsf	3976,5,c	;volatile
 32136                           
 32137                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 32138  01377A  9888               	bcf	3976,4,c	;volatile
 32139                           
 32140                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 32141  01377C  9688               	bcf	3976,3,c	;volatile
 32142                           
 32143                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 32144  01377E  8488               	bsf	3976,2,c	;volatile
 32145                           
 32146                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 32147  013780  9288               	bcf	3976,1,c	;volatile
 32148                           
 32149                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 32150  013782  9886               	bcf	3974,4,c	;volatile
 32151  013784  9A86               	bcf	3974,5,c	;volatile
 32152  013786  9C86               	bcf	3974,6,c	;volatile
 32153  013788  9E86               	bcf	3974,7,c	;volatile
 32154                           
 32155                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 32156  01378A  9086               	bcf	3974,0,c	;volatile
 32157  01378C  9286               	bcf	3974,1,c	;volatile
 32158  01378E  9486               	bcf	3974,2,c	;volatile
 32159  013790  9686               	bcf	3974,3,c	;volatile
 32160                           
 32161                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 32162  013792  0100               	movlb	0	; () banked
 32163  013794  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 32164  013796  6E6A               	movwf	3946,c	;volatile
 32165                           
 32166                           ; BSR set to: 0
 32167                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 32168  013798  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 32169                           
 32170                           ; BSR set to: 0
 32171                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 32172  01379C  0EFF               	movlw	255
 32173  01379E  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32174  0137A0  0EFF               	movlw	255
 32175  0137A2  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32176  0137A4  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 32177  0137A8  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 32178  0137AC  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32179  0137AE  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32180  0137B0  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32181  0137B2  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32182  0137B4  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32183  0137B8  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32184  0137BA  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32185  0137BC  6E66               	movwf	3942,c	;volatile
 32186                           
 32187                           ; BSR set to: 0
 32188                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 32189  0137BE  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 32190  0137C0  6E67               	movwf	3943,c	;volatile
 32191                           
 32192                           ; BSR set to: 0
 32193                           ;flash.c: 169: LATDbits.LD7 = 0;
 32194  0137C2  9E8C               	bcf	3980,7,c	;volatile
 32195                           
 32196                           ; BSR set to: 0
 32197                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 32198  0137C4  8088               	bsf	3976,0,c	;volatile
 32199  0137C6                     
 32200                           ; BSR set to: 0
 32201  0137C6  B088               	btfsc	3976,0,c	;volatile
 32202  0137C8  D7FE               	goto	l2757
 32203                           
 32204                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 32205  0137CA  0100               	movlb	0	; () banked
 32206  0137CC  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 32207  0137CE  6E6A               	movwf	3946,c	;volatile
 32208                           
 32209                           ; BSR set to: 0
 32210                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 32211  0137D0  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 32212                           
 32213                           ; BSR set to: 0
 32214                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 32215  0137D4  0EFF               	movlw	255
 32216  0137D6  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32217  0137D8  0EFF               	movlw	255
 32218  0137DA  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32219  0137DC  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 32220  0137E0  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 32221  0137E4  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32222  0137E6  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32223  0137E8  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32224  0137EA  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32225  0137EC  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32226  0137F0  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32227  0137F2  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32228  0137F4  6E66               	movwf	3942,c	;volatile
 32229                           
 32230                           ; BSR set to: 0
 32231                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 32232  0137F6  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 32233  0137F8  6E67               	movwf	3943,c	;volatile
 32234                           
 32235                           ; BSR set to: 0
 32236                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 32237  0137FA  8088               	bsf	3976,0,c	;volatile
 32238  0137FC                     
 32239                           ; BSR set to: 0
 32240  0137FC  B088               	btfsc	3976,0,c	;volatile
 32241  0137FE  D7FE               	goto	l2760
 32242                           
 32243                           ;flash.c: 188: LATDbits.LD7 = 1;
 32244  013800  8E8C               	bsf	3980,7,c	;volatile
 32245  013802  0012               	return		;funcret
 32246  013804                     __end_of__flash_spi_tx_tx:
 32247                           	opt stack 0
 32248                           tosu	equ	0xFFF
 32249                           tosh	equ	0xFFE
 32250                           tosl	equ	0xFFD
 32251                           pclath	equ	0xFFA
 32252                           tblptru	equ	0xFF8
 32253                           tblptrh	equ	0xFF7
 32254                           tblptrl	equ	0xFF6
 32255                           tablat	equ	0xFF5
 32256                           prodh	equ	0xFF4
 32257                           prodl	equ	0xFF3
 32258                           intcon	equ	0xFF2
 32259                           intcon2	equ	0xFF1
 32260                           intcon3	equ	0xFF0
 32261                           postinc0	equ	0xFEE
 32262                           wreg	equ	0xFE8
 32263                           indf1	equ	0xFE7
 32264                           postinc1	equ	0xFE6
 32265                           postdec1	equ	0xFE5
 32266                           plusw1	equ	0xFE3
 32267                           fsr1h	equ	0xFE2
 32268                           fsr1l	equ	0xFE1
 32269                           indf2	equ	0xFDF
 32270                           postinc2	equ	0xFDE
 32271                           postdec2	equ	0xFDD
 32272                           plusw2	equ	0xFDB
 32273                           fsr2h	equ	0xFDA
 32274                           fsr2l	equ	0xFD9
 32275                           status	equ	0xFD8
 32276                           
 32277 ;; *************** function __flash_write_page_from_buffer *****************
 32278 ;; Defined at:
 32279 ;;		line 419 in file "flash.c"
 32280 ;; Parameters:    Size  Location     Type
 32281 ;;  page            2   19[BANK0 ] unsigned int 
 32282 ;;  buffer          1   21[BANK0 ] enum E6854
 32283 ;; Auto vars:     Size  Location     Type
 32284 ;;  command         4   25[BANK0 ] unsigned char [4]
 32285 ;; Return value:  Size  Location     Type
 32286 ;;                  1    wreg      void 
 32287 ;; Registers used:
 32288 ;;		wreg, status,2, status,0, cstack
 32289 ;; Tracked objects:
 32290 ;;		On entry : 0/0
 32291 ;;		On exit  : 0/0
 32292 ;;		Unchanged: 0/0
 32293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32294 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32295 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32296 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32297 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32298 ;;Total ram usage:       10 bytes
 32299 ;; Hardware stack levels used:    1
 32300 ;; Hardware stack levels required when called:   13
 32301 ;; This function calls:
 32302 ;;		__flash_spi_tx
 32303 ;;		_flash_is_busy
 32304 ;; This function is called by:
 32305 ;;		_flash_page_write
 32306 ;;		_flash_partial_write
 32307 ;; This function uses a non-reentrant model
 32308 ;;
 32309                           
 32310                           	psect	text145
 32311  014A50                     __ptext145:
 32312                           	opt stack 0
 32313  014A50                     __flash_write_page_from_buffer:
 32314                           	opt stack 13
 32315                           
 32316                           ;flash.c: 421: uint8_t command[4];;flash.c: 424: while(flash_is_busy());
 32317                           
 32318                           ;incstack = 0
 32319  014A50  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 32320  014A54  0900               	iorlw	0
 32321  014A56  A4D8               	btfss	status,2,c
 32322  014A58  D7FB               	goto	__flash_write_page_from_buffer
 32323                           
 32324                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 32325  014A5A  0100               	movlb	0	; () banked
 32326  014A5C  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32327  014A5E  A4D8               	btfss	status,2,c
 32328  014A60  D002               	goto	l2830
 32329                           
 32330                           ; BSR set to: 0
 32331                           ;flash.c: 428: command[0] = 0x83;
 32332  014A62  0E83               	movlw	131
 32333  014A64  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32334  014A66                     l2830:
 32335                           
 32336                           ; BSR set to: 0
 32337                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 32338                           
 32339                           ; BSR set to: 0
 32340  014A66  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32341  014A68  A4D8               	btfss	status,2,c
 32342  014A6A  D002               	goto	l2831
 32343                           
 32344                           ; BSR set to: 0
 32345                           ;flash.c: 430: command[0] = 0x86;
 32346  014A6C  0E86               	movlw	134
 32347  014A6E  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32348  014A70                     l2831:
 32349                           
 32350                           ; BSR set to: 0
 32351                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 32352                           
 32353                           ; BSR set to: 0
 32354  014A70  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 32355  014A74  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 32356  014A78  0E07               	movlw	7
 32357  014A7A  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 32358  014A7C                     u16415:
 32359  014A7C  90D8               	bcf	status,0,c
 32360  014A7E  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 32361  014A80  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 32362  014A82  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 32363  014A84  D7FB               	goto	u16415
 32364  014A86  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 32365  014A88  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 32366                           
 32367                           ; BSR set to: 0
 32368                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 32369  014A8A  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 32370  014A8C  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 32371  014A8E  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 32372                           
 32373                           ;flash.c: 434: command[3] = 0x00;
 32374  014A90  0E00               	movlw	0
 32375  014A92  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 32376                           
 32377                           ; BSR set to: 0
 32378                           ;flash.c: 437: _flash_spi_tx(command, 4);
 32379  014A94  0E79               	movlw	low __flash_write_page_from_buffer@command
 32380  014A96  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 32381  014A98  0E00               	movlw	high __flash_write_page_from_buffer@command
 32382  014A9A  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 32383  014A9C  0E00               	movlw	0
 32384  014A9E  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 32385  014AA0  0E04               	movlw	4
 32386  014AA2  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 32387  014AA4  EC55  F0A5         	call	__flash_spi_tx	;wreg free
 32388  014AA8  0012               	return		;funcret
 32389  014AAA                     __end_of__flash_write_page_from_buffer:
 32390                           	opt stack 0
 32391                           tosu	equ	0xFFF
 32392                           tosh	equ	0xFFE
 32393                           tosl	equ	0xFFD
 32394                           pclath	equ	0xFFA
 32395                           tblptru	equ	0xFF8
 32396                           tblptrh	equ	0xFF7
 32397                           tblptrl	equ	0xFF6
 32398                           tablat	equ	0xFF5
 32399                           prodh	equ	0xFF4
 32400                           prodl	equ	0xFF3
 32401                           intcon	equ	0xFF2
 32402                           intcon2	equ	0xFF1
 32403                           intcon3	equ	0xFF0
 32404                           postinc0	equ	0xFEE
 32405                           wreg	equ	0xFE8
 32406                           indf1	equ	0xFE7
 32407                           postinc1	equ	0xFE6
 32408                           postdec1	equ	0xFE5
 32409                           plusw1	equ	0xFE3
 32410                           fsr1h	equ	0xFE2
 32411                           fsr1l	equ	0xFE1
 32412                           indf2	equ	0xFDF
 32413                           postinc2	equ	0xFDE
 32414                           postdec2	equ	0xFDD
 32415                           plusw2	equ	0xFDB
 32416                           fsr2h	equ	0xFDA
 32417                           fsr2l	equ	0xFD9
 32418                           status	equ	0xFD8
 32419                           
 32420 ;; *************** function __flash_compare_page_to_buffer *****************
 32421 ;; Defined at:
 32422 ;;		line 337 in file "flash.c"
 32423 ;; Parameters:    Size  Location     Type
 32424 ;;  page            2   19[BANK0 ] unsigned int 
 32425 ;;  buffer          1   21[BANK0 ] enum E6854
 32426 ;; Auto vars:     Size  Location     Type
 32427 ;;  command         4   27[BANK0 ] unsigned char [4]
 32428 ;;  status          2   25[BANK0 ] unsigned int 
 32429 ;; Return value:  Size  Location     Type
 32430 ;;                  1    wreg      enum E6858
 32431 ;; Registers used:
 32432 ;;		wreg, status,2, status,0, cstack
 32433 ;; Tracked objects:
 32434 ;;		On entry : 0/0
 32435 ;;		On exit  : 0/0
 32436 ;;		Unchanged: 0/0
 32437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32438 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32439 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32440 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32441 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32442 ;;Total ram usage:       12 bytes
 32443 ;; Hardware stack levels used:    1
 32444 ;; Hardware stack levels required when called:   13
 32445 ;; This function calls:
 32446 ;;		__flash_get_status
 32447 ;;		__flash_spi_tx
 32448 ;;		_flash_is_busy
 32449 ;; This function is called by:
 32450 ;;		_flash_page_write
 32451 ;;		_flash_partial_write
 32452 ;; This function uses a non-reentrant model
 32453 ;;
 32454                           
 32455                           	psect	text146
 32456  013E2E                     __ptext146:
 32457                           	opt stack 0
 32458  013E2E                     __flash_compare_page_to_buffer:
 32459                           	opt stack 13
 32460                           
 32461                           ;flash.c: 339: uint8_t command[4];;flash.c: 340: uint16_t status;;flash.c: 343: while(fl
      +                          ash_is_busy());
 32462                           
 32463                           ;incstack = 0
 32464  013E2E  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 32465  013E32  0900               	iorlw	0
 32466  013E34  A4D8               	btfss	status,2,c
 32467  013E36  D7FB               	goto	__flash_compare_page_to_buffer
 32468                           
 32469                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 32470  013E38  0100               	movlb	0	; () banked
 32471  013E3A  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 32472  013E3C  A4D8               	btfss	status,2,c
 32473  013E3E  D002               	goto	l2803
 32474                           
 32475                           ; BSR set to: 0
 32476                           ;flash.c: 347: command[0] = 0x60;
 32477  013E40  0E60               	movlw	96
 32478  013E42  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 32479  013E44                     l2803:
 32480                           
 32481                           ; BSR set to: 0
 32482                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 32483                           
 32484                           ; BSR set to: 0
 32485  013E44  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 32486  013E46  A4D8               	btfss	status,2,c
 32487  013E48  D002               	goto	l2804
 32488                           
 32489                           ; BSR set to: 0
 32490                           ;flash.c: 349: command[0] = 0x60;
 32491  013E4A  0E60               	movlw	96
 32492  013E4C  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 32493  013E4E                     l2804:
 32494                           
 32495                           ; BSR set to: 0
 32496                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 32497                           
 32498                           ; BSR set to: 0
 32499  013E4E  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 32500  013E52  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 32501  013E56  0E07               	movlw	7
 32502  013E58  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 32503  013E5A                     u16325:
 32504  013E5A  90D8               	bcf	status,0,c
 32505  013E5C  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 32506  013E5E  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 32507  013E60  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 32508  013E62  D7FB               	goto	u16325
 32509  013E64  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 32510  013E66  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 32511                           
 32512                           ; BSR set to: 0
 32513                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 32514  013E68  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 32515  013E6A  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 32516  013E6C  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 32517                           
 32518                           ;flash.c: 353: command[3] = 0x00;
 32519  013E6E  0E00               	movlw	0
 32520  013E70  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 32521                           
 32522                           ; BSR set to: 0
 32523                           ;flash.c: 356: _flash_spi_tx(command, 4);
 32524  013E72  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 32525  013E74  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 32526  013E76  0E00               	movlw	high __flash_compare_page_to_buffer@command
 32527  013E78  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 32528  013E7A  0E00               	movlw	0
 32529  013E7C  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 32530  013E7E  0E04               	movlw	4
 32531  013E80  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 32532  013E82  EC55  F0A5         	call	__flash_spi_tx	;wreg free
 32533  013E86  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 32534  013E8A  0900               	iorlw	0
 32535  013E8C  A4D8               	btfss	status,2,c
 32536  013E8E  D7FB               	goto	l2806
 32537                           
 32538                           ;flash.c: 362: status = _flash_get_status();
 32539  013E90  EC8B  F0AA         	call	__flash_get_status	;wreg free
 32540  013E94  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 32541  013E98  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 32542                           
 32543                           ;flash.c: 365: if(status & 0b0000000001000000)
 32544  013E9C  0100               	movlb	0	; () banked
 32545  013E9E  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 32546  013EA0  D002               	goto	l2808
 32547                           
 32548                           ; BSR set to: 0
 32549                           ;flash.c: 366: {;flash.c: 368: return DATA_DOES_NOT_MATCH;
 32550  013EA2  0E01               	movlw	1
 32551                           
 32552                           ; BSR set to: 0
 32553                           ;flash.c: 369: }
 32554                           
 32555                           ; BSR set to: 0
 32556  013EA4  0012               	return	
 32557  013EA6                     l2808:
 32558                           
 32559                           ; BSR set to: 0
 32560                           ;flash.c: 370: else;flash.c: 371: {;flash.c: 373: return DATA_DOES_MATCH;
 32561                           
 32562                           ; BSR set to: 0
 32563  013EA6  0E00               	movlw	0
 32564                           
 32565                           ; BSR set to: 0
 32566  013EA8  0012               	return	
 32567  013EAA                     __end_of__flash_compare_page_to_buffer:
 32568                           	opt stack 0
 32569                           tosu	equ	0xFFF
 32570                           tosh	equ	0xFFE
 32571                           tosl	equ	0xFFD
 32572                           pclath	equ	0xFFA
 32573                           tblptru	equ	0xFF8
 32574                           tblptrh	equ	0xFF7
 32575                           tblptrl	equ	0xFF6
 32576                           tablat	equ	0xFF5
 32577                           prodh	equ	0xFF4
 32578                           prodl	equ	0xFF3
 32579                           intcon	equ	0xFF2
 32580                           intcon2	equ	0xFF1
 32581                           intcon3	equ	0xFF0
 32582                           postinc0	equ	0xFEE
 32583                           wreg	equ	0xFE8
 32584                           indf1	equ	0xFE7
 32585                           postinc1	equ	0xFE6
 32586                           postdec1	equ	0xFE5
 32587                           plusw1	equ	0xFE3
 32588                           fsr1h	equ	0xFE2
 32589                           fsr1l	equ	0xFE1
 32590                           indf2	equ	0xFDF
 32591                           postinc2	equ	0xFDE
 32592                           postdec2	equ	0xFDD
 32593                           plusw2	equ	0xFDB
 32594                           fsr2h	equ	0xFDA
 32595                           fsr2l	equ	0xFD9
 32596                           status	equ	0xFD8
 32597                           
 32598 ;; *************** function _MSDReadHandler *****************
 32599 ;; Defined at:
 32600 ;;		line 1038 in file "usb_device_msd.c"
 32601 ;; Parameters:    Size  Location     Type
 32602 ;;		None
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  1    wreg      unsigned char 
 32607 ;; Registers used:
 32608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32609 ;; Tracked objects:
 32610 ;;		On entry : 0/0
 32611 ;;		On exit  : 0/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32617 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32618 ;;Total ram usage:        4 bytes
 32619 ;; Hardware stack levels used:    1
 32620 ;; Hardware stack levels required when called:   16
 32621 ;; This function calls:
 32622 ;;		_ExternalFlash_SectorRead
 32623 ;;		_MSDCheckForErrorCases
 32624 ;;		_USBStallEndpoint
 32625 ;;		_USBTransferOnePacket
 32626 ;; This function is called by:
 32627 ;;		_MSDProcessCommandMediaPresent
 32628 ;; This function uses a non-reentrant model
 32629 ;;
 32630                           
 32631                           	psect	text147
 32632  00FF72                     __ptext147:
 32633                           	opt stack 0
 32634  00FF72                     _MSDReadHandler:
 32635                           	opt stack 10
 32636                           
 32637                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 32638                           
 32639                           ; BSR set to: 0
 32640                           ;incstack = 0
 32641  00FF72  D0DD               	goto	l685
 32642  00FF74                     l686:
 32643                           
 32644                           ; BSR set to: 1
 32645                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 32646  00FF74  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 32647                           
 32648                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 32649  00FF78  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 32650                           
 32651                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 32652  00FF7C  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 32653                           
 32654                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 32655  00FF80  C255  F1D9         	movff	_gblCBW+20,_LBA
 32656                           
 32657                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 32658  00FF84  C257  F0DB         	movff	_gblCBW+22,_TransferLength+1
 32659                           
 32660                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 32661  00FF88  C258  F0DA         	movff	_gblCBW+23,_TransferLength
 32662                           
 32663                           ; BSR set to: 1
 32664                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 32665  00FF8C  0100               	movlb	0	; () banked
 32666  00FF8E  51DA               	movf	_TransferLength& (0+255),w,b
 32667  00FF90  6F95               	movwf	??_MSDReadHandler& (0+255),b
 32668  00FF92  51DB               	movf	(_TransferLength+1)& (0+255),w,b
 32669  00FF94  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 32670  00FF96  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 32671  00FF98  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 32672  00FF9A  0E09               	movlw	9
 32673  00FF9C                     u16845:
 32674  00FF9C  90D8               	bcf	status,0,c
 32675  00FF9E  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 32676  00FFA0  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 32677  00FFA2  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 32678  00FFA4  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 32679  00FFA6  2EE8               	decfsz	wreg,f,c
 32680  00FFA8  D7F9               	goto	u16845
 32681  00FFAA  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 32682  00FFAE  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 32683  00FFB2  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 32684  00FFB6  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 32685  00FFBA  EC24  F08F         	call	_MSDCheckForErrorCases	;wreg free
 32686  00FFBE  0900               	iorlw	0
 32687  00FFC0  A4D8               	btfss	status,2,c
 32688  00FFC2  D0C7               	goto	l688
 32689                           
 32690                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 32691                           
 32692                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 32693  00FFC4  0E01               	movlw	1
 32694  00FFC6  0101               	movlb	1	; () banked
 32695  00FFC8  6FF9               	movwf	_MSDReadState& (0+255),b
 32696  00FFCA                     
 32697                           ; BSR set to: 1
 32698                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 32699                           
 32700                           ; BSR set to: 1
 32701  00FFCA  0100               	movlb	0	; () banked
 32702  00FFCC  51DA               	movf	_TransferLength& (0+255),w,b
 32703  00FFCE  11DB               	iorwf	(_TransferLength+1)& (0+255),w,b
 32704  00FFD0  B4D8               	btfsc	status,2,c
 32705  00FFD2  D0A9               	goto	l18299
 32706                           
 32707                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 32708                           
 32709                           ; BSR set to: 1
 32710                           
 32711                           ;usb_device_msd.c: 1067: break;
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 32715  00FFD4  0100               	movlb	0	; () banked
 32716  00FFD6  07DA               	decf	_TransferLength& (0+255),f,b
 32717  00FFD8  A0D8               	btfss	status,0,c
 32718  00FFDA  07DB               	decf	(_TransferLength+1)& (0+255),f,b
 32719                           
 32720                           ; BSR set to: 0
 32721                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 32722  00FFDC  0E02               	movlw	2
 32723  00FFDE  0101               	movlb	1	; () banked
 32724  00FFE0  6FF9               	movwf	_MSDReadState& (0+255),b
 32725  00FFE2                     
 32726                           ; BSR set to: 1
 32727                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 32728                           
 32729                           ; BSR set to: 1
 32730  00FFE2  0100               	movlb	0	; () banked
 32731  00FFE4  51DC               	movf	_USBMSDInHandle& (0+255),w,b
 32732  00FFE6  11DD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32733  00FFE8  B4D8               	btfsc	status,2,c
 32734  00FFEA  D006               	goto	l692
 32735                           
 32736                           ; BSR set to: 0
 32737  00FFEC  C0DC  FFD9         	movff	_USBMSDInHandle,fsr2l
 32738  00FFF0  C0DD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32739  00FFF4  BEDF               	btfsc	indf2,7,c
 32740  00FFF6  D0AD               	goto	l688
 32741  00FFF8                     l692:
 32742                           
 32743                           ; BSR set to: 0
 32744                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 32745                           
 32746                           ; BSR set to: 0
 32747  00FFF8  C2D0  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 32748  00FFFC  C2D1  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 32749  010000  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 32750  010004  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 32751  010008  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 32752  01000C  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 32753  010010  0E00               	movlw	0
 32754  010012  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 32755  010014  0E06               	movlw	6
 32756  010016  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 32757  010018  EE22  F0C7         	lfsr	2,_LUN+12
 32758  01001C  D801               	call	u16898
 32759  01001E  D00A               	goto	u16899
 32760  010020                     u16898:
 32761  010020  0005               	push	
 32762  010022  6EFA               	movwf	pclath,c
 32763  010024  50DE               	movf	postinc2,w,c
 32764  010026  6EFD               	movwf	tosl,c
 32765  010028  50DE               	movf	postinc2,w,c
 32766  01002A  6EFE               	movwf	tosh,c
 32767  01002C  50DE               	movf	postinc2,w,c
 32768  01002E  6EFF               	movwf	tosu,c
 32769  010030  50FA               	movf	pclath,w,c
 32770  010032  0012               	return		;indir
 32771  010034                     u16899:
 32772  010034  06E8               	decf	wreg,f,c
 32773  010036  B4D8               	btfsc	status,2,c
 32774  010038  D019               	goto	l695
 32775                           
 32776                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 32777  01003A  0E64               	movlw	100
 32778  01003C  0101               	movlb	1	; () banked
 32779  01003E  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 32780  010040  D002               	goto	l694
 32781                           
 32782                           ; BSR set to: 1
 32783                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 32784  010042  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 32785                           
 32786                           ;usb_device_msd.c: 1088: break;
 32787  010044  D086               	goto	l688
 32788  010046                     l694:
 32789                           
 32790                           ; BSR set to: 1
 32791                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 32792                           
 32793                           ; BSR set to: 1
 32794  010046  0E02               	movlw	2
 32795  010048  010D               	movlb	13	; () banked
 32796  01004A  6F8C               	movwf	140,b	;volatile
 32797                           
 32798                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 32799  01004C  0102               	movlb	2	; () banked
 32800  01004E  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32801  010050  0BF0               	andlw	-16
 32802  010052  0903               	iorlw	3
 32803  010054  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32804                           
 32805                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 32806  010056  0E00               	movlw	0
 32807  010058  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32808                           
 32809                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 32810  01005A  0E00               	movlw	0
 32811  01005C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32812                           
 32813                           ; BSR set to: 2
 32814                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 32815  01005E  0E01               	movlw	1
 32816  010060  0100               	movlb	0	; () banked
 32817  010062  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32818  010064  0E02               	movlw	2
 32819  010066  EC17  F08C         	call	_USBStallEndpoint
 32820  01006A  D05D               	goto	l18299
 32821  01006C                     l695:
 32822                           
 32823                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 32824                           
 32825                           ; BSR set to: 1
 32826                           
 32827                           ; BSR set to: 1
 32828  01006C  0E01               	movlw	1
 32829  01006E  0101               	movlb	1	; () banked
 32830  010070  27D9               	addwf	_LBA& (0+255),f,b
 32831  010072  0E00               	movlw	0
 32832  010074  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 32833  010076  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 32834  010078  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 32835                           
 32836                           ; BSR set to: 1
 32837                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 32838  01007A  0E00               	movlw	0
 32839  01007C  010D               	movlb	13	; () banked
 32840  01007E  6F88               	movwf	136,b	;volatile
 32841  010080  0E02               	movlw	2
 32842  010082  6F89               	movwf	137,b	;volatile
 32843  010084  0E00               	movlw	0
 32844  010086  6F8A               	movwf	138,b	;volatile
 32845  010088  0E00               	movlw	0
 32846  01008A  6F8B               	movwf	139,b	;volatile
 32847                           
 32848                           ; BSR set to: 13
 32849                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 32850  01008C  0E00               	movlw	0
 32851  01008E  0101               	movlb	1	; () banked
 32852  010090  6FEB               	movwf	_ptrNextData& (0+255),b
 32853  010092  0E06               	movlw	6
 32854  010094  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 32855                           
 32856                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 32857  010096  0E03               	movlw	3
 32858  010098  6FF9               	movwf	_MSDReadState& (0+255),b
 32859  01009A                     
 32860                           ; BSR set to: 1
 32861                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 32862                           
 32863                           ; BSR set to: 1
 32864  01009A  010D               	movlb	13	; () banked
 32865  01009C  5188               	movf	136,w,b	;volatile
 32866  01009E  1189               	iorwf	137,w,b	;volatile
 32867  0100A0  118A               	iorwf	138,w,b	;volatile
 32868  0100A2  118B               	iorwf	139,w,b	;volatile
 32869  0100A4  A4D8               	btfss	status,2,c
 32870  0100A6  D002               	goto	l697
 32871                           
 32872                           ; BSR set to: 13
 32873                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 32874  0100A8  0E01               	movlw	1
 32875  0100AA  D03E               	goto	L29
 32876  0100AC                     l697:
 32877                           
 32878                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 32879                           
 32880                           ; BSR set to: 1
 32881  0100AC  0E04               	movlw	4
 32882  0100AE  0101               	movlb	1	; () banked
 32883  0100B0  6FF9               	movwf	_MSDReadState& (0+255),b
 32884  0100B2                     
 32885                           ; BSR set to: 1
 32886                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 32887                           
 32888                           ; BSR set to: 1
 32889  0100B2  0100               	movlb	0	; () banked
 32890  0100B4  51DC               	movf	_USBMSDInHandle& (0+255),w,b
 32891  0100B6  11DD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32892  0100B8  B4D8               	btfsc	status,2,c
 32893  0100BA  D006               	goto	l699
 32894                           
 32895                           ; BSR set to: 0
 32896  0100BC  C0DC  FFD9         	movff	_USBMSDInHandle,fsr2l
 32897  0100C0  C0DD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32898  0100C4  BEDF               	btfsc	indf2,7,c
 32899  0100C6  D045               	goto	l688
 32900  0100C8                     l699:
 32901                           
 32902                           ; BSR set to: 0
 32903                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 32904                           
 32905                           ; BSR set to: 0
 32906  0100C8  0E01               	movlw	1
 32907  0100CA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32908  0100CC  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 32909  0100D0  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 32910  0100D4  0E40               	movlw	64
 32911  0100D6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32912  0100D8  0E02               	movlw	2
 32913  0100DA  EC9C  F08C         	call	_USBTransferOnePacket
 32914  0100DE  C060  F0DC         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32915  0100E2  C061  F0DD         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32916                           
 32917                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 32918  0100E6  0E03               	movlw	3
 32919  0100E8  0101               	movlb	1	; () banked
 32920  0100EA  6FF9               	movwf	_MSDReadState& (0+255),b
 32921                           
 32922                           ; BSR set to: 1
 32923                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 32924  0100EC  0E40               	movlw	64
 32925  0100EE  0102               	movlb	2	; () banked
 32926  0100F0  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 32927  0100F2  0E00               	movlw	0
 32928  0100F4  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 32929  0100F6  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 32930  0100F8  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 32931                           
 32932                           ; BSR set to: 2
 32933                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 32934  0100FA  0E40               	movlw	64
 32935  0100FC  010D               	movlb	13	; () banked
 32936  0100FE  5F88               	subwf	136,f,b	;volatile
 32937  010100  0E00               	movlw	0
 32938  010102  5B89               	subwfb	137,f,b	;volatile
 32939  010104  5B8A               	subwfb	138,f,b	;volatile
 32940  010106  5B8B               	subwfb	139,f,b	;volatile
 32941                           
 32942                           ; BSR set to: 13
 32943                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 32944  010108  0E40               	movlw	64
 32945  01010A  0101               	movlb	1	; () banked
 32946  01010C  27EB               	addwf	_ptrNextData& (0+255),f,b
 32947  01010E  0E00               	movlw	0
 32948  010110  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 32949                           
 32950                           ;usb_device_msd.c: 1149: break;
 32951  010112  D01F               	goto	l688
 32952  010114                     
 32953                           ; BSR set to: 1
 32954                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 32955                           
 32956                           ; BSR set to: 1
 32957  010114  0E02               	movlw	2
 32958  010116  010D               	movlb	13	; () banked
 32959  010118  6F8C               	movwf	140,b	;volatile
 32960                           
 32961                           ; BSR set to: 13
 32962                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 32963  01011A  0E01               	movlw	1
 32964  01011C  0100               	movlb	0	; () banked
 32965  01011E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32966  010120  0E02               	movlw	2
 32967  010122  EC17  F08C         	call	_USBStallEndpoint
 32968  010126                     l18299:
 32969                           
 32970                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 32971  010126  0E00               	movlw	0
 32972  010128                     L29:
 32973  010128  0101               	movlb	1	; () banked
 32974  01012A  6FF9               	movwf	_MSDReadState& (0+255),b
 32975                           
 32976                           ; BSR set to: 1
 32977                           ;usb_device_msd.c: 1159: }
 32978                           
 32979                           ;usb_device_msd.c: 1158: break;
 32980  01012C  D012               	goto	l688
 32981  01012E                     l685:
 32982                           
 32983                           ; BSR set to: 1
 32984  01012E  0101               	movlb	1	; () banked
 32985  010130  51F9               	movf	_MSDReadState& (0+255),w,b
 32986                           
 32987                           ; Switch size 1, requested type "space"
 32988                           ; Number of cases is 5, Range of values is 0 to 4
 32989                           ; switch strategies available:
 32990                           ; Name         Instructions Cycles
 32991                           ; simple_byte           16     9 (average)
 32992                           ;	Chosen strategy is simple_byte
 32993  010132  0A00               	xorlw	0	; case 0
 32994  010134  B4D8               	btfsc	status,2,c
 32995  010136  D71E               	goto	l686
 32996  010138  0A01               	xorlw	1	; case 1
 32997  01013A  B4D8               	btfsc	status,2,c
 32998  01013C  D746               	goto	l689
 32999  01013E  0A03               	xorlw	3	; case 2
 33000  010140  B4D8               	btfsc	status,2,c
 33001  010142  D74F               	goto	l691
 33002  010144  0A01               	xorlw	1	; case 3
 33003  010146  B4D8               	btfsc	status,2,c
 33004  010148  D7A8               	goto	l696
 33005  01014A  0A07               	xorlw	7	; case 4
 33006  01014C  B4D8               	btfsc	status,2,c
 33007  01014E  D7B1               	goto	l698
 33008  010150  D7E1               	goto	l700
 33009  010152                     l688:
 33010                           
 33011                           ;usb_device_msd.c: 1161: return MSDReadState;
 33012                           
 33013                           ; BSR set to: 1
 33014  010152  0101               	movlb	1	; () banked
 33015  010154  51F9               	movf	_MSDReadState& (0+255),w,b
 33016  010156  0012               	return	
 33017  010158                     __end_of_MSDReadHandler:
 33018                           	opt stack 0
 33019                           tosu	equ	0xFFF
 33020                           tosh	equ	0xFFE
 33021                           tosl	equ	0xFFD
 33022                           pclath	equ	0xFFA
 33023                           tblptru	equ	0xFF8
 33024                           tblptrh	equ	0xFF7
 33025                           tblptrl	equ	0xFF6
 33026                           tablat	equ	0xFF5
 33027                           prodh	equ	0xFF4
 33028                           prodl	equ	0xFF3
 33029                           intcon	equ	0xFF2
 33030                           intcon2	equ	0xFF1
 33031                           intcon3	equ	0xFF0
 33032                           postinc0	equ	0xFEE
 33033                           wreg	equ	0xFE8
 33034                           indf1	equ	0xFE7
 33035                           postinc1	equ	0xFE6
 33036                           postdec1	equ	0xFE5
 33037                           plusw1	equ	0xFE3
 33038                           fsr1h	equ	0xFE2
 33039                           fsr1l	equ	0xFE1
 33040                           indf2	equ	0xFDF
 33041                           postinc2	equ	0xFDE
 33042                           postdec2	equ	0xFDD
 33043                           plusw2	equ	0xFDB
 33044                           fsr2h	equ	0xFDA
 33045                           fsr2l	equ	0xFD9
 33046                           status	equ	0xFD8
 33047                           
 33048 ;; *************** function _MSDCheckForErrorCases *****************
 33049 ;; Defined at:
 33050 ;;		line 1434 in file "usb_device_msd.c"
 33051 ;; Parameters:    Size  Location     Type
 33052 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 33053 ;; Auto vars:     Size  Location     Type
 33054 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 33055 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 33056 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 33057 ;; Return value:  Size  Location     Type
 33058 ;;                  1    wreg      unsigned char 
 33059 ;; Registers used:
 33060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33061 ;; Tracked objects:
 33062 ;;		On entry : 0/0
 33063 ;;		On exit  : 0/0
 33064 ;;		Unchanged: 0/0
 33065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33067 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33069 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33070 ;;Total ram usage:        7 bytes
 33071 ;; Hardware stack levels used:    1
 33072 ;; Hardware stack levels required when called:   12
 33073 ;; This function calls:
 33074 ;;		_MSDErrorHandler
 33075 ;; This function is called by:
 33076 ;;		_MSDProcessCommandMediaPresent
 33077 ;;		_MSDReadHandler
 33078 ;;		_MSDWriteHandler
 33079 ;; This function uses a non-reentrant model
 33080 ;;
 33081                           
 33082                           	psect	text148
 33083  011E48                     __ptext148:
 33084                           	opt stack 0
 33085  011E48                     _MSDCheckForErrorCases:
 33086                           	opt stack 13
 33087                           
 33088                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 33089                           
 33090                           ; BSR set to: 1
 33091                           ;incstack = 0
 33092  011E48  0100               	movlb	0	; () banked
 33093  011E4A  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33094  011E4C  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33095  011E4E  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33096  011E50  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33097  011E52  A4D8               	btfss	status,2,c
 33098  011E54  D002               	goto	l730
 33099                           
 33100                           ; BSR set to: 0
 33101                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 33102  011E56  0E01               	movlw	1
 33103  011E58  D001               	goto	L30
 33104  011E5A                     l730:
 33105                           
 33106                           ; BSR set to: 0
 33107                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 33108                           
 33109                           ; BSR set to: 0
 33110  011E5A  0E00               	movlw	0
 33111  011E5C                     L30:
 33112  011E5C  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 33113                           
 33114                           ; BSR set to: 0
 33115                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 33116                           
 33117                           ; BSR set to: 0
 33118  011E5E  05E6               	decf	_MSDHostNoData& (0+255),w,b
 33119  011E60  A4D8               	btfss	status,2,c
 33120  011E62  D005               	goto	l732
 33121                           
 33122                           ; BSR set to: 0
 33123  011E64  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33124  011E66  A4D8               	btfss	status,2,c
 33125  011E68  D002               	goto	l732
 33126                           
 33127                           ; BSR set to: 0
 33128                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 33129  011E6A  0E00               	movlw	0
 33130                           
 33131                           ; BSR set to: 0
 33132  011E6C  0012               	return	
 33133  011E6E                     l732:
 33134                           
 33135                           ; BSR set to: 0
 33136                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 33137                           
 33138                           ; BSR set to: 0
 33139  011E6E  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33140  011E70  0102               	movlb	2	; () banked
 33141  011E72  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 33142  011E74  E120               	bnz	l18097
 33143  011E76  0100               	movlb	0	; () banked
 33144  011E78  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33145  011E7A  0102               	movlb	2	; () banked
 33146  011E7C  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 33147  011E7E  E11B               	bnz	l18097
 33148  011E80  0100               	movlb	0	; () banked
 33149  011E82  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33150  011E84  0102               	movlb	2	; () banked
 33151  011E86  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 33152  011E88  E116               	bnz	l18097
 33153  011E8A  0100               	movlb	0	; () banked
 33154  011E8C  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33155  011E8E  0102               	movlb	2	; () banked
 33156  011E90  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 33157  011E92  A4D8               	btfss	status,2,c
 33158  011E94  D010               	goto	l738
 33159                           
 33160                           ; BSR set to: 2
 33161                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 33162  011E96  0100               	movlb	0	; () banked
 33163  011E98  05E8               	decf	_MSD_State& (0+255),w,b
 33164  011E9A  A4D8               	btfss	status,2,c
 33165  011E9C  D006               	goto	l735
 33166                           
 33167                           ; BSR set to: 0
 33168                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 33169  011E9E  0E2A               	movlw	42
 33170  011EA0  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 33171  011EA2  B4D8               	btfsc	status,2,c
 33172  011EA4  D008               	goto	l738
 33173                           
 33174                           ; BSR set to: 0
 33175                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 33176  011EA6  0E00               	movlw	0
 33177                           
 33178                           ; BSR set to: 0
 33179  011EA8  0012               	return	
 33180  011EAA                     l735:
 33181                           
 33182                           ; BSR set to: 0
 33183                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 33184                           
 33185                           ; BSR set to: 0
 33186  011EAA  0E2A               	movlw	42
 33187  011EAC  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 33188  011EAE  A4D8               	btfss	status,2,c
 33189  011EB0  D002               	goto	l738
 33190                           
 33191                           ; BSR set to: 0
 33192                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 33193  011EB2  0E00               	movlw	0
 33194                           
 33195                           ; BSR set to: 0
 33196  011EB4  0012               	return	
 33197  011EB6                     l738:
 33198  011EB6                     l18097:
 33199                           
 33200                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 33201  011EB6  0102               	movlb	2	; () banked
 33202  011EB8  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33203  011EBA  0100               	movlb	0	; () banked
 33204  011EBC  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33205  011EBE  0102               	movlb	2	; () banked
 33206  011EC0  514A               	movf	(_gblCBW+9)& (0+255),w,b
 33207  011EC2  0100               	movlb	0	; () banked
 33208  011EC4  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33209  011EC6  0102               	movlb	2	; () banked
 33210  011EC8  514B               	movf	(_gblCBW+10)& (0+255),w,b
 33211  011ECA  0100               	movlb	0	; () banked
 33212  011ECC  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33213  011ECE  0102               	movlb	2	; () banked
 33214  011ED0  514C               	movf	(_gblCBW+11)& (0+255),w,b
 33215  011ED2  0100               	movlb	0	; () banked
 33216  011ED4  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33217  011ED6  B0D8               	btfsc	status,0,c
 33218  011ED8  D002               	goto	l739
 33219                           
 33220                           ; BSR set to: 0
 33221                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 33222  011EDA  0E01               	movlw	1
 33223  011EDC  D001               	goto	L31
 33224  011EDE                     l739:
 33225                           
 33226                           ; BSR set to: 0
 33227                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 33228                           
 33229                           ; BSR set to: 0
 33230  011EDE  0E00               	movlw	0
 33231  011EE0                     L31:
 33232  011EE0  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 33233                           
 33234                           ; BSR set to: 0
 33235                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 33236                           
 33237                           ; BSR set to: 0
 33238  011EE2  0E02               	movlw	2
 33239  011EE4  19E8               	xorwf	_MSD_State& (0+255),w,b
 33240  011EE6  A4D8               	btfss	status,2,c
 33241  011EE8  D014               	goto	l741
 33242                           
 33243                           ; BSR set to: 0
 33244                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 33245  011EEA  0E2A               	movlw	42
 33246  011EEC  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 33247  011EEE  B4D8               	btfsc	status,2,c
 33248  011EF0  D005               	goto	l742
 33249                           
 33250                           ; BSR set to: 0
 33251  011EF2  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33252  011EF4  A4D8               	btfss	status,2,c
 33253  011EF6  D002               	goto	l742
 33254  011EF8                     u16700:
 33255                           
 33256                           ; BSR set to: 0
 33257                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 33258  011EF8  0E05               	movlw	5
 33259  011EFA  D01D               	goto	L34
 33260  011EFC                     l742:
 33261                           
 33262                           ; BSR set to: 0
 33263                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 33264                           
 33265                           ; BSR set to: 0
 33266  011EFC  05E6               	decf	_MSDHostNoData& (0+255),w,b
 33267  011EFE  B4D8               	btfsc	status,2,c
 33268  011F00  D00F               	goto	u16750
 33269                           
 33270                           ; BSR set to: 0
 33271                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 33272                           
 33273                           ; BSR set to: 0
 33274                           
 33275                           ; BSR set to: 0
 33276                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 33277  011F02  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33278  011F04  B4D8               	btfsc	status,2,c
 33279  011F06  D003               	goto	u16730
 33280                           
 33281                           ; BSR set to: 0
 33282                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 33283                           
 33284                           ; BSR set to: 0
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 33288  011F08  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33289  011F0A  A4D8               	btfss	status,2,c
 33290  011F0C  D7F5               	goto	u16700
 33291  011F0E                     u16730:
 33292                           
 33293                           ; BSR set to: 0
 33294                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 33295  011F0E  0E04               	movlw	4
 33296  011F10  D012               	goto	L34
 33297  011F12                     l741:
 33298                           
 33299                           ; BSR set to: 0
 33300                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 33301                           
 33302                           ; BSR set to: 0
 33303  011F12  0E2A               	movlw	42
 33304  011F14  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 33305  011F16  B4D8               	btfsc	status,2,c
 33306  011F18  D00D               	goto	l757
 33307                           
 33308                           ; BSR set to: 0
 33309                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 33310                           
 33311                           ; BSR set to: 0
 33312                           
 33313                           ; BSR set to: 0
 33314                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 33315  011F1A  05E6               	decf	_MSDHostNoData& (0+255),w,b
 33316  011F1C  A4D8               	btfss	status,2,c
 33317  011F1E  D002               	goto	l753
 33318  011F20                     u16750:
 33319                           
 33320                           ; BSR set to: 0
 33321                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 33322  011F20  0E01               	movlw	1
 33323  011F22  D009               	goto	L34
 33324  011F24                     l753:
 33325                           
 33326                           ; BSR set to: 0
 33327                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 33328                           
 33329                           ; BSR set to: 0
 33330  011F24  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33331  011F26  B4D8               	btfsc	status,2,c
 33332  011F28  D003               	goto	u16770
 33333                           
 33334                           ; BSR set to: 0
 33335                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 33336                           
 33337                           ; BSR set to: 0
 33338                           
 33339                           ; BSR set to: 0
 33340                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 33341  011F2A  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33342  011F2C  A4D8               	btfss	status,2,c
 33343  011F2E  D002               	goto	l757
 33344  011F30                     u16770:
 33345                           
 33346                           ; BSR set to: 0
 33347                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 33348  011F30  0E02               	movlw	2
 33349  011F32  D001               	goto	L34
 33350  011F34                     l757:
 33351                           
 33352                           ; BSR set to: 0
 33353                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 33354                           
 33355                           ; BSR set to: 0
 33356  011F34  0E03               	movlw	3
 33357  011F36                     L34:
 33358  011F36  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 33359                           
 33360                           ; BSR set to: 0
 33361                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 33362                           
 33363                           ; BSR set to: 0
 33364                           
 33365                           ; BSR set to: 0
 33366                           
 33367                           ; BSR set to: 0
 33368                           
 33369                           ; BSR set to: 0
 33370                           
 33371                           ; BSR set to: 0
 33372  011F38  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 33373  011F3A  EC7A  F08A         	call	_MSDErrorHandler
 33374                           
 33375                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 33376  011F3E  0100               	movlb	0	; () banked
 33377  011F40  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 33378  011F42  0012               	return	
 33379  011F44                     __end_of_MSDCheckForErrorCases:
 33380                           	opt stack 0
 33381                           tosu	equ	0xFFF
 33382                           tosh	equ	0xFFE
 33383                           tosl	equ	0xFFD
 33384                           pclath	equ	0xFFA
 33385                           tblptru	equ	0xFF8
 33386                           tblptrh	equ	0xFF7
 33387                           tblptrl	equ	0xFF6
 33388                           tablat	equ	0xFF5
 33389                           prodh	equ	0xFF4
 33390                           prodl	equ	0xFF3
 33391                           intcon	equ	0xFF2
 33392                           intcon2	equ	0xFF1
 33393                           intcon3	equ	0xFF0
 33394                           postinc0	equ	0xFEE
 33395                           wreg	equ	0xFE8
 33396                           indf1	equ	0xFE7
 33397                           postinc1	equ	0xFE6
 33398                           postdec1	equ	0xFE5
 33399                           plusw1	equ	0xFE3
 33400                           fsr1h	equ	0xFE2
 33401                           fsr1l	equ	0xFE1
 33402                           indf2	equ	0xFDF
 33403                           postinc2	equ	0xFDE
 33404                           postdec2	equ	0xFDD
 33405                           plusw2	equ	0xFDB
 33406                           fsr2h	equ	0xFDA
 33407                           fsr2l	equ	0xFD9
 33408                           status	equ	0xFD8
 33409                           
 33410 ;; *************** function _MSDErrorHandler *****************
 33411 ;; Defined at:
 33412 ;;		line 1577 in file "usb_device_msd.c"
 33413 ;; Parameters:    Size  Location     Type
 33414 ;;  ErrorCase       1    wreg     unsigned char 
 33415 ;; Auto vars:     Size  Location     Type
 33416 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 33417 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 33418 ;; Return value:  Size  Location     Type
 33419 ;;                  1    wreg      void 
 33420 ;; Registers used:
 33421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33422 ;; Tracked objects:
 33423 ;;		On entry : 0/0
 33424 ;;		On exit  : 0/0
 33425 ;;		Unchanged: 0/0
 33426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33431 ;;Total ram usage:        2 bytes
 33432 ;; Hardware stack levels used:    1
 33433 ;; Hardware stack levels required when called:   11
 33434 ;; This function calls:
 33435 ;;		_ResetSenseData
 33436 ;;		_USBStallEndpoint
 33437 ;; This function is called by:
 33438 ;;		_MSDProcessCommandMediaAbsent
 33439 ;;		_MSDProcessCommandMediaPresent
 33440 ;;		_MSDCheckForErrorCases
 33441 ;; This function uses a non-reentrant model
 33442 ;;
 33443                           
 33444                           	psect	text149
 33445  0114F4                     __ptext149:
 33446                           	opt stack 0
 33447  0114F4                     _MSDErrorHandler:
 33448                           	opt stack 13
 33449                           
 33450                           ; BSR set to: 0
 33451                           ;incstack = 0
 33452                           ;MSDErrorHandler@ErrorCase stored from wreg
 33453  0114F4  0100               	movlb	0	; () banked
 33454  0114F6  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 33455                           
 33456                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 33457  0114F8  0100               	movlb	0	; () banked
 33458  0114FA  51DC               	movf	_USBMSDInHandle& (0+255),w,b
 33459  0114FC  11DD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33460  0114FE  B4D8               	btfsc	status,2,c
 33461  011500  D006               	goto	u16510
 33462                           
 33463                           ; BSR set to: 0
 33464  011502  C0DC  FFD9         	movff	_USBMSDInHandle,fsr2l
 33465  011506  C0DD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33466  01150A  BEDF               	btfsc	indf2,7,c
 33467  01150C  0012               	return	
 33468  01150E                     u16510:
 33469                           
 33470                           ; BSR set to: 0
 33471                           
 33472                           ; BSR set to: 0
 33473  01150E  51DE               	movf	_USBMSDOutHandle& (0+255),w,b
 33474  011510  11DF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33475  011512  B4D8               	btfsc	status,2,c
 33476  011514  D006               	goto	l761
 33477                           
 33478                           ; BSR set to: 0
 33479  011516  C0DE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33480  01151A  C0DF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33481  01151E  BEDF               	btfsc	indf2,7,c
 33482  011520  0012               	return	
 33483  011522                     l761:
 33484                           
 33485                           ; BSR set to: 0
 33486                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 33487  011522  C0E8  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 33488                           
 33489                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 33490  011526  69E7               	setf	_MSDCommandState& (0+255),b
 33491                           
 33492                           ; BSR set to: 0
 33493                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 33494  011528  0E00               	movlw	0
 33495  01152A  0101               	movlb	1	; () banked
 33496  01152C  6FF9               	movwf	_MSDReadState& (0+255),b
 33497                           
 33498                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 33499  01152E  0E00               	movlw	0
 33500  011530  6E1F               	movwf	_MSDWriteState,c
 33501                           
 33502                           ; BSR set to: 1
 33503                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 33504  011532  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 33505  011536  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 33506  01153A  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 33507  01153E  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 33508                           
 33509                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 33510  011542  0E01               	movlw	1
 33511  011544  010D               	movlb	13	; () banked
 33512  011546  6F8C               	movwf	140,b	;volatile
 33513                           
 33514                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 33515  011548  0E03               	movlw	3
 33516  01154A  0100               	movlb	0	; () banked
 33517  01154C  6FE8               	movwf	_MSD_State& (0+255),b
 33518                           
 33519                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 33520  01154E  D04B               	goto	l767
 33521  011550                     
 33522                           ; BSR set to: 0
 33523                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 33524                           
 33525                           ; BSR set to: 0
 33526  011550  0E02               	movlw	2
 33527  011552  010D               	movlb	13	; () banked
 33528  011554  6F8C               	movwf	140,b	;volatile
 33529                           
 33530                           ;usb_device_msd.c: 1607: break;
 33531  011556  0012               	return	
 33532  011558                     
 33533                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 33534                           
 33535                           ; BSR set to: 13
 33536  011558  0E01               	movlw	1
 33537  01155A  0100               	movlb	0	; () banked
 33538  01155C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33539  01155E  0E02               	movlw	2
 33540  011560  EC17  F08C         	call	_USBStallEndpoint
 33541                           
 33542                           ;usb_device_msd.c: 1611: break;
 33543  011564  0012               	return	
 33544  011566                     
 33545                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 33546  011566  0E02               	movlw	2
 33547  011568  010D               	movlb	13	; () banked
 33548  01156A  6F8C               	movwf	140,b	;volatile
 33549                           
 33550                           ; BSR set to: 13
 33551                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 33552  01156C  0E01               	movlw	1
 33553  01156E  0100               	movlb	0	; () banked
 33554  011570  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33555  011572  0E02               	movlw	2
 33556  011574  EC17  F08C         	call	_USBStallEndpoint
 33557                           
 33558                           ;usb_device_msd.c: 1616: break;
 33559  011578  0012               	return	
 33560  01157A                     
 33561                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 33562  01157A  0E00               	movlw	0
 33563  01157C  0100               	movlb	0	; () banked
 33564  01157E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33565  011580  0E02               	movlw	2
 33566  011582  EC17  F08C         	call	_USBStallEndpoint
 33567                           
 33568                           ;usb_device_msd.c: 1620: break;
 33569  011586  0012               	return	
 33570  011588                     
 33571                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 33572  011588  0E02               	movlw	2
 33573  01158A  010D               	movlb	13	; () banked
 33574  01158C  6F8C               	movwf	140,b	;volatile
 33575                           
 33576                           ; BSR set to: 13
 33577                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 33578  01158E  0E00               	movlw	0
 33579  011590  0100               	movlb	0	; () banked
 33580  011592  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33581  011594  0E02               	movlw	2
 33582  011596  EC17  F08C         	call	_USBStallEndpoint
 33583                           
 33584                           ;usb_device_msd.c: 1625: break;
 33585  01159A  0012               	return	
 33586  01159C                     
 33587                           ;usb_device_msd.c: 1628: ResetSenseData();
 33588  01159C  ECF8  F0A2         	call	_ResetSenseData	;wreg free
 33589                           
 33590                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 33591  0115A0  0102               	movlb	2	; () banked
 33592  0115A2  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33593  0115A4  0BF0               	andlw	-16
 33594  0115A6  0905               	iorlw	5
 33595  0115A8  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33596                           
 33597                           ; BSR set to: 2
 33598                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 33599  0115AA  0E20               	movlw	32
 33600  0115AC  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33601                           
 33602                           ; BSR set to: 2
 33603                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 33604  0115AE  0E00               	movlw	0
 33605  0115B0  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33606                           
 33607                           ; BSR set to: 2
 33608                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 33609  0115B2  0E02               	movlw	2
 33610  0115B4  0100               	movlb	0	; () banked
 33611  0115B6  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 33612  0115B8  A4D8               	btfss	status,2,c
 33613  0115BA  D00E               	goto	l775
 33614                           
 33615                           ; BSR set to: 0
 33616  0115BC  0102               	movlb	2	; () banked
 33617  0115BE  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33618  0115C0  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 33619  0115C2  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 33620  0115C4  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 33621  0115C6  B4D8               	btfsc	status,2,c
 33622  0115C8  D007               	goto	l775
 33623                           
 33624                           ; BSR set to: 2
 33625                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 33626  0115CA  0E00               	movlw	0
 33627  0115CC  0100               	movlb	0	; () banked
 33628  0115CE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33629  0115D0  0E02               	movlw	2
 33630  0115D2  EC17  F08C         	call	_USBStallEndpoint
 33631                           
 33632                           ;usb_device_msd.c: 1636: }
 33633  0115D6  0012               	return	
 33634  0115D8                     l775:
 33635                           
 33636                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 33637  0115D8  0E01               	movlw	1
 33638  0115DA  0100               	movlb	0	; () banked
 33639  0115DC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33640  0115DE  0E02               	movlw	2
 33641  0115E0  EC17  F08C         	call	_USBStallEndpoint
 33642                           
 33643                           ;usb_device_msd.c: 1644: }
 33644                           
 33645                           ;usb_device_msd.c: 1643: break;
 33646                           
 33647                           ;usb_device_msd.c: 1642: default:
 33648                           
 33649                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 33650  0115E4  0012               	return	
 33651  0115E6                     l767:
 33652  0115E6  0100               	movlb	0	; () banked
 33653  0115E8  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 33654                           
 33655                           ; Switch size 1, requested type "space"
 33656                           ; Number of cases is 6, Range of values is 1 to 127
 33657                           ; switch strategies available:
 33658                           ; Name         Instructions Cycles
 33659                           ; simple_byte           19    10 (average)
 33660                           ;	Chosen strategy is simple_byte
 33661  0115EA  0A01               	xorlw	1	; case 1
 33662  0115EC  B4D8               	btfsc	status,2,c
 33663  0115EE  D7B0               	goto	l768
 33664  0115F0  0A03               	xorlw	3	; case 2
 33665  0115F2  B4D8               	btfsc	status,2,c
 33666  0115F4  D7B1               	goto	l770
 33667  0115F6  0A01               	xorlw	1	; case 3
 33668  0115F8  B4D8               	btfsc	status,2,c
 33669  0115FA  D7B5               	goto	l771
 33670  0115FC  0A07               	xorlw	7	; case 4
 33671  0115FE  B4D8               	btfsc	status,2,c
 33672  011600  D7BC               	goto	l772
 33673  011602  0A01               	xorlw	1	; case 5
 33674  011604  B4D8               	btfsc	status,2,c
 33675  011606  D7C0               	goto	l773
 33676  011608  0A7A               	xorlw	122	; case 127
 33677  01160A  A4D8               	btfss	status,2,c
 33678  01160C  0012               	return	
 33679  01160E  D7C6               	goto	l774
 33680  011610                     __end_of_MSDErrorHandler:
 33681                           	opt stack 0
 33682                           tosu	equ	0xFFF
 33683                           tosh	equ	0xFFE
 33684                           tosl	equ	0xFFD
 33685                           pclath	equ	0xFFA
 33686                           tblptru	equ	0xFF8
 33687                           tblptrh	equ	0xFF7
 33688                           tblptrl	equ	0xFF6
 33689                           tablat	equ	0xFF5
 33690                           prodh	equ	0xFF4
 33691                           prodl	equ	0xFF3
 33692                           intcon	equ	0xFF2
 33693                           intcon2	equ	0xFF1
 33694                           intcon3	equ	0xFF0
 33695                           postinc0	equ	0xFEE
 33696                           wreg	equ	0xFE8
 33697                           indf1	equ	0xFE7
 33698                           postinc1	equ	0xFE6
 33699                           postdec1	equ	0xFE5
 33700                           plusw1	equ	0xFE3
 33701                           fsr1h	equ	0xFE2
 33702                           fsr1l	equ	0xFE1
 33703                           indf2	equ	0xFDF
 33704                           postinc2	equ	0xFDE
 33705                           postdec2	equ	0xFDD
 33706                           plusw2	equ	0xFDB
 33707                           fsr2h	equ	0xFDA
 33708                           fsr2l	equ	0xFD9
 33709                           status	equ	0xFD8
 33710                           
 33711 ;; *************** function _USBStallEndpoint *****************
 33712 ;; Defined at:
 33713 ;;		line 1073 in file "usb_device.c"
 33714 ;; Parameters:    Size  Location     Type
 33715 ;;  ep              1    wreg     unsigned char 
 33716 ;;  dir             1    0[BANK0 ] unsigned char 
 33717 ;; Auto vars:     Size  Location     Type
 33718 ;;  ep              1    5[BANK0 ] unsigned char 
 33719 ;;  p               2    6[BANK0 ] PTR struct __BDT
 33720 ;;		 -> BDT(48), 
 33721 ;; Return value:  Size  Location     Type
 33722 ;;                  1    wreg      void 
 33723 ;; Registers used:
 33724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33725 ;; Tracked objects:
 33726 ;;		On entry : 0/0
 33727 ;;		On exit  : 0/0
 33728 ;;		Unchanged: 0/0
 33729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33730 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33731 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33732 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33733 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33734 ;;Total ram usage:        8 bytes
 33735 ;; Hardware stack levels used:    1
 33736 ;; Hardware stack levels required when called:   10
 33737 ;; This function calls:
 33738 ;;		Nothing
 33739 ;; This function is called by:
 33740 ;;		_MSDTasks
 33741 ;;		_MSDReadHandler
 33742 ;;		_MSDWriteHandler
 33743 ;;		_MSDErrorHandler
 33744 ;; This function uses a non-reentrant model
 33745 ;;
 33746                           
 33747                           	psect	text150
 33748  01182E                     __ptext150:
 33749                           	opt stack 0
 33750  01182E                     _USBStallEndpoint:
 33751                           	opt stack 18
 33752                           
 33753                           ;incstack = 0
 33754                           ;USBStallEndpoint@ep stored from wreg
 33755  01182E  0100               	movlb	0	; () banked
 33756  011830  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 33757                           
 33758                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 33759  011832  0100               	movlb	0	; () banked
 33760  011834  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 33761  011836  A4D8               	btfss	status,2,c
 33762  011838  D02B               	goto	l194
 33763                           
 33764                           ; BSR set to: 0
 33765                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 33766  01183A  EE20 F001          	lfsr	2,1
 33767  01183E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 33768  011840  26D9               	addwf	fsr2l,f,c
 33769  011842  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 33770  011844  22DA               	addwfc	fsr2h,f,c
 33771  011846  0E08               	movlw	8
 33772  011848  6EDF               	movwf	indf2,c
 33773                           
 33774                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33775  01184A  EE20 F002          	lfsr	2,2
 33776  01184E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 33777  011850  26D9               	addwf	fsr2l,f,c
 33778  011852  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 33779  011854  22DA               	addwfc	fsr2h,f,c
 33780  011856  0E30               	movlw	48
 33781  011858  6EDE               	movwf	postinc2,c
 33782  01185A  0E0D               	movlw	13
 33783  01185C  6EDD               	movwf	postdec2,c
 33784                           
 33785                           ; BSR set to: 0
 33786                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 33787  01185E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33788  011862  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33789  011866  0E0C               	movlw	12
 33790  011868  6EDF               	movwf	indf2,c
 33791                           
 33792                           ; BSR set to: 0
 33793                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33794  01186A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33795  01186E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33796  011872  0E00               	movlw	0
 33797  011874  8EDB               	bsf	plusw2,7,c
 33798                           
 33799                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 33800  011876  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 33801  01187A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33802  01187E  0E04               	movlw	4
 33803  011880  6EDF               	movwf	indf2,c
 33804                           
 33805                           ; BSR set to: 0
 33806                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33807  011882  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 33808  011886  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33809  01188A  0E00               	movlw	0
 33810  01188C  8EDB               	bsf	plusw2,7,c
 33811                           
 33812                           ;usb_device.c: 1089: }
 33813  01188E  0012               	return	
 33814  011890                     l194:
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 33818                           
 33819                           ; BSR set to: 0
 33820  011890  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 33821  011892  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 33822  011894  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 33823  011896  90D8               	bcf	status,0,c
 33824  011898  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 33825  01189A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 33826  01189C  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 33827  01189E  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 33828  0118A0  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 33829  0118A2  90D8               	bcf	status,0,c
 33830  0118A4  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33831  0118A6  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33832  0118A8  90D8               	bcf	status,0,c
 33833  0118AA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33834  0118AC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33835  0118AE  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 33836  0118B0  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 33837  0118B2  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 33838  0118B4  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 33839  0118B6  90D8               	bcf	status,0,c
 33840  0118B8  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33841  0118BA  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33842  0118BC  90D8               	bcf	status,0,c
 33843  0118BE  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33844  0118C0  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33845  0118C2  0E00               	movlw	0
 33846  0118C4  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 33847  0118C6  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 33848  0118C8  0E0D               	movlw	13
 33849  0118CA  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 33850  0118CC  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 33851                           
 33852                           ; BSR set to: 0
 33853                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 33854  0118CE  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33855  0118D2  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33856  0118D6  0E00               	movlw	0
 33857  0118D8  84DB               	bsf	plusw2,2,c
 33858                           
 33859                           ; BSR set to: 0
 33860                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 33861  0118DA  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33862  0118DE  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33863  0118E2  0E00               	movlw	0
 33864  0118E4  8EDB               	bsf	plusw2,7,c
 33865                           
 33866                           ; BSR set to: 0
 33867                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 33868  0118E6  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 33869  0118E8  0D04               	mullw	4
 33870  0118EA  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 33871  0118EE  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 33872  0118F2  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 33873  0118F4  0D02               	mullw	2
 33874  0118F6  50F3               	movf	prodl,w,c
 33875  0118F8  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 33876  0118FA  50F4               	movf	prodh,w,c
 33877  0118FC  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 33878  0118FE  90D8               	bcf	status,0,c
 33879  011900  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 33880  011902  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 33881  011904  90D8               	bcf	status,0,c
 33882  011906  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 33883  011908  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 33884  01190A  0E04               	movlw	4
 33885  01190C  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 33886  01190E  0E00               	movlw	0
 33887  011910  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 33888  011912  0E00               	movlw	0
 33889  011914  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 33890  011916  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 33891  011918  0E0D               	movlw	13
 33892  01191A  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 33893  01191C  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 33894                           
 33895                           ; BSR set to: 0
 33896                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 33897  01191E  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33898  011922  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33899  011926  0E00               	movlw	0
 33900  011928  84DB               	bsf	plusw2,2,c
 33901                           
 33902                           ; BSR set to: 0
 33903                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 33904  01192A  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33905  01192E  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33906  011932  0E00               	movlw	0
 33907  011934  8EDB               	bsf	plusw2,7,c
 33908  011936  0012               	return	
 33909  011938                     __end_of_USBStallEndpoint:
 33910                           	opt stack 0
 33911                           tosu	equ	0xFFF
 33912                           tosh	equ	0xFFE
 33913                           tosl	equ	0xFFD
 33914                           pclath	equ	0xFFA
 33915                           tblptru	equ	0xFF8
 33916                           tblptrh	equ	0xFF7
 33917                           tblptrl	equ	0xFF6
 33918                           tablat	equ	0xFF5
 33919                           prodh	equ	0xFF4
 33920                           prodl	equ	0xFF3
 33921                           intcon	equ	0xFF2
 33922                           intcon2	equ	0xFF1
 33923                           intcon3	equ	0xFF0
 33924                           postinc0	equ	0xFEE
 33925                           wreg	equ	0xFE8
 33926                           indf1	equ	0xFE7
 33927                           postinc1	equ	0xFE6
 33928                           postdec1	equ	0xFE5
 33929                           plusw1	equ	0xFE3
 33930                           fsr1h	equ	0xFE2
 33931                           fsr1l	equ	0xFE1
 33932                           indf2	equ	0xFDF
 33933                           postinc2	equ	0xFDE
 33934                           postdec2	equ	0xFDD
 33935                           plusw2	equ	0xFDB
 33936                           fsr2h	equ	0xFDA
 33937                           fsr2l	equ	0xFD9
 33938                           status	equ	0xFD8
 33939                           
 33940 ;; *************** function _ResetSenseData *****************
 33941 ;; Defined at:
 33942 ;;		line 1373 in file "usb_device_msd.c"
 33943 ;; Parameters:    Size  Location     Type
 33944 ;;		None
 33945 ;; Auto vars:     Size  Location     Type
 33946 ;;		None
 33947 ;; Return value:  Size  Location     Type
 33948 ;;                  1    wreg      void 
 33949 ;; Registers used:
 33950 ;;		wreg, status,2
 33951 ;; Tracked objects:
 33952 ;;		On entry : 0/0
 33953 ;;		On exit  : 0/0
 33954 ;;		Unchanged: 0/0
 33955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33960 ;;Total ram usage:        0 bytes
 33961 ;; Hardware stack levels used:    1
 33962 ;; Hardware stack levels required when called:   10
 33963 ;; This function calls:
 33964 ;;		Nothing
 33965 ;; This function is called by:
 33966 ;;		_MSDProcessCommandMediaAbsent
 33967 ;;		_MSDProcessCommandMediaPresent
 33968 ;;		_MSDErrorHandler
 33969 ;; This function uses a non-reentrant model
 33970 ;;
 33971                           
 33972                           	psect	text151
 33973  0145F0                     __ptext151:
 33974                           	opt stack 0
 33975  0145F0                     _ResetSenseData:
 33976                           	opt stack 16
 33977                           
 33978                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 33979                           
 33980                           ; BSR set to: 0
 33981                           ;incstack = 0
 33982  0145F0  0102               	movlb	2	; () banked
 33983  0145F2  9160               	bcf	_gblSenseData& (0+255),0,b
 33984  0145F4  9360               	bcf	_gblSenseData& (0+255),1,b
 33985  0145F6  9560               	bcf	_gblSenseData& (0+255),2,b
 33986  0145F8  9760               	bcf	_gblSenseData& (0+255),3,b
 33987  0145FA  8960               	bsf	_gblSenseData& (0+255),4,b
 33988  0145FC  8B60               	bsf	_gblSenseData& (0+255),5,b
 33989  0145FE  8D60               	bsf	_gblSenseData& (0+255),6,b
 33990                           
 33991                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 33992  014600  9F60               	bcf	_gblSenseData& (0+255),7,b
 33993                           
 33994                           ; BSR set to: 2
 33995                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 33996  014602  0E00               	movlw	0
 33997  014604  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 33998                           
 33999                           ; BSR set to: 2
 34000                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 34001  014606  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 34002  014608  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 34003  01460A  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 34004  01460C  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 34005                           
 34006                           ; BSR set to: 2
 34007                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 34008  01460E  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 34009                           
 34010                           ; BSR set to: 2
 34011                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 34012  014610  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 34013                           
 34014                           ; BSR set to: 2
 34015                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 34016  014612  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 34017                           
 34018                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 34019  014614  0E00               	movlw	0
 34020  014616  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 34021                           
 34022                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 34023  014618  0E00               	movlw	0
 34024  01461A  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 34025                           
 34026                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 34027  01461C  0E00               	movlw	0
 34028  01461E  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 34029                           
 34030                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 34031  014620  0E00               	movlw	0
 34032  014622  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 34033                           
 34034                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 34035  014624  0E0A               	movlw	10
 34036  014626  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 34037                           
 34038                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 34039  014628  0E00               	movlw	0
 34040  01462A  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 34041  01462C  0E00               	movlw	0
 34042  01462E  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 34043  014630  0E00               	movlw	0
 34044  014632  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 34045  014634  0E00               	movlw	0
 34046  014636  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 34047                           
 34048                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 34049  014638  0E00               	movlw	0
 34050  01463A  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34051                           
 34052                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 34053  01463C  0E00               	movlw	0
 34054  01463E  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34055                           
 34056                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 34057  014640  0E00               	movlw	0
 34058  014642  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 34059                           
 34060                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 34061  014644  0E00               	movlw	0
 34062  014646  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 34063                           
 34064                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 34065  014648  0E00               	movlw	0
 34066  01464A  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 34067                           
 34068                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 34069  01464C  0E00               	movlw	0
 34070  01464E  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 34071                           
 34072                           ; BSR set to: 2
 34073  014650  0012               	return		;funcret
 34074  014652                     __end_of_ResetSenseData:
 34075                           	opt stack 0
 34076                           tosu	equ	0xFFF
 34077                           tosh	equ	0xFFE
 34078                           tosl	equ	0xFFD
 34079                           pclath	equ	0xFFA
 34080                           tblptru	equ	0xFF8
 34081                           tblptrh	equ	0xFF7
 34082                           tblptrl	equ	0xFF6
 34083                           tablat	equ	0xFF5
 34084                           prodh	equ	0xFF4
 34085                           prodl	equ	0xFF3
 34086                           intcon	equ	0xFF2
 34087                           intcon2	equ	0xFF1
 34088                           intcon3	equ	0xFF0
 34089                           postinc0	equ	0xFEE
 34090                           wreg	equ	0xFE8
 34091                           indf1	equ	0xFE7
 34092                           postinc1	equ	0xFE6
 34093                           postdec1	equ	0xFE5
 34094                           plusw1	equ	0xFE3
 34095                           fsr1h	equ	0xFE2
 34096                           fsr1l	equ	0xFE1
 34097                           indf2	equ	0xFDF
 34098                           postinc2	equ	0xFDE
 34099                           postdec2	equ	0xFDD
 34100                           plusw2	equ	0xFDB
 34101                           fsr2h	equ	0xFDA
 34102                           fsr2l	equ	0xFD9
 34103                           status	equ	0xFD8
 34104                           
 34105 ;; *************** function _ExternalFlash_SectorRead *****************
 34106 ;; Defined at:
 34107 ;;		line 64 in file "external_flash.c"
 34108 ;; Parameters:    Size  Location     Type
 34109 ;;  config          2   43[BANK0 ] PTR void 
 34110 ;;		 -> NULL(0), 
 34111 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 34112 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 34113 ;;		 -> msd_buffer(512), 
 34114 ;; Auto vars:     Size  Location     Type
 34115 ;;  page            2   51[BANK0 ] unsigned int 
 34116 ;; Return value:  Size  Location     Type
 34117 ;;                  1    wreg      unsigned char 
 34118 ;; Registers used:
 34119 ;;		wreg, status,2, status,0, cstack
 34120 ;; Tracked objects:
 34121 ;;		On entry : 0/0
 34122 ;;		On exit  : 0/0
 34123 ;;		Unchanged: 0/0
 34124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34125 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34128 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34129 ;;Total ram usage:       10 bytes
 34130 ;; Hardware stack levels used:    1
 34131 ;; Hardware stack levels required when called:   15
 34132 ;; This function calls:
 34133 ;;		_flash_page_read
 34134 ;; This function is called by:
 34135 ;;		_MSDReadHandler
 34136 ;; This function uses a non-reentrant model
 34137 ;;
 34138                           
 34139                           	psect	text152
 34140  0154E2                     __ptext152:
 34141                           	opt stack 0
 34142  0154E2                     _ExternalFlash_SectorRead:
 34143                           	opt stack 10
 34144                           
 34145                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 34146                           
 34147                           ; BSR set to: 2
 34148                           ;incstack = 0
 34149  0154E2  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 34150  0154E6  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 34151                           
 34152                           ;external_flash.c: 70: if(sector_addr >= 4096)
 34153  0154EA  0100               	movlb	0	; () banked
 34154  0154EC  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 34155  0154EE  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 34156  0154F0  E104               	bnz	u16800
 34157  0154F2  0E10               	movlw	16
 34158  0154F4  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 34159  0154F6  A0D8               	btfss	status,0,c
 34160  0154F8  D002               	goto	l2904
 34161  0154FA                     u16800:
 34162                           
 34163                           ; BSR set to: 0
 34164                           ;external_flash.c: 71: {;external_flash.c: 72: return 0;
 34165  0154FA  0E00               	movlw	0
 34166                           
 34167                           ; BSR set to: 0
 34168  0154FC  0012               	return	
 34169  0154FE                     l2904:
 34170                           
 34171                           ; BSR set to: 0
 34172                           ;external_flash.c: 73: };external_flash.c: 76: flash_page_read(page, buffer);
 34173                           
 34174                           ; BSR set to: 0
 34175  0154FE  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 34176  015502  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 34177  015506  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 34178  01550A  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 34179  01550E  EC2A  F0AC         	call	_flash_page_read	;wreg free
 34180                           
 34181                           ;external_flash.c: 78: return 1;
 34182  015512  0E01               	movlw	1
 34183  015514  0012               	return	
 34184  015516                     __end_of_ExternalFlash_SectorRead:
 34185                           	opt stack 0
 34186                           tosu	equ	0xFFF
 34187                           tosh	equ	0xFFE
 34188                           tosl	equ	0xFFD
 34189                           pclath	equ	0xFFA
 34190                           tblptru	equ	0xFF8
 34191                           tblptrh	equ	0xFF7
 34192                           tblptrl	equ	0xFF6
 34193                           tablat	equ	0xFF5
 34194                           prodh	equ	0xFF4
 34195                           prodl	equ	0xFF3
 34196                           intcon	equ	0xFF2
 34197                           intcon2	equ	0xFF1
 34198                           intcon3	equ	0xFF0
 34199                           postinc0	equ	0xFEE
 34200                           wreg	equ	0xFE8
 34201                           indf1	equ	0xFE7
 34202                           postinc1	equ	0xFE6
 34203                           postdec1	equ	0xFE5
 34204                           plusw1	equ	0xFE3
 34205                           fsr1h	equ	0xFE2
 34206                           fsr1l	equ	0xFE1
 34207                           indf2	equ	0xFDF
 34208                           postinc2	equ	0xFDE
 34209                           postdec2	equ	0xFDD
 34210                           plusw2	equ	0xFDB
 34211                           fsr2h	equ	0xFDA
 34212                           fsr2l	equ	0xFD9
 34213                           status	equ	0xFD8
 34214                           
 34215 ;; *************** function _flash_page_read *****************
 34216 ;; Defined at:
 34217 ;;		line 538 in file "flash.c"
 34218 ;; Parameters:    Size  Location     Type
 34219 ;;  page            2   39[BANK0 ] unsigned int 
 34220 ;;  data            2   41[BANK0 ] PTR unsigned char 
 34221 ;;		 -> msd_buffer(512), 
 34222 ;; Auto vars:     Size  Location     Type
 34223 ;;		None
 34224 ;; Return value:  Size  Location     Type
 34225 ;;                  1    wreg      void 
 34226 ;; Registers used:
 34227 ;;		wreg, status,2, status,0, cstack
 34228 ;; Tracked objects:
 34229 ;;		On entry : 0/0
 34230 ;;		On exit  : 0/0
 34231 ;;		Unchanged: 0/0
 34232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34237 ;;Total ram usage:        4 bytes
 34238 ;; Hardware stack levels used:    1
 34239 ;; Hardware stack levels required when called:   14
 34240 ;; This function calls:
 34241 ;;		_flash_partial_read
 34242 ;; This function is called by:
 34243 ;;		_ExternalFlash_SectorRead
 34244 ;; This function uses a non-reentrant model
 34245 ;;
 34246                           
 34247                           	psect	text153
 34248  015854                     __ptext153:
 34249                           	opt stack 0
 34250  015854                     _flash_page_read:
 34251                           	opt stack 10
 34252                           
 34253                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 34254                           
 34255                           ;incstack = 0
 34256  015854  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 34257  015858  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 34258  01585C  0E00               	movlw	0
 34259  01585E  0100               	movlb	0	; () banked
 34260  015860  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 34261  015862  0E00               	movlw	0
 34262  015864  6F75               	movwf	flash_partial_read@start& (0+255),b
 34263  015866  0E02               	movlw	2
 34264  015868  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 34265  01586A  0E00               	movlw	0
 34266  01586C  6F77               	movwf	flash_partial_read@length& (0+255),b
 34267  01586E  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 34268  015872  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 34269  015876  ECCF  F09F         	call	_flash_partial_read	;wreg free
 34270  01587A  0012               	return		;funcret
 34271  01587C                     __end_of_flash_page_read:
 34272                           	opt stack 0
 34273                           tosu	equ	0xFFF
 34274                           tosh	equ	0xFFE
 34275                           tosl	equ	0xFFD
 34276                           pclath	equ	0xFFA
 34277                           tblptru	equ	0xFF8
 34278                           tblptrh	equ	0xFF7
 34279                           tblptrl	equ	0xFF6
 34280                           tablat	equ	0xFF5
 34281                           prodh	equ	0xFF4
 34282                           prodl	equ	0xFF3
 34283                           intcon	equ	0xFF2
 34284                           intcon2	equ	0xFF1
 34285                           intcon3	equ	0xFF0
 34286                           postinc0	equ	0xFEE
 34287                           wreg	equ	0xFE8
 34288                           indf1	equ	0xFE7
 34289                           postinc1	equ	0xFE6
 34290                           postdec1	equ	0xFE5
 34291                           plusw1	equ	0xFE3
 34292                           fsr1h	equ	0xFE2
 34293                           fsr1l	equ	0xFE1
 34294                           indf2	equ	0xFDF
 34295                           postinc2	equ	0xFDE
 34296                           postdec2	equ	0xFDD
 34297                           plusw2	equ	0xFDB
 34298                           fsr2h	equ	0xFDA
 34299                           fsr2l	equ	0xFD9
 34300                           status	equ	0xFD8
 34301                           
 34302 ;; *************** function _flash_partial_read *****************
 34303 ;; Defined at:
 34304 ;;		line 564 in file "flash.c"
 34305 ;; Parameters:    Size  Location     Type
 34306 ;;  page            2   19[BANK0 ] unsigned int 
 34307 ;;  start           2   21[BANK0 ] unsigned int 
 34308 ;;  length          2   23[BANK0 ] unsigned int 
 34309 ;;  data            2   25[BANK0 ] PTR unsigned char 
 34310 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 34311 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 34312 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 34313 ;; Auto vars:     Size  Location     Type
 34314 ;;  command         4   31[BANK0 ] unsigned char [4]
 34315 ;;  address         4   35[BANK0 ] unsigned long 
 34316 ;; Return value:  Size  Location     Type
 34317 ;;                  1    wreg      void 
 34318 ;; Registers used:
 34319 ;;		wreg, status,2, status,0, cstack
 34320 ;; Tracked objects:
 34321 ;;		On entry : 0/0
 34322 ;;		On exit  : 0/0
 34323 ;;		Unchanged: 0/0
 34324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34325 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34326 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34327 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34328 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34329 ;;Total ram usage:       20 bytes
 34330 ;; Hardware stack levels used:    1
 34331 ;; Hardware stack levels required when called:   13
 34332 ;; This function calls:
 34333 ;;		__flash_spi_tx_rx
 34334 ;;		_flash_is_busy
 34335 ;; This function is called by:
 34336 ;;		_flash_page_read
 34337 ;;		__root_is_available
 34338 ;;		__get_empty_cluster
 34339 ;;		_fat_get_empty_clusters
 34340 ;;		__read_fat
 34341 ;;		__read_root
 34342 ;;		_fat_find_file
 34343 ;;		__get_first_cluster
 34344 ;;		__get_file_size
 34345 ;;		_fat_get_file_size
 34346 ;;		_fat_read_from_file
 34347 ;; This function uses a non-reentrant model
 34348 ;;
 34349                           
 34350                           	psect	text154
 34351  013F9E                     __ptext154:
 34352                           	opt stack 0
 34353  013F9E                     _flash_partial_read:
 34354                           	opt stack 15
 34355                           
 34356                           ;flash.c: 566: uint32_t address;;flash.c: 567: uint8_t command[4];;flash.c: 570: while(f
      +                          lash_is_busy());
 34357                           
 34358                           ;incstack = 0
 34359  013F9E  ECB1  F0AC         	call	_flash_is_busy	;wreg free
 34360  013FA2  0900               	iorlw	0
 34361  013FA4  A4D8               	btfss	status,2,c
 34362  013FA6  D7FB               	goto	_flash_partial_read
 34363                           
 34364                           ;flash.c: 573: address = page;
 34365  013FA8  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 34366  013FAC  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 34367  013FB0  0100               	movlb	0	; () banked
 34368  013FB2  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 34369  013FB4  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 34370                           
 34371                           ; BSR set to: 0
 34372                           ;flash.c: 574: address <<= 9;
 34373  013FB6  0E09               	movlw	9
 34374  013FB8                     u16435:
 34375  013FB8  90D8               	bcf	status,0,c
 34376  013FBA  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 34377  013FBC  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 34378  013FBE  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 34379  013FC0  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 34380  013FC2  2EE8               	decfsz	wreg,f,c
 34381  013FC4  D7F9               	goto	u16435
 34382                           
 34383                           ; BSR set to: 0
 34384                           ;flash.c: 575: address |= start;
 34385  013FC6  5175               	movf	flash_partial_read@start& (0+255),w,b
 34386  013FC8  6F7B               	movwf	??_flash_partial_read& (0+255),b
 34387  013FCA  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 34388  013FCC  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 34389  013FCE  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 34390  013FD0  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 34391  013FD2  517B               	movf	??_flash_partial_read& (0+255),w,b
 34392  013FD4  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 34393  013FD6  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 34394  013FD8  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 34395  013FDA  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 34396  013FDC  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 34397  013FDE  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 34398  013FE0  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 34399                           
 34400                           ; BSR set to: 0
 34401                           ;flash.c: 578: command[0] = 0x03;
 34402  013FE2  0E03               	movlw	3
 34403  013FE4  6F7F               	movwf	flash_partial_read@command& (0+255),b
 34404                           
 34405                           ; BSR set to: 0
 34406                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 34407  013FE6  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 34408                           
 34409                           ; BSR set to: 0
 34410                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 34411  013FEA  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 34412  013FEC  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 34413                           
 34414                           ; BSR set to: 0
 34415                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 34416  013FEE  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 34417                           
 34418                           ; BSR set to: 0
 34419                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 34420  013FF2  0E7F               	movlw	low flash_partial_read@command
 34421  013FF4  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 34422  013FF6  0E00               	movlw	high flash_partial_read@command
 34423  013FF8  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 34424  013FFA  0E00               	movlw	0
 34425  013FFC  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 34426  013FFE  0E04               	movlw	4
 34427  014000  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 34428  014002  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 34429  014006  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 34430  01400A  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 34431  01400E  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 34432  014012  EC65  F099         	call	__flash_spi_tx_rx	;wreg free
 34433  014016  0012               	return		;funcret
 34434  014018                     __end_of_flash_partial_read:
 34435                           	opt stack 0
 34436                           tosu	equ	0xFFF
 34437                           tosh	equ	0xFFE
 34438                           tosl	equ	0xFFD
 34439                           pclath	equ	0xFFA
 34440                           tblptru	equ	0xFF8
 34441                           tblptrh	equ	0xFF7
 34442                           tblptrl	equ	0xFF6
 34443                           tablat	equ	0xFF5
 34444                           prodh	equ	0xFF4
 34445                           prodl	equ	0xFF3
 34446                           intcon	equ	0xFF2
 34447                           intcon2	equ	0xFF1
 34448                           intcon3	equ	0xFF0
 34449                           postinc0	equ	0xFEE
 34450                           wreg	equ	0xFE8
 34451                           indf1	equ	0xFE7
 34452                           postinc1	equ	0xFE6
 34453                           postdec1	equ	0xFE5
 34454                           plusw1	equ	0xFE3
 34455                           fsr1h	equ	0xFE2
 34456                           fsr1l	equ	0xFE1
 34457                           indf2	equ	0xFDF
 34458                           postinc2	equ	0xFDE
 34459                           postdec2	equ	0xFDD
 34460                           plusw2	equ	0xFDB
 34461                           fsr2h	equ	0xFDA
 34462                           fsr2l	equ	0xFD9
 34463                           status	equ	0xFD8
 34464                           
 34465 ;; *************** function _flash_is_busy *****************
 34466 ;; Defined at:
 34467 ;;		line 475 in file "flash.c"
 34468 ;; Parameters:    Size  Location     Type
 34469 ;;		None
 34470 ;; Auto vars:     Size  Location     Type
 34471 ;;  status          2   17[BANK0 ] unsigned int 
 34472 ;; Return value:  Size  Location     Type
 34473 ;;                  1    wreg      unsigned char 
 34474 ;; Registers used:
 34475 ;;		wreg, status,2, status,0, cstack
 34476 ;; Tracked objects:
 34477 ;;		On entry : 0/0
 34478 ;;		On exit  : 0/0
 34479 ;;		Unchanged: 0/0
 34480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34482 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34485 ;;Total ram usage:        2 bytes
 34486 ;; Hardware stack levels used:    1
 34487 ;; Hardware stack levels required when called:   12
 34488 ;; This function calls:
 34489 ;;		__flash_get_status
 34490 ;;		__flash_wakeup
 34491 ;; This function is called by:
 34492 ;;		__flash_set_page_size
 34493 ;;		__flash_copy_page_to_buffer
 34494 ;;		__flash_compare_page_to_buffer
 34495 ;;		__flash_write_to_buffer
 34496 ;;		__flash_write_page_from_buffer
 34497 ;;		_flash_partial_read
 34498 ;;		_flash_partial_write
 34499 ;;		__flash_erase_page
 34500 ;;		_flash_set_power_state
 34501 ;; This function uses a non-reentrant model
 34502 ;;
 34503                           
 34504                           	psect	text155
 34505  015962                     __ptext155:
 34506                           	opt stack 0
 34507  015962                     _flash_is_busy:
 34508                           	opt stack 15
 34509                           
 34510                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 34511                           
 34512                           ;incstack = 0
 34513  015962  0100               	movlb	0	; () banked
 34514  015964  51E0               	movf	_power_state& (0+255),w,b
 34515  015966  A4D8               	btfss	status,2,c
 34516                           
 34517                           ; BSR set to: 0
 34518                           ;flash.c: 479: {;flash.c: 480: _flash_wakeup();
 34519  015968  ECAE  F0A5         	call	__flash_wakeup	;wreg free
 34520                           
 34521                           ;flash.c: 481: };flash.c: 484: uint16_t status = _flash_get_status();
 34522  01596C  EC8B  F0AA         	call	__flash_get_status	;wreg free
 34523  015970  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 34524  015974  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 34525                           
 34526                           ;flash.c: 485: if(status & 0b0000000010000000)
 34527  015978  0100               	movlb	0	; () banked
 34528  01597A  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 34529  01597C  D002               	goto	l2839
 34530                           
 34531                           ; BSR set to: 0
 34532                           ;flash.c: 486: {;flash.c: 488: return 0;
 34533  01597E  0E00               	movlw	0
 34534                           
 34535                           ; BSR set to: 0
 34536                           ;flash.c: 489: }
 34537                           
 34538                           ; BSR set to: 0
 34539  015980  0012               	return	
 34540  015982                     l2839:
 34541                           
 34542                           ; BSR set to: 0
 34543                           ;flash.c: 490: else;flash.c: 491: {;flash.c: 493: return 1;
 34544                           
 34545                           ; BSR set to: 0
 34546  015982  0E01               	movlw	1
 34547                           
 34548                           ; BSR set to: 0
 34549  015984  0012               	return	
 34550  015986                     __end_of_flash_is_busy:
 34551                           	opt stack 0
 34552                           tosu	equ	0xFFF
 34553                           tosh	equ	0xFFE
 34554                           tosl	equ	0xFFD
 34555                           pclath	equ	0xFFA
 34556                           tblptru	equ	0xFF8
 34557                           tblptrh	equ	0xFF7
 34558                           tblptrl	equ	0xFF6
 34559                           tablat	equ	0xFF5
 34560                           prodh	equ	0xFF4
 34561                           prodl	equ	0xFF3
 34562                           intcon	equ	0xFF2
 34563                           intcon2	equ	0xFF1
 34564                           intcon3	equ	0xFF0
 34565                           postinc0	equ	0xFEE
 34566                           wreg	equ	0xFE8
 34567                           indf1	equ	0xFE7
 34568                           postinc1	equ	0xFE6
 34569                           postdec1	equ	0xFE5
 34570                           plusw1	equ	0xFE3
 34571                           fsr1h	equ	0xFE2
 34572                           fsr1l	equ	0xFE1
 34573                           indf2	equ	0xFDF
 34574                           postinc2	equ	0xFDE
 34575                           postdec2	equ	0xFDD
 34576                           plusw2	equ	0xFDB
 34577                           fsr2h	equ	0xFDA
 34578                           fsr2l	equ	0xFD9
 34579                           status	equ	0xFD8
 34580                           
 34581 ;; *************** function __flash_wakeup *****************
 34582 ;; Defined at:
 34583 ;;		line 289 in file "flash.c"
 34584 ;; Parameters:    Size  Location     Type
 34585 ;;		None
 34586 ;; Auto vars:     Size  Location     Type
 34587 ;;  command         1    8[BANK0 ] unsigned char 
 34588 ;; Return value:  Size  Location     Type
 34589 ;;                  1    wreg      void 
 34590 ;; Registers used:
 34591 ;;		wreg, status,2, status,0, cstack
 34592 ;; Tracked objects:
 34593 ;;		On entry : 0/0
 34594 ;;		On exit  : 0/0
 34595 ;;		Unchanged: 0/0
 34596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34601 ;;Total ram usage:        1 bytes
 34602 ;; Hardware stack levels used:    1
 34603 ;; Hardware stack levels required when called:   11
 34604 ;; This function calls:
 34605 ;;		__flash_spi_tx
 34606 ;; This function is called by:
 34607 ;;		_flash_is_busy
 34608 ;;		_flash_set_power_state
 34609 ;; This function uses a non-reentrant model
 34610 ;;
 34611                           
 34612                           	psect	text156
 34613  014B5C                     __ptext156:
 34614                           	opt stack 0
 34615  014B5C                     __flash_wakeup:
 34616                           	opt stack 15
 34617                           
 34618                           ;flash.c: 291: uint8_t command;;flash.c: 293: switch(power_state)
 34619                           
 34620                           ; BSR set to: 0
 34621                           ;incstack = 0
 34622  014B5C  D022               	goto	l2785
 34623  014B5E                     
 34624                           ;flash.c: 296: command = 0xAB;
 34625  014B5E  0EAB               	movlw	171
 34626  014B60  0100               	movlb	0	; () banked
 34627  014B62  6F68               	movwf	__flash_wakeup@command& (0+255),b
 34628                           
 34629                           ; BSR set to: 0
 34630                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 34631  014B64  0E68               	movlw	low __flash_wakeup@command
 34632  014B66  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34633  014B68  0E00               	movlw	high __flash_wakeup@command
 34634  014B6A  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34635  014B6C  0E00               	movlw	0
 34636  014B6E  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34637  014B70  0E01               	movlw	1
 34638  014B72  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34639  014B74  EC55  F0A5         	call	__flash_spi_tx	;wreg free
 34640                           
 34641                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 34642  014B78  0E17               	movlw	23
 34643  014B7A                     u23247:
 34644  014B7A  2EE8               	decfsz	wreg,f,c
 34645  014B7C  D7FE               	bra	u23247
 34646  014B7E  F000               	nop	
 34647                           
 34648                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 34649  014B80  0E00               	movlw	0
 34650  014B82  0100               	movlb	0	; () banked
 34651  014B84  6FE0               	movwf	_power_state& (0+255),b
 34652                           
 34653                           ;flash.c: 300: break;
 34654  014B86  0012               	return	
 34655  014B88                     l2788:
 34656                           
 34657                           ; BSR set to: 0
 34658                           ;flash.c: 305: LATDbits.LD7 = 0;
 34659  014B88  9E8C               	bcf	3980,7,c	;volatile
 34660                           
 34661                           ; BSR set to: 0
 34662                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 34663  014B8A  0E0D               	movlw	13
 34664  014B8C                     u23257:
 34665  014B8C  2EE8               	decfsz	wreg,f,c
 34666  014B8E  D7FE               	bra	u23257
 34667  014B90  F000               	nop	
 34668                           
 34669                           ;flash.c: 307: LATDbits.LD7 = 1;
 34670  014B92  8E8C               	bsf	3980,7,c	;volatile
 34671                           
 34672                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 34673  014B94  0E50               	movlw	80
 34674  014B96                     u23267:
 34675  014B96  2EE8               	decfsz	wreg,f,c
 34676  014B98  D7FE               	bra	u23267
 34677                           
 34678                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 34679  014B9A  0E00               	movlw	0
 34680  014B9C  0100               	movlb	0	; () banked
 34681  014B9E  6FE0               	movwf	_power_state& (0+255),b
 34682                           
 34683                           ; BSR set to: 0
 34684                           ;flash.c: 311: }
 34685                           
 34686                           ;flash.c: 310: break;
 34687  014BA0  0012               	return	
 34688  014BA2                     l2785:
 34689                           
 34690                           ; BSR set to: 0
 34691  014BA2  0100               	movlb	0	; () banked
 34692  014BA4  51E0               	movf	_power_state& (0+255),w,b
 34693                           
 34694                           ; Switch size 1, requested type "space"
 34695                           ; Number of cases is 2, Range of values is 1 to 2
 34696                           ; switch strategies available:
 34697                           ; Name         Instructions Cycles
 34698                           ; simple_byte            7     4 (average)
 34699                           ;	Chosen strategy is simple_byte
 34700  014BA6  0A01               	xorlw	1	; case 1
 34701  014BA8  B4D8               	btfsc	status,2,c
 34702  014BAA  D7D9               	goto	l2786
 34703  014BAC  0A03               	xorlw	3	; case 2
 34704  014BAE  A4D8               	btfss	status,2,c
 34705  014BB0  0012               	return	
 34706  014BB2  D7EA               	goto	l2788
 34707  014BB4                     __end_of__flash_wakeup:
 34708                           	opt stack 0
 34709                           tosu	equ	0xFFF
 34710                           tosh	equ	0xFFE
 34711                           tosl	equ	0xFFD
 34712                           pclath	equ	0xFFA
 34713                           tblptru	equ	0xFF8
 34714                           tblptrh	equ	0xFF7
 34715                           tblptrl	equ	0xFF6
 34716                           tablat	equ	0xFF5
 34717                           prodh	equ	0xFF4
 34718                           prodl	equ	0xFF3
 34719                           intcon	equ	0xFF2
 34720                           intcon2	equ	0xFF1
 34721                           intcon3	equ	0xFF0
 34722                           postinc0	equ	0xFEE
 34723                           wreg	equ	0xFE8
 34724                           indf1	equ	0xFE7
 34725                           postinc1	equ	0xFE6
 34726                           postdec1	equ	0xFE5
 34727                           plusw1	equ	0xFE3
 34728                           fsr1h	equ	0xFE2
 34729                           fsr1l	equ	0xFE1
 34730                           indf2	equ	0xFDF
 34731                           postinc2	equ	0xFDE
 34732                           postdec2	equ	0xFDD
 34733                           plusw2	equ	0xFDB
 34734                           fsr2h	equ	0xFDA
 34735                           fsr2l	equ	0xFD9
 34736                           status	equ	0xFD8
 34737                           
 34738 ;; *************** function __flash_spi_tx *****************
 34739 ;; Defined at:
 34740 ;;		line 103 in file "flash.c"
 34741 ;; Parameters:    Size  Location     Type
 34742 ;;  data            2    0[BANK0 ] PTR unsigned char 
 34743 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 34744 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 34745 ;;  length          2    2[BANK0 ] unsigned int 
 34746 ;; Auto vars:     Size  Location     Type
 34747 ;;		None
 34748 ;; Return value:  Size  Location     Type
 34749 ;;                  1    wreg      void 
 34750 ;; Registers used:
 34751 ;;		wreg, status,2, status,0
 34752 ;; Tracked objects:
 34753 ;;		On entry : 0/0
 34754 ;;		On exit  : 0/0
 34755 ;;		Unchanged: 0/0
 34756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34760 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34761 ;;Total ram usage:        8 bytes
 34762 ;; Hardware stack levels used:    1
 34763 ;; Hardware stack levels required when called:   10
 34764 ;; This function calls:
 34765 ;;		Nothing
 34766 ;; This function is called by:
 34767 ;;		__flash_set_page_size
 34768 ;;		__flash_wakeup
 34769 ;;		__flash_copy_page_to_buffer
 34770 ;;		__flash_compare_page_to_buffer
 34771 ;;		__flash_write_page_from_buffer
 34772 ;;		__flash_erase_page
 34773 ;;		_flash_set_power_state
 34774 ;; This function uses a non-reentrant model
 34775 ;;
 34776                           
 34777                           	psect	text157
 34778  014AAA                     __ptext157:
 34779                           	opt stack 0
 34780  014AAA                     __flash_spi_tx:
 34781                           	opt stack 15
 34782                           
 34783                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 34784                           
 34785                           ; BSR set to: 0
 34786                           ;incstack = 0
 34787  014AAA  9E88               	bcf	3976,7,c	;volatile
 34788                           
 34789                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 34790  014AAC  9C88               	bcf	3976,6,c	;volatile
 34791                           
 34792                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 34793  014AAE  8A88               	bsf	3976,5,c	;volatile
 34794                           
 34795                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 34796  014AB0  9888               	bcf	3976,4,c	;volatile
 34797                           
 34798                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 34799  014AB2  9688               	bcf	3976,3,c	;volatile
 34800                           
 34801                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 34802  014AB4  8488               	bsf	3976,2,c	;volatile
 34803                           
 34804                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 34805  014AB6  9288               	bcf	3976,1,c	;volatile
 34806                           
 34807                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 34808  014AB8  9886               	bcf	3974,4,c	;volatile
 34809  014ABA  9A86               	bcf	3974,5,c	;volatile
 34810  014ABC  9C86               	bcf	3974,6,c	;volatile
 34811  014ABE  9E86               	bcf	3974,7,c	;volatile
 34812                           
 34813                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 34814  014AC0  9086               	bcf	3974,0,c	;volatile
 34815  014AC2  9286               	bcf	3974,1,c	;volatile
 34816  014AC4  9486               	bcf	3974,2,c	;volatile
 34817  014AC6  9686               	bcf	3974,3,c	;volatile
 34818                           
 34819                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34820  014AC8  0100               	movlb	0	; () banked
 34821  014ACA  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 34822  014ACC  6E6A               	movwf	3946,c	;volatile
 34823                           
 34824                           ; BSR set to: 0
 34825                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34826  014ACE  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 34827                           
 34828                           ; BSR set to: 0
 34829                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 34830  014AD2  0EFF               	movlw	255
 34831  014AD4  6F64               	movwf	??__flash_spi_tx& (0+255),b
 34832  014AD6  0EFF               	movlw	255
 34833  014AD8  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 34834  014ADA  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 34835  014ADE  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 34836  014AE2  5164               	movf	??__flash_spi_tx& (0+255),w,b
 34837  014AE4  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 34838  014AE6  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 34839  014AE8  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 34840  014AEA  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 34841  014AEE  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 34842  014AF0  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 34843  014AF2  6E66               	movwf	3942,c	;volatile
 34844                           
 34845                           ; BSR set to: 0
 34846                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 34847  014AF4  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 34848  014AF6  6E67               	movwf	3943,c	;volatile
 34849                           
 34850                           ; BSR set to: 0
 34851                           ;flash.c: 131: LATDbits.LD7 = 0;
 34852  014AF8  9E8C               	bcf	3980,7,c	;volatile
 34853                           
 34854                           ; BSR set to: 0
 34855                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 34856  014AFA  8088               	bsf	3976,0,c	;volatile
 34857  014AFC                     
 34858                           ; BSR set to: 0
 34859  014AFC  B088               	btfsc	3976,0,c	;volatile
 34860  014AFE  D7FE               	goto	l2751
 34861                           
 34862                           ;flash.c: 134: LATDbits.LD7 = 1;
 34863  014B00  8E8C               	bsf	3980,7,c	;volatile
 34864  014B02  0012               	return		;funcret
 34865  014B04                     __end_of__flash_spi_tx:
 34866                           	opt stack 0
 34867                           tosu	equ	0xFFF
 34868                           tosh	equ	0xFFE
 34869                           tosl	equ	0xFFD
 34870                           pclath	equ	0xFFA
 34871                           tblptru	equ	0xFF8
 34872                           tblptrh	equ	0xFF7
 34873                           tblptrl	equ	0xFF6
 34874                           tablat	equ	0xFF5
 34875                           prodh	equ	0xFF4
 34876                           prodl	equ	0xFF3
 34877                           intcon	equ	0xFF2
 34878                           intcon2	equ	0xFF1
 34879                           intcon3	equ	0xFF0
 34880                           postinc0	equ	0xFEE
 34881                           wreg	equ	0xFE8
 34882                           indf1	equ	0xFE7
 34883                           postinc1	equ	0xFE6
 34884                           postdec1	equ	0xFE5
 34885                           plusw1	equ	0xFE3
 34886                           fsr1h	equ	0xFE2
 34887                           fsr1l	equ	0xFE1
 34888                           indf2	equ	0xFDF
 34889                           postinc2	equ	0xFDE
 34890                           postdec2	equ	0xFDD
 34891                           plusw2	equ	0xFDB
 34892                           fsr2h	equ	0xFDA
 34893                           fsr2l	equ	0xFD9
 34894                           status	equ	0xFD8
 34895                           
 34896 ;; *************** function __flash_get_status *****************
 34897 ;; Defined at:
 34898 ;;		line 278 in file "flash.c"
 34899 ;; Parameters:    Size  Location     Type
 34900 ;;		None
 34901 ;; Auto vars:     Size  Location     Type
 34902 ;;  status          2   15[BANK0 ] unsigned int 
 34903 ;;  command         1   14[BANK0 ] unsigned char 
 34904 ;; Return value:  Size  Location     Type
 34905 ;;                  2   12[BANK0 ] unsigned int 
 34906 ;; Registers used:
 34907 ;;		wreg, status,2, status,0, cstack
 34908 ;; Tracked objects:
 34909 ;;		On entry : 0/0
 34910 ;;		On exit  : 0/0
 34911 ;;		Unchanged: 0/0
 34912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34914 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34916 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34917 ;;Total ram usage:        5 bytes
 34918 ;; Hardware stack levels used:    1
 34919 ;; Hardware stack levels required when called:   11
 34920 ;; This function calls:
 34921 ;;		__flash_spi_tx_rx
 34922 ;; This function is called by:
 34923 ;;		__flash_compare_page_to_buffer
 34924 ;;		_flash_is_busy
 34925 ;; This function uses a non-reentrant model
 34926 ;;
 34927                           
 34928                           	psect	text158
 34929  015516                     __ptext158:
 34930                           	opt stack 0
 34931  015516                     __flash_get_status:
 34932                           	opt stack 15
 34933                           
 34934                           ;flash.c: 282: uint8_t command = 0xD7;
 34935                           
 34936                           ;incstack = 0
 34937  015516  0ED7               	movlw	215
 34938  015518  0100               	movlb	0	; () banked
 34939  01551A  6F6E               	movwf	__flash_get_status@command& (0+255),b
 34940                           
 34941                           ; BSR set to: 0
 34942                           ;flash.c: 283: uint16_t status;;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &
      +                          status, 2);
 34943  01551C  0E6E               	movlw	low __flash_get_status@command
 34944  01551E  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 34945  015520  0E00               	movlw	high __flash_get_status@command
 34946  015522  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 34947  015524  0E00               	movlw	0
 34948  015526  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 34949  015528  0E01               	movlw	1
 34950  01552A  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 34951  01552C  0E6F               	movlw	low __flash_get_status@status
 34952  01552E  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 34953  015530  0E00               	movlw	high __flash_get_status@status
 34954  015532  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 34955  015534  0E00               	movlw	0
 34956  015536  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 34957  015538  0E02               	movlw	2
 34958  01553A  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 34959  01553C  EC65  F099         	call	__flash_spi_tx_rx	;wreg free
 34960                           
 34961                           ;flash.c: 285: return status;
 34962  015540  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 34963  015544  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 34964  015548  0012               	return	
 34965  01554A                     __end_of__flash_get_status:
 34966                           	opt stack 0
 34967                           tosu	equ	0xFFF
 34968                           tosh	equ	0xFFE
 34969                           tosl	equ	0xFFD
 34970                           pclath	equ	0xFFA
 34971                           tblptru	equ	0xFF8
 34972                           tblptrh	equ	0xFF7
 34973                           tblptrl	equ	0xFF6
 34974                           tablat	equ	0xFF5
 34975                           prodh	equ	0xFF4
 34976                           prodl	equ	0xFF3
 34977                           intcon	equ	0xFF2
 34978                           intcon2	equ	0xFF1
 34979                           intcon3	equ	0xFF0
 34980                           postinc0	equ	0xFEE
 34981                           wreg	equ	0xFE8
 34982                           indf1	equ	0xFE7
 34983                           postinc1	equ	0xFE6
 34984                           postdec1	equ	0xFE5
 34985                           plusw1	equ	0xFE3
 34986                           fsr1h	equ	0xFE2
 34987                           fsr1l	equ	0xFE1
 34988                           indf2	equ	0xFDF
 34989                           postinc2	equ	0xFDE
 34990                           postdec2	equ	0xFDD
 34991                           plusw2	equ	0xFDB
 34992                           fsr2h	equ	0xFDA
 34993                           fsr2l	equ	0xFD9
 34994                           status	equ	0xFD8
 34995                           
 34996 ;; *************** function __flash_spi_tx_rx *****************
 34997 ;; Defined at:
 34998 ;;		line 194 in file "flash.c"
 34999 ;; Parameters:    Size  Location     Type
 35000 ;;  command         2    0[BANK0 ] PTR unsigned char 
 35001 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 35002 ;;  command_leng    2    2[BANK0 ] unsigned int 
 35003 ;;  data            2    4[BANK0 ] PTR unsigned char 
 35004 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 35005 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 35006 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 35007 ;;		 -> msd_buffer(512), 
 35008 ;;  data_length     2    6[BANK0 ] unsigned int 
 35009 ;; Auto vars:     Size  Location     Type
 35010 ;;		None
 35011 ;; Return value:  Size  Location     Type
 35012 ;;                  1    wreg      void 
 35013 ;; Registers used:
 35014 ;;		wreg, status,2, status,0
 35015 ;; Tracked objects:
 35016 ;;		On entry : 0/0
 35017 ;;		On exit  : 0/0
 35018 ;;		Unchanged: 0/0
 35019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35020 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35022 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35023 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35024 ;;Total ram usage:       12 bytes
 35025 ;; Hardware stack levels used:    1
 35026 ;; Hardware stack levels required when called:   10
 35027 ;; This function calls:
 35028 ;;		Nothing
 35029 ;; This function is called by:
 35030 ;;		__flash_get_status
 35031 ;;		_flash_partial_read
 35032 ;; This function uses a non-reentrant model
 35033 ;;
 35034                           
 35035                           	psect	text159
 35036  0132CA                     __ptext159:
 35037                           	opt stack 0
 35038  0132CA                     __flash_spi_tx_rx:
 35039                           	opt stack 15
 35040                           
 35041                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 35042                           
 35043                           ;incstack = 0
 35044  0132CA  9E88               	bcf	3976,7,c	;volatile
 35045                           
 35046                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 35047  0132CC  9C88               	bcf	3976,6,c	;volatile
 35048                           
 35049                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 35050  0132CE  8A88               	bsf	3976,5,c	;volatile
 35051                           
 35052                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 35053  0132D0  9888               	bcf	3976,4,c	;volatile
 35054                           
 35055                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 35056  0132D2  9688               	bcf	3976,3,c	;volatile
 35057                           
 35058                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 35059  0132D4  8488               	bsf	3976,2,c	;volatile
 35060                           
 35061                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 35062  0132D6  9288               	bcf	3976,1,c	;volatile
 35063                           
 35064                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 35065  0132D8  9886               	bcf	3974,4,c	;volatile
 35066  0132DA  9A86               	bcf	3974,5,c	;volatile
 35067  0132DC  9C86               	bcf	3974,6,c	;volatile
 35068  0132DE  9E86               	bcf	3974,7,c	;volatile
 35069                           
 35070                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 35071  0132E0  9086               	bcf	3974,0,c	;volatile
 35072  0132E2  9286               	bcf	3974,1,c	;volatile
 35073  0132E4  9486               	bcf	3974,2,c	;volatile
 35074  0132E6  9686               	bcf	3974,3,c	;volatile
 35075                           
 35076                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35077  0132E8  0100               	movlb	0	; () banked
 35078  0132EA  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 35079  0132EC  6E6A               	movwf	3946,c	;volatile
 35080                           
 35081                           ; BSR set to: 0
 35082                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35083  0132EE  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 35084                           
 35085                           ; BSR set to: 0
 35086                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35087  0132F2  0EFF               	movlw	255
 35088  0132F4  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35089  0132F6  0EFF               	movlw	255
 35090  0132F8  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35091  0132FA  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 35092  0132FE  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 35093  013302  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35094  013304  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35095  013306  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35096  013308  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35097  01330A  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35098  01330E  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35099  013310  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35100  013312  6E66               	movwf	3942,c	;volatile
 35101                           
 35102                           ; BSR set to: 0
 35103                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35104  013314  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 35105  013316  6E67               	movwf	3943,c	;volatile
 35106                           
 35107                           ; BSR set to: 0
 35108                           ;flash.c: 222: LATDbits.LD7 = 0;
 35109  013318  9E8C               	bcf	3980,7,c	;volatile
 35110                           
 35111                           ; BSR set to: 0
 35112                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 35113  01331A  8088               	bsf	3976,0,c	;volatile
 35114  01331C                     
 35115                           ; BSR set to: 0
 35116  01331C  B088               	btfsc	3976,0,c	;volatile
 35117  01331E  D7FE               	goto	l2766
 35118                           
 35119                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 35120  013320  9A88               	bcf	3976,5,c	;volatile
 35121                           
 35122                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 35123  013322  8888               	bsf	3976,4,c	;volatile
 35124                           
 35125                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 35126  013324  9688               	bcf	3976,3,c	;volatile
 35127                           
 35128                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 35129  013326  9488               	bcf	3976,2,c	;volatile
 35130                           
 35131                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35132  013328  0100               	movlb	0	; () banked
 35133  01332A  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 35134  01332C  6E68               	movwf	3944,c	;volatile
 35135                           
 35136                           ; BSR set to: 0
 35137                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35138  01332E  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 35139                           
 35140                           ; BSR set to: 0
 35141                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35142  013332  0EFF               	movlw	255
 35143  013334  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35144  013336  0EFF               	movlw	255
 35145  013338  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35146  01333A  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 35147  01333E  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 35148  013342  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35149  013344  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35150  013346  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35151  013348  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35152  01334A  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35153  01334E  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35154  013350  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35155  013352  6E66               	movwf	3942,c	;volatile
 35156                           
 35157                           ; BSR set to: 0
 35158                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35159  013354  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 35160  013356  6E67               	movwf	3943,c	;volatile
 35161                           
 35162                           ; BSR set to: 0
 35163                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 35164  013358  8088               	bsf	3976,0,c	;volatile
 35165  01335A                     
 35166                           ; BSR set to: 0
 35167  01335A  B088               	btfsc	3976,0,c	;volatile
 35168  01335C  D7FE               	goto	l2769
 35169                           
 35170                           ;flash.c: 249: LATDbits.LD7 = 1;
 35171  01335E  8E8C               	bsf	3980,7,c	;volatile
 35172  013360  0012               	return		;funcret
 35173  013362                     __end_of__flash_spi_tx_rx:
 35174                           	opt stack 0
 35175                           tosu	equ	0xFFF
 35176                           tosh	equ	0xFFE
 35177                           tosl	equ	0xFFD
 35178                           pclath	equ	0xFFA
 35179                           tblptru	equ	0xFF8
 35180                           tblptrh	equ	0xFF7
 35181                           tblptrl	equ	0xFF6
 35182                           tablat	equ	0xFF5
 35183                           prodh	equ	0xFF4
 35184                           prodl	equ	0xFF3
 35185                           intcon	equ	0xFF2
 35186                           intcon2	equ	0xFF1
 35187                           intcon3	equ	0xFF0
 35188                           postinc0	equ	0xFEE
 35189                           wreg	equ	0xFE8
 35190                           indf1	equ	0xFE7
 35191                           postinc1	equ	0xFE6
 35192                           postdec1	equ	0xFE5
 35193                           plusw1	equ	0xFE3
 35194                           fsr1h	equ	0xFE2
 35195                           fsr1l	equ	0xFE1
 35196                           indf2	equ	0xFDF
 35197                           postinc2	equ	0xFDE
 35198                           postdec2	equ	0xFDD
 35199                           plusw2	equ	0xFDB
 35200                           fsr2h	equ	0xFDA
 35201                           fsr2l	equ	0xFD9
 35202                           status	equ	0xFD8
 35203                           
 35204 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 35205 ;; Defined at:
 35206 ;;		line 993 in file "usb_device_msd.c"
 35207 ;; Parameters:    Size  Location     Type
 35208 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 35209 ;; Auto vars:     Size  Location     Type
 35210 ;;		None
 35211 ;; Return value:  Size  Location     Type
 35212 ;;                  1    wreg      void 
 35213 ;; Registers used:
 35214 ;;		wreg, status,2, status,0
 35215 ;; Tracked objects:
 35216 ;;		On entry : 0/0
 35217 ;;		On exit  : 0/0
 35218 ;;		Unchanged: 0/0
 35219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35223 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35224 ;;Total ram usage:        6 bytes
 35225 ;; Hardware stack levels used:    1
 35226 ;; Hardware stack levels required when called:   10
 35227 ;; This function calls:
 35228 ;;		Nothing
 35229 ;; This function is called by:
 35230 ;;		_MSDProcessCommandMediaPresent
 35231 ;; This function uses a non-reentrant model
 35232 ;;
 35233                           
 35234                           	psect	text160
 35235  0130D2                     __ptext160:
 35236                           	opt stack 0
 35237  0130D2                     _MSDComputeDeviceInAndResidue:
 35238                           	opt stack 16
 35239                           
 35240                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 35241                           
 35242                           ;incstack = 0
 35243  0130D2  0100               	movlb	0	; () banked
 35244  0130D4  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35245  0130D6  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35246  0130D8  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35247  0130DA  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35248  0130DC  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35249  0130DE  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35250  0130E0  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35251  0130E2  0102               	movlb	2	; () banked
 35252  0130E4  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 35253  0130E6  0100               	movlb	0	; () banked
 35254  0130E8  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35255  0130EA  0102               	movlb	2	; () banked
 35256  0130EC  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 35257  0130EE  0100               	movlb	0	; () banked
 35258  0130F0  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35259  0130F2  0102               	movlb	2	; () banked
 35260  0130F4  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 35261  0130F6  0100               	movlb	0	; () banked
 35262  0130F8  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35263  0130FA  0102               	movlb	2	; () banked
 35264  0130FC  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 35265  0130FE  B0D8               	btfsc	status,0,c
 35266  013100  D00E               	goto	l679
 35267                           
 35268                           ; BSR set to: 2
 35269                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 35270  013102  0E00               	movlw	0
 35271  013104  010D               	movlb	13	; () banked
 35272  013106  6F88               	movwf	136,b	;volatile
 35273  013108  0E00               	movlw	0
 35274  01310A  6F89               	movwf	137,b	;volatile
 35275  01310C  0E00               	movlw	0
 35276  01310E  6F8A               	movwf	138,b	;volatile
 35277  013110  0E00               	movlw	0
 35278  013112  6F8B               	movwf	139,b	;volatile
 35279                           
 35280                           ; BSR set to: 13
 35281                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 35282  013114  C249  F0DA         	movff	_gblCBW+8,_TransferLength
 35283  013118  C24A  F0DB         	movff	_gblCBW+9,_TransferLength+1
 35284                           
 35285                           ;usb_device_msd.c: 1002: }
 35286  01311C  0012               	return	
 35287  01311E                     l679:
 35288                           
 35289                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 35290                           
 35291                           ; BSR set to: 13
 35292  01311E  0100               	movlb	0	; () banked
 35293  013120  51DA               	movf	_TransferLength& (0+255),w,b
 35294  013122  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35295  013124  51DB               	movf	(_TransferLength+1)& (0+255),w,b
 35296  013126  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35297  013128  B0D8               	btfsc	status,0,c
 35298  01312A  D004               	goto	l681
 35299                           
 35300                           ; BSR set to: 0
 35301                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 35302  01312C  C060  F0DA         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 35303  013130  C061  F0DB         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 35304  013134                     l681:
 35305                           
 35306                           ; BSR set to: 0
 35307                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 35308                           
 35309                           ; BSR set to: 0
 35310  013134  51DA               	movf	_TransferLength& (0+255),w,b
 35311  013136  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35312  013138  51DB               	movf	(_TransferLength+1)& (0+255),w,b
 35313  01313A  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35314  01313C  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35315  01313E  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35316  013140  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 35317  013142  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 35318  013144  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 35319  013146  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 35320  013148  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 35321  01314A  0E00               	movlw	0
 35322  01314C  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 35323  01314E  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 35324  013150  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 35325  013152  0102               	movlb	2	; () banked
 35326  013154  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35327  013156  0100               	movlb	0	; () banked
 35328  013158  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35329  01315A  010D               	movlb	13	; () banked
 35330  01315C  6F88               	movwf	136,b	;volatile
 35331  01315E  0102               	movlb	2	; () banked
 35332  013160  514A               	movf	(_gblCBW+9)& (0+255),w,b
 35333  013162  0100               	movlb	0	; () banked
 35334  013164  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35335  013166  010D               	movlb	13	; () banked
 35336  013168  6F89               	movwf	137,b	;volatile
 35337  01316A  0102               	movlb	2	; () banked
 35338  01316C  514B               	movf	(_gblCBW+10)& (0+255),w,b
 35339  01316E  0100               	movlb	0	; () banked
 35340  013170  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35341  013172  010D               	movlb	13	; () banked
 35342  013174  6F8A               	movwf	138,b	;volatile
 35343  013176  0102               	movlb	2	; () banked
 35344  013178  514C               	movf	(_gblCBW+11)& (0+255),w,b
 35345  01317A  0100               	movlb	0	; () banked
 35346  01317C  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35347  01317E  010D               	movlb	13	; () banked
 35348  013180  6F8B               	movwf	139,b	;volatile
 35349  013182  0012               	return	
 35350  013184                     __end_of_MSDComputeDeviceInAndResidue:
 35351                           	opt stack 0
 35352                           tosu	equ	0xFFF
 35353                           tosh	equ	0xFFE
 35354                           tosl	equ	0xFFD
 35355                           pclath	equ	0xFFA
 35356                           tblptru	equ	0xFF8
 35357                           tblptrh	equ	0xFF7
 35358                           tblptrl	equ	0xFF6
 35359                           tablat	equ	0xFF5
 35360                           prodh	equ	0xFF4
 35361                           prodl	equ	0xFF3
 35362                           intcon	equ	0xFF2
 35363                           intcon2	equ	0xFF1
 35364                           intcon3	equ	0xFF0
 35365                           postinc0	equ	0xFEE
 35366                           wreg	equ	0xFE8
 35367                           indf1	equ	0xFE7
 35368                           postinc1	equ	0xFE6
 35369                           postdec1	equ	0xFE5
 35370                           plusw1	equ	0xFE3
 35371                           fsr1h	equ	0xFE2
 35372                           fsr1l	equ	0xFE1
 35373                           indf2	equ	0xFDF
 35374                           postinc2	equ	0xFDE
 35375                           postdec2	equ	0xFDD
 35376                           plusw2	equ	0xFDB
 35377                           fsr2h	equ	0xFDA
 35378                           fsr2l	equ	0xFD9
 35379                           status	equ	0xFD8
 35380                           
 35381 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 35382 ;; Defined at:
 35383 ;;		line 18 in file "external_flash.c"
 35384 ;; Parameters:    Size  Location     Type
 35385 ;;  config          2    0[BANK0 ] PTR void 
 35386 ;;		 -> NULL(0), 
 35387 ;; Auto vars:     Size  Location     Type
 35388 ;;		None
 35389 ;; Return value:  Size  Location     Type
 35390 ;;                  2    0[BANK0 ] unsigned int 
 35391 ;; Registers used:
 35392 ;;		wreg, status,2
 35393 ;; Tracked objects:
 35394 ;;		On entry : 0/0
 35395 ;;		On exit  : 0/0
 35396 ;;		Unchanged: 0/0
 35397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35402 ;;Total ram usage:        2 bytes
 35403 ;; Hardware stack levels used:    1
 35404 ;; Hardware stack levels required when called:   10
 35405 ;; This function calls:
 35406 ;;		Nothing
 35407 ;; This function is called by:
 35408 ;;		_MSDProcessCommandMediaPresent
 35409 ;; This function uses a non-reentrant model
 35410 ;;
 35411                           
 35412                           	psect	text161
 35413  015E7E                     __ptext161:
 35414                           	opt stack 0
 35415  015E7E                     _ExternalFlash_SectorSizeRead:
 35416                           	opt stack 16
 35417                           
 35418                           ;external_flash.c: 21: return 512;
 35419                           
 35420                           ; BSR set to: 13
 35421                           ;incstack = 0
 35422  015E7E  0E02               	movlw	2
 35423  015E80  0100               	movlb	0	; () banked
 35424  015E82  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 35425  015E84  0E00               	movlw	0
 35426  015E86  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 35427  015E88  0012               	return	
 35428  015E8A                     __end_of_ExternalFlash_SectorSizeRead:
 35429                           	opt stack 0
 35430                           tosu	equ	0xFFF
 35431                           tosh	equ	0xFFE
 35432                           tosl	equ	0xFFD
 35433                           pclath	equ	0xFFA
 35434                           tblptru	equ	0xFF8
 35435                           tblptrh	equ	0xFF7
 35436                           tblptrl	equ	0xFF6
 35437                           tablat	equ	0xFF5
 35438                           prodh	equ	0xFF4
 35439                           prodl	equ	0xFF3
 35440                           intcon	equ	0xFF2
 35441                           intcon2	equ	0xFF1
 35442                           intcon3	equ	0xFF0
 35443                           postinc0	equ	0xFEE
 35444                           wreg	equ	0xFE8
 35445                           indf1	equ	0xFE7
 35446                           postinc1	equ	0xFE6
 35447                           postdec1	equ	0xFE5
 35448                           plusw1	equ	0xFE3
 35449                           fsr1h	equ	0xFE2
 35450                           fsr1l	equ	0xFE1
 35451                           indf2	equ	0xFDF
 35452                           postinc2	equ	0xFDE
 35453                           postdec2	equ	0xFDD
 35454                           plusw2	equ	0xFDB
 35455                           fsr2h	equ	0xFDA
 35456                           fsr2l	equ	0xFD9
 35457                           status	equ	0xFD8
 35458                           
 35459 ;; *************** function _ExternalFlash_CapacityRead *****************
 35460 ;; Defined at:
 35461 ;;		line 24 in file "external_flash.c"
 35462 ;; Parameters:    Size  Location     Type
 35463 ;;  config          2    0[BANK0 ] PTR void 
 35464 ;;		 -> NULL(0), 
 35465 ;; Auto vars:     Size  Location     Type
 35466 ;;		None
 35467 ;; Return value:  Size  Location     Type
 35468 ;;                  4    0[BANK0 ] unsigned long 
 35469 ;; Registers used:
 35470 ;;		wreg, status,2
 35471 ;; Tracked objects:
 35472 ;;		On entry : 0/0
 35473 ;;		On exit  : 0/0
 35474 ;;		Unchanged: 0/0
 35475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35479 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35480 ;;Total ram usage:        4 bytes
 35481 ;; Hardware stack levels used:    1
 35482 ;; Hardware stack levels required when called:   10
 35483 ;; This function calls:
 35484 ;;		Nothing
 35485 ;; This function is called by:
 35486 ;;		_MSDProcessCommandMediaPresent
 35487 ;; This function uses a non-reentrant model
 35488 ;;
 35489                           
 35490                           	psect	text162
 35491  015D3C                     __ptext162:
 35492                           	opt stack 0
 35493  015D3C                     _ExternalFlash_CapacityRead:
 35494                           	opt stack 16
 35495                           
 35496                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 35497                           
 35498                           ; BSR set to: 0
 35499                           ;incstack = 0
 35500  015D3C  0E03               	movlw	3
 35501  015D3E  0100               	movlb	0	; () banked
 35502  015D40  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 35503  015D42  0E20               	movlw	32
 35504  015D44  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 35505  015D46  0E00               	movlw	0
 35506  015D48  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 35507  015D4A  0E00               	movlw	0
 35508  015D4C  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 35509  015D4E  0012               	return	
 35510  015D50                     __end_of_ExternalFlash_CapacityRead:
 35511                           	opt stack 0
 35512                           tosu	equ	0xFFF
 35513                           tosh	equ	0xFFE
 35514                           tosl	equ	0xFFD
 35515                           pclath	equ	0xFFA
 35516                           tblptru	equ	0xFF8
 35517                           tblptrh	equ	0xFF7
 35518                           tblptrl	equ	0xFF6
 35519                           tablat	equ	0xFF5
 35520                           prodh	equ	0xFF4
 35521                           prodl	equ	0xFF3
 35522                           intcon	equ	0xFF2
 35523                           intcon2	equ	0xFF1
 35524                           intcon3	equ	0xFF0
 35525                           postinc0	equ	0xFEE
 35526                           wreg	equ	0xFE8
 35527                           indf1	equ	0xFE7
 35528                           postinc1	equ	0xFE6
 35529                           postdec1	equ	0xFE5
 35530                           plusw1	equ	0xFE3
 35531                           fsr1h	equ	0xFE2
 35532                           fsr1l	equ	0xFE1
 35533                           indf2	equ	0xFDF
 35534                           postinc2	equ	0xFDE
 35535                           postdec2	equ	0xFDD
 35536                           plusw2	equ	0xFDB
 35537                           fsr2h	equ	0xFDA
 35538                           fsr2l	equ	0xFD9
 35539                           status	equ	0xFD8
 35540                           
 35541 ;; *************** function _ExternalFlash_MediaInitialize *****************
 35542 ;; Defined at:
 35543 ;;		line 10 in file "external_flash.c"
 35544 ;; Parameters:    Size  Location     Type
 35545 ;;  config          2    0[BANK0 ] PTR void 
 35546 ;;		 -> NULL(0), 
 35547 ;; Auto vars:     Size  Location     Type
 35548 ;;		None
 35549 ;; Return value:  Size  Location     Type
 35550 ;;                  2    0[BANK0 ] PTR struct .
 35551 ;; Registers used:
 35552 ;;		wreg, status,2, status,0
 35553 ;; Tracked objects:
 35554 ;;		On entry : 0/0
 35555 ;;		On exit  : 0/0
 35556 ;;		Unchanged: 0/0
 35557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35562 ;;Total ram usage:        2 bytes
 35563 ;; Hardware stack levels used:    1
 35564 ;; Hardware stack levels required when called:   10
 35565 ;; This function calls:
 35566 ;;		Nothing
 35567 ;; This function is called by:
 35568 ;;		_USBMSDInit
 35569 ;;		_MSDProcessCommand
 35570 ;; This function uses a non-reentrant model
 35571 ;;
 35572                           
 35573                           	psect	text163
 35574  015AFE                     __ptext163:
 35575                           	opt stack 0
 35576  015AFE                     _ExternalFlash_MediaInitialize:
 35577                           	opt stack 0
 35578                           
 35579                           ; BSR set to: 0
 35580                           ;Skip over the trampoline to the duplicate function for level 2
 35581  015AFE  B25B               	btfsc	btemp,1,c
 35582  015B00  EF03  F0AE         	goto	i2_ExternalFlash_MediaInitialize
 35583  015B04                     _ExternalFlash_MediaInitialize$intlevel0:
 35584                           	opt stack 17
 35585                           
 35586                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 35587                           
 35588                           ;incstack = 0
 35589  015B04  0102               	movlb	2	; () banked
 35590  015B06  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 35591                           
 35592                           ; BSR set to: 2
 35593                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 35594  015B08  0E02               	movlw	2
 35595  015B0A  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 35596  015B0C  0E00               	movlw	0
 35597  015B0E  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 35598                           
 35599                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 35600  015B10  0E00               	movlw	0
 35601  015B12  6FB6               	movwf	_mediaInformation& (0+255),b
 35602                           
 35603                           ; BSR set to: 2
 35604                           ;external_flash.c: 15: return &mediaInformation;
 35605  015B14  0EB6               	movlw	low _mediaInformation
 35606  015B16  0100               	movlb	0	; () banked
 35607  015B18  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 35608  015B1A  0E02               	movlw	high _mediaInformation
 35609  015B1C  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 35610  015B1E  0012               	return	
 35611  015B20                     __end_of_ExternalFlash_MediaInitialize:
 35612                           	opt stack 0
 35613                           tosu	equ	0xFFF
 35614                           tosh	equ	0xFFE
 35615                           tosl	equ	0xFFD
 35616                           pclath	equ	0xFFA
 35617                           tblptru	equ	0xFF8
 35618                           tblptrh	equ	0xFF7
 35619                           tblptrl	equ	0xFF6
 35620                           tablat	equ	0xFF5
 35621                           prodh	equ	0xFF4
 35622                           prodl	equ	0xFF3
 35623                           intcon	equ	0xFF2
 35624                           intcon2	equ	0xFF1
 35625                           intcon3	equ	0xFF0
 35626                           postinc0	equ	0xFEE
 35627                           wreg	equ	0xFE8
 35628                           indf1	equ	0xFE7
 35629                           postinc1	equ	0xFE6
 35630                           postdec1	equ	0xFE5
 35631                           plusw1	equ	0xFE3
 35632                           fsr1h	equ	0xFE2
 35633                           fsr1l	equ	0xFE1
 35634                           indf2	equ	0xFDF
 35635                           postinc2	equ	0xFDE
 35636                           postdec2	equ	0xFDD
 35637                           plusw2	equ	0xFDB
 35638                           fsr2h	equ	0xFDA
 35639                           fsr2l	equ	0xFD9
 35640                           status	equ	0xFD8
 35641                           
 35642 ;; *************** function _ExternalFlash_MediaDetect *****************
 35643 ;; Defined at:
 35644 ;;		line 29 in file "external_flash.c"
 35645 ;; Parameters:    Size  Location     Type
 35646 ;;  config          2    0[BANK0 ] PTR void 
 35647 ;;		 -> NULL(0), 
 35648 ;; Auto vars:     Size  Location     Type
 35649 ;;		None
 35650 ;; Return value:  Size  Location     Type
 35651 ;;                  1    wreg      unsigned char 
 35652 ;; Registers used:
 35653 ;;		wreg
 35654 ;; Tracked objects:
 35655 ;;		On entry : 0/0
 35656 ;;		On exit  : 0/0
 35657 ;;		Unchanged: 0/0
 35658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35663 ;;Total ram usage:        2 bytes
 35664 ;; Hardware stack levels used:    1
 35665 ;; Hardware stack levels required when called:   10
 35666 ;; This function calls:
 35667 ;;		Nothing
 35668 ;; This function is called by:
 35669 ;;		_USBMSDInit
 35670 ;;		_MSDProcessCommand
 35671 ;; This function uses a non-reentrant model
 35672 ;;
 35673                           
 35674                           	psect	text164
 35675  015EB2                     __ptext164:
 35676                           	opt stack 0
 35677  015EB2                     _ExternalFlash_MediaDetect:
 35678                           	opt stack 0
 35679                           
 35680                           ; BSR set to: 0
 35681                           ;Skip over the trampoline to the duplicate function for level 2
 35682  015EB2  B25B               	btfsc	btemp,1,c
 35683  015EB4  EF7B  F0AF         	goto	i2_ExternalFlash_MediaDetect
 35684  015EB8                     _ExternalFlash_MediaDetect$intlevel0:
 35685                           	opt stack 17
 35686                           
 35687                           ;external_flash.c: 31: return 1;
 35688                           
 35689                           ;incstack = 0
 35690  015EB8  0E01               	movlw	1
 35691  015EBA  0012               	return	
 35692  015EBC                     __end_of_ExternalFlash_MediaDetect:
 35693                           	opt stack 0
 35694                           tosu	equ	0xFFF
 35695                           tosh	equ	0xFFE
 35696                           tosl	equ	0xFFD
 35697                           pclath	equ	0xFFA
 35698                           tblptru	equ	0xFF8
 35699                           tblptrh	equ	0xFF7
 35700                           tblptrl	equ	0xFF6
 35701                           tablat	equ	0xFF5
 35702                           prodh	equ	0xFF4
 35703                           prodl	equ	0xFF3
 35704                           intcon	equ	0xFF2
 35705                           intcon2	equ	0xFF1
 35706                           intcon3	equ	0xFF0
 35707                           postinc0	equ	0xFEE
 35708                           wreg	equ	0xFE8
 35709                           indf1	equ	0xFE7
 35710                           postinc1	equ	0xFE6
 35711                           postdec1	equ	0xFE5
 35712                           plusw1	equ	0xFE3
 35713                           fsr1h	equ	0xFE2
 35714                           fsr1l	equ	0xFE1
 35715                           indf2	equ	0xFDF
 35716                           postinc2	equ	0xFDE
 35717                           postdec2	equ	0xFDD
 35718                           plusw2	equ	0xFDB
 35719                           fsr2h	equ	0xFDA
 35720                           fsr2l	equ	0xFD9
 35721                           status	equ	0xFD8
 35722                           
 35723 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 35724 ;; Defined at:
 35725 ;;		line 108 in file "app_device_custom_hid.c"
 35726 ;; Parameters:    Size  Location     Type
 35727 ;;		None
 35728 ;; Auto vars:     Size  Location     Type
 35729 ;;  return_value    2   52[BANK0 ] unsigned int 
 35730 ;;  idx             1   54[BANK0 ] unsigned char 
 35731 ;; Return value:  Size  Location     Type
 35732 ;;                  1    wreg      void 
 35733 ;; Registers used:
 35734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35735 ;; Tracked objects:
 35736 ;;		On entry : 0/0
 35737 ;;		On exit  : 0/0
 35738 ;;		Unchanged: 0/0
 35739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35741 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35742 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35743 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35744 ;;Total ram usage:       11 bytes
 35745 ;; Hardware stack levels used:    1
 35746 ;; Hardware stack levels required when called:   15
 35747 ;; This function calls:
 35748 ;;		_USBTransferOnePacket
 35749 ;;		__fill_buffer_get_calibration1
 35750 ;;		__fill_buffer_get_calibration2
 35751 ;;		__fill_buffer_get_display1
 35752 ;;		__fill_buffer_get_display2
 35753 ;;		__fill_buffer_get_status
 35754 ;;		__parse_command_calibration
 35755 ;;		__parse_command_long
 35756 ;;		__parse_command_short
 35757 ;; This function is called by:
 35758 ;;		_main
 35759 ;; This function uses a non-reentrant model
 35760 ;;
 35761                           
 35762                           	psect	text165
 35763  00DDC4                     __ptext165:
 35764                           	opt stack 0
 35765  00DDC4                     _APP_DeviceCustomHIDTasks:
 35766                           	opt stack 15
 35767                           
 35768                           ;app_device_custom_hid.c: 110: uint8_t idx;;app_device_custom_hid.c: 115: if( USBDeviceS
      +                          tate < CONFIGURED_STATE )
 35769                           
 35770                           ;incstack = 0
 35771  00DDC4  0E20               	movlw	32
 35772  00DDC6  602B               	cpfslt	_USBDeviceState,c	;volatile
 35773  00DDC8  D001               	goto	l1070
 35774  00DDCA  0012               	return	
 35775  00DDCC                     l1070:
 35776                           
 35777                           ;app_device_custom_hid.c: 118: };app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 35778  00DDCC  B265               	btfsc	3941,1,c	;volatile
 35779  00DDCE  0012               	return	
 35780                           
 35781                           ;app_device_custom_hid.c: 127: };app_device_custom_hid.c: 130: if(((USBOutHandle != 0x00
      +                          00) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 35782                           
 35783                           ;app_device_custom_hid.c: 125: {;app_device_custom_hid.c: 126: return;
 35784  00DDD0  0101               	movlb	1	; () banked
 35785  00DDD2  51E9               	movf	_USBOutHandle& (0+255),w,b
 35786  00DDD4  11EA               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 35787  00DDD6  B4D8               	btfsc	status,2,c
 35788  00DDD8  D0E4               	goto	l1076
 35789                           
 35790                           ; BSR set to: 1
 35791  00DDDA  C1E9  FFD9         	movff	_USBOutHandle,fsr2l
 35792  00DDDE  C1EA  FFDA         	movff	_USBOutHandle+1,fsr2h
 35793  00DDE2  BEDF               	btfsc	indf2,7,c
 35794  00DDE4  0012               	return	
 35795  00DDE6  D0DD               	goto	l1076
 35796  00DDE8                     
 35797                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35798                           
 35799                           ; BSR set to: 1
 35800  00DDE8  0100               	movlb	0	; () banked
 35801  00DDEA  51D8               	movf	_USBInHandle& (0+255),w,b
 35802  00DDEC  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35803  00DDEE  B4D8               	btfsc	status,2,c
 35804  00DDF0  D006               	goto	u22280
 35805                           
 35806                           ; BSR set to: 0
 35807  00DDF2  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 35808  00DDF6  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 35809  00DDFA  BEDF               	btfsc	indf2,7,c
 35810  00DDFC  D0EC               	goto	l1081
 35811  00DDFE                     u22280:
 35812                           
 35813                           ; BSR set to: 0
 35814                           ;app_device_custom_hid.c: 141: {;app_device_custom_hid.c: 143: _fill_buffer_get_status()
      +                          ;
 35815                           
 35816                           ; BSR set to: 0
 35817  00DDFE  EC73  F07A         	call	__fill_buffer_get_status	;wreg free
 35818                           
 35819                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35820  00DE02  0E01               	movlw	1
 35821  00DE04  0100               	movlb	0	; () banked
 35822  00DE06  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35823  00DE08  0EA4               	movlw	low _ToSendDataBuffer
 35824  00DE0A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35825  00DE0C  0E03               	movlw	high _ToSendDataBuffer
 35826  00DE0E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35827  00DE10  0E40               	movlw	64
 35828  00DE12  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35829  00DE14  0E01               	movlw	1
 35830  00DE16  EC9C  F08C         	call	_USBTransferOnePacket
 35831  00DE1A  D0BE               	goto	L41
 35832  00DE1C                     
 35833                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35834  00DE1C  0100               	movlb	0	; () banked
 35835  00DE1E  51D8               	movf	_USBInHandle& (0+255),w,b
 35836  00DE20  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35837  00DE22  B4D8               	btfsc	status,2,c
 35838  00DE24  D006               	goto	u22300
 35839                           
 35840                           ; BSR set to: 0
 35841  00DE26  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 35842  00DE2A  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 35843  00DE2E  BEDF               	btfsc	indf2,7,c
 35844  00DE30  D0D2               	goto	l1081
 35845  00DE32                     u22300:
 35846                           
 35847                           ; BSR set to: 0
 35848                           ;app_device_custom_hid.c: 152: {;app_device_custom_hid.c: 154: _fill_buffer_get_display1
      +                          ();
 35849                           
 35850                           ; BSR set to: 0
 35851  00DE32  EC9F  F0A7         	call	__fill_buffer_get_display1	;wreg free
 35852                           
 35853                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35854  00DE36  0E01               	movlw	1
 35855  00DE38  0100               	movlb	0	; () banked
 35856  00DE3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35857  00DE3C  0EA4               	movlw	low _ToSendDataBuffer
 35858  00DE3E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35859  00DE40  0E03               	movlw	high _ToSendDataBuffer
 35860  00DE42  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35861  00DE44  0E40               	movlw	64
 35862  00DE46  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35863  00DE48  0E01               	movlw	1
 35864  00DE4A  EC9C  F08C         	call	_USBTransferOnePacket
 35865  00DE4E  D0A4               	goto	L41
 35866  00DE50                     
 35867                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35868  00DE50  0100               	movlb	0	; () banked
 35869  00DE52  51D8               	movf	_USBInHandle& (0+255),w,b
 35870  00DE54  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35871  00DE56  B4D8               	btfsc	status,2,c
 35872  00DE58  D006               	goto	u22320
 35873                           
 35874                           ; BSR set to: 0
 35875  00DE5A  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 35876  00DE5E  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 35877  00DE62  BEDF               	btfsc	indf2,7,c
 35878  00DE64  D0B8               	goto	l1081
 35879  00DE66                     u22320:
 35880                           
 35881                           ; BSR set to: 0
 35882                           ;app_device_custom_hid.c: 163: {;app_device_custom_hid.c: 165: _fill_buffer_get_display2
      +                          ();
 35883                           
 35884                           ; BSR set to: 0
 35885  00DE66  EC77  F0A7         	call	__fill_buffer_get_display2	;wreg free
 35886                           
 35887                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35888  00DE6A  0E01               	movlw	1
 35889  00DE6C  0100               	movlb	0	; () banked
 35890  00DE6E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35891  00DE70  0EA4               	movlw	low _ToSendDataBuffer
 35892  00DE72  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35893  00DE74  0E03               	movlw	high _ToSendDataBuffer
 35894  00DE76  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35895  00DE78  0E40               	movlw	64
 35896  00DE7A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35897  00DE7C  0E01               	movlw	1
 35898  00DE7E  EC9C  F08C         	call	_USBTransferOnePacket
 35899  00DE82  D08A               	goto	L41
 35900  00DE84                     
 35901                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35902  00DE84  0100               	movlb	0	; () banked
 35903  00DE86  51D8               	movf	_USBInHandle& (0+255),w,b
 35904  00DE88  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35905  00DE8A  B4D8               	btfsc	status,2,c
 35906  00DE8C  D006               	goto	u22340
 35907                           
 35908                           ; BSR set to: 0
 35909  00DE8E  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 35910  00DE92  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 35911  00DE96  BEDF               	btfsc	indf2,7,c
 35912  00DE98  D09E               	goto	l1081
 35913  00DE9A                     u22340:
 35914                           
 35915                           ; BSR set to: 0
 35916                           ;app_device_custom_hid.c: 174: {;app_device_custom_hid.c: 176: _fill_buffer_get_calibrat
      +                          ion1();
 35917                           
 35918                           ; BSR set to: 0
 35919  00DE9A  EC99  F09E         	call	__fill_buffer_get_calibration1	;wreg free
 35920                           
 35921                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35922  00DE9E  0E01               	movlw	1
 35923  00DEA0  0100               	movlb	0	; () banked
 35924  00DEA2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35925  00DEA4  0EA4               	movlw	low _ToSendDataBuffer
 35926  00DEA6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35927  00DEA8  0E03               	movlw	high _ToSendDataBuffer
 35928  00DEAA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35929  00DEAC  0E40               	movlw	64
 35930  00DEAE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35931  00DEB0  0E01               	movlw	1
 35932  00DEB2  EC9C  F08C         	call	_USBTransferOnePacket
 35933  00DEB6  D070               	goto	L41
 35934  00DEB8                     
 35935                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35936  00DEB8  0100               	movlb	0	; () banked
 35937  00DEBA  51D8               	movf	_USBInHandle& (0+255),w,b
 35938  00DEBC  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35939  00DEBE  B4D8               	btfsc	status,2,c
 35940  00DEC0  D006               	goto	u22360
 35941                           
 35942                           ; BSR set to: 0
 35943  00DEC2  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 35944  00DEC6  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 35945  00DECA  BEDF               	btfsc	indf2,7,c
 35946  00DECC  D084               	goto	l1081
 35947  00DECE                     u22360:
 35948                           
 35949                           ; BSR set to: 0
 35950                           ;app_device_custom_hid.c: 185: {;app_device_custom_hid.c: 187: _fill_buffer_get_calibrat
      +                          ion2();
 35951                           
 35952                           ; BSR set to: 0
 35953  00DECE  EC29  F0A3         	call	__fill_buffer_get_calibration2	;wreg free
 35954                           
 35955                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35956  00DED2  0E01               	movlw	1
 35957  00DED4  0100               	movlb	0	; () banked
 35958  00DED6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35959  00DED8  0EA4               	movlw	low _ToSendDataBuffer
 35960  00DEDA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35961  00DEDC  0E03               	movlw	high _ToSendDataBuffer
 35962  00DEDE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35963  00DEE0  0E40               	movlw	64
 35964  00DEE2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35965  00DEE4  0E01               	movlw	1
 35966  00DEE6  EC9C  F08C         	call	_USBTransferOnePacket
 35967  00DEEA  D056               	goto	L41
 35968  00DEEC                     
 35969                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 35970  00DEEC  728C               	btg	3980,1,c	;volatile
 35971                           
 35972                           ;app_device_custom_hid.c: 196: break;
 35973  00DEEE  D073               	goto	l1081
 35974  00DEF0                     
 35975                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35976  00DEF0  0100               	movlb	0	; () banked
 35977  00DEF2  51D8               	movf	_USBInHandle& (0+255),w,b
 35978  00DEF4  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35979  00DEF6  B4D8               	btfsc	status,2,c
 35980  00DEF8  D006               	goto	u22380
 35981                           
 35982                           ; BSR set to: 0
 35983  00DEFA  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 35984  00DEFE  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 35985  00DF02  BEDF               	btfsc	indf2,7,c
 35986  00DF04  D068               	goto	l1081
 35987  00DF06                     u22380:
 35988                           
 35989                           ; BSR set to: 0
 35990                           ;app_device_custom_hid.c: 201: {;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COM
      +                          MAND_GET_BUTTON_STATUS;
 35991                           
 35992                           ; BSR set to: 0
 35993  00DF06  0E81               	movlw	129
 35994  00DF08  0103               	movlb	3	; () banked
 35995  00DF0A  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 35996                           
 35997                           ; BSR set to: 3
 35998                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 35999  00DF0C  A080               	btfss	3968,0,c	;volatile
 36000  00DF0E  D002               	goto	l1103
 36001                           
 36002                           ; BSR set to: 3
 36003                           ;app_device_custom_hid.c: 205: {;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x0
      +                          1;
 36004  00DF10  0E01               	movlw	1
 36005  00DF12  D001               	goto	L40
 36006  00DF14                     l1103:
 36007                           
 36008                           ; BSR set to: 3
 36009                           ;app_device_custom_hid.c: 209: else;app_device_custom_hid.c: 210: {;app_device_custom_hi
      +                          d.c: 212: ToSendDataBuffer[1] = 0x00;
 36010                           
 36011                           ; BSR set to: 3
 36012  00DF14  0E00               	movlw	0
 36013  00DF16                     L40:
 36014  00DF16  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 36015                           
 36016                           ; BSR set to: 3
 36017                           ;app_device_custom_hid.c: 213: };app_device_custom_hid.c: 215: USBInHandle = USBTransfer
      +                          OnePacket(1,1,(uint8_t*)&ToSendDataBuffer[0],64);
 36018                           
 36019                           ; BSR set to: 3
 36020  00DF18  0E01               	movlw	1
 36021  00DF1A  0100               	movlb	0	; () banked
 36022  00DF1C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36023  00DF1E  0EA4               	movlw	low _ToSendDataBuffer
 36024  00DF20  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36025  00DF22  0E03               	movlw	high _ToSendDataBuffer
 36026  00DF24  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36027  00DF26  0E40               	movlw	64
 36028  00DF28  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36029  00DF2A  0E01               	movlw	1
 36030  00DF2C  EC9C  F08C         	call	_USBTransferOnePacket
 36031  00DF30  D033               	goto	L41
 36032  00DF32                     
 36033                           ;app_device_custom_hid.c: 220: {;app_device_custom_hid.c: 221: uint16_t return_value;;ap
      +                          p_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USBInH
      +                          andle & 0x80) != 0x00)))
 36034  00DF32  0100               	movlb	0	; () banked
 36035  00DF34  51D8               	movf	_USBInHandle& (0+255),w,b
 36036  00DF36  11D9               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36037  00DF38  B4D8               	btfsc	status,2,c
 36038  00DF3A  D006               	goto	u22410
 36039                           
 36040                           ; BSR set to: 0
 36041  00DF3C  C0D8  FFD9         	movff	_USBInHandle,fsr2l
 36042  00DF40  C0D9  FFDA         	movff	_USBInHandle+1,fsr2h
 36043  00DF44  BEDF               	btfsc	indf2,7,c
 36044  00DF46  D047               	goto	l1081
 36045  00DF48                     u22410:
 36046                           
 36047                           ; BSR set to: 0
 36048                           ;app_device_custom_hid.c: 224: {;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COM
      +                          MAND_READ_POTENTIOMETER;
 36049                           
 36050                           ; BSR set to: 0
 36051  00DF48  0E37               	movlw	55
 36052  00DF4A  0103               	movlb	3	; () banked
 36053  00DF4C  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36054                           
 36055                           ; BSR set to: 3
 36056                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 36057  00DF4E  EE22  F036         	lfsr	2,_os+54	;volatile
 36058  00DF52  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 36059  00DF56  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 36060  00DF5A  0100               	movlb	0	; () banked
 36061  00DF5C  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36062  00DF5E  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36063  00DF60  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36064  00DF62  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36065  00DF64  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36066  00DF66  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36067  00DF68  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36068  00DF6A  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36069  00DF6C  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36070  00DF6E  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 36071  00DF72  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 36072                           
 36073                           ; BSR set to: 0
 36074                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 36075  00DF76  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 36079  00DF7A  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 36080  00DF7C  0103               	movlb	3	; () banked
 36081  00DF7E  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 36082                           
 36083                           ; BSR set to: 3
 36084                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36085  00DF80  0E01               	movlw	1
 36086  00DF82  0100               	movlb	0	; () banked
 36087  00DF84  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36088  00DF86  0EA4               	movlw	low _ToSendDataBuffer
 36089  00DF88  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36090  00DF8A  0E03               	movlw	high _ToSendDataBuffer
 36091  00DF8C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36092  00DF8E  0E40               	movlw	64
 36093  00DF90  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36094  00DF92  0E01               	movlw	1
 36095  00DF94  EC9C  F08C         	call	_USBTransferOnePacket
 36096  00DF98                     L41:
 36097  00DF98  C060  F0D8         	movff	?_USBTransferOnePacket,_USBInHandle
 36098  00DF9C  C061  F0D9         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 36099                           
 36100                           ;app_device_custom_hid.c: 236: }
 36101                           
 36102                           ;app_device_custom_hid.c: 233: };app_device_custom_hid.c: 234: };app_device_custom_hid.c
      +                          : 235: break;
 36103  00DFA0  D01A               	goto	l1081
 36104  00DFA2                     l1076:
 36105  00DFA2  0104               	movlb	4	; () banked
 36106  00DFA4  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 36107                           
 36108                           ; Switch size 1, requested type "space"
 36109                           ; Number of cases is 8, Range of values is 16 to 129
 36110                           ; switch strategies available:
 36111                           ; Name         Instructions Cycles
 36112                           ; simple_byte           25    13 (average)
 36113                           ;	Chosen strategy is simple_byte
 36114  00DFA6  0A10               	xorlw	16	; case 16
 36115  00DFA8  B4D8               	btfsc	status,2,c
 36116  00DFAA  D71E               	goto	l1077
 36117  00DFAC  0A01               	xorlw	1	; case 17
 36118  00DFAE  B4D8               	btfsc	status,2,c
 36119  00DFB0  D735               	goto	l1082
 36120  00DFB2  0A03               	xorlw	3	; case 18
 36121  00DFB4  B4D8               	btfsc	status,2,c
 36122  00DFB6  D74C               	goto	l1086
 36123  00DFB8  0A01               	xorlw	1	; case 19
 36124  00DFBA  B4D8               	btfsc	status,2,c
 36125  00DFBC  D763               	goto	l1090
 36126  00DFBE  0A07               	xorlw	7	; case 20
 36127  00DFC0  B4D8               	btfsc	status,2,c
 36128  00DFC2  D77A               	goto	l1094
 36129  00DFC4  0A23               	xorlw	35	; case 55
 36130  00DFC6  B4D8               	btfsc	status,2,c
 36131  00DFC8  D7B4               	goto	l1105
 36132  00DFCA  0AB7               	xorlw	183	; case 128
 36133  00DFCC  B4D8               	btfsc	status,2,c
 36134  00DFCE  D78E               	goto	l1098
 36135  00DFD0  0A01               	xorlw	1	; case 129
 36136  00DFD2  B4D8               	btfsc	status,2,c
 36137  00DFD4  D78D               	goto	l1099
 36138  00DFD6                     l1081:
 36139                           
 36140                           ;app_device_custom_hid.c: 239: idx = 1;
 36141                           
 36142                           ; BSR set to: 4
 36143  00DFD6  0E01               	movlw	1
 36144  00DFD8  0100               	movlb	0	; () banked
 36145  00DFDA  D076               	goto	L42
 36146  00DFDC                     
 36147                           ; BSR set to: 0
 36148                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 36149                           
 36150                           ; BSR set to: 0
 36151  00DFDC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36152  00DFDE  0D01               	mullw	1
 36153  00DFE0  0E78               	movlw	low _ReceivedDataBuffer
 36154  00DFE2  24F3               	addwf	prodl,w,c
 36155  00DFE4  6ED9               	movwf	fsr2l,c
 36156  00DFE6  0E04               	movlw	high _ReceivedDataBuffer
 36157  00DFE8  20F4               	addwfc	prodh,w,c
 36158  00DFEA  6EDA               	movwf	fsr2h,c
 36159  00DFEC  50DF               	movf	indf2,w,c
 36160  00DFEE  EC82  F091         	call	__parse_command_short
 36161                           
 36162                           ;app_device_custom_hid.c: 246: ++idx;
 36163  00DFF2  0100               	movlb	0	; () banked
 36164  00DFF4  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36165                           
 36166                           ;app_device_custom_hid.c: 247: break;
 36167  00DFF6  D085               	goto	l1113
 36168  00DFF8                     
 36169                           ; BSR set to: 0
 36170                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 36171                           
 36172                           ; BSR set to: 0
 36173  00DFF8  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36174  00DFFA  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36175  00DFFC  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36176  00DFFE  0E01               	movlw	1
 36177  00E000  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36178  00E002  0E00               	movlw	0
 36179  00E004  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36180  00E006  0E78               	movlw	low _ReceivedDataBuffer
 36181  00E008  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36182  00E00A  6ED9               	movwf	fsr2l,c
 36183  00E00C  0E04               	movlw	high _ReceivedDataBuffer
 36184  00E00E  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36185  00E010  6EDA               	movwf	fsr2h,c
 36186  00E012  50DF               	movf	indf2,w,c
 36187  00E014  6F63               	movwf	__parse_command_long@data& (0+255),b
 36188  00E016  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36189  00E018  0D01               	mullw	1
 36190  00E01A  0E78               	movlw	low _ReceivedDataBuffer
 36191  00E01C  24F3               	addwf	prodl,w,c
 36192  00E01E  6ED9               	movwf	fsr2l,c
 36193  00E020  0E04               	movlw	high _ReceivedDataBuffer
 36194  00E022  20F4               	addwfc	prodh,w,c
 36195  00E024  6EDA               	movwf	fsr2h,c
 36196  00E026  50DF               	movf	indf2,w,c
 36197  00E028  EC0C  F091         	call	__parse_command_long
 36198                           
 36199                           ;app_device_custom_hid.c: 250: idx += 2;
 36200  00E02C  0E02               	movlw	2
 36201  00E02E  D048               	goto	L43
 36202  00E030                     
 36203                           ; BSR set to: 0
 36204                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 36205                           
 36206                           ; BSR set to: 0
 36207  00E030  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36208  00E032  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36209  00E034  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36210  00E036  0E01               	movlw	1
 36211  00E038  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36212  00E03A  0E00               	movlw	0
 36213  00E03C  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36214  00E03E  0E78               	movlw	low _ReceivedDataBuffer
 36215  00E040  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36216  00E042  6ED9               	movwf	fsr2l,c
 36217  00E044  0E04               	movlw	high _ReceivedDataBuffer
 36218  00E046  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36219  00E048  6EDA               	movwf	fsr2h,c
 36220  00E04A  50DF               	movf	indf2,w,c
 36221  00E04C  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 36222  00E04E  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36223  00E050  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 36224  00E052  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 36225  00E054  0E02               	movlw	2
 36226  00E056  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 36227  00E058  0E00               	movlw	0
 36228  00E05A  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 36229  00E05C  0E78               	movlw	low _ReceivedDataBuffer
 36230  00E05E  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 36231  00E060  6ED9               	movwf	fsr2l,c
 36232  00E062  0E04               	movlw	high _ReceivedDataBuffer
 36233  00E064  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 36234  00E066  6EDA               	movwf	fsr2h,c
 36235  00E068  50DF               	movf	indf2,w,c
 36236  00E06A  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 36237  00E06C  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36238  00E06E  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 36239  00E070  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 36240  00E072  0E03               	movlw	3
 36241  00E074  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 36242  00E076  0E00               	movlw	0
 36243  00E078  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 36244  00E07A  0E78               	movlw	low _ReceivedDataBuffer
 36245  00E07C  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 36246  00E07E  6ED9               	movwf	fsr2l,c
 36247  00E080  0E04               	movlw	high _ReceivedDataBuffer
 36248  00E082  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 36249  00E084  6EDA               	movwf	fsr2h,c
 36250  00E086  50DF               	movf	indf2,w,c
 36251  00E088  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 36252  00E08A  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36253  00E08C  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 36254  00E08E  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 36255  00E090  0E04               	movlw	4
 36256  00E092  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 36257  00E094  0E00               	movlw	0
 36258  00E096  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 36259  00E098  0E78               	movlw	low _ReceivedDataBuffer
 36260  00E09A  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 36261  00E09C  6ED9               	movwf	fsr2l,c
 36262  00E09E  0E04               	movlw	high _ReceivedDataBuffer
 36263  00E0A0  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 36264  00E0A2  6EDA               	movwf	fsr2h,c
 36265  00E0A4  50DF               	movf	indf2,w,c
 36266  00E0A6  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 36267  00E0A8  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36268  00E0AA  0D01               	mullw	1
 36269  00E0AC  0E78               	movlw	low _ReceivedDataBuffer
 36270  00E0AE  24F3               	addwf	prodl,w,c
 36271  00E0B0  6ED9               	movwf	fsr2l,c
 36272  00E0B2  0E04               	movlw	high _ReceivedDataBuffer
 36273  00E0B4  20F4               	addwfc	prodh,w,c
 36274  00E0B6  6EDA               	movwf	fsr2h,c
 36275  00E0B8  50DF               	movf	indf2,w,c
 36276  00E0BA  EC32  F088         	call	__parse_command_calibration
 36277                           
 36278                           ;app_device_custom_hid.c: 254: idx += 5;
 36279  00E0BE  0E05               	movlw	5
 36280  00E0C0                     L43:
 36281  00E0C0  0100               	movlb	0	; () banked
 36282  00E0C2  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36283                           
 36284                           ;app_device_custom_hid.c: 255: break;
 36285  00E0C4  D01E               	goto	l1113
 36286  00E0C6                     
 36287                           ; BSR set to: 0
 36288                           ;app_device_custom_hid.c: 257: idx = 65;
 36289                           
 36290                           ; BSR set to: 0
 36291  00E0C6  0E41               	movlw	65
 36292  00E0C8                     L42:
 36293  00E0C8  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 36294                           
 36295                           ;app_device_custom_hid.c: 258: }
 36296  00E0CA  D01B               	goto	l1113
 36297  00E0CC                     
 36298                           ; BSR set to: 0
 36299                           
 36300                           ; BSR set to: 0
 36301  00E0CC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36302  00E0CE  0D01               	mullw	1
 36303  00E0D0  0E78               	movlw	low _ReceivedDataBuffer
 36304  00E0D2  24F3               	addwf	prodl,w,c
 36305  00E0D4  6ED9               	movwf	fsr2l,c
 36306  00E0D6  0E04               	movlw	high _ReceivedDataBuffer
 36307  00E0D8  20F4               	addwfc	prodh,w,c
 36308  00E0DA  6EDA               	movwf	fsr2h,c
 36309  00E0DC  50DF               	movf	indf2,w,c
 36310  00E0DE  0BF0               	andlw	240
 36311  00E0E0  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36312  00E0E2  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36313                           
 36314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36315                           ; Switch size 1, requested type "space"
 36316                           ; Number of cases is 1, Range of values is 0 to 0
 36317                           ; switch strategies available:
 36318                           ; Name         Instructions Cycles
 36319                           ; simple_byte            4     3 (average)
 36320                           ;	Chosen strategy is simple_byte
 36321  00E0E4  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36322  00E0E6  0A00               	xorlw	0	; case 0
 36323  00E0E8  A4D8               	btfss	status,2,c
 36324  00E0EA  D7ED               	goto	l1116
 36325                           
 36326                           ; BSR set to: 0
 36327                           ; Switch size 1, requested type "space"
 36328                           ; Number of cases is 3, Range of values is 48 to 96
 36329                           ; switch strategies available:
 36330                           ; Name         Instructions Cycles
 36331                           ; simple_byte           10     6 (average)
 36332                           ;	Chosen strategy is simple_byte
 36333  00E0EC  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36334  00E0EE  0A30               	xorlw	48	; case 48
 36335  00E0F0  B4D8               	btfsc	status,2,c
 36336  00E0F2  D774               	goto	l1112
 36337  00E0F4  0A70               	xorlw	112	; case 64
 36338  00E0F6  B4D8               	btfsc	status,2,c
 36339  00E0F8  D77F               	goto	l1114
 36340  00E0FA  0A20               	xorlw	32	; case 96
 36341  00E0FC  B4D8               	btfsc	status,2,c
 36342  00E0FE  D798               	goto	l1115
 36343  00E100  D7E2               	goto	l1116
 36344  00E102                     l1113:
 36345                           
 36346                           ; BSR set to: 0
 36347                           
 36348                           ; BSR set to: 0
 36349                           
 36350                           ; BSR set to: 0
 36351  00E102  0E3D               	movlw	61
 36352  00E104  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 36353  00E106  D7E2               	goto	l1111
 36354                           
 36355                           ; BSR set to: 0
 36356                           ;app_device_custom_hid.c: 259: };app_device_custom_hid.c: 263: USBOutHandle = USBTransfe
      +                          rOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
 36357                           
 36358                           ; BSR set to: 0
 36359  00E108  0E00               	movlw	0
 36360  00E10A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36361  00E10C  0E78               	movlw	low _ReceivedDataBuffer
 36362  00E10E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36363  00E110  0E04               	movlw	high _ReceivedDataBuffer
 36364  00E112  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36365  00E114  0E40               	movlw	64
 36366  00E116  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36367  00E118  0E01               	movlw	1
 36368  00E11A  EC9C  F08C         	call	_USBTransferOnePacket
 36369  00E11E  C060  F1E9         	movff	?_USBTransferOnePacket,_USBOutHandle
 36370  00E122  C061  F1EA         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 36371  00E126  0012               	return	
 36372  00E128                     __end_of_APP_DeviceCustomHIDTasks:
 36373                           	opt stack 0
 36374                           tosu	equ	0xFFF
 36375                           tosh	equ	0xFFE
 36376                           tosl	equ	0xFFD
 36377                           pclath	equ	0xFFA
 36378                           tblptru	equ	0xFF8
 36379                           tblptrh	equ	0xFF7
 36380                           tblptrl	equ	0xFF6
 36381                           tablat	equ	0xFF5
 36382                           prodh	equ	0xFF4
 36383                           prodl	equ	0xFF3
 36384                           intcon	equ	0xFF2
 36385                           intcon2	equ	0xFF1
 36386                           intcon3	equ	0xFF0
 36387                           postinc0	equ	0xFEE
 36388                           wreg	equ	0xFE8
 36389                           indf1	equ	0xFE7
 36390                           postinc1	equ	0xFE6
 36391                           postdec1	equ	0xFE5
 36392                           plusw1	equ	0xFE3
 36393                           fsr1h	equ	0xFE2
 36394                           fsr1l	equ	0xFE1
 36395                           indf2	equ	0xFDF
 36396                           postinc2	equ	0xFDE
 36397                           postdec2	equ	0xFDD
 36398                           plusw2	equ	0xFDB
 36399                           fsr2h	equ	0xFDA
 36400                           fsr2l	equ	0xFD9
 36401                           status	equ	0xFD8
 36402                           
 36403 ;; *************** function __parse_command_short *****************
 36404 ;; Defined at:
 36405 ;;		line 398 in file "app_device_custom_hid.c"
 36406 ;; Parameters:    Size  Location     Type
 36407 ;;  cmd             1    wreg     unsigned char 
 36408 ;; Auto vars:     Size  Location     Type
 36409 ;;  cmd             1   43[BANK0 ] unsigned char 
 36410 ;; Return value:  Size  Location     Type
 36411 ;;                  1    wreg      void 
 36412 ;; Registers used:
 36413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36414 ;; Tracked objects:
 36415 ;;		On entry : 0/0
 36416 ;;		On exit  : 0/0
 36417 ;;		Unchanged: 0/0
 36418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36423 ;;Total ram usage:        1 bytes
 36424 ;; Hardware stack levels used:    1
 36425 ;; Hardware stack levels required when called:   14
 36426 ;; This function calls:
 36427 ;;		_rtcc_write_eeprom
 36428 ;;		_system_output_off
 36429 ;;		_system_output_on
 36430 ;; This function is called by:
 36431 ;;		_APP_DeviceCustomHIDTasks
 36432 ;; This function uses a non-reentrant model
 36433 ;;
 36434                           
 36435                           	psect	text166
 36436  012304                     __ptext166:
 36437                           	opt stack 0
 36438  012304                     __parse_command_short:
 36439                           	opt stack 15
 36440                           
 36441                           ;incstack = 0
 36442                           ;__parse_command_short@cmd stored from wreg
 36443  012304  0100               	movlb	0	; () banked
 36444  012306  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 36445                           
 36446                           ;app_device_custom_hid.c: 400: switch(cmd)
 36447  012308  D03C               	goto	l1143
 36448  01230A                     
 36449                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 36450  01230A  0E01               	movlw	1
 36451  01230C  ECDA  F0A5         	call	_system_output_off
 36452                           
 36453                           ;app_device_custom_hid.c: 404: break;
 36454  012310  0012               	return	
 36455  012312                     
 36456                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 36457  012312  0E01               	movlw	1
 36458  012314  ECC7  F0A7         	call	_system_output_on
 36459                           
 36460                           ;app_device_custom_hid.c: 407: break;
 36461  012318  0012               	return	
 36462  01231A                     
 36463                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 36464  01231A  0E02               	movlw	2
 36465  01231C  ECDA  F0A5         	call	_system_output_off
 36466                           
 36467                           ;app_device_custom_hid.c: 410: break;
 36468  012320  0012               	return	
 36469  012322                     
 36470                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 36471  012322  0E02               	movlw	2
 36472  012324  ECC7  F0A7         	call	_system_output_on
 36473                           
 36474                           ;app_device_custom_hid.c: 413: break;
 36475  012328  0012               	return	
 36476  01232A                     
 36477                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 36478  01232A  0E04               	movlw	4
 36479  01232C  ECDA  F0A5         	call	_system_output_off
 36480                           
 36481                           ;app_device_custom_hid.c: 416: break;
 36482  012330  0012               	return	
 36483  012332                     
 36484                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 36485  012332  0E04               	movlw	4
 36486  012334  ECC7  F0A7         	call	_system_output_on
 36487                           
 36488                           ;app_device_custom_hid.c: 419: break;
 36489  012338  0012               	return	
 36490  01233A                     
 36491                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 36492  01233A  0E08               	movlw	8
 36493  01233C  ECDA  F0A5         	call	_system_output_off
 36494                           
 36495                           ;app_device_custom_hid.c: 422: break;
 36496  012340  0012               	return	
 36497  012342                     
 36498                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 36499  012342  0E08               	movlw	8
 36500  012344  ECC7  F0A7         	call	_system_output_on
 36501                           
 36502                           ;app_device_custom_hid.c: 425: break;
 36503  012348  0012               	return	
 36504  01234A                     
 36505                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 36506  01234A  0E10               	movlw	16
 36507  01234C  ECDA  F0A5         	call	_system_output_off
 36508                           
 36509                           ;app_device_custom_hid.c: 428: break;
 36510  012350  0012               	return	
 36511  012352                     
 36512                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 36513  012352  0E10               	movlw	16
 36514  012354  ECC7  F0A7         	call	_system_output_on
 36515                           
 36516                           ;app_device_custom_hid.c: 431: break;
 36517  012358  0012               	return	
 36518  01235A                     
 36519                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 36520  01235A  0E20               	movlw	32
 36521  01235C  ECDA  F0A5         	call	_system_output_off
 36522                           
 36523                           ;app_device_custom_hid.c: 434: break;
 36524  012360  0012               	return	
 36525  012362                     
 36526                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 36527  012362  0E20               	movlw	32
 36528  012364  ECC7  F0A7         	call	_system_output_on
 36529                           
 36530                           ;app_device_custom_hid.c: 437: break;
 36531  012368  0012               	return	
 36532  01236A                     
 36533                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 36534  01236A  0102               	movlb	2	; () banked
 36535  01236C  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 36536                           
 36537                           ;app_device_custom_hid.c: 440: break;
 36538  01236E  0012               	return	
 36539  012370                     
 36540                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 36541                           
 36542                           ; BSR set to: 2
 36543  012370  0102               	movlb	2	; () banked
 36544  012372  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 36545                           
 36546                           ;app_device_custom_hid.c: 443: break;
 36547  012374  0012               	return	
 36548  012376                     
 36549                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 36550                           
 36551                           ; BSR set to: 2
 36552  012376  0102               	movlb	2	; () banked
 36553  012378  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 36554                           
 36555                           ;app_device_custom_hid.c: 446: break;
 36556  01237A  0012               	return	
 36557  01237C                     
 36558                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 36559                           
 36560                           ; BSR set to: 2
 36561  01237C  EC38  F0A8         	call	_rtcc_write_eeprom	;wreg free
 36562                           
 36563                           ;app_device_custom_hid.c: 450: }
 36564                           
 36565                           ;app_device_custom_hid.c: 449: break;
 36566  012380  0012               	return	
 36567  012382                     l1143:
 36568  012382  0100               	movlb	0	; () banked
 36569  012384  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 36570                           
 36571                           ; Switch size 1, requested type "space"
 36572                           ; Number of cases is 16, Range of values is 48 to 63
 36573                           ; switch strategies available:
 36574                           ; Name         Instructions Cycles
 36575                           ; simple_byte           49    25 (average)
 36576                           ;	Chosen strategy is simple_byte
 36577  012386  0A30               	xorlw	48	; case 48
 36578  012388  B4D8               	btfsc	status,2,c
 36579  01238A  D7BF               	goto	l1144
 36580  01238C  0A01               	xorlw	1	; case 49
 36581  01238E  B4D8               	btfsc	status,2,c
 36582  012390  D7C0               	goto	l1146
 36583  012392  0A03               	xorlw	3	; case 50
 36584  012394  B4D8               	btfsc	status,2,c
 36585  012396  D7C1               	goto	l1147
 36586  012398  0A01               	xorlw	1	; case 51
 36587  01239A  B4D8               	btfsc	status,2,c
 36588  01239C  D7C2               	goto	l1148
 36589  01239E  0A07               	xorlw	7	; case 52
 36590  0123A0  B4D8               	btfsc	status,2,c
 36591  0123A2  D7C3               	goto	l1149
 36592  0123A4  0A01               	xorlw	1	; case 53
 36593  0123A6  B4D8               	btfsc	status,2,c
 36594  0123A8  D7C4               	goto	l1150
 36595  0123AA  0A03               	xorlw	3	; case 54
 36596  0123AC  B4D8               	btfsc	status,2,c
 36597  0123AE  D7C5               	goto	l1151
 36598  0123B0  0A01               	xorlw	1	; case 55
 36599  0123B2  B4D8               	btfsc	status,2,c
 36600  0123B4  D7C6               	goto	l1152
 36601  0123B6  0A0F               	xorlw	15	; case 56
 36602  0123B8  B4D8               	btfsc	status,2,c
 36603  0123BA  D7C7               	goto	l1153
 36604  0123BC  0A01               	xorlw	1	; case 57
 36605  0123BE  B4D8               	btfsc	status,2,c
 36606  0123C0  D7C8               	goto	l1154
 36607  0123C2  0A03               	xorlw	3	; case 58
 36608  0123C4  B4D8               	btfsc	status,2,c
 36609  0123C6  D7C9               	goto	l1155
 36610  0123C8  0A01               	xorlw	1	; case 59
 36611  0123CA  B4D8               	btfsc	status,2,c
 36612  0123CC  D7CA               	goto	l1156
 36613  0123CE  0A07               	xorlw	7	; case 60
 36614  0123D0  B4D8               	btfsc	status,2,c
 36615  0123D2  D7CB               	goto	l1157
 36616  0123D4  0A01               	xorlw	1	; case 61
 36617  0123D6  B4D8               	btfsc	status,2,c
 36618  0123D8  D7CB               	goto	l1158
 36619  0123DA  0A03               	xorlw	3	; case 62
 36620  0123DC  B4D8               	btfsc	status,2,c
 36621  0123DE  D7CB               	goto	l1159
 36622  0123E0  0A01               	xorlw	1	; case 63
 36623  0123E2  A4D8               	btfss	status,2,c
 36624  0123E4  0012               	return	
 36625  0123E6  D7CA               	goto	l1160
 36626  0123E8                     __end_of__parse_command_short:
 36627                           	opt stack 0
 36628                           tosu	equ	0xFFF
 36629                           tosh	equ	0xFFE
 36630                           tosl	equ	0xFFD
 36631                           pclath	equ	0xFFA
 36632                           tblptru	equ	0xFF8
 36633                           tblptrh	equ	0xFF7
 36634                           tblptrl	equ	0xFF6
 36635                           tablat	equ	0xFF5
 36636                           prodh	equ	0xFF4
 36637                           prodl	equ	0xFF3
 36638                           intcon	equ	0xFF2
 36639                           intcon2	equ	0xFF1
 36640                           intcon3	equ	0xFF0
 36641                           postinc0	equ	0xFEE
 36642                           wreg	equ	0xFE8
 36643                           indf1	equ	0xFE7
 36644                           postinc1	equ	0xFE6
 36645                           postdec1	equ	0xFE5
 36646                           plusw1	equ	0xFE3
 36647                           fsr1h	equ	0xFE2
 36648                           fsr1l	equ	0xFE1
 36649                           indf2	equ	0xFDF
 36650                           postinc2	equ	0xFDE
 36651                           postdec2	equ	0xFDD
 36652                           plusw2	equ	0xFDB
 36653                           fsr2h	equ	0xFDA
 36654                           fsr2l	equ	0xFD9
 36655                           status	equ	0xFD8
 36656                           
 36657 ;; *************** function _system_output_on *****************
 36658 ;; Defined at:
 36659 ;;		line 507 in file "os.c"
 36660 ;; Parameters:    Size  Location     Type
 36661 ;;  output          1    wreg     enum E6652
 36662 ;; Auto vars:     Size  Location     Type
 36663 ;;  output          1    0[BANK0 ] enum E6652
 36664 ;; Return value:  Size  Location     Type
 36665 ;;                  1    wreg      void 
 36666 ;; Registers used:
 36667 ;;		wreg, status,2, status,0
 36668 ;; Tracked objects:
 36669 ;;		On entry : 0/0
 36670 ;;		On exit  : 0/0
 36671 ;;		Unchanged: 0/0
 36672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36676 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36677 ;;Total ram usage:        1 bytes
 36678 ;; Hardware stack levels used:    1
 36679 ;; Hardware stack levels required when called:   10
 36680 ;; This function calls:
 36681 ;;		Nothing
 36682 ;; This function is called by:
 36683 ;;		__parse_command_short
 36684 ;;		_system_output_toggle
 36685 ;;		__ui_encoder
 36686 ;; This function uses a non-reentrant model
 36687 ;;
 36688                           
 36689                           	psect	text167
 36690  014F8E                     __ptext167:
 36691                           	opt stack 0
 36692  014F8E                     _system_output_on:
 36693                           	opt stack 17
 36694                           
 36695                           ;incstack = 0
 36696                           ;system_output_on@output stored from wreg
 36697  014F8E  0100               	movlb	0	; () banked
 36698  014F90  6F60               	movwf	system_output_on@output& (0+255),b
 36699                           
 36700                           ;os.c: 510: os.outputs |= output;
 36701  014F92  0100               	movlb	0	; () banked
 36702  014F94  5160               	movf	system_output_on@output& (0+255),w,b
 36703  014F96  0102               	movlb	2	; () banked
 36704  014F98  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 36705                           
 36706                           ;os.c: 513: switch(output)
 36707  014F9A  D00E               	goto	l1406
 36708  014F9C                     l1407:
 36709                           
 36710                           ; BSR set to: 0
 36711                           ;os.c: 516: LATCbits.LC7 = 1;
 36712  014F9C  8E8B               	bsf	3979,7,c	;volatile
 36713                           
 36714                           ;os.c: 517: LATEbits.LE2 = 0;
 36715  014F9E  948D               	bcf	3981,2,c	;volatile
 36716                           
 36717                           ;os.c: 518: break;
 36718  014FA0  0012               	return	
 36719  014FA2                     l1409:
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;os.c: 520: LATCbits.LC7 = 1;
 36723  014FA2  8E8B               	bsf	3979,7,c	;volatile
 36724                           
 36725                           ;os.c: 521: LATEbits.LE1 = 0;
 36726  014FA4  928D               	bcf	3981,1,c	;volatile
 36727                           
 36728                           ;os.c: 522: break;
 36729  014FA6  0012               	return	
 36730  014FA8                     l1410:
 36731                           
 36732                           ; BSR set to: 0
 36733                           ;os.c: 524: LATCbits.LC7 = 1;
 36734  014FA8  8E8B               	bsf	3979,7,c	;volatile
 36735                           
 36736                           ;os.c: 525: LATEbits.LE0 = 0;
 36737  014FAA  908D               	bcf	3981,0,c	;volatile
 36738                           
 36739                           ;os.c: 526: break;
 36740  014FAC  0012               	return	
 36741  014FAE                     l1411:
 36742                           
 36743                           ; BSR set to: 0
 36744                           ;os.c: 528: LATCbits.LC7 = 1;
 36745  014FAE  8E8B               	bsf	3979,7,c	;volatile
 36746                           
 36747                           ;os.c: 529: LATAbits.LA5 = 0;
 36748  014FB0  9A89               	bcf	3977,5,c	;volatile
 36749                           
 36750                           ;os.c: 530: break;
 36751  014FB2  0012               	return	
 36752  014FB4                     l1412:
 36753                           
 36754                           ; BSR set to: 0
 36755                           ;os.c: 532: LATDbits.LD3 = 1;
 36756  014FB4  868C               	bsf	3980,3,c	;volatile
 36757                           
 36758                           ; BSR set to: 0
 36759                           ;os.c: 534: }
 36760                           
 36761                           ;os.c: 533: break;
 36762  014FB6  0012               	return	
 36763  014FB8                     l1406:
 36764                           
 36765                           ; BSR set to: 0
 36766  014FB8  0100               	movlb	0	; () banked
 36767  014FBA  5160               	movf	system_output_on@output& (0+255),w,b
 36768                           
 36769                           ; Switch size 1, requested type "space"
 36770                           ; Number of cases is 5, Range of values is 1 to 16
 36771                           ; switch strategies available:
 36772                           ; Name         Instructions Cycles
 36773                           ; simple_byte           16     9 (average)
 36774                           ;	Chosen strategy is simple_byte
 36775  014FBC  0A01               	xorlw	1	; case 1
 36776  014FBE  B4D8               	btfsc	status,2,c
 36777  014FC0  D7ED               	goto	l1407
 36778  014FC2  0A03               	xorlw	3	; case 2
 36779  014FC4  B4D8               	btfsc	status,2,c
 36780  014FC6  D7ED               	goto	l1409
 36781  014FC8  0A06               	xorlw	6	; case 4
 36782  014FCA  B4D8               	btfsc	status,2,c
 36783  014FCC  D7ED               	goto	l1410
 36784  014FCE  0A0C               	xorlw	12	; case 8
 36785  014FD0  B4D8               	btfsc	status,2,c
 36786  014FD2  D7ED               	goto	l1411
 36787  014FD4  0A18               	xorlw	24	; case 16
 36788  014FD6  A4D8               	btfss	status,2,c
 36789  014FD8  0012               	return	
 36790  014FDA  D7EC               	goto	l1412
 36791  014FDC                     __end_of_system_output_on:
 36792                           	opt stack 0
 36793                           tosu	equ	0xFFF
 36794                           tosh	equ	0xFFE
 36795                           tosl	equ	0xFFD
 36796                           pclath	equ	0xFFA
 36797                           tblptru	equ	0xFF8
 36798                           tblptrh	equ	0xFF7
 36799                           tblptrl	equ	0xFF6
 36800                           tablat	equ	0xFF5
 36801                           prodh	equ	0xFF4
 36802                           prodl	equ	0xFF3
 36803                           intcon	equ	0xFF2
 36804                           intcon2	equ	0xFF1
 36805                           intcon3	equ	0xFF0
 36806                           postinc0	equ	0xFEE
 36807                           wreg	equ	0xFE8
 36808                           indf1	equ	0xFE7
 36809                           postinc1	equ	0xFE6
 36810                           postdec1	equ	0xFE5
 36811                           plusw1	equ	0xFE3
 36812                           fsr1h	equ	0xFE2
 36813                           fsr1l	equ	0xFE1
 36814                           indf2	equ	0xFDF
 36815                           postinc2	equ	0xFDE
 36816                           postdec2	equ	0xFDD
 36817                           plusw2	equ	0xFDB
 36818                           fsr2h	equ	0xFDA
 36819                           fsr2l	equ	0xFD9
 36820                           status	equ	0xFD8
 36821                           
 36822 ;; *************** function _system_output_off *****************
 36823 ;; Defined at:
 36824 ;;		line 537 in file "os.c"
 36825 ;; Parameters:    Size  Location     Type
 36826 ;;  output          1    wreg     enum E6652
 36827 ;; Auto vars:     Size  Location     Type
 36828 ;;  output          1    1[BANK0 ] enum E6652
 36829 ;; Return value:  Size  Location     Type
 36830 ;;                  1    wreg      void 
 36831 ;; Registers used:
 36832 ;;		wreg, status,2, status,0
 36833 ;; Tracked objects:
 36834 ;;		On entry : 0/0
 36835 ;;		On exit  : 0/0
 36836 ;;		Unchanged: 0/0
 36837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36842 ;;Total ram usage:        2 bytes
 36843 ;; Hardware stack levels used:    1
 36844 ;; Hardware stack levels required when called:   10
 36845 ;; This function calls:
 36846 ;;		Nothing
 36847 ;; This function is called by:
 36848 ;;		_main
 36849 ;;		__parse_command_short
 36850 ;;		_system_output_toggle
 36851 ;;		__ui_encoder
 36852 ;; This function uses a non-reentrant model
 36853 ;;
 36854                           
 36855                           	psect	text168
 36856  014BB4                     __ptext168:
 36857                           	opt stack 0
 36858  014BB4                     _system_output_off:
 36859                           	opt stack 17
 36860                           
 36861                           ; BSR set to: 0
 36862                           ;incstack = 0
 36863                           ;system_output_off@output stored from wreg
 36864  014BB4  0100               	movlb	0	; () banked
 36865  014BB6  6F61               	movwf	system_output_off@output& (0+255),b
 36866                           
 36867                           ;os.c: 540: os.outputs &= (~output);
 36868  014BB8  0100               	movlb	0	; () banked
 36869  014BBA  5161               	movf	system_output_off@output& (0+255),w,b
 36870  014BBC  0AFF               	xorlw	255
 36871  014BBE  0102               	movlb	2	; () banked
 36872  014BC0  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 36873                           
 36874                           ;os.c: 543: switch(output)
 36875  014BC2  D00A               	goto	l1416
 36876  014BC4                     l1417:
 36877                           
 36878                           ; BSR set to: 0
 36879                           ;os.c: 546: LATEbits.LE2 = 1;
 36880  014BC4  848D               	bsf	3981,2,c	;volatile
 36881                           
 36882                           ;os.c: 547: break;
 36883  014BC6  D019               	goto	l1418
 36884  014BC8                     l1419:
 36885                           
 36886                           ; BSR set to: 0
 36887                           ;os.c: 549: LATEbits.LE1 = 1;
 36888  014BC8  828D               	bsf	3981,1,c	;volatile
 36889                           
 36890                           ;os.c: 550: break;
 36891  014BCA  D017               	goto	l1418
 36892  014BCC                     l1420:
 36893                           
 36894                           ; BSR set to: 0
 36895                           ;os.c: 552: LATEbits.LE0 = 1;
 36896  014BCC  808D               	bsf	3981,0,c	;volatile
 36897                           
 36898                           ;os.c: 553: break;
 36899  014BCE  D015               	goto	l1418
 36900  014BD0                     l1421:
 36901                           
 36902                           ; BSR set to: 0
 36903                           ;os.c: 555: LATAbits.LA5 = 1;
 36904  014BD0  8A89               	bsf	3977,5,c	;volatile
 36905                           
 36906                           ;os.c: 556: break;
 36907  014BD2  D013               	goto	l1418
 36908  014BD4                     l1422:
 36909                           
 36910                           ; BSR set to: 0
 36911                           ;os.c: 558: LATDbits.LD3 = 0;
 36912  014BD4  968C               	bcf	3980,3,c	;volatile
 36913                           
 36914                           ; BSR set to: 0
 36915                           ;os.c: 560: }
 36916                           
 36917                           ;os.c: 559: break;
 36918  014BD6  D011               	goto	l1418
 36919  014BD8                     l1416:
 36920                           
 36921                           ; BSR set to: 0
 36922  014BD8  0100               	movlb	0	; () banked
 36923  014BDA  5161               	movf	system_output_off@output& (0+255),w,b
 36924                           
 36925                           ; Switch size 1, requested type "space"
 36926                           ; Number of cases is 5, Range of values is 1 to 16
 36927                           ; switch strategies available:
 36928                           ; Name         Instructions Cycles
 36929                           ; simple_byte           16     9 (average)
 36930                           ;	Chosen strategy is simple_byte
 36931  014BDC  0A01               	xorlw	1	; case 1
 36932  014BDE  B4D8               	btfsc	status,2,c
 36933  014BE0  D7F1               	goto	l1417
 36934  014BE2  0A03               	xorlw	3	; case 2
 36935  014BE4  B4D8               	btfsc	status,2,c
 36936  014BE6  D7F0               	goto	l1419
 36937  014BE8  0A06               	xorlw	6	; case 4
 36938  014BEA  B4D8               	btfsc	status,2,c
 36939  014BEC  D7EF               	goto	l1420
 36940  014BEE  0A0C               	xorlw	12	; case 8
 36941  014BF0  B4D8               	btfsc	status,2,c
 36942  014BF2  D7EE               	goto	l1421
 36943  014BF4  0A18               	xorlw	24	; case 16
 36944  014BF6  B4D8               	btfsc	status,2,c
 36945  014BF8  D7ED               	goto	l1422
 36946  014BFA                     l1418:
 36947                           
 36948                           ; BSR set to: 0
 36949                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 36950                           
 36951                           ; BSR set to: 0
 36952  014BFA  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 36953  014BFE  0E0F               	movlw	15
 36954  014C00  1760               	andwf	??_system_output_off& (0+255),f,b
 36955  014C02  A4D8               	btfss	status,2,c
 36956  014C04  0012               	return	
 36957                           
 36958                           ; BSR set to: 0
 36959                           ;os.c: 564: {;os.c: 565: LATCbits.LC7 = 0;
 36960  014C06  9E8B               	bcf	3979,7,c	;volatile
 36961  014C08  0012               	return	
 36962  014C0A                     __end_of_system_output_off:
 36963                           	opt stack 0
 36964                           tosu	equ	0xFFF
 36965                           tosh	equ	0xFFE
 36966                           tosl	equ	0xFFD
 36967                           pclath	equ	0xFFA
 36968                           tblptru	equ	0xFF8
 36969                           tblptrh	equ	0xFF7
 36970                           tblptrl	equ	0xFF6
 36971                           tablat	equ	0xFF5
 36972                           prodh	equ	0xFF4
 36973                           prodl	equ	0xFF3
 36974                           intcon	equ	0xFF2
 36975                           intcon2	equ	0xFF1
 36976                           intcon3	equ	0xFF0
 36977                           postinc0	equ	0xFEE
 36978                           wreg	equ	0xFE8
 36979                           indf1	equ	0xFE7
 36980                           postinc1	equ	0xFE6
 36981                           postdec1	equ	0xFE5
 36982                           plusw1	equ	0xFE3
 36983                           fsr1h	equ	0xFE2
 36984                           fsr1l	equ	0xFE1
 36985                           indf2	equ	0xFDF
 36986                           postinc2	equ	0xFDE
 36987                           postdec2	equ	0xFDD
 36988                           plusw2	equ	0xFDB
 36989                           fsr2h	equ	0xFDA
 36990                           fsr2l	equ	0xFD9
 36991                           status	equ	0xFD8
 36992                           
 36993 ;; *************** function _rtcc_write_eeprom *****************
 36994 ;; Defined at:
 36995 ;;		line 436 in file "rtcc.c"
 36996 ;; Parameters:    Size  Location     Type
 36997 ;;		None
 36998 ;; Auto vars:     Size  Location     Type
 36999 ;;  date            6   37[BANK0 ] unsigned char [6]
 37000 ;; Return value:  Size  Location     Type
 37001 ;;                  1    wreg      void 
 37002 ;; Registers used:
 37003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37004 ;; Tracked objects:
 37005 ;;		On entry : 0/0
 37006 ;;		On exit  : 0/0
 37007 ;;		Unchanged: 0/0
 37008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37010 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37012 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37013 ;;Total ram usage:        6 bytes
 37014 ;; Hardware stack levels used:    1
 37015 ;; Hardware stack levels required when called:   13
 37016 ;; This function calls:
 37017 ;;		_i2c_eeprom_write
 37018 ;;		_rtcc_get_day
 37019 ;;		_rtcc_get_hours
 37020 ;;		_rtcc_get_minutes
 37021 ;;		_rtcc_get_month
 37022 ;;		_rtcc_get_seconds
 37023 ;;		_rtcc_get_year
 37024 ;; This function is called by:
 37025 ;;		__parse_command_short
 37026 ;;		__ui_encoder
 37027 ;;		_rtcc_read_eeprom
 37028 ;; This function uses a non-reentrant model
 37029 ;;
 37030                           
 37031                           	psect	text169
 37032  015070                     __ptext169:
 37033                           	opt stack 0
 37034  015070                     _rtcc_write_eeprom:
 37035                           	opt stack 15
 37036                           
 37037                           ;rtcc.c: 438: uint8_t date[6];;rtcc.c: 439: date[0] = rtcc_get_year();
 37038                           
 37039                           ; BSR set to: 0
 37040                           ;incstack = 0
 37041  015070  EC09  F0AF         	call	_rtcc_get_year	;wreg free
 37042  015074  0100               	movlb	0	; () banked
 37043  015076  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 37044                           
 37045                           ;rtcc.c: 440: date[1] = rtcc_get_month();
 37046  015078  EC17  F0AF         	call	_rtcc_get_month	;wreg free
 37047  01507C  0100               	movlb	0	; () banked
 37048  01507E  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 37049                           
 37050                           ;rtcc.c: 441: date[2] = rtcc_get_day();
 37051  015080  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
 37052  015084  0100               	movlb	0	; () banked
 37053  015086  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 37054                           
 37055                           ;rtcc.c: 442: date[3] = rtcc_get_hours();
 37056  015088  EC25  F0AF         	call	_rtcc_get_hours	;wreg free
 37057  01508C  0100               	movlb	0	; () banked
 37058  01508E  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 37059                           
 37060                           ;rtcc.c: 443: date[4] = rtcc_get_minutes();
 37061  015090  EC1E  F0AF         	call	_rtcc_get_minutes	;wreg free
 37062  015094  0100               	movlb	0	; () banked
 37063  015096  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 37064                           
 37065                           ;rtcc.c: 444: date[5] = rtcc_get_seconds();
 37066  015098  EC10  F0AF         	call	_rtcc_get_seconds	;wreg free
 37067  01509C  0100               	movlb	0	; () banked
 37068  01509E  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 37069                           
 37070                           ; BSR set to: 0
 37071                           ;rtcc.c: 446: i2c_eeprom_write(0x040, &date[0], 6);
 37072  0150A0  0E00               	movlw	0
 37073  0150A2  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 37074  0150A4  0E40               	movlw	64
 37075  0150A6  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 37076  0150A8  0E85               	movlw	low rtcc_write_eeprom@date
 37077  0150AA  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 37078  0150AC  0E00               	movlw	high rtcc_write_eeprom@date
 37079  0150AE  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 37080  0150B0  0E06               	movlw	6
 37081  0150B2  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 37082  0150B4  EC18  F09E         	call	_i2c_eeprom_write	;wreg free
 37083  0150B8  0012               	return		;funcret
 37084  0150BA                     __end_of_rtcc_write_eeprom:
 37085                           	opt stack 0
 37086                           tosu	equ	0xFFF
 37087                           tosh	equ	0xFFE
 37088                           tosl	equ	0xFFD
 37089                           pclath	equ	0xFFA
 37090                           tblptru	equ	0xFF8
 37091                           tblptrh	equ	0xFF7
 37092                           tblptrl	equ	0xFF6
 37093                           tablat	equ	0xFF5
 37094                           prodh	equ	0xFF4
 37095                           prodl	equ	0xFF3
 37096                           intcon	equ	0xFF2
 37097                           intcon2	equ	0xFF1
 37098                           intcon3	equ	0xFF0
 37099                           postinc0	equ	0xFEE
 37100                           wreg	equ	0xFE8
 37101                           indf1	equ	0xFE7
 37102                           postinc1	equ	0xFE6
 37103                           postdec1	equ	0xFE5
 37104                           plusw1	equ	0xFE3
 37105                           fsr1h	equ	0xFE2
 37106                           fsr1l	equ	0xFE1
 37107                           indf2	equ	0xFDF
 37108                           postinc2	equ	0xFDE
 37109                           postdec2	equ	0xFDD
 37110                           plusw2	equ	0xFDB
 37111                           fsr2h	equ	0xFDA
 37112                           fsr2l	equ	0xFD9
 37113                           status	equ	0xFD8
 37114                           
 37115 ;; *************** function _i2c_eeprom_write *****************
 37116 ;; Defined at:
 37117 ;;		line 542 in file "i2c.c"
 37118 ;; Parameters:    Size  Location     Type
 37119 ;;  address         2   10[BANK0 ] unsigned int 
 37120 ;;  data            2   12[BANK0 ] PTR unsigned char 
 37121 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 37122 ;;  length          1   14[BANK0 ] unsigned char 
 37123 ;; Auto vars:     Size  Location     Type
 37124 ;;  dat            17   18[BANK0 ] unsigned char [17]
 37125 ;;  cntr            1   36[BANK0 ] unsigned char 
 37126 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 37127 ;; Return value:  Size  Location     Type
 37128 ;;                  1    wreg      void 
 37129 ;; Registers used:
 37130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37131 ;; Tracked objects:
 37132 ;;		On entry : 0/0
 37133 ;;		On exit  : 0/0
 37134 ;;		Unchanged: 0/0
 37135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37136 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37137 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37138 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37139 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37140 ;;Total ram usage:       27 bytes
 37141 ;; Hardware stack levels used:    1
 37142 ;; Hardware stack levels required when called:   12
 37143 ;; This function calls:
 37144 ;;		__i2c_write
 37145 ;;		_i2c_set_frequency
 37146 ;; This function is called by:
 37147 ;;		__write_calibration
 37148 ;;		_rtcc_write_eeprom
 37149 ;; This function uses a non-reentrant model
 37150 ;;
 37151                           
 37152                           	psect	text170
 37153  013C30                     __ptext170:
 37154                           	opt stack 0
 37155  013C30                     _i2c_eeprom_write:
 37156                           	opt stack 15
 37157                           
 37158                           ;i2c.c: 544: uint8_t cntr;;i2c.c: 545: uint8_t slave_address;;i2c.c: 546: uint8_t dat[17
      +                          ];;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 37159                           
 37160                           ;incstack = 0
 37161  013C30  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 37162  013C34  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 37163  013C38  0E07               	movlw	7
 37164  013C3A  0100               	movlb	0	; () banked
 37165  013C3C  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 37166  013C3E                     u17765:
 37167  013C3E  90D8               	bcf	status,0,c
 37168  013C40  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 37169  013C42  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 37170  013C44  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 37171  013C46  D7FB               	goto	u17765
 37172  013C48  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 37173  013C4A  0B0E               	andlw	14
 37174  013C4C  09A0               	iorlw	160
 37175  013C4E  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 37176                           
 37177                           ; BSR set to: 0
 37178                           ;i2c.c: 549: dat[0] = address & 0xFF;
 37179  013C50  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 37180                           
 37181                           ;i2c.c: 551: length &= 0b00001111;
 37182  013C54  0E0F               	movlw	15
 37183  013C56  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 37184                           
 37185                           ; BSR set to: 0
 37186                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 37187  013C58  0E00               	movlw	0
 37188  013C5A  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 37189  013C5C  D018               	goto	l1615
 37190  013C5E                     
 37191                           ; BSR set to: 0
 37192                           ;i2c.c: 553: {;i2c.c: 554: dat[cntr+1] = data[cntr];
 37193                           
 37194                           ; BSR set to: 0
 37195  013C5E  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37196  013C60  0D01               	mullw	1
 37197  013C62  50F3               	movf	prodl,w,c
 37198  013C64  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 37199  013C66  6ED9               	movwf	fsr2l,c
 37200  013C68  50F4               	movf	prodh,w,c
 37201  013C6A  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 37202  013C6C  6EDA               	movwf	fsr2h,c
 37203  013C6E  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37204  013C70  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 37205  013C72  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 37206  013C74  0E01               	movlw	1
 37207  013C76  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 37208  013C78  0E00               	movlw	0
 37209  013C7A  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 37210  013C7C  0E72               	movlw	low i2c_eeprom_write@dat
 37211  013C7E  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 37212  013C80  6EE1               	movwf	fsr1l,c
 37213  013C82  0E00               	movlw	high i2c_eeprom_write@dat
 37214  013C84  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 37215  013C86  6EE2               	movwf	fsr1h,c
 37216  013C88  CFDF FFE7          	movff	indf2,indf1
 37217                           
 37218                           ; BSR set to: 0
 37219  013C8C  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 37220  013C8E                     l1615:
 37221                           
 37222                           ; BSR set to: 0
 37223                           
 37224                           ; BSR set to: 0
 37225  013C8E  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 37226  013C90  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 37227  013C92  A0D8               	btfss	status,0,c
 37228  013C94  D7E4               	goto	l1616
 37229                           
 37230                           ; BSR set to: 0
 37231                           ;i2c.c: 555: };i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 37232                           
 37233                           ; BSR set to: 0
 37234  013C96  0E02               	movlw	2
 37235  013C98  ECB8  F0A0         	call	_i2c_set_frequency
 37236                           
 37237                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 37238  013C9C  0E72               	movlw	low i2c_eeprom_write@dat
 37239  013C9E  0100               	movlb	0	; () banked
 37240  013CA0  6F65               	movwf	__i2c_write@data& (0+255),b
 37241  013CA2  0E00               	movlw	high i2c_eeprom_write@dat
 37242  013CA4  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 37243  013CA6  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 37244  013CA8  6F67               	movwf	__i2c_write@length& (0+255),b
 37245  013CAA  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 37246  013CAC  EC27  F0A7         	call	__i2c_write
 37247  013CB0  0012               	return		;funcret
 37248  013CB2                     __end_of_i2c_eeprom_write:
 37249                           	opt stack 0
 37250                           tosu	equ	0xFFF
 37251                           tosh	equ	0xFFE
 37252                           tosl	equ	0xFFD
 37253                           pclath	equ	0xFFA
 37254                           tblptru	equ	0xFF8
 37255                           tblptrh	equ	0xFF7
 37256                           tblptrl	equ	0xFF6
 37257                           tablat	equ	0xFF5
 37258                           prodh	equ	0xFF4
 37259                           prodl	equ	0xFF3
 37260                           intcon	equ	0xFF2
 37261                           intcon2	equ	0xFF1
 37262                           intcon3	equ	0xFF0
 37263                           postinc0	equ	0xFEE
 37264                           wreg	equ	0xFE8
 37265                           indf1	equ	0xFE7
 37266                           postinc1	equ	0xFE6
 37267                           postdec1	equ	0xFE5
 37268                           plusw1	equ	0xFE3
 37269                           fsr1h	equ	0xFE2
 37270                           fsr1l	equ	0xFE1
 37271                           indf2	equ	0xFDF
 37272                           postinc2	equ	0xFDE
 37273                           postdec2	equ	0xFDD
 37274                           plusw2	equ	0xFDB
 37275                           fsr2h	equ	0xFDA
 37276                           fsr2l	equ	0xFD9
 37277                           status	equ	0xFD8
 37278                           
 37279 ;; *************** function _i2c_set_frequency *****************
 37280 ;; Defined at:
 37281 ;;		line 107 in file "i2c.c"
 37282 ;; Parameters:    Size  Location     Type
 37283 ;;  frequency       1    wreg     enum E6736
 37284 ;; Auto vars:     Size  Location     Type
 37285 ;;  frequency       1    0[BANK0 ] enum E6736
 37286 ;; Return value:  Size  Location     Type
 37287 ;;                  1    wreg      void 
 37288 ;; Registers used:
 37289 ;;		wreg, status,2, status,0
 37290 ;; Tracked objects:
 37291 ;;		On entry : 0/0
 37292 ;;		On exit  : 0/0
 37293 ;;		Unchanged: 0/0
 37294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37299 ;;Total ram usage:        1 bytes
 37300 ;; Hardware stack levels used:    1
 37301 ;; Hardware stack levels required when called:   10
 37302 ;; This function calls:
 37303 ;;		Nothing
 37304 ;; This function is called by:
 37305 ;;		_i2c_init
 37306 ;;		_i2c_display_send_init_sequence
 37307 ;;		__ic2_display_set_address
 37308 ;;		_i2c_display_cursor
 37309 ;;		_i2c_display_write_fixed
 37310 ;;		_i2c_digipot_reset_on
 37311 ;;		_i2c_digipot_reset_off
 37312 ;;		_i2c_digipot_backlight
 37313 ;;		_i2c_adc_start
 37314 ;;		_i2c_adc_read
 37315 ;;		_i2c_eeprom_write
 37316 ;;		_i2c_eeprom_read
 37317 ;;		_i2c_display_init
 37318 ;;		_i2c_display_write
 37319 ;;		_i2c_digipot_set_defaults
 37320 ;;		_i2c_eeprom_writeByte
 37321 ;;		_i2c_eeprom_readByte
 37322 ;; This function uses a non-reentrant model
 37323 ;;
 37324                           
 37325                           	psect	text171
 37326  014170                     __ptext171:
 37327                           	opt stack 0
 37328  014170                     _i2c_set_frequency:
 37329                           	opt stack 18
 37330                           
 37331                           ;incstack = 0
 37332                           ;i2c_set_frequency@frequency stored from wreg
 37333  014170  0100               	movlb	0	; () banked
 37334  014172  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 37335                           
 37336                           ;i2c.c: 109: switch(os.clockFrequency)
 37337  014174  D027               	goto	l1533
 37338  014176                     
 37339                           ;i2c.c: 112: SSP1ADD = 0;
 37340  014176  0E00               	movlw	0
 37341  014178  D017               	goto	L49
 37342  01417A                     
 37343                           ;i2c.c: 118: SSP1ADD = 19;
 37344  01417A  0E13               	movlw	19
 37345  01417C  D015               	goto	L49
 37346  01417E                     
 37347                           ;i2c.c: 121: SSP1ADD = 9;
 37348  01417E  0E09               	movlw	9
 37349  014180  D013               	goto	L49
 37350  014182                     
 37351                           ;i2c.c: 124: SSP1ADD = 4;
 37352  014182  0E04               	movlw	4
 37353  014184  D011               	goto	L49
 37354  014186  0100               	movlb	0	; () banked
 37355  014188  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 37356                           
 37357                           ; Switch size 1, requested type "space"
 37358                           ; Number of cases is 3, Range of values is 0 to 2
 37359                           ; switch strategies available:
 37360                           ; Name         Instructions Cycles
 37361                           ; simple_byte           10     6 (average)
 37362                           ;	Chosen strategy is simple_byte
 37363  01418A  0A00               	xorlw	0	; case 0
 37364  01418C  B4D8               	btfsc	status,2,c
 37365  01418E  D7F5               	goto	l1538
 37366  014190  0A01               	xorlw	1	; case 1
 37367  014192  B4D8               	btfsc	status,2,c
 37368  014194  D7F4               	goto	l1540
 37369  014196  0A03               	xorlw	3	; case 2
 37370  014198  B4D8               	btfsc	status,2,c
 37371  01419A  D7F3               	goto	l1541
 37372                           
 37373                           ; BSR set to: 0
 37374                           ;i2c.c: 127: break;
 37375  01419C  D01E               	goto	l1535
 37376  01419E                     
 37377                           ; BSR set to: 0
 37378                           ;i2c.c: 132: SSP1ADD = 119;
 37379                           
 37380                           ; BSR set to: 0
 37381  01419E  0E77               	movlw	119
 37382  0141A0  D003               	goto	L49
 37383  0141A2                     
 37384                           ; BSR set to: 0
 37385                           ;i2c.c: 135: SSP1ADD = 59;
 37386                           
 37387                           ; BSR set to: 0
 37388  0141A2  0E3B               	movlw	59
 37389  0141A4  D001               	goto	L49
 37390  0141A6                     
 37391                           ; BSR set to: 0
 37392                           ;i2c.c: 138: SSP1ADD = 29;
 37393                           
 37394                           ; BSR set to: 0
 37395  0141A6  0E1D               	movlw	29
 37396  0141A8                     L49:
 37397  0141A8  6EC8               	movwf	4040,c	;volatile
 37398                           
 37399                           ; BSR set to: 0
 37400                           ;i2c.c: 140: }
 37401                           
 37402                           ;i2c.c: 139: break;
 37403  0141AA  D017               	goto	l1535
 37404  0141AC                     
 37405                           ; BSR set to: 0
 37406  0141AC  0100               	movlb	0	; () banked
 37407  0141AE  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 37408                           
 37409                           ; Switch size 1, requested type "space"
 37410                           ; Number of cases is 3, Range of values is 0 to 2
 37411                           ; switch strategies available:
 37412                           ; Name         Instructions Cycles
 37413                           ; simple_byte           10     6 (average)
 37414                           ;	Chosen strategy is simple_byte
 37415  0141B0  0A00               	xorlw	0	; case 0
 37416  0141B2  B4D8               	btfsc	status,2,c
 37417  0141B4  D7F4               	goto	l1544
 37418  0141B6  0A01               	xorlw	1	; case 1
 37419  0141B8  B4D8               	btfsc	status,2,c
 37420  0141BA  D7F3               	goto	l1546
 37421  0141BC  0A03               	xorlw	3	; case 2
 37422  0141BE  B4D8               	btfsc	status,2,c
 37423  0141C0  D7F2               	goto	l1547
 37424                           
 37425                           ; BSR set to: 0
 37426                           ;i2c.c: 142: }
 37427                           
 37428                           ; BSR set to: 0
 37429                           ;i2c.c: 141: break;
 37430  0141C2  D00B               	goto	l1535
 37431  0141C4                     l1533:
 37432                           
 37433                           ; BSR set to: 0
 37434  0141C4  0102               	movlb	2	; () banked
 37435  0141C6  5100               	movf	_os& (0+255),w,b	;volatile
 37436                           
 37437                           ; Switch size 1, requested type "space"
 37438                           ; Number of cases is 3, Range of values is 0 to 2
 37439                           ; switch strategies available:
 37440                           ; Name         Instructions Cycles
 37441                           ; simple_byte           10     6 (average)
 37442                           ;	Chosen strategy is simple_byte
 37443  0141C8  0A00               	xorlw	0	; case 0
 37444  0141CA  B4D8               	btfsc	status,2,c
 37445  0141CC  D7D4               	goto	l1534
 37446  0141CE  0A01               	xorlw	1	; case 1
 37447  0141D0  B4D8               	btfsc	status,2,c
 37448  0141D2  D7D9               	goto	l1537
 37449  0141D4  0A03               	xorlw	3	; case 2
 37450  0141D6  B4D8               	btfsc	status,2,c
 37451  0141D8  D7E9               	goto	l1543
 37452  0141DA                     l1535:
 37453                           
 37454                           ;i2c.c: 144: i2c_frequency = frequency;
 37455  0141DA  C060  F1F4         	movff	i2c_set_frequency@frequency,_i2c_frequency
 37456  0141DE  0012               	return		;funcret
 37457  0141E0                     __end_of_i2c_set_frequency:
 37458                           	opt stack 0
 37459                           tosu	equ	0xFFF
 37460                           tosh	equ	0xFFE
 37461                           tosl	equ	0xFFD
 37462                           pclath	equ	0xFFA
 37463                           tblptru	equ	0xFF8
 37464                           tblptrh	equ	0xFF7
 37465                           tblptrl	equ	0xFF6
 37466                           tablat	equ	0xFF5
 37467                           prodh	equ	0xFF4
 37468                           prodl	equ	0xFF3
 37469                           intcon	equ	0xFF2
 37470                           intcon2	equ	0xFF1
 37471                           intcon3	equ	0xFF0
 37472                           postinc0	equ	0xFEE
 37473                           wreg	equ	0xFE8
 37474                           indf1	equ	0xFE7
 37475                           postinc1	equ	0xFE6
 37476                           postdec1	equ	0xFE5
 37477                           plusw1	equ	0xFE3
 37478                           fsr1h	equ	0xFE2
 37479                           fsr1l	equ	0xFE1
 37480                           indf2	equ	0xFDF
 37481                           postinc2	equ	0xFDE
 37482                           postdec2	equ	0xFDD
 37483                           plusw2	equ	0xFDB
 37484                           fsr2h	equ	0xFDA
 37485                           fsr2l	equ	0xFD9
 37486                           status	equ	0xFD8
 37487                           
 37488 ;; *************** function __i2c_write *****************
 37489 ;; Defined at:
 37490 ;;		line 148 in file "i2c.c"
 37491 ;; Parameters:    Size  Location     Type
 37492 ;;  slave_addres    1    wreg     unsigned char 
 37493 ;;  data            2    5[BANK0 ] PTR unsigned char 
 37494 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 37495 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 37496 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 37497 ;;  length          1    7[BANK0 ] unsigned char 
 37498 ;; Auto vars:     Size  Location     Type
 37499 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 37500 ;;  cntr            1    9[BANK0 ] unsigned char 
 37501 ;; Return value:  Size  Location     Type
 37502 ;;                  1    wreg      void 
 37503 ;; Registers used:
 37504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37505 ;; Tracked objects:
 37506 ;;		On entry : 0/0
 37507 ;;		On exit  : 0/0
 37508 ;;		Unchanged: 0/0
 37509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37510 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37513 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37514 ;;Total ram usage:        5 bytes
 37515 ;; Hardware stack levels used:    1
 37516 ;; Hardware stack levels required when called:   11
 37517 ;; This function calls:
 37518 ;;		__i2c_send
 37519 ;;		__i2c_start
 37520 ;;		__i2c_stop
 37521 ;;		__i2c_wait_idle
 37522 ;; This function is called by:
 37523 ;;		_i2c_display_send_init_sequence
 37524 ;;		__ic2_display_set_address
 37525 ;;		_i2c_digipot_reset_on
 37526 ;;		_i2c_digipot_reset_off
 37527 ;;		_i2c_digipot_backlight
 37528 ;;		_i2c_adc_start
 37529 ;;		_i2c_eeprom_write
 37530 ;;		_i2c_eeprom_read
 37531 ;;		_i2c_display_init
 37532 ;;		_i2c_digipot_set_defaults
 37533 ;;		_i2c_eeprom_writeByte
 37534 ;;		_i2c_eeprom_readByte
 37535 ;; This function uses a non-reentrant model
 37536 ;;
 37537                           
 37538                           	psect	text172
 37539  014E4E                     __ptext172:
 37540                           	opt stack 0
 37541  014E4E                     __i2c_write:
 37542                           	opt stack 17
 37543                           
 37544                           ;incstack = 0
 37545                           ;__i2c_write@slave_address stored from wreg
 37546  014E4E  0100               	movlb	0	; () banked
 37547  014E50  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 37548                           
 37549                           ;i2c.c: 150: uint8_t cntr;;i2c.c: 152: _i2c_wait_idle();
 37550  014E52  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 37551                           
 37552                           ;i2c.c: 153: _i2c_start();
 37553  014E56  EC67  F0AF         	call	__i2c_start	;wreg free
 37554                           
 37555                           ;i2c.c: 154: _i2c_wait_idle();
 37556  014E5A  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 37557                           
 37558                           ;i2c.c: 155: _i2c_send(slave_address);
 37559  014E5E  0100               	movlb	0	; () banked
 37560  014E60  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 37561  014E62  EC5E  F0AF         	call	__i2c_send
 37562                           
 37563                           ;i2c.c: 156: _i2c_wait_idle();
 37564  014E66  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 37565                           
 37566                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 37567  014E6A  0E00               	movlw	0
 37568  014E6C  0100               	movlb	0	; () banked
 37569  014E6E  6F69               	movwf	__i2c_write@cntr& (0+255),b
 37570  014E70  D00F               	goto	l1551
 37571  014E72                     
 37572                           ; BSR set to: 0
 37573                           ;i2c.c: 159: {;i2c.c: 160: _i2c_send(data[cntr]);
 37574                           
 37575                           ; BSR set to: 0
 37576  014E72  5169               	movf	__i2c_write@cntr& (0+255),w,b
 37577  014E74  0D01               	mullw	1
 37578  014E76  50F3               	movf	prodl,w,c
 37579  014E78  2565               	addwf	__i2c_write@data& (0+255),w,b
 37580  014E7A  6ED9               	movwf	fsr2l,c
 37581  014E7C  50F4               	movf	prodh,w,c
 37582  014E7E  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 37583  014E80  6EDA               	movwf	fsr2h,c
 37584  014E82  50DF               	movf	indf2,w,c
 37585  014E84  EC5E  F0AF         	call	__i2c_send
 37586                           
 37587                           ;i2c.c: 161: _i2c_wait_idle();
 37588  014E88  EC95  F0A2         	call	__i2c_wait_idle	;wreg free
 37589  014E8C  0100               	movlb	0	; () banked
 37590  014E8E  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 37591  014E90                     l1551:
 37592                           
 37593                           ; BSR set to: 0
 37594                           
 37595                           ; BSR set to: 0
 37596  014E90  5167               	movf	__i2c_write@length& (0+255),w,b
 37597  014E92  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 37598  014E94  A0D8               	btfss	status,0,c
 37599  014E96  D7ED               	goto	l1552
 37600                           
 37601                           ; BSR set to: 0
 37602                           ;i2c.c: 162: };i2c.c: 164: _i2c_stop();
 37603                           
 37604                           ; BSR set to: 0
 37605  014E98  EC63  F0AF         	call	__i2c_stop	;wreg free
 37606  014E9C  0012               	return		;funcret
 37607  014E9E                     __end_of__i2c_write:
 37608                           	opt stack 0
 37609                           tosu	equ	0xFFF
 37610                           tosh	equ	0xFFE
 37611                           tosl	equ	0xFFD
 37612                           pclath	equ	0xFFA
 37613                           tblptru	equ	0xFF8
 37614                           tblptrh	equ	0xFF7
 37615                           tblptrl	equ	0xFF6
 37616                           tablat	equ	0xFF5
 37617                           prodh	equ	0xFF4
 37618                           prodl	equ	0xFF3
 37619                           intcon	equ	0xFF2
 37620                           intcon2	equ	0xFF1
 37621                           intcon3	equ	0xFF0
 37622                           postinc0	equ	0xFEE
 37623                           wreg	equ	0xFE8
 37624                           indf1	equ	0xFE7
 37625                           postinc1	equ	0xFE6
 37626                           postdec1	equ	0xFE5
 37627                           plusw1	equ	0xFE3
 37628                           fsr1h	equ	0xFE2
 37629                           fsr1l	equ	0xFE1
 37630                           indf2	equ	0xFDF
 37631                           postinc2	equ	0xFDE
 37632                           postdec2	equ	0xFDD
 37633                           plusw2	equ	0xFDB
 37634                           fsr2h	equ	0xFDA
 37635                           fsr2l	equ	0xFD9
 37636                           status	equ	0xFD8
 37637                           
 37638 ;; *************** function __i2c_wait_idle *****************
 37639 ;; Defined at:
 37640 ;;		line 45 in file "i2c.c"
 37641 ;; Parameters:    Size  Location     Type
 37642 ;;		None
 37643 ;; Auto vars:     Size  Location     Type
 37644 ;;		None
 37645 ;; Return value:  Size  Location     Type
 37646 ;;                  1    wreg      void 
 37647 ;; Registers used:
 37648 ;;		wreg, status,2, status,0
 37649 ;; Tracked objects:
 37650 ;;		On entry : 0/0
 37651 ;;		On exit  : 0/0
 37652 ;;		Unchanged: 0/0
 37653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37656 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37657 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37658 ;;Total ram usage:        5 bytes
 37659 ;; Hardware stack levels used:    1
 37660 ;; Hardware stack levels required when called:   10
 37661 ;; This function calls:
 37662 ;;		Nothing
 37663 ;; This function is called by:
 37664 ;;		__i2c_write
 37665 ;;		__i2c_read
 37666 ;;		_i2c_display_write_fixed
 37667 ;;		_i2c_adc_read
 37668 ;;		_i2c_display_write
 37669 ;; This function uses a non-reentrant model
 37670 ;;
 37671                           
 37672                           	psect	text173
 37673  01452A                     __ptext173:
 37674                           	opt stack 0
 37675  01452A                     __i2c_wait_idle:
 37676                           	opt stack 17
 37677                           
 37678                           ;i2c.c: 47: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 37679                           
 37680                           ;incstack = 0
 37681  01452A  A4C7               	btfss	4039,2,c	;volatile
 37682  01452C  D004               	goto	u8940
 37683  01452E  0100               	movlb	0	; () banked
 37684  014530  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 37685  014532  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 37686  014534  D002               	goto	u8948
 37687  014536                     u8940:
 37688  014536  0100               	movlb	0	; () banked
 37689  014538  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 37690  01453A                     u8948:
 37691  01453A  A0C5               	btfss	4037,0,c	;volatile
 37692  01453C  D003               	goto	u8950
 37693  01453E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 37694  014540  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 37695  014542  D002               	goto	u8958
 37696  014544                     u8950:
 37697  014544  0100               	movlb	0	; () banked
 37698  014546  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 37699  014548                     u8958:
 37700  014548  A2C5               	btfss	4037,1,c	;volatile
 37701  01454A  D003               	goto	u8960
 37702  01454C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 37703  01454E  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 37704  014550  D002               	goto	u8968
 37705  014552                     u8960:
 37706  014552  0100               	movlb	0	; () banked
 37707  014554  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 37708  014556                     u8968:
 37709  014556  A4C5               	btfss	4037,2,c	;volatile
 37710  014558  D003               	goto	u8970
 37711  01455A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 37712  01455C  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 37713  01455E  D002               	goto	u8978
 37714  014560                     u8970:
 37715  014560  0100               	movlb	0	; () banked
 37716  014562  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 37717  014564                     u8978:
 37718  014564  A6C5               	btfss	4037,3,c	;volatile
 37719  014566  D003               	goto	u8980
 37720  014568  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 37721  01456A  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 37722  01456C  D002               	goto	u8988
 37723  01456E                     u8980:
 37724  01456E  0100               	movlb	0	; () banked
 37725  014570  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 37726  014572                     u8988:
 37727  014572  A8C5               	btfss	4037,4,c	;volatile
 37728  014574  D002               	goto	u8990
 37729  014576  0E01               	movlw	1
 37730  014578  D001               	goto	u8996
 37731  01457A                     u8990:
 37732  01457A  0E00               	movlw	0
 37733  01457C                     u8996:
 37734  01457C  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 37735  01457E  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 37736  014580  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 37737  014582  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 37738  014584  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 37739  014586  0900               	iorlw	0
 37740  014588  B4D8               	btfsc	status,2,c
 37741  01458A  0012               	return	
 37742  01458C  D7CE               	goto	__i2c_wait_idle
 37743  01458E                     __end_of__i2c_wait_idle:
 37744                           	opt stack 0
 37745                           tosu	equ	0xFFF
 37746                           tosh	equ	0xFFE
 37747                           tosl	equ	0xFFD
 37748                           pclath	equ	0xFFA
 37749                           tblptru	equ	0xFF8
 37750                           tblptrh	equ	0xFF7
 37751                           tblptrl	equ	0xFF6
 37752                           tablat	equ	0xFF5
 37753                           prodh	equ	0xFF4
 37754                           prodl	equ	0xFF3
 37755                           intcon	equ	0xFF2
 37756                           intcon2	equ	0xFF1
 37757                           intcon3	equ	0xFF0
 37758                           postinc0	equ	0xFEE
 37759                           wreg	equ	0xFE8
 37760                           indf1	equ	0xFE7
 37761                           postinc1	equ	0xFE6
 37762                           postdec1	equ	0xFE5
 37763                           plusw1	equ	0xFE3
 37764                           fsr1h	equ	0xFE2
 37765                           fsr1l	equ	0xFE1
 37766                           indf2	equ	0xFDF
 37767                           postinc2	equ	0xFDE
 37768                           postdec2	equ	0xFDD
 37769                           plusw2	equ	0xFDB
 37770                           fsr2h	equ	0xFDA
 37771                           fsr2l	equ	0xFD9
 37772                           status	equ	0xFD8
 37773                           
 37774 ;; *************** function __i2c_stop *****************
 37775 ;; Defined at:
 37776 ;;		line 72 in file "i2c.c"
 37777 ;; Parameters:    Size  Location     Type
 37778 ;;		None
 37779 ;; Auto vars:     Size  Location     Type
 37780 ;;		None
 37781 ;; Return value:  Size  Location     Type
 37782 ;;                  1    wreg      void 
 37783 ;; Registers used:
 37784 ;;		None
 37785 ;; Tracked objects:
 37786 ;;		On entry : 0/0
 37787 ;;		On exit  : 0/0
 37788 ;;		Unchanged: 0/0
 37789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37794 ;;Total ram usage:        0 bytes
 37795 ;; Hardware stack levels used:    1
 37796 ;; Hardware stack levels required when called:   10
 37797 ;; This function calls:
 37798 ;;		Nothing
 37799 ;; This function is called by:
 37800 ;;		__i2c_write
 37801 ;;		__i2c_read
 37802 ;;		_i2c_display_write_fixed
 37803 ;;		_i2c_adc_read
 37804 ;;		_i2c_display_write
 37805 ;; This function uses a non-reentrant model
 37806 ;;
 37807                           
 37808                           	psect	text174
 37809  015EC6                     __ptext174:
 37810                           	opt stack 0
 37811  015EC6                     __i2c_stop:
 37812                           	opt stack 17
 37813                           
 37814                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 37815                           
 37816                           ; BSR set to: 0
 37817                           ;incstack = 0
 37818  015EC6  84C5               	bsf	4037,2,c	;volatile
 37819  015EC8  A4C5               	btfss	4037,2,c	;volatile
 37820  015ECA  0012               	return	
 37821  015ECC  D7FD               	goto	l1510
 37822  015ECE                     __end_of__i2c_stop:
 37823                           	opt stack 0
 37824                           tosu	equ	0xFFF
 37825                           tosh	equ	0xFFE
 37826                           tosl	equ	0xFFD
 37827                           pclath	equ	0xFFA
 37828                           tblptru	equ	0xFF8
 37829                           tblptrh	equ	0xFF7
 37830                           tblptrl	equ	0xFF6
 37831                           tablat	equ	0xFF5
 37832                           prodh	equ	0xFF4
 37833                           prodl	equ	0xFF3
 37834                           intcon	equ	0xFF2
 37835                           intcon2	equ	0xFF1
 37836                           intcon3	equ	0xFF0
 37837                           postinc0	equ	0xFEE
 37838                           wreg	equ	0xFE8
 37839                           indf1	equ	0xFE7
 37840                           postinc1	equ	0xFE6
 37841                           postdec1	equ	0xFE5
 37842                           plusw1	equ	0xFE3
 37843                           fsr1h	equ	0xFE2
 37844                           fsr1l	equ	0xFE1
 37845                           indf2	equ	0xFDF
 37846                           postinc2	equ	0xFDE
 37847                           postdec2	equ	0xFDD
 37848                           plusw2	equ	0xFDB
 37849                           fsr2h	equ	0xFDA
 37850                           fsr2l	equ	0xFD9
 37851                           status	equ	0xFD8
 37852                           
 37853 ;; *************** function __i2c_start *****************
 37854 ;; Defined at:
 37855 ;;		line 51 in file "i2c.c"
 37856 ;; Parameters:    Size  Location     Type
 37857 ;;		None
 37858 ;; Auto vars:     Size  Location     Type
 37859 ;;		None
 37860 ;; Return value:  Size  Location     Type
 37861 ;;                  1    wreg      void 
 37862 ;; Registers used:
 37863 ;;		None
 37864 ;; Tracked objects:
 37865 ;;		On entry : 0/0
 37866 ;;		On exit  : 0/0
 37867 ;;		Unchanged: 0/0
 37868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37873 ;;Total ram usage:        0 bytes
 37874 ;; Hardware stack levels used:    1
 37875 ;; Hardware stack levels required when called:   10
 37876 ;; This function calls:
 37877 ;;		Nothing
 37878 ;; This function is called by:
 37879 ;;		__i2c_write
 37880 ;;		__i2c_read
 37881 ;;		_i2c_display_write_fixed
 37882 ;;		_i2c_adc_read
 37883 ;;		_i2c_display_write
 37884 ;; This function uses a non-reentrant model
 37885 ;;
 37886                           
 37887                           	psect	text175
 37888  015ECE                     __ptext175:
 37889                           	opt stack 0
 37890  015ECE                     __i2c_start:
 37891                           	opt stack 17
 37892                           
 37893                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 37894                           
 37895                           ;incstack = 0
 37896  015ECE  80C5               	bsf	4037,0,c	;volatile
 37897  015ED0  A0C5               	btfss	4037,0,c	;volatile
 37898  015ED2  0012               	return	
 37899  015ED4  D7FD               	goto	l1495
 37900  015ED6                     __end_of__i2c_start:
 37901                           	opt stack 0
 37902                           tosu	equ	0xFFF
 37903                           tosh	equ	0xFFE
 37904                           tosl	equ	0xFFD
 37905                           pclath	equ	0xFFA
 37906                           tblptru	equ	0xFF8
 37907                           tblptrh	equ	0xFF7
 37908                           tblptrl	equ	0xFF6
 37909                           tablat	equ	0xFF5
 37910                           prodh	equ	0xFF4
 37911                           prodl	equ	0xFF3
 37912                           intcon	equ	0xFF2
 37913                           intcon2	equ	0xFF1
 37914                           intcon3	equ	0xFF0
 37915                           postinc0	equ	0xFEE
 37916                           wreg	equ	0xFE8
 37917                           indf1	equ	0xFE7
 37918                           postinc1	equ	0xFE6
 37919                           postdec1	equ	0xFE5
 37920                           plusw1	equ	0xFE3
 37921                           fsr1h	equ	0xFE2
 37922                           fsr1l	equ	0xFE1
 37923                           indf2	equ	0xFDF
 37924                           postinc2	equ	0xFDE
 37925                           postdec2	equ	0xFDD
 37926                           plusw2	equ	0xFDB
 37927                           fsr2h	equ	0xFDA
 37928                           fsr2l	equ	0xFD9
 37929                           status	equ	0xFD8
 37930                           
 37931 ;; *************** function __i2c_send *****************
 37932 ;; Defined at:
 37933 ;;		line 58 in file "i2c.c"
 37934 ;; Parameters:    Size  Location     Type
 37935 ;;  dat             1    wreg     unsigned char 
 37936 ;; Auto vars:     Size  Location     Type
 37937 ;;  dat             1    0[BANK0 ] unsigned char 
 37938 ;; Return value:  Size  Location     Type
 37939 ;;                  1    wreg      void 
 37940 ;; Registers used:
 37941 ;;		wreg
 37942 ;; Tracked objects:
 37943 ;;		On entry : 0/0
 37944 ;;		On exit  : 0/0
 37945 ;;		Unchanged: 0/0
 37946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37951 ;;Total ram usage:        1 bytes
 37952 ;; Hardware stack levels used:    1
 37953 ;; Hardware stack levels required when called:   10
 37954 ;; This function calls:
 37955 ;;		Nothing
 37956 ;; This function is called by:
 37957 ;;		__i2c_write
 37958 ;;		__i2c_read
 37959 ;;		_i2c_display_write_fixed
 37960 ;;		_i2c_adc_read
 37961 ;;		_i2c_display_write
 37962 ;; This function uses a non-reentrant model
 37963 ;;
 37964                           
 37965                           	psect	text176
 37966  015EBC                     __ptext176:
 37967                           	opt stack 0
 37968  015EBC                     __i2c_send:
 37969                           	opt stack 17
 37970                           
 37971                           ;incstack = 0
 37972                           ;__i2c_send@dat stored from wreg
 37973  015EBC  0100               	movlb	0	; () banked
 37974  015EBE  6F60               	movwf	__i2c_send@dat& (0+255),b
 37975                           
 37976                           ;i2c.c: 60: SSP1BUF = dat;
 37977  015EC0  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 37978  015EC4  0012               	return		;funcret
 37979  015EC6                     __end_of__i2c_send:
 37980                           	opt stack 0
 37981                           tosu	equ	0xFFF
 37982                           tosh	equ	0xFFE
 37983                           tosl	equ	0xFFD
 37984                           pclath	equ	0xFFA
 37985                           tblptru	equ	0xFF8
 37986                           tblptrh	equ	0xFF7
 37987                           tblptrl	equ	0xFF6
 37988                           tablat	equ	0xFF5
 37989                           prodh	equ	0xFF4
 37990                           prodl	equ	0xFF3
 37991                           intcon	equ	0xFF2
 37992                           intcon2	equ	0xFF1
 37993                           intcon3	equ	0xFF0
 37994                           postinc0	equ	0xFEE
 37995                           wreg	equ	0xFE8
 37996                           indf1	equ	0xFE7
 37997                           postinc1	equ	0xFE6
 37998                           postdec1	equ	0xFE5
 37999                           plusw1	equ	0xFE3
 38000                           fsr1h	equ	0xFE2
 38001                           fsr1l	equ	0xFE1
 38002                           indf2	equ	0xFDF
 38003                           postinc2	equ	0xFDE
 38004                           postdec2	equ	0xFDD
 38005                           plusw2	equ	0xFDB
 38006                           fsr2h	equ	0xFDA
 38007                           fsr2l	equ	0xFD9
 38008                           status	equ	0xFD8
 38009                           
 38010 ;; *************** function __parse_command_long *****************
 38011 ;; Defined at:
 38012 ;;		line 453 in file "app_device_custom_hid.c"
 38013 ;; Parameters:    Size  Location     Type
 38014 ;;  cmd             1    wreg     unsigned char 
 38015 ;;  data            1    3[BANK0 ] unsigned char 
 38016 ;; Auto vars:     Size  Location     Type
 38017 ;;  cmd             1    4[BANK0 ] unsigned char 
 38018 ;; Return value:  Size  Location     Type
 38019 ;;                  1    wreg      void 
 38020 ;; Registers used:
 38021 ;;		wreg, status,2, status,0, cstack
 38022 ;; Tracked objects:
 38023 ;;		On entry : 0/0
 38024 ;;		On exit  : 0/0
 38025 ;;		Unchanged: 0/0
 38026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38027 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38031 ;;Total ram usage:        2 bytes
 38032 ;; Hardware stack levels used:    1
 38033 ;; Hardware stack levels required when called:   12
 38034 ;; This function calls:
 38035 ;;		_buck_remote_change_dutycycle
 38036 ;;		_buck_remote_set_dutycycle
 38037 ;;		_buck_remote_set_enable
 38038 ;;		_buck_remote_set_on
 38039 ;;		_buck_remote_set_synchronous
 38040 ;;		_rtcc_set_day
 38041 ;;		_rtcc_set_hours
 38042 ;;		_rtcc_set_minutes
 38043 ;;		_rtcc_set_month
 38044 ;;		_rtcc_set_seconds
 38045 ;;		_rtcc_set_year
 38046 ;; This function is called by:
 38047 ;;		_APP_DeviceCustomHIDTasks
 38048 ;; This function uses a non-reentrant model
 38049 ;;
 38050                           
 38051                           	psect	text177
 38052  012218                     __ptext177:
 38053                           	opt stack 0
 38054  012218                     __parse_command_long:
 38055                           	opt stack 17
 38056                           
 38057                           ;incstack = 0
 38058                           ;__parse_command_long@cmd stored from wreg
 38059  012218  0100               	movlb	0	; () banked
 38060  01221A  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 38061                           
 38062                           ;app_device_custom_hid.c: 455: switch(cmd)
 38063  01221C  D043               	goto	l1164
 38064  01221E                     
 38065                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 38066  01221E  0100               	movlb	0	; () banked
 38067  012220  5163               	movf	__parse_command_long@data& (0+255),w,b
 38068  012222  EC28  F0AE         	call	_rtcc_set_year
 38069                           
 38070                           ;app_device_custom_hid.c: 459: break;
 38071  012226  0012               	return	
 38072  012228                     
 38073                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 38074  012228  0100               	movlb	0	; () banked
 38075  01222A  5163               	movf	__parse_command_long@data& (0+255),w,b
 38076  01222C  EC40  F0AE         	call	_rtcc_set_month
 38077                           
 38078                           ;app_device_custom_hid.c: 462: break;
 38079  012230  0012               	return	
 38080  012232                     
 38081                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 38082  012232  0100               	movlb	0	; () banked
 38083  012234  5163               	movf	__parse_command_long@data& (0+255),w,b
 38084  012236  EC64  F0AE         	call	_rtcc_set_day
 38085                           
 38086                           ;app_device_custom_hid.c: 465: break;
 38087  01223A  0012               	return	
 38088  01223C                     
 38089                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 38090  01223C  0100               	movlb	0	; () banked
 38091  01223E  5163               	movf	__parse_command_long@data& (0+255),w,b
 38092  012240  EC58  F0AE         	call	_rtcc_set_hours
 38093                           
 38094                           ;app_device_custom_hid.c: 468: break;
 38095  012244  0012               	return	
 38096  012246                     
 38097                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 38098  012246  0100               	movlb	0	; () banked
 38099  012248  5163               	movf	__parse_command_long@data& (0+255),w,b
 38100  01224A  EC4C  F0AE         	call	_rtcc_set_minutes
 38101                           
 38102                           ;app_device_custom_hid.c: 471: break;
 38103  01224E  0012               	return	
 38104  012250                     
 38105                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 38106  012250  0100               	movlb	0	; () banked
 38107  012252  5163               	movf	__parse_command_long@data& (0+255),w,b
 38108  012254  EC34  F0AE         	call	_rtcc_set_seconds
 38109                           
 38110                           ;app_device_custom_hid.c: 474: break;
 38111  012258  0012               	return	
 38112  01225A                     
 38113                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 38114  01225A  0E01               	movlw	1
 38115  01225C  ECCD  F0AD         	call	_buck_remote_set_enable
 38116                           
 38117                           ;app_device_custom_hid.c: 477: break;
 38118  012260  0012               	return	
 38119  012262                     
 38120                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 38121  012262  0E00               	movlw	0
 38122  012264  ECCD  F0AD         	call	_buck_remote_set_enable
 38123                           
 38124                           ;app_device_custom_hid.c: 480: break;
 38125  012268  0012               	return	
 38126  01226A                     
 38127                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 38128  01226A  0E01               	movlw	1
 38129  01226C  EC7C  F0AE         	call	_buck_remote_set_on
 38130                           
 38131                           ;app_device_custom_hid.c: 483: break;
 38132  012270  0012               	return	
 38133  012272                     
 38134                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 38135  012272  0E00               	movlw	0
 38136  012274  EC7C  F0AE         	call	_buck_remote_set_on
 38137                           
 38138                           ;app_device_custom_hid.c: 486: break;
 38139  012278  0012               	return	
 38140  01227A                     
 38141                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 38142  01227A  0E00               	movlw	0
 38143  01227C  EC70  F0AE         	call	_buck_remote_set_synchronous
 38144                           
 38145                           ;app_device_custom_hid.c: 489: break;
 38146  012280  0012               	return	
 38147  012282                     
 38148                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 38149  012282  0E01               	movlw	1
 38150  012284  EC70  F0AE         	call	_buck_remote_set_synchronous
 38151                           
 38152                           ;app_device_custom_hid.c: 492: break;
 38153  012288  0012               	return	
 38154  01228A                     
 38155                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 38156  01228A  0EFF               	movlw	255
 38157  01228C  EC5D  F0A8         	call	_buck_remote_change_dutycycle
 38158                           
 38159                           ;app_device_custom_hid.c: 495: break;
 38160  012290  0012               	return	
 38161  012292                     
 38162                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 38163  012292  0E01               	movlw	1
 38164  012294  EC5D  F0A8         	call	_buck_remote_change_dutycycle
 38165                           
 38166                           ;app_device_custom_hid.c: 498: break;
 38167  012298  0012               	return	
 38168  01229A                     
 38169                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 38170  01229A  0100               	movlb	0	; () banked
 38171  01229C  5163               	movf	__parse_command_long@data& (0+255),w,b
 38172  01229E  ECC3  F0AC         	call	_buck_remote_set_dutycycle
 38173                           
 38174                           ;app_device_custom_hid.c: 502: }
 38175                           
 38176                           ;app_device_custom_hid.c: 501: break;
 38177  0122A2  0012               	return	
 38178  0122A4                     l1164:
 38179  0122A4  0100               	movlb	0	; () banked
 38180  0122A6  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 38181                           
 38182                           ; Switch size 1, requested type "space"
 38183                           ; Number of cases is 15, Range of values is 64 to 78
 38184                           ; switch strategies available:
 38185                           ; Name         Instructions Cycles
 38186                           ; simple_byte           46    24 (average)
 38187                           ;	Chosen strategy is simple_byte
 38188  0122A8  0A40               	xorlw	64	; case 64
 38189  0122AA  B4D8               	btfsc	status,2,c
 38190  0122AC  D7B8               	goto	l1165
 38191  0122AE  0A01               	xorlw	1	; case 65
 38192  0122B0  B4D8               	btfsc	status,2,c
 38193  0122B2  D7BA               	goto	l1167
 38194  0122B4  0A03               	xorlw	3	; case 66
 38195  0122B6  B4D8               	btfsc	status,2,c
 38196  0122B8  D7BC               	goto	l1168
 38197  0122BA  0A01               	xorlw	1	; case 67
 38198  0122BC  B4D8               	btfsc	status,2,c
 38199  0122BE  D7BE               	goto	l1169
 38200  0122C0  0A07               	xorlw	7	; case 68
 38201  0122C2  B4D8               	btfsc	status,2,c
 38202  0122C4  D7C0               	goto	l1170
 38203  0122C6  0A01               	xorlw	1	; case 69
 38204  0122C8  B4D8               	btfsc	status,2,c
 38205  0122CA  D7C2               	goto	l1171
 38206  0122CC  0A03               	xorlw	3	; case 70
 38207  0122CE  B4D8               	btfsc	status,2,c
 38208  0122D0  D7C4               	goto	l1172
 38209  0122D2  0A01               	xorlw	1	; case 71
 38210  0122D4  B4D8               	btfsc	status,2,c
 38211  0122D6  D7C5               	goto	l1173
 38212  0122D8  0A0F               	xorlw	15	; case 72
 38213  0122DA  B4D8               	btfsc	status,2,c
 38214  0122DC  D7C6               	goto	l1174
 38215  0122DE  0A01               	xorlw	1	; case 73
 38216  0122E0  B4D8               	btfsc	status,2,c
 38217  0122E2  D7C7               	goto	l1175
 38218  0122E4  0A03               	xorlw	3	; case 74
 38219  0122E6  B4D8               	btfsc	status,2,c
 38220  0122E8  D7C8               	goto	l1176
 38221  0122EA  0A01               	xorlw	1	; case 75
 38222  0122EC  B4D8               	btfsc	status,2,c
 38223  0122EE  D7C9               	goto	l1177
 38224  0122F0  0A07               	xorlw	7	; case 76
 38225  0122F2  B4D8               	btfsc	status,2,c
 38226  0122F4  D7CA               	goto	l1178
 38227  0122F6  0A01               	xorlw	1	; case 77
 38228  0122F8  B4D8               	btfsc	status,2,c
 38229  0122FA  D7CB               	goto	l1179
 38230  0122FC  0A03               	xorlw	3	; case 78
 38231  0122FE  A4D8               	btfss	status,2,c
 38232  012300  0012               	return	
 38233  012302  D7CB               	goto	l1180
 38234  012304                     __end_of__parse_command_long:
 38235                           	opt stack 0
 38236                           tosu	equ	0xFFF
 38237                           tosh	equ	0xFFE
 38238                           tosl	equ	0xFFD
 38239                           pclath	equ	0xFFA
 38240                           tblptru	equ	0xFF8
 38241                           tblptrh	equ	0xFF7
 38242                           tblptrl	equ	0xFF6
 38243                           tablat	equ	0xFF5
 38244                           prodh	equ	0xFF4
 38245                           prodl	equ	0xFF3
 38246                           intcon	equ	0xFF2
 38247                           intcon2	equ	0xFF1
 38248                           intcon3	equ	0xFF0
 38249                           postinc0	equ	0xFEE
 38250                           wreg	equ	0xFE8
 38251                           indf1	equ	0xFE7
 38252                           postinc1	equ	0xFE6
 38253                           postdec1	equ	0xFE5
 38254                           plusw1	equ	0xFE3
 38255                           fsr1h	equ	0xFE2
 38256                           fsr1l	equ	0xFE1
 38257                           indf2	equ	0xFDF
 38258                           postinc2	equ	0xFDE
 38259                           postdec2	equ	0xFDD
 38260                           plusw2	equ	0xFDB
 38261                           fsr2h	equ	0xFDA
 38262                           fsr2l	equ	0xFD9
 38263                           status	equ	0xFD8
 38264                           
 38265 ;; *************** function _rtcc_set_year *****************
 38266 ;; Defined at:
 38267 ;;		line 141 in file "rtcc.c"
 38268 ;; Parameters:    Size  Location     Type
 38269 ;;  year            1    wreg     unsigned char 
 38270 ;; Auto vars:     Size  Location     Type
 38271 ;;  year            1    0[BANK0 ] unsigned char 
 38272 ;; Return value:  Size  Location     Type
 38273 ;;                  1    wreg      void 
 38274 ;; Registers used:
 38275 ;;		wreg, status,2, cstack
 38276 ;; Tracked objects:
 38277 ;;		On entry : 0/0
 38278 ;;		On exit  : 0/0
 38279 ;;		Unchanged: 0/0
 38280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38284 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38285 ;;Total ram usage:        1 bytes
 38286 ;; Hardware stack levels used:    1
 38287 ;; Hardware stack levels required when called:   11
 38288 ;; This function calls:
 38289 ;;		__rtcc_write_disable
 38290 ;;		__rtcc_write_enable
 38291 ;; This function is called by:
 38292 ;;		__parse_command_long
 38293 ;;		_rtcc_increment_year
 38294 ;;		_rtcc_decrement_year
 38295 ;;		_rtcc_read_eeprom
 38296 ;; This function uses a non-reentrant model
 38297 ;;
 38298                           
 38299                           	psect	text178
 38300  015C50                     __ptext178:
 38301                           	opt stack 0
 38302  015C50                     _rtcc_set_year:
 38303                           	opt stack 16
 38304                           
 38305                           ;incstack = 0
 38306                           ;rtcc_set_year@year stored from wreg
 38307  015C50  0100               	movlb	0	; () banked
 38308  015C52  6F60               	movwf	rtcc_set_year@year& (0+255),b
 38309                           
 38310                           ;rtcc.c: 143: _rtcc_write_enable();
 38311  015C54  EC88  F0AE         	call	__rtcc_write_enable	;wreg free
 38312                           
 38313                           ;rtcc.c: 144: RTCCFGbits.RTCPTR1 = 1;
 38314  015C58  010F               	movlb	15	; () banked
 38315  015C5A  833F               	bsf	63,1,b	;volatile
 38316                           
 38317                           ; BSR set to: 15
 38318                           ;rtcc.c: 145: RTCCFGbits.RTCPTR0 = 1;
 38319  015C5C  813F               	bsf	63,0,b	;volatile
 38320                           
 38321                           ; BSR set to: 15
 38322                           ;rtcc.c: 146: RTCVALL = year;
 38323  015C5E  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 38324                           
 38325                           ;rtcc.c: 147: _rtcc_write_disable();
 38326  015C62  EC93  F0AE         	call	__rtcc_write_disable	;wreg free
 38327  015C66  0012               	return		;funcret
 38328  015C68                     __end_of_rtcc_set_year:
 38329                           	opt stack 0
 38330                           tosu	equ	0xFFF
 38331                           tosh	equ	0xFFE
 38332                           tosl	equ	0xFFD
 38333                           pclath	equ	0xFFA
 38334                           tblptru	equ	0xFF8
 38335                           tblptrh	equ	0xFF7
 38336                           tblptrl	equ	0xFF6
 38337                           tablat	equ	0xFF5
 38338                           prodh	equ	0xFF4
 38339                           prodl	equ	0xFF3
 38340                           intcon	equ	0xFF2
 38341                           intcon2	equ	0xFF1
 38342                           intcon3	equ	0xFF0
 38343                           postinc0	equ	0xFEE
 38344                           wreg	equ	0xFE8
 38345                           indf1	equ	0xFE7
 38346                           postinc1	equ	0xFE6
 38347                           postdec1	equ	0xFE5
 38348                           plusw1	equ	0xFE3
 38349                           fsr1h	equ	0xFE2
 38350                           fsr1l	equ	0xFE1
 38351                           indf2	equ	0xFDF
 38352                           postinc2	equ	0xFDE
 38353                           postdec2	equ	0xFDD
 38354                           plusw2	equ	0xFDB
 38355                           fsr2h	equ	0xFDA
 38356                           fsr2l	equ	0xFD9
 38357                           status	equ	0xFD8
 38358                           
 38359 ;; *************** function _rtcc_set_seconds *****************
 38360 ;; Defined at:
 38361 ;;		line 331 in file "rtcc.c"
 38362 ;; Parameters:    Size  Location     Type
 38363 ;;  seconds         1    wreg     unsigned char 
 38364 ;; Auto vars:     Size  Location     Type
 38365 ;;  seconds         1    0[BANK0 ] unsigned char 
 38366 ;; Return value:  Size  Location     Type
 38367 ;;                  1    wreg      void 
 38368 ;; Registers used:
 38369 ;;		wreg, status,2, cstack
 38370 ;; Tracked objects:
 38371 ;;		On entry : 0/0
 38372 ;;		On exit  : 0/0
 38373 ;;		Unchanged: 0/0
 38374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38378 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38379 ;;Total ram usage:        1 bytes
 38380 ;; Hardware stack levels used:    1
 38381 ;; Hardware stack levels required when called:   11
 38382 ;; This function calls:
 38383 ;;		__rtcc_write_disable
 38384 ;;		__rtcc_write_enable
 38385 ;; This function is called by:
 38386 ;;		__parse_command_long
 38387 ;;		_rtcc_increment_seconds
 38388 ;;		_rtcc_decrement_seconds
 38389 ;;		_rtcc_read_eeprom
 38390 ;; This function uses a non-reentrant model
 38391 ;;
 38392                           
 38393                           	psect	text179
 38394  015C68                     __ptext179:
 38395                           	opt stack 0
 38396  015C68                     _rtcc_set_seconds:
 38397                           	opt stack 16
 38398                           
 38399                           ;incstack = 0
 38400                           ;rtcc_set_seconds@seconds stored from wreg
 38401  015C68  0100               	movlb	0	; () banked
 38402  015C6A  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 38403                           
 38404                           ;rtcc.c: 333: _rtcc_write_enable();
 38405  015C6C  EC88  F0AE         	call	__rtcc_write_enable	;wreg free
 38406                           
 38407                           ;rtcc.c: 334: RTCCFGbits.RTCPTR1 = 0;
 38408  015C70  010F               	movlb	15	; () banked
 38409  015C72  933F               	bcf	63,1,b	;volatile
 38410                           
 38411                           ; BSR set to: 15
 38412                           ;rtcc.c: 335: RTCCFGbits.RTCPTR0 = 0;
 38413  015C74  913F               	bcf	63,0,b	;volatile
 38414                           
 38415                           ; BSR set to: 15
 38416                           ;rtcc.c: 336: RTCVALL = seconds;
 38417  015C76  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 38418                           
 38419                           ;rtcc.c: 337: _rtcc_write_disable();
 38420  015C7A  EC93  F0AE         	call	__rtcc_write_disable	;wreg free
 38421  015C7E  0012               	return		;funcret
 38422  015C80                     __end_of_rtcc_set_seconds:
 38423                           	opt stack 0
 38424                           tosu	equ	0xFFF
 38425                           tosh	equ	0xFFE
 38426                           tosl	equ	0xFFD
 38427                           pclath	equ	0xFFA
 38428                           tblptru	equ	0xFF8
 38429                           tblptrh	equ	0xFF7
 38430                           tblptrl	equ	0xFF6
 38431                           tablat	equ	0xFF5
 38432                           prodh	equ	0xFF4
 38433                           prodl	equ	0xFF3
 38434                           intcon	equ	0xFF2
 38435                           intcon2	equ	0xFF1
 38436                           intcon3	equ	0xFF0
 38437                           postinc0	equ	0xFEE
 38438                           wreg	equ	0xFE8
 38439                           indf1	equ	0xFE7
 38440                           postinc1	equ	0xFE6
 38441                           postdec1	equ	0xFE5
 38442                           plusw1	equ	0xFE3
 38443                           fsr1h	equ	0xFE2
 38444                           fsr1l	equ	0xFE1
 38445                           indf2	equ	0xFDF
 38446                           postinc2	equ	0xFDE
 38447                           postdec2	equ	0xFDD
 38448                           plusw2	equ	0xFDB
 38449                           fsr2h	equ	0xFDA
 38450                           fsr2l	equ	0xFD9
 38451                           status	equ	0xFD8
 38452                           
 38453 ;; *************** function _rtcc_set_month *****************
 38454 ;; Defined at:
 38455 ;;		line 179 in file "rtcc.c"
 38456 ;; Parameters:    Size  Location     Type
 38457 ;;  month           1    wreg     unsigned char 
 38458 ;; Auto vars:     Size  Location     Type
 38459 ;;  month           1    0[BANK0 ] unsigned char 
 38460 ;; Return value:  Size  Location     Type
 38461 ;;                  1    wreg      void 
 38462 ;; Registers used:
 38463 ;;		wreg, status,2, cstack
 38464 ;; Tracked objects:
 38465 ;;		On entry : 0/0
 38466 ;;		On exit  : 0/0
 38467 ;;		Unchanged: 0/0
 38468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38473 ;;Total ram usage:        1 bytes
 38474 ;; Hardware stack levels used:    1
 38475 ;; Hardware stack levels required when called:   11
 38476 ;; This function calls:
 38477 ;;		__rtcc_write_disable
 38478 ;;		__rtcc_write_enable
 38479 ;; This function is called by:
 38480 ;;		__parse_command_long
 38481 ;;		_rtcc_increment_month
 38482 ;;		_rtcc_decrement_month
 38483 ;;		_rtcc_read_eeprom
 38484 ;; This function uses a non-reentrant model
 38485 ;;
 38486                           
 38487                           	psect	text180
 38488  015C80                     __ptext180:
 38489                           	opt stack 0
 38490  015C80                     _rtcc_set_month:
 38491                           	opt stack 16
 38492                           
 38493                           ;incstack = 0
 38494                           ;rtcc_set_month@month stored from wreg
 38495  015C80  0100               	movlb	0	; () banked
 38496  015C82  6F60               	movwf	rtcc_set_month@month& (0+255),b
 38497                           
 38498                           ;rtcc.c: 181: _rtcc_write_enable();
 38499  015C84  EC88  F0AE         	call	__rtcc_write_enable	;wreg free
 38500                           
 38501                           ;rtcc.c: 182: RTCCFGbits.RTCPTR1 = 1;
 38502  015C88  010F               	movlb	15	; () banked
 38503  015C8A  833F               	bsf	63,1,b	;volatile
 38504                           
 38505                           ; BSR set to: 15
 38506                           ;rtcc.c: 183: RTCCFGbits.RTCPTR0 = 0;
 38507  015C8C  913F               	bcf	63,0,b	;volatile
 38508                           
 38509                           ; BSR set to: 15
 38510                           ;rtcc.c: 184: RTCVALH = month;
 38511  015C8E  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 38512                           
 38513                           ;rtcc.c: 185: _rtcc_write_disable();
 38514  015C92  EC93  F0AE         	call	__rtcc_write_disable	;wreg free
 38515  015C96  0012               	return		;funcret
 38516  015C98                     __end_of_rtcc_set_month:
 38517                           	opt stack 0
 38518                           tosu	equ	0xFFF
 38519                           tosh	equ	0xFFE
 38520                           tosl	equ	0xFFD
 38521                           pclath	equ	0xFFA
 38522                           tblptru	equ	0xFF8
 38523                           tblptrh	equ	0xFF7
 38524                           tblptrl	equ	0xFF6
 38525                           tablat	equ	0xFF5
 38526                           prodh	equ	0xFF4
 38527                           prodl	equ	0xFF3
 38528                           intcon	equ	0xFF2
 38529                           intcon2	equ	0xFF1
 38530                           intcon3	equ	0xFF0
 38531                           postinc0	equ	0xFEE
 38532                           wreg	equ	0xFE8
 38533                           indf1	equ	0xFE7
 38534                           postinc1	equ	0xFE6
 38535                           postdec1	equ	0xFE5
 38536                           plusw1	equ	0xFE3
 38537                           fsr1h	equ	0xFE2
 38538                           fsr1l	equ	0xFE1
 38539                           indf2	equ	0xFDF
 38540                           postinc2	equ	0xFDE
 38541                           postdec2	equ	0xFDD
 38542                           plusw2	equ	0xFDB
 38543                           fsr2h	equ	0xFDA
 38544                           fsr2l	equ	0xFD9
 38545                           status	equ	0xFD8
 38546                           
 38547 ;; *************** function _rtcc_set_minutes *****************
 38548 ;; Defined at:
 38549 ;;		line 293 in file "rtcc.c"
 38550 ;; Parameters:    Size  Location     Type
 38551 ;;  minutes         1    wreg     unsigned char 
 38552 ;; Auto vars:     Size  Location     Type
 38553 ;;  minutes         1    0[BANK0 ] unsigned char 
 38554 ;; Return value:  Size  Location     Type
 38555 ;;                  1    wreg      void 
 38556 ;; Registers used:
 38557 ;;		wreg, status,2, cstack
 38558 ;; Tracked objects:
 38559 ;;		On entry : 0/0
 38560 ;;		On exit  : 0/0
 38561 ;;		Unchanged: 0/0
 38562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38567 ;;Total ram usage:        1 bytes
 38568 ;; Hardware stack levels used:    1
 38569 ;; Hardware stack levels required when called:   11
 38570 ;; This function calls:
 38571 ;;		__rtcc_write_disable
 38572 ;;		__rtcc_write_enable
 38573 ;; This function is called by:
 38574 ;;		__parse_command_long
 38575 ;;		_rtcc_increment_minutes
 38576 ;;		_rtcc_decrement_minutes
 38577 ;;		_rtcc_read_eeprom
 38578 ;; This function uses a non-reentrant model
 38579 ;;
 38580                           
 38581                           	psect	text181
 38582  015C98                     __ptext181:
 38583                           	opt stack 0
 38584  015C98                     _rtcc_set_minutes:
 38585                           	opt stack 16
 38586                           
 38587                           ;incstack = 0
 38588                           ;rtcc_set_minutes@minutes stored from wreg
 38589  015C98  0100               	movlb	0	; () banked
 38590  015C9A  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 38591                           
 38592                           ;rtcc.c: 295: _rtcc_write_enable();
 38593  015C9C  EC88  F0AE         	call	__rtcc_write_enable	;wreg free
 38594                           
 38595                           ;rtcc.c: 296: RTCCFGbits.RTCPTR1 = 0;
 38596  015CA0  010F               	movlb	15	; () banked
 38597  015CA2  933F               	bcf	63,1,b	;volatile
 38598                           
 38599                           ; BSR set to: 15
 38600                           ;rtcc.c: 297: RTCCFGbits.RTCPTR0 = 0;
 38601  015CA4  913F               	bcf	63,0,b	;volatile
 38602                           
 38603                           ; BSR set to: 15
 38604                           ;rtcc.c: 298: RTCVALH = minutes;
 38605  015CA6  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 38606                           
 38607                           ;rtcc.c: 299: _rtcc_write_disable();
 38608  015CAA  EC93  F0AE         	call	__rtcc_write_disable	;wreg free
 38609  015CAE  0012               	return		;funcret
 38610  015CB0                     __end_of_rtcc_set_minutes:
 38611                           	opt stack 0
 38612                           tosu	equ	0xFFF
 38613                           tosh	equ	0xFFE
 38614                           tosl	equ	0xFFD
 38615                           pclath	equ	0xFFA
 38616                           tblptru	equ	0xFF8
 38617                           tblptrh	equ	0xFF7
 38618                           tblptrl	equ	0xFF6
 38619                           tablat	equ	0xFF5
 38620                           prodh	equ	0xFF4
 38621                           prodl	equ	0xFF3
 38622                           intcon	equ	0xFF2
 38623                           intcon2	equ	0xFF1
 38624                           intcon3	equ	0xFF0
 38625                           postinc0	equ	0xFEE
 38626                           wreg	equ	0xFE8
 38627                           indf1	equ	0xFE7
 38628                           postinc1	equ	0xFE6
 38629                           postdec1	equ	0xFE5
 38630                           plusw1	equ	0xFE3
 38631                           fsr1h	equ	0xFE2
 38632                           fsr1l	equ	0xFE1
 38633                           indf2	equ	0xFDF
 38634                           postinc2	equ	0xFDE
 38635                           postdec2	equ	0xFDD
 38636                           plusw2	equ	0xFDB
 38637                           fsr2h	equ	0xFDA
 38638                           fsr2l	equ	0xFD9
 38639                           status	equ	0xFD8
 38640                           
 38641 ;; *************** function _rtcc_set_hours *****************
 38642 ;; Defined at:
 38643 ;;		line 255 in file "rtcc.c"
 38644 ;; Parameters:    Size  Location     Type
 38645 ;;  hours           1    wreg     unsigned char 
 38646 ;; Auto vars:     Size  Location     Type
 38647 ;;  hours           1    0[BANK0 ] unsigned char 
 38648 ;; Return value:  Size  Location     Type
 38649 ;;                  1    wreg      void 
 38650 ;; Registers used:
 38651 ;;		wreg, status,2, cstack
 38652 ;; Tracked objects:
 38653 ;;		On entry : 0/0
 38654 ;;		On exit  : 0/0
 38655 ;;		Unchanged: 0/0
 38656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38661 ;;Total ram usage:        1 bytes
 38662 ;; Hardware stack levels used:    1
 38663 ;; Hardware stack levels required when called:   11
 38664 ;; This function calls:
 38665 ;;		__rtcc_write_disable
 38666 ;;		__rtcc_write_enable
 38667 ;; This function is called by:
 38668 ;;		__parse_command_long
 38669 ;;		_rtcc_increment_hours
 38670 ;;		_rtcc_decrement_hours
 38671 ;;		_rtcc_read_eeprom
 38672 ;; This function uses a non-reentrant model
 38673 ;;
 38674                           
 38675                           	psect	text182
 38676  015CB0                     __ptext182:
 38677                           	opt stack 0
 38678  015CB0                     _rtcc_set_hours:
 38679                           	opt stack 16
 38680                           
 38681                           ;incstack = 0
 38682                           ;rtcc_set_hours@hours stored from wreg
 38683  015CB0  0100               	movlb	0	; () banked
 38684  015CB2  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 38685                           
 38686                           ;rtcc.c: 257: _rtcc_write_enable();
 38687  015CB4  EC88  F0AE         	call	__rtcc_write_enable	;wreg free
 38688                           
 38689                           ;rtcc.c: 258: RTCCFGbits.RTCPTR1 = 0;
 38690  015CB8  010F               	movlb	15	; () banked
 38691  015CBA  933F               	bcf	63,1,b	;volatile
 38692                           
 38693                           ; BSR set to: 15
 38694                           ;rtcc.c: 259: RTCCFGbits.RTCPTR0 = 1;
 38695  015CBC  813F               	bsf	63,0,b	;volatile
 38696                           
 38697                           ; BSR set to: 15
 38698                           ;rtcc.c: 260: RTCVALL = hours;
 38699  015CBE  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 38700                           
 38701                           ;rtcc.c: 261: _rtcc_write_disable();
 38702  015CC2  EC93  F0AE         	call	__rtcc_write_disable	;wreg free
 38703  015CC6  0012               	return		;funcret
 38704  015CC8                     __end_of_rtcc_set_hours:
 38705                           	opt stack 0
 38706                           tosu	equ	0xFFF
 38707                           tosh	equ	0xFFE
 38708                           tosl	equ	0xFFD
 38709                           pclath	equ	0xFFA
 38710                           tblptru	equ	0xFF8
 38711                           tblptrh	equ	0xFF7
 38712                           tblptrl	equ	0xFF6
 38713                           tablat	equ	0xFF5
 38714                           prodh	equ	0xFF4
 38715                           prodl	equ	0xFF3
 38716                           intcon	equ	0xFF2
 38717                           intcon2	equ	0xFF1
 38718                           intcon3	equ	0xFF0
 38719                           postinc0	equ	0xFEE
 38720                           wreg	equ	0xFE8
 38721                           indf1	equ	0xFE7
 38722                           postinc1	equ	0xFE6
 38723                           postdec1	equ	0xFE5
 38724                           plusw1	equ	0xFE3
 38725                           fsr1h	equ	0xFE2
 38726                           fsr1l	equ	0xFE1
 38727                           indf2	equ	0xFDF
 38728                           postinc2	equ	0xFDE
 38729                           postdec2	equ	0xFDD
 38730                           plusw2	equ	0xFDB
 38731                           fsr2h	equ	0xFDA
 38732                           fsr2l	equ	0xFD9
 38733                           status	equ	0xFD8
 38734                           
 38735 ;; *************** function _rtcc_set_day *****************
 38736 ;; Defined at:
 38737 ;;		line 217 in file "rtcc.c"
 38738 ;; Parameters:    Size  Location     Type
 38739 ;;  day             1    wreg     unsigned char 
 38740 ;; Auto vars:     Size  Location     Type
 38741 ;;  day             1    0[BANK0 ] unsigned char 
 38742 ;; Return value:  Size  Location     Type
 38743 ;;                  1    wreg      void 
 38744 ;; Registers used:
 38745 ;;		wreg, status,2, cstack
 38746 ;; Tracked objects:
 38747 ;;		On entry : 0/0
 38748 ;;		On exit  : 0/0
 38749 ;;		Unchanged: 0/0
 38750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38755 ;;Total ram usage:        1 bytes
 38756 ;; Hardware stack levels used:    1
 38757 ;; Hardware stack levels required when called:   11
 38758 ;; This function calls:
 38759 ;;		__rtcc_write_disable
 38760 ;;		__rtcc_write_enable
 38761 ;; This function is called by:
 38762 ;;		__parse_command_long
 38763 ;;		_rtcc_correct_day
 38764 ;;		_rtcc_increment_day
 38765 ;;		_rtcc_decrement_day
 38766 ;;		_rtcc_read_eeprom
 38767 ;; This function uses a non-reentrant model
 38768 ;;
 38769                           
 38770                           	psect	text183
 38771  015CC8                     __ptext183:
 38772                           	opt stack 0
 38773  015CC8                     _rtcc_set_day:
 38774                           	opt stack 16
 38775                           
 38776                           ;incstack = 0
 38777                           ;rtcc_set_day@day stored from wreg
 38778  015CC8  0100               	movlb	0	; () banked
 38779  015CCA  6F60               	movwf	rtcc_set_day@day& (0+255),b
 38780                           
 38781                           ;rtcc.c: 219: _rtcc_write_enable();
 38782  015CCC  EC88  F0AE         	call	__rtcc_write_enable	;wreg free
 38783                           
 38784                           ;rtcc.c: 220: RTCCFGbits.RTCPTR1 = 1;
 38785  015CD0  010F               	movlb	15	; () banked
 38786  015CD2  833F               	bsf	63,1,b	;volatile
 38787                           
 38788                           ; BSR set to: 15
 38789                           ;rtcc.c: 221: RTCCFGbits.RTCPTR0 = 0;
 38790  015CD4  913F               	bcf	63,0,b	;volatile
 38791                           
 38792                           ; BSR set to: 15
 38793                           ;rtcc.c: 222: RTCVALL = day;
 38794  015CD6  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 38795                           
 38796                           ;rtcc.c: 223: _rtcc_write_disable();
 38797  015CDA  EC93  F0AE         	call	__rtcc_write_disable	;wreg free
 38798  015CDE  0012               	return		;funcret
 38799  015CE0                     __end_of_rtcc_set_day:
 38800                           	opt stack 0
 38801                           tosu	equ	0xFFF
 38802                           tosh	equ	0xFFE
 38803                           tosl	equ	0xFFD
 38804                           pclath	equ	0xFFA
 38805                           tblptru	equ	0xFF8
 38806                           tblptrh	equ	0xFF7
 38807                           tblptrl	equ	0xFF6
 38808                           tablat	equ	0xFF5
 38809                           prodh	equ	0xFF4
 38810                           prodl	equ	0xFF3
 38811                           intcon	equ	0xFF2
 38812                           intcon2	equ	0xFF1
 38813                           intcon3	equ	0xFF0
 38814                           postinc0	equ	0xFEE
 38815                           wreg	equ	0xFE8
 38816                           indf1	equ	0xFE7
 38817                           postinc1	equ	0xFE6
 38818                           postdec1	equ	0xFE5
 38819                           plusw1	equ	0xFE3
 38820                           fsr1h	equ	0xFE2
 38821                           fsr1l	equ	0xFE1
 38822                           indf2	equ	0xFDF
 38823                           postinc2	equ	0xFDE
 38824                           postdec2	equ	0xFDD
 38825                           plusw2	equ	0xFDB
 38826                           fsr2h	equ	0xFDA
 38827                           fsr2l	equ	0xFD9
 38828                           status	equ	0xFD8
 38829                           
 38830 ;; *************** function __rtcc_write_enable *****************
 38831 ;; Defined at:
 38832 ;;		line 14 in file "rtcc.c"
 38833 ;; Parameters:    Size  Location     Type
 38834 ;;		None
 38835 ;; Auto vars:     Size  Location     Type
 38836 ;;		None
 38837 ;; Return value:  Size  Location     Type
 38838 ;;                  1    wreg      void 
 38839 ;; Registers used:
 38840 ;;		wreg, status,2
 38841 ;; Tracked objects:
 38842 ;;		On entry : 0/0
 38843 ;;		On exit  : 0/0
 38844 ;;		Unchanged: 0/0
 38845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38850 ;;Total ram usage:        0 bytes
 38851 ;; Hardware stack levels used:    1
 38852 ;; Hardware stack levels required when called:   10
 38853 ;; This function calls:
 38854 ;;		Nothing
 38855 ;; This function is called by:
 38856 ;;		_rtcc_set_year
 38857 ;;		_rtcc_set_month
 38858 ;;		_rtcc_set_day
 38859 ;;		_rtcc_set_hours
 38860 ;;		_rtcc_set_minutes
 38861 ;;		_rtcc_set_seconds
 38862 ;; This function uses a non-reentrant model
 38863 ;;
 38864                           
 38865                           	psect	text184
 38866  015D10                     __ptext184:
 38867                           	opt stack 0
 38868  015D10                     __rtcc_write_enable:
 38869                           	opt stack 16
 38870                           
 38871                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 38872                           
 38873                           ;incstack = 0
 38874  015D10  D006               	goto	l2243
 38875  015D12                     
 38876                           ;rtcc.c: 17: {;rtcc.c: 18: EECON2 = 0x55;
 38877  015D12  0E55               	movlw	85
 38878  015D14  6EA7               	movwf	4007,c	;volsfr
 38879                           
 38880                           ;rtcc.c: 19: EECON2 = 0xAA;
 38881  015D16  0EAA               	movlw	170
 38882  015D18  6EA7               	movwf	4007,c	;volsfr
 38883                           
 38884                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 38885  015D1A  010F               	movlb	15	; () banked
 38886  015D1C  8B3F               	bsf	63,5,b	;volatile
 38887  015D1E                     l2243:
 38888                           
 38889                           ; BSR set to: 15
 38890  015D1E  010F               	movlb	15	; () banked
 38891  015D20  BB3F               	btfsc	63,5,b	;volatile
 38892  015D22  0012               	return	
 38893  015D24  D7F6               	goto	l2244
 38894  015D26                     __end_of__rtcc_write_enable:
 38895                           	opt stack 0
 38896                           tosu	equ	0xFFF
 38897                           tosh	equ	0xFFE
 38898                           tosl	equ	0xFFD
 38899                           pclath	equ	0xFFA
 38900                           tblptru	equ	0xFF8
 38901                           tblptrh	equ	0xFF7
 38902                           tblptrl	equ	0xFF6
 38903                           tablat	equ	0xFF5
 38904                           prodh	equ	0xFF4
 38905                           prodl	equ	0xFF3
 38906                           intcon	equ	0xFF2
 38907                           intcon2	equ	0xFF1
 38908                           intcon3	equ	0xFF0
 38909                           postinc0	equ	0xFEE
 38910                           wreg	equ	0xFE8
 38911                           indf1	equ	0xFE7
 38912                           postinc1	equ	0xFE6
 38913                           postdec1	equ	0xFE5
 38914                           plusw1	equ	0xFE3
 38915                           fsr1h	equ	0xFE2
 38916                           fsr1l	equ	0xFE1
 38917                           indf2	equ	0xFDF
 38918                           postinc2	equ	0xFDE
 38919                           postdec2	equ	0xFDD
 38920                           plusw2	equ	0xFDB
 38921                           fsr2h	equ	0xFDA
 38922                           fsr2l	equ	0xFD9
 38923                           status	equ	0xFD8
 38924                           
 38925 ;; *************** function __rtcc_write_disable *****************
 38926 ;; Defined at:
 38927 ;;		line 24 in file "rtcc.c"
 38928 ;; Parameters:    Size  Location     Type
 38929 ;;		None
 38930 ;; Auto vars:     Size  Location     Type
 38931 ;;		None
 38932 ;; Return value:  Size  Location     Type
 38933 ;;                  1    wreg      void 
 38934 ;; Registers used:
 38935 ;;		wreg, status,2
 38936 ;; Tracked objects:
 38937 ;;		On entry : 0/0
 38938 ;;		On exit  : 0/0
 38939 ;;		Unchanged: 0/0
 38940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38945 ;;Total ram usage:        0 bytes
 38946 ;; Hardware stack levels used:    1
 38947 ;; Hardware stack levels required when called:   10
 38948 ;; This function calls:
 38949 ;;		Nothing
 38950 ;; This function is called by:
 38951 ;;		_rtcc_set_year
 38952 ;;		_rtcc_set_month
 38953 ;;		_rtcc_set_day
 38954 ;;		_rtcc_set_hours
 38955 ;;		_rtcc_set_minutes
 38956 ;;		_rtcc_set_seconds
 38957 ;; This function uses a non-reentrant model
 38958 ;;
 38959                           
 38960                           	psect	text185
 38961  015D26                     __ptext185:
 38962                           	opt stack 0
 38963  015D26                     __rtcc_write_disable:
 38964                           	opt stack 16
 38965                           
 38966                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 38967                           
 38968                           ; BSR set to: 15
 38969                           ;incstack = 0
 38970  015D26  D006               	goto	l2249
 38971  015D28                     
 38972                           ;rtcc.c: 27: {;rtcc.c: 28: EECON2 = 0x55;
 38973  015D28  0E55               	movlw	85
 38974  015D2A  6EA7               	movwf	4007,c	;volsfr
 38975                           
 38976                           ;rtcc.c: 29: EECON2 = 0xAA;
 38977  015D2C  0EAA               	movlw	170
 38978  015D2E  6EA7               	movwf	4007,c	;volsfr
 38979                           
 38980                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 38981  015D30  010F               	movlb	15	; () banked
 38982  015D32  9B3F               	bcf	63,5,b	;volatile
 38983  015D34                     l2249:
 38984                           
 38985                           ; BSR set to: 15
 38986  015D34  010F               	movlb	15	; () banked
 38987  015D36  AB3F               	btfss	63,5,b	;volatile
 38988  015D38  0012               	return	
 38989  015D3A  D7F6               	goto	l2250
 38990  015D3C                     __end_of__rtcc_write_disable:
 38991                           	opt stack 0
 38992                           tosu	equ	0xFFF
 38993                           tosh	equ	0xFFE
 38994                           tosl	equ	0xFFD
 38995                           pclath	equ	0xFFA
 38996                           tblptru	equ	0xFF8
 38997                           tblptrh	equ	0xFF7
 38998                           tblptrl	equ	0xFF6
 38999                           tablat	equ	0xFF5
 39000                           prodh	equ	0xFF4
 39001                           prodl	equ	0xFF3
 39002                           intcon	equ	0xFF2
 39003                           intcon2	equ	0xFF1
 39004                           intcon3	equ	0xFF0
 39005                           postinc0	equ	0xFEE
 39006                           wreg	equ	0xFE8
 39007                           indf1	equ	0xFE7
 39008                           postinc1	equ	0xFE6
 39009                           postdec1	equ	0xFE5
 39010                           plusw1	equ	0xFE3
 39011                           fsr1h	equ	0xFE2
 39012                           fsr1l	equ	0xFE1
 39013                           indf2	equ	0xFDF
 39014                           postinc2	equ	0xFDE
 39015                           postdec2	equ	0xFDD
 39016                           plusw2	equ	0xFDB
 39017                           fsr2h	equ	0xFDA
 39018                           fsr2l	equ	0xFD9
 39019                           status	equ	0xFD8
 39020                           
 39021 ;; *************** function _buck_remote_set_synchronous *****************
 39022 ;; Defined at:
 39023 ;;		line 621 in file "buck.c"
 39024 ;; Parameters:    Size  Location     Type
 39025 ;;  synchronous     1    wreg     unsigned char 
 39026 ;; Auto vars:     Size  Location     Type
 39027 ;;  synchronous     1    0[BANK0 ] unsigned char 
 39028 ;; Return value:  Size  Location     Type
 39029 ;;                  1    wreg      void 
 39030 ;; Registers used:
 39031 ;;		wreg, status,2
 39032 ;; Tracked objects:
 39033 ;;		On entry : 0/0
 39034 ;;		On exit  : 0/0
 39035 ;;		Unchanged: 0/0
 39036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39040 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39041 ;;Total ram usage:        1 bytes
 39042 ;; Hardware stack levels used:    1
 39043 ;; Hardware stack levels required when called:   10
 39044 ;; This function calls:
 39045 ;;		Nothing
 39046 ;; This function is called by:
 39047 ;;		__parse_command_long
 39048 ;; This function uses a non-reentrant model
 39049 ;;
 39050                           
 39051                           	psect	text186
 39052  015CE0                     __ptext186:
 39053                           	opt stack 0
 39054  015CE0                     _buck_remote_set_synchronous:
 39055                           	opt stack 18
 39056                           
 39057                           ; BSR set to: 15
 39058                           ;incstack = 0
 39059                           ;buck_remote_set_synchronous@synchronous stored from wreg
 39060  015CE0  0100               	movlb	0	; () banked
 39061  015CE2  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 39062                           
 39063                           ;buck.c: 623: if(synchronous)
 39064  015CE4  0100               	movlb	0	; () banked
 39065  015CE6  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 39066  015CE8  B4D8               	btfsc	status,2,c
 39067  015CEA  D003               	goto	l2630
 39068                           
 39069                           ; BSR set to: 0
 39070                           ;buck.c: 624: buck_remote_synchronous = 1;
 39071  015CEC  0E01               	movlw	1
 39072  015CEE  6FE3               	movwf	_buck_remote_synchronous& (0+255),b
 39073  015CF0  0012               	return	
 39074  015CF2                     l2630:
 39075                           
 39076                           ; BSR set to: 0
 39077                           ;buck.c: 625: else;buck.c: 626: buck_remote_synchronous = 0;
 39078                           
 39079                           ; BSR set to: 0
 39080  015CF2  0E00               	movlw	0
 39081  015CF4  6FE3               	movwf	_buck_remote_synchronous& (0+255),b
 39082  015CF6  0012               	return	
 39083  015CF8                     __end_of_buck_remote_set_synchronous:
 39084                           	opt stack 0
 39085                           tosu	equ	0xFFF
 39086                           tosh	equ	0xFFE
 39087                           tosl	equ	0xFFD
 39088                           pclath	equ	0xFFA
 39089                           tblptru	equ	0xFF8
 39090                           tblptrh	equ	0xFF7
 39091                           tblptrl	equ	0xFF6
 39092                           tablat	equ	0xFF5
 39093                           prodh	equ	0xFF4
 39094                           prodl	equ	0xFF3
 39095                           intcon	equ	0xFF2
 39096                           intcon2	equ	0xFF1
 39097                           intcon3	equ	0xFF0
 39098                           postinc0	equ	0xFEE
 39099                           wreg	equ	0xFE8
 39100                           indf1	equ	0xFE7
 39101                           postinc1	equ	0xFE6
 39102                           postdec1	equ	0xFE5
 39103                           plusw1	equ	0xFE3
 39104                           fsr1h	equ	0xFE2
 39105                           fsr1l	equ	0xFE1
 39106                           indf2	equ	0xFDF
 39107                           postinc2	equ	0xFDE
 39108                           postdec2	equ	0xFDD
 39109                           plusw2	equ	0xFDB
 39110                           fsr2h	equ	0xFDA
 39111                           fsr2l	equ	0xFD9
 39112                           status	equ	0xFD8
 39113                           
 39114 ;; *************** function _buck_remote_set_on *****************
 39115 ;; Defined at:
 39116 ;;		line 613 in file "buck.c"
 39117 ;; Parameters:    Size  Location     Type
 39118 ;;  on              1    wreg     unsigned char 
 39119 ;; Auto vars:     Size  Location     Type
 39120 ;;  on              1    0[BANK0 ] unsigned char 
 39121 ;; Return value:  Size  Location     Type
 39122 ;;                  1    wreg      void 
 39123 ;; Registers used:
 39124 ;;		wreg, status,2
 39125 ;; Tracked objects:
 39126 ;;		On entry : 0/0
 39127 ;;		On exit  : 0/0
 39128 ;;		Unchanged: 0/0
 39129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39134 ;;Total ram usage:        1 bytes
 39135 ;; Hardware stack levels used:    1
 39136 ;; Hardware stack levels required when called:   10
 39137 ;; This function calls:
 39138 ;;		Nothing
 39139 ;; This function is called by:
 39140 ;;		__parse_command_long
 39141 ;; This function uses a non-reentrant model
 39142 ;;
 39143                           
 39144                           	psect	text187
 39145  015CF8                     __ptext187:
 39146                           	opt stack 0
 39147  015CF8                     _buck_remote_set_on:
 39148                           	opt stack 18
 39149                           
 39150                           ; BSR set to: 0
 39151                           ;incstack = 0
 39152                           ;buck_remote_set_on@on stored from wreg
 39153  015CF8  0100               	movlb	0	; () banked
 39154  015CFA  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 39155                           
 39156                           ;buck.c: 615: if(on)
 39157  015CFC  0100               	movlb	0	; () banked
 39158  015CFE  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 39159  015D00  B4D8               	btfsc	status,2,c
 39160  015D02  D003               	goto	l2625
 39161                           
 39162                           ; BSR set to: 0
 39163                           ;buck.c: 616: buck_remote_on = 1;
 39164  015D04  0E01               	movlw	1
 39165  015D06  6FE4               	movwf	_buck_remote_on& (0+255),b
 39166  015D08  0012               	return	
 39167  015D0A                     l2625:
 39168                           
 39169                           ; BSR set to: 0
 39170                           ;buck.c: 617: else;buck.c: 618: buck_remote_on = 0;
 39171                           
 39172                           ; BSR set to: 0
 39173  015D0A  0E00               	movlw	0
 39174  015D0C  6FE4               	movwf	_buck_remote_on& (0+255),b
 39175  015D0E  0012               	return	
 39176  015D10                     __end_of_buck_remote_set_on:
 39177                           	opt stack 0
 39178                           tosu	equ	0xFFF
 39179                           tosh	equ	0xFFE
 39180                           tosl	equ	0xFFD
 39181                           pclath	equ	0xFFA
 39182                           tblptru	equ	0xFF8
 39183                           tblptrh	equ	0xFF7
 39184                           tblptrl	equ	0xFF6
 39185                           tablat	equ	0xFF5
 39186                           prodh	equ	0xFF4
 39187                           prodl	equ	0xFF3
 39188                           intcon	equ	0xFF2
 39189                           intcon2	equ	0xFF1
 39190                           intcon3	equ	0xFF0
 39191                           postinc0	equ	0xFEE
 39192                           wreg	equ	0xFE8
 39193                           indf1	equ	0xFE7
 39194                           postinc1	equ	0xFE6
 39195                           postdec1	equ	0xFE5
 39196                           plusw1	equ	0xFE3
 39197                           fsr1h	equ	0xFE2
 39198                           fsr1l	equ	0xFE1
 39199                           indf2	equ	0xFDF
 39200                           postinc2	equ	0xFDE
 39201                           postdec2	equ	0xFDD
 39202                           plusw2	equ	0xFDB
 39203                           fsr2h	equ	0xFDA
 39204                           fsr2l	equ	0xFD9
 39205                           status	equ	0xFD8
 39206                           
 39207 ;; *************** function _buck_remote_set_enable *****************
 39208 ;; Defined at:
 39209 ;;		line 605 in file "buck.c"
 39210 ;; Parameters:    Size  Location     Type
 39211 ;;  remote          1    wreg     unsigned char 
 39212 ;; Auto vars:     Size  Location     Type
 39213 ;;  remote          1    0[BANK0 ] unsigned char 
 39214 ;; Return value:  Size  Location     Type
 39215 ;;                  1    wreg      void 
 39216 ;; Registers used:
 39217 ;;		wreg, status,2
 39218 ;; Tracked objects:
 39219 ;;		On entry : 0/0
 39220 ;;		On exit  : 0/0
 39221 ;;		Unchanged: 0/0
 39222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39226 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39227 ;;Total ram usage:        1 bytes
 39228 ;; Hardware stack levels used:    1
 39229 ;; Hardware stack levels required when called:   10
 39230 ;; This function calls:
 39231 ;;		Nothing
 39232 ;; This function is called by:
 39233 ;;		__parse_command_long
 39234 ;; This function uses a non-reentrant model
 39235 ;;
 39236                           
 39237                           	psect	text188
 39238  015B9A                     __ptext188:
 39239                           	opt stack 0
 39240  015B9A                     _buck_remote_set_enable:
 39241                           	opt stack 18
 39242                           
 39243                           ; BSR set to: 0
 39244                           ;incstack = 0
 39245                           ;buck_remote_set_enable@remote stored from wreg
 39246  015B9A  0100               	movlb	0	; () banked
 39247  015B9C  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 39248                           
 39249                           ;buck.c: 607: if(remote)
 39250  015B9E  0100               	movlb	0	; () banked
 39251  015BA0  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 39252  015BA2  B4D8               	btfsc	status,2,c
 39253  015BA4  D004               	goto	l2620
 39254                           
 39255                           ; BSR set to: 0
 39256                           ;buck.c: 608: buck_remote_enable = 1;
 39257  015BA6  0E01               	movlw	1
 39258  015BA8  0101               	movlb	1	; () banked
 39259  015BAA  6FF1               	movwf	_buck_remote_enable& (0+255),b
 39260  015BAC  0012               	return	
 39261  015BAE                     l2620:
 39262                           
 39263                           ;buck.c: 609: else;buck.c: 610: buck_remote_enable = 0;
 39264                           
 39265                           ; BSR set to: 1
 39266  015BAE  0E00               	movlw	0
 39267  015BB0  0101               	movlb	1	; () banked
 39268  015BB2  6FF1               	movwf	_buck_remote_enable& (0+255),b
 39269  015BB4  0012               	return	
 39270  015BB6                     __end_of_buck_remote_set_enable:
 39271                           	opt stack 0
 39272                           tosu	equ	0xFFF
 39273                           tosh	equ	0xFFE
 39274                           tosl	equ	0xFFD
 39275                           pclath	equ	0xFFA
 39276                           tblptru	equ	0xFF8
 39277                           tblptrh	equ	0xFF7
 39278                           tblptrl	equ	0xFF6
 39279                           tablat	equ	0xFF5
 39280                           prodh	equ	0xFF4
 39281                           prodl	equ	0xFF3
 39282                           intcon	equ	0xFF2
 39283                           intcon2	equ	0xFF1
 39284                           intcon3	equ	0xFF0
 39285                           postinc0	equ	0xFEE
 39286                           wreg	equ	0xFE8
 39287                           indf1	equ	0xFE7
 39288                           postinc1	equ	0xFE6
 39289                           postdec1	equ	0xFE5
 39290                           plusw1	equ	0xFE3
 39291                           fsr1h	equ	0xFE2
 39292                           fsr1l	equ	0xFE1
 39293                           indf2	equ	0xFDF
 39294                           postinc2	equ	0xFDE
 39295                           postdec2	equ	0xFDD
 39296                           plusw2	equ	0xFDB
 39297                           fsr2h	equ	0xFDA
 39298                           fsr2l	equ	0xFD9
 39299                           status	equ	0xFD8
 39300                           
 39301 ;; *************** function _buck_remote_set_dutycycle *****************
 39302 ;; Defined at:
 39303 ;;		line 629 in file "buck.c"
 39304 ;; Parameters:    Size  Location     Type
 39305 ;;  dutycycle       1    wreg     unsigned char 
 39306 ;; Auto vars:     Size  Location     Type
 39307 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 39308 ;; Return value:  Size  Location     Type
 39309 ;;                  1    wreg      void 
 39310 ;; Registers used:
 39311 ;;		wreg, status,2, status,0
 39312 ;; Tracked objects:
 39313 ;;		On entry : 0/0
 39314 ;;		On exit  : 0/0
 39315 ;;		Unchanged: 0/0
 39316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39321 ;;Total ram usage:        1 bytes
 39322 ;; Hardware stack levels used:    1
 39323 ;; Hardware stack levels required when called:   10
 39324 ;; This function calls:
 39325 ;;		Nothing
 39326 ;; This function is called by:
 39327 ;;		__parse_command_long
 39328 ;; This function uses a non-reentrant model
 39329 ;;
 39330                           
 39331                           	psect	text189
 39332  015986                     __ptext189:
 39333                           	opt stack 0
 39334  015986                     _buck_remote_set_dutycycle:
 39335                           	opt stack 18
 39336                           
 39337                           ; BSR set to: 1
 39338                           ;incstack = 0
 39339                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 39340  015986  0100               	movlb	0	; () banked
 39341  015988  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39342                           
 39343                           ;buck.c: 631: if(dutycycle>242)
 39344  01598A  0EF2               	movlw	242
 39345  01598C  0100               	movlb	0	; () banked
 39346  01598E  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39347  015990  D003               	goto	l2635
 39348                           
 39349                           ; BSR set to: 0
 39350                           ;buck.c: 632: buck_remote_dutycycle = 242;
 39351  015992  0EF2               	movlw	242
 39352  015994  6FE2               	movwf	_buck_remote_dutycycle& (0+255),b
 39353  015996  0012               	return	
 39354  015998                     l2635:
 39355                           
 39356                           ; BSR set to: 0
 39357                           ;buck.c: 633: else if(dutycycle<40)
 39358                           
 39359                           ; BSR set to: 0
 39360  015998  0E28               	movlw	40
 39361  01599A  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39362  01599C  D003               	goto	l2637
 39363                           
 39364                           ; BSR set to: 0
 39365                           ;buck.c: 634: buck_remote_dutycycle = 40;
 39366  01599E  0E28               	movlw	40
 39367  0159A0  6FE2               	movwf	_buck_remote_dutycycle& (0+255),b
 39368  0159A2  0012               	return	
 39369  0159A4                     l2637:
 39370                           
 39371                           ; BSR set to: 0
 39372                           ;buck.c: 635: else;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 39373  0159A4  C060  F0E2         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 39374                           
 39375                           ; BSR set to: 0
 39376  0159A8  0012               	return	
 39377  0159AA                     __end_of_buck_remote_set_dutycycle:
 39378                           	opt stack 0
 39379                           tosu	equ	0xFFF
 39380                           tosh	equ	0xFFE
 39381                           tosl	equ	0xFFD
 39382                           pclath	equ	0xFFA
 39383                           tblptru	equ	0xFF8
 39384                           tblptrh	equ	0xFF7
 39385                           tblptrl	equ	0xFF6
 39386                           tablat	equ	0xFF5
 39387                           prodh	equ	0xFF4
 39388                           prodl	equ	0xFF3
 39389                           intcon	equ	0xFF2
 39390                           intcon2	equ	0xFF1
 39391                           intcon3	equ	0xFF0
 39392                           postinc0	equ	0xFEE
 39393                           wreg	equ	0xFE8
 39394                           indf1	equ	0xFE7
 39395                           postinc1	equ	0xFE6
 39396                           postdec1	equ	0xFE5
 39397                           plusw1	equ	0xFE3
 39398                           fsr1h	equ	0xFE2
 39399                           fsr1l	equ	0xFE1
 39400                           indf2	equ	0xFDF
 39401                           postinc2	equ	0xFDE
 39402                           postdec2	equ	0xFDD
 39403                           plusw2	equ	0xFDB
 39404                           fsr2h	equ	0xFDA
 39405                           fsr2l	equ	0xFD9
 39406                           status	equ	0xFD8
 39407                           
 39408 ;; *************** function _buck_remote_change_dutycycle *****************
 39409 ;; Defined at:
 39410 ;;		line 639 in file "buck.c"
 39411 ;; Parameters:    Size  Location     Type
 39412 ;;  change          1    wreg     char 
 39413 ;; Auto vars:     Size  Location     Type
 39414 ;;  change          1    0[BANK0 ] char 
 39415 ;;  new_dutycycl    2    1[BANK0 ] int 
 39416 ;; Return value:  Size  Location     Type
 39417 ;;                  1    wreg      void 
 39418 ;; Registers used:
 39419 ;;		wreg, status,2, status,0
 39420 ;; Tracked objects:
 39421 ;;		On entry : 0/0
 39422 ;;		On exit  : 0/0
 39423 ;;		Unchanged: 0/0
 39424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39426 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39428 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39429 ;;Total ram usage:        3 bytes
 39430 ;; Hardware stack levels used:    1
 39431 ;; Hardware stack levels required when called:   10
 39432 ;; This function calls:
 39433 ;;		Nothing
 39434 ;; This function is called by:
 39435 ;;		__parse_command_long
 39436 ;; This function uses a non-reentrant model
 39437 ;;
 39438                           
 39439                           	psect	text190
 39440  0150BA                     __ptext190:
 39441                           	opt stack 0
 39442  0150BA                     _buck_remote_change_dutycycle:
 39443                           	opt stack 18
 39444                           
 39445                           ; BSR set to: 0
 39446                           ;incstack = 0
 39447                           ;buck_remote_change_dutycycle@change stored from wreg
 39448  0150BA  0100               	movlb	0	; () banked
 39449  0150BC  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 39450                           
 39451                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 39452  0150BE  0100               	movlb	0	; () banked
 39453  0150C0  51E5               	movf	_buck_dutycycle& (0+255),w,b
 39454  0150C2  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 39455  0150C4  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 39456  0150C6  6AE8               	clrf	wreg,c
 39457  0150C8  B0D8               	btfsc	status,0,c
 39458  0150CA  2AE8               	incf	wreg,f,c
 39459  0150CC  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 39460  0150CE  06E8               	decf	wreg,f,c
 39461  0150D0  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 39462                           
 39463                           ;buck.c: 642: if(new_dutycycle>242)
 39464  0150D2  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 39465  0150D4  D009               	goto	l2642
 39466  0150D6  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 39467  0150D8  E104               	bnz	u18530
 39468  0150DA  0EF3               	movlw	243
 39469  0150DC  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 39470  0150DE  A0D8               	btfss	status,0,c
 39471  0150E0  D003               	goto	l2642
 39472  0150E2                     u18530:
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;buck.c: 643: buck_remote_dutycycle = 242;
 39476  0150E2  0EF2               	movlw	242
 39477  0150E4  6FE2               	movwf	_buck_remote_dutycycle& (0+255),b
 39478  0150E6  0012               	return	
 39479  0150E8                     l2642:
 39480                           
 39481                           ; BSR set to: 0
 39482                           ;buck.c: 644: else if(new_dutycycle<40)
 39483                           
 39484                           ; BSR set to: 0
 39485  0150E8  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 39486  0150EA  D006               	goto	u18540
 39487  0150EC  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 39488  0150EE  E107               	bnz	l2644
 39489  0150F0  0E28               	movlw	40
 39490  0150F2  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 39491  0150F4  B0D8               	btfsc	status,0,c
 39492  0150F6  D003               	goto	l2644
 39493  0150F8                     u18540:
 39494                           
 39495                           ; BSR set to: 0
 39496                           ;buck.c: 645: buck_remote_dutycycle = 40;
 39497  0150F8  0E28               	movlw	40
 39498  0150FA  6FE2               	movwf	_buck_remote_dutycycle& (0+255),b
 39499  0150FC  0012               	return	
 39500  0150FE                     l2644:
 39501                           
 39502                           ; BSR set to: 0
 39503                           ;buck.c: 646: else;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 39504  0150FE  C061  F0E2         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 39505                           
 39506                           ; BSR set to: 0
 39507  015102  0012               	return	
 39508  015104                     __end_of_buck_remote_change_dutycycle:
 39509                           	opt stack 0
 39510                           tosu	equ	0xFFF
 39511                           tosh	equ	0xFFE
 39512                           tosl	equ	0xFFD
 39513                           pclath	equ	0xFFA
 39514                           tblptru	equ	0xFF8
 39515                           tblptrh	equ	0xFF7
 39516                           tblptrl	equ	0xFF6
 39517                           tablat	equ	0xFF5
 39518                           prodh	equ	0xFF4
 39519                           prodl	equ	0xFF3
 39520                           intcon	equ	0xFF2
 39521                           intcon2	equ	0xFF1
 39522                           intcon3	equ	0xFF0
 39523                           postinc0	equ	0xFEE
 39524                           wreg	equ	0xFE8
 39525                           indf1	equ	0xFE7
 39526                           postinc1	equ	0xFE6
 39527                           postdec1	equ	0xFE5
 39528                           plusw1	equ	0xFE3
 39529                           fsr1h	equ	0xFE2
 39530                           fsr1l	equ	0xFE1
 39531                           indf2	equ	0xFDF
 39532                           postinc2	equ	0xFDE
 39533                           postdec2	equ	0xFDD
 39534                           plusw2	equ	0xFDB
 39535                           fsr2h	equ	0xFDA
 39536                           fsr2l	equ	0xFD9
 39537                           status	equ	0xFD8
 39538                           
 39539 ;; *************** function __parse_command_calibration *****************
 39540 ;; Defined at:
 39541 ;;		line 505 in file "app_device_custom_hid.c"
 39542 ;; Parameters:    Size  Location     Type
 39543 ;;  cmd             1    wreg     unsigned char 
 39544 ;;  item            1    3[BANK0 ] unsigned char 
 39545 ;;  dat1            1    4[BANK0 ] unsigned char 
 39546 ;;  dat2            1    5[BANK0 ] unsigned char 
 39547 ;;  dat3            1    6[BANK0 ] unsigned char 
 39548 ;; Auto vars:     Size  Location     Type
 39549 ;;  cmd             1    0[COMRAM] unsigned char 
 39550 ;;  parameter       2    9[BANK0 ] int 
 39551 ;; Return value:  Size  Location     Type
 39552 ;;                  1    wreg      void 
 39553 ;; Registers used:
 39554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39555 ;; Tracked objects:
 39556 ;;		On entry : 0/0
 39557 ;;		On exit  : 0/0
 39558 ;;		Unchanged: 0/0
 39559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39563 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39564 ;;Total ram usage:        8 bytes
 39565 ;; Hardware stack levels used:    1
 39566 ;; Hardware stack levels required when called:   11
 39567 ;; This function calls:
 39568 ;;		_schedule_eeprom_write_task
 39569 ;; This function is called by:
 39570 ;;		_APP_DeviceCustomHIDTasks
 39571 ;; This function uses a non-reentrant model
 39572 ;;
 39573                           
 39574                           	psect	text191
 39575  011064                     __ptext191:
 39576                           	opt stack 0
 39577  011064                     __parse_command_calibration:
 39578                           	opt stack 18
 39579                           
 39580                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 39581                           
 39582                           ; BSR set to: 0
 39583                           ;incstack = 0
 39584  011064  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 39585  011068  0100               	movlb	0	; () banked
 39586  01106A  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 39587                           
 39588                           ; BSR set to: 0
 39589                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 39590  01106C  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 39591  01106E  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 39592  011070  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 39593                           
 39594                           ; BSR set to: 0
 39595                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 39596  011072  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 39597  011074  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 39598                           
 39599                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 39600  011076  D03F               	goto	l1184
 39601  011078                     
 39602                           ; BSR set to: 0
 39603                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 39604                           
 39605                           ; BSR set to: 0
 39606  011078  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39607  01107C  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39608  01107E  0E0F               	movlw	15
 39609  011080  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39610  011082  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39611  011084  0D0C               	mullw	12
 39612  011086  0E05               	movlw	5
 39613  011088  26F3               	addwf	prodl,f,c
 39614  01108A  0E00               	movlw	0
 39615  01108C  22F4               	addwfc	prodh,f,c
 39616  01108E  0E00               	movlw	low _calibrationParameters
 39617  011090  24F3               	addwf	prodl,w,c
 39618  011092  6ED9               	movwf	fsr2l,c
 39619  011094  0E03               	movlw	high _calibrationParameters
 39620  011096  20F4               	addwfc	prodh,w,c
 39621  011098  6EDA               	movwf	fsr2h,c
 39622  01109A  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 39623  01109E  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 39624                           
 39625                           ;app_device_custom_hid.c: 516: break;
 39626  0110A2  D055               	goto	l1188
 39627  0110A4                     
 39628                           ; BSR set to: 0
 39629                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 39630                           
 39631                           ; BSR set to: 0
 39632  0110A4  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39633  0110A8  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39634  0110AA  0E0F               	movlw	15
 39635  0110AC  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39636  0110AE  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39637  0110B0  0D0C               	mullw	12
 39638  0110B2  0E07               	movlw	7
 39639  0110B4  26F3               	addwf	prodl,f,c
 39640  0110B6  0E00               	movlw	0
 39641  0110B8  22F4               	addwfc	prodh,f,c
 39642  0110BA  0E00               	movlw	low _calibrationParameters
 39643  0110BC  24F3               	addwf	prodl,w,c
 39644  0110BE  6ED9               	movwf	fsr2l,c
 39645  0110C0  0E03               	movlw	high _calibrationParameters
 39646  0110C2  20F4               	addwfc	prodh,w,c
 39647  0110C4  6EDA               	movwf	fsr2h,c
 39648  0110C6  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 39649  0110CA  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 39650                           
 39651                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 39652  0110CE  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39653  0110D2  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39654  0110D4  0E0F               	movlw	15
 39655  0110D6  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39656  0110D8  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39657  0110DA  0D0C               	mullw	12
 39658  0110DC  0E09               	movlw	9
 39659  0110DE  26F3               	addwf	prodl,f,c
 39660  0110E0  0E00               	movlw	0
 39661  0110E2  22F4               	addwfc	prodh,f,c
 39662  0110E4  0E00               	movlw	low _calibrationParameters
 39663  0110E6  24F3               	addwf	prodl,w,c
 39664  0110E8  6ED9               	movwf	fsr2l,c
 39665  0110EA  0E03               	movlw	high _calibrationParameters
 39666  0110EC  20F4               	addwfc	prodh,w,c
 39667  0110EE  6EDA               	movwf	fsr2h,c
 39668  0110F0  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 39669                           
 39670                           ; BSR set to: 0
 39671                           ;app_device_custom_hid.c: 522: }
 39672                           
 39673                           ;app_device_custom_hid.c: 521: break;
 39674  0110F4  D02C               	goto	l1188
 39675  0110F6                     l1184:
 39676                           
 39677                           ; BSR set to: 0
 39678                           
 39679                           ; BSR set to: 0
 39680  0110F6  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 39681  0110F8  0B0F               	andlw	15
 39682  0110FA  6F67               	movwf	??__parse_command_calibration& (0+255),b
 39683  0110FC  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 39684                           
 39685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39686                           ; Switch size 1, requested type "space"
 39687                           ; Number of cases is 1, Range of values is 0 to 0
 39688                           ; switch strategies available:
 39689                           ; Name         Instructions Cycles
 39690                           ; simple_byte            4     3 (average)
 39691                           ;	Chosen strategy is simple_byte
 39692  0110FE  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 39693  011100  0A00               	xorlw	0	; case 0
 39694  011102  A4D8               	btfss	status,2,c
 39695  011104  D024               	goto	l1188
 39696                           
 39697                           ; BSR set to: 0
 39698                           ; Switch size 1, requested type "space"
 39699                           ; Number of cases is 2, Range of values is 0 to 1
 39700                           ; switch strategies available:
 39701                           ; Name         Instructions Cycles
 39702                           ; simple_byte            7     4 (average)
 39703                           ;	Chosen strategy is simple_byte
 39704  011106  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39705  011108  0A00               	xorlw	0	; case 0
 39706  01110A  B4D8               	btfsc	status,2,c
 39707  01110C  D7B5               	goto	l1185
 39708  01110E  0A01               	xorlw	1	; case 1
 39709  011110  B4D8               	btfsc	status,2,c
 39710  011112  D7C8               	goto	l1187
 39711                           
 39712                           ; BSR set to: 0
 39713                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 39714  011114  D01C               	goto	l1188
 39715  011116                     
 39716                           ; BSR set to: 0
 39717                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 39718                           
 39719                           ; BSR set to: 0
 39720  011116  0E02               	movlw	2
 39721  011118  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39722                           
 39723                           ;app_device_custom_hid.c: 528: break;
 39724  01111C  0012               	return	
 39725  01111E                     
 39726                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 39727  01111E  0E03               	movlw	3
 39728  011120  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39729                           
 39730                           ;app_device_custom_hid.c: 531: break;
 39731  011124  0012               	return	
 39732  011126                     
 39733                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 39734  011126  0E04               	movlw	4
 39735  011128  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39736                           
 39737                           ;app_device_custom_hid.c: 534: break;
 39738  01112C  0012               	return	
 39739  01112E                     
 39740                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 39741  01112E  0E05               	movlw	5
 39742  011130  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39743                           
 39744                           ;app_device_custom_hid.c: 537: break;
 39745  011134  0012               	return	
 39746  011136                     
 39747                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 39748  011136  0E06               	movlw	6
 39749  011138  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39750                           
 39751                           ;app_device_custom_hid.c: 540: break;
 39752  01113C  0012               	return	
 39753  01113E                     
 39754                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 39755  01113E  0E07               	movlw	7
 39756  011140  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39757                           
 39758                           ;app_device_custom_hid.c: 543: break;
 39759  011144  0012               	return	
 39760  011146                     
 39761                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 39762  011146  0E08               	movlw	8
 39763  011148  EC4F  F0A7         	call	_schedule_eeprom_write_task
 39764                           
 39765                           ;app_device_custom_hid.c: 547: }
 39766                           
 39767                           ;app_device_custom_hid.c: 546: break;
 39768  01114C  0012               	return	
 39769  01114E                     l1188:
 39770  01114E  0100               	movlb	0	; () banked
 39771  011150  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 39772  011152  0B0F               	andlw	15
 39773  011154  6F67               	movwf	??__parse_command_calibration& (0+255),b
 39774  011156  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 39775                           
 39776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39777                           ; Switch size 1, requested type "space"
 39778                           ; Number of cases is 1, Range of values is 0 to 0
 39779                           ; switch strategies available:
 39780                           ; Name         Instructions Cycles
 39781                           ; simple_byte            4     3 (average)
 39782                           ;	Chosen strategy is simple_byte
 39783  011158  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 39784  01115A  0A00               	xorlw	0	; case 0
 39785  01115C  A4D8               	btfss	status,2,c
 39786  01115E  0012               	return	
 39787                           
 39788                           ; BSR set to: 0
 39789                           ; Switch size 1, requested type "space"
 39790                           ; Number of cases is 7, Range of values is 0 to 6
 39791                           ; switch strategies available:
 39792                           ; Name         Instructions Cycles
 39793                           ; simple_byte           22    12 (average)
 39794                           ;	Chosen strategy is simple_byte
 39795  011160  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39796  011162  0A00               	xorlw	0	; case 0
 39797  011164  B4D8               	btfsc	status,2,c
 39798  011166  D7D7               	goto	l1189
 39799  011168  0A01               	xorlw	1	; case 1
 39800  01116A  B4D8               	btfsc	status,2,c
 39801  01116C  D7D8               	goto	l1191
 39802  01116E  0A03               	xorlw	3	; case 2
 39803  011170  B4D8               	btfsc	status,2,c
 39804  011172  D7D9               	goto	l1192
 39805  011174  0A01               	xorlw	1	; case 3
 39806  011176  B4D8               	btfsc	status,2,c
 39807  011178  D7DA               	goto	l1193
 39808  01117A  0A07               	xorlw	7	; case 4
 39809  01117C  B4D8               	btfsc	status,2,c
 39810  01117E  D7DB               	goto	l1194
 39811  011180  0A01               	xorlw	1	; case 5
 39812  011182  B4D8               	btfsc	status,2,c
 39813  011184  D7DC               	goto	l1195
 39814  011186  0A03               	xorlw	3	; case 6
 39815  011188  A4D8               	btfss	status,2,c
 39816  01118A  0012               	return	
 39817  01118C  D7DC               	goto	l1196
 39818  01118E                     __end_of__parse_command_calibration:
 39819                           	opt stack 0
 39820                           tosu	equ	0xFFF
 39821                           tosh	equ	0xFFE
 39822                           tosl	equ	0xFFD
 39823                           pclath	equ	0xFFA
 39824                           tblptru	equ	0xFF8
 39825                           tblptrh	equ	0xFF7
 39826                           tblptrl	equ	0xFF6
 39827                           tablat	equ	0xFF5
 39828                           prodh	equ	0xFF4
 39829                           prodl	equ	0xFF3
 39830                           intcon	equ	0xFF2
 39831                           intcon2	equ	0xFF1
 39832                           intcon3	equ	0xFF0
 39833                           postinc0	equ	0xFEE
 39834                           wreg	equ	0xFE8
 39835                           indf1	equ	0xFE7
 39836                           postinc1	equ	0xFE6
 39837                           postdec1	equ	0xFE5
 39838                           plusw1	equ	0xFE3
 39839                           fsr1h	equ	0xFE2
 39840                           fsr1l	equ	0xFE1
 39841                           indf2	equ	0xFDF
 39842                           postinc2	equ	0xFDE
 39843                           postdec2	equ	0xFDD
 39844                           plusw2	equ	0xFDB
 39845                           fsr2h	equ	0xFDA
 39846                           fsr2l	equ	0xFD9
 39847                           status	equ	0xFD8
 39848                           
 39849 ;; *************** function _schedule_eeprom_write_task *****************
 39850 ;; Defined at:
 39851 ;;		line 741 in file "i2c.c"
 39852 ;; Parameters:    Size  Location     Type
 39853 ;;  task            1    wreg     enum E6775
 39854 ;; Auto vars:     Size  Location     Type
 39855 ;;  task            1    1[BANK0 ] enum E6775
 39856 ;;  idx             1    2[BANK0 ] unsigned char 
 39857 ;; Return value:  Size  Location     Type
 39858 ;;                  1    wreg      void 
 39859 ;; Registers used:
 39860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39861 ;; Tracked objects:
 39862 ;;		On entry : 0/0
 39863 ;;		On exit  : 0/0
 39864 ;;		Unchanged: 0/0
 39865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39869 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39870 ;;Total ram usage:        3 bytes
 39871 ;; Hardware stack levels used:    1
 39872 ;; Hardware stack levels required when called:   10
 39873 ;; This function calls:
 39874 ;;		Nothing
 39875 ;; This function is called by:
 39876 ;;		__parse_command_calibration
 39877 ;;		_i2c_eeprom_read_calibration
 39878 ;; This function uses a non-reentrant model
 39879 ;;
 39880                           
 39881                           	psect	text192
 39882  014E9E                     __ptext192:
 39883                           	opt stack 0
 39884  014E9E                     _schedule_eeprom_write_task:
 39885                           	opt stack 18
 39886                           
 39887                           ;incstack = 0
 39888                           ;schedule_eeprom_write_task@task stored from wreg
 39889  014E9E  0100               	movlb	0	; () banked
 39890  014EA0  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 39891                           
 39892                           ;i2c.c: 743: uint8_t idx;;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write
      +                          _index; idx=(idx+1) & 0x0F)
 39893  014EA2  C01E  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 39894  014EA6  D010               	goto	l1660
 39895  014EA8                     
 39896                           ;i2c.c: 746: {;i2c.c: 747: if (task_list[idx] == task)
 39897  014EA8  0100               	movlb	0	; () banked
 39898  014EAA  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 39899  014EAC  0D01               	mullw	1
 39900  014EAE  0E68               	movlw	low _task_list
 39901  014EB0  24F3               	addwf	prodl,w,c
 39902  014EB2  6ED9               	movwf	fsr2l,c
 39903  014EB4  0E04               	movlw	high _task_list
 39904  014EB6  20F4               	addwfc	prodh,w,c
 39905  014EB8  6EDA               	movwf	fsr2h,c
 39906  014EBA  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 39907  014EBC  18DE               	xorwf	postinc2,w,c
 39908  014EBE  B4D8               	btfsc	status,2,c
 39909  014EC0  0012               	return	
 39910                           
 39911                           ; BSR set to: 0
 39912                           
 39913                           ; BSR set to: 0
 39914                           
 39915                           ; BSR set to: 0
 39916                           ;i2c.c: 748: {;i2c.c: 750: return;
 39917  014EC2  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 39918  014EC4  0B0F               	andlw	15
 39919  014EC6  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 39920  014EC8                     l1660:
 39921  014EC8  501D               	movf	_task_list_write_index,w,c
 39922  014ECA  0100               	movlb	0	; () banked
 39923  014ECC  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 39924  014ECE  A4D8               	btfss	status,2,c
 39925  014ED0  D7EB               	goto	l1661
 39926                           
 39927                           ; BSR set to: 0
 39928                           ;i2c.c: 751: };i2c.c: 752: };i2c.c: 754: task_list[task_list_write_index] = task;
 39929                           
 39930                           ; BSR set to: 0
 39931  014ED2  501D               	movf	_task_list_write_index,w,c
 39932  014ED4  0D01               	mullw	1
 39933  014ED6  0E68               	movlw	low _task_list
 39934  014ED8  24F3               	addwf	prodl,w,c
 39935  014EDA  6ED9               	movwf	fsr2l,c
 39936  014EDC  0E04               	movlw	high _task_list
 39937  014EDE  20F4               	addwfc	prodh,w,c
 39938  014EE0  6EDA               	movwf	fsr2h,c
 39939  014EE2  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 39940                           
 39941                           ; BSR set to: 0
 39942                           ;i2c.c: 755: ++task_list_write_index;
 39943  014EE6  2A1D               	incf	_task_list_write_index,f,c
 39944                           
 39945                           ; BSR set to: 0
 39946                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 39947  014EE8  0E0F               	movlw	15
 39948  014EEA  161D               	andwf	_task_list_write_index,f,c
 39949                           
 39950                           ; BSR set to: 0
 39951  014EEC  0012               	return		;funcret
 39952  014EEE                     __end_of_schedule_eeprom_write_task:
 39953                           	opt stack 0
 39954                           tosu	equ	0xFFF
 39955                           tosh	equ	0xFFE
 39956                           tosl	equ	0xFFD
 39957                           pclath	equ	0xFFA
 39958                           tblptru	equ	0xFF8
 39959                           tblptrh	equ	0xFF7
 39960                           tblptrl	equ	0xFF6
 39961                           tablat	equ	0xFF5
 39962                           prodh	equ	0xFF4
 39963                           prodl	equ	0xFF3
 39964                           intcon	equ	0xFF2
 39965                           intcon2	equ	0xFF1
 39966                           intcon3	equ	0xFF0
 39967                           postinc0	equ	0xFEE
 39968                           wreg	equ	0xFE8
 39969                           indf1	equ	0xFE7
 39970                           postinc1	equ	0xFE6
 39971                           postdec1	equ	0xFE5
 39972                           plusw1	equ	0xFE3
 39973                           fsr1h	equ	0xFE2
 39974                           fsr1l	equ	0xFE1
 39975                           indf2	equ	0xFDF
 39976                           postinc2	equ	0xFDE
 39977                           postdec2	equ	0xFDD
 39978                           plusw2	equ	0xFDB
 39979                           fsr2h	equ	0xFDA
 39980                           fsr2l	equ	0xFD9
 39981                           status	equ	0xFD8
 39982                           
 39983 ;; *************** function __fill_buffer_get_status *****************
 39984 ;; Defined at:
 39985 ;;		line 269 in file "app_device_custom_hid.c"
 39986 ;; Parameters:    Size  Location     Type
 39987 ;;		None
 39988 ;; Auto vars:     Size  Location     Type
 39989 ;;		None
 39990 ;; Return value:  Size  Location     Type
 39991 ;;                  1    wreg      void 
 39992 ;; Registers used:
 39993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39994 ;; Tracked objects:
 39995 ;;		On entry : 0/0
 39996 ;;		On exit  : 0/0
 39997 ;;		Unchanged: 0/0
 39998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40002 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40003 ;;Total ram usage:        4 bytes
 40004 ;; Hardware stack levels used:    1
 40005 ;; Hardware stack levels required when called:   11
 40006 ;; This function calls:
 40007 ;;		_buck_get_dutycycle
 40008 ;;		_buck_get_mode
 40009 ;;		_buck_remote_get_dutycycle
 40010 ;;		_buck_remote_get_status
 40011 ;;		_rtcc_get_day
 40012 ;;		_rtcc_get_hours
 40013 ;;		_rtcc_get_minutes
 40014 ;;		_rtcc_get_month
 40015 ;;		_rtcc_get_seconds
 40016 ;;		_rtcc_get_year
 40017 ;;		_ui_get_status
 40018 ;; This function is called by:
 40019 ;;		_APP_DeviceCustomHIDTasks
 40020 ;; This function uses a non-reentrant model
 40021 ;;
 40022                           
 40023                           	psect	text193
 40024  00F4E6                     __ptext193:
 40025                           	opt stack 0
 40026  00F4E6                     __fill_buffer_get_status:
 40027                           	opt stack 18
 40028                           
 40029                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 40030                           
 40031                           ; BSR set to: 0
 40032                           ;incstack = 0
 40033  00F4E6  0E10               	movlw	16
 40034  00F4E8  0103               	movlb	3	; () banked
 40035  00F4EA  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 40036                           
 40037                           ; BSR set to: 3
 40038                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 40039  00F4EC  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 40040                           
 40041                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 40042  00F4F0  0102               	movlb	2	; () banked
 40043  00F4F2  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 40044  00F4F4  0103               	movlb	3	; () banked
 40045  00F4F6  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 40046                           
 40047                           ; BSR set to: 3
 40048                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 40049  00F4F8  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 40050                           
 40051                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 40052  00F4FC  0102               	movlb	2	; () banked
 40053  00F4FE  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 40054  00F500  0103               	movlb	3	; () banked
 40055  00F502  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 40056                           
 40057                           ; BSR set to: 3
 40058                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 40059  00F504  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 40060                           
 40061                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 40062  00F508  0102               	movlb	2	; () banked
 40063  00F50A  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 40064  00F50C  0103               	movlb	3	; () banked
 40065  00F50E  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 40066                           
 40067                           ; BSR set to: 3
 40068                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 40069  00F510  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 40070                           
 40071                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 40072  00F514  0102               	movlb	2	; () banked
 40073  00F516  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 40074  00F518  0103               	movlb	3	; () banked
 40075  00F51A  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 40076                           
 40077                           ; BSR set to: 3
 40078                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 40079  00F51C  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 40080                           
 40081                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 40082  00F520  0102               	movlb	2	; () banked
 40083  00F522  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 40084  00F524  0103               	movlb	3	; () banked
 40085  00F526  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 40086                           
 40087                           ; BSR set to: 3
 40088                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 40089  00F528  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 40090                           
 40091                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 40092  00F52C  0102               	movlb	2	; () banked
 40093  00F52E  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 40094  00F530  0103               	movlb	3	; () banked
 40095  00F532  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 40096                           
 40097                           ; BSR set to: 3
 40098                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 40099  00F534  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 40100                           
 40101                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 40102  00F538  0102               	movlb	2	; () banked
 40103  00F53A  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 40104  00F53C  0103               	movlb	3	; () banked
 40105  00F53E  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 40106                           
 40107                           ; BSR set to: 3
 40108                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 40109  00F540  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 40110                           
 40111                           ; BSR set to: 3
 40112                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 40113  00F544  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 40114                           
 40115                           ; BSR set to: 3
 40116                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 40117  00F548  EC09  F0AF         	call	_rtcc_get_year	;wreg free
 40118  00F54C  0103               	movlb	3	; () banked
 40119  00F54E  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 40120                           
 40121                           ; BSR set to: 3
 40122                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 40123  00F550  EC17  F0AF         	call	_rtcc_get_month	;wreg free
 40124  00F554  0103               	movlb	3	; () banked
 40125  00F556  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 40126                           
 40127                           ; BSR set to: 3
 40128                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 40129  00F558  EC2C  F0AF         	call	_rtcc_get_day	;wreg free
 40130  00F55C  0103               	movlb	3	; () banked
 40131  00F55E  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 40132                           
 40133                           ; BSR set to: 3
 40134                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 40135  00F560  EC25  F0AF         	call	_rtcc_get_hours	;wreg free
 40136  00F564  0103               	movlb	3	; () banked
 40137  00F566  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 40138                           
 40139                           ; BSR set to: 3
 40140                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 40141  00F568  EC1E  F0AF         	call	_rtcc_get_minutes	;wreg free
 40142  00F56C  0103               	movlb	3	; () banked
 40143  00F56E  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 40144                           
 40145                           ; BSR set to: 3
 40146                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 40147  00F570  EC10  F0AF         	call	_rtcc_get_seconds	;wreg free
 40148  00F574  0103               	movlb	3	; () banked
 40149  00F576  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 40150                           
 40151                           ; BSR set to: 3
 40152                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 40153  00F578  EC79  F0AF         	call	_buck_get_mode	;wreg free
 40154  00F57C  0103               	movlb	3	; () banked
 40155  00F57E  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 40156                           
 40157                           ; BSR set to: 3
 40158                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 40159  00F580  EC74  F0AF         	call	_buck_get_dutycycle	;wreg free
 40160  00F584  0103               	movlb	3	; () banked
 40161  00F586  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 40162                           
 40163                           ; BSR set to: 3
 40164                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 40165  00F588  EC3E  F0AC         	call	_buck_remote_get_status	;wreg free
 40166  00F58C  0103               	movlb	3	; () banked
 40167  00F58E  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 40168                           
 40169                           ; BSR set to: 3
 40170                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 40171  00F590  EC71  F0AF         	call	_buck_remote_get_dutycycle	;wreg free
 40172  00F594  0103               	movlb	3	; () banked
 40173  00F596  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 40174                           
 40175                           ; BSR set to: 3
 40176                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 40177  00F598  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 40178                           
 40179                           ; BSR set to: 3
 40180                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 40181  00F59C  0102               	movlb	2	; () banked
 40182  00F59E  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 40183  00F5A0  0103               	movlb	3	; () banked
 40184  00F5A2  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 40185                           
 40186                           ; BSR set to: 3
 40187                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 40188  00F5A4  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 40189                           
 40190                           ; BSR set to: 3
 40191                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 40192  00F5A8  0102               	movlb	2	; () banked
 40193  00F5AA  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 40194  00F5AC  0103               	movlb	3	; () banked
 40195  00F5AE  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 40196                           
 40197                           ; BSR set to: 3
 40198                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 40199  00F5B0  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 40200                           
 40201                           ; BSR set to: 3
 40202                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 40203  00F5B4  0102               	movlb	2	; () banked
 40204  00F5B6  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 40205  00F5B8  0103               	movlb	3	; () banked
 40206  00F5BA  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 40207                           
 40208                           ; BSR set to: 3
 40209                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 40210  00F5BC  0102               	movlb	2	; () banked
 40211  00F5BE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40212  00F5C0  0B0F               	andlw	15
 40213  00F5C2  0B03               	andlw	3
 40214  00F5C4  0100               	movlb	0	; () banked
 40215  00F5C6  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40216  00F5C8  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40217  00F5CA  90D8               	bcf	status,0,c
 40218  00F5CC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40219  00F5CE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40220  00F5D0  0E0A               	movlw	low (_os+10)
 40221  00F5D2  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40222  00F5D4  6ED9               	movwf	fsr2l,c
 40223  00F5D6  0E02               	movlw	high (_os+10)
 40224  00F5D8  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40225  00F5DA  6EDA               	movwf	fsr2h,c
 40226  00F5DC  50DF               	movf	indf2,w,c
 40227  00F5DE  0103               	movlb	3	; () banked
 40228  00F5E0  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 40229                           
 40230                           ; BSR set to: 3
 40231                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40232  00F5E2  0102               	movlb	2	; () banked
 40233  00F5E4  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40234  00F5E6  0B0F               	andlw	15
 40235  00F5E8  0B03               	andlw	3
 40236  00F5EA  0100               	movlb	0	; () banked
 40237  00F5EC  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40238  00F5EE  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40239  00F5F0  90D8               	bcf	status,0,c
 40240  00F5F2  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40241  00F5F4  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40242  00F5F6  0E0A               	movlw	low (_os+10)
 40243  00F5F8  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40244  00F5FA  6ED9               	movwf	fsr2l,c
 40245  00F5FC  0E02               	movlw	high (_os+10)
 40246  00F5FE  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40247  00F600  6EDA               	movwf	fsr2h,c
 40248  00F602  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40249  00F606  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40250  00F60A  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40251  00F60E  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40252  00F610  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40253  00F612  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40254  00F614  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40255  00F616  0103               	movlb	3	; () banked
 40256  00F618  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 40257                           
 40258                           ; BSR set to: 3
 40259                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40260  00F61A  0102               	movlb	2	; () banked
 40261  00F61C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40262  00F61E  0B0F               	andlw	15
 40263  00F620  0B03               	andlw	3
 40264  00F622  0100               	movlb	0	; () banked
 40265  00F624  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40266  00F626  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40267  00F628  90D8               	bcf	status,0,c
 40268  00F62A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40269  00F62C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40270  00F62E  0E1F               	movlw	low (_os+31)
 40271  00F630  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40272  00F632  6ED9               	movwf	fsr2l,c
 40273  00F634  0E02               	movlw	high (_os+31)
 40274  00F636  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40275  00F638  6EDA               	movwf	fsr2h,c
 40276  00F63A  50DF               	movf	indf2,w,c
 40277  00F63C  0103               	movlb	3	; () banked
 40278  00F63E  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 40279                           
 40280                           ; BSR set to: 3
 40281                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 40282  00F640  0102               	movlb	2	; () banked
 40283  00F642  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40284  00F644  0B0F               	andlw	15
 40285  00F646  0B03               	andlw	3
 40286  00F648  0100               	movlb	0	; () banked
 40287  00F64A  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40288  00F64C  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40289  00F64E  90D8               	bcf	status,0,c
 40290  00F650  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40291  00F652  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40292  00F654  0E1F               	movlw	low (_os+31)
 40293  00F656  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40294  00F658  6ED9               	movwf	fsr2l,c
 40295  00F65A  0E02               	movlw	high (_os+31)
 40296  00F65C  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40297  00F65E  6EDA               	movwf	fsr2h,c
 40298  00F660  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40299  00F664  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40300  00F668  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40301  00F66C  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40302  00F66E  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40303  00F670  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40304  00F672  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40305  00F674  0103               	movlb	3	; () banked
 40306  00F676  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 40307                           
 40308                           ; BSR set to: 3
 40309                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 40310  00F678  0102               	movlb	2	; () banked
 40311  00F67A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40312  00F67C  0B0F               	andlw	15
 40313  00F67E  0B03               	andlw	3
 40314  00F680  0100               	movlb	0	; () banked
 40315  00F682  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40316  00F684  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40317  00F686  90D8               	bcf	status,0,c
 40318  00F688  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40319  00F68A  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40320  00F68C  0E14               	movlw	low (_os+20)
 40321  00F68E  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40322  00F690  6ED9               	movwf	fsr2l,c
 40323  00F692  0E02               	movlw	high (_os+20)
 40324  00F694  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40325  00F696  6EDA               	movwf	fsr2h,c
 40326  00F698  50DF               	movf	indf2,w,c
 40327  00F69A  0103               	movlb	3	; () banked
 40328  00F69C  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 40329                           
 40330                           ; BSR set to: 3
 40331                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40332  00F69E  0102               	movlb	2	; () banked
 40333  00F6A0  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40334  00F6A2  0B0F               	andlw	15
 40335  00F6A4  0B03               	andlw	3
 40336  00F6A6  0100               	movlb	0	; () banked
 40337  00F6A8  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40338  00F6AA  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40339  00F6AC  90D8               	bcf	status,0,c
 40340  00F6AE  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40341  00F6B0  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40342  00F6B2  0E14               	movlw	low (_os+20)
 40343  00F6B4  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40344  00F6B6  6ED9               	movwf	fsr2l,c
 40345  00F6B8  0E02               	movlw	high (_os+20)
 40346  00F6BA  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40347  00F6BC  6EDA               	movwf	fsr2h,c
 40348  00F6BE  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40349  00F6C2  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40350  00F6C6  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40351  00F6CA  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40352  00F6CC  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40353  00F6CE  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40354  00F6D0  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40355  00F6D2  0103               	movlb	3	; () banked
 40356  00F6D4  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 40357                           
 40358                           ; BSR set to: 3
 40359                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40360  00F6D6  0102               	movlb	2	; () banked
 40361  00F6D8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40362  00F6DA  0B0F               	andlw	15
 40363  00F6DC  0B03               	andlw	3
 40364  00F6DE  0100               	movlb	0	; () banked
 40365  00F6E0  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40366  00F6E2  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40367  00F6E4  90D8               	bcf	status,0,c
 40368  00F6E6  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40369  00F6E8  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40370  00F6EA  0E29               	movlw	low (_os+41)
 40371  00F6EC  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40372  00F6EE  6ED9               	movwf	fsr2l,c
 40373  00F6F0  0E02               	movlw	high (_os+41)
 40374  00F6F2  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40375  00F6F4  6EDA               	movwf	fsr2h,c
 40376  00F6F6  50DF               	movf	indf2,w,c
 40377  00F6F8  0103               	movlb	3	; () banked
 40378  00F6FA  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 40379                           
 40380                           ; BSR set to: 3
 40381                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 40382  00F6FC  0102               	movlb	2	; () banked
 40383  00F6FE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40384  00F700  0B0F               	andlw	15
 40385  00F702  0B03               	andlw	3
 40386  00F704  0100               	movlb	0	; () banked
 40387  00F706  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40388  00F708  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40389  00F70A  90D8               	bcf	status,0,c
 40390  00F70C  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40391  00F70E  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40392  00F710  0E29               	movlw	low (_os+41)
 40393  00F712  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40394  00F714  6ED9               	movwf	fsr2l,c
 40395  00F716  0E02               	movlw	high (_os+41)
 40396  00F718  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40397  00F71A  6EDA               	movwf	fsr2h,c
 40398  00F71C  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40399  00F720  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40400  00F724  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40401  00F728  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40402  00F72A  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40403  00F72C  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40404  00F72E  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40405  00F730  0103               	movlb	3	; () banked
 40406  00F732  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 40407                           
 40408                           ; BSR set to: 3
 40409                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 40410  00F734  EC6E  F0AF         	call	_ui_get_status	;wreg free
 40411  00F738  0103               	movlb	3	; () banked
 40412  00F73A  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 40413                           
 40414                           ; BSR set to: 3
 40415                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 40416  00F73C  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 40417                           
 40418                           ; BSR set to: 3
 40419  00F740  0012               	return		;funcret
 40420  00F742                     __end_of__fill_buffer_get_status:
 40421                           	opt stack 0
 40422                           tosu	equ	0xFFF
 40423                           tosh	equ	0xFFE
 40424                           tosl	equ	0xFFD
 40425                           pclath	equ	0xFFA
 40426                           tblptru	equ	0xFF8
 40427                           tblptrh	equ	0xFF7
 40428                           tblptrl	equ	0xFF6
 40429                           tablat	equ	0xFF5
 40430                           prodh	equ	0xFF4
 40431                           prodl	equ	0xFF3
 40432                           intcon	equ	0xFF2
 40433                           intcon2	equ	0xFF1
 40434                           intcon3	equ	0xFF0
 40435                           postinc0	equ	0xFEE
 40436                           wreg	equ	0xFE8
 40437                           indf1	equ	0xFE7
 40438                           postinc1	equ	0xFE6
 40439                           postdec1	equ	0xFE5
 40440                           plusw1	equ	0xFE3
 40441                           fsr1h	equ	0xFE2
 40442                           fsr1l	equ	0xFE1
 40443                           indf2	equ	0xFDF
 40444                           postinc2	equ	0xFDE
 40445                           postdec2	equ	0xFDD
 40446                           plusw2	equ	0xFDB
 40447                           fsr2h	equ	0xFDA
 40448                           fsr2l	equ	0xFD9
 40449                           status	equ	0xFD8
 40450                           
 40451 ;; *************** function _ui_get_status *****************
 40452 ;; Defined at:
 40453 ;;		line 12 in file "ui.c"
 40454 ;; Parameters:    Size  Location     Type
 40455 ;;		None
 40456 ;; Auto vars:     Size  Location     Type
 40457 ;;		None
 40458 ;; Return value:  Size  Location     Type
 40459 ;;                  1    wreg      enum E8011
 40460 ;; Registers used:
 40461 ;;		wreg, status,2
 40462 ;; Tracked objects:
 40463 ;;		On entry : 0/0
 40464 ;;		On exit  : 0/0
 40465 ;;		Unchanged: 0/0
 40466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40471 ;;Total ram usage:        0 bytes
 40472 ;; Hardware stack levels used:    1
 40473 ;; Hardware stack levels required when called:   10
 40474 ;; This function calls:
 40475 ;;		Nothing
 40476 ;; This function is called by:
 40477 ;;		_main
 40478 ;;		__fill_buffer_get_status
 40479 ;; This function uses a non-reentrant model
 40480 ;;
 40481                           
 40482                           	psect	text194
 40483  015EDC                     __ptext194:
 40484                           	opt stack 0
 40485  015EDC                     _ui_get_status:
 40486                           	opt stack 20
 40487                           
 40488                           ;ui.c: 14: return userInterfaceStatus;
 40489                           
 40490                           ; BSR set to: 3
 40491                           ;incstack = 0
 40492  015EDC  0101               	movlb	1	; () banked
 40493  015EDE  51F3               	movf	_userInterfaceStatus& (0+255),w,b
 40494  015EE0  0012               	return	
 40495  015EE2                     __end_of_ui_get_status:
 40496                           	opt stack 0
 40497                           tosu	equ	0xFFF
 40498                           tosh	equ	0xFFE
 40499                           tosl	equ	0xFFD
 40500                           pclath	equ	0xFFA
 40501                           tblptru	equ	0xFF8
 40502                           tblptrh	equ	0xFF7
 40503                           tblptrl	equ	0xFF6
 40504                           tablat	equ	0xFF5
 40505                           prodh	equ	0xFF4
 40506                           prodl	equ	0xFF3
 40507                           intcon	equ	0xFF2
 40508                           intcon2	equ	0xFF1
 40509                           intcon3	equ	0xFF0
 40510                           postinc0	equ	0xFEE
 40511                           wreg	equ	0xFE8
 40512                           indf1	equ	0xFE7
 40513                           postinc1	equ	0xFE6
 40514                           postdec1	equ	0xFE5
 40515                           plusw1	equ	0xFE3
 40516                           fsr1h	equ	0xFE2
 40517                           fsr1l	equ	0xFE1
 40518                           indf2	equ	0xFDF
 40519                           postinc2	equ	0xFDE
 40520                           postdec2	equ	0xFDD
 40521                           plusw2	equ	0xFDB
 40522                           fsr2h	equ	0xFDA
 40523                           fsr2l	equ	0xFD9
 40524                           status	equ	0xFD8
 40525                           
 40526 ;; *************** function _rtcc_get_year *****************
 40527 ;; Defined at:
 40528 ;;		line 127 in file "rtcc.c"
 40529 ;; Parameters:    Size  Location     Type
 40530 ;;		None
 40531 ;; Auto vars:     Size  Location     Type
 40532 ;;		None
 40533 ;; Return value:  Size  Location     Type
 40534 ;;                  1    wreg      unsigned char 
 40535 ;; Registers used:
 40536 ;;		wreg, status,2
 40537 ;; Tracked objects:
 40538 ;;		On entry : 0/0
 40539 ;;		On exit  : 0/0
 40540 ;;		Unchanged: 0/0
 40541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40546 ;;Total ram usage:        0 bytes
 40547 ;; Hardware stack levels used:    1
 40548 ;; Hardware stack levels required when called:   10
 40549 ;; This function calls:
 40550 ;;		Nothing
 40551 ;; This function is called by:
 40552 ;;		__fill_buffer_get_status
 40553 ;;		__display_time
 40554 ;;		__number_of_days
 40555 ;;		_rtcc_get_year_decimal
 40556 ;;		_rtcc_increment_year
 40557 ;;		_rtcc_decrement_year
 40558 ;;		_rtcc_write_eeprom
 40559 ;; This function uses a non-reentrant model
 40560 ;;
 40561                           
 40562                           	psect	text195
 40563  015E12                     __ptext195:
 40564                           	opt stack 0
 40565  015E12                     _rtcc_get_year:
 40566                           	opt stack 17
 40567                           
 40568                           ;rtcc.c: 129: RTCCFGbits.RTCPTR1 = 1;
 40569                           
 40570                           ; BSR set to: 1
 40571                           ;incstack = 0
 40572  015E12  010F               	movlb	15	; () banked
 40573  015E14  833F               	bsf	63,1,b	;volatile
 40574                           
 40575                           ;rtcc.c: 130: RTCCFGbits.RTCPTR0 = 1;
 40576  015E16  813F               	bsf	63,0,b	;volatile
 40577  015E18                     
 40578                           ; BSR set to: 15
 40579                           
 40580                           ; BSR set to: 15
 40581  015E18  B93F               	btfsc	63,4,b	;volatile
 40582  015E1A  D7FE               	goto	l2289
 40583                           
 40584                           ; BSR set to: 15
 40585                           ;rtcc.c: 132: return RTCVALL;
 40586                           
 40587                           ; BSR set to: 15
 40588  015E1C  513A               	movf	58,w,b	;volatile
 40589  015E1E  0012               	return	
 40590  015E20                     __end_of_rtcc_get_year:
 40591                           	opt stack 0
 40592                           tosu	equ	0xFFF
 40593                           tosh	equ	0xFFE
 40594                           tosl	equ	0xFFD
 40595                           pclath	equ	0xFFA
 40596                           tblptru	equ	0xFF8
 40597                           tblptrh	equ	0xFF7
 40598                           tblptrl	equ	0xFF6
 40599                           tablat	equ	0xFF5
 40600                           prodh	equ	0xFF4
 40601                           prodl	equ	0xFF3
 40602                           intcon	equ	0xFF2
 40603                           intcon2	equ	0xFF1
 40604                           intcon3	equ	0xFF0
 40605                           postinc0	equ	0xFEE
 40606                           wreg	equ	0xFE8
 40607                           indf1	equ	0xFE7
 40608                           postinc1	equ	0xFE6
 40609                           postdec1	equ	0xFE5
 40610                           plusw1	equ	0xFE3
 40611                           fsr1h	equ	0xFE2
 40612                           fsr1l	equ	0xFE1
 40613                           indf2	equ	0xFDF
 40614                           postinc2	equ	0xFDE
 40615                           postdec2	equ	0xFDD
 40616                           plusw2	equ	0xFDB
 40617                           fsr2h	equ	0xFDA
 40618                           fsr2l	equ	0xFD9
 40619                           status	equ	0xFD8
 40620                           
 40621 ;; *************** function _rtcc_get_seconds *****************
 40622 ;; Defined at:
 40623 ;;		line 317 in file "rtcc.c"
 40624 ;; Parameters:    Size  Location     Type
 40625 ;;		None
 40626 ;; Auto vars:     Size  Location     Type
 40627 ;;		None
 40628 ;; Return value:  Size  Location     Type
 40629 ;;                  1    wreg      unsigned char 
 40630 ;; Registers used:
 40631 ;;		wreg, status,2
 40632 ;; Tracked objects:
 40633 ;;		On entry : 0/0
 40634 ;;		On exit  : 0/0
 40635 ;;		Unchanged: 0/0
 40636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40641 ;;Total ram usage:        0 bytes
 40642 ;; Hardware stack levels used:    1
 40643 ;; Hardware stack levels required when called:   10
 40644 ;; This function calls:
 40645 ;;		Nothing
 40646 ;; This function is called by:
 40647 ;;		__fill_buffer_get_status
 40648 ;;		__display_time
 40649 ;;		_rtcc_get_seconds_decimal
 40650 ;;		_rtcc_increment_seconds
 40651 ;;		_rtcc_decrement_seconds
 40652 ;;		_rtcc_write_eeprom
 40653 ;; This function uses a non-reentrant model
 40654 ;;
 40655                           
 40656                           	psect	text196
 40657  015E20                     __ptext196:
 40658                           	opt stack 0
 40659  015E20                     _rtcc_get_seconds:
 40660                           	opt stack 17
 40661                           
 40662                           ;rtcc.c: 319: RTCCFGbits.RTCPTR1 = 0;
 40663                           
 40664                           ; BSR set to: 15
 40665                           ;incstack = 0
 40666  015E20  010F               	movlb	15	; () banked
 40667  015E22  933F               	bcf	63,1,b	;volatile
 40668                           
 40669                           ;rtcc.c: 320: RTCCFGbits.RTCPTR0 = 0;
 40670  015E24  913F               	bcf	63,0,b	;volatile
 40671  015E26                     
 40672                           ; BSR set to: 15
 40673                           
 40674                           ; BSR set to: 15
 40675  015E26  B93F               	btfsc	63,4,b	;volatile
 40676  015E28  D7FE               	goto	l2379
 40677                           
 40678                           ; BSR set to: 15
 40679                           ;rtcc.c: 322: return RTCVALL;
 40680                           
 40681                           ; BSR set to: 15
 40682  015E2A  513A               	movf	58,w,b	;volatile
 40683  015E2C  0012               	return	
 40684  015E2E                     __end_of_rtcc_get_seconds:
 40685                           	opt stack 0
 40686                           tosu	equ	0xFFF
 40687                           tosh	equ	0xFFE
 40688                           tosl	equ	0xFFD
 40689                           pclath	equ	0xFFA
 40690                           tblptru	equ	0xFF8
 40691                           tblptrh	equ	0xFF7
 40692                           tblptrl	equ	0xFF6
 40693                           tablat	equ	0xFF5
 40694                           prodh	equ	0xFF4
 40695                           prodl	equ	0xFF3
 40696                           intcon	equ	0xFF2
 40697                           intcon2	equ	0xFF1
 40698                           intcon3	equ	0xFF0
 40699                           postinc0	equ	0xFEE
 40700                           wreg	equ	0xFE8
 40701                           indf1	equ	0xFE7
 40702                           postinc1	equ	0xFE6
 40703                           postdec1	equ	0xFE5
 40704                           plusw1	equ	0xFE3
 40705                           fsr1h	equ	0xFE2
 40706                           fsr1l	equ	0xFE1
 40707                           indf2	equ	0xFDF
 40708                           postinc2	equ	0xFDE
 40709                           postdec2	equ	0xFDD
 40710                           plusw2	equ	0xFDB
 40711                           fsr2h	equ	0xFDA
 40712                           fsr2l	equ	0xFD9
 40713                           status	equ	0xFD8
 40714                           
 40715 ;; *************** function _rtcc_get_month *****************
 40716 ;; Defined at:
 40717 ;;		line 165 in file "rtcc.c"
 40718 ;; Parameters:    Size  Location     Type
 40719 ;;		None
 40720 ;; Auto vars:     Size  Location     Type
 40721 ;;		None
 40722 ;; Return value:  Size  Location     Type
 40723 ;;                  1    wreg      unsigned char 
 40724 ;; Registers used:
 40725 ;;		wreg, status,2
 40726 ;; Tracked objects:
 40727 ;;		On entry : 0/0
 40728 ;;		On exit  : 0/0
 40729 ;;		Unchanged: 0/0
 40730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40735 ;;Total ram usage:        0 bytes
 40736 ;; Hardware stack levels used:    1
 40737 ;; Hardware stack levels required when called:   10
 40738 ;; This function calls:
 40739 ;;		Nothing
 40740 ;; This function is called by:
 40741 ;;		__fill_buffer_get_status
 40742 ;;		__display_time
 40743 ;;		__number_of_days
 40744 ;;		_rtcc_get_month_decimal
 40745 ;;		_rtcc_increment_month
 40746 ;;		_rtcc_decrement_month
 40747 ;;		_rtcc_write_eeprom
 40748 ;; This function uses a non-reentrant model
 40749 ;;
 40750                           
 40751                           	psect	text197
 40752  015E2E                     __ptext197:
 40753                           	opt stack 0
 40754  015E2E                     _rtcc_get_month:
 40755                           	opt stack 17
 40756                           
 40757                           ;rtcc.c: 167: RTCCFGbits.RTCPTR1 = 1;
 40758                           
 40759                           ; BSR set to: 15
 40760                           ;incstack = 0
 40761  015E2E  010F               	movlb	15	; () banked
 40762  015E30  833F               	bsf	63,1,b	;volatile
 40763                           
 40764                           ;rtcc.c: 168: RTCCFGbits.RTCPTR0 = 0;
 40765  015E32  913F               	bcf	63,0,b	;volatile
 40766  015E34                     
 40767                           ; BSR set to: 15
 40768                           
 40769                           ; BSR set to: 15
 40770  015E34  B93F               	btfsc	63,4,b	;volatile
 40771  015E36  D7FE               	goto	l2307
 40772                           
 40773                           ; BSR set to: 15
 40774                           ;rtcc.c: 170: return RTCVALH;
 40775                           
 40776                           ; BSR set to: 15
 40777  015E38  513B               	movf	59,w,b	;volatile
 40778  015E3A  0012               	return	
 40779  015E3C                     __end_of_rtcc_get_month:
 40780                           	opt stack 0
 40781                           tosu	equ	0xFFF
 40782                           tosh	equ	0xFFE
 40783                           tosl	equ	0xFFD
 40784                           pclath	equ	0xFFA
 40785                           tblptru	equ	0xFF8
 40786                           tblptrh	equ	0xFF7
 40787                           tblptrl	equ	0xFF6
 40788                           tablat	equ	0xFF5
 40789                           prodh	equ	0xFF4
 40790                           prodl	equ	0xFF3
 40791                           intcon	equ	0xFF2
 40792                           intcon2	equ	0xFF1
 40793                           intcon3	equ	0xFF0
 40794                           postinc0	equ	0xFEE
 40795                           wreg	equ	0xFE8
 40796                           indf1	equ	0xFE7
 40797                           postinc1	equ	0xFE6
 40798                           postdec1	equ	0xFE5
 40799                           plusw1	equ	0xFE3
 40800                           fsr1h	equ	0xFE2
 40801                           fsr1l	equ	0xFE1
 40802                           indf2	equ	0xFDF
 40803                           postinc2	equ	0xFDE
 40804                           postdec2	equ	0xFDD
 40805                           plusw2	equ	0xFDB
 40806                           fsr2h	equ	0xFDA
 40807                           fsr2l	equ	0xFD9
 40808                           status	equ	0xFD8
 40809                           
 40810 ;; *************** function _rtcc_get_minutes *****************
 40811 ;; Defined at:
 40812 ;;		line 279 in file "rtcc.c"
 40813 ;; Parameters:    Size  Location     Type
 40814 ;;		None
 40815 ;; Auto vars:     Size  Location     Type
 40816 ;;		None
 40817 ;; Return value:  Size  Location     Type
 40818 ;;                  1    wreg      unsigned char 
 40819 ;; Registers used:
 40820 ;;		wreg, status,2
 40821 ;; Tracked objects:
 40822 ;;		On entry : 0/0
 40823 ;;		On exit  : 0/0
 40824 ;;		Unchanged: 0/0
 40825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40830 ;;Total ram usage:        0 bytes
 40831 ;; Hardware stack levels used:    1
 40832 ;; Hardware stack levels required when called:   10
 40833 ;; This function calls:
 40834 ;;		Nothing
 40835 ;; This function is called by:
 40836 ;;		__fill_buffer_get_status
 40837 ;;		__display_time
 40838 ;;		_rtcc_get_minutes_decimal
 40839 ;;		_rtcc_increment_minutes
 40840 ;;		_rtcc_decrement_minutes
 40841 ;;		_rtcc_write_eeprom
 40842 ;; This function uses a non-reentrant model
 40843 ;;
 40844                           
 40845                           	psect	text198
 40846  015E3C                     __ptext198:
 40847                           	opt stack 0
 40848  015E3C                     _rtcc_get_minutes:
 40849                           	opt stack 17
 40850                           
 40851                           ;rtcc.c: 281: RTCCFGbits.RTCPTR1 = 0;
 40852                           
 40853                           ; BSR set to: 15
 40854                           ;incstack = 0
 40855  015E3C  010F               	movlb	15	; () banked
 40856  015E3E  933F               	bcf	63,1,b	;volatile
 40857                           
 40858                           ;rtcc.c: 282: RTCCFGbits.RTCPTR0 = 0;
 40859  015E40  913F               	bcf	63,0,b	;volatile
 40860  015E42                     
 40861                           ; BSR set to: 15
 40862                           
 40863                           ; BSR set to: 15
 40864  015E42  B93F               	btfsc	63,4,b	;volatile
 40865  015E44  D7FE               	goto	l2361
 40866                           
 40867                           ; BSR set to: 15
 40868                           ;rtcc.c: 284: return RTCVALH;
 40869                           
 40870                           ; BSR set to: 15
 40871  015E46  513B               	movf	59,w,b	;volatile
 40872  015E48  0012               	return	
 40873  015E4A                     __end_of_rtcc_get_minutes:
 40874                           	opt stack 0
 40875                           tosu	equ	0xFFF
 40876                           tosh	equ	0xFFE
 40877                           tosl	equ	0xFFD
 40878                           pclath	equ	0xFFA
 40879                           tblptru	equ	0xFF8
 40880                           tblptrh	equ	0xFF7
 40881                           tblptrl	equ	0xFF6
 40882                           tablat	equ	0xFF5
 40883                           prodh	equ	0xFF4
 40884                           prodl	equ	0xFF3
 40885                           intcon	equ	0xFF2
 40886                           intcon2	equ	0xFF1
 40887                           intcon3	equ	0xFF0
 40888                           postinc0	equ	0xFEE
 40889                           wreg	equ	0xFE8
 40890                           indf1	equ	0xFE7
 40891                           postinc1	equ	0xFE6
 40892                           postdec1	equ	0xFE5
 40893                           plusw1	equ	0xFE3
 40894                           fsr1h	equ	0xFE2
 40895                           fsr1l	equ	0xFE1
 40896                           indf2	equ	0xFDF
 40897                           postinc2	equ	0xFDE
 40898                           postdec2	equ	0xFDD
 40899                           plusw2	equ	0xFDB
 40900                           fsr2h	equ	0xFDA
 40901                           fsr2l	equ	0xFD9
 40902                           status	equ	0xFD8
 40903                           
 40904 ;; *************** function _rtcc_get_hours *****************
 40905 ;; Defined at:
 40906 ;;		line 241 in file "rtcc.c"
 40907 ;; Parameters:    Size  Location     Type
 40908 ;;		None
 40909 ;; Auto vars:     Size  Location     Type
 40910 ;;		None
 40911 ;; Return value:  Size  Location     Type
 40912 ;;                  1    wreg      unsigned char 
 40913 ;; Registers used:
 40914 ;;		wreg, status,2
 40915 ;; Tracked objects:
 40916 ;;		On entry : 0/0
 40917 ;;		On exit  : 0/0
 40918 ;;		Unchanged: 0/0
 40919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40924 ;;Total ram usage:        0 bytes
 40925 ;; Hardware stack levels used:    1
 40926 ;; Hardware stack levels required when called:   10
 40927 ;; This function calls:
 40928 ;;		Nothing
 40929 ;; This function is called by:
 40930 ;;		__fill_buffer_get_status
 40931 ;;		__display_time
 40932 ;;		_rtcc_get_hours_decimal
 40933 ;;		_rtcc_increment_hours
 40934 ;;		_rtcc_decrement_hours
 40935 ;;		_rtcc_write_eeprom
 40936 ;; This function uses a non-reentrant model
 40937 ;;
 40938                           
 40939                           	psect	text199
 40940  015E4A                     __ptext199:
 40941                           	opt stack 0
 40942  015E4A                     _rtcc_get_hours:
 40943                           	opt stack 17
 40944                           
 40945                           ;rtcc.c: 243: RTCCFGbits.RTCPTR1 = 0;
 40946                           
 40947                           ; BSR set to: 15
 40948                           ;incstack = 0
 40949  015E4A  010F               	movlb	15	; () banked
 40950  015E4C  933F               	bcf	63,1,b	;volatile
 40951                           
 40952                           ;rtcc.c: 244: RTCCFGbits.RTCPTR0 = 1;
 40953  015E4E  813F               	bsf	63,0,b	;volatile
 40954  015E50                     
 40955                           ; BSR set to: 15
 40956                           
 40957                           ; BSR set to: 15
 40958  015E50  B93F               	btfsc	63,4,b	;volatile
 40959  015E52  D7FE               	goto	l2343
 40960                           
 40961                           ; BSR set to: 15
 40962                           ;rtcc.c: 246: return RTCVALL;
 40963                           
 40964                           ; BSR set to: 15
 40965  015E54  513A               	movf	58,w,b	;volatile
 40966  015E56  0012               	return	
 40967  015E58                     __end_of_rtcc_get_hours:
 40968                           	opt stack 0
 40969                           tosu	equ	0xFFF
 40970                           tosh	equ	0xFFE
 40971                           tosl	equ	0xFFD
 40972                           pclath	equ	0xFFA
 40973                           tblptru	equ	0xFF8
 40974                           tblptrh	equ	0xFF7
 40975                           tblptrl	equ	0xFF6
 40976                           tablat	equ	0xFF5
 40977                           prodh	equ	0xFF4
 40978                           prodl	equ	0xFF3
 40979                           intcon	equ	0xFF2
 40980                           intcon2	equ	0xFF1
 40981                           intcon3	equ	0xFF0
 40982                           postinc0	equ	0xFEE
 40983                           wreg	equ	0xFE8
 40984                           indf1	equ	0xFE7
 40985                           postinc1	equ	0xFE6
 40986                           postdec1	equ	0xFE5
 40987                           plusw1	equ	0xFE3
 40988                           fsr1h	equ	0xFE2
 40989                           fsr1l	equ	0xFE1
 40990                           indf2	equ	0xFDF
 40991                           postinc2	equ	0xFDE
 40992                           postdec2	equ	0xFDD
 40993                           plusw2	equ	0xFDB
 40994                           fsr2h	equ	0xFDA
 40995                           fsr2l	equ	0xFD9
 40996                           status	equ	0xFD8
 40997                           
 40998 ;; *************** function _rtcc_get_day *****************
 40999 ;; Defined at:
 41000 ;;		line 203 in file "rtcc.c"
 41001 ;; Parameters:    Size  Location     Type
 41002 ;;		None
 41003 ;; Auto vars:     Size  Location     Type
 41004 ;;		None
 41005 ;; Return value:  Size  Location     Type
 41006 ;;                  1    wreg      unsigned char 
 41007 ;; Registers used:
 41008 ;;		wreg, status,2
 41009 ;; Tracked objects:
 41010 ;;		On entry : 0/0
 41011 ;;		On exit  : 0/0
 41012 ;;		Unchanged: 0/0
 41013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41018 ;;Total ram usage:        0 bytes
 41019 ;; Hardware stack levels used:    1
 41020 ;; Hardware stack levels required when called:   10
 41021 ;; This function calls:
 41022 ;;		Nothing
 41023 ;; This function is called by:
 41024 ;;		__fill_buffer_get_status
 41025 ;;		__display_time
 41026 ;;		_rtcc_correct_day
 41027 ;;		_rtcc_get_day_decimal
 41028 ;;		_rtcc_increment_day
 41029 ;;		_rtcc_decrement_day
 41030 ;;		_rtcc_read_eeprom
 41031 ;;		_rtcc_write_eeprom
 41032 ;; This function uses a non-reentrant model
 41033 ;;
 41034                           
 41035                           	psect	text200
 41036  015E58                     __ptext200:
 41037                           	opt stack 0
 41038  015E58                     _rtcc_get_day:
 41039                           	opt stack 17
 41040                           
 41041                           ;rtcc.c: 205: RTCCFGbits.RTCPTR1 = 1;
 41042                           
 41043                           ; BSR set to: 15
 41044                           ;incstack = 0
 41045  015E58  010F               	movlb	15	; () banked
 41046  015E5A  833F               	bsf	63,1,b	;volatile
 41047                           
 41048                           ;rtcc.c: 206: RTCCFGbits.RTCPTR0 = 0;
 41049  015E5C  913F               	bcf	63,0,b	;volatile
 41050  015E5E                     
 41051                           ; BSR set to: 15
 41052                           
 41053                           ; BSR set to: 15
 41054  015E5E  B93F               	btfsc	63,4,b	;volatile
 41055  015E60  D7FE               	goto	l2325
 41056                           
 41057                           ; BSR set to: 15
 41058                           ;rtcc.c: 208: return RTCVALL;
 41059                           
 41060                           ; BSR set to: 15
 41061  015E62  513A               	movf	58,w,b	;volatile
 41062  015E64  0012               	return	
 41063  015E66                     __end_of_rtcc_get_day:
 41064                           	opt stack 0
 41065                           tosu	equ	0xFFF
 41066                           tosh	equ	0xFFE
 41067                           tosl	equ	0xFFD
 41068                           pclath	equ	0xFFA
 41069                           tblptru	equ	0xFF8
 41070                           tblptrh	equ	0xFF7
 41071                           tblptrl	equ	0xFF6
 41072                           tablat	equ	0xFF5
 41073                           prodh	equ	0xFF4
 41074                           prodl	equ	0xFF3
 41075                           intcon	equ	0xFF2
 41076                           intcon2	equ	0xFF1
 41077                           intcon3	equ	0xFF0
 41078                           postinc0	equ	0xFEE
 41079                           wreg	equ	0xFE8
 41080                           indf1	equ	0xFE7
 41081                           postinc1	equ	0xFE6
 41082                           postdec1	equ	0xFE5
 41083                           plusw1	equ	0xFE3
 41084                           fsr1h	equ	0xFE2
 41085                           fsr1l	equ	0xFE1
 41086                           indf2	equ	0xFDF
 41087                           postinc2	equ	0xFDE
 41088                           postdec2	equ	0xFDD
 41089                           plusw2	equ	0xFDB
 41090                           fsr2h	equ	0xFDA
 41091                           fsr2l	equ	0xFD9
 41092                           status	equ	0xFD8
 41093                           
 41094 ;; *************** function _buck_remote_get_status *****************
 41095 ;; Defined at:
 41096 ;;		line 650 in file "buck.c"
 41097 ;; Parameters:    Size  Location     Type
 41098 ;;		None
 41099 ;; Auto vars:     Size  Location     Type
 41100 ;;  retval          1    0[BANK0 ] unsigned char 
 41101 ;; Return value:  Size  Location     Type
 41102 ;;                  1    wreg      unsigned char 
 41103 ;; Registers used:
 41104 ;;		wreg, status,2, status,0
 41105 ;; Tracked objects:
 41106 ;;		On entry : 0/0
 41107 ;;		On exit  : 0/0
 41108 ;;		Unchanged: 0/0
 41109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41113 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41114 ;;Total ram usage:        1 bytes
 41115 ;; Hardware stack levels used:    1
 41116 ;; Hardware stack levels required when called:   10
 41117 ;; This function calls:
 41118 ;;		Nothing
 41119 ;; This function is called by:
 41120 ;;		__fill_buffer_get_status
 41121 ;; This function uses a non-reentrant model
 41122 ;;
 41123                           
 41124                           	psect	text201
 41125  01587C                     __ptext201:
 41126                           	opt stack 0
 41127  01587C                     _buck_remote_get_status:
 41128                           	opt stack 18
 41129                           
 41130                           ;buck.c: 652: uint8_t retval = 0x00;
 41131                           
 41132                           ; BSR set to: 15
 41133                           ;incstack = 0
 41134  01587C  0E00               	movlw	0
 41135  01587E  0100               	movlb	0	; () banked
 41136  015880  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 41137                           
 41138                           ;buck.c: 653: if(buck_remote_enable)
 41139  015882  0101               	movlb	1	; () banked
 41140  015884  51F1               	movf	_buck_remote_enable& (0+255),w,b
 41141  015886  B4D8               	btfsc	status,2,c
 41142  015888  D002               	goto	l2649
 41143                           
 41144                           ; BSR set to: 1
 41145                           ;buck.c: 654: retval |= 0x01;
 41146  01588A  0100               	movlb	0	; () banked
 41147  01588C  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 41148  01588E                     l2649:
 41149                           
 41150                           ;buck.c: 655: if(buck_remote_on)
 41151                           
 41152                           ; BSR set to: 0
 41153  01588E  0100               	movlb	0	; () banked
 41154  015890  51E4               	movf	_buck_remote_on& (0+255),w,b
 41155  015892  A4D8               	btfss	status,2,c
 41156                           
 41157                           ; BSR set to: 0
 41158                           ;buck.c: 656: retval |= 0x02;
 41159  015894  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 41160                           
 41161                           ; BSR set to: 0
 41162                           ;buck.c: 657: if(buck_remote_synchronous)
 41163                           
 41164                           ; BSR set to: 0
 41165  015896  51E3               	movf	_buck_remote_synchronous& (0+255),w,b
 41166  015898  B4D8               	btfsc	status,2,c
 41167  01589A  D002               	goto	l2651
 41168                           
 41169                           ; BSR set to: 0
 41170                           ;buck.c: 658: retval |= 0x03;
 41171  01589C  0E03               	movlw	3
 41172  01589E  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 41173  0158A0                     l2651:
 41174                           
 41175                           ; BSR set to: 0
 41176                           ;buck.c: 659: return retval;
 41177                           
 41178                           ; BSR set to: 0
 41179  0158A0  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 41180  0158A2  0012               	return	
 41181  0158A4                     __end_of_buck_remote_get_status:
 41182                           	opt stack 0
 41183                           tosu	equ	0xFFF
 41184                           tosh	equ	0xFFE
 41185                           tosl	equ	0xFFD
 41186                           pclath	equ	0xFFA
 41187                           tblptru	equ	0xFF8
 41188                           tblptrh	equ	0xFF7
 41189                           tblptrl	equ	0xFF6
 41190                           tablat	equ	0xFF5
 41191                           prodh	equ	0xFF4
 41192                           prodl	equ	0xFF3
 41193                           intcon	equ	0xFF2
 41194                           intcon2	equ	0xFF1
 41195                           intcon3	equ	0xFF0
 41196                           postinc0	equ	0xFEE
 41197                           wreg	equ	0xFE8
 41198                           indf1	equ	0xFE7
 41199                           postinc1	equ	0xFE6
 41200                           postdec1	equ	0xFE5
 41201                           plusw1	equ	0xFE3
 41202                           fsr1h	equ	0xFE2
 41203                           fsr1l	equ	0xFE1
 41204                           indf2	equ	0xFDF
 41205                           postinc2	equ	0xFDE
 41206                           postdec2	equ	0xFDD
 41207                           plusw2	equ	0xFDB
 41208                           fsr2h	equ	0xFDA
 41209                           fsr2l	equ	0xFD9
 41210                           status	equ	0xFD8
 41211                           
 41212 ;; *************** function _buck_remote_get_dutycycle *****************
 41213 ;; Defined at:
 41214 ;;		line 662 in file "buck.c"
 41215 ;; Parameters:    Size  Location     Type
 41216 ;;		None
 41217 ;; Auto vars:     Size  Location     Type
 41218 ;;		None
 41219 ;; Return value:  Size  Location     Type
 41220 ;;                  1    wreg      unsigned char 
 41221 ;; Registers used:
 41222 ;;		wreg, status,2
 41223 ;; Tracked objects:
 41224 ;;		On entry : 0/0
 41225 ;;		On exit  : 0/0
 41226 ;;		Unchanged: 0/0
 41227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41232 ;;Total ram usage:        0 bytes
 41233 ;; Hardware stack levels used:    1
 41234 ;; Hardware stack levels required when called:   10
 41235 ;; This function calls:
 41236 ;;		Nothing
 41237 ;; This function is called by:
 41238 ;;		__fill_buffer_get_status
 41239 ;; This function uses a non-reentrant model
 41240 ;;
 41241                           
 41242                           	psect	text202
 41243  015EE2                     __ptext202:
 41244                           	opt stack 0
 41245  015EE2                     _buck_remote_get_dutycycle:
 41246                           	opt stack 18
 41247                           
 41248                           ;buck.c: 664: return buck_remote_dutycycle;
 41249                           
 41250                           ; BSR set to: 0
 41251                           ;incstack = 0
 41252  015EE2  0100               	movlb	0	; () banked
 41253  015EE4  51E2               	movf	_buck_remote_dutycycle& (0+255),w,b
 41254  015EE6  0012               	return	
 41255  015EE8                     __end_of_buck_remote_get_dutycycle:
 41256                           	opt stack 0
 41257                           tosu	equ	0xFFF
 41258                           tosh	equ	0xFFE
 41259                           tosl	equ	0xFFD
 41260                           pclath	equ	0xFFA
 41261                           tblptru	equ	0xFF8
 41262                           tblptrh	equ	0xFF7
 41263                           tblptrl	equ	0xFF6
 41264                           tablat	equ	0xFF5
 41265                           prodh	equ	0xFF4
 41266                           prodl	equ	0xFF3
 41267                           intcon	equ	0xFF2
 41268                           intcon2	equ	0xFF1
 41269                           intcon3	equ	0xFF0
 41270                           postinc0	equ	0xFEE
 41271                           wreg	equ	0xFE8
 41272                           indf1	equ	0xFE7
 41273                           postinc1	equ	0xFE6
 41274                           postdec1	equ	0xFE5
 41275                           plusw1	equ	0xFE3
 41276                           fsr1h	equ	0xFE2
 41277                           fsr1l	equ	0xFE1
 41278                           indf2	equ	0xFDF
 41279                           postinc2	equ	0xFDE
 41280                           postdec2	equ	0xFDD
 41281                           plusw2	equ	0xFDB
 41282                           fsr2h	equ	0xFDA
 41283                           fsr2l	equ	0xFD9
 41284                           status	equ	0xFD8
 41285                           
 41286 ;; *************** function _buck_get_mode *****************
 41287 ;; Defined at:
 41288 ;;		line 597 in file "buck.c"
 41289 ;; Parameters:    Size  Location     Type
 41290 ;;		None
 41291 ;; Auto vars:     Size  Location     Type
 41292 ;;		None
 41293 ;; Return value:  Size  Location     Type
 41294 ;;                  1    wreg      enum E8093
 41295 ;; Registers used:
 41296 ;;		wreg, status,2
 41297 ;; Tracked objects:
 41298 ;;		On entry : 0/0
 41299 ;;		On exit  : 0/0
 41300 ;;		Unchanged: 0/0
 41301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41306 ;;Total ram usage:        0 bytes
 41307 ;; Hardware stack levels used:    1
 41308 ;; Hardware stack levels required when called:   10
 41309 ;; This function calls:
 41310 ;;		Nothing
 41311 ;; This function is called by:
 41312 ;;		_main
 41313 ;;		__fill_buffer_get_status
 41314 ;;		_system_calculate_input_current
 41315 ;;		_system_calculate_output_current
 41316 ;;		__display_inout
 41317 ;;		__display_charger
 41318 ;;		_log_collect_data
 41319 ;; This function uses a non-reentrant model
 41320 ;;
 41321                           
 41322                           	psect	text203
 41323  015EF2                     __ptext203:
 41324                           	opt stack 0
 41325  015EF2                     _buck_get_mode:
 41326                           	opt stack 19
 41327                           
 41328                           ;buck.c: 599: return buck_status;
 41329                           
 41330                           ; BSR set to: 0
 41331                           ;incstack = 0
 41332  015EF2  501C               	movf	_buck_status,w,c
 41333  015EF4  0012               	return	
 41334  015EF6                     __end_of_buck_get_mode:
 41335                           	opt stack 0
 41336                           tosu	equ	0xFFF
 41337                           tosh	equ	0xFFE
 41338                           tosl	equ	0xFFD
 41339                           pclath	equ	0xFFA
 41340                           tblptru	equ	0xFF8
 41341                           tblptrh	equ	0xFF7
 41342                           tblptrl	equ	0xFF6
 41343                           tablat	equ	0xFF5
 41344                           prodh	equ	0xFF4
 41345                           prodl	equ	0xFF3
 41346                           intcon	equ	0xFF2
 41347                           intcon2	equ	0xFF1
 41348                           intcon3	equ	0xFF0
 41349                           postinc0	equ	0xFEE
 41350                           wreg	equ	0xFE8
 41351                           indf1	equ	0xFE7
 41352                           postinc1	equ	0xFE6
 41353                           postdec1	equ	0xFE5
 41354                           plusw1	equ	0xFE3
 41355                           fsr1h	equ	0xFE2
 41356                           fsr1l	equ	0xFE1
 41357                           indf2	equ	0xFDF
 41358                           postinc2	equ	0xFDE
 41359                           postdec2	equ	0xFDD
 41360                           plusw2	equ	0xFDB
 41361                           fsr2h	equ	0xFDA
 41362                           fsr2l	equ	0xFD9
 41363                           status	equ	0xFD8
 41364                           
 41365 ;; *************** function _buck_get_dutycycle *****************
 41366 ;; Defined at:
 41367 ;;		line 592 in file "buck.c"
 41368 ;; Parameters:    Size  Location     Type
 41369 ;;		None
 41370 ;; Auto vars:     Size  Location     Type
 41371 ;;		None
 41372 ;; Return value:  Size  Location     Type
 41373 ;;                  1    wreg      unsigned char 
 41374 ;; Registers used:
 41375 ;;		wreg, status,2
 41376 ;; Tracked objects:
 41377 ;;		On entry : 0/0
 41378 ;;		On exit  : 0/0
 41379 ;;		Unchanged: 0/0
 41380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41385 ;;Total ram usage:        0 bytes
 41386 ;; Hardware stack levels used:    1
 41387 ;; Hardware stack levels required when called:   10
 41388 ;; This function calls:
 41389 ;;		Nothing
 41390 ;; This function is called by:
 41391 ;;		__fill_buffer_get_status
 41392 ;;		__display_charger
 41393 ;; This function uses a non-reentrant model
 41394 ;;
 41395                           
 41396                           	psect	text204
 41397  015EE8                     __ptext204:
 41398                           	opt stack 0
 41399  015EE8                     _buck_get_dutycycle:
 41400                           	opt stack 18
 41401                           
 41402                           ;buck.c: 594: return buck_dutycycle;
 41403                           
 41404                           ;incstack = 0
 41405  015EE8  0100               	movlb	0	; () banked
 41406  015EEA  51E5               	movf	_buck_dutycycle& (0+255),w,b
 41407  015EEC  0012               	return	
 41408  015EEE                     __end_of_buck_get_dutycycle:
 41409                           	opt stack 0
 41410                           tosu	equ	0xFFF
 41411                           tosh	equ	0xFFE
 41412                           tosl	equ	0xFFD
 41413                           pclath	equ	0xFFA
 41414                           tblptru	equ	0xFF8
 41415                           tblptrh	equ	0xFF7
 41416                           tblptrl	equ	0xFF6
 41417                           tablat	equ	0xFF5
 41418                           prodh	equ	0xFF4
 41419                           prodl	equ	0xFF3
 41420                           intcon	equ	0xFF2
 41421                           intcon2	equ	0xFF1
 41422                           intcon3	equ	0xFF0
 41423                           postinc0	equ	0xFEE
 41424                           wreg	equ	0xFE8
 41425                           indf1	equ	0xFE7
 41426                           postinc1	equ	0xFE6
 41427                           postdec1	equ	0xFE5
 41428                           plusw1	equ	0xFE3
 41429                           fsr1h	equ	0xFE2
 41430                           fsr1l	equ	0xFE1
 41431                           indf2	equ	0xFDF
 41432                           postinc2	equ	0xFDE
 41433                           postdec2	equ	0xFDD
 41434                           plusw2	equ	0xFDB
 41435                           fsr2h	equ	0xFDA
 41436                           fsr2l	equ	0xFD9
 41437                           status	equ	0xFD8
 41438                           
 41439 ;; *************** function __fill_buffer_get_display2 *****************
 41440 ;; Defined at:
 41441 ;;		line 353 in file "app_device_custom_hid.c"
 41442 ;; Parameters:    Size  Location     Type
 41443 ;;		None
 41444 ;; Auto vars:     Size  Location     Type
 41445 ;;  position        1    7[BANK0 ] unsigned char 
 41446 ;;  line            1    6[BANK0 ] unsigned char 
 41447 ;;  cntr            1    5[BANK0 ] unsigned char 
 41448 ;; Return value:  Size  Location     Type
 41449 ;;                  1    wreg      void 
 41450 ;; Registers used:
 41451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41452 ;; Tracked objects:
 41453 ;;		On entry : 0/0
 41454 ;;		On exit  : 0/0
 41455 ;;		Unchanged: 0/0
 41456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41459 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41461 ;;Total ram usage:        4 bytes
 41462 ;; Hardware stack levels used:    1
 41463 ;; Hardware stack levels required when called:   11
 41464 ;; This function calls:
 41465 ;;		_display_get_character
 41466 ;; This function is called by:
 41467 ;;		_APP_DeviceCustomHIDTasks
 41468 ;; This function uses a non-reentrant model
 41469 ;;
 41470                           
 41471                           	psect	text205
 41472  014EEE                     __ptext205:
 41473                           	opt stack 0
 41474  014EEE                     __fill_buffer_get_display2:
 41475                           	opt stack 18
 41476                           
 41477                           ;app_device_custom_hid.c: 355: uint8_t cntr;;app_device_custom_hid.c: 356: uint8_t line;
      +                          ;app_device_custom_hid.c: 357: uint8_t position;;app_device_custom_hid.c: 360: ToSendDat
      +                          aBuffer[0] = COMMAND_GET_DISPLAY_2;
 41478                           
 41479                           ; BSR set to: 0
 41480                           ;incstack = 0
 41481  014EEE  0E12               	movlw	18
 41482  014EF0  0103               	movlb	3	; () banked
 41483  014EF2  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41484                           
 41485                           ;app_device_custom_hid.c: 363: cntr = 1;
 41486  014EF4  0E01               	movlw	1
 41487  014EF6  0100               	movlb	0	; () banked
 41488  014EF8  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 41489                           
 41490                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 41491  014EFA  0E02               	movlw	2
 41492  014EFC  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 41493  014EFE                     l20647:
 41494                           
 41495                           ; BSR set to: 0
 41496  014EFE  0E03               	movlw	3
 41497  014F00  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 41498  014F02  D001               	goto	l1130
 41499  014F04  0012               	return	
 41500  014F06                     l1130:
 41501                           
 41502                           ; BSR set to: 0
 41503                           ;app_device_custom_hid.c: 365: {;app_device_custom_hid.c: 366: for(position=0; position<
      +                          20; ++position)
 41504                           
 41505                           ; BSR set to: 0
 41506  014F06  0E00               	movlw	0
 41507  014F08  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 41508  014F0A                     l20653:
 41509                           
 41510                           ; BSR set to: 0
 41511  014F0A  0E13               	movlw	19
 41512  014F0C  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 41513  014F0E  D001               	goto	l1132
 41514  014F10  D014               	goto	u19790
 41515  014F12                     l1132:
 41516                           
 41517                           ; BSR set to: 0
 41518                           ;app_device_custom_hid.c: 367: {;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = 
      +                          display_get_character(line, position);
 41519                           
 41520                           ; BSR set to: 0
 41521  014F12  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 41522  014F16  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 41523  014F18  EC65  F0AB         	call	_display_get_character
 41524  014F1C  0100               	movlb	0	; () banked
 41525  014F1E  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 41526  014F20  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 41527  014F22  0D01               	mullw	1
 41528  014F24  0EA4               	movlw	low _ToSendDataBuffer
 41529  014F26  24F3               	addwf	prodl,w,c
 41530  014F28  6ED9               	movwf	fsr2l,c
 41531  014F2A  0E03               	movlw	high _ToSendDataBuffer
 41532  014F2C  20F4               	addwfc	prodh,w,c
 41533  014F2E  6EDA               	movwf	fsr2h,c
 41534  014F30  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 41535                           
 41536                           ; BSR set to: 0
 41537                           ;app_device_custom_hid.c: 369: ++cntr;
 41538  014F34  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 41539                           
 41540                           ; BSR set to: 0
 41541  014F36  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 41542  014F38  D7E8               	goto	l20653
 41543  014F3A                     u19790:
 41544                           
 41545                           ; BSR set to: 0
 41546                           
 41547                           ; BSR set to: 0
 41548  014F3A  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 41549  014F3C  D7E0               	goto	l20647
 41550  014F3E                     __end_of__fill_buffer_get_display2:
 41551                           	opt stack 0
 41552                           tosu	equ	0xFFF
 41553                           tosh	equ	0xFFE
 41554                           tosl	equ	0xFFD
 41555                           pclath	equ	0xFFA
 41556                           tblptru	equ	0xFF8
 41557                           tblptrh	equ	0xFF7
 41558                           tblptrl	equ	0xFF6
 41559                           tablat	equ	0xFF5
 41560                           prodh	equ	0xFF4
 41561                           prodl	equ	0xFF3
 41562                           intcon	equ	0xFF2
 41563                           intcon2	equ	0xFF1
 41564                           intcon3	equ	0xFF0
 41565                           postinc0	equ	0xFEE
 41566                           wreg	equ	0xFE8
 41567                           indf1	equ	0xFE7
 41568                           postinc1	equ	0xFE6
 41569                           postdec1	equ	0xFE5
 41570                           plusw1	equ	0xFE3
 41571                           fsr1h	equ	0xFE2
 41572                           fsr1l	equ	0xFE1
 41573                           indf2	equ	0xFDF
 41574                           postinc2	equ	0xFDE
 41575                           postdec2	equ	0xFDD
 41576                           plusw2	equ	0xFDB
 41577                           fsr2h	equ	0xFDA
 41578                           fsr2l	equ	0xFD9
 41579                           status	equ	0xFD8
 41580                           
 41581 ;; *************** function __fill_buffer_get_display1 *****************
 41582 ;; Defined at:
 41583 ;;		line 331 in file "app_device_custom_hid.c"
 41584 ;; Parameters:    Size  Location     Type
 41585 ;;		None
 41586 ;; Auto vars:     Size  Location     Type
 41587 ;;  position        1    7[BANK0 ] unsigned char 
 41588 ;;  line            1    6[BANK0 ] unsigned char 
 41589 ;;  cntr            1    5[BANK0 ] unsigned char 
 41590 ;; Return value:  Size  Location     Type
 41591 ;;                  1    wreg      void 
 41592 ;; Registers used:
 41593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41594 ;; Tracked objects:
 41595 ;;		On entry : 0/0
 41596 ;;		On exit  : 0/0
 41597 ;;		Unchanged: 0/0
 41598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41601 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41602 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41603 ;;Total ram usage:        4 bytes
 41604 ;; Hardware stack levels used:    1
 41605 ;; Hardware stack levels required when called:   11
 41606 ;; This function calls:
 41607 ;;		_display_get_character
 41608 ;; This function is called by:
 41609 ;;		_APP_DeviceCustomHIDTasks
 41610 ;; This function uses a non-reentrant model
 41611 ;;
 41612                           
 41613                           	psect	text206
 41614  014F3E                     __ptext206:
 41615                           	opt stack 0
 41616  014F3E                     __fill_buffer_get_display1:
 41617                           	opt stack 18
 41618                           
 41619                           ;app_device_custom_hid.c: 333: uint8_t cntr;;app_device_custom_hid.c: 334: uint8_t line;
      +                          ;app_device_custom_hid.c: 335: uint8_t position;;app_device_custom_hid.c: 338: ToSendDat
      +                          aBuffer[0] = COMMAND_GET_DISPLAY_1;
 41620                           
 41621                           ; BSR set to: 0
 41622                           ;incstack = 0
 41623  014F3E  0E11               	movlw	17
 41624  014F40  0103               	movlb	3	; () banked
 41625  014F42  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41626                           
 41627                           ;app_device_custom_hid.c: 341: cntr = 1;
 41628  014F44  0E01               	movlw	1
 41629  014F46  0100               	movlb	0	; () banked
 41630  014F48  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 41631                           
 41632                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 41633  014F4A  0E00               	movlw	0
 41634  014F4C  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 41635  014F4E                     l20623:
 41636                           
 41637                           ; BSR set to: 0
 41638  014F4E  0E01               	movlw	1
 41639  014F50  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 41640  014F52  D001               	goto	l1123
 41641  014F54  0012               	return	
 41642  014F56                     l1123:
 41643                           
 41644                           ; BSR set to: 0
 41645                           ;app_device_custom_hid.c: 343: {;app_device_custom_hid.c: 344: for(position=0; position<
      +                          20; ++position)
 41646                           
 41647                           ; BSR set to: 0
 41648  014F56  0E00               	movlw	0
 41649  014F58  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 41650  014F5A                     l20629:
 41651                           
 41652                           ; BSR set to: 0
 41653  014F5A  0E13               	movlw	19
 41654  014F5C  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 41655  014F5E  D001               	goto	l1125
 41656  014F60  D014               	goto	u19750
 41657  014F62                     l1125:
 41658                           
 41659                           ; BSR set to: 0
 41660                           ;app_device_custom_hid.c: 345: {;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = 
      +                          display_get_character(line, position);
 41661                           
 41662                           ; BSR set to: 0
 41663  014F62  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 41664  014F66  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 41665  014F68  EC65  F0AB         	call	_display_get_character
 41666  014F6C  0100               	movlb	0	; () banked
 41667  014F6E  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 41668  014F70  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 41669  014F72  0D01               	mullw	1
 41670  014F74  0EA4               	movlw	low _ToSendDataBuffer
 41671  014F76  24F3               	addwf	prodl,w,c
 41672  014F78  6ED9               	movwf	fsr2l,c
 41673  014F7A  0E03               	movlw	high _ToSendDataBuffer
 41674  014F7C  20F4               	addwfc	prodh,w,c
 41675  014F7E  6EDA               	movwf	fsr2h,c
 41676  014F80  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 41677                           
 41678                           ; BSR set to: 0
 41679                           ;app_device_custom_hid.c: 347: ++cntr;
 41680  014F84  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 41681                           
 41682                           ; BSR set to: 0
 41683  014F86  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 41684  014F88  D7E8               	goto	l20629
 41685  014F8A                     u19750:
 41686                           
 41687                           ; BSR set to: 0
 41688                           
 41689                           ; BSR set to: 0
 41690  014F8A  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 41691  014F8C  D7E0               	goto	l20623
 41692  014F8E                     __end_of__fill_buffer_get_display1:
 41693                           	opt stack 0
 41694                           tosu	equ	0xFFF
 41695                           tosh	equ	0xFFE
 41696                           tosl	equ	0xFFD
 41697                           pclath	equ	0xFFA
 41698                           tblptru	equ	0xFF8
 41699                           tblptrh	equ	0xFF7
 41700                           tblptrl	equ	0xFF6
 41701                           tablat	equ	0xFF5
 41702                           prodh	equ	0xFF4
 41703                           prodl	equ	0xFF3
 41704                           intcon	equ	0xFF2
 41705                           intcon2	equ	0xFF1
 41706                           intcon3	equ	0xFF0
 41707                           postinc0	equ	0xFEE
 41708                           wreg	equ	0xFE8
 41709                           indf1	equ	0xFE7
 41710                           postinc1	equ	0xFE6
 41711                           postdec1	equ	0xFE5
 41712                           plusw1	equ	0xFE3
 41713                           fsr1h	equ	0xFE2
 41714                           fsr1l	equ	0xFE1
 41715                           indf2	equ	0xFDF
 41716                           postinc2	equ	0xFDE
 41717                           postdec2	equ	0xFDD
 41718                           plusw2	equ	0xFDB
 41719                           fsr2h	equ	0xFDA
 41720                           fsr2l	equ	0xFD9
 41721                           status	equ	0xFD8
 41722                           
 41723 ;; *************** function _display_get_character *****************
 41724 ;; Defined at:
 41725 ;;		line 23 in file "display.c"
 41726 ;; Parameters:    Size  Location     Type
 41727 ;;  line            1    wreg     unsigned char 
 41728 ;;  position        1    0[BANK0 ] unsigned char 
 41729 ;; Auto vars:     Size  Location     Type
 41730 ;;  line            1    3[BANK0 ] unsigned char 
 41731 ;; Return value:  Size  Location     Type
 41732 ;;                  1    wreg      unsigned char 
 41733 ;; Registers used:
 41734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41735 ;; Tracked objects:
 41736 ;;		On entry : 0/0
 41737 ;;		On exit  : 0/0
 41738 ;;		Unchanged: 0/0
 41739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41740 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41742 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41743 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41744 ;;Total ram usage:        4 bytes
 41745 ;; Hardware stack levels used:    1
 41746 ;; Hardware stack levels required when called:   10
 41747 ;; This function calls:
 41748 ;;		Nothing
 41749 ;; This function is called by:
 41750 ;;		__fill_buffer_get_display1
 41751 ;;		__fill_buffer_get_display2
 41752 ;; This function uses a non-reentrant model
 41753 ;;
 41754                           
 41755                           	psect	text207
 41756  0156CA                     __ptext207:
 41757                           	opt stack 0
 41758  0156CA                     _display_get_character:
 41759                           	opt stack 18
 41760                           
 41761                           ; BSR set to: 0
 41762                           ;incstack = 0
 41763                           ;display_get_character@line stored from wreg
 41764  0156CA  0100               	movlb	0	; () banked
 41765  0156CC  6F63               	movwf	display_get_character@line& (0+255),b
 41766                           
 41767                           ;display.c: 25: return display_content[line][position];
 41768  0156CE  0100               	movlb	0	; () banked
 41769  0156D0  5163               	movf	display_get_character@line& (0+255),w,b
 41770  0156D2  0D14               	mullw	20
 41771  0156D4  0E54               	movlw	low _display_content
 41772  0156D6  6F61               	movwf	??_display_get_character& (0+255),b
 41773  0156D8  0E03               	movlw	high _display_content
 41774  0156DA  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 41775  0156DC  50F3               	movf	prodl,w,c
 41776  0156DE  2761               	addwf	??_display_get_character& (0+255),f,b
 41777  0156E0  50F4               	movf	prodh,w,c
 41778  0156E2  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 41779  0156E4  5160               	movf	display_get_character@position& (0+255),w,b
 41780  0156E6  0D01               	mullw	1
 41781  0156E8  50F3               	movf	prodl,w,c
 41782  0156EA  2561               	addwf	??_display_get_character& (0+255),w,b
 41783  0156EC  6ED9               	movwf	fsr2l,c
 41784  0156EE  50F4               	movf	prodh,w,c
 41785  0156F0  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 41786  0156F2  6EDA               	movwf	fsr2h,c
 41787  0156F4  50DF               	movf	indf2,w,c
 41788  0156F6  0012               	return	
 41789  0156F8                     __end_of_display_get_character:
 41790                           	opt stack 0
 41791                           tosu	equ	0xFFF
 41792                           tosh	equ	0xFFE
 41793                           tosl	equ	0xFFD
 41794                           pclath	equ	0xFFA
 41795                           tblptru	equ	0xFF8
 41796                           tblptrh	equ	0xFF7
 41797                           tblptrl	equ	0xFF6
 41798                           tablat	equ	0xFF5
 41799                           prodh	equ	0xFF4
 41800                           prodl	equ	0xFF3
 41801                           intcon	equ	0xFF2
 41802                           intcon2	equ	0xFF1
 41803                           intcon3	equ	0xFF0
 41804                           postinc0	equ	0xFEE
 41805                           wreg	equ	0xFE8
 41806                           indf1	equ	0xFE7
 41807                           postinc1	equ	0xFE6
 41808                           postdec1	equ	0xFE5
 41809                           plusw1	equ	0xFE3
 41810                           fsr1h	equ	0xFE2
 41811                           fsr1l	equ	0xFE1
 41812                           indf2	equ	0xFDF
 41813                           postinc2	equ	0xFDE
 41814                           postdec2	equ	0xFDD
 41815                           plusw2	equ	0xFDB
 41816                           fsr2h	equ	0xFDA
 41817                           fsr2l	equ	0xFD9
 41818                           status	equ	0xFD8
 41819                           
 41820 ;; *************** function __fill_buffer_get_calibration2 *****************
 41821 ;; Defined at:
 41822 ;;		line 388 in file "app_device_custom_hid.c"
 41823 ;; Parameters:    Size  Location     Type
 41824 ;;		None
 41825 ;; Auto vars:     Size  Location     Type
 41826 ;;		None
 41827 ;; Return value:  Size  Location     Type
 41828 ;;                  1    wreg      void 
 41829 ;; Registers used:
 41830 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41831 ;; Tracked objects:
 41832 ;;		On entry : 0/0
 41833 ;;		On exit  : 0/0
 41834 ;;		Unchanged: 0/0
 41835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41840 ;;Total ram usage:        0 bytes
 41841 ;; Hardware stack levels used:    1
 41842 ;; Hardware stack levels required when called:   11
 41843 ;; This function calls:
 41844 ;;		_memcpy
 41845 ;; This function is called by:
 41846 ;;		_APP_DeviceCustomHIDTasks
 41847 ;; This function uses a non-reentrant model
 41848 ;;
 41849                           
 41850                           	psect	text208
 41851  014652                     __ptext208:
 41852                           	opt stack 0
 41853  014652                     __fill_buffer_get_calibration2:
 41854                           	opt stack 18
 41855                           
 41856                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 41857                           
 41858                           ; BSR set to: 0
 41859                           ;incstack = 0
 41860  014652  0E14               	movlw	20
 41861  014654  0103               	movlb	3	; () banked
 41862  014656  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41863                           
 41864                           ; BSR set to: 3
 41865                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 41866  014658  0EA5               	movlw	low (_ToSendDataBuffer+1)
 41867  01465A  0100               	movlb	0	; () banked
 41868  01465C  6F60               	movwf	memcpy@d1& (0+255),b
 41869  01465E  0E03               	movlw	high (_ToSendDataBuffer+1)
 41870  014660  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41871  014662  0E30               	movlw	low (_calibrationParameters+48)
 41872  014664  6F62               	movwf	memcpy@s1& (0+255),b
 41873  014666  0E03               	movlw	high (_calibrationParameters+48)
 41874  014668  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41875  01466A  0E00               	movlw	0
 41876  01466C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41877  01466E  0E0C               	movlw	12
 41878  014670  6F64               	movwf	memcpy@n& (0+255),b
 41879  014672  EC8B  F0A3         	call	_memcpy	;wreg free
 41880                           
 41881                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 41882  014676  0EB1               	movlw	low (_ToSendDataBuffer+13)
 41883  014678  0100               	movlb	0	; () banked
 41884  01467A  6F60               	movwf	memcpy@d1& (0+255),b
 41885  01467C  0E03               	movlw	high (_ToSendDataBuffer+13)
 41886  01467E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41887  014680  0E3C               	movlw	low (_calibrationParameters+60)
 41888  014682  6F62               	movwf	memcpy@s1& (0+255),b
 41889  014684  0E03               	movlw	high (_calibrationParameters+60)
 41890  014686  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41891  014688  0E00               	movlw	0
 41892  01468A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41893  01468C  0E0C               	movlw	12
 41894  01468E  6F64               	movwf	memcpy@n& (0+255),b
 41895  014690  EC8B  F0A3         	call	_memcpy	;wreg free
 41896                           
 41897                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 41898  014694  0EBD               	movlw	low (_ToSendDataBuffer+25)
 41899  014696  0100               	movlb	0	; () banked
 41900  014698  6F60               	movwf	memcpy@d1& (0+255),b
 41901  01469A  0E03               	movlw	high (_ToSendDataBuffer+25)
 41902  01469C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41903  01469E  0E48               	movlw	low (_calibrationParameters+72)
 41904  0146A0  6F62               	movwf	memcpy@s1& (0+255),b
 41905  0146A2  0E03               	movlw	high (_calibrationParameters+72)
 41906  0146A4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41907  0146A6  0E00               	movlw	0
 41908  0146A8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41909  0146AA  0E0C               	movlw	12
 41910  0146AC  6F64               	movwf	memcpy@n& (0+255),b
 41911  0146AE  EC8B  F0A3         	call	_memcpy	;wreg free
 41912  0146B2  0012               	return		;funcret
 41913  0146B4                     __end_of__fill_buffer_get_calibration2:
 41914                           	opt stack 0
 41915                           tosu	equ	0xFFF
 41916                           tosh	equ	0xFFE
 41917                           tosl	equ	0xFFD
 41918                           pclath	equ	0xFFA
 41919                           tblptru	equ	0xFF8
 41920                           tblptrh	equ	0xFF7
 41921                           tblptrl	equ	0xFF6
 41922                           tablat	equ	0xFF5
 41923                           prodh	equ	0xFF4
 41924                           prodl	equ	0xFF3
 41925                           intcon	equ	0xFF2
 41926                           intcon2	equ	0xFF1
 41927                           intcon3	equ	0xFF0
 41928                           postinc0	equ	0xFEE
 41929                           wreg	equ	0xFE8
 41930                           indf1	equ	0xFE7
 41931                           postinc1	equ	0xFE6
 41932                           postdec1	equ	0xFE5
 41933                           plusw1	equ	0xFE3
 41934                           fsr1h	equ	0xFE2
 41935                           fsr1l	equ	0xFE1
 41936                           indf2	equ	0xFDF
 41937                           postinc2	equ	0xFDE
 41938                           postdec2	equ	0xFDD
 41939                           plusw2	equ	0xFDB
 41940                           fsr2h	equ	0xFDA
 41941                           fsr2l	equ	0xFD9
 41942                           status	equ	0xFD8
 41943                           
 41944 ;; *************** function __fill_buffer_get_calibration1 *****************
 41945 ;; Defined at:
 41946 ;;		line 376 in file "app_device_custom_hid.c"
 41947 ;; Parameters:    Size  Location     Type
 41948 ;;		None
 41949 ;; Auto vars:     Size  Location     Type
 41950 ;;		None
 41951 ;; Return value:  Size  Location     Type
 41952 ;;                  1    wreg      void 
 41953 ;; Registers used:
 41954 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41955 ;; Tracked objects:
 41956 ;;		On entry : 0/0
 41957 ;;		On exit  : 0/0
 41958 ;;		Unchanged: 0/0
 41959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41964 ;;Total ram usage:        0 bytes
 41965 ;; Hardware stack levels used:    1
 41966 ;; Hardware stack levels required when called:   11
 41967 ;; This function calls:
 41968 ;;		_memcpy
 41969 ;; This function is called by:
 41970 ;;		_APP_DeviceCustomHIDTasks
 41971 ;; This function uses a non-reentrant model
 41972 ;;
 41973                           
 41974                           	psect	text209
 41975  013D32                     __ptext209:
 41976                           	opt stack 0
 41977  013D32                     __fill_buffer_get_calibration1:
 41978                           	opt stack 18
 41979                           
 41980                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 41981                           
 41982                           ;incstack = 0
 41983  013D32  0E13               	movlw	19
 41984  013D34  0103               	movlb	3	; () banked
 41985  013D36  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41986                           
 41987                           ; BSR set to: 3
 41988                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 41989  013D38  0EA5               	movlw	low (_ToSendDataBuffer+1)
 41990  013D3A  0100               	movlb	0	; () banked
 41991  013D3C  6F60               	movwf	memcpy@d1& (0+255),b
 41992  013D3E  0E03               	movlw	high (_ToSendDataBuffer+1)
 41993  013D40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41994  013D42  0E00               	movlw	low _calibrationParameters
 41995  013D44  6F62               	movwf	memcpy@s1& (0+255),b
 41996  013D46  0E03               	movlw	high _calibrationParameters
 41997  013D48  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41998  013D4A  0E00               	movlw	0
 41999  013D4C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42000  013D4E  0E0C               	movlw	12
 42001  013D50  6F64               	movwf	memcpy@n& (0+255),b
 42002  013D52  EC8B  F0A3         	call	_memcpy	;wreg free
 42003                           
 42004                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 42005  013D56  0EB1               	movlw	low (_ToSendDataBuffer+13)
 42006  013D58  0100               	movlb	0	; () banked
 42007  013D5A  6F60               	movwf	memcpy@d1& (0+255),b
 42008  013D5C  0E03               	movlw	high (_ToSendDataBuffer+13)
 42009  013D5E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42010  013D60  0E0C               	movlw	low (_calibrationParameters+12)
 42011  013D62  6F62               	movwf	memcpy@s1& (0+255),b
 42012  013D64  0E03               	movlw	high (_calibrationParameters+12)
 42013  013D66  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42014  013D68  0E00               	movlw	0
 42015  013D6A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42016  013D6C  0E0C               	movlw	12
 42017  013D6E  6F64               	movwf	memcpy@n& (0+255),b
 42018  013D70  EC8B  F0A3         	call	_memcpy	;wreg free
 42019                           
 42020                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 42021  013D74  0EBD               	movlw	low (_ToSendDataBuffer+25)
 42022  013D76  0100               	movlb	0	; () banked
 42023  013D78  6F60               	movwf	memcpy@d1& (0+255),b
 42024  013D7A  0E03               	movlw	high (_ToSendDataBuffer+25)
 42025  013D7C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42026  013D7E  0E18               	movlw	low (_calibrationParameters+24)
 42027  013D80  6F62               	movwf	memcpy@s1& (0+255),b
 42028  013D82  0E03               	movlw	high (_calibrationParameters+24)
 42029  013D84  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42030  013D86  0E00               	movlw	0
 42031  013D88  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42032  013D8A  0E0C               	movlw	12
 42033  013D8C  6F64               	movwf	memcpy@n& (0+255),b
 42034  013D8E  EC8B  F0A3         	call	_memcpy	;wreg free
 42035                           
 42036                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 42037  013D92  0EC9               	movlw	low (_ToSendDataBuffer+37)
 42038  013D94  0100               	movlb	0	; () banked
 42039  013D96  6F60               	movwf	memcpy@d1& (0+255),b
 42040  013D98  0E03               	movlw	high (_ToSendDataBuffer+37)
 42041  013D9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42042  013D9C  0E24               	movlw	low (_calibrationParameters+36)
 42043  013D9E  6F62               	movwf	memcpy@s1& (0+255),b
 42044  013DA0  0E03               	movlw	high (_calibrationParameters+36)
 42045  013DA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42046  013DA4  0E00               	movlw	0
 42047  013DA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42048  013DA8  0E0C               	movlw	12
 42049  013DAA  6F64               	movwf	memcpy@n& (0+255),b
 42050  013DAC  EC8B  F0A3         	call	_memcpy	;wreg free
 42051  013DB0  0012               	return		;funcret
 42052  013DB2                     __end_of__fill_buffer_get_calibration1:
 42053                           	opt stack 0
 42054                           tosu	equ	0xFFF
 42055                           tosh	equ	0xFFE
 42056                           tosl	equ	0xFFD
 42057                           pclath	equ	0xFFA
 42058                           tblptru	equ	0xFF8
 42059                           tblptrh	equ	0xFF7
 42060                           tblptrl	equ	0xFF6
 42061                           tablat	equ	0xFF5
 42062                           prodh	equ	0xFF4
 42063                           prodl	equ	0xFF3
 42064                           intcon	equ	0xFF2
 42065                           intcon2	equ	0xFF1
 42066                           intcon3	equ	0xFF0
 42067                           postinc0	equ	0xFEE
 42068                           wreg	equ	0xFE8
 42069                           indf1	equ	0xFE7
 42070                           postinc1	equ	0xFE6
 42071                           postdec1	equ	0xFE5
 42072                           plusw1	equ	0xFE3
 42073                           fsr1h	equ	0xFE2
 42074                           fsr1l	equ	0xFE1
 42075                           indf2	equ	0xFDF
 42076                           postinc2	equ	0xFDE
 42077                           postdec2	equ	0xFDD
 42078                           plusw2	equ	0xFDB
 42079                           fsr2h	equ	0xFDA
 42080                           fsr2l	equ	0xFD9
 42081                           status	equ	0xFD8
 42082                           
 42083 ;; *************** function _memcpy *****************
 42084 ;; Defined at:
 42085 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 42086 ;; Parameters:    Size  Location     Type
 42087 ;;  d1              2    0[BANK0 ] PTR void 
 42088 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42089 ;;		 -> SetupPkt(8), 
 42090 ;;  s1              2    2[BANK0 ] PTR const void 
 42091 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42092 ;;		 -> calibrationParameters(84), inq_resp(36), RAM(3759), 
 42093 ;;  n               2    4[BANK0 ] unsigned int 
 42094 ;; Auto vars:     Size  Location     Type
 42095 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 42096 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42097 ;;		 -> calibrationParameters(84), inq_resp(36), RAM(3759), 
 42098 ;;  d               2    7[BANK0 ] PTR unsigned char 
 42099 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42100 ;;		 -> SetupPkt(8), 
 42101 ;;  tmp             1    6[BANK0 ] unsigned char 
 42102 ;; Return value:  Size  Location     Type
 42103 ;;                  2    0[BANK0 ] PTR void 
 42104 ;; Registers used:
 42105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42106 ;; Tracked objects:
 42107 ;;		On entry : 0/0
 42108 ;;		On exit  : 0/0
 42109 ;;		Unchanged: 0/0
 42110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42111 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42112 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42114 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42115 ;;Total ram usage:       11 bytes
 42116 ;; Hardware stack levels used:    1
 42117 ;; Hardware stack levels required when called:   10
 42118 ;; This function calls:
 42119 ;;		Nothing
 42120 ;; This function is called by:
 42121 ;;		_MSDProcessCommandMediaPresent
 42122 ;;		__fill_buffer_get_calibration1
 42123 ;;		__fill_buffer_get_calibration2
 42124 ;;		__flash_set_page_size
 42125 ;;		_fat_create_file
 42126 ;; This function uses a non-reentrant model
 42127 ;;
 42128                           
 42129                           	psect	text210
 42130  014716                     __ptext210:
 42131                           	opt stack 0
 42132  014716                     _memcpy:
 42133                           	opt stack 17
 42134                           
 42135                           ;incstack = 0
 42136  014716  C062  F069         	movff	memcpy@s1,memcpy@s
 42137  01471A  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 42138  01471E  C060  F067         	movff	memcpy@d1,memcpy@d
 42139  014722  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 42140  014726  D01D               	goto	l3995
 42141  014728                     l18221:
 42142  014728  C069  FFF6         	movff	memcpy@s,tblptrl
 42143  01472C  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 42144  014730  0E00               	movlw	low (__mediumconst shr (0+16))
 42145  014732  6EF8               	movwf	tblptru,c
 42146  014734  0E0E               	movlw	(high __ramtop+-1)
 42147  014736  64F7               	cpfsgt	tblptrh,c
 42148  014738  D003               	bra	u16827
 42149  01473A  0008               	tblrd		*
 42150  01473C  50F5               	movf	tablat,w,c
 42151  01473E  D005               	bra	u16820
 42152  014740                     u16827:
 42153  014740  CFF6 FFE9          	movff	tblptrl,fsr0l
 42154  014744  CFF7 FFEA          	movff	tblptrh,fsr0h
 42155  014748  50EF               	movf	indf0,w,c
 42156  01474A                     u16820:
 42157  01474A  0100               	movlb	0	; () banked
 42158  01474C  6F66               	movwf	memcpy@tmp& (0+255),b
 42159                           
 42160                           ; BSR set to: 0
 42161  01474E  4B69               	infsnz	memcpy@s& (0+255),f,b
 42162  014750  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 42163                           
 42164                           ; BSR set to: 0
 42165  014752  C067  FFD9         	movff	memcpy@d,fsr2l
 42166  014756  C068  FFDA         	movff	memcpy@d+1,fsr2h
 42167  01475A  C066  FFDF         	movff	memcpy@tmp,indf2
 42168                           
 42169                           ; BSR set to: 0
 42170  01475E  4B67               	infsnz	memcpy@d& (0+255),f,b
 42171  014760  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 42172  014762                     l3995:
 42173                           
 42174                           ; BSR set to: 0
 42175  014762  0100               	movlb	0	; () banked
 42176  014764  0764               	decf	memcpy@n& (0+255),f,b
 42177  014766  A0D8               	btfss	status,0,c
 42178  014768  0765               	decf	(memcpy@n+1)& (0+255),f,b
 42179  01476A  2964               	incf	memcpy@n& (0+255),w,b
 42180  01476C  E1DD               	bnz	l18221
 42181  01476E  2965               	incf	(memcpy@n+1)& (0+255),w,b
 42182  014770  B4D8               	btfsc	status,2,c
 42183  014772  0012               	return	
 42184  014774  D7D9               	goto	l3996
 42185  014776                     __end_of_memcpy:
 42186                           	opt stack 0
 42187                           tosu	equ	0xFFF
 42188                           tosh	equ	0xFFE
 42189                           tosl	equ	0xFFD
 42190                           pclath	equ	0xFFA
 42191                           tblptru	equ	0xFF8
 42192                           tblptrh	equ	0xFF7
 42193                           tblptrl	equ	0xFF6
 42194                           tablat	equ	0xFF5
 42195                           prodh	equ	0xFF4
 42196                           prodl	equ	0xFF3
 42197                           intcon	equ	0xFF2
 42198                           intcon2	equ	0xFF1
 42199                           intcon3	equ	0xFF0
 42200                           indf0	equ	0xFEF
 42201                           postinc0	equ	0xFEE
 42202                           fsr0h	equ	0xFEA
 42203                           fsr0l	equ	0xFE9
 42204                           wreg	equ	0xFE8
 42205                           indf1	equ	0xFE7
 42206                           postinc1	equ	0xFE6
 42207                           postdec1	equ	0xFE5
 42208                           plusw1	equ	0xFE3
 42209                           fsr1h	equ	0xFE2
 42210                           fsr1l	equ	0xFE1
 42211                           indf2	equ	0xFDF
 42212                           postinc2	equ	0xFDE
 42213                           postdec2	equ	0xFDD
 42214                           plusw2	equ	0xFDB
 42215                           fsr2h	equ	0xFDA
 42216                           fsr2l	equ	0xFD9
 42217                           status	equ	0xFD8
 42218                           
 42219 ;; *************** function _USBTransferOnePacket *****************
 42220 ;; Defined at:
 42221 ;;		line 995 in file "usb_device.c"
 42222 ;; Parameters:    Size  Location     Type
 42223 ;;  ep              1    wreg     unsigned char 
 42224 ;;  dir             1    0[BANK0 ] unsigned char 
 42225 ;;  data            2    1[BANK0 ] PTR unsigned char 
 42226 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 42227 ;;		 -> msd_cbw(31), NULL(0), 
 42228 ;;  len             1    3[BANK0 ] unsigned char 
 42229 ;; Auto vars:     Size  Location     Type
 42230 ;;  ep              1    8[BANK0 ] unsigned char 
 42231 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 42232 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 42233 ;; Return value:  Size  Location     Type
 42234 ;;                  2    0[BANK0 ] PTR void 
 42235 ;; Registers used:
 42236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42237 ;; Tracked objects:
 42238 ;;		On entry : 0/0
 42239 ;;		On exit  : 0/0
 42240 ;;		Unchanged: 0/0
 42241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42243 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42244 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42245 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42246 ;;Total ram usage:       11 bytes
 42247 ;; Hardware stack levels used:    1
 42248 ;; Hardware stack levels required when called:   10
 42249 ;; This function calls:
 42250 ;;		Nothing
 42251 ;; This function is called by:
 42252 ;;		_MSDTasks
 42253 ;;		_MSDProcessCommandMediaPresent
 42254 ;;		_MSDReadHandler
 42255 ;;		_MSDWriteHandler
 42256 ;;		_APP_DeviceCustomHIDTasks
 42257 ;; This function uses a non-reentrant model
 42258 ;;
 42259                           
 42260                           	psect	text211
 42261  011938                     __ptext211:
 42262                           	opt stack 0
 42263  011938                     _USBTransferOnePacket:
 42264                           	opt stack 18
 42265                           
 42266                           ; BSR set to: 0
 42267                           ;incstack = 0
 42268                           ;USBTransferOnePacket@ep stored from wreg
 42269  011938  0100               	movlb	0	; () banked
 42270  01193A  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 42271                           
 42272                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 42273  01193C  0100               	movlb	0	; () banked
 42274  01193E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 42275  011940  B4D8               	btfsc	status,2,c
 42276  011942  D007               	goto	l186
 42277                           
 42278                           ; BSR set to: 0
 42279                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 42280  011944  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42281  011946  0D02               	mullw	2
 42282  011948  0E10               	movlw	low _pBDTEntryIn
 42283  01194A  24F3               	addwf	prodl,w,c
 42284  01194C  6ED9               	movwf	fsr2l,c
 42285  01194E  0E00               	movlw	high _pBDTEntryIn
 42286  011950  D006               	goto	L50
 42287  011952                     l186:
 42288                           
 42289                           ; BSR set to: 0
 42290                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 42291                           
 42292                           ; BSR set to: 0
 42293  011952  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42294  011954  0D02               	mullw	2
 42295  011956  0ED3               	movlw	low _pBDTEntryOut
 42296  011958  24F3               	addwf	prodl,w,c
 42297  01195A  6ED9               	movwf	fsr2l,c
 42298  01195C  0E01               	movlw	high _pBDTEntryOut
 42299  01195E                     L50:
 42300  01195E  20F4               	addwfc	prodh,w,c
 42301  011960  6EDA               	movwf	fsr2h,c
 42302  011962  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 42303  011966  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 42304                           
 42305                           ; BSR set to: 0
 42306                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 42307                           
 42308                           ; BSR set to: 0
 42309  01196A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42310  01196C  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42311  01196E  A4D8               	btfss	status,2,c
 42312  011970  D005               	goto	l188
 42313                           
 42314                           ; BSR set to: 0
 42315                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 42316  011972  0E00               	movlw	0
 42317  011974  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 42318  011976  0E00               	movlw	0
 42319  011978  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 42320                           
 42321                           ; BSR set to: 0
 42322  01197A  0012               	return	
 42323  01197C                     l188:
 42324                           
 42325                           ; BSR set to: 0
 42326                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 42327                           
 42328                           ; BSR set to: 0
 42329  01197C  EE20 F002          	lfsr	2,2
 42330  011980  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42331  011982  26D9               	addwf	fsr2l,f,c
 42332  011984  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42333  011986  22DA               	addwfc	fsr2h,f,c
 42334  011988  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 42335  01198C  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 42336                           
 42337                           ;usb_device.c: 1030: handle->CNT = len;
 42338  011990  EE20 F001          	lfsr	2,1
 42339  011994  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42340  011996  26D9               	addwf	fsr2l,f,c
 42341  011998  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42342  01199A  22DA               	addwfc	fsr2h,f,c
 42343  01199C  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 42344                           
 42345                           ; BSR set to: 0
 42346                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 42347  0119A0  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42348  0119A4  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42349  0119A8  0E40               	movlw	64
 42350  0119AA  16DF               	andwf	indf2,f,c
 42351                           
 42352                           ; BSR set to: 0
 42353                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 42354  0119AC  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42355  0119B0  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42356  0119B4  0E00               	movlw	0
 42357  0119B6  86DB               	bsf	plusw2,3,c
 42358                           
 42359                           ; BSR set to: 0
 42360                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 42361  0119B8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42362  0119BC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42363  0119C0  0E00               	movlw	0
 42364  0119C2  8EDB               	bsf	plusw2,7,c
 42365                           
 42366                           ; BSR set to: 0
 42367                           ;usb_device.c: 1036: if(dir != 0)
 42368  0119C4  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 42369  0119C6  B4D8               	btfsc	status,2,c
 42370  0119C8  D018               	goto	l190
 42371                           
 42372                           ; BSR set to: 0
 42373                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 42374  0119CA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42375  0119CC  0D02               	mullw	2
 42376  0119CE  0E10               	movlw	low _pBDTEntryIn
 42377  0119D0  24F3               	addwf	prodl,w,c
 42378  0119D2  6ED9               	movwf	fsr2l,c
 42379  0119D4  0E00               	movlw	high _pBDTEntryIn
 42380  0119D6  20F4               	addwfc	prodh,w,c
 42381  0119D8  6EDA               	movwf	fsr2h,c
 42382  0119DA  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 42383  0119DE  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 42384  0119E2  0E04               	movlw	4
 42385  0119E4  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 42386  0119E6  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 42387  0119E8  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 42388  0119EA  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 42389  0119EC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42390  0119EE  0D02               	mullw	2
 42391  0119F0  0E10               	movlw	low _pBDTEntryIn
 42392  0119F2  24F3               	addwf	prodl,w,c
 42393  0119F4  6ED9               	movwf	fsr2l,c
 42394  0119F6  0E00               	movlw	high _pBDTEntryIn
 42395  0119F8  D017               	goto	L51
 42396  0119FA                     l190:
 42397                           
 42398                           ; BSR set to: 0
 42399                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 42400                           
 42401                           ; BSR set to: 0
 42402  0119FA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42403  0119FC  0D02               	mullw	2
 42404  0119FE  0ED3               	movlw	low _pBDTEntryOut
 42405  011A00  24F3               	addwf	prodl,w,c
 42406  011A02  6ED9               	movwf	fsr2l,c
 42407  011A04  0E01               	movlw	high _pBDTEntryOut
 42408  011A06  20F4               	addwfc	prodh,w,c
 42409  011A08  6EDA               	movwf	fsr2h,c
 42410  011A0A  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 42411  011A0E  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 42412  011A12  0E04               	movlw	4
 42413  011A14  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 42414  011A16  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 42415  011A18  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 42416  011A1A  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 42417  011A1C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42418  011A1E  0D02               	mullw	2
 42419  011A20  0ED3               	movlw	low _pBDTEntryOut
 42420  011A22  24F3               	addwf	prodl,w,c
 42421  011A24  6ED9               	movwf	fsr2l,c
 42422  011A26  0E01               	movlw	high _pBDTEntryOut
 42423  011A28                     L51:
 42424  011A28  20F4               	addwfc	prodh,w,c
 42425  011A2A  6EDA               	movwf	fsr2h,c
 42426  011A2C  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 42427  011A30  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 42428                           
 42429                           ; BSR set to: 0
 42430                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 42431                           
 42432                           ; BSR set to: 0
 42433  011A34  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 42434  011A38  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 42435  011A3C  0012               	return	
 42436  011A3E                     __end_of_USBTransferOnePacket:
 42437                           	opt stack 0
 42438                           tosu	equ	0xFFF
 42439                           tosh	equ	0xFFE
 42440                           tosl	equ	0xFFD
 42441                           pclath	equ	0xFFA
 42442                           tblptru	equ	0xFF8
 42443                           tblptrh	equ	0xFF7
 42444                           tblptrl	equ	0xFF6
 42445                           tablat	equ	0xFF5
 42446                           prodh	equ	0xFF4
 42447                           prodl	equ	0xFF3
 42448                           intcon	equ	0xFF2
 42449                           intcon2	equ	0xFF1
 42450                           intcon3	equ	0xFF0
 42451                           indf0	equ	0xFEF
 42452                           postinc0	equ	0xFEE
 42453                           fsr0h	equ	0xFEA
 42454                           fsr0l	equ	0xFE9
 42455                           wreg	equ	0xFE8
 42456                           indf1	equ	0xFE7
 42457                           postinc1	equ	0xFE6
 42458                           postdec1	equ	0xFE5
 42459                           plusw1	equ	0xFE3
 42460                           fsr1h	equ	0xFE2
 42461                           fsr1l	equ	0xFE1
 42462                           indf2	equ	0xFDF
 42463                           postinc2	equ	0xFDE
 42464                           postdec2	equ	0xFDD
 42465                           plusw2	equ	0xFDB
 42466                           fsr2h	equ	0xFDA
 42467                           fsr2l	equ	0xFD9
 42468                           status	equ	0xFD8
 42469                           
 42470 ;; *************** function _SYS_InterruptHigh *****************
 42471 ;; Defined at:
 42472 ;;		line 201 in file "system.c"
 42473 ;; Parameters:    Size  Location     Type
 42474 ;;		None
 42475 ;; Auto vars:     Size  Location     Type
 42476 ;;		None
 42477 ;; Return value:  Size  Location     Type
 42478 ;;                  1    wreg      void 
 42479 ;; Registers used:
 42480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 42481 ;; Tracked objects:
 42482 ;;		On entry : 0/0
 42483 ;;		On exit  : 0/0
 42484 ;;		Unchanged: 0/0
 42485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42488 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42489 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42490 ;;Total ram usage:       14 bytes
 42491 ;; Hardware stack levels used:    1
 42492 ;; Hardware stack levels required when called:    9
 42493 ;; This function calls:
 42494 ;;		_USBDeviceTasks
 42495 ;;		_tmr_isr
 42496 ;; This function is called by:
 42497 ;;		Interrupt level 2
 42498 ;; This function uses a non-reentrant model
 42499 ;;
 42500                           
 42501                           	psect	intcode
 42502  00C008                     __pintcode:
 42503                           	opt stack 0
 42504  00C008                     _SYS_InterruptHigh:
 42505                           	opt stack 9
 42506                           
 42507                           ; BSR set to: 0
 42508                           ;incstack = 0
 42509  00C008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 42510  00C00A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 42511  00C00E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 42512  00C012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 42513  00C016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 42514  00C01A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 42515  00C01E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 42516  00C022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 42517  00C026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 42518  00C02A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 42519  00C02E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 42520  00C032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 42521  00C036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 42522  00C03A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 42523  00C03E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 42524                           
 42525                           ;system.c: 204: USBDeviceTasks();
 42526  00C042  EC1E  F085         	call	_USBDeviceTasks	;wreg free
 42527                           
 42528                           ;system.c: 208: tmr_isr();
 42529  00C046  ECFD  F099         	call	_tmr_isr	;wreg free
 42530  00C04A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 42531  00C04E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 42532  00C052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 42533  00C056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 42534  00C05A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 42535  00C05E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 42536  00C062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 42537  00C066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 42538  00C06A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 42539  00C06E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 42540  00C072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 42541  00C076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 42542  00C07A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 42543  00C07E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 42544  00C082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 42545  00C084  0011               	retfie		f
 42546  00C086                     __end_of_SYS_InterruptHigh:
 42547                           	opt stack 0
 42548                           tosu	equ	0xFFF
 42549                           tosh	equ	0xFFE
 42550                           tosl	equ	0xFFD
 42551                           pclatu	equ	0xFFB
 42552                           pclath	equ	0xFFA
 42553                           tblptru	equ	0xFF8
 42554                           tblptrh	equ	0xFF7
 42555                           tblptrl	equ	0xFF6
 42556                           tablat	equ	0xFF5
 42557                           prodh	equ	0xFF4
 42558                           prodl	equ	0xFF3
 42559                           intcon	equ	0xFF2
 42560                           intcon2	equ	0xFF1
 42561                           intcon3	equ	0xFF0
 42562                           indf0	equ	0xFEF
 42563                           postinc0	equ	0xFEE
 42564                           fsr0h	equ	0xFEA
 42565                           fsr0l	equ	0xFE9
 42566                           wreg	equ	0xFE8
 42567                           indf1	equ	0xFE7
 42568                           postinc1	equ	0xFE6
 42569                           postdec1	equ	0xFE5
 42570                           plusw1	equ	0xFE3
 42571                           fsr1h	equ	0xFE2
 42572                           fsr1l	equ	0xFE1
 42573                           indf2	equ	0xFDF
 42574                           postinc2	equ	0xFDE
 42575                           postdec2	equ	0xFDD
 42576                           plusw2	equ	0xFDB
 42577                           fsr2h	equ	0xFDA
 42578                           fsr2l	equ	0xFD9
 42579                           status	equ	0xFD8
 42580                           
 42581 ;; *************** function _tmr_isr *****************
 42582 ;; Defined at:
 42583 ;;		line 46 in file "os.c"
 42584 ;; Parameters:    Size  Location     Type
 42585 ;;		None
 42586 ;; Auto vars:     Size  Location     Type
 42587 ;;		None
 42588 ;; Return value:  Size  Location     Type
 42589 ;;                  1    wreg      void 
 42590 ;; Registers used:
 42591 ;;		wreg, status,2, status,0
 42592 ;; Tracked objects:
 42593 ;;		On entry : 0/0
 42594 ;;		On exit  : 0/0
 42595 ;;		Unchanged: 0/0
 42596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42601 ;;Total ram usage:        0 bytes
 42602 ;; Hardware stack levels used:    1
 42603 ;; This function calls:
 42604 ;;		Nothing
 42605 ;; This function is called by:
 42606 ;;		_SYS_InterruptHigh
 42607 ;; This function uses a non-reentrant model
 42608 ;;
 42609                           
 42610                           	psect	text213
 42611  0133FA                     __ptext213:
 42612                           	opt stack 0
 42613  0133FA                     _tmr_isr:
 42614                           	opt stack 17
 42615                           
 42616                           ;os.c: 49: if(INTCONbits.T0IF)
 42617                           
 42618                           ;incstack = 0
 42619  0133FA  A4F2               	btfss	intcon,2,c	;volatile
 42620  0133FC  D035               	goto	i2l1322
 42621                           
 42622                           ;os.c: 50: {;os.c: 52: if(os.done)
 42623  0133FE  0102               	movlb	2	; () banked
 42624  013400  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 42625  013402  A4D8               	btfss	status,2,c
 42626  013404  D00D               	goto	i2l1324
 42627  013406  D025               	goto	i2l1330
 42628  013408                     i2l1325:
 42629                           
 42630                           ; BSR set to: 2
 42631                           ;os.c: 58: TMR0H = 0xFF;
 42632  013408  68D7               	setf	4055,c	;volatile
 42633                           
 42634                           ; BSR set to: 2
 42635                           ;os.c: 59: TMR0L = 0x80;
 42636  01340A  0E80               	movlw	128
 42637  01340C  D007               	goto	L53
 42638  01340E                     
 42639                           ; BSR set to: 2
 42640                           ;os.c: 62: TMR0H = 0xF8;
 42641                           
 42642                           ; BSR set to: 2
 42643  01340E  0EF8               	movlw	248
 42644  013410  6ED7               	movwf	4055,c	;volatile
 42645                           
 42646                           ;os.c: 63: TMR0L = 0x30;
 42647  013412  0E30               	movlw	48
 42648  013414  D003               	goto	L53
 42649  013416                     
 42650                           ; BSR set to: 2
 42651                           ;os.c: 66: TMR0H = 0xD1;
 42652                           
 42653                           ; BSR set to: 2
 42654  013416  0ED1               	movlw	209
 42655  013418  6ED7               	movwf	4055,c	;volatile
 42656                           
 42657                           ;os.c: 67: TMR0L = 0x20;
 42658  01341A  0E20               	movlw	32
 42659  01341C                     L53:
 42660  01341C  6ED6               	movwf	4054,c	;volatile
 42661                           
 42662                           ; BSR set to: 2
 42663                           ;os.c: 69: }
 42664                           
 42665                           ;os.c: 68: break;
 42666  01341E  D00A               	goto	i2l1326
 42667  013420                     i2l1324:
 42668                           
 42669                           ; BSR set to: 2
 42670                           
 42671                           ; BSR set to: 2
 42672  013420  5100               	movf	_os& (0+255),w,b	;volatile
 42673                           
 42674                           ; Switch size 1, requested type "space"
 42675                           ; Number of cases is 3, Range of values is 0 to 2
 42676                           ; switch strategies available:
 42677                           ; Name         Instructions Cycles
 42678                           ; simple_byte           10     6 (average)
 42679                           ;	Chosen strategy is simple_byte
 42680  013422  0A00               	xorlw	0	; case 0
 42681  013424  B4D8               	btfsc	status,2,c
 42682  013426  D7F0               	goto	i2l1325
 42683  013428  0A01               	xorlw	1	; case 1
 42684  01342A  B4D8               	btfsc	status,2,c
 42685  01342C  D7F0               	goto	i2l1327
 42686  01342E  0A03               	xorlw	3	; case 2
 42687  013430  B4D8               	btfsc	status,2,c
 42688  013432  D7F1               	goto	i2l1328
 42689  013434                     i2l1326:
 42690                           
 42691                           ; BSR set to: 2
 42692                           ;os.c: 71: ++os.timeSlot;
 42693                           
 42694                           ; BSR set to: 2
 42695  013434  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 42696                           
 42697                           ; BSR set to: 2
 42698                           ;os.c: 76: os.done = 0;
 42699  013436  0E00               	movlw	0
 42700  013438  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 42701                           
 42702                           ;os.c: 77: }
 42703  01343A  D015               	goto	i2l1332
 42704  01343C                     i2l1331:
 42705                           
 42706                           ; BSR set to: 2
 42707                           ;os.c: 84: TMR0H = 0xFF;
 42708  01343C  68D7               	setf	4055,c	;volatile
 42709                           
 42710                           ; BSR set to: 2
 42711                           ;os.c: 85: TMR0L = 0xE0;
 42712  01343E  0EE0               	movlw	224
 42713  013440  D006               	goto	L55
 42714  013442                     i2l1333:
 42715                           
 42716                           ; BSR set to: 2
 42717                           ;os.c: 88: TMR0H = 0xFF;
 42718  013442  68D7               	setf	4055,c	;volatile
 42719                           
 42720                           ; BSR set to: 2
 42721                           ;os.c: 89: TMR0L = 0x06;
 42722  013444  0E06               	movlw	6
 42723  013446  D003               	goto	L55
 42724  013448                     
 42725                           ; BSR set to: 2
 42726                           ;os.c: 92: TMR0H = 0xFA;
 42727                           
 42728                           ; BSR set to: 2
 42729  013448  0EFA               	movlw	250
 42730  01344A  6ED7               	movwf	4055,c	;volatile
 42731                           
 42732                           ;os.c: 93: TMR0L = 0x24;
 42733  01344C  0E24               	movlw	36
 42734  01344E                     L55:
 42735  01344E  6ED6               	movwf	4054,c	;volatile
 42736                           
 42737                           ; BSR set to: 2
 42738                           ;os.c: 95: }
 42739                           
 42740                           ;os.c: 94: break;
 42741  013450  D00A               	goto	i2l1332
 42742  013452                     i2l1330:
 42743                           
 42744                           ; BSR set to: 2
 42745                           
 42746                           ; BSR set to: 2
 42747  013452  5100               	movf	_os& (0+255),w,b	;volatile
 42748                           
 42749                           ; Switch size 1, requested type "space"
 42750                           ; Number of cases is 3, Range of values is 0 to 2
 42751                           ; switch strategies available:
 42752                           ; Name         Instructions Cycles
 42753                           ; simple_byte           10     6 (average)
 42754                           ;	Chosen strategy is simple_byte
 42755  013454  0A00               	xorlw	0	; case 0
 42756  013456  B4D8               	btfsc	status,2,c
 42757  013458  D7F1               	goto	i2l1331
 42758  01345A  0A01               	xorlw	1	; case 1
 42759  01345C  B4D8               	btfsc	status,2,c
 42760  01345E  D7F1               	goto	i2l1333
 42761  013460  0A03               	xorlw	3	; case 2
 42762  013462  B4D8               	btfsc	status,2,c
 42763  013464  D7F1               	goto	i2l1334
 42764  013466                     i2l1332:
 42765                           
 42766                           ; BSR set to: 2
 42767                           ;os.c: 96: };os.c: 97: INTCONbits.T0IF = 0;
 42768                           
 42769                           ; BSR set to: 2
 42770  013466  94F2               	bcf	intcon,2,c	;volatile
 42771  013468                     i2l1322:
 42772                           
 42773                           ;os.c: 98: };os.c: 101: if(INTCON3bits.INT1IF)
 42774  013468  A0F0               	btfss	intcon3,0,c	;volatile
 42775  01346A  D003               	goto	i2l1335
 42776                           
 42777                           ;os.c: 102: {;os.c: 103: ++os.buttonCount;
 42778  01346C  0102               	movlb	2	; () banked
 42779  01346E  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 42780                           
 42781                           ; BSR set to: 2
 42782                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 42783  013470  90F0               	bcf	intcon3,0,c	;volatile
 42784  013472                     i2l1335:
 42785                           
 42786                           ;os.c: 105: };os.c: 108: if(INTCON3bits.INT2IF)
 42787                           
 42788                           ; BSR set to: 2
 42789  013472  A2F0               	btfss	intcon3,1,c	;volatile
 42790  013474  D005               	goto	i2l1336
 42791                           
 42792                           ;os.c: 109: {;os.c: 110: if(!PORTBbits.RB6)
 42793  013476  BC81               	btfsc	3969,6,c	;volatile
 42794  013478  D002               	goto	i2l1337
 42795                           
 42796                           ;os.c: 111: {;os.c: 112: --os.encoderCount;
 42797  01347A  0102               	movlb	2	; () banked
 42798  01347C  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 42799  01347E                     i2l1337:
 42800                           
 42801                           ;os.c: 113: };os.c: 114: INTCON3bits.INT2IF = 0;
 42802                           
 42803                           ; BSR set to: 2
 42804  01347E  92F0               	bcf	intcon3,1,c	;volatile
 42805  013480                     i2l1336:
 42806                           
 42807                           ;os.c: 115: };os.c: 116: if(INTCON3bits.INT3IF)
 42808  013480  A4F0               	btfss	intcon3,2,c	;volatile
 42809  013482  0012               	return	
 42810                           
 42811                           ;os.c: 117: {;os.c: 118: if(!PORTBbits.RB7)
 42812  013484  BE81               	btfsc	3969,7,c	;volatile
 42813  013486  D002               	goto	i2l1339
 42814                           
 42815                           ;os.c: 119: {;os.c: 120: ++os.encoderCount;
 42816  013488  0102               	movlb	2	; () banked
 42817  01348A  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 42818  01348C                     i2l1339:
 42819                           
 42820                           ;os.c: 121: };os.c: 122: INTCON3bits.INT3IF = 0;
 42821                           
 42822                           ; BSR set to: 2
 42823  01348C  94F0               	bcf	intcon3,2,c	;volatile
 42824  01348E  0012               	return	
 42825  013490                     __end_of_tmr_isr:
 42826                           	opt stack 0
 42827                           tosu	equ	0xFFF
 42828                           tosh	equ	0xFFE
 42829                           tosl	equ	0xFFD
 42830                           pclatu	equ	0xFFB
 42831                           pclath	equ	0xFFA
 42832                           tblptru	equ	0xFF8
 42833                           tblptrh	equ	0xFF7
 42834                           tblptrl	equ	0xFF6
 42835                           tablat	equ	0xFF5
 42836                           prodh	equ	0xFF4
 42837                           prodl	equ	0xFF3
 42838                           intcon	equ	0xFF2
 42839                           intcon2	equ	0xFF1
 42840                           intcon3	equ	0xFF0
 42841                           indf0	equ	0xFEF
 42842                           postinc0	equ	0xFEE
 42843                           fsr0h	equ	0xFEA
 42844                           fsr0l	equ	0xFE9
 42845                           wreg	equ	0xFE8
 42846                           indf1	equ	0xFE7
 42847                           postinc1	equ	0xFE6
 42848                           postdec1	equ	0xFE5
 42849                           plusw1	equ	0xFE3
 42850                           fsr1h	equ	0xFE2
 42851                           fsr1l	equ	0xFE1
 42852                           indf2	equ	0xFDF
 42853                           postinc2	equ	0xFDE
 42854                           postdec2	equ	0xFDD
 42855                           plusw2	equ	0xFDB
 42856                           fsr2h	equ	0xFDA
 42857                           fsr2l	equ	0xFD9
 42858                           status	equ	0xFD8
 42859                           
 42860 ;; *************** function _USBDeviceTasks *****************
 42861 ;; Defined at:
 42862 ;;		line 477 in file "usb_device.c"
 42863 ;; Parameters:    Size  Location     Type
 42864 ;;		None
 42865 ;; Auto vars:     Size  Location     Type
 42866 ;;  i               1   30[COMRAM] unsigned char 
 42867 ;; Return value:  Size  Location     Type
 42868 ;;                  1    wreg      void 
 42869 ;; Registers used:
 42870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 42871 ;; Tracked objects:
 42872 ;;		On entry : 0/0
 42873 ;;		On exit  : 0/0
 42874 ;;		Unchanged: 0/0
 42875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42880 ;;Total ram usage:        1 bytes
 42881 ;; Hardware stack levels used:    1
 42882 ;; Hardware stack levels required when called:    8
 42883 ;; This function calls:
 42884 ;;		_USBCtrlEPAllowStatusStage
 42885 ;;		_USBCtrlEPService
 42886 ;;		_USBIncrement1msInternalTimers
 42887 ;;		_USBStallHandler
 42888 ;;		_USBSuspend
 42889 ;;		_USBWakeFromSuspend
 42890 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 42891 ;;		i2_USBDeviceInit
 42892 ;; This function is called by:
 42893 ;;		_SYS_InterruptHigh
 42894 ;; This function uses a non-reentrant model
 42895 ;;
 42896                           
 42897                           	psect	text214
 42898  010A3C                     __ptext214:
 42899                           	opt stack 0
 42900  010A3C                     _USBDeviceTasks:
 42901                           	opt stack 9
 42902                           
 42903                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 42904                           
 42905                           ;incstack = 0
 42906  010A3C  042B               	decf	_USBDeviceState,w,c	;volatile
 42907  010A3E  B4D8               	btfsc	status,2,c
 42908                           
 42909                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 42910  010A40  BA65               	btfsc	3941,5,c	;volatile
 42911  010A42  D007               	goto	i2l157
 42912                           
 42913                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 42914  010A44  0E00               	movlw	0
 42915  010A46  6E62               	movwf	3938,c	;volatile
 42916                           
 42917                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 42918  010A48  010F               	movlb	15	; () banked
 42919  010A4A  8136               	bsf	54,0,b	;volatile
 42920                           
 42921                           ; BSR set to: 15
 42922                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 42923  010A4C  8936               	bsf	54,4,b	;volatile
 42924                           
 42925                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 42926  010A4E  0E02               	movlw	2
 42927  010A50  6E2B               	movwf	_USBDeviceState,c	;volatile
 42928  010A52                     i2l157:
 42929                           
 42930                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 42931                           
 42932                           ; BSR set to: 15
 42933                           
 42934                           ; BSR set to: 15
 42935  010A52  A462               	btfss	3938,2,c	;volatile
 42936  010A54  D006               	goto	i2l158
 42937  010A56  010F               	movlb	15	; () banked
 42938  010A58  A536               	btfss	54,2,b	;volatile
 42939  010A5A  D003               	goto	i2l158
 42940                           
 42941                           ; BSR set to: 15
 42942                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 42943  010A5C  9462               	bcf	3938,2,c	;volatile
 42944                           
 42945                           ; BSR set to: 15
 42946                           ;usb_device.c: 640: USBWakeFromSuspend();
 42947  010A5E  EC3C  F0AA         	call	_USBWakeFromSuspend	;wreg free
 42948  010A62                     i2l158:
 42949                           
 42950                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 42951  010A62  A265               	btfss	3941,1,c	;volatile
 42952  010A64  D002               	goto	i2l159
 42953                           
 42954                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 42955  010A66  98A1               	bcf	4001,4,c	;volatile
 42956                           
 42957                           ;usb_device.c: 650: return;
 42958  010A68  0012               	return	
 42959  010A6A                     i2l159:
 42960                           
 42961                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 42962  010A6A  A062               	btfss	3938,0,c	;volatile
 42963  010A6C  D009               	goto	i2l161
 42964  010A6E  010F               	movlb	15	; () banked
 42965  010A70  A136               	btfss	54,0,b	;volatile
 42966  010A72  D006               	goto	i2l161
 42967                           
 42968                           ; BSR set to: 15
 42969                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 42970  010A74  ECC0  F085         	call	i2_USBDeviceInit	;wreg free
 42971                           
 42972                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 42973  010A78  88A0               	bsf	4000,4,c	;volatile
 42974                           
 42975                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 42976  010A7A  0E04               	movlw	4
 42977  010A7C  6E2B               	movwf	_USBDeviceState,c	;volatile
 42978                           
 42979                           ;usb_device.c: 681: (UIR &= 0xFE);
 42980  010A7E  9062               	bcf	3938,0,c	;volatile
 42981  010A80                     i2l161:
 42982                           
 42983                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 42984  010A80  A862               	btfss	3938,4,c	;volatile
 42985  010A82  D004               	goto	i2l162
 42986  010A84  010F               	movlb	15	; () banked
 42987  010A86  B936               	btfsc	54,4,b	;volatile
 42988                           
 42989                           ; BSR set to: 15
 42990                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 42991  010A88  EC08  F0AB         	call	_USBSuspend	;wreg free
 42992  010A8C                     i2l162:
 42993                           
 42994                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 42995  010A8C  AC62               	btfss	3938,6,c	;volatile
 42996  010A8E  D01B               	goto	i2l166
 42997                           
 42998                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 42999  010A90  010F               	movlb	15	; () banked
 43000  010A92  AD36               	btfss	54,6,b	;volatile
 43001  010A94  D00E               	goto	i2l164
 43002                           
 43003                           ; BSR set to: 15
 43004                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 43005  010A96  0E00               	movlw	0
 43006  010A98  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43007  010A9A  0E73               	movlw	115
 43008  010A9C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43009  010A9E  0E00               	movlw	0
 43010  010AA0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43011  010AA2  0E00               	movlw	0
 43012  010AA4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43013  010AA6  0E00               	movlw	0
 43014  010AA8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43015  010AAA  0E01               	movlw	1
 43016  010AAC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43017  010AAE  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43018  010AB2                     i2l164:
 43019                           
 43020                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 43021  010AB2  9C62               	bcf	3938,6,c	;volatile
 43022                           
 43023                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 43024  010AB4  ECA0  F0AD         	call	_USBIncrement1msInternalTimers	;wreg free
 43025                           
 43026                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 43027  010AB8  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43028  010ABA  A4D8               	btfss	status,2,c
 43029                           
 43030                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 43031  010ABC  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 43032                           
 43033                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 43034  010ABE  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43035  010AC0  B4D8               	btfsc	status,2,c
 43036                           
 43037                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 43038  010AC2  ECED  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 43039  010AC6                     i2l166:
 43040                           
 43041                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 43042  010AC6  AA62               	btfss	3938,5,c	;volatile
 43043  010AC8  D004               	goto	i2l167
 43044  010ACA  010F               	movlb	15	; () banked
 43045  010ACC  BB36               	btfsc	54,5,b	;volatile
 43046                           
 43047                           ; BSR set to: 15
 43048                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 43049  010ACE  EC0B  F0A9         	call	_USBStallHandler	;wreg free
 43050  010AD2                     i2l167:
 43051                           
 43052                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 43053  010AD2  A262               	btfss	3938,1,c	;volatile
 43054  010AD4  D012               	goto	i2l168
 43055  010AD6  010F               	movlb	15	; () banked
 43056  010AD8  A336               	btfss	54,1,b	;volatile
 43057  010ADA  D00F               	goto	i2l168
 43058                           
 43059                           ; BSR set to: 15
 43060                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 43061  010ADC  0E7F               	movlw	127
 43062  010ADE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43063  010AE0  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43064  010AE2  0E00               	movlw	0
 43065  010AE4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43066  010AE6  0E00               	movlw	0
 43067  010AE8  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43068  010AEA  0E00               	movlw	0
 43069  010AEC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43070  010AEE  0E01               	movlw	1
 43071  010AF0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43072  010AF2  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43073                           
 43074                           ;usb_device.c: 759: {UEIR = 0;};
 43075  010AF6  0E00               	movlw	0
 43076  010AF8  6E63               	movwf	3939,c	;volatile
 43077  010AFA                     i2l168:
 43078                           
 43079                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 43080  010AFA  0E04               	movlw	4
 43081  010AFC  602B               	cpfslt	_USBDeviceState,c	;volatile
 43082  010AFE  D002               	goto	i2l169
 43083                           
 43084                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 43085  010B00  98A1               	bcf	4001,4,c	;volatile
 43086                           
 43087                           ;usb_device.c: 777: return;
 43088  010B02  0012               	return	
 43089  010B04                     i2l169:
 43090                           
 43091                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 43092  010B04  010F               	movlb	15	; () banked
 43093  010B06  A736               	btfss	54,3,b	;volatile
 43094  010B08  D039               	goto	i2u2206_40
 43095                           
 43096                           ; BSR set to: 15
 43097                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 43098  010B0A  0E00               	movlw	0
 43099  010B0C  6E4C               	movwf	USBDeviceTasks@i,c
 43100  010B0E                     i2l22241:
 43101                           
 43102                           ; BSR set to: 15
 43103  010B0E  0E03               	movlw	3
 43104  010B10  644C               	cpfsgt	USBDeviceTasks@i,c
 43105  010B12  D001               	goto	i2l171
 43106  010B14  D033               	goto	i2u2206_40
 43107  010B16                     i2l171:
 43108                           
 43109                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 43110  010B16  A662               	btfss	3938,3,c	;volatile
 43111  010B18  D031               	goto	i2u2206_40
 43112                           
 43113                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 43114  010B1A  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 43115                           
 43116                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 43117  010B1E  302C               	rrcf	_USTATcopy,w,c	;volatile
 43118  010B20  32E8               	rrcf	wreg,f,c
 43119  010B22  32E8               	rrcf	wreg,f,c
 43120  010B24  0B0F               	andlw	15
 43121  010B26  6E26               	movwf	_endpoint_number,c	;volatile
 43122                           
 43123                           ;usb_device.c: 793: (UIR &= 0xF7);
 43124  010B28  9662               	bcf	3938,3,c	;volatile
 43125                           
 43126                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 43127  010B2A  B42C               	btfsc	_USTATcopy,2,c	;volatile
 43128  010B2C  D007               	goto	i2l174
 43129                           
 43130                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 43131  010B2E  5026               	movf	_endpoint_number,w,c	;volatile
 43132  010B30  0D01               	mullw	1
 43133  010B32  0EE1               	movlw	low _ep_data_out
 43134  010B34  24F3               	addwf	prodl,w,c
 43135  010B36  6ED9               	movwf	fsr2l,c
 43136  010B38  0E01               	movlw	high _ep_data_out
 43137  010B3A  D006               	goto	L56
 43138  010B3C                     i2l174:
 43139                           
 43140                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 43141                           
 43142                           ; BSR set to: 1
 43143  010B3C  5026               	movf	_endpoint_number,w,c	;volatile
 43144  010B3E  0D01               	mullw	1
 43145  010B40  0EE4               	movlw	low _ep_data_in
 43146  010B42  24F3               	addwf	prodl,w,c
 43147  010B44  6ED9               	movwf	fsr2l,c
 43148  010B46  0E01               	movlw	high _ep_data_in
 43149  010B48                     L56:
 43150  010B48  20F4               	addwfc	prodh,w,c
 43151  010B4A  6EDA               	movwf	fsr2h,c
 43152  010B4C  0101               	movlb	1	; () banked
 43153  010B4E  70DF               	btg	indf2,0,c
 43154                           
 43155                           ; BSR set to: 1
 43156                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 43157                           
 43158                           ; BSR set to: 1
 43159  010B50  5026               	movf	_endpoint_number,w,c	;volatile
 43160  010B52  A4D8               	btfss	status,2,c
 43161  010B54  D003               	goto	i2l176
 43162                           
 43163                           ; BSR set to: 1
 43164                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 43165  010B56  EC48  F09A         	call	_USBCtrlEPService	;wreg free
 43166                           
 43167                           ;usb_device.c: 813: }
 43168  010B5A  D00E               	goto	i2l178
 43169  010B5C                     i2l176:
 43170                           
 43171                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 43172  010B5C  0E00               	movlw	0
 43173  010B5E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43174  010B60  0E72               	movlw	114
 43175  010B62  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43176  010B64  0E2C               	movlw	low _USTATcopy
 43177  010B66  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43178  010B68  0E00               	movlw	high _USTATcopy
 43179  010B6A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43180  010B6C  0E00               	movlw	0
 43181  010B6E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43182  010B70  0E00               	movlw	0
 43183  010B72  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43184  010B74  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43185  010B78                     i2l178:
 43186  010B78  2A4C               	incf	USBDeviceTasks@i,f,c
 43187  010B7A  D7C9               	goto	i2l22241
 43188  010B7C                     i2u2206_40:
 43189                           
 43190                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 43191  010B7C  98A1               	bcf	4001,4,c	;volatile
 43192  010B7E  0012               	return		;funcret
 43193  010B80                     __end_of_USBDeviceTasks:
 43194                           	opt stack 0
 43195                           tosu	equ	0xFFF
 43196                           tosh	equ	0xFFE
 43197                           tosl	equ	0xFFD
 43198                           pclatu	equ	0xFFB
 43199                           pclath	equ	0xFFA
 43200                           tblptru	equ	0xFF8
 43201                           tblptrh	equ	0xFF7
 43202                           tblptrl	equ	0xFF6
 43203                           tablat	equ	0xFF5
 43204                           prodh	equ	0xFF4
 43205                           prodl	equ	0xFF3
 43206                           intcon	equ	0xFF2
 43207                           intcon2	equ	0xFF1
 43208                           intcon3	equ	0xFF0
 43209                           indf0	equ	0xFEF
 43210                           postinc0	equ	0xFEE
 43211                           fsr0h	equ	0xFEA
 43212                           fsr0l	equ	0xFE9
 43213                           wreg	equ	0xFE8
 43214                           indf1	equ	0xFE7
 43215                           postinc1	equ	0xFE6
 43216                           postdec1	equ	0xFE5
 43217                           plusw1	equ	0xFE3
 43218                           fsr1h	equ	0xFE2
 43219                           fsr1l	equ	0xFE1
 43220                           indf2	equ	0xFDF
 43221                           postinc2	equ	0xFDE
 43222                           postdec2	equ	0xFDD
 43223                           plusw2	equ	0xFDB
 43224                           fsr2h	equ	0xFDA
 43225                           fsr2l	equ	0xFD9
 43226                           status	equ	0xFD8
 43227                           
 43228 ;; *************** function i2_USBDeviceInit *****************
 43229 ;; Defined at:
 43230 ;;		line 277 in file "usb_device.c"
 43231 ;; Parameters:    Size  Location     Type
 43232 ;;		None
 43233 ;; Auto vars:     Size  Location     Type
 43234 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 43235 ;; Return value:  Size  Location     Type
 43236 ;;                  1    wreg      void 
 43237 ;; Registers used:
 43238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43239 ;; Tracked objects:
 43240 ;;		On entry : 0/0
 43241 ;;		On exit  : 0/0
 43242 ;;		Unchanged: 0/0
 43243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43248 ;;Total ram usage:        1 bytes
 43249 ;; Hardware stack levels used:    1
 43250 ;; Hardware stack levels required when called:    1
 43251 ;; This function calls:
 43252 ;;		i2_memset
 43253 ;; This function is called by:
 43254 ;;		_USBDeviceTasks
 43255 ;; This function uses a non-reentrant model
 43256 ;;
 43257                           
 43258                           	psect	text215
 43259  010B80                     __ptext215:
 43260                           	opt stack 0
 43261  010B80                     i2_USBDeviceInit:
 43262                           	opt stack 15
 43263                           
 43264                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 43265                           
 43266                           ;incstack = 0
 43267  010B80  98A0               	bcf	4000,4,c	;volatile
 43268                           
 43269                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 43270  010B82  0E00               	movlw	0
 43271  010B84  6E63               	movwf	3939,c	;volatile
 43272                           
 43273                           ;usb_device.c: 291: {UIR = 0;};
 43274  010B86  0E00               	movlw	0
 43275  010B88  6E62               	movwf	3938,c	;volatile
 43276                           
 43277                           ;usb_device.c: 294: UEP0 = 0;
 43278  010B8A  0E00               	movlw	0
 43279  010B8C  010F               	movlb	15	; () banked
 43280  010B8E  6F26               	movwf	38,b	;volatile
 43281                           
 43282                           ; BSR set to: 15
 43283                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 43284  010B90  0E27               	movlw	39
 43285  010B92  6E2E               	movwf	i2memset@p1,c
 43286  010B94  0E0F               	movlw	15
 43287  010B96  6E2F               	movwf	i2memset@p1+1,c
 43288  010B98  0E00               	movlw	0
 43289  010B9A  6E31               	movwf	i2memset@c+1,c
 43290  010B9C  0E00               	movlw	0
 43291  010B9E  6E30               	movwf	i2memset@c,c
 43292  010BA0  0E00               	movlw	0
 43293  010BA2  6E33               	movwf	i2memset@n+1,c
 43294  010BA4  0E02               	movlw	2
 43295  010BA6  6E32               	movwf	i2memset@n,c
 43296  010BA8  ECEA  F0AB         	call	i2_memset	;wreg free
 43297                           
 43298                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 43299  010BAC  0E16               	movlw	22
 43300  010BAE  010F               	movlb	15	; () banked
 43301  010BB0  6F39               	movwf	57,b	;volatile
 43302                           
 43303                           ; BSR set to: 15
 43304  010BB2  0E9F               	movlw	159
 43305  010BB4  6F37               	movwf	55,b	;volatile
 43306                           
 43307                           ; BSR set to: 15
 43308  010BB6  0E7B               	movlw	123
 43309  010BB8  6F36               	movwf	54,b	;volatile
 43310                           
 43311                           ; BSR set to: 15
 43312                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 43313  010BBA  0E00               	movlw	0
 43314  010BBC  6E36               	movwf	i2USBDeviceInit@i,c
 43315  010BBE                     i2l16171:
 43316                           
 43317                           ; BSR set to: 15
 43318  010BBE  0E0B               	movlw	11
 43319  010BC0  6436               	cpfsgt	i2USBDeviceInit@i,c
 43320  010BC2  D001               	goto	i2l147
 43321  010BC4  D00E               	goto	i2u1461_40
 43322  010BC6                     i2l147:
 43323                           
 43324                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 43325                           
 43326                           ; BSR set to: 15
 43327  010BC6  5036               	movf	i2USBDeviceInit@i,w,c
 43328  010BC8  0D04               	mullw	4
 43329  010BCA  0E00               	movlw	0
 43330  010BCC  24F3               	addwf	prodl,w,c
 43331  010BCE  6ED9               	movwf	fsr2l,c
 43332  010BD0  0E0D               	movlw	13
 43333  010BD2  20F4               	addwfc	prodh,w,c
 43334  010BD4  6EDA               	movwf	fsr2h,c
 43335  010BD6  6ADE               	clrf	postinc2,c
 43336  010BD8  6ADE               	clrf	postinc2,c
 43337  010BDA  6ADE               	clrf	postinc2,c
 43338  010BDC  6ADD               	clrf	postdec2,c
 43339  010BDE  2A36               	incf	i2USBDeviceInit@i,f,c
 43340  010BE0  D7EE               	goto	i2l16171
 43341  010BE2                     i2u1461_40:
 43342                           
 43343                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 43344  010BE2  8C65               	bsf	3941,6,c	;volatile
 43345                           
 43346                           ;usb_device.c: 316: UADDR = 0x00;
 43347  010BE4  0E00               	movlw	0
 43348  010BE6  010F               	movlb	15	; () banked
 43349  010BE8  6F38               	movwf	56,b	;volatile
 43350                           
 43351                           ; BSR set to: 15
 43352                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 43353  010BEA  9865               	bcf	3941,4,c	;volatile
 43354                           
 43355                           ; BSR set to: 15
 43356                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 43357  010BEC  9C65               	bcf	3941,6,c	;volatile
 43358  010BEE                     
 43359                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 43360                           
 43361                           ; BSR set to: 15
 43362  010BEE  9662               	bcf	3938,3,c	;volatile
 43363                           
 43364                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 43365  010BF0  0E00               	movlw	0
 43366  010BF2  6E0D               	movwf	_inPipes+3,c	;volatile
 43367                           
 43368                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 43369  010BF4  0E00               	movlw	0
 43370  010BF6  6E04               	movwf	_outPipes+3,c	;volatile
 43371                           
 43372                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 43373  010BF8  0E00               	movlw	0
 43374  010BFA  6E06               	movwf	_outPipes+5,c	;volatile
 43375  010BFC  0E00               	movlw	0
 43376  010BFE  6E05               	movwf	_outPipes+4,c	;volatile
 43377                           
 43378                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 43379  010C00  B662               	btfsc	3938,3,c	;volatile
 43380  010C02  D7F5               	goto	i2l149
 43381                           
 43382                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 43383  010C04  0E01               	movlw	1
 43384  010C06  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 43385                           
 43386                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 43387  010C08  0E01               	movlw	1
 43388  010C0A  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 43389                           
 43390                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 43391  010C0C  0E00               	movlw	0
 43392  010C0E  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 43393                           
 43394                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 43395  010C10  0E00               	movlw	0
 43396  010C12  0101               	movlb	1	; () banked
 43397  010C14  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 43398                           
 43399                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 43400  010C16  0E00               	movlw	0
 43401  010C18  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 43402                           
 43403                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 43404  010C1A  0E00               	movlw	0
 43405  010C1C  6E36               	movwf	i2USBDeviceInit@i,c
 43406  010C1E                     i2l16199:
 43407                           
 43408                           ; BSR set to: 1
 43409  010C1E  0E02               	movlw	2
 43410  010C20  6436               	cpfsgt	i2USBDeviceInit@i,c
 43411  010C22  D001               	goto	i2l151
 43412  010C24  D02E               	goto	i2u1464_40
 43413  010C26                     i2l151:
 43414                           
 43415                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 43416                           
 43417                           ; BSR set to: 1
 43418  010C26  5036               	movf	i2USBDeviceInit@i,w,c
 43419  010C28  0D02               	mullw	2
 43420  010C2A  0E10               	movlw	low _pBDTEntryIn
 43421  010C2C  24F3               	addwf	prodl,w,c
 43422  010C2E  6ED9               	movwf	fsr2l,c
 43423  010C30  0E00               	movlw	high _pBDTEntryIn
 43424  010C32  20F4               	addwfc	prodh,w,c
 43425  010C34  6EDA               	movwf	fsr2h,c
 43426  010C36  0E00               	movlw	0
 43427  010C38  6EDE               	movwf	postinc2,c
 43428  010C3A  0E00               	movlw	0
 43429  010C3C  6EDD               	movwf	postdec2,c
 43430                           
 43431                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 43432  010C3E  5036               	movf	i2USBDeviceInit@i,w,c
 43433  010C40  0D02               	mullw	2
 43434  010C42  0ED3               	movlw	low _pBDTEntryOut
 43435  010C44  24F3               	addwf	prodl,w,c
 43436  010C46  6ED9               	movwf	fsr2l,c
 43437  010C48  0E01               	movlw	high _pBDTEntryOut
 43438  010C4A  20F4               	addwfc	prodh,w,c
 43439  010C4C  6EDA               	movwf	fsr2h,c
 43440  010C4E  0E00               	movlw	0
 43441  010C50  6EDE               	movwf	postinc2,c
 43442  010C52  0E00               	movlw	0
 43443  010C54  6EDD               	movwf	postdec2,c
 43444                           
 43445                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 43446  010C56  5036               	movf	i2USBDeviceInit@i,w,c
 43447  010C58  0D01               	mullw	1
 43448  010C5A  0EE4               	movlw	low _ep_data_in
 43449  010C5C  24F3               	addwf	prodl,w,c
 43450  010C5E  6ED9               	movwf	fsr2l,c
 43451  010C60  0E01               	movlw	high _ep_data_in
 43452  010C62  20F4               	addwfc	prodh,w,c
 43453  010C64  6EDA               	movwf	fsr2h,c
 43454  010C66  0E00               	movlw	0
 43455  010C68  6EDF               	movwf	indf2,c
 43456                           
 43457                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 43458  010C6A  5036               	movf	i2USBDeviceInit@i,w,c
 43459  010C6C  0D01               	mullw	1
 43460  010C6E  0EE1               	movlw	low _ep_data_out
 43461  010C70  24F3               	addwf	prodl,w,c
 43462  010C72  6ED9               	movwf	fsr2l,c
 43463  010C74  0E01               	movlw	high _ep_data_out
 43464  010C76  20F4               	addwfc	prodh,w,c
 43465  010C78  6EDA               	movwf	fsr2h,c
 43466  010C7A  0E00               	movlw	0
 43467  010C7C  6EDF               	movwf	indf2,c
 43468  010C7E  2A36               	incf	i2USBDeviceInit@i,f,c
 43469  010C80  D7CE               	goto	i2l16199
 43470  010C82                     i2u1464_40:
 43471                           
 43472                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 43473  010C82  0E08               	movlw	8
 43474  010C84  6E10               	movwf	_pBDTEntryIn,c
 43475  010C86  0E0D               	movlw	13
 43476  010C88  6E11               	movwf	_pBDTEntryIn+1,c
 43477                           
 43478                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 43479  010C8A  0E16               	movlw	22
 43480  010C8C  010F               	movlb	15	; () banked
 43481  010C8E  6F26               	movwf	38,b	;volatile
 43482                           
 43483                           ; BSR set to: 15
 43484                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 43485  010C90  0E0D               	movlw	13
 43486  010C92  010D               	movlb	13	; () banked
 43487  010C94  6F03               	movwf	3,b	;volatile
 43488  010C96  0E30               	movlw	48
 43489  010C98  6F02               	movwf	2,b	;volatile
 43490                           
 43491                           ; BSR set to: 13
 43492                           ;usb_device.c: 359: BDT[0].CNT = 8;
 43493  010C9A  0E08               	movlw	8
 43494  010C9C  6F01               	movwf	1,b	;volatile
 43495                           
 43496                           ; BSR set to: 13
 43497                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 43498  010C9E  0E04               	movlw	4
 43499  010CA0  6F00               	movwf	0,b	;volatile
 43500                           
 43501                           ; BSR set to: 13
 43502                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 43503  010CA2  8F00               	bsf	0,7,b	;volatile
 43504                           
 43505                           ; BSR set to: 13
 43506                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 43507  010CA4  0E00               	movlw	0
 43508  010CA6  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 43509                           
 43510                           ; BSR set to: 13
 43511                           ;usb_device.c: 366: USB1msTickCount = 0;
 43512  010CA8  0E00               	movlw	0
 43513  010CAA  0101               	movlb	1	; () banked
 43514  010CAC  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 43515  010CAE  0E00               	movlw	0
 43516  010CB0  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 43517  010CB2  0E00               	movlw	0
 43518  010CB4  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 43519  010CB6  0E00               	movlw	0
 43520  010CB8  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 43521                           
 43522                           ; BSR set to: 1
 43523                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 43524  010CBA  0E00               	movlw	0
 43525  010CBC  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43526                           
 43527                           ; BSR set to: 1
 43528                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 43529  010CBE  0E00               	movlw	0
 43530  010CC0  6E2B               	movwf	_USBDeviceState,c	;volatile
 43531                           
 43532                           ; BSR set to: 1
 43533  010CC2  0012               	return		;funcret
 43534  010CC4                     __end_ofi2_USBDeviceInit:
 43535                           	opt stack 0
 43536                           tosu	equ	0xFFF
 43537                           tosh	equ	0xFFE
 43538                           tosl	equ	0xFFD
 43539                           pclatu	equ	0xFFB
 43540                           pclath	equ	0xFFA
 43541                           tblptru	equ	0xFF8
 43542                           tblptrh	equ	0xFF7
 43543                           tblptrl	equ	0xFF6
 43544                           tablat	equ	0xFF5
 43545                           prodh	equ	0xFF4
 43546                           prodl	equ	0xFF3
 43547                           intcon	equ	0xFF2
 43548                           intcon2	equ	0xFF1
 43549                           intcon3	equ	0xFF0
 43550                           indf0	equ	0xFEF
 43551                           postinc0	equ	0xFEE
 43552                           fsr0h	equ	0xFEA
 43553                           fsr0l	equ	0xFE9
 43554                           wreg	equ	0xFE8
 43555                           indf1	equ	0xFE7
 43556                           postinc1	equ	0xFE6
 43557                           postdec1	equ	0xFE5
 43558                           plusw1	equ	0xFE3
 43559                           fsr1h	equ	0xFE2
 43560                           fsr1l	equ	0xFE1
 43561                           indf2	equ	0xFDF
 43562                           postinc2	equ	0xFDE
 43563                           postdec2	equ	0xFDD
 43564                           plusw2	equ	0xFDB
 43565                           fsr2h	equ	0xFDA
 43566                           fsr2l	equ	0xFD9
 43567                           status	equ	0xFD8
 43568                           
 43569 ;; *************** function _USBWakeFromSuspend *****************
 43570 ;; Defined at:
 43571 ;;		line 2305 in file "usb_device.c"
 43572 ;; Parameters:    Size  Location     Type
 43573 ;;		None
 43574 ;; Auto vars:     Size  Location     Type
 43575 ;;		None
 43576 ;; Return value:  Size  Location     Type
 43577 ;;                  1    wreg      void 
 43578 ;; Registers used:
 43579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 43580 ;; Tracked objects:
 43581 ;;		On entry : 0/0
 43582 ;;		On exit  : 0/0
 43583 ;;		Unchanged: 0/0
 43584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43589 ;;Total ram usage:        0 bytes
 43590 ;; Hardware stack levels used:    1
 43591 ;; Hardware stack levels required when called:    4
 43592 ;; This function calls:
 43593 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 43594 ;; This function is called by:
 43595 ;;		_USBDeviceTasks
 43596 ;; This function uses a non-reentrant model
 43597 ;;
 43598                           
 43599                           	psect	text216
 43600  015478                     __ptext216:
 43601                           	opt stack 0
 43602  015478                     _USBWakeFromSuspend:
 43603                           	opt stack 12
 43604                           
 43605                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 43606                           
 43607                           ; BSR set to: 1
 43608                           ;incstack = 0
 43609  015478  0E00               	movlw	0
 43610  01547A  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 43611                           
 43612                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 43613  01547C  0E00               	movlw	0
 43614  01547E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43615  015480  0E74               	movlw	116
 43616  015482  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43617  015484  0E00               	movlw	0
 43618  015486  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43619  015488  0E00               	movlw	0
 43620  01548A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43621  01548C  0E00               	movlw	0
 43622  01548E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43623  015490  0E00               	movlw	0
 43624  015492  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43625  015494  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43626                           
 43627                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 43628  015498  9265               	bcf	3941,1,c	;volatile
 43629                           
 43630                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 43631  01549A  010F               	movlb	15	; () banked
 43632  01549C  9536               	bcf	54,2,b	;volatile
 43633                           
 43634                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 43635  01549E  D001               	goto	i2l317
 43636  0154A0                     
 43637                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 43638                           
 43639                           ; BSR set to: 15
 43640  0154A0  9462               	bcf	3938,2,c	;volatile
 43641  0154A2                     i2l317:
 43642  0154A2  B462               	btfsc	3938,2,c	;volatile
 43643  0154A4  D7FD               	goto	i2l318
 43644                           
 43645                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 43646  0154A6  0E00               	movlw	0
 43647  0154A8  0101               	movlb	1	; () banked
 43648  0154AA  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43649                           
 43650                           ; BSR set to: 1
 43651  0154AC  0012               	return		;funcret
 43652  0154AE                     __end_of_USBWakeFromSuspend:
 43653                           	opt stack 0
 43654                           tosu	equ	0xFFF
 43655                           tosh	equ	0xFFE
 43656                           tosl	equ	0xFFD
 43657                           pclatu	equ	0xFFB
 43658                           pclath	equ	0xFFA
 43659                           tblptru	equ	0xFF8
 43660                           tblptrh	equ	0xFF7
 43661                           tblptrl	equ	0xFF6
 43662                           tablat	equ	0xFF5
 43663                           prodh	equ	0xFF4
 43664                           prodl	equ	0xFF3
 43665                           intcon	equ	0xFF2
 43666                           intcon2	equ	0xFF1
 43667                           intcon3	equ	0xFF0
 43668                           indf0	equ	0xFEF
 43669                           postinc0	equ	0xFEE
 43670                           fsr0h	equ	0xFEA
 43671                           fsr0l	equ	0xFE9
 43672                           wreg	equ	0xFE8
 43673                           indf1	equ	0xFE7
 43674                           postinc1	equ	0xFE6
 43675                           postdec1	equ	0xFE5
 43676                           plusw1	equ	0xFE3
 43677                           fsr1h	equ	0xFE2
 43678                           fsr1l	equ	0xFE1
 43679                           indf2	equ	0xFDF
 43680                           postinc2	equ	0xFDE
 43681                           postdec2	equ	0xFDD
 43682                           plusw2	equ	0xFDB
 43683                           fsr2h	equ	0xFDA
 43684                           fsr2l	equ	0xFD9
 43685                           status	equ	0xFD8
 43686                           
 43687 ;; *************** function _USBSuspend *****************
 43688 ;; Defined at:
 43689 ;;		line 2247 in file "usb_device.c"
 43690 ;; Parameters:    Size  Location     Type
 43691 ;;		None
 43692 ;; Auto vars:     Size  Location     Type
 43693 ;;		None
 43694 ;; Return value:  Size  Location     Type
 43695 ;;                  1    wreg      void 
 43696 ;; Registers used:
 43697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 43698 ;; Tracked objects:
 43699 ;;		On entry : 0/0
 43700 ;;		On exit  : 0/0
 43701 ;;		Unchanged: 0/0
 43702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43707 ;;Total ram usage:        0 bytes
 43708 ;; Hardware stack levels used:    1
 43709 ;; Hardware stack levels required when called:    4
 43710 ;; This function calls:
 43711 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 43712 ;; This function is called by:
 43713 ;;		_USBDeviceTasks
 43714 ;; This function uses a non-reentrant model
 43715 ;;
 43716                           
 43717                           	psect	text217
 43718  015610                     __ptext217:
 43719                           	opt stack 0
 43720  015610                     _USBSuspend:
 43721                           	opt stack 12
 43722                           
 43723                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 43724                           
 43725                           ; BSR set to: 1
 43726                           ;incstack = 0
 43727  015610  010F               	movlb	15	; () banked
 43728  015612  8536               	bsf	54,2,b	;volatile
 43729                           
 43730                           ; BSR set to: 15
 43731                           ;usb_device.c: 2273: (UIR &= 0xEF);
 43732  015614  9862               	bcf	3938,4,c	;volatile
 43733                           
 43734                           ; BSR set to: 15
 43735                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 43736  015616  8265               	bsf	3941,1,c	;volatile
 43737                           
 43738                           ; BSR set to: 15
 43739                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 43740  015618  0E01               	movlw	1
 43741  01561A  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 43742                           
 43743                           ; BSR set to: 15
 43744                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 43745  01561C  0E00               	movlw	0
 43746  01561E  0101               	movlb	1	; () banked
 43747  015620  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43748                           
 43749                           ; BSR set to: 1
 43750                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 43751  015622  0E00               	movlw	0
 43752  015624  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43753  015626  0E75               	movlw	117
 43754  015628  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43755  01562A  0E00               	movlw	0
 43756  01562C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43757  01562E  0E00               	movlw	0
 43758  015630  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43759  015632  0E00               	movlw	0
 43760  015634  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43761  015636  0E00               	movlw	0
 43762  015638  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43763  01563A  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43764  01563E  0012               	return		;funcret
 43765  015640                     __end_of_USBSuspend:
 43766                           	opt stack 0
 43767                           tosu	equ	0xFFF
 43768                           tosh	equ	0xFFE
 43769                           tosl	equ	0xFFD
 43770                           pclatu	equ	0xFFB
 43771                           pclath	equ	0xFFA
 43772                           tblptru	equ	0xFF8
 43773                           tblptrh	equ	0xFF7
 43774                           tblptrl	equ	0xFF6
 43775                           tablat	equ	0xFF5
 43776                           prodh	equ	0xFF4
 43777                           prodl	equ	0xFF3
 43778                           intcon	equ	0xFF2
 43779                           intcon2	equ	0xFF1
 43780                           intcon3	equ	0xFF0
 43781                           indf0	equ	0xFEF
 43782                           postinc0	equ	0xFEE
 43783                           fsr0h	equ	0xFEA
 43784                           fsr0l	equ	0xFE9
 43785                           wreg	equ	0xFE8
 43786                           indf1	equ	0xFE7
 43787                           postinc1	equ	0xFE6
 43788                           postdec1	equ	0xFE5
 43789                           plusw1	equ	0xFE3
 43790                           fsr1h	equ	0xFE2
 43791                           fsr1l	equ	0xFE1
 43792                           indf2	equ	0xFDF
 43793                           postinc2	equ	0xFDE
 43794                           postdec2	equ	0xFDD
 43795                           plusw2	equ	0xFDB
 43796                           fsr2h	equ	0xFDA
 43797                           fsr2l	equ	0xFD9
 43798                           status	equ	0xFD8
 43799                           
 43800 ;; *************** function _USBStallHandler *****************
 43801 ;; Defined at:
 43802 ;;		line 2204 in file "usb_device.c"
 43803 ;; Parameters:    Size  Location     Type
 43804 ;;		None
 43805 ;; Auto vars:     Size  Location     Type
 43806 ;;		None
 43807 ;; Return value:  Size  Location     Type
 43808 ;;                  1    wreg      void 
 43809 ;; Registers used:
 43810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43811 ;; Tracked objects:
 43812 ;;		On entry : 0/0
 43813 ;;		On exit  : 0/0
 43814 ;;		Unchanged: 0/0
 43815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43820 ;;Total ram usage:        1 bytes
 43821 ;; Hardware stack levels used:    1
 43822 ;; This function calls:
 43823 ;;		Nothing
 43824 ;; This function is called by:
 43825 ;;		_USBDeviceTasks
 43826 ;; This function uses a non-reentrant model
 43827 ;;
 43828                           
 43829                           	psect	text218
 43830  015216                     __ptext218:
 43831                           	opt stack 0
 43832  015216                     _USBStallHandler:
 43833                           	opt stack 16
 43834                           
 43835                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 43836                           
 43837                           ;incstack = 0
 43838  015216  010F               	movlb	15	; () banked
 43839  015218  A126               	btfss	38,0,b	;volatile
 43840  01521A  D01D               	goto	i2l309
 43841                           
 43842                           ; BSR set to: 15
 43843                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 43844  01521C  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 43845  015220  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 43846  015224  0E80               	movlw	128
 43847  015226  18DE               	xorwf	postinc2,w,c
 43848  015228  A4D8               	btfss	status,2,c
 43849  01522A  D014               	goto	i2l310
 43850                           
 43851                           ; BSR set to: 15
 43852  01522C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 43853  015230  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 43854  015234  0E84               	movlw	132
 43855  015236  18DE               	xorwf	postinc2,w,c
 43856  015238  A4D8               	btfss	status,2,c
 43857  01523A  D00C               	goto	i2l310
 43858                           
 43859                           ; BSR set to: 15
 43860                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 43861  01523C  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 43862  015240  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 43863  015244  0E0C               	movlw	12
 43864  015246  6EDF               	movwf	indf2,c
 43865                           
 43866                           ; BSR set to: 15
 43867                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 43868  015248  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 43869  01524C  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 43870  015250  0E00               	movlw	0
 43871  015252  8EDB               	bsf	plusw2,7,c
 43872  015254                     i2l310:
 43873                           
 43874                           ; BSR set to: 15
 43875                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 43876                           
 43877                           ; BSR set to: 15
 43878  015254  9126               	bcf	38,0,b	;volatile
 43879  015256                     i2l309:
 43880                           
 43881                           ; BSR set to: 15
 43882                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 43883  015256  9A62               	bcf	3938,5,c	;volatile
 43884                           
 43885                           ; BSR set to: 15
 43886  015258  0012               	return		;funcret
 43887  01525A                     __end_of_USBStallHandler:
 43888                           	opt stack 0
 43889                           tosu	equ	0xFFF
 43890                           tosh	equ	0xFFE
 43891                           tosl	equ	0xFFD
 43892                           pclatu	equ	0xFFB
 43893                           pclath	equ	0xFFA
 43894                           tblptru	equ	0xFF8
 43895                           tblptrh	equ	0xFF7
 43896                           tblptrl	equ	0xFF6
 43897                           tablat	equ	0xFF5
 43898                           prodh	equ	0xFF4
 43899                           prodl	equ	0xFF3
 43900                           intcon	equ	0xFF2
 43901                           intcon2	equ	0xFF1
 43902                           intcon3	equ	0xFF0
 43903                           indf0	equ	0xFEF
 43904                           postinc0	equ	0xFEE
 43905                           fsr0h	equ	0xFEA
 43906                           fsr0l	equ	0xFE9
 43907                           wreg	equ	0xFE8
 43908                           indf1	equ	0xFE7
 43909                           postinc1	equ	0xFE6
 43910                           postdec1	equ	0xFE5
 43911                           plusw1	equ	0xFE3
 43912                           fsr1h	equ	0xFE2
 43913                           fsr1l	equ	0xFE1
 43914                           indf2	equ	0xFDF
 43915                           postinc2	equ	0xFDE
 43916                           postdec2	equ	0xFDD
 43917                           plusw2	equ	0xFDB
 43918                           fsr2h	equ	0xFDA
 43919                           fsr2l	equ	0xFD9
 43920                           status	equ	0xFD8
 43921                           
 43922 ;; *************** function _USBIncrement1msInternalTimers *****************
 43923 ;; Defined at:
 43924 ;;		line 3027 in file "usb_device.c"
 43925 ;; Parameters:    Size  Location     Type
 43926 ;;		None
 43927 ;; Auto vars:     Size  Location     Type
 43928 ;;		None
 43929 ;; Return value:  Size  Location     Type
 43930 ;;                  1    wreg      void 
 43931 ;; Registers used:
 43932 ;;		wreg, status,2, status,0
 43933 ;; Tracked objects:
 43934 ;;		On entry : 0/0
 43935 ;;		On exit  : 0/0
 43936 ;;		Unchanged: 0/0
 43937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43942 ;;Total ram usage:        0 bytes
 43943 ;; Hardware stack levels used:    1
 43944 ;; This function calls:
 43945 ;;		Nothing
 43946 ;; This function is called by:
 43947 ;;		_USBDeviceTasks
 43948 ;; This function uses a non-reentrant model
 43949 ;;
 43950                           
 43951                           	psect	text219
 43952  015B40                     __ptext219:
 43953                           	opt stack 0
 43954  015B40                     _USBIncrement1msInternalTimers:
 43955                           	opt stack 16
 43956                           
 43957                           ;usb_device.c: 3035: USB1msTickCount++;
 43958                           
 43959                           ; BSR set to: 15
 43960                           ;incstack = 0
 43961  015B40  0E01               	movlw	1
 43962  015B42  0101               	movlb	1	; () banked
 43963  015B44  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 43964  015B46  0E00               	movlw	0
 43965  015B48  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 43966  015B4A  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 43967  015B4C  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 43968                           
 43969                           ; BSR set to: 1
 43970                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 43971  015B4E  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 43972  015B50  A4D8               	btfss	status,2,c
 43973  015B52  0012               	return	
 43974                           
 43975                           ; BSR set to: 1
 43976                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 43977  015B54  2BFA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 43978                           
 43979                           ; BSR set to: 1
 43980                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 43981  015B56  51FA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 43982  015B58  A4D8               	btfss	status,2,c
 43983  015B5A  0012               	return	
 43984                           
 43985                           ; BSR set to: 1
 43986                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 43987  015B5C  69FA               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43988                           
 43989                           ; BSR set to: 1
 43990  015B5E  0012               	return	
 43991  015B60                     __end_of_USBIncrement1msInternalTimers:
 43992                           	opt stack 0
 43993                           tosu	equ	0xFFF
 43994                           tosh	equ	0xFFE
 43995                           tosl	equ	0xFFD
 43996                           pclatu	equ	0xFFB
 43997                           pclath	equ	0xFFA
 43998                           tblptru	equ	0xFF8
 43999                           tblptrh	equ	0xFF7
 44000                           tblptrl	equ	0xFF6
 44001                           tablat	equ	0xFF5
 44002                           prodh	equ	0xFF4
 44003                           prodl	equ	0xFF3
 44004                           intcon	equ	0xFF2
 44005                           intcon2	equ	0xFF1
 44006                           intcon3	equ	0xFF0
 44007                           indf0	equ	0xFEF
 44008                           postinc0	equ	0xFEE
 44009                           fsr0h	equ	0xFEA
 44010                           fsr0l	equ	0xFE9
 44011                           wreg	equ	0xFE8
 44012                           indf1	equ	0xFE7
 44013                           postinc1	equ	0xFE6
 44014                           postdec1	equ	0xFE5
 44015                           plusw1	equ	0xFE3
 44016                           fsr1h	equ	0xFE2
 44017                           fsr1l	equ	0xFE1
 44018                           indf2	equ	0xFDF
 44019                           postinc2	equ	0xFDE
 44020                           postdec2	equ	0xFDD
 44021                           plusw2	equ	0xFDB
 44022                           fsr2h	equ	0xFDA
 44023                           fsr2l	equ	0xFD9
 44024                           status	equ	0xFD8
 44025                           
 44026 ;; *************** function _USBCtrlEPService *****************
 44027 ;; Defined at:
 44028 ;;		line 2374 in file "usb_device.c"
 44029 ;; Parameters:    Size  Location     Type
 44030 ;;		None
 44031 ;; Auto vars:     Size  Location     Type
 44032 ;;		None
 44033 ;; Return value:  Size  Location     Type
 44034 ;;                  1    wreg      void 
 44035 ;; Registers used:
 44036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44037 ;; Tracked objects:
 44038 ;;		On entry : 0/0
 44039 ;;		On exit  : 0/0
 44040 ;;		Unchanged: 0/0
 44041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44046 ;;Total ram usage:        1 bytes
 44047 ;; Hardware stack levels used:    1
 44048 ;; Hardware stack levels required when called:    7
 44049 ;; This function calls:
 44050 ;;		_USBCtrlTrfInHandler
 44051 ;;		_USBCtrlTrfOutHandler
 44052 ;;		_USBCtrlTrfSetupHandler
 44053 ;;		i2_memcpy
 44054 ;; This function is called by:
 44055 ;;		_USBDeviceTasks
 44056 ;; This function uses a non-reentrant model
 44057 ;;
 44058                           
 44059                           	psect	text220
 44060  013490                     __ptext220:
 44061                           	opt stack 0
 44062  013490                     _USBCtrlEPService:
 44063                           	opt stack 9
 44064                           
 44065                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 44066                           
 44067                           ; BSR set to: 1
 44068                           ;incstack = 0
 44069  013490  0E2D               	movlw	45
 44070  013492  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 44071                           
 44072                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 44073  013494  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44074  013498  0EFD               	movlw	253
 44075  01349A  164B               	andwf	??_USBCtrlEPService,f,c
 44076  01349C  A4D8               	btfss	status,2,c
 44077  01349E  D03B               	goto	i2l323
 44078                           
 44079                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 44080  0134A0  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44081  0134A4  90D8               	bcf	status,0,c
 44082  0134A6  324B               	rrcf	??_USBCtrlEPService,f,c
 44083  0134A8  0E3F               	movlw	63
 44084  0134AA  164B               	andwf	??_USBCtrlEPService,f,c
 44085  0134AC  504B               	movf	??_USBCtrlEPService,w,c
 44086  0134AE  0D04               	mullw	4
 44087  0134B0  0E00               	movlw	0
 44088  0134B2  24F3               	addwf	prodl,w,c
 44089  0134B4  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 44090  0134B6  0E0D               	movlw	13
 44091  0134B8  20F4               	addwfc	prodh,w,c
 44092  0134BA  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 44093                           
 44094                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 44095  0134BC  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 44096  0134C0  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 44097                           
 44098                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 44099  0134C4  0E04               	movlw	4
 44100  0134C6  1818               	xorwf	_pBDTEntryEP0OutNext,w,c
 44101  0134C8  6E18               	movwf	_pBDTEntryEP0OutNext,c
 44102  0134CA  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44103  0134CC  6E19               	movwf	_pBDTEntryEP0OutNext+1,c
 44104                           
 44105                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 44106  0134CE  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44107  0134D2  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44108  0134D6  30DF               	rrcf	indf2,w,c
 44109  0134D8  32E8               	rrcf	wreg,f,c
 44110  0134DA  0B0F               	andlw	15
 44111  0134DC  0A0D               	xorlw	13
 44112  0134DE  A4D8               	btfss	status,2,c
 44113  0134E0  D017               	goto	i2l324
 44114                           
 44115                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 44116  0134E2  0E30               	movlw	48
 44117  0134E4  6E2E               	movwf	i2memcpy@d1,c
 44118  0134E6  0E0D               	movlw	13
 44119  0134E8  6E2F               	movwf	i2memcpy@d1+1,c
 44120  0134EA  EE20 F002          	lfsr	2,2
 44121  0134EE  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 44122  0134F0  26D9               	addwf	fsr2l,f,c
 44123  0134F2  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 44124  0134F4  22DA               	addwfc	fsr2h,f,c
 44125  0134F6  CFDE F030          	movff	postinc2,i2memcpy@s1
 44126  0134FA  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 44127  0134FE  0E00               	movlw	0
 44128  013500  6E33               	movwf	i2memcpy@n+1,c
 44129  013502  0E08               	movlw	8
 44130  013504  6E32               	movwf	i2memcpy@n,c
 44131  013506  EC45  F0A4         	call	i2_memcpy	;wreg free
 44132                           
 44133                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 44134  01350A  EC02  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 44135                           
 44136                           ;usb_device.c: 2411: }
 44137  01350E  0012               	return	
 44138  013510                     i2l324:
 44139                           
 44140                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 44141  013510  EC73  F0A4         	call	_USBCtrlTrfOutHandler	;wreg free
 44142                           
 44143                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 44144  013514  0012               	return	
 44145  013516                     i2l323:
 44146                           
 44147                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 44148  013516  502C               	movf	_USTATcopy,w,c	;volatile
 44149  013518  0BFD               	andlw	253
 44150  01351A  0A04               	xorlw	4
 44151  01351C  A4D8               	btfss	status,2,c
 44152  01351E  0012               	return	
 44153                           
 44154                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 44155  013520  ECAD  F097         	call	_USBCtrlTrfInHandler	;wreg free
 44156  013524  0012               	return	
 44157  013526                     __end_of_USBCtrlEPService:
 44158                           	opt stack 0
 44159                           tosu	equ	0xFFF
 44160                           tosh	equ	0xFFE
 44161                           tosl	equ	0xFFD
 44162                           pclatu	equ	0xFFB
 44163                           pclath	equ	0xFFA
 44164                           tblptru	equ	0xFF8
 44165                           tblptrh	equ	0xFF7
 44166                           tblptrl	equ	0xFF6
 44167                           tablat	equ	0xFF5
 44168                           prodh	equ	0xFF4
 44169                           prodl	equ	0xFF3
 44170                           intcon	equ	0xFF2
 44171                           intcon2	equ	0xFF1
 44172                           intcon3	equ	0xFF0
 44173                           indf0	equ	0xFEF
 44174                           postinc0	equ	0xFEE
 44175                           fsr0h	equ	0xFEA
 44176                           fsr0l	equ	0xFE9
 44177                           wreg	equ	0xFE8
 44178                           indf1	equ	0xFE7
 44179                           postinc1	equ	0xFE6
 44180                           postdec1	equ	0xFE5
 44181                           plusw1	equ	0xFE3
 44182                           fsr1h	equ	0xFE2
 44183                           fsr1l	equ	0xFE1
 44184                           indf2	equ	0xFDF
 44185                           postinc2	equ	0xFDE
 44186                           postdec2	equ	0xFDD
 44187                           plusw2	equ	0xFDB
 44188                           fsr2h	equ	0xFDA
 44189                           fsr2l	equ	0xFD9
 44190                           status	equ	0xFD8
 44191                           
 44192 ;; *************** function i2_memcpy *****************
 44193 ;; Defined at:
 44194 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 44195 ;; Parameters:    Size  Location     Type
 44196 ;;  d1              2    0[COMRAM] PTR void 
 44197 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44198 ;;		 -> SetupPkt(8), 
 44199 ;;  s1              2    2[COMRAM] PTR const void 
 44200 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44201 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44202 ;;		 -> SetupPkt(8), 
 44203 ;;  n               2    4[COMRAM] unsigned int 
 44204 ;; Auto vars:     Size  Location     Type
 44205 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 44206 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44207 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44208 ;;		 -> SetupPkt(8), 
 44209 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 44210 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44211 ;;		 -> SetupPkt(8), 
 44212 ;;  memcpy          1   10[COMRAM] unsigned char 
 44213 ;; Return value:  Size  Location     Type
 44214 ;;                  2    0[COMRAM] PTR void 
 44215 ;; Registers used:
 44216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44217 ;; Tracked objects:
 44218 ;;		On entry : 0/0
 44219 ;;		On exit  : 0/0
 44220 ;;		Unchanged: 0/0
 44221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44223 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44225 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44226 ;;Total ram usage:       11 bytes
 44227 ;; Hardware stack levels used:    1
 44228 ;; This function calls:
 44229 ;;		Nothing
 44230 ;; This function is called by:
 44231 ;;		_USBCtrlEPService
 44232 ;; This function uses a non-reentrant model
 44233 ;;
 44234                           
 44235                           	psect	text221
 44236  01488A                     __ptext221:
 44237                           	opt stack 0
 44238  01488A                     i2_memcpy:
 44239                           	opt stack 15
 44240                           
 44241                           ;incstack = 0
 44242  01488A  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 44243  01488E  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 44244  014892  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 44245  014896  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 44246  01489A  D01C               	goto	i2l3995
 44247  01489C                     i2l14417:
 44248  01489C  C036  FFF6         	movff	i2memcpy@s,tblptrl
 44249  0148A0  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 44250  0148A4  0E00               	movlw	low (__mediumconst shr (0+16))
 44251  0148A6  6EF8               	movwf	tblptru,c
 44252  0148A8  0E0E               	movlw	(high __ramtop+-1)
 44253  0148AA  64F7               	cpfsgt	tblptrh,c
 44254  0148AC  D003               	bra	i2u1221_47
 44255  0148AE  0008               	tblrd		*
 44256  0148B0  50F5               	movf	tablat,w,c
 44257  0148B2  D005               	bra	i2u1221_40
 44258  0148B4                     i2u1221_47:
 44259  0148B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 44260  0148B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 44261  0148BC  50EF               	movf	indf0,w,c
 44262  0148BE                     i2u1221_40:
 44263  0148BE  6E38               	movwf	i2memcpy@tmp,c
 44264  0148C0  4A36               	infsnz	i2memcpy@s,f,c
 44265  0148C2  2A37               	incf	i2memcpy@s+1,f,c
 44266  0148C4  C034  FFD9         	movff	i2memcpy@d,fsr2l
 44267  0148C8  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 44268  0148CC  C038  FFDF         	movff	i2memcpy@tmp,indf2
 44269  0148D0  4A34               	infsnz	i2memcpy@d,f,c
 44270  0148D2  2A35               	incf	i2memcpy@d+1,f,c
 44271  0148D4                     i2l3995:
 44272  0148D4  0632               	decf	i2memcpy@n,f,c
 44273  0148D6  A0D8               	btfss	status,0,c
 44274  0148D8  0633               	decf	i2memcpy@n+1,f,c
 44275  0148DA  2832               	incf	i2memcpy@n,w,c
 44276  0148DC  E1DF               	bnz	i2l14417
 44277  0148DE  2833               	incf	i2memcpy@n+1,w,c
 44278  0148E0  B4D8               	btfsc	status,2,c
 44279  0148E2  0012               	return	
 44280  0148E4  D7DB               	goto	i2l3996
 44281  0148E6                     __end_ofi2_memcpy:
 44282                           	opt stack 0
 44283                           tosu	equ	0xFFF
 44284                           tosh	equ	0xFFE
 44285                           tosl	equ	0xFFD
 44286                           pclatu	equ	0xFFB
 44287                           pclath	equ	0xFFA
 44288                           tblptru	equ	0xFF8
 44289                           tblptrh	equ	0xFF7
 44290                           tblptrl	equ	0xFF6
 44291                           tablat	equ	0xFF5
 44292                           prodh	equ	0xFF4
 44293                           prodl	equ	0xFF3
 44294                           intcon	equ	0xFF2
 44295                           intcon2	equ	0xFF1
 44296                           intcon3	equ	0xFF0
 44297                           indf0	equ	0xFEF
 44298                           postinc0	equ	0xFEE
 44299                           fsr0h	equ	0xFEA
 44300                           fsr0l	equ	0xFE9
 44301                           wreg	equ	0xFE8
 44302                           indf1	equ	0xFE7
 44303                           postinc1	equ	0xFE6
 44304                           postdec1	equ	0xFE5
 44305                           plusw1	equ	0xFE3
 44306                           fsr1h	equ	0xFE2
 44307                           fsr1l	equ	0xFE1
 44308                           indf2	equ	0xFDF
 44309                           postinc2	equ	0xFDE
 44310                           postdec2	equ	0xFDD
 44311                           plusw2	equ	0xFDB
 44312                           fsr2h	equ	0xFDA
 44313                           fsr2l	equ	0xFD9
 44314                           status	equ	0xFD8
 44315                           
 44316 ;; *************** function _USBCtrlTrfSetupHandler *****************
 44317 ;; Defined at:
 44318 ;;		line 2467 in file "usb_device.c"
 44319 ;; Parameters:    Size  Location     Type
 44320 ;;		None
 44321 ;; Auto vars:     Size  Location     Type
 44322 ;;		None
 44323 ;; Return value:  Size  Location     Type
 44324 ;;                  1    wreg      void 
 44325 ;; Registers used:
 44326 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44327 ;; Tracked objects:
 44328 ;;		On entry : 0/0
 44329 ;;		On exit  : 0/0
 44330 ;;		Unchanged: 0/0
 44331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44336 ;;Total ram usage:        0 bytes
 44337 ;; Hardware stack levels used:    1
 44338 ;; Hardware stack levels required when called:    6
 44339 ;; This function calls:
 44340 ;;		_USBCheckStdRequest
 44341 ;;		_USBCtrlEPServiceComplete
 44342 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44343 ;; This function is called by:
 44344 ;;		_USBCtrlEPService
 44345 ;; This function uses a non-reentrant model
 44346 ;;
 44347                           
 44348                           	psect	text222
 44349  013804                     __ptext222:
 44350                           	opt stack 0
 44351  013804                     _USBCtrlTrfSetupHandler:
 44352                           	opt stack 9
 44353                           
 44354                           ;usb_device.c: 2472: shortPacketStatus = 0;
 44355                           
 44356                           ;incstack = 0
 44357  013804  0E00               	movlw	0
 44358  013806  6E2A               	movwf	_shortPacketStatus,c	;volatile
 44359                           
 44360                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 44361  013808  0E00               	movlw	0
 44362  01380A  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 44363                           
 44364                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 44365  01380C  0E00               	movlw	0
 44366  01380E  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 44367                           
 44368                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 44369  013810  0E00               	movlw	0
 44370  013812  0101               	movlb	1	; () banked
 44371  013814  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 44372                           
 44373                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 44374  013816  0E00               	movlw	0
 44375  013818  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 44376                           
 44377                           ;usb_device.c: 2477: controlTransferState = 0;
 44378  01381A  0E00               	movlw	0
 44379  01381C  6E29               	movwf	_controlTransferState,c	;volatile
 44380                           
 44381                           ; BSR set to: 1
 44382                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 44383  01381E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44384  013822  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44385  013826  0E7F               	movlw	127
 44386  013828  16DF               	andwf	indf2,f,c
 44387                           
 44388                           ; BSR set to: 1
 44389                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 44390  01382A  0E04               	movlw	4
 44391  01382C  1810               	xorwf	_pBDTEntryIn,w,c
 44392  01382E  6E10               	movwf	_pBDTEntryIn,c
 44393  013830  5011               	movf	_pBDTEntryIn+1,w,c
 44394  013832  6E11               	movwf	_pBDTEntryIn+1,c
 44395                           
 44396                           ; BSR set to: 1
 44397                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 44398  013834  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44399  013838  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44400  01383C  0E7F               	movlw	127
 44401  01383E  16DF               	andwf	indf2,f,c
 44402                           
 44403                           ; BSR set to: 1
 44404                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 44405  013840  0E04               	movlw	4
 44406  013842  1810               	xorwf	_pBDTEntryIn,w,c
 44407  013844  6E10               	movwf	_pBDTEntryIn,c
 44408  013846  5011               	movf	_pBDTEntryIn+1,w,c
 44409  013848  6E11               	movwf	_pBDTEntryIn+1,c
 44410                           
 44411                           ; BSR set to: 1
 44412                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 44413  01384A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44414  01384E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44415  013852  0E7F               	movlw	127
 44416  013854  16DF               	andwf	indf2,f,c
 44417                           
 44418                           ; BSR set to: 1
 44419                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 44420  013856  0E00               	movlw	0
 44421  013858  6E0D               	movwf	_inPipes+3,c	;volatile
 44422                           
 44423                           ; BSR set to: 1
 44424                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 44425  01385A  0E00               	movlw	0
 44426  01385C  6E0F               	movwf	_inPipes+5,c	;volatile
 44427  01385E  0E00               	movlw	0
 44428  013860  6E0E               	movwf	_inPipes+4,c	;volatile
 44429                           
 44430                           ; BSR set to: 1
 44431                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 44432  013862  0E00               	movlw	0
 44433  013864  6E04               	movwf	_outPipes+3,c	;volatile
 44434                           
 44435                           ; BSR set to: 1
 44436                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 44437  013866  0E00               	movlw	0
 44438  013868  6E06               	movwf	_outPipes+5,c	;volatile
 44439  01386A  0E00               	movlw	0
 44440  01386C  6E05               	movwf	_outPipes+4,c	;volatile
 44441                           
 44442                           ; BSR set to: 1
 44443                           ;usb_device.c: 2502: USBCheckStdRequest();
 44444  01386E  EC20  F094         	call	_USBCheckStdRequest	;wreg free
 44445                           
 44446                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 44447  013872  0E00               	movlw	0
 44448  013874  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44449  013876  0E03               	movlw	3
 44450  013878  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44451  01387A  0E00               	movlw	0
 44452  01387C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44453  01387E  0E00               	movlw	0
 44454  013880  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44455  013882  0E00               	movlw	0
 44456  013884  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44457  013886  0E00               	movlw	0
 44458  013888  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44459  01388A  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44460                           
 44461                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 44462  01388E  EC1D  F090         	call	_USBCtrlEPServiceComplete	;wreg free
 44463  013892  0012               	return		;funcret
 44464  013894                     __end_of_USBCtrlTrfSetupHandler:
 44465                           	opt stack 0
 44466                           tosu	equ	0xFFF
 44467                           tosh	equ	0xFFE
 44468                           tosl	equ	0xFFD
 44469                           pclatu	equ	0xFFB
 44470                           pclath	equ	0xFFA
 44471                           tblptru	equ	0xFF8
 44472                           tblptrh	equ	0xFF7
 44473                           tblptrl	equ	0xFF6
 44474                           tablat	equ	0xFF5
 44475                           prodh	equ	0xFF4
 44476                           prodl	equ	0xFF3
 44477                           intcon	equ	0xFF2
 44478                           intcon2	equ	0xFF1
 44479                           intcon3	equ	0xFF0
 44480                           indf0	equ	0xFEF
 44481                           postinc0	equ	0xFEE
 44482                           fsr0h	equ	0xFEA
 44483                           fsr0l	equ	0xFE9
 44484                           wreg	equ	0xFE8
 44485                           indf1	equ	0xFE7
 44486                           postinc1	equ	0xFE6
 44487                           postdec1	equ	0xFE5
 44488                           plusw1	equ	0xFE3
 44489                           fsr1h	equ	0xFE2
 44490                           fsr1l	equ	0xFE1
 44491                           indf2	equ	0xFDF
 44492                           postinc2	equ	0xFDE
 44493                           postdec2	equ	0xFDD
 44494                           plusw2	equ	0xFDB
 44495                           fsr2h	equ	0xFDA
 44496                           fsr2l	equ	0xFD9
 44497                           status	equ	0xFD8
 44498                           
 44499 ;; *************** function _USBCtrlEPServiceComplete *****************
 44500 ;; Defined at:
 44501 ;;		line 1618 in file "usb_device.c"
 44502 ;; Parameters:    Size  Location     Type
 44503 ;;		None
 44504 ;; Auto vars:     Size  Location     Type
 44505 ;;		None
 44506 ;; Return value:  Size  Location     Type
 44507 ;;                  1    wreg      void 
 44508 ;; Registers used:
 44509 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44510 ;; Tracked objects:
 44511 ;;		On entry : 0/0
 44512 ;;		On exit  : 0/0
 44513 ;;		Unchanged: 0/0
 44514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44519 ;;Total ram usage:        0 bytes
 44520 ;; Hardware stack levels used:    1
 44521 ;; Hardware stack levels required when called:    2
 44522 ;; This function calls:
 44523 ;;		_USBCtrlEPAllowDataStage
 44524 ;;		_USBCtrlEPAllowStatusStage
 44525 ;; This function is called by:
 44526 ;;		_USBCtrlTrfSetupHandler
 44527 ;; This function uses a non-reentrant model
 44528 ;;
 44529                           
 44530                           	psect	text223
 44531  01203A                     __ptext223:
 44532                           	opt stack 0
 44533  01203A                     _USBCtrlEPServiceComplete:
 44534                           	opt stack 12
 44535                           
 44536                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 44537                           
 44538                           ;incstack = 0
 44539  01203A  9865               	bcf	3941,4,c	;volatile
 44540                           
 44541                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 44542  01203C  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 44543  01203E  D039               	goto	i2l233
 44544                           
 44545                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 44546  012040  AE04               	btfss	_outPipes+3,7,c	;volatile
 44547  012042  D00C               	goto	i2l234
 44548                           
 44549                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 44550  012044  0E02               	movlw	2
 44551  012046  6E29               	movwf	_controlTransferState,c	;volatile
 44552                           
 44553                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 44554  012048  0101               	movlb	1	; () banked
 44555  01204A  51FB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 44556  01204C  B4D8               	btfsc	status,2,c
 44557                           
 44558                           ; BSR set to: 1
 44559                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 44560  01204E  ECB1  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 44561                           
 44562                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 44563  012052  0E00               	movlw	0
 44564  012054  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 44565                           
 44566                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 44567  012056  0E00               	movlw	0
 44568  012058  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 44569                           
 44570                           ;usb_device.c: 1654: }
 44571  01205A  0012               	return	
 44572  01205C                     i2l234:
 44573                           
 44574                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 44575  01205C  EE20 F001          	lfsr	2,1
 44576  012060  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44577  012062  26D9               	addwf	fsr2l,f,c
 44578  012064  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44579  012066  22DA               	addwfc	fsr2h,f,c
 44580  012068  0E08               	movlw	8
 44581  01206A  6EDF               	movwf	indf2,c
 44582                           
 44583                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 44584  01206C  EE20 F002          	lfsr	2,2
 44585  012070  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44586  012072  26D9               	addwf	fsr2l,f,c
 44587  012074  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44588  012076  22DA               	addwfc	fsr2h,f,c
 44589  012078  0E30               	movlw	48
 44590  01207A  6EDE               	movwf	postinc2,c
 44591  01207C  0E0D               	movlw	13
 44592  01207E  6EDD               	movwf	postdec2,c
 44593                           
 44594                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 44595  012080  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44596  012084  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44597  012088  0E0C               	movlw	12
 44598  01208A  6EDF               	movwf	indf2,c
 44599                           
 44600                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 44601  01208C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44602  012090  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44603  012094  0E00               	movlw	0
 44604  012096  8EDB               	bsf	plusw2,7,c
 44605                           
 44606                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 44607  012098  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44608  01209C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44609  0120A0  0E04               	movlw	4
 44610  0120A2  6EDF               	movwf	indf2,c
 44611                           
 44612                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 44613  0120A4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44614  0120A8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44615  0120AC  0E00               	movlw	0
 44616  0120AE  8EDB               	bsf	plusw2,7,c
 44617                           
 44618                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 44619  0120B0  0012               	return	
 44620  0120B2                     i2l233:
 44621                           
 44622                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 44623  0120B2  010D               	movlb	13	; () banked
 44624  0120B4  AF30               	btfss	48,7,b	;volatile
 44625  0120B6  D010               	goto	i2l238
 44626                           
 44627                           ; BSR set to: 13
 44628                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 44629  0120B8  0E01               	movlw	1
 44630  0120BA  6E29               	movwf	_controlTransferState,c	;volatile
 44631                           
 44632                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 44633  0120BC  5020               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 44634  0120BE  B4D8               	btfsc	status,2,c
 44635                           
 44636                           ; BSR set to: 13
 44637                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 44638  0120C0  ECB1  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 44639                           
 44640                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 44641  0120C4  0E00               	movlw	0
 44642  0120C6  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 44643                           
 44644                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 44645  0120C8  0E00               	movlw	0
 44646  0120CA  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 44647                           
 44648                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 44649  0120CC  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 44650  0120CE  A4D8               	btfss	status,2,c
 44651  0120D0  0012               	return	
 44652                           
 44653                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 44654  0120D2  ECED  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 44655                           
 44656                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 44657  0120D6  0012               	return	
 44658  0120D8                     i2l238:
 44659                           
 44660                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 44661  0120D8  0E02               	movlw	2
 44662  0120DA  6E29               	movwf	_controlTransferState,c	;volatile
 44663                           
 44664                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 44665  0120DC  EE20 F001          	lfsr	2,1
 44666  0120E0  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44667  0120E2  26D9               	addwf	fsr2l,f,c
 44668  0120E4  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44669  0120E6  22DA               	addwfc	fsr2h,f,c
 44670  0120E8  0E08               	movlw	8
 44671  0120EA  6EDF               	movwf	indf2,c
 44672                           
 44673                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 44674  0120EC  EE20 F002          	lfsr	2,2
 44675  0120F0  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44676  0120F2  26D9               	addwf	fsr2l,f,c
 44677  0120F4  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44678  0120F6  22DA               	addwfc	fsr2h,f,c
 44679  0120F8  0E30               	movlw	48
 44680  0120FA  6EDE               	movwf	postinc2,c
 44681  0120FC  0E0D               	movlw	13
 44682  0120FE  6EDD               	movwf	postdec2,c
 44683                           
 44684                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 44685  012100  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44686  012104  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44687  012108  0E04               	movlw	4
 44688  01210A  6EDF               	movwf	indf2,c
 44689                           
 44690                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 44691  01210C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44692  012110  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44693  012114  0E00               	movlw	0
 44694  012116  8EDB               	bsf	plusw2,7,c
 44695                           
 44696                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 44697  012118  0E00               	movlw	0
 44698  01211A  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 44699                           
 44700                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 44701  01211C  0E00               	movlw	0
 44702  01211E  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 44703                           
 44704                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 44705  012120  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 44706  012122  A4D8               	btfss	status,2,c
 44707  012124  0012               	return	
 44708                           
 44709                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 44710  012126  ECED  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 44711  01212A  0012               	return	
 44712  01212C                     __end_of_USBCtrlEPServiceComplete:
 44713                           	opt stack 0
 44714                           tosu	equ	0xFFF
 44715                           tosh	equ	0xFFE
 44716                           tosl	equ	0xFFD
 44717                           pclatu	equ	0xFFB
 44718                           pclath	equ	0xFFA
 44719                           tblptru	equ	0xFF8
 44720                           tblptrh	equ	0xFF7
 44721                           tblptrl	equ	0xFF6
 44722                           tablat	equ	0xFF5
 44723                           prodh	equ	0xFF4
 44724                           prodl	equ	0xFF3
 44725                           intcon	equ	0xFF2
 44726                           intcon2	equ	0xFF1
 44727                           intcon3	equ	0xFF0
 44728                           indf0	equ	0xFEF
 44729                           postinc0	equ	0xFEE
 44730                           fsr0h	equ	0xFEA
 44731                           fsr0l	equ	0xFE9
 44732                           wreg	equ	0xFE8
 44733                           indf1	equ	0xFE7
 44734                           postinc1	equ	0xFE6
 44735                           postdec1	equ	0xFE5
 44736                           plusw1	equ	0xFE3
 44737                           fsr1h	equ	0xFE2
 44738                           fsr1l	equ	0xFE1
 44739                           indf2	equ	0xFDF
 44740                           postinc2	equ	0xFDE
 44741                           postdec2	equ	0xFDD
 44742                           plusw2	equ	0xFDB
 44743                           fsr2h	equ	0xFDA
 44744                           fsr2l	equ	0xFD9
 44745                           status	equ	0xFD8
 44746                           
 44747 ;; *************** function _USBCtrlEPAllowDataStage *****************
 44748 ;; Defined at:
 44749 ;;		line 1490 in file "usb_device.c"
 44750 ;; Parameters:    Size  Location     Type
 44751 ;;		None
 44752 ;; Auto vars:     Size  Location     Type
 44753 ;;		None
 44754 ;; Return value:  Size  Location     Type
 44755 ;;                  1    wreg      void 
 44756 ;; Registers used:
 44757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44758 ;; Tracked objects:
 44759 ;;		On entry : 0/0
 44760 ;;		On exit  : 0/0
 44761 ;;		Unchanged: 0/0
 44762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44767 ;;Total ram usage:        0 bytes
 44768 ;; Hardware stack levels used:    1
 44769 ;; Hardware stack levels required when called:    1
 44770 ;; This function calls:
 44771 ;;		_USBCtrlTrfTxService
 44772 ;; This function is called by:
 44773 ;;		_USBCtrlEPServiceComplete
 44774 ;; This function uses a non-reentrant model
 44775 ;;
 44776                           
 44777                           	psect	text224
 44778  013362                     __ptext224:
 44779                           	opt stack 0
 44780  013362                     _USBCtrlEPAllowDataStage:
 44781                           	opt stack 12
 44782                           
 44783                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 44784                           
 44785                           ;incstack = 0
 44786  013362  0E00               	movlw	0
 44787  013364  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 44788                           
 44789                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 44790  013366  0E00               	movlw	0
 44791  013368  0101               	movlb	1	; () banked
 44792  01336A  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 44793                           
 44794                           ; BSR set to: 1
 44795                           ;usb_device.c: 1495: if(controlTransferState == 2)
 44796  01336C  0E02               	movlw	2
 44797  01336E  1829               	xorwf	_controlTransferState,w,c	;volatile
 44798  013370  A4D8               	btfss	status,2,c
 44799  013372  D01F               	goto	i2l222
 44800                           
 44801                           ; BSR set to: 1
 44802                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 44803  013374  EE20 F001          	lfsr	2,1
 44804  013378  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44805  01337A  26D9               	addwf	fsr2l,f,c
 44806  01337C  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44807  01337E  22DA               	addwfc	fsr2h,f,c
 44808  013380  0E08               	movlw	8
 44809  013382  6EDF               	movwf	indf2,c
 44810                           
 44811                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 44812  013384  EE20 F002          	lfsr	2,2
 44813  013388  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44814  01338A  26D9               	addwf	fsr2l,f,c
 44815  01338C  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44816  01338E  22DA               	addwfc	fsr2h,f,c
 44817  013390  0E38               	movlw	56
 44818  013392  6EDE               	movwf	postinc2,c
 44819  013394  0E0D               	movlw	13
 44820  013396  6EDD               	movwf	postdec2,c
 44821                           
 44822                           ; BSR set to: 1
 44823                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 44824  013398  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44825  01339C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44826  0133A0  0E48               	movlw	72
 44827  0133A2  6EDF               	movwf	indf2,c
 44828                           
 44829                           ; BSR set to: 1
 44830                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 44831  0133A4  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44832  0133A8  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44833  0133AC  0E00               	movlw	0
 44834  0133AE  8EDB               	bsf	plusw2,7,c
 44835                           
 44836                           ;usb_device.c: 1502: }
 44837  0133B0  0012               	return	
 44838  0133B2                     i2l222:
 44839                           
 44840                           ; BSR set to: 1
 44841                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 44842                           
 44843                           ; BSR set to: 1
 44844  0133B2  500E               	movf	_inPipes+4,w,c	;volatile
 44845  0133B4  010D               	movlb	13	; () banked
 44846  0133B6  5D36               	subwf	54,w,b	;volatile
 44847  0133B8  500F               	movf	_inPipes+5,w,c	;volatile
 44848  0133BA  5937               	subwfb	55,w,b	;volatile
 44849  0133BC  B0D8               	btfsc	status,0,c
 44850  0133BE  D004               	goto	i2l224
 44851                           
 44852                           ; BSR set to: 13
 44853                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 44854  0133C0  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 44855  0133C4  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 44856  0133C8                     i2l224:
 44857                           
 44858                           ; BSR set to: 13
 44859                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 44860                           
 44861                           ; BSR set to: 13
 44862  0133C8  ECF4  F094         	call	_USBCtrlTrfTxService	;wreg free
 44863                           
 44864                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 44865  0133CC  EE20 F002          	lfsr	2,2
 44866  0133D0  5010               	movf	_pBDTEntryIn,w,c
 44867  0133D2  26D9               	addwf	fsr2l,f,c
 44868  0133D4  5011               	movf	_pBDTEntryIn+1,w,c
 44869  0133D6  22DA               	addwfc	fsr2h,f,c
 44870  0133D8  0E38               	movlw	56
 44871  0133DA  6EDE               	movwf	postinc2,c
 44872  0133DC  0E0D               	movlw	13
 44873  0133DE  6EDD               	movwf	postdec2,c
 44874                           
 44875                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 44876  0133E0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44877  0133E4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44878  0133E8  0E48               	movlw	72
 44879  0133EA  6EDF               	movwf	indf2,c
 44880                           
 44881                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 44882  0133EC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44883  0133F0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44884  0133F4  0E00               	movlw	0
 44885  0133F6  8EDB               	bsf	plusw2,7,c
 44886  0133F8  0012               	return	
 44887  0133FA                     __end_of_USBCtrlEPAllowDataStage:
 44888                           	opt stack 0
 44889                           tosu	equ	0xFFF
 44890                           tosh	equ	0xFFE
 44891                           tosl	equ	0xFFD
 44892                           pclatu	equ	0xFFB
 44893                           pclath	equ	0xFFA
 44894                           tblptru	equ	0xFF8
 44895                           tblptrh	equ	0xFF7
 44896                           tblptrl	equ	0xFF6
 44897                           tablat	equ	0xFF5
 44898                           prodh	equ	0xFF4
 44899                           prodl	equ	0xFF3
 44900                           intcon	equ	0xFF2
 44901                           intcon2	equ	0xFF1
 44902                           intcon3	equ	0xFF0
 44903                           indf0	equ	0xFEF
 44904                           postinc0	equ	0xFEE
 44905                           fsr0h	equ	0xFEA
 44906                           fsr0l	equ	0xFE9
 44907                           wreg	equ	0xFE8
 44908                           indf1	equ	0xFE7
 44909                           postinc1	equ	0xFE6
 44910                           postdec1	equ	0xFE5
 44911                           plusw1	equ	0xFE3
 44912                           fsr1h	equ	0xFE2
 44913                           fsr1l	equ	0xFE1
 44914                           indf2	equ	0xFDF
 44915                           postinc2	equ	0xFDE
 44916                           postdec2	equ	0xFDD
 44917                           plusw2	equ	0xFDB
 44918                           fsr2h	equ	0xFDA
 44919                           fsr2l	equ	0xFD9
 44920                           status	equ	0xFD8
 44921                           
 44922 ;; *************** function _USBCheckStdRequest *****************
 44923 ;; Defined at:
 44924 ;;		line 2688 in file "usb_device.c"
 44925 ;; Parameters:    Size  Location     Type
 44926 ;;		None
 44927 ;; Auto vars:     Size  Location     Type
 44928 ;;		None
 44929 ;; Return value:  Size  Location     Type
 44930 ;;                  1    wreg      void 
 44931 ;; Registers used:
 44932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44933 ;; Tracked objects:
 44934 ;;		On entry : 0/0
 44935 ;;		On exit  : 0/0
 44936 ;;		Unchanged: 0/0
 44937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44942 ;;Total ram usage:        0 bytes
 44943 ;; Hardware stack levels used:    1
 44944 ;; Hardware stack levels required when called:    5
 44945 ;; This function calls:
 44946 ;;		_USBStdFeatureReqHandler
 44947 ;;		_USBStdGetDscHandler
 44948 ;;		_USBStdGetStatusHandler
 44949 ;;		_USBStdSetCfgHandler
 44950 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44951 ;; This function is called by:
 44952 ;;		_USBCtrlTrfSetupHandler
 44953 ;; This function uses a non-reentrant model
 44954 ;;
 44955                           
 44956                           	psect	text225
 44957  012840                     __ptext225:
 44958                           	opt stack 0
 44959  012840                     _USBCheckStdRequest:
 44960                           	opt stack 9
 44961                           
 44962                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 44963                           
 44964                           ;incstack = 0
 44965  012840  010D               	movlb	13	; () banked
 44966  012842  3930               	swapf	48,w,b	;volatile
 44967  012844  32E8               	rrcf	wreg,f,c
 44968  012846  0B03               	andlw	3
 44969  012848  0900               	iorlw	0
 44970  01284A  A4D8               	btfss	status,2,c
 44971  01284C  0012               	return	
 44972  01284E  D042               	goto	i2l357
 44973  012850                     i2l358:
 44974                           
 44975                           ; BSR set to: 13
 44976                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 44977  012850  8E0D               	bsf	_inPipes+3,7,c	;volatile
 44978                           
 44979                           ; BSR set to: 13
 44980                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 44981  012852  0E08               	movlw	8
 44982  012854  6E2B               	movwf	_USBDeviceState,c	;volatile
 44983                           
 44984                           ;usb_device.c: 2698: break;
 44985  012856  0012               	return	
 44986  012858                     
 44987                           ; BSR set to: 13
 44988                           ;usb_device.c: 2700: USBStdGetDscHandler();
 44989                           
 44990                           ; BSR set to: 13
 44991  012858  EC9C  F087         	call	_USBStdGetDscHandler	;wreg free
 44992                           
 44993                           ;usb_device.c: 2701: break;
 44994  01285C  0012               	return	
 44995  01285E                     
 44996                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 44997  01285E  EC45  F093         	call	_USBStdSetCfgHandler	;wreg free
 44998                           
 44999                           ;usb_device.c: 2704: break;
 45000  012862  0012               	return	
 45001  012864                     
 45002                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 45003  012864  0E2D               	movlw	low _USBActiveConfiguration
 45004  012866  6E0A               	movwf	_inPipes,c	;volatile
 45005  012868  0E00               	movlw	high _USBActiveConfiguration
 45006  01286A  6E0B               	movwf	_inPipes+1,c	;volatile
 45007                           
 45008                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45009  01286C  800D               	bsf	_inPipes+3,0,c	;volatile
 45010                           
 45011                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 45012  01286E  0E01               	movlw	1
 45013  012870  6E0E               	movwf	_inPipes+4,c	;volatile
 45014                           
 45015                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 45016  012872  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45017                           
 45018                           ;usb_device.c: 2710: break;
 45019  012874  0012               	return	
 45020  012876                     
 45021                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 45022  012876  EC17  F099         	call	_USBStdGetStatusHandler	;wreg free
 45023                           
 45024                           ;usb_device.c: 2713: break;
 45025  01287A  0012               	return	
 45026  01287C                     
 45027                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 45028  01287C  EC07  F078         	call	_USBStdFeatureReqHandler	;wreg free
 45029                           
 45030                           ;usb_device.c: 2717: break;
 45031  012880  0012               	return	
 45032  012882                     
 45033                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 45034  012882  010D               	movlb	13	; () banked
 45035  012884  5134               	movf	52,w,b	;volatile
 45036  012886  0D01               	mullw	1
 45037  012888  0EFC               	movlw	low _USBAlternateInterface
 45038  01288A  24F3               	addwf	prodl,w,c
 45039  01288C  6E0A               	movwf	_inPipes,c	;volatile
 45040  01288E  0E01               	movlw	high _USBAlternateInterface
 45041  012890  20F4               	addwfc	prodh,w,c
 45042  012892  6E0B               	movwf	_inPipes+1,c	;volatile
 45043                           
 45044                           ; BSR set to: 13
 45045                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45046  012894  800D               	bsf	_inPipes+3,0,c	;volatile
 45047                           
 45048                           ; BSR set to: 13
 45049                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 45050  012896  0E01               	movlw	1
 45051  012898  6E0E               	movwf	_inPipes+4,c	;volatile
 45052                           
 45053                           ; BSR set to: 13
 45054                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 45055  01289A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45056                           
 45057                           ;usb_device.c: 2723: break;
 45058  01289C  0012               	return	
 45059  01289E                     i2l367:
 45060                           
 45061                           ; BSR set to: 13
 45062                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 45063  01289E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45064                           
 45065                           ; BSR set to: 13
 45066                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 45067  0128A0  5134               	movf	52,w,b	;volatile
 45068  0128A2  0D01               	mullw	1
 45069  0128A4  0EFC               	movlw	low _USBAlternateInterface
 45070  0128A6  24F3               	addwf	prodl,w,c
 45071  0128A8  6ED9               	movwf	fsr2l,c
 45072  0128AA  0E01               	movlw	high _USBAlternateInterface
 45073  0128AC  20F4               	addwfc	prodh,w,c
 45074  0128AE  6EDA               	movwf	fsr2h,c
 45075  0128B0  CD32 FFDF          	movff	3378,indf2	;volatile
 45076                           
 45077                           ;usb_device.c: 2727: break;
 45078  0128B4  0012               	return	
 45079  0128B6                     
 45080                           ; BSR set to: 13
 45081                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 45082                           
 45083                           ; BSR set to: 13
 45084  0128B6  0E00               	movlw	0
 45085  0128B8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45086  0128BA  0E02               	movlw	2
 45087  0128BC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45088  0128BE  0E00               	movlw	0
 45089  0128C0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45090  0128C2  0E00               	movlw	0
 45091  0128C4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45092  0128C6  0E00               	movlw	0
 45093  0128C8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45094  0128CA  0E00               	movlw	0
 45095  0128CC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45096  0128CE  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45097                           
 45098                           ;usb_device.c: 2734: }
 45099                           
 45100                           ;usb_device.c: 2733: break;
 45101                           
 45102                           ;usb_device.c: 2732: default:
 45103                           
 45104                           ;usb_device.c: 2731: case 12:
 45105                           
 45106                           ;usb_device.c: 2730: break;
 45107  0128D2  0012               	return	
 45108  0128D4                     i2l357:
 45109  0128D4  010D               	movlb	13	; () banked
 45110  0128D6  5131               	movf	49,w,b	;volatile
 45111                           
 45112                           ; Switch size 1, requested type "space"
 45113                           ; Number of cases is 11, Range of values is 0 to 12
 45114                           ; switch strategies available:
 45115                           ; Name         Instructions Cycles
 45116                           ; simple_byte           34    18 (average)
 45117                           ;	Chosen strategy is simple_byte
 45118  0128D8  0A00               	xorlw	0	; case 0
 45119  0128DA  B4D8               	btfsc	status,2,c
 45120  0128DC  D7CC               	goto	i2l363
 45121  0128DE  0A01               	xorlw	1	; case 1
 45122  0128E0  B4D8               	btfsc	status,2,c
 45123  0128E2  D7CC               	goto	i2l364
 45124  0128E4  0A02               	xorlw	2	; case 3
 45125  0128E6  B4D8               	btfsc	status,2,c
 45126  0128E8  D7C9               	goto	i2l364
 45127  0128EA  0A06               	xorlw	6	; case 5
 45128  0128EC  B4D8               	btfsc	status,2,c
 45129  0128EE  D7B0               	goto	i2l358
 45130  0128F0  0A03               	xorlw	3	; case 6
 45131  0128F2  B4D8               	btfsc	status,2,c
 45132  0128F4  D7B1               	goto	i2l360
 45133  0128F6  0A01               	xorlw	1	; case 7
 45134  0128F8  B4D8               	btfsc	status,2,c
 45135  0128FA  D7DD               	goto	i2l368
 45136  0128FC  0A0F               	xorlw	15	; case 8
 45137  0128FE  B4D8               	btfsc	status,2,c
 45138  012900  D7B1               	goto	i2l362
 45139  012902  0A01               	xorlw	1	; case 9
 45140  012904  B4D8               	btfsc	status,2,c
 45141  012906  D7AB               	goto	i2l361
 45142  012908  0A03               	xorlw	3	; case 10
 45143  01290A  B4D8               	btfsc	status,2,c
 45144  01290C  D7BA               	goto	i2l366
 45145  01290E  0A01               	xorlw	1	; case 11
 45146  012910  B4D8               	btfsc	status,2,c
 45147  012912  D7C5               	goto	i2l367
 45148  012914  0A07               	xorlw	7	; case 12
 45149  012916  0012               	return	
 45150  012918                     __end_of_USBCheckStdRequest:
 45151                           	opt stack 0
 45152                           tosu	equ	0xFFF
 45153                           tosh	equ	0xFFE
 45154                           tosl	equ	0xFFD
 45155                           pclatu	equ	0xFFB
 45156                           pclath	equ	0xFFA
 45157                           tblptru	equ	0xFF8
 45158                           tblptrh	equ	0xFF7
 45159                           tblptrl	equ	0xFF6
 45160                           tablat	equ	0xFF5
 45161                           prodh	equ	0xFF4
 45162                           prodl	equ	0xFF3
 45163                           intcon	equ	0xFF2
 45164                           intcon2	equ	0xFF1
 45165                           intcon3	equ	0xFF0
 45166                           indf0	equ	0xFEF
 45167                           postinc0	equ	0xFEE
 45168                           fsr0h	equ	0xFEA
 45169                           fsr0l	equ	0xFE9
 45170                           wreg	equ	0xFE8
 45171                           indf1	equ	0xFE7
 45172                           postinc1	equ	0xFE6
 45173                           postdec1	equ	0xFE5
 45174                           plusw1	equ	0xFE3
 45175                           fsr1h	equ	0xFE2
 45176                           fsr1l	equ	0xFE1
 45177                           indf2	equ	0xFDF
 45178                           postinc2	equ	0xFDE
 45179                           postdec2	equ	0xFDD
 45180                           plusw2	equ	0xFDB
 45181                           fsr2h	equ	0xFDA
 45182                           fsr2l	equ	0xFD9
 45183                           status	equ	0xFD8
 45184                           
 45185 ;; *************** function _USBStdSetCfgHandler *****************
 45186 ;; Defined at:
 45187 ;;		line 1970 in file "usb_device.c"
 45188 ;; Parameters:    Size  Location     Type
 45189 ;;		None
 45190 ;; Auto vars:     Size  Location     Type
 45191 ;;  i               1   23[COMRAM] unsigned char 
 45192 ;; Return value:  Size  Location     Type
 45193 ;;                  1    wreg      void 
 45194 ;; Registers used:
 45195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45196 ;; Tracked objects:
 45197 ;;		On entry : 0/0
 45198 ;;		On exit  : 0/0
 45199 ;;		Unchanged: 0/0
 45200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45205 ;;Total ram usage:        1 bytes
 45206 ;; Hardware stack levels used:    1
 45207 ;; Hardware stack levels required when called:    4
 45208 ;; This function calls:
 45209 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45210 ;;		i2_memset
 45211 ;; This function is called by:
 45212 ;;		_USBCheckStdRequest
 45213 ;; This function uses a non-reentrant model
 45214 ;;
 45215                           
 45216                           	psect	text226
 45217  01268A                     __ptext226:
 45218                           	opt stack 0
 45219  01268A                     _USBStdSetCfgHandler:
 45220                           	opt stack 9
 45221                           
 45222                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 45223                           
 45224                           ;incstack = 0
 45225  01268A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45226                           
 45227                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 45228  01268C  0E27               	movlw	39
 45229  01268E  6E2E               	movwf	i2memset@p1,c
 45230  012690  0E0F               	movlw	15
 45231  012692  6E2F               	movwf	i2memset@p1+1,c
 45232  012694  0E00               	movlw	0
 45233  012696  6E31               	movwf	i2memset@c+1,c
 45234  012698  0E00               	movlw	0
 45235  01269A  6E30               	movwf	i2memset@c,c
 45236  01269C  0E00               	movlw	0
 45237  01269E  6E33               	movwf	i2memset@n+1,c
 45238  0126A0  0E02               	movlw	2
 45239  0126A2  6E32               	movwf	i2memset@n,c
 45240  0126A4  ECEA  F0AB         	call	i2_memset	;wreg free
 45241                           
 45242                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 45243  0126A8  0E00               	movlw	0
 45244  0126AA  6E2E               	movwf	i2memset@p1,c
 45245  0126AC  0E0D               	movlw	13
 45246  0126AE  6E2F               	movwf	i2memset@p1+1,c
 45247  0126B0  0E00               	movlw	0
 45248  0126B2  6E31               	movwf	i2memset@c+1,c
 45249  0126B4  0E00               	movlw	0
 45250  0126B6  6E30               	movwf	i2memset@c,c
 45251  0126B8  0E00               	movlw	0
 45252  0126BA  6E33               	movwf	i2memset@n+1,c
 45253  0126BC  0E30               	movlw	48
 45254  0126BE  6E32               	movwf	i2memset@n,c
 45255  0126C0  ECEA  F0AB         	call	i2_memset	;wreg free
 45256                           
 45257                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 45258  0126C4  8C65               	bsf	3941,6,c	;volatile
 45259                           
 45260                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 45261  0126C6  0E00               	movlw	0
 45262  0126C8  6E45               	movwf	USBStdSetCfgHandler@i,c
 45263  0126CA                     i2l18581:
 45264  0126CA  0E02               	movlw	2
 45265  0126CC  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 45266  0126CE  D001               	goto	i2l274
 45267  0126D0  D016               	goto	i2u1734_40
 45268  0126D2                     i2l274:
 45269                           
 45270                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 45271  0126D2  5045               	movf	USBStdSetCfgHandler@i,w,c
 45272  0126D4  0D01               	mullw	1
 45273  0126D6  0EE4               	movlw	low _ep_data_in
 45274  0126D8  24F3               	addwf	prodl,w,c
 45275  0126DA  6ED9               	movwf	fsr2l,c
 45276  0126DC  0E01               	movlw	high _ep_data_in
 45277  0126DE  20F4               	addwfc	prodh,w,c
 45278  0126E0  6EDA               	movwf	fsr2h,c
 45279  0126E2  0E00               	movlw	0
 45280  0126E4  6EDF               	movwf	indf2,c
 45281                           
 45282                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 45283  0126E6  5045               	movf	USBStdSetCfgHandler@i,w,c
 45284  0126E8  0D01               	mullw	1
 45285  0126EA  0EE1               	movlw	low _ep_data_out
 45286  0126EC  24F3               	addwf	prodl,w,c
 45287  0126EE  6ED9               	movwf	fsr2l,c
 45288  0126F0  0E01               	movlw	high _ep_data_out
 45289  0126F2  20F4               	addwfc	prodh,w,c
 45290  0126F4  6EDA               	movwf	fsr2h,c
 45291  0126F6  0E00               	movlw	0
 45292  0126F8  6EDF               	movwf	indf2,c
 45293  0126FA  2A45               	incf	USBStdSetCfgHandler@i,f,c
 45294  0126FC  D7E6               	goto	i2l18581
 45295  0126FE                     i2u1734_40:
 45296                           
 45297                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 45298  0126FE  0EFC               	movlw	low _USBAlternateInterface
 45299  012700  6E2E               	movwf	i2memset@p1,c
 45300  012702  0E01               	movlw	high _USBAlternateInterface
 45301  012704  6E2F               	movwf	i2memset@p1+1,c
 45302  012706  0E00               	movlw	0
 45303  012708  6E31               	movwf	i2memset@c+1,c
 45304  01270A  0E00               	movlw	0
 45305  01270C  6E30               	movwf	i2memset@c,c
 45306  01270E  0E00               	movlw	0
 45307  012710  6E33               	movwf	i2memset@n+1,c
 45308  012712  0E02               	movlw	2
 45309  012714  6E32               	movwf	i2memset@n,c
 45310  012716  ECEA  F0AB         	call	i2_memset	;wreg free
 45311                           
 45312                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 45313  01271A  9C65               	bcf	3941,6,c	;volatile
 45314                           
 45315                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 45316  01271C  0E08               	movlw	8
 45317  01271E  6E10               	movwf	_pBDTEntryIn,c
 45318  012720  0E0D               	movlw	13
 45319  012722  6E11               	movwf	_pBDTEntryIn+1,c
 45320                           
 45321                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 45322  012724  0E00               	movlw	0
 45323  012726  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 45324  012728  0E0D               	movlw	13
 45325  01272A  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 45326                           
 45327                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 45328  01272C  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 45329  012730  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 45330                           
 45331                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 45332  012734  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 45333                           
 45334                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 45335  012738  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 45336  01273A  A4D8               	btfss	status,2,c
 45337  01273C  D003               	goto	i2l276
 45338                           
 45339                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 45340  01273E  0E10               	movlw	16
 45341  012740  6E2B               	movwf	_USBDeviceState,c	;volatile
 45342                           
 45343                           ;usb_device.c: 2015: }
 45344  012742  0012               	return	
 45345  012744                     i2l276:
 45346                           
 45347                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 45348  012744  0E00               	movlw	0
 45349  012746  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45350  012748  0E01               	movlw	1
 45351  01274A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45352  01274C  0E2D               	movlw	low _USBActiveConfiguration
 45353  01274E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45354  012750  0E00               	movlw	high _USBActiveConfiguration
 45355  012752  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45356  012754  0E00               	movlw	0
 45357  012756  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45358  012758  0E01               	movlw	1
 45359  01275A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45360  01275C  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45361                           
 45362                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 45363  012760  0E20               	movlw	32
 45364  012762  6E2B               	movwf	_USBDeviceState,c	;volatile
 45365  012764  0012               	return	
 45366  012766                     __end_of_USBStdSetCfgHandler:
 45367                           	opt stack 0
 45368                           tosu	equ	0xFFF
 45369                           tosh	equ	0xFFE
 45370                           tosl	equ	0xFFD
 45371                           pclatu	equ	0xFFB
 45372                           pclath	equ	0xFFA
 45373                           tblptru	equ	0xFF8
 45374                           tblptrh	equ	0xFF7
 45375                           tblptrl	equ	0xFF6
 45376                           tablat	equ	0xFF5
 45377                           prodh	equ	0xFF4
 45378                           prodl	equ	0xFF3
 45379                           intcon	equ	0xFF2
 45380                           intcon2	equ	0xFF1
 45381                           intcon3	equ	0xFF0
 45382                           indf0	equ	0xFEF
 45383                           postinc0	equ	0xFEE
 45384                           fsr0h	equ	0xFEA
 45385                           fsr0l	equ	0xFE9
 45386                           wreg	equ	0xFE8
 45387                           indf1	equ	0xFE7
 45388                           postinc1	equ	0xFE6
 45389                           postdec1	equ	0xFE5
 45390                           plusw1	equ	0xFE3
 45391                           fsr1h	equ	0xFE2
 45392                           fsr1l	equ	0xFE1
 45393                           indf2	equ	0xFDF
 45394                           postinc2	equ	0xFDE
 45395                           postdec2	equ	0xFDD
 45396                           plusw2	equ	0xFDB
 45397                           fsr2h	equ	0xFDA
 45398                           fsr2l	equ	0xFD9
 45399                           status	equ	0xFD8
 45400                           
 45401 ;; *************** function i2_memset *****************
 45402 ;; Defined at:
 45403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 45404 ;; Parameters:    Size  Location     Type
 45405 ;;  p1              2    0[COMRAM] PTR void 
 45406 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 45407 ;;  c               2    2[COMRAM] int 
 45408 ;;  n               2    4[COMRAM] unsigned int 
 45409 ;; Auto vars:     Size  Location     Type
 45410 ;;  memset          2    6[COMRAM] PTR unsigned char 
 45411 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 45412 ;; Return value:  Size  Location     Type
 45413 ;;                  2    0[COMRAM] PTR void 
 45414 ;; Registers used:
 45415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45416 ;; Tracked objects:
 45417 ;;		On entry : 0/0
 45418 ;;		On exit  : 0/0
 45419 ;;		Unchanged: 0/0
 45420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45424 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45425 ;;Total ram usage:        8 bytes
 45426 ;; Hardware stack levels used:    1
 45427 ;; This function calls:
 45428 ;;		Nothing
 45429 ;; This function is called by:
 45430 ;;		_USBStdSetCfgHandler
 45431 ;;		i2_USBDeviceInit
 45432 ;; This function uses a non-reentrant model
 45433 ;;
 45434                           
 45435                           	psect	text227
 45436  0157D4                     __ptext227:
 45437                           	opt stack 0
 45438  0157D4                     i2_memset:
 45439                           	opt stack 15
 45440                           
 45441                           ;incstack = 0
 45442  0157D4  C02E  F034         	movff	i2memset@p1,i2memset@p
 45443  0157D8  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 45444  0157DC  D008               	goto	i2l4001
 45445  0157DE                     i2l12309:
 45446  0157DE  C034  FFD9         	movff	i2memset@p,fsr2l
 45447  0157E2  C035  FFDA         	movff	i2memset@p+1,fsr2h
 45448  0157E6  C030  FFDF         	movff	i2memset@c,indf2
 45449  0157EA  4A34               	infsnz	i2memset@p,f,c
 45450  0157EC  2A35               	incf	i2memset@p+1,f,c
 45451  0157EE                     i2l4001:
 45452  0157EE  0632               	decf	i2memset@n,f,c
 45453  0157F0  A0D8               	btfss	status,0,c
 45454  0157F2  0633               	decf	i2memset@n+1,f,c
 45455  0157F4  2832               	incf	i2memset@n,w,c
 45456  0157F6  E1F3               	bnz	i2l12309
 45457  0157F8  2833               	incf	i2memset@n+1,w,c
 45458  0157FA  B4D8               	btfsc	status,2,c
 45459  0157FC  0012               	return	
 45460  0157FE  D7EF               	goto	i2l4002
 45461  015800                     __end_ofi2_memset:
 45462                           	opt stack 0
 45463                           tosu	equ	0xFFF
 45464                           tosh	equ	0xFFE
 45465                           tosl	equ	0xFFD
 45466                           pclatu	equ	0xFFB
 45467                           pclath	equ	0xFFA
 45468                           tblptru	equ	0xFF8
 45469                           tblptrh	equ	0xFF7
 45470                           tblptrl	equ	0xFF6
 45471                           tablat	equ	0xFF5
 45472                           prodh	equ	0xFF4
 45473                           prodl	equ	0xFF3
 45474                           intcon	equ	0xFF2
 45475                           intcon2	equ	0xFF1
 45476                           intcon3	equ	0xFF0
 45477                           indf0	equ	0xFEF
 45478                           postinc0	equ	0xFEE
 45479                           fsr0h	equ	0xFEA
 45480                           fsr0l	equ	0xFE9
 45481                           wreg	equ	0xFE8
 45482                           indf1	equ	0xFE7
 45483                           postinc1	equ	0xFE6
 45484                           postdec1	equ	0xFE5
 45485                           plusw1	equ	0xFE3
 45486                           fsr1h	equ	0xFE2
 45487                           fsr1l	equ	0xFE1
 45488                           indf2	equ	0xFDF
 45489                           postinc2	equ	0xFDE
 45490                           postdec2	equ	0xFDD
 45491                           plusw2	equ	0xFDB
 45492                           fsr2h	equ	0xFDA
 45493                           fsr2l	equ	0xFD9
 45494                           status	equ	0xFD8
 45495                           
 45496 ;; *************** function _USBStdGetStatusHandler *****************
 45497 ;; Defined at:
 45498 ;;		line 2131 in file "usb_device.c"
 45499 ;; Parameters:    Size  Location     Type
 45500 ;;		None
 45501 ;; Auto vars:     Size  Location     Type
 45502 ;;  p               2    1[COMRAM] PTR struct __BDT
 45503 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 45504 ;; Return value:  Size  Location     Type
 45505 ;;                  1    wreg      void 
 45506 ;; Registers used:
 45507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45508 ;; Tracked objects:
 45509 ;;		On entry : 0/0
 45510 ;;		On exit  : 0/0
 45511 ;;		Unchanged: 0/0
 45512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45516 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45517 ;;Total ram usage:        3 bytes
 45518 ;; Hardware stack levels used:    1
 45519 ;; This function calls:
 45520 ;;		Nothing
 45521 ;; This function is called by:
 45522 ;;		_USBCheckStdRequest
 45523 ;; This function uses a non-reentrant model
 45524 ;;
 45525                           
 45526                           	psect	text228
 45527  01322E                     __ptext228:
 45528                           	opt stack 0
 45529  01322E                     _USBStdGetStatusHandler:
 45530                           	opt stack 13
 45531                           
 45532                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 45533                           
 45534                           ;incstack = 0
 45535  01322E  0E00               	movlw	0
 45536  013230  010D               	movlb	13	; () banked
 45537  013232  6F38               	movwf	56,b	;volatile
 45538                           
 45539                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 45540  013234  0E00               	movlw	0
 45541  013236  6F39               	movwf	57,b	;volatile
 45542                           
 45543                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 45544  013238  D033               	goto	i2l295
 45545  01323A                     i2l296:
 45546                           
 45547                           ; BSR set to: 13
 45548                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 45549  01323A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45550                           
 45551                           ; BSR set to: 13
 45552                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 45553                           
 45554                           ; BSR set to: 13
 45555                           
 45556                           ; BSR set to: 13
 45557                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 45558                           
 45559                           ;usb_device.c: 2144: if(0 == 1)
 45560  01323C  0428               	decf	_RemoteWakeup,w,c	;volatile
 45561  01323E  A4D8               	btfss	status,2,c
 45562  013240  D03A               	goto	i2l299
 45563                           
 45564                           ; BSR set to: 13
 45565                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 45566  013242  8338               	bsf	56,1,b	;volatile
 45567                           
 45568                           ; BSR set to: 13
 45569                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 45570  013244  D038               	goto	i2l299
 45571  013246                     i2l300:
 45572                           
 45573                           ; BSR set to: 13
 45574                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 45575  013246  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45576                           
 45577                           ;usb_device.c: 2156: break;
 45578  013248  D036               	goto	i2l299
 45579  01324A                     i2l301:
 45580                           
 45581                           ; BSR set to: 13
 45582                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 45583  01324A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45584                           
 45585                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 45586  01324C  BF34               	btfsc	52,7,b	;volatile
 45587  01324E  D00A               	goto	i2l302
 45588                           
 45589                           ; BSR set to: 13
 45590                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 45591  013250  5134               	movf	52,w,b	;volatile
 45592  013252  0B0F               	andlw	15
 45593  013254  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 45594  013256  502E               	movf	??_USBStdGetStatusHandler,w,c
 45595  013258  0D02               	mullw	2
 45596  01325A  0ED3               	movlw	low _pBDTEntryOut
 45597  01325C  24F3               	addwf	prodl,w,c
 45598  01325E  6ED9               	movwf	fsr2l,c
 45599  013260  0E01               	movlw	high _pBDTEntryOut
 45600  013262  D009               	goto	L57
 45601  013264                     i2l302:
 45602                           
 45603                           ; BSR set to: 13
 45604                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 45605                           
 45606                           ; BSR set to: 13
 45607  013264  5134               	movf	52,w,b	;volatile
 45608  013266  0B0F               	andlw	15
 45609  013268  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 45610  01326A  502E               	movf	??_USBStdGetStatusHandler,w,c
 45611  01326C  0D02               	mullw	2
 45612  01326E  0E10               	movlw	low _pBDTEntryIn
 45613  013270  24F3               	addwf	prodl,w,c
 45614  013272  6ED9               	movwf	fsr2l,c
 45615  013274  0E00               	movlw	high _pBDTEntryIn
 45616  013276                     L57:
 45617  013276  20F4               	addwfc	prodh,w,c
 45618  013278  6EDA               	movwf	fsr2h,c
 45619  01327A  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 45620  01327E  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 45621                           
 45622                           ; BSR set to: 13
 45623                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 45624                           
 45625                           ; BSR set to: 13
 45626  013282  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 45627  013286  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 45628  01328A  AEDF               	btfss	indf2,7,c
 45629  01328C  D014               	goto	i2l299
 45630                           
 45631                           ; BSR set to: 13
 45632  01328E  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 45633  013292  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 45634  013296  A4DF               	btfss	indf2,2,c
 45635  013298  D00E               	goto	i2l299
 45636                           
 45637                           ; BSR set to: 13
 45638                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 45639  01329A  0E01               	movlw	1
 45640  01329C  6F38               	movwf	56,b	;volatile
 45641                           
 45642                           ; BSR set to: 13
 45643                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 45644                           
 45645                           ; BSR set to: 13
 45646                           ;usb_device.c: 2176: break;
 45647  01329E  D00B               	goto	i2l299
 45648  0132A0                     i2l295:
 45649                           
 45650                           ; BSR set to: 13
 45651                           
 45652                           ; BSR set to: 13
 45653  0132A0  5130               	movf	48,w,b	;volatile
 45654  0132A2  0B1F               	andlw	31
 45655                           
 45656                           ; Switch size 1, requested type "space"
 45657                           ; Number of cases is 3, Range of values is 0 to 2
 45658                           ; switch strategies available:
 45659                           ; Name         Instructions Cycles
 45660                           ; simple_byte           10     6 (average)
 45661                           ;	Chosen strategy is simple_byte
 45662  0132A4  0A00               	xorlw	0	; case 0
 45663  0132A6  B4D8               	btfsc	status,2,c
 45664  0132A8  D7C8               	goto	i2l296
 45665  0132AA  0A01               	xorlw	1	; case 1
 45666  0132AC  B4D8               	btfsc	status,2,c
 45667  0132AE  D7CB               	goto	i2l300
 45668  0132B0  0A03               	xorlw	3	; case 2
 45669  0132B2  B4D8               	btfsc	status,2,c
 45670  0132B4  D7CA               	goto	i2l301
 45671  0132B6                     i2l299:
 45672                           
 45673                           ; BSR set to: 13
 45674                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 45675  0132B6  AE0D               	btfss	_inPipes+3,7,c	;volatile
 45676  0132B8  0012               	return	
 45677                           
 45678                           ; BSR set to: 13
 45679                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 45680  0132BA  0E38               	movlw	56
 45681  0132BC  6E0A               	movwf	_inPipes,c	;volatile
 45682  0132BE  0E0D               	movlw	13
 45683  0132C0  6E0B               	movwf	_inPipes+1,c	;volatile
 45684                           
 45685                           ; BSR set to: 13
 45686                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45687  0132C2  800D               	bsf	_inPipes+3,0,c	;volatile
 45688                           
 45689                           ; BSR set to: 13
 45690                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 45691  0132C4  0E02               	movlw	2
 45692  0132C6  6E0E               	movwf	_inPipes+4,c	;volatile
 45693  0132C8  0012               	return	
 45694  0132CA                     __end_of_USBStdGetStatusHandler:
 45695                           	opt stack 0
 45696                           tosu	equ	0xFFF
 45697                           tosh	equ	0xFFE
 45698                           tosl	equ	0xFFD
 45699                           pclatu	equ	0xFFB
 45700                           pclath	equ	0xFFA
 45701                           tblptru	equ	0xFF8
 45702                           tblptrh	equ	0xFF7
 45703                           tblptrl	equ	0xFF6
 45704                           tablat	equ	0xFF5
 45705                           prodh	equ	0xFF4
 45706                           prodl	equ	0xFF3
 45707                           intcon	equ	0xFF2
 45708                           intcon2	equ	0xFF1
 45709                           intcon3	equ	0xFF0
 45710                           indf0	equ	0xFEF
 45711                           postinc0	equ	0xFEE
 45712                           fsr0h	equ	0xFEA
 45713                           fsr0l	equ	0xFE9
 45714                           wreg	equ	0xFE8
 45715                           indf1	equ	0xFE7
 45716                           postinc1	equ	0xFE6
 45717                           postdec1	equ	0xFE5
 45718                           plusw1	equ	0xFE3
 45719                           fsr1h	equ	0xFE2
 45720                           fsr1l	equ	0xFE1
 45721                           indf2	equ	0xFDF
 45722                           postinc2	equ	0xFDE
 45723                           postdec2	equ	0xFDD
 45724                           plusw2	equ	0xFDB
 45725                           fsr2h	equ	0xFDA
 45726                           fsr2l	equ	0xFD9
 45727                           status	equ	0xFD8
 45728                           
 45729 ;; *************** function _USBStdGetDscHandler *****************
 45730 ;; Defined at:
 45731 ;;		line 2045 in file "usb_device.c"
 45732 ;; Parameters:    Size  Location     Type
 45733 ;;		None
 45734 ;; Auto vars:     Size  Location     Type
 45735 ;;		None
 45736 ;; Return value:  Size  Location     Type
 45737 ;;                  1    wreg      void 
 45738 ;; Registers used:
 45739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 45740 ;; Tracked objects:
 45741 ;;		On entry : 0/0
 45742 ;;		On exit  : 0/0
 45743 ;;		Unchanged: 0/0
 45744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45749 ;;Total ram usage:        2 bytes
 45750 ;; Hardware stack levels used:    1
 45751 ;; This function calls:
 45752 ;;		Nothing
 45753 ;; This function is called by:
 45754 ;;		_USBCheckStdRequest
 45755 ;; This function uses a non-reentrant model
 45756 ;;
 45757                           
 45758                           	psect	text229
 45759  010F38                     __ptext229:
 45760                           	opt stack 0
 45761  010F38                     _USBStdGetDscHandler:
 45762                           	opt stack 13
 45763                           
 45764                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 45765                           
 45766                           ; BSR set to: 13
 45767                           ;incstack = 0
 45768  010F38  0E80               	movlw	128
 45769  010F3A  010D               	movlb	13	; () banked
 45770  010F3C  1930               	xorwf	48,w,b	;volatile
 45771  010F3E  A4D8               	btfss	status,2,c
 45772  010F40  0012               	return	
 45773                           
 45774                           ; BSR set to: 13
 45775                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 45776  010F42  0EC0               	movlw	192
 45777  010F44  6E0D               	movwf	_inPipes+3,c	;volatile
 45778                           
 45779                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 45780  010F46  D082               	goto	i2l282
 45781  010F48                     
 45782                           ; BSR set to: 13
 45783                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 45784                           
 45785                           ; BSR set to: 13
 45786  010F48  0E18               	movlw	low _device_dsc
 45787  010F4A  6E0A               	movwf	_inPipes,c	;volatile
 45788  010F4C  0EC4               	movlw	high _device_dsc
 45789  010F4E  6E0B               	movwf	_inPipes+1,c	;volatile
 45790                           
 45791                           ; BSR set to: 13
 45792                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 45793  010F50  0E00               	movlw	0
 45794  010F52  6E0F               	movwf	_inPipes+5,c	;volatile
 45795  010F54  0E12               	movlw	18
 45796  010F56  6E0E               	movwf	_inPipes+4,c	;volatile
 45797                           
 45798                           ;usb_device.c: 2060: break;
 45799  010F58  0012               	return	
 45800  010F5A                     
 45801                           ; BSR set to: 13
 45802                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 45803                           
 45804                           ; BSR set to: 13
 45805  010F5A  5132               	movf	50,w,b	;volatile
 45806  010F5C  A4D8               	btfss	status,2,c
 45807  010F5E  D042               	goto	i2l286
 45808                           
 45809                           ; BSR set to: 13
 45810                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 45811  010F60  5132               	movf	50,w,b	;volatile
 45812  010F62  0D02               	mullw	2
 45813  010F64  0E19               	movlw	low _USB_CD_Ptr
 45814  010F66  24F3               	addwf	prodl,w,c
 45815  010F68  6EF6               	movwf	tblptrl,c
 45816  010F6A  0EC3               	movlw	high _USB_CD_Ptr
 45817  010F6C  20F4               	addwfc	prodh,w,c
 45818  010F6E  6EF7               	movwf	tblptrh,c
 45819  010F70                     	if	1	;There are 3 active tblptr bytes
 45820  010F70  6AF8               	clrf	tblptru,c
 45821  010F72  0E00               	movlw	low (__mediumconst shr (0+16))
 45822  010F74  22F8               	addwfc	tblptru,f,c
 45823  010F76                     	endif
 45824  010F76  0009               	tblrd		*+
 45825  010F78  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 45826  010F7C  000A               	tblrd		*-
 45827  010F7E  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 45828                           
 45829                           ; BSR set to: 13
 45830                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 45831  010F82  0E02               	movlw	2
 45832  010F84  240A               	addwf	_inPipes,w,c	;volatile
 45833  010F86  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 45834  010F88  0E00               	movlw	0
 45835  010F8A  200B               	addwfc	_inPipes+1,w,c	;volatile
 45836  010F8C  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 45837  010F8E  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 45838  010F92  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 45839  010F96  0E00               	movlw	low (__mediumconst shr (0+16))
 45840  010F98  6EF8               	movwf	tblptru,c
 45841  010F9A  0E0E               	movlw	(high __ramtop+-1)
 45842  010F9C  64F7               	cpfsgt	tblptrh,c
 45843  010F9E  D003               	bra	i2u978_47
 45844  010FA0  0008               	tblrd		*
 45845  010FA2  50F5               	movf	tablat,w,c
 45846  010FA4  D005               	bra	i2u978_40
 45847  010FA6                     i2u978_47:
 45848  010FA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 45849  010FAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 45850  010FAE  50EF               	movf	indf0,w,c
 45851  010FB0                     i2u978_40:
 45852  010FB0  6E0E               	movwf	_inPipes+4,c	;volatile
 45853                           
 45854                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 45855  010FB2  0E03               	movlw	3
 45856  010FB4  240A               	addwf	_inPipes,w,c	;volatile
 45857  010FB6  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 45858  010FB8  0E00               	movlw	0
 45859  010FBA  200B               	addwfc	_inPipes+1,w,c	;volatile
 45860  010FBC  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 45861  010FBE  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 45862  010FC2  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 45863  010FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 45864  010FC8  6EF8               	movwf	tblptru,c
 45865  010FCA  0E0E               	movlw	(high __ramtop+-1)
 45866  010FCC  64F7               	cpfsgt	tblptrh,c
 45867  010FCE  D003               	bra	i2u979_47
 45868  010FD0  0008               	tblrd		*
 45869  010FD2  50F5               	movf	tablat,w,c
 45870  010FD4  D005               	bra	i2u979_40
 45871  010FD6                     i2u979_47:
 45872  010FD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 45873  010FDA  CFF7 FFEA          	movff	tblptrh,fsr0h
 45874  010FDE  50EF               	movf	indf0,w,c
 45875  010FE0                     i2u979_40:
 45876  010FE0  6E0F               	movwf	_inPipes+5,c	;volatile
 45877                           
 45878                           ;usb_device.c: 2078: }
 45879  010FE2  0012               	return	
 45880  010FE4                     i2l286:
 45881                           
 45882                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 45883  010FE4  0E00               	movlw	0
 45884  010FE6  6E0D               	movwf	_inPipes+3,c	;volatile
 45885                           
 45886                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 45887  010FE8  0012               	return	
 45888  010FEA                     
 45889                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 45890  010FEA  0E04               	movlw	4
 45891  010FEC  010D               	movlb	13	; () banked
 45892  010FEE  6132               	cpfslt	50,b	;volatile
 45893  010FF0  D027               	goto	i2l289
 45894                           
 45895                           ; BSR set to: 13
 45896                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 45897  010FF2  5132               	movf	50,w,b	;volatile
 45898  010FF4  0D02               	mullw	2
 45899  010FF6  0E07               	movlw	low _USB_SD_Ptr
 45900  010FF8  24F3               	addwf	prodl,w,c
 45901  010FFA  6EF6               	movwf	tblptrl,c
 45902  010FFC  0EC3               	movlw	high _USB_SD_Ptr
 45903  010FFE  20F4               	addwfc	prodh,w,c
 45904  011000  6EF7               	movwf	tblptrh,c
 45905  011002                     	if	1	;There are 3 active tblptr bytes
 45906  011002  6AF8               	clrf	tblptru,c
 45907  011004  0E00               	movlw	low (__mediumconst shr (0+16))
 45908  011006  22F8               	addwfc	tblptru,f,c
 45909  011008                     	endif
 45910  011008  0009               	tblrd		*+
 45911  01100A  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 45912  01100E  000A               	tblrd		*-
 45913  011010  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 45914                           
 45915                           ; BSR set to: 13
 45916                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 45917  011014  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 45918  011018  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 45919  01101C  0E00               	movlw	low (__mediumconst shr (0+16))
 45920  01101E  6EF8               	movwf	tblptru,c
 45921  011020  0E0E               	movlw	(high __ramtop+-1)
 45922  011022  64F7               	cpfsgt	tblptrh,c
 45923  011024  D003               	bra	i2u981_47
 45924  011026  0008               	tblrd		*
 45925  011028  50F5               	movf	tablat,w,c
 45926  01102A  D005               	bra	i2u981_40
 45927  01102C                     i2u981_47:
 45928  01102C  CFF6 FFE9          	movff	tblptrl,fsr0l
 45929  011030  CFF7 FFEA          	movff	tblptrh,fsr0h
 45930  011034  50EF               	movf	indf0,w,c
 45931  011036                     i2u981_40:
 45932  011036  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 45933  011038  502E               	movf	??_USBStdGetDscHandler,w,c
 45934  01103A  6E0E               	movwf	_inPipes+4,c	;volatile
 45935  01103C  6A0F               	clrf	_inPipes+5,c	;volatile
 45936                           
 45937                           ;usb_device.c: 2094: }
 45938  01103E  0012               	return	
 45939  011040                     i2l289:
 45940                           
 45941                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 45942  011040  0E00               	movlw	0
 45943  011042  6E0D               	movwf	_inPipes+3,c	;volatile
 45944                           
 45945                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 45946  011044  0012               	return	
 45947  011046                     
 45948                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 45949  011046  0E00               	movlw	0
 45950  011048  6E0D               	movwf	_inPipes+3,c	;volatile
 45951                           
 45952                           ;usb_device.c: 2112: }
 45953                           
 45954                           ;usb_device.c: 2111: break;
 45955  01104A  0012               	return	
 45956  01104C                     i2l282:
 45957  01104C  010D               	movlb	13	; () banked
 45958  01104E  5133               	movf	51,w,b	;volatile
 45959                           
 45960                           ; Switch size 1, requested type "space"
 45961                           ; Number of cases is 3, Range of values is 1 to 3
 45962                           ; switch strategies available:
 45963                           ; Name         Instructions Cycles
 45964                           ; simple_byte           10     6 (average)
 45965                           ;	Chosen strategy is simple_byte
 45966  011050  0A01               	xorlw	1	; case 1
 45967  011052  B4D8               	btfsc	status,2,c
 45968  011054  D779               	goto	i2l283
 45969  011056  0A03               	xorlw	3	; case 2
 45970  011058  B4D8               	btfsc	status,2,c
 45971  01105A  D77F               	goto	i2l285
 45972  01105C  0A01               	xorlw	1	; case 3
 45973  01105E  B4D8               	btfsc	status,2,c
 45974  011060  D7C4               	goto	i2l288
 45975  011062  D7F1               	goto	i2l291
 45976  011064                     __end_of_USBStdGetDscHandler:
 45977                           	opt stack 0
 45978                           tosu	equ	0xFFF
 45979                           tosh	equ	0xFFE
 45980                           tosl	equ	0xFFD
 45981                           pclatu	equ	0xFFB
 45982                           pclath	equ	0xFFA
 45983                           tblptru	equ	0xFF8
 45984                           tblptrh	equ	0xFF7
 45985                           tblptrl	equ	0xFF6
 45986                           tablat	equ	0xFF5
 45987                           prodh	equ	0xFF4
 45988                           prodl	equ	0xFF3
 45989                           intcon	equ	0xFF2
 45990                           intcon2	equ	0xFF1
 45991                           intcon3	equ	0xFF0
 45992                           indf0	equ	0xFEF
 45993                           postinc0	equ	0xFEE
 45994                           fsr0h	equ	0xFEA
 45995                           fsr0l	equ	0xFE9
 45996                           wreg	equ	0xFE8
 45997                           indf1	equ	0xFE7
 45998                           postinc1	equ	0xFE6
 45999                           postdec1	equ	0xFE5
 46000                           plusw1	equ	0xFE3
 46001                           fsr1h	equ	0xFE2
 46002                           fsr1l	equ	0xFE1
 46003                           indf2	equ	0xFDF
 46004                           postinc2	equ	0xFDE
 46005                           postdec2	equ	0xFDD
 46006                           plusw2	equ	0xFDB
 46007                           fsr2h	equ	0xFDA
 46008                           fsr2l	equ	0xFD9
 46009                           status	equ	0xFD8
 46010                           
 46011 ;; *************** function _USBStdFeatureReqHandler *****************
 46012 ;; Defined at:
 46013 ;;		line 2756 in file "usb_device.c"
 46014 ;; Parameters:    Size  Location     Type
 46015 ;;		None
 46016 ;; Auto vars:     Size  Location     Type
 46017 ;;  p               2   27[COMRAM] PTR struct __BDT
 46018 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46019 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 46020 ;;		 -> UEP0(1), 
 46021 ;;  current_ep_d    1   26[COMRAM] struct .
 46022 ;; Return value:  Size  Location     Type
 46023 ;;                  1    wreg      void 
 46024 ;; Registers used:
 46025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46026 ;; Tracked objects:
 46027 ;;		On entry : 0/0
 46028 ;;		On exit  : 0/0
 46029 ;;		Unchanged: 0/0
 46030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46032 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46035 ;;Total ram usage:        6 bytes
 46036 ;; Hardware stack levels used:    1
 46037 ;; Hardware stack levels required when called:    4
 46038 ;; This function calls:
 46039 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46040 ;; This function is called by:
 46041 ;;		_USBCheckStdRequest
 46042 ;; This function uses a non-reentrant model
 46043 ;;
 46044                           
 46045                           	psect	text230
 46046  00F00E                     __ptext230:
 46047                           	opt stack 0
 46048  00F00E                     _USBStdFeatureReqHandler:
 46049                           	opt stack 9
 46050                           
 46051                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 46052                           
 46053                           ;incstack = 0
 46054  00F00E  010D               	movlb	13	; () banked
 46055  00F010  0532               	decf	50,w,b	;volatile
 46056  00F012  A4D8               	btfss	status,2,c
 46057  00F014  D00E               	goto	i2l375
 46058                           
 46059                           ; BSR set to: 13
 46060  00F016  5130               	movf	48,w,b	;volatile
 46061  00F018  0B1F               	andlw	31
 46062  00F01A  0900               	iorlw	0
 46063  00F01C  A4D8               	btfss	status,2,c
 46064  00F01E  D009               	goto	i2l375
 46065                           
 46066                           ; BSR set to: 13
 46067                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 46068  00F020  8E0D               	bsf	_inPipes+3,7,c	;volatile
 46069                           
 46070                           ; BSR set to: 13
 46071                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 46072  00F022  0E03               	movlw	3
 46073  00F024  1931               	xorwf	49,w,b	;volatile
 46074  00F026  A4D8               	btfss	status,2,c
 46075  00F028  D002               	goto	i2l374
 46076                           
 46077                           ; BSR set to: 13
 46078                           ;usb_device.c: 2806: RemoteWakeup = 1;
 46079  00F02A  0E01               	movlw	1
 46080  00F02C  D001               	goto	L58
 46081  00F02E                     i2l374:
 46082                           
 46083                           ; BSR set to: 13
 46084                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 46085                           
 46086                           ; BSR set to: 13
 46087  00F02E  0E00               	movlw	0
 46088  00F030                     L58:
 46089  00F030  6E28               	movwf	_RemoteWakeup,c	;volatile
 46090  00F032                     i2l375:
 46091                           
 46092                           ; BSR set to: 13
 46093                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 46094                           
 46095                           ; BSR set to: 13
 46096  00F032  5132               	movf	50,w,b	;volatile
 46097  00F034  A4D8               	btfss	status,2,c
 46098  00F036  0012               	return	
 46099                           
 46100                           ; BSR set to: 13
 46101  00F038  5130               	movf	48,w,b	;volatile
 46102  00F03A  0B1F               	andlw	31
 46103  00F03C  0A02               	xorlw	2
 46104  00F03E  A4D8               	btfss	status,2,c
 46105  00F040  0012               	return	
 46106                           
 46107                           ; BSR set to: 13
 46108  00F042  5134               	movf	52,w,b	;volatile
 46109  00F044  0B0F               	andlw	15
 46110  00F046  0900               	iorlw	0
 46111  00F048  B4D8               	btfsc	status,2,c
 46112  00F04A  0012               	return	
 46113                           
 46114                           ; BSR set to: 13
 46115  00F04C  5134               	movf	52,w,b	;volatile
 46116  00F04E  0B0F               	andlw	15
 46117  00F050  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46118  00F052  0E03               	movlw	3
 46119  00F054  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 46120  00F056  0012               	return	
 46121                           
 46122                           ; BSR set to: 13
 46123  00F058  0E20               	movlw	32
 46124  00F05A  182B               	xorwf	_USBDeviceState,w,c	;volatile
 46125  00F05C  A4D8               	btfss	status,2,c
 46126  00F05E  0012               	return	
 46127                           
 46128                           ; BSR set to: 13
 46129                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 46130  00F060  8E0D               	bsf	_inPipes+3,7,c	;volatile
 46131                           
 46132                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 46133  00F062  BF34               	btfsc	52,7,b	;volatile
 46134  00F064  D019               	goto	i2l377
 46135                           
 46136                           ; BSR set to: 13
 46137                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 46138  00F066  5134               	movf	52,w,b	;volatile
 46139  00F068  0B0F               	andlw	15
 46140  00F06A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46141  00F06C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46142  00F06E  0D02               	mullw	2
 46143  00F070  0ED3               	movlw	low _pBDTEntryOut
 46144  00F072  24F3               	addwf	prodl,w,c
 46145  00F074  6ED9               	movwf	fsr2l,c
 46146  00F076  0E01               	movlw	high _pBDTEntryOut
 46147  00F078  20F4               	addwfc	prodh,w,c
 46148  00F07A  6EDA               	movwf	fsr2h,c
 46149  00F07C  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 46150  00F080  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 46151                           
 46152                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 46153  00F084  5134               	movf	52,w,b	;volatile
 46154  00F086  0B0F               	andlw	15
 46155  00F088  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46156  00F08A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46157  00F08C  0D01               	mullw	1
 46158  00F08E  0EE1               	movlw	low _ep_data_out
 46159  00F090  24F3               	addwf	prodl,w,c
 46160  00F092  6ED9               	movwf	fsr2l,c
 46161  00F094  0E01               	movlw	high _ep_data_out
 46162  00F096  D018               	goto	L59
 46163  00F098                     i2l377:
 46164                           
 46165                           ; BSR set to: 13
 46166                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 46167                           
 46168                           ; BSR set to: 13
 46169  00F098  5134               	movf	52,w,b	;volatile
 46170  00F09A  0B0F               	andlw	15
 46171  00F09C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46172  00F09E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46173  00F0A0  0D02               	mullw	2
 46174  00F0A2  0E10               	movlw	low _pBDTEntryIn
 46175  00F0A4  24F3               	addwf	prodl,w,c
 46176  00F0A6  6ED9               	movwf	fsr2l,c
 46177  00F0A8  0E00               	movlw	high _pBDTEntryIn
 46178  00F0AA  20F4               	addwfc	prodh,w,c
 46179  00F0AC  6EDA               	movwf	fsr2h,c
 46180  00F0AE  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 46181  00F0B2  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 46182                           
 46183                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 46184  00F0B6  5134               	movf	52,w,b	;volatile
 46185  00F0B8  0B0F               	andlw	15
 46186  00F0BA  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46187  00F0BC  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46188  00F0BE  0D01               	mullw	1
 46189  00F0C0  0EE4               	movlw	low _ep_data_in
 46190  00F0C2  24F3               	addwf	prodl,w,c
 46191  00F0C4  6ED9               	movwf	fsr2l,c
 46192  00F0C6  0E01               	movlw	high _ep_data_in
 46193  00F0C8                     L59:
 46194  00F0C8  20F4               	addwfc	prodh,w,c
 46195  00F0CA  6EDA               	movwf	fsr2h,c
 46196  00F0CC  50DF               	movf	indf2,w,c
 46197  00F0CE  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 46198                           
 46199                           ; BSR set to: 13
 46200                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 46201                           
 46202                           ; BSR set to: 13
 46203  00F0D0  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 46204  00F0D2  D006               	goto	i2l379
 46205                           
 46206                           ; BSR set to: 13
 46207                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 46208  00F0D4  0EFB               	movlw	251
 46209  00F0D6  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 46210  00F0D8  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46211  00F0DA  0EFF               	movlw	255
 46212  00F0DC  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 46213  00F0DE  D004               	goto	L60
 46214  00F0E0                     i2l379:
 46215                           
 46216                           ; BSR set to: 13
 46217                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 46218                           
 46219                           ; BSR set to: 13
 46220  00F0E0  0E04               	movlw	4
 46221  00F0E2  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 46222  00F0E4  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46223  00F0E6  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 46224  00F0E8                     L60:
 46225  00F0E8  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 46226                           
 46227                           ; BSR set to: 13
 46228                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 46229                           
 46230                           ; BSR set to: 13
 46231  00F0EA  BF34               	btfsc	52,7,b	;volatile
 46232  00F0EC  D00A               	goto	i2l381
 46233                           
 46234                           ; BSR set to: 13
 46235                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 46236  00F0EE  5134               	movf	52,w,b	;volatile
 46237  00F0F0  0B0F               	andlw	15
 46238  00F0F2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46239  00F0F4  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46240  00F0F6  0D02               	mullw	2
 46241  00F0F8  0ED3               	movlw	low _pBDTEntryOut
 46242  00F0FA  24F3               	addwf	prodl,w,c
 46243  00F0FC  6ED9               	movwf	fsr2l,c
 46244  00F0FE  0E01               	movlw	high _pBDTEntryOut
 46245  00F100  D009               	goto	L61
 46246  00F102                     i2l381:
 46247                           
 46248                           ; BSR set to: 13
 46249                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 46250                           
 46251                           ; BSR set to: 13
 46252  00F102  5134               	movf	52,w,b	;volatile
 46253  00F104  0B0F               	andlw	15
 46254  00F106  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46255  00F108  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46256  00F10A  0D02               	mullw	2
 46257  00F10C  0E10               	movlw	low _pBDTEntryIn
 46258  00F10E  24F3               	addwf	prodl,w,c
 46259  00F110  6ED9               	movwf	fsr2l,c
 46260  00F112  0E00               	movlw	high _pBDTEntryIn
 46261  00F114                     L61:
 46262  00F114  20F4               	addwfc	prodh,w,c
 46263  00F116  6EDA               	movwf	fsr2h,c
 46264  00F118  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 46265  00F11C  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 46266                           
 46267                           ; BSR set to: 13
 46268                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 46269                           
 46270                           ; BSR set to: 13
 46271  00F120  0E03               	movlw	3
 46272  00F122  1931               	xorwf	49,w,b	;volatile
 46273  00F124  A4D8               	btfss	status,2,c
 46274  00F126  D02D               	goto	i2l383
 46275                           
 46276                           ; BSR set to: 13
 46277                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 46278  00F128  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46279  00F12C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46280  00F130  AEDF               	btfss	indf2,7,c
 46281  00F132  D01A               	goto	i2l386
 46282                           
 46283                           ; BSR set to: 13
 46284                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 46285  00F134  BF34               	btfsc	52,7,b	;volatile
 46286  00F136  D00A               	goto	i2l385
 46287                           
 46288                           ; BSR set to: 13
 46289                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 46290  00F138  5134               	movf	52,w,b	;volatile
 46291  00F13A  0B0F               	andlw	15
 46292  00F13C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46293  00F13E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46294  00F140  0D01               	mullw	1
 46295  00F142  0EE1               	movlw	low _ep_data_out
 46296  00F144  24F3               	addwf	prodl,w,c
 46297  00F146  6ED9               	movwf	fsr2l,c
 46298  00F148  0E01               	movlw	high _ep_data_out
 46299  00F14A  D00A               	goto	L62
 46300  00F14C                     i2l385:
 46301                           
 46302                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 46303                           
 46304                           ; BSR set to: 1
 46305  00F14C  010D               	movlb	13	; () banked
 46306  00F14E  5134               	movf	52,w,b	;volatile
 46307  00F150  0B0F               	andlw	15
 46308  00F152  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46309  00F154  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46310  00F156  0D01               	mullw	1
 46311  00F158  0EE4               	movlw	low _ep_data_in
 46312  00F15A  24F3               	addwf	prodl,w,c
 46313  00F15C  6ED9               	movwf	fsr2l,c
 46314  00F15E  0E01               	movlw	high _ep_data_in
 46315  00F160                     L62:
 46316  00F160  20F4               	addwfc	prodh,w,c
 46317  00F162  6EDA               	movwf	fsr2h,c
 46318  00F164  0101               	movlb	1	; () banked
 46319  00F166  82DF               	bsf	indf2,1,c
 46320  00F168                     i2l386:
 46321                           
 46322                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 46323                           
 46324                           ; BSR set to: 1
 46325                           
 46326                           ; BSR set to: 1
 46327  00F168  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46328  00F16C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46329  00F170  0E00               	movlw	0
 46330  00F172  84DB               	bsf	plusw2,2,c
 46331                           
 46332                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 46333  00F174  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46334  00F178  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46335  00F17C  0E00               	movlw	0
 46336  00F17E  8EDB               	bsf	plusw2,7,c
 46337                           
 46338                           ;usb_device.c: 2878: }
 46339  00F180  0012               	return	
 46340  00F182                     i2l383:
 46341                           
 46342                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 46343  00F182  0E04               	movlw	4
 46344  00F184  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 46345  00F186  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46346  00F188  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 46347  00F18A  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 46348                           
 46349                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 46350  00F18C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46351  00F190  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46352  00F194  AEDF               	btfss	indf2,7,c
 46353  00F196  D01B               	goto	i2l388
 46354                           
 46355                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 46356  00F198  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46357  00F19C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46358  00F1A0  0E7F               	movlw	127
 46359  00F1A2  16DF               	andwf	indf2,f,c
 46360                           
 46361                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 46362  00F1A4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46363  00F1A8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46364  00F1AC  0E00               	movlw	0
 46365  00F1AE  8CDB               	bsf	plusw2,6,c
 46366                           
 46367                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 46368  00F1B0  0E00               	movlw	0
 46369  00F1B2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46370  00F1B4  0E05               	movlw	5
 46371  00F1B6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46372  00F1B8  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 46373  00F1BC  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 46374  00F1C0  0E00               	movlw	0
 46375  00F1C2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46376  00F1C4  0E02               	movlw	2
 46377  00F1C6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46378  00F1C8  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46379                           
 46380                           ;usb_device.c: 2893: }
 46381  00F1CC  D006               	goto	i2l389
 46382  00F1CE                     i2l388:
 46383                           
 46384                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 46385  00F1CE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46386  00F1D2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46387  00F1D6  0E00               	movlw	0
 46388  00F1D8  8CDB               	bsf	plusw2,6,c
 46389  00F1DA                     i2l389:
 46390                           
 46391                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 46392  00F1DA  0E04               	movlw	4
 46393  00F1DC  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 46394  00F1DE  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46395  00F1E0  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 46396  00F1E2  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 46397                           
 46398                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 46399  00F1E4  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 46400  00F1E6  D006               	goto	i2u1752_40
 46401  00F1E8  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46402  00F1EC  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46403  00F1F0  AEDF               	btfss	indf2,7,c
 46404  00F1F2  D030               	goto	i2l390
 46405  00F1F4                     i2u1752_40:
 46406                           
 46407                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 46408  00F1F4  010D               	movlb	13	; () banked
 46409  00F1F6  BF34               	btfsc	52,7,b	;volatile
 46410  00F1F8  D00A               	goto	i2l393
 46411                           
 46412                           ; BSR set to: 13
 46413                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 46414  00F1FA  5134               	movf	52,w,b	;volatile
 46415  00F1FC  0B0F               	andlw	15
 46416  00F1FE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46417  00F200  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46418  00F202  0D01               	mullw	1
 46419  00F204  0EE1               	movlw	low _ep_data_out
 46420  00F206  24F3               	addwf	prodl,w,c
 46421  00F208  6ED9               	movwf	fsr2l,c
 46422  00F20A  0E01               	movlw	high _ep_data_out
 46423  00F20C  D00A               	goto	L63
 46424  00F20E                     i2l393:
 46425                           
 46426                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 46427                           
 46428                           ; BSR set to: 1
 46429  00F20E  010D               	movlb	13	; () banked
 46430  00F210  5134               	movf	52,w,b	;volatile
 46431  00F212  0B0F               	andlw	15
 46432  00F214  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46433  00F216  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46434  00F218  0D01               	mullw	1
 46435  00F21A  0EE4               	movlw	low _ep_data_in
 46436  00F21C  24F3               	addwf	prodl,w,c
 46437  00F21E  6ED9               	movwf	fsr2l,c
 46438  00F220  0E01               	movlw	high _ep_data_in
 46439  00F222                     L63:
 46440  00F222  20F4               	addwfc	prodh,w,c
 46441  00F224  6EDA               	movwf	fsr2h,c
 46442  00F226  0101               	movlb	1	; () banked
 46443  00F228  92DF               	bcf	indf2,1,c
 46444                           
 46445                           ; BSR set to: 1
 46446                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 46447                           
 46448                           ; BSR set to: 1
 46449  00F22A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46450  00F22E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46451  00F232  0E3B               	movlw	59
 46452  00F234  16DF               	andwf	indf2,f,c
 46453                           
 46454                           ; BSR set to: 1
 46455                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 46456  00F236  0E00               	movlw	0
 46457  00F238  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46458  00F23A  0E05               	movlw	5
 46459  00F23C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46460  00F23E  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 46461  00F242  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 46462  00F246  0E00               	movlw	0
 46463  00F248  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46464  00F24A  0E02               	movlw	2
 46465  00F24C  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46466  00F24E  ECD0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46467                           
 46468                           ;usb_device.c: 2923: }
 46469  00F252  D006               	goto	i2l395
 46470  00F254                     i2l390:
 46471                           
 46472                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 46473  00F254  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46474  00F258  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46475  00F25C  0E3B               	movlw	59
 46476  00F25E  16DF               	andwf	indf2,f,c
 46477  00F260                     i2l395:
 46478                           
 46479                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 46480  00F260  010D               	movlb	13	; () banked
 46481  00F262  5134               	movf	52,w,b	;volatile
 46482  00F264  0B0F               	andlw	15
 46483  00F266  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46484  00F268  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46485  00F26A  0D01               	mullw	1
 46486  00F26C  0E26               	movlw	38
 46487  00F26E  24F3               	addwf	prodl,w,c
 46488  00F270  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 46489  00F272  0E0F               	movlw	15
 46490  00F274  20F4               	addwfc	prodh,w,c
 46491  00F276  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 46492                           
 46493                           ; BSR set to: 13
 46494                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 46495  00F278  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 46496  00F27C  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 46497  00F280  0EFE               	movlw	254
 46498  00F282  16DF               	andwf	indf2,f,c
 46499                           
 46500                           ; BSR set to: 13
 46501  00F284  0012               	return	
 46502  00F286                     __end_of_USBStdFeatureReqHandler:
 46503                           	opt stack 0
 46504                           tosu	equ	0xFFF
 46505                           tosh	equ	0xFFE
 46506                           tosl	equ	0xFFD
 46507                           pclatu	equ	0xFFB
 46508                           pclath	equ	0xFFA
 46509                           tblptru	equ	0xFF8
 46510                           tblptrh	equ	0xFF7
 46511                           tblptrl	equ	0xFF6
 46512                           tablat	equ	0xFF5
 46513                           prodh	equ	0xFF4
 46514                           prodl	equ	0xFF3
 46515                           intcon	equ	0xFF2
 46516                           intcon2	equ	0xFF1
 46517                           intcon3	equ	0xFF0
 46518                           indf0	equ	0xFEF
 46519                           postinc0	equ	0xFEE
 46520                           fsr0h	equ	0xFEA
 46521                           fsr0l	equ	0xFE9
 46522                           wreg	equ	0xFE8
 46523                           indf1	equ	0xFE7
 46524                           postinc1	equ	0xFE6
 46525                           postdec1	equ	0xFE5
 46526                           plusw1	equ	0xFE3
 46527                           fsr1h	equ	0xFE2
 46528                           fsr1l	equ	0xFE1
 46529                           indf2	equ	0xFDF
 46530                           postinc2	equ	0xFDE
 46531                           postdec2	equ	0xFDD
 46532                           plusw2	equ	0xFDB
 46533                           fsr2h	equ	0xFDA
 46534                           fsr2l	equ	0xFD9
 46535                           status	equ	0xFD8
 46536                           
 46537 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 46538 ;; Defined at:
 46539 ;;		line 54 in file "usb_events.c"
 46540 ;; Parameters:    Size  Location     Type
 46541 ;;  event           2   15[COMRAM] enum E6960
 46542 ;;  pdata           2   17[COMRAM] PTR void 
 46543 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 46544 ;;		 -> BDT(48), 
 46545 ;;  size            2   19[COMRAM] unsigned int 
 46546 ;; Auto vars:     Size  Location     Type
 46547 ;;		None
 46548 ;; Return value:  Size  Location     Type
 46549 ;;                  1    wreg      unsigned char 
 46550 ;; Registers used:
 46551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46552 ;; Tracked objects:
 46553 ;;		On entry : 0/0
 46554 ;;		On exit  : 0/0
 46555 ;;		Unchanged: 0/0
 46556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46560 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46561 ;;Total ram usage:        8 bytes
 46562 ;; Hardware stack levels used:    1
 46563 ;; Hardware stack levels required when called:    3
 46564 ;; This function calls:
 46565 ;;		_APP_DeviceCustomHIDInitialize
 46566 ;;		_APP_DeviceMSDInitialize
 46567 ;;		_MSDTransferTerminated
 46568 ;;		_USBCheckHIDRequest
 46569 ;;		_USBCheckMSDRequest
 46570 ;;		i2_SYSTEM_Initialize
 46571 ;; This function is called by:
 46572 ;;		_USBDeviceTasks
 46573 ;;		_USBStdSetCfgHandler
 46574 ;;		_USBSuspend
 46575 ;;		_USBWakeFromSuspend
 46576 ;;		_USBCtrlTrfSetupHandler
 46577 ;;		_USBCheckStdRequest
 46578 ;;		_USBStdFeatureReqHandler
 46579 ;; This function uses a non-reentrant model
 46580 ;;
 46581                           
 46582                           	psect	text231
 46583  0139A0                     __ptext231:
 46584                           	opt stack 0
 46585  0139A0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 46586                           	opt stack 13
 46587                           
 46588                           ;usb_events.c: 56: switch((int)event)
 46589                           
 46590                           ;incstack = 0
 46591  0139A0  D019               	goto	i2l824
 46592  0139A2                     
 46593                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 46594  0139A2  0E01               	movlw	1
 46595  0139A4  EC5A  F0A6         	call	i2_SYSTEM_Initialize
 46596                           
 46597                           ;usb_events.c: 79: break;
 46598  0139A8  0012               	return	
 46599  0139AA                     
 46600                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 46601  0139AA  0E02               	movlw	2
 46602  0139AC  EC5A  F0A6         	call	i2_SYSTEM_Initialize
 46603                           
 46604                           ;usb_events.c: 90: break;
 46605  0139B0  0012               	return	
 46606  0139B2                     
 46607                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 46608  0139B2  ECA5  F0AA         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 46609                           
 46610                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 46611  0139B6  ECFA  F0AE         	call	_APP_DeviceMSDInitialize	;wreg free
 46612                           
 46613                           ;usb_events.c: 100: break;
 46614                           
 46615                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 46616                           
 46617                           ;usb_events.c: 97: break;
 46618  0139BA  0012               	return	
 46619  0139BC                     
 46620                           ;usb_events.c: 105: USBCheckHIDRequest();
 46621  0139BC  EC8C  F094         	call	_USBCheckHIDRequest	;wreg free
 46622                           
 46623                           ;usb_events.c: 108: USBCheckMSDRequest();
 46624  0139C0  EC4E  F097         	call	_USBCheckMSDRequest	;wreg free
 46625                           
 46626                           ;usb_events.c: 112: break;
 46627                           
 46628                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 46629                           
 46630                           ;usb_events.c: 109: break;
 46631  0139C4  0012               	return	
 46632  0139C6                     
 46633                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 46634  0139C6  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 46635  0139CA  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 46636  0139CE  EC05  F0A6         	call	_MSDTransferTerminated	;wreg free
 46637                           
 46638                           ;usb_events.c: 129: }
 46639                           
 46640                           ;usb_events.c: 128: break;
 46641                           
 46642                           ;usb_events.c: 127: default:
 46643                           
 46644                           ;usb_events.c: 125: break;
 46645  0139D2  0012               	return	
 46646  0139D4                     i2l824:
 46647  0139D4  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 46648  0139D8  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 46649                           
 46650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 46651                           ; Switch size 1, requested type "space"
 46652                           ; Number of cases is 2, Range of values is 0 to 127
 46653                           ; switch strategies available:
 46654                           ; Name         Instructions Cycles
 46655                           ; simple_byte            7     4 (average)
 46656                           ;	Chosen strategy is simple_byte
 46657  0139DC  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 46658  0139DE  0A00               	xorlw	0	; case 0
 46659  0139E0  B4D8               	btfsc	status,2,c
 46660  0139E2  D004               	goto	i2l23501
 46661  0139E4  0A7F               	xorlw	127	; case 127
 46662  0139E6  A4D8               	btfss	status,2,c
 46663  0139E8  0012               	return	
 46664  0139EA  D01A               	goto	i2l23503
 46665  0139EC                     i2l23501:
 46666                           
 46667                           ; Switch size 1, requested type "space"
 46668                           ; Number of cases is 8, Range of values is 1 to 117
 46669                           ; switch strategies available:
 46670                           ; Name         Instructions Cycles
 46671                           ; simple_byte           25    13 (average)
 46672                           ;	Chosen strategy is simple_byte
 46673  0139EC  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 46674  0139EE  0A01               	xorlw	1	; case 1
 46675  0139F0  B4D8               	btfsc	status,2,c
 46676  0139F2  D7DF               	goto	i2l830
 46677  0139F4  0A03               	xorlw	3	; case 2
 46678  0139F6  B4D8               	btfsc	status,2,c
 46679  0139F8  0012               	return	
 46680  0139FA  0A01               	xorlw	1	; case 3
 46681  0139FC  B4D8               	btfsc	status,2,c
 46682  0139FE  D7DE               	goto	i2l832
 46683  013A00  0A06               	xorlw	6	; case 5
 46684  013A02  B4D8               	btfsc	status,2,c
 46685  013A04  D7E0               	goto	i2l834
 46686  013A06  0A77               	xorlw	119	; case 114
 46687  013A08  B4D8               	btfsc	status,2,c
 46688  013A0A  0012               	return	
 46689  013A0C  0A01               	xorlw	1	; case 115
 46690  013A0E  B4D8               	btfsc	status,2,c
 46691  013A10  0012               	return	
 46692  013A12  0A07               	xorlw	7	; case 116
 46693  013A14  B4D8               	btfsc	status,2,c
 46694  013A16  D7C9               	goto	i2l829
 46695  013A18  0A01               	xorlw	1	; case 117
 46696  013A1A  A4D8               	btfss	status,2,c
 46697  013A1C  0012               	return	
 46698  013A1E  D7C1               	goto	i2l828
 46699  013A20                     i2l23503:
 46700                           
 46701                           ; Switch size 1, requested type "space"
 46702                           ; Number of cases is 1, Range of values is 255 to 255
 46703                           ; switch strategies available:
 46704                           ; Name         Instructions Cycles
 46705                           ; simple_byte            4     3 (average)
 46706                           ;	Chosen strategy is simple_byte
 46707  013A20  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 46708  013A22  0AFF               	xorlw	255	; case 255
 46709  013A24  0012               	return	
 46710  013A26                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 46711                           	opt stack 0
 46712                           tosu	equ	0xFFF
 46713                           tosh	equ	0xFFE
 46714                           tosl	equ	0xFFD
 46715                           pclatu	equ	0xFFB
 46716                           pclath	equ	0xFFA
 46717                           tblptru	equ	0xFF8
 46718                           tblptrh	equ	0xFF7
 46719                           tblptrl	equ	0xFF6
 46720                           tablat	equ	0xFF5
 46721                           prodh	equ	0xFF4
 46722                           prodl	equ	0xFF3
 46723                           intcon	equ	0xFF2
 46724                           intcon2	equ	0xFF1
 46725                           intcon3	equ	0xFF0
 46726                           indf0	equ	0xFEF
 46727                           postinc0	equ	0xFEE
 46728                           fsr0h	equ	0xFEA
 46729                           fsr0l	equ	0xFE9
 46730                           wreg	equ	0xFE8
 46731                           indf1	equ	0xFE7
 46732                           postinc1	equ	0xFE6
 46733                           postdec1	equ	0xFE5
 46734                           plusw1	equ	0xFE3
 46735                           fsr1h	equ	0xFE2
 46736                           fsr1l	equ	0xFE1
 46737                           indf2	equ	0xFDF
 46738                           postinc2	equ	0xFDE
 46739                           postdec2	equ	0xFDD
 46740                           plusw2	equ	0xFDB
 46741                           fsr2h	equ	0xFDA
 46742                           fsr2l	equ	0xFD9
 46743                           status	equ	0xFD8
 46744                           
 46745 ;; *************** function i2_SYSTEM_Initialize *****************
 46746 ;; Defined at:
 46747 ;;		line 78 in file "system.c"
 46748 ;; Parameters:    Size  Location     Type
 46749 ;;  state           1    wreg     enum E6751
 46750 ;; Auto vars:     Size  Location     Type
 46751 ;;  state           1    4[COMRAM] enum E6751
 46752 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 46753 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 46754 ;; Return value:  Size  Location     Type
 46755 ;;                  1    wreg      void 
 46756 ;; Registers used:
 46757 ;;		wreg, status,2, status,0
 46758 ;; Tracked objects:
 46759 ;;		On entry : 0/0
 46760 ;;		On exit  : 0/0
 46761 ;;		Unchanged: 0/0
 46762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46764 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46766 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46767 ;;Total ram usage:        5 bytes
 46768 ;; Hardware stack levels used:    1
 46769 ;; This function calls:
 46770 ;;		Nothing
 46771 ;; This function is called by:
 46772 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46773 ;; This function uses a non-reentrant model
 46774 ;;
 46775                           
 46776                           	psect	text232
 46777  014CB4                     __ptext232:
 46778                           	opt stack 0
 46779  014CB4                     i2_SYSTEM_Initialize:
 46780                           	opt stack 15
 46781                           
 46782                           ;incstack = 0
 46783                           ;i2SYSTEM_Initialize@state stored from wreg
 46784  014CB4  6E32               	movwf	i2SYSTEM_Initialize@state,c
 46785                           
 46786                           ;system.c: 80: switch(state)
 46787  014CB6  D01D               	goto	i2l949
 46788  014CB8                     
 46789                           ;system.c: 89: {;system.c: 90: unsigned int pll_startup_counter = 600;
 46790  014CB8  0E02               	movlw	2
 46791  014CBA  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 46792  014CBC  0E58               	movlw	88
 46793  014CBE  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 46794                           
 46795                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 46796  014CC0  8C9B               	bsf	3995,6,c	;volatile
 46797  014CC2                     i2l11871:
 46798  014CC2  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 46799  014CC4  A0D8               	btfss	status,0,c
 46800  014CC6  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 46801  014CC8  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 46802  014CCA  E1FB               	bnz	i2l11871
 46803  014CCC  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 46804  014CCE  B4D8               	btfsc	status,2,c
 46805  014CD0  0012               	return	
 46806  014CD2  D7F7               	goto	i2l952
 46807  014CD4                     
 46808                           ;system.c: 117: OSCCON = 0x70;
 46809  014CD4  0E70               	movlw	112
 46810  014CD6  6ED3               	movwf	4051,c	;volatile
 46811                           
 46812                           ;system.c: 123: {;system.c: 124: unsigned int pll_startup_counter = 800;
 46813  014CD8  0E03               	movlw	3
 46814  014CDA  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3287+1,c
 46815  014CDC  0E20               	movlw	32
 46816  014CDE  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3287,c
 46817  014CE0                     i2l11875:
 46818  014CE0  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3287,f,c
 46819  014CE2  A0D8               	btfss	status,0,c
 46820  014CE4  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3287+1,f,c
 46821  014CE6  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3287,w,c
 46822  014CE8  E1FB               	bnz	i2l11875
 46823  014CEA  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3287+1,w,c
 46824  014CEC  B4D8               	btfsc	status,2,c
 46825  014CEE  0012               	return	
 46826  014CF0  D7F7               	goto	i2l958
 46827  014CF2                     i2l949:
 46828  014CF2  5032               	movf	i2SYSTEM_Initialize@state,w,c
 46829                           
 46830                           ; Switch size 1, requested type "space"
 46831                           ; Number of cases is 3, Range of values is 0 to 2
 46832                           ; switch strategies available:
 46833                           ; Name         Instructions Cycles
 46834                           ; simple_byte           10     6 (average)
 46835                           ;	Chosen strategy is simple_byte
 46836  014CF4  0A00               	xorlw	0	; case 0
 46837  014CF6  B4D8               	btfsc	status,2,c
 46838  014CF8  D7DF               	goto	i2l950
 46839  014CFA  0A01               	xorlw	1	; case 1
 46840  014CFC  B4D8               	btfsc	status,2,c
 46841  014CFE  0012               	return	
 46842  014D00  0A03               	xorlw	3	; case 2
 46843  014D02  A4D8               	btfss	status,2,c
 46844  014D04  0012               	return	
 46845  014D06  D7E6               	goto	i2l956
 46846  014D08                     __end_ofi2_SYSTEM_Initialize:
 46847                           	opt stack 0
 46848                           tosu	equ	0xFFF
 46849                           tosh	equ	0xFFE
 46850                           tosl	equ	0xFFD
 46851                           pclatu	equ	0xFFB
 46852                           pclath	equ	0xFFA
 46853                           tblptru	equ	0xFF8
 46854                           tblptrh	equ	0xFF7
 46855                           tblptrl	equ	0xFF6
 46856                           tablat	equ	0xFF5
 46857                           prodh	equ	0xFF4
 46858                           prodl	equ	0xFF3
 46859                           intcon	equ	0xFF2
 46860                           intcon2	equ	0xFF1
 46861                           intcon3	equ	0xFF0
 46862                           indf0	equ	0xFEF
 46863                           postinc0	equ	0xFEE
 46864                           fsr0h	equ	0xFEA
 46865                           fsr0l	equ	0xFE9
 46866                           wreg	equ	0xFE8
 46867                           indf1	equ	0xFE7
 46868                           postinc1	equ	0xFE6
 46869                           postdec1	equ	0xFE5
 46870                           plusw1	equ	0xFE3
 46871                           fsr1h	equ	0xFE2
 46872                           fsr1l	equ	0xFE1
 46873                           indf2	equ	0xFDF
 46874                           postinc2	equ	0xFDE
 46875                           postdec2	equ	0xFDD
 46876                           plusw2	equ	0xFDB
 46877                           fsr2h	equ	0xFDA
 46878                           fsr2l	equ	0xFD9
 46879                           status	equ	0xFD8
 46880                           
 46881 ;; *************** function _USBCheckMSDRequest *****************
 46882 ;; Defined at:
 46883 ;;		line 218 in file "usb_device_msd.c"
 46884 ;; Parameters:    Size  Location     Type
 46885 ;;		None
 46886 ;; Auto vars:     Size  Location     Type
 46887 ;;		None
 46888 ;; Return value:  Size  Location     Type
 46889 ;;                  1    wreg      void 
 46890 ;; Registers used:
 46891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46892 ;; Tracked objects:
 46893 ;;		On entry : 0/0
 46894 ;;		On exit  : 0/0
 46895 ;;		Unchanged: 0/0
 46896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46901 ;;Total ram usage:        4 bytes
 46902 ;; Hardware stack levels used:    1
 46903 ;; Hardware stack levels required when called:    1
 46904 ;; This function calls:
 46905 ;;		i2_USBTransferOnePacket
 46906 ;; This function is called by:
 46907 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46908 ;; This function uses a non-reentrant model
 46909 ;;
 46910                           
 46911                           	psect	text233
 46912  012E9C                     __ptext233:
 46913                           	opt stack 0
 46914  012E9C                     _USBCheckMSDRequest:
 46915                           	opt stack 14
 46916                           
 46917                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 46918                           
 46919                           ;incstack = 0
 46920  012E9C  010D               	movlb	13	; () banked
 46921  012E9E  5130               	movf	48,w,b	;volatile
 46922  012EA0  0B1F               	andlw	31
 46923  012EA2  06E8               	decf	wreg,f,c
 46924  012EA4  A4D8               	btfss	status,2,c
 46925  012EA6  0012               	return	
 46926                           
 46927                           ; BSR set to: 13
 46928                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 46929                           
 46930                           ; BSR set to: 13
 46931                           
 46932                           ; BSR set to: 13
 46933                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 46934  012EA8  5134               	movf	52,w,b	;volatile
 46935  012EAA  A4D8               	btfss	status,2,c
 46936  012EAC  0012               	return	
 46937  012EAE  D04D               	goto	i2l549
 46938  012EB0                     
 46939                           ; BSR set to: 13
 46940                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 46941                           
 46942                           ; BSR set to: 13
 46943  012EB0  5132               	movf	50,w,b	;volatile
 46944  012EB2  1133               	iorwf	51,w,b	;volatile
 46945  012EB4  A4D8               	btfss	status,2,c
 46946  012EB6  0012               	return	
 46947                           
 46948                           ; BSR set to: 13
 46949  012EB8  5136               	movf	54,w,b	;volatile
 46950  012EBA  1137               	iorwf	55,w,b	;volatile
 46951  012EBC  A4D8               	btfss	status,2,c
 46952  012EBE  0012               	return	
 46953                           
 46954                           ; BSR set to: 13
 46955                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 46956                           
 46957                           ; BSR set to: 13
 46958                           
 46959                           ; BSR set to: 13
 46960                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 46961  012EC0  0E00               	movlw	0
 46962  012EC2  0100               	movlb	0	; () banked
 46963  012EC4  6FE8               	movwf	_MSD_State& (0+255),b
 46964                           
 46965                           ; BSR set to: 0
 46966                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 46967  012EC6  69E7               	setf	_MSDCommandState& (0+255),b
 46968                           
 46969                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 46970  012EC8  0E00               	movlw	0
 46971  012ECA  0101               	movlb	1	; () banked
 46972  012ECC  6FF9               	movwf	_MSDReadState& (0+255),b
 46973                           
 46974                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 46975  012ECE  0E00               	movlw	0
 46976  012ED0  6E1F               	movwf	_MSDWriteState,c
 46977                           
 46978                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 46979  012ED2  0E01               	movlw	1
 46980  012ED4  6FF5               	movwf	_MSDCBWValid& (0+255),b
 46981                           
 46982                           ; BSR set to: 1
 46983                           
 46984                           ; BSR set to: 1
 46985                           
 46986                           ; BSR set to: 1
 46987                           
 46988                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 46989  012ED6  C1D7  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2643
 46990  012EDA  C1D8  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2643+1
 46991                           
 46992                           ; BSR set to: 1
 46993  012EDE  5039               	movf	_USBCheckMSDRequest$2643,w,c
 46994  012EE0  103A               	iorwf	_USBCheckMSDRequest$2643+1,w,c
 46995  012EE2  B4D8               	btfsc	status,2,c
 46996  012EE4  D00A               	goto	i2u871_40
 46997                           
 46998                           ; BSR set to: 1
 46999                           
 47000                           ; BSR set to: 1
 47001                           
 47002                           ; BSR set to: 1
 47003                           
 47004                           ; BSR set to: 1
 47005  012EE6  C1D7  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2644
 47006  012EEA  C1D8  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2644+1
 47007                           
 47008                           ; BSR set to: 1
 47009                           
 47010                           ; BSR set to: 1
 47011  012EEE  C03B  FFD9         	movff	_USBCheckMSDRequest$2644,fsr2l
 47012  012EF2  C03C  FFDA         	movff	_USBCheckMSDRequest$2644+1,fsr2h
 47013  012EF6  BEDF               	btfsc	indf2,7,c
 47014  012EF8  D00F               	goto	i2l554
 47015  012EFA                     i2u871_40:
 47016                           
 47017                           ; BSR set to: 1
 47018                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 47019                           
 47020                           ; BSR set to: 1
 47021  012EFA  0E00               	movlw	0
 47022  012EFC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 47023  012EFE  0E40               	movlw	64
 47024  012F00  6E2F               	movwf	i2USBTransferOnePacket@data,c
 47025  012F02  0E0D               	movlw	13
 47026  012F04  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 47027  012F06  0E40               	movlw	64
 47028  012F08  6E31               	movwf	i2USBTransferOnePacket@len,c
 47029  012F0A  0E02               	movlw	2
 47030  012F0C  EC24  F08E         	call	i2_USBTransferOnePacket
 47031  012F10  C02E  F0DE         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47032  012F14  C02F  F0DF         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47033  012F18                     i2l554:
 47034                           
 47035                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 47036  012F18  0E80               	movlw	128
 47037  012F1A  6E0D               	movwf	_inPipes+3,c	;volatile
 47038                           
 47039                           ;usb_device_msd.c: 263: break;
 47040  012F1C  0012               	return	
 47041  012F1E                     
 47042                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 47043  012F1E  010D               	movlb	13	; () banked
 47044  012F20  5132               	movf	50,w,b	;volatile
 47045  012F22  1133               	iorwf	51,w,b	;volatile
 47046  012F24  A4D8               	btfss	status,2,c
 47047  012F26  0012               	return	
 47048                           
 47049                           ; BSR set to: 13
 47050  012F28  0536               	decf	54,w,b	;volatile
 47051  012F2A  1137               	iorwf	55,w,b	;volatile
 47052  012F2C  A4D8               	btfss	status,2,c
 47053  012F2E  0012               	return	
 47054                           
 47055                           ; BSR set to: 13
 47056                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 47057                           
 47058                           ; BSR set to: 13
 47059                           
 47060                           ; BSR set to: 13
 47061                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 47062  012F30  0E00               	movlw	0
 47063  012F32  6F38               	movwf	56,b	;volatile
 47064                           
 47065                           ; BSR set to: 13
 47066                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 47067  012F34  0E38               	movlw	56
 47068  012F36  6E0A               	movwf	_inPipes,c	;volatile
 47069  012F38  0E0D               	movlw	13
 47070  012F3A  6E0B               	movwf	_inPipes+1,c	;volatile
 47071                           
 47072                           ; BSR set to: 13
 47073  012F3C  0E00               	movlw	0
 47074  012F3E  6E0F               	movwf	_inPipes+5,c	;volatile
 47075  012F40  0E01               	movlw	1
 47076  012F42  6E0E               	movwf	_inPipes+4,c	;volatile
 47077                           
 47078                           ; BSR set to: 13
 47079  012F44  0EC1               	movlw	193
 47080  012F46  6E0D               	movwf	_inPipes+3,c	;volatile
 47081                           
 47082                           ; BSR set to: 13
 47083                           ;usb_device_msd.c: 278: }
 47084                           
 47085                           ;usb_device_msd.c: 277: break;
 47086  012F48  0012               	return	
 47087  012F4A                     i2l549:
 47088                           
 47089                           ; BSR set to: 13
 47090                           
 47091                           ; BSR set to: 13
 47092  012F4A  5131               	movf	49,w,b	;volatile
 47093                           
 47094                           ; Switch size 1, requested type "space"
 47095                           ; Number of cases is 2, Range of values is 254 to 255
 47096                           ; switch strategies available:
 47097                           ; Name         Instructions Cycles
 47098                           ; simple_byte            7     4 (average)
 47099                           ;	Chosen strategy is simple_byte
 47100  012F4C  0AFE               	xorlw	254	; case 254
 47101  012F4E  B4D8               	btfsc	status,2,c
 47102  012F50  D7E6               	goto	i2l566
 47103  012F52  0A01               	xorlw	1	; case 255
 47104  012F54  A4D8               	btfss	status,2,c
 47105  012F56  0012               	return	
 47106  012F58  D7AB               	goto	i2l550
 47107  012F5A                     __end_of_USBCheckMSDRequest:
 47108                           	opt stack 0
 47109                           tosu	equ	0xFFF
 47110                           tosh	equ	0xFFE
 47111                           tosl	equ	0xFFD
 47112                           pclatu	equ	0xFFB
 47113                           pclath	equ	0xFFA
 47114                           tblptru	equ	0xFF8
 47115                           tblptrh	equ	0xFF7
 47116                           tblptrl	equ	0xFF6
 47117                           tablat	equ	0xFF5
 47118                           prodh	equ	0xFF4
 47119                           prodl	equ	0xFF3
 47120                           intcon	equ	0xFF2
 47121                           intcon2	equ	0xFF1
 47122                           intcon3	equ	0xFF0
 47123                           indf0	equ	0xFEF
 47124                           postinc0	equ	0xFEE
 47125                           fsr0h	equ	0xFEA
 47126                           fsr0l	equ	0xFE9
 47127                           wreg	equ	0xFE8
 47128                           indf1	equ	0xFE7
 47129                           postinc1	equ	0xFE6
 47130                           postdec1	equ	0xFE5
 47131                           plusw1	equ	0xFE3
 47132                           fsr1h	equ	0xFE2
 47133                           fsr1l	equ	0xFE1
 47134                           indf2	equ	0xFDF
 47135                           postinc2	equ	0xFDE
 47136                           postdec2	equ	0xFDD
 47137                           plusw2	equ	0xFDB
 47138                           fsr2h	equ	0xFDA
 47139                           fsr2l	equ	0xFD9
 47140                           status	equ	0xFD8
 47141                           
 47142 ;; *************** function _USBCheckHIDRequest *****************
 47143 ;; Defined at:
 47144 ;;		line 153 in file "usb_device_hid.c"
 47145 ;; Parameters:    Size  Location     Type
 47146 ;;		None
 47147 ;; Auto vars:     Size  Location     Type
 47148 ;;		None
 47149 ;; Return value:  Size  Location     Type
 47150 ;;                  1    wreg      void 
 47151 ;; Registers used:
 47152 ;;		wreg, status,2, status,0
 47153 ;; Tracked objects:
 47154 ;;		On entry : 0/0
 47155 ;;		On exit  : 0/0
 47156 ;;		Unchanged: 0/0
 47157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47162 ;;Total ram usage:        0 bytes
 47163 ;; Hardware stack levels used:    1
 47164 ;; This function calls:
 47165 ;;		Nothing
 47166 ;; This function is called by:
 47167 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47168 ;; This function uses a non-reentrant model
 47169 ;;
 47170                           
 47171                           	psect	text234
 47172  012918                     __ptext234:
 47173                           	opt stack 0
 47174  012918                     _USBCheckHIDRequest:
 47175                           	opt stack 15
 47176                           
 47177                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 47178                           
 47179                           ;incstack = 0
 47180  012918  010D               	movlb	13	; () banked
 47181  01291A  5130               	movf	48,w,b	;volatile
 47182  01291C  0B1F               	andlw	31
 47183  01291E  06E8               	decf	wreg,f,c
 47184  012920  A4D8               	btfss	status,2,c
 47185  012922  0012               	return	
 47186                           
 47187                           ; BSR set to: 13
 47188                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 47189                           
 47190                           ; BSR set to: 13
 47191                           
 47192                           ; BSR set to: 13
 47193  012924  5134               	movf	52,w,b	;volatile
 47194  012926  A4D8               	btfss	status,2,c
 47195  012928  0012               	return	
 47196                           
 47197                           ; BSR set to: 13
 47198                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 47199                           
 47200                           ; BSR set to: 13
 47201                           
 47202                           ; BSR set to: 13
 47203  01292A  0E06               	movlw	6
 47204  01292C  1931               	xorwf	49,w,b	;volatile
 47205  01292E  B4D8               	btfsc	status,2,c
 47206  012930  D018               	goto	i2l427
 47207  012932  D01F               	goto	i2l430
 47208  012934                     
 47209                           ; BSR set to: 13
 47210                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 47211                           
 47212                           ; BSR set to: 13
 47213  012934  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 47214  012936  A4D8               	btfss	status,2,c
 47215  012938  D01C               	goto	i2l430
 47216                           
 47217                           ; BSR set to: 13
 47218                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 47219  01293A  0E2D               	movlw	low (_configDescriptor1+18)
 47220  01293C  6E0A               	movwf	_inPipes,c	;volatile
 47221  01293E  0EC3               	movlw	high (_configDescriptor1+18)
 47222  012940  6E0B               	movwf	_inPipes+1,c	;volatile
 47223                           
 47224                           ; BSR set to: 13
 47225  012942  0E00               	movlw	0
 47226  012944  6E0F               	movwf	_inPipes+5,c	;volatile
 47227  012946  0E09               	movlw	9
 47228  012948  D00A               	goto	L64
 47229  01294A                     i2l11633:
 47230                           
 47231                           ; BSR set to: 13
 47232  01294A  0EC0               	movlw	192
 47233  01294C  6E0D               	movwf	_inPipes+3,c	;volatile
 47234                           
 47235                           ; BSR set to: 13
 47236                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 47237  01294E  D011               	goto	i2l430
 47238  012950                     
 47239                           ; BSR set to: 13
 47240                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 47241                           
 47242                           ; BSR set to: 13
 47243  012950  0EE1               	movlw	low _hid_rpt01
 47244  012952  6E0A               	movwf	_inPipes,c	;volatile
 47245  012954  0EC3               	movlw	high _hid_rpt01
 47246  012956  6E0B               	movwf	_inPipes+1,c	;volatile
 47247                           
 47248                           ; BSR set to: 13
 47249  012958  0E00               	movlw	0
 47250  01295A  6E0F               	movwf	_inPipes+5,c	;volatile
 47251  01295C  0E1D               	movlw	29
 47252  01295E                     L64:
 47253  01295E  6E0E               	movwf	_inPipes+4,c	;volatile
 47254  012960  D7F4               	goto	i2l11633
 47255  012962                     i2l427:
 47256                           
 47257                           ; BSR set to: 13
 47258                           
 47259                           ; BSR set to: 13
 47260  012962  5133               	movf	51,w,b	;volatile
 47261                           
 47262                           ; Switch size 1, requested type "space"
 47263                           ; Number of cases is 3, Range of values is 33 to 35
 47264                           ; switch strategies available:
 47265                           ; Name         Instructions Cycles
 47266                           ; simple_byte           10     6 (average)
 47267                           ;	Chosen strategy is simple_byte
 47268  012964  0A21               	xorlw	33	; case 33
 47269  012966  B4D8               	btfsc	status,2,c
 47270  012968  D7E5               	goto	i2l428
 47271  01296A  0A03               	xorlw	3	; case 34
 47272  01296C  B4D8               	btfsc	status,2,c
 47273  01296E  D7F0               	goto	i2l431
 47274  012970  0A01               	xorlw	1	; case 35
 47275  012972                     i2l430:
 47276                           
 47277                           ; BSR set to: 13
 47278                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 47279                           
 47280                           ; BSR set to: 13
 47281                           
 47282                           ; BSR set to: 13
 47283  012972  3930               	swapf	48,w,b	;volatile
 47284  012974  32E8               	rrcf	wreg,f,c
 47285  012976  0B03               	andlw	3
 47286  012978  06E8               	decf	wreg,f,c
 47287  01297A  A4D8               	btfss	status,2,c
 47288  01297C  0012               	return	
 47289  01297E  D020               	goto	i2l434
 47290  012980                     
 47291                           ; BSR set to: 13
 47292                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 47293                           
 47294                           ; BSR set to: 13
 47295  012980  0EFF               	movlw	low _idle_rate
 47296  012982  6E0A               	movwf	_inPipes,c	;volatile
 47297  012984  0E01               	movlw	high _idle_rate
 47298  012986  6E0B               	movwf	_inPipes+1,c	;volatile
 47299                           
 47300                           ; BSR set to: 13
 47301  012988  0E00               	movlw	0
 47302  01298A  6E0F               	movwf	_inPipes+5,c	;volatile
 47303  01298C  0E01               	movlw	1
 47304  01298E  6E0E               	movwf	_inPipes+4,c	;volatile
 47305                           
 47306                           ; BSR set to: 13
 47307  012990  0EC1               	movlw	193
 47308  012992  6E0D               	movwf	_inPipes+3,c	;volatile
 47309                           
 47310                           ;usb_device_hid.c: 223: break;
 47311  012994  0012               	return	
 47312  012996                     
 47313                           ; BSR set to: 13
 47314                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 47315                           
 47316                           ; BSR set to: 13
 47317  012996  0E80               	movlw	128
 47318  012998  6E0D               	movwf	_inPipes+3,c	;volatile
 47319                           
 47320                           ; BSR set to: 13
 47321                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 47322  01299A  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 47323                           
 47324                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 47325  01299E  0012               	return	
 47326  0129A0                     
 47327                           ; BSR set to: 13
 47328                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 47329                           
 47330                           ; BSR set to: 13
 47331  0129A0  0EFE               	movlw	low _active_protocol
 47332  0129A2  6E0A               	movwf	_inPipes,c	;volatile
 47333  0129A4  0E01               	movlw	high _active_protocol
 47334  0129A6  6E0B               	movwf	_inPipes+1,c	;volatile
 47335                           
 47336                           ; BSR set to: 13
 47337  0129A8  0E00               	movlw	0
 47338  0129AA  6E0F               	movwf	_inPipes+5,c	;volatile
 47339  0129AC  0E01               	movlw	1
 47340  0129AE  6E0E               	movwf	_inPipes+4,c	;volatile
 47341                           
 47342                           ; BSR set to: 13
 47343  0129B0  0E81               	movlw	129
 47344  0129B2  6E0D               	movwf	_inPipes+3,c	;volatile
 47345                           
 47346                           ;usb_device_hid.c: 234: break;
 47347  0129B4  0012               	return	
 47348  0129B6                     
 47349                           ; BSR set to: 13
 47350                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 47351                           
 47352                           ; BSR set to: 13
 47353  0129B6  0E80               	movlw	128
 47354  0129B8  6E0D               	movwf	_inPipes+3,c	;volatile
 47355                           
 47356                           ; BSR set to: 13
 47357                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 47358  0129BA  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 47359                           
 47360                           ; BSR set to: 13
 47361                           ;usb_device_hid.c: 239: }
 47362                           
 47363                           ;usb_device_hid.c: 238: break;
 47364  0129BE  0012               	return	
 47365  0129C0                     i2l434:
 47366                           
 47367                           ; BSR set to: 13
 47368                           
 47369                           ; BSR set to: 13
 47370  0129C0  5131               	movf	49,w,b	;volatile
 47371                           
 47372                           ; Switch size 1, requested type "space"
 47373                           ; Number of cases is 6, Range of values is 1 to 11
 47374                           ; switch strategies available:
 47375                           ; Name         Instructions Cycles
 47376                           ; simple_byte           19    10 (average)
 47377                           ;	Chosen strategy is simple_byte
 47378  0129C2  0A01               	xorlw	1	; case 1
 47379  0129C4  B4D8               	btfsc	status,2,c
 47380  0129C6  0012               	return	
 47381  0129C8  0A03               	xorlw	3	; case 2
 47382  0129CA  B4D8               	btfsc	status,2,c
 47383  0129CC  D7D9               	goto	i2l438
 47384  0129CE  0A01               	xorlw	1	; case 3
 47385  0129D0  B4D8               	btfsc	status,2,c
 47386  0129D2  D7E6               	goto	i2l440
 47387  0129D4  0A0A               	xorlw	10	; case 9
 47388  0129D6  B4D8               	btfsc	status,2,c
 47389  0129D8  0012               	return	
 47390  0129DA  0A03               	xorlw	3	; case 10
 47391  0129DC  B4D8               	btfsc	status,2,c
 47392  0129DE  D7DB               	goto	i2l439
 47393  0129E0  0A01               	xorlw	1	; case 11
 47394  0129E2  A4D8               	btfss	status,2,c
 47395  0129E4  0012               	return	
 47396  0129E6  D7E7               	goto	i2l441
 47397  0129E8                     __end_of_USBCheckHIDRequest:
 47398                           	opt stack 0
 47399                           tosu	equ	0xFFF
 47400                           tosh	equ	0xFFE
 47401                           tosl	equ	0xFFD
 47402                           pclatu	equ	0xFFB
 47403                           pclath	equ	0xFFA
 47404                           tblptru	equ	0xFF8
 47405                           tblptrh	equ	0xFF7
 47406                           tblptrl	equ	0xFF6
 47407                           tablat	equ	0xFF5
 47408                           prodh	equ	0xFF4
 47409                           prodl	equ	0xFF3
 47410                           intcon	equ	0xFF2
 47411                           intcon2	equ	0xFF1
 47412                           intcon3	equ	0xFF0
 47413                           indf0	equ	0xFEF
 47414                           postinc0	equ	0xFEE
 47415                           fsr0h	equ	0xFEA
 47416                           fsr0l	equ	0xFE9
 47417                           wreg	equ	0xFE8
 47418                           indf1	equ	0xFE7
 47419                           postinc1	equ	0xFE6
 47420                           postdec1	equ	0xFE5
 47421                           plusw1	equ	0xFE3
 47422                           fsr1h	equ	0xFE2
 47423                           fsr1l	equ	0xFE1
 47424                           indf2	equ	0xFDF
 47425                           postinc2	equ	0xFDE
 47426                           postdec2	equ	0xFDD
 47427                           plusw2	equ	0xFDB
 47428                           fsr2h	equ	0xFDA
 47429                           fsr2l	equ	0xFD9
 47430                           status	equ	0xFD8
 47431                           
 47432 ;; *************** function _MSDTransferTerminated *****************
 47433 ;; Defined at:
 47434 ;;		line 1674 in file "usb_device_msd.c"
 47435 ;; Parameters:    Size  Location     Type
 47436 ;;  handle          2   11[COMRAM] PTR void 
 47437 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 47438 ;;		 -> BDT(48), 
 47439 ;; Auto vars:     Size  Location     Type
 47440 ;;		None
 47441 ;; Return value:  Size  Location     Type
 47442 ;;                  1    wreg      void 
 47443 ;; Registers used:
 47444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47445 ;; Tracked objects:
 47446 ;;		On entry : 0/0
 47447 ;;		On exit  : 0/0
 47448 ;;		Unchanged: 0/0
 47449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47454 ;;Total ram usage:        4 bytes
 47455 ;; Hardware stack levels used:    1
 47456 ;; Hardware stack levels required when called:    1
 47457 ;; This function calls:
 47458 ;;		i2_USBStallEndpoint
 47459 ;;		i2_USBTransferOnePacket
 47460 ;; This function is called by:
 47461 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47462 ;; This function uses a non-reentrant model
 47463 ;;
 47464                           
 47465                           	psect	text235
 47466  014C0A                     __ptext235:
 47467                           	opt stack 0
 47468  014C0A                     _MSDTransferTerminated:
 47469                           	opt stack 14
 47470                           
 47471                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 47472                           
 47473                           ; BSR set to: 13
 47474                           ;incstack = 0
 47475  014C0A  0101               	movlb	1	; () banked
 47476  014C0C  51F5               	movf	_MSDCBWValid& (0+255),w,b
 47477  014C0E  A4D8               	btfss	status,2,c
 47478  014C10  D00B               	goto	i2l784
 47479                           
 47480                           ; BSR set to: 1
 47481                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 47482  014C12  0E01               	movlw	1
 47483  014C14  6E2E               	movwf	i2USBStallEndpoint@dir,c
 47484  014C16  0E02               	movlw	2
 47485  014C18  EC1F  F08D         	call	i2_USBStallEndpoint
 47486                           
 47487                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 47488  014C1C  0E00               	movlw	0
 47489  014C1E  6E2E               	movwf	i2USBStallEndpoint@dir,c
 47490  014C20  0E02               	movlw	2
 47491  014C22  EC1F  F08D         	call	i2_USBStallEndpoint
 47492                           
 47493                           ;usb_device_msd.c: 1681: }
 47494  014C26  0012               	return	
 47495  014C28                     i2l784:
 47496  014C28  C1D7  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2732
 47497  014C2C  C1D8  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2732+1
 47498  014C30  503B               	movf	_MSDTransferTerminated$2732,w,c
 47499  014C32  1839               	xorwf	MSDTransferTerminated@handle,w,c
 47500  014C34  E114               	bnz	i2l787
 47501  014C36  503C               	movf	_MSDTransferTerminated$2732+1,w,c
 47502  014C38  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 47503  014C3A  A4D8               	btfss	status,2,c
 47504  014C3C  0012               	return	
 47505                           
 47506                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 47507  014C3E  0E00               	movlw	0
 47508  014C40  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 47509  014C42  0E40               	movlw	64
 47510  014C44  6E2F               	movwf	i2USBTransferOnePacket@data,c
 47511  014C46  0E0D               	movlw	13
 47512  014C48  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 47513  014C4A  0E40               	movlw	64
 47514  014C4C  6E31               	movwf	i2USBTransferOnePacket@len,c
 47515  014C4E  0E02               	movlw	2
 47516  014C50  EC24  F08E         	call	i2_USBTransferOnePacket
 47517  014C54  C02E  F0DE         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47518  014C58  C02F  F0DF         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47519  014C5C  0012               	return	
 47520  014C5E                     i2l787:
 47521  014C5E  0012               	return		;funcret
 47522  014C60                     __end_of_MSDTransferTerminated:
 47523                           	opt stack 0
 47524                           tosu	equ	0xFFF
 47525                           tosh	equ	0xFFE
 47526                           tosl	equ	0xFFD
 47527                           pclatu	equ	0xFFB
 47528                           pclath	equ	0xFFA
 47529                           tblptru	equ	0xFF8
 47530                           tblptrh	equ	0xFF7
 47531                           tblptrl	equ	0xFF6
 47532                           tablat	equ	0xFF5
 47533                           prodh	equ	0xFF4
 47534                           prodl	equ	0xFF3
 47535                           intcon	equ	0xFF2
 47536                           intcon2	equ	0xFF1
 47537                           intcon3	equ	0xFF0
 47538                           indf0	equ	0xFEF
 47539                           postinc0	equ	0xFEE
 47540                           fsr0h	equ	0xFEA
 47541                           fsr0l	equ	0xFE9
 47542                           wreg	equ	0xFE8
 47543                           indf1	equ	0xFE7
 47544                           postinc1	equ	0xFE6
 47545                           postdec1	equ	0xFE5
 47546                           plusw1	equ	0xFE3
 47547                           fsr1h	equ	0xFE2
 47548                           fsr1l	equ	0xFE1
 47549                           indf2	equ	0xFDF
 47550                           postinc2	equ	0xFDE
 47551                           postdec2	equ	0xFDD
 47552                           plusw2	equ	0xFDB
 47553                           fsr2h	equ	0xFDA
 47554                           fsr2l	equ	0xFD9
 47555                           status	equ	0xFD8
 47556                           
 47557 ;; *************** function i2_USBStallEndpoint *****************
 47558 ;; Defined at:
 47559 ;;		line 1073 in file "usb_device.c"
 47560 ;; Parameters:    Size  Location     Type
 47561 ;;  ep              1    wreg     unsigned char 
 47562 ;;  dir             1    0[COMRAM] unsigned char 
 47563 ;; Auto vars:     Size  Location     Type
 47564 ;;  ep              1    5[COMRAM] unsigned char 
 47565 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 47566 ;;		 -> BDT(48), 
 47567 ;; Return value:  Size  Location     Type
 47568 ;;                  1    wreg      void 
 47569 ;; Registers used:
 47570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47571 ;; Tracked objects:
 47572 ;;		On entry : 0/0
 47573 ;;		On exit  : 0/0
 47574 ;;		Unchanged: 0/0
 47575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47576 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47577 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47579 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47580 ;;Total ram usage:        8 bytes
 47581 ;; Hardware stack levels used:    1
 47582 ;; This function calls:
 47583 ;;		Nothing
 47584 ;; This function is called by:
 47585 ;;		_MSDTransferTerminated
 47586 ;; This function uses a non-reentrant model
 47587 ;;
 47588                           
 47589                           	psect	text236
 47590  011A3E                     __ptext236:
 47591                           	opt stack 0
 47592  011A3E                     i2_USBStallEndpoint:
 47593                           	opt stack 14
 47594                           
 47595                           ;incstack = 0
 47596                           ;i2USBStallEndpoint@ep stored from wreg
 47597  011A3E  6E33               	movwf	i2USBStallEndpoint@ep,c
 47598                           
 47599                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 47600  011A40  5033               	movf	i2USBStallEndpoint@ep,w,c
 47601  011A42  A4D8               	btfss	status,2,c
 47602  011A44  D02B               	goto	i2l194
 47603                           
 47604                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 47605  011A46  EE20 F001          	lfsr	2,1
 47606  011A4A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47607  011A4C  26D9               	addwf	fsr2l,f,c
 47608  011A4E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47609  011A50  22DA               	addwfc	fsr2h,f,c
 47610  011A52  0E08               	movlw	8
 47611  011A54  6EDF               	movwf	indf2,c
 47612                           
 47613                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 47614  011A56  EE20 F002          	lfsr	2,2
 47615  011A5A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47616  011A5C  26D9               	addwf	fsr2l,f,c
 47617  011A5E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47618  011A60  22DA               	addwfc	fsr2h,f,c
 47619  011A62  0E30               	movlw	48
 47620  011A64  6EDE               	movwf	postinc2,c
 47621  011A66  0E0D               	movlw	13
 47622  011A68  6EDD               	movwf	postdec2,c
 47623                           
 47624                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 47625  011A6A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47626  011A6E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47627  011A72  0E0C               	movlw	12
 47628  011A74  6EDF               	movwf	indf2,c
 47629                           
 47630                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47631  011A76  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47632  011A7A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47633  011A7E  0E00               	movlw	0
 47634  011A80  8EDB               	bsf	plusw2,7,c
 47635                           
 47636                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 47637  011A82  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47638  011A86  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47639  011A8A  0E04               	movlw	4
 47640  011A8C  6EDF               	movwf	indf2,c
 47641                           
 47642                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47643  011A8E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47644  011A92  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47645  011A96  0E00               	movlw	0
 47646  011A98  8EDB               	bsf	plusw2,7,c
 47647                           
 47648                           ;usb_device.c: 1089: }
 47649  011A9A  0012               	return	
 47650  011A9C                     i2l194:
 47651                           
 47652                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 47653  011A9C  502E               	movf	i2USBStallEndpoint@dir,w,c
 47654  011A9E  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 47655  011AA0  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 47656  011AA2  90D8               	bcf	status,0,c
 47657  011AA4  362F               	rlcf	??i2_USBStallEndpoint,f,c
 47658  011AA6  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 47659  011AA8  5033               	movf	i2USBStallEndpoint@ep,w,c
 47660  011AAA  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 47661  011AAC  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 47662  011AAE  90D8               	bcf	status,0,c
 47663  011AB0  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47664  011AB2  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47665  011AB4  90D8               	bcf	status,0,c
 47666  011AB6  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47667  011AB8  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47668  011ABA  502F               	movf	??i2_USBStallEndpoint,w,c
 47669  011ABC  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 47670  011ABE  5030               	movf	??i2_USBStallEndpoint+1,w,c
 47671  011AC0  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 47672  011AC2  90D8               	bcf	status,0,c
 47673  011AC4  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47674  011AC6  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47675  011AC8  90D8               	bcf	status,0,c
 47676  011ACA  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47677  011ACC  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47678  011ACE  0E00               	movlw	0
 47679  011AD0  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 47680  011AD2  6E34               	movwf	i2USBStallEndpoint@p,c
 47681  011AD4  0E0D               	movlw	13
 47682  011AD6  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 47683  011AD8  6E35               	movwf	i2USBStallEndpoint@p+1,c
 47684                           
 47685                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 47686  011ADA  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47687  011ADE  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47688  011AE2  0E00               	movlw	0
 47689  011AE4  84DB               	bsf	plusw2,2,c
 47690                           
 47691                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 47692  011AE6  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47693  011AEA  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47694  011AEE  0E00               	movlw	0
 47695  011AF0  8EDB               	bsf	plusw2,7,c
 47696                           
 47697                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 47698  011AF2  5033               	movf	i2USBStallEndpoint@ep,w,c
 47699  011AF4  0D04               	mullw	4
 47700  011AF6  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 47701  011AFA  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 47702  011AFE  502E               	movf	i2USBStallEndpoint@dir,w,c
 47703  011B00  0D02               	mullw	2
 47704  011B02  50F3               	movf	prodl,w,c
 47705  011B04  262F               	addwf	??i2_USBStallEndpoint,f,c
 47706  011B06  50F4               	movf	prodh,w,c
 47707  011B08  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 47708  011B0A  90D8               	bcf	status,0,c
 47709  011B0C  362F               	rlcf	??i2_USBStallEndpoint,f,c
 47710  011B0E  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 47711  011B10  90D8               	bcf	status,0,c
 47712  011B12  362F               	rlcf	??i2_USBStallEndpoint,f,c
 47713  011B14  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 47714  011B16  0E04               	movlw	4
 47715  011B18  262F               	addwf	??i2_USBStallEndpoint,f,c
 47716  011B1A  0E00               	movlw	0
 47717  011B1C  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 47718  011B1E  0E00               	movlw	0
 47719  011B20  242F               	addwf	??i2_USBStallEndpoint,w,c
 47720  011B22  6E34               	movwf	i2USBStallEndpoint@p,c
 47721  011B24  0E0D               	movlw	13
 47722  011B26  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 47723  011B28  6E35               	movwf	i2USBStallEndpoint@p+1,c
 47724                           
 47725                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 47726  011B2A  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47727  011B2E  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47728  011B32  0E00               	movlw	0
 47729  011B34  84DB               	bsf	plusw2,2,c
 47730                           
 47731                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 47732  011B36  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47733  011B3A  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47734  011B3E  0E00               	movlw	0
 47735  011B40  8EDB               	bsf	plusw2,7,c
 47736  011B42  0012               	return	
 47737  011B44                     __end_ofi2_USBStallEndpoint:
 47738                           	opt stack 0
 47739                           tosu	equ	0xFFF
 47740                           tosh	equ	0xFFE
 47741                           tosl	equ	0xFFD
 47742                           pclatu	equ	0xFFB
 47743                           pclath	equ	0xFFA
 47744                           tblptru	equ	0xFF8
 47745                           tblptrh	equ	0xFF7
 47746                           tblptrl	equ	0xFF6
 47747                           tablat	equ	0xFF5
 47748                           prodh	equ	0xFF4
 47749                           prodl	equ	0xFF3
 47750                           intcon	equ	0xFF2
 47751                           intcon2	equ	0xFF1
 47752                           intcon3	equ	0xFF0
 47753                           indf0	equ	0xFEF
 47754                           postinc0	equ	0xFEE
 47755                           fsr0h	equ	0xFEA
 47756                           fsr0l	equ	0xFE9
 47757                           wreg	equ	0xFE8
 47758                           indf1	equ	0xFE7
 47759                           postinc1	equ	0xFE6
 47760                           postdec1	equ	0xFE5
 47761                           plusw1	equ	0xFE3
 47762                           fsr1h	equ	0xFE2
 47763                           fsr1l	equ	0xFE1
 47764                           indf2	equ	0xFDF
 47765                           postinc2	equ	0xFDE
 47766                           postdec2	equ	0xFDD
 47767                           plusw2	equ	0xFDB
 47768                           fsr2h	equ	0xFDA
 47769                           fsr2l	equ	0xFD9
 47770                           status	equ	0xFD8
 47771                           
 47772 ;; *************** function _APP_DeviceMSDInitialize *****************
 47773 ;; Defined at:
 47774 ;;		line 84 in file "app_device_msd.c"
 47775 ;; Parameters:    Size  Location     Type
 47776 ;;		None
 47777 ;; Auto vars:     Size  Location     Type
 47778 ;;		None
 47779 ;; Return value:  Size  Location     Type
 47780 ;;                  1    wreg      void 
 47781 ;; Registers used:
 47782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47783 ;; Tracked objects:
 47784 ;;		On entry : 0/0
 47785 ;;		On exit  : 0/0
 47786 ;;		Unchanged: 0/0
 47787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47792 ;;Total ram usage:        0 bytes
 47793 ;; Hardware stack levels used:    1
 47794 ;; Hardware stack levels required when called:    2
 47795 ;; This function calls:
 47796 ;;		_USBEnableEndpoint
 47797 ;;		_USBMSDInit
 47798 ;; This function is called by:
 47799 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47800 ;; This function uses a non-reentrant model
 47801 ;;
 47802                           
 47803                           	psect	text237
 47804  015DF4                     __ptext237:
 47805                           	opt stack 0
 47806  015DF4                     _APP_DeviceMSDInitialize:
 47807                           	opt stack 13
 47808                           
 47809                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 47810                           
 47811                           ;incstack = 0
 47812  015DF4  0E1E               	movlw	30
 47813  015DF6  6E36               	movwf	USBEnableEndpoint@options,c
 47814  015DF8  0E02               	movlw	2
 47815  015DFA  ECCB  F0A9         	call	_USBEnableEndpoint
 47816                           
 47817                           ;app_device_msd.c: 93: USBMSDInit();
 47818  015DFE  EC08  F08B         	call	_USBMSDInit	;wreg free
 47819  015E02  0012               	return		;funcret
 47820  015E04                     __end_of_APP_DeviceMSDInitialize:
 47821                           	opt stack 0
 47822                           tosu	equ	0xFFF
 47823                           tosh	equ	0xFFE
 47824                           tosl	equ	0xFFD
 47825                           pclatu	equ	0xFFB
 47826                           pclath	equ	0xFFA
 47827                           tblptru	equ	0xFF8
 47828                           tblptrh	equ	0xFF7
 47829                           tblptrl	equ	0xFF6
 47830                           tablat	equ	0xFF5
 47831                           prodh	equ	0xFF4
 47832                           prodl	equ	0xFF3
 47833                           intcon	equ	0xFF2
 47834                           intcon2	equ	0xFF1
 47835                           intcon3	equ	0xFF0
 47836                           indf0	equ	0xFEF
 47837                           postinc0	equ	0xFEE
 47838                           fsr0h	equ	0xFEA
 47839                           fsr0l	equ	0xFE9
 47840                           wreg	equ	0xFE8
 47841                           indf1	equ	0xFE7
 47842                           postinc1	equ	0xFE6
 47843                           postdec1	equ	0xFE5
 47844                           plusw1	equ	0xFE3
 47845                           fsr1h	equ	0xFE2
 47846                           fsr1l	equ	0xFE1
 47847                           indf2	equ	0xFDF
 47848                           postinc2	equ	0xFDE
 47849                           postdec2	equ	0xFDD
 47850                           plusw2	equ	0xFDB
 47851                           fsr2h	equ	0xFDA
 47852                           fsr2l	equ	0xFD9
 47853                           status	equ	0xFD8
 47854                           
 47855 ;; *************** function _USBMSDInit *****************
 47856 ;; Defined at:
 47857 ;;		line 142 in file "usb_device_msd.c"
 47858 ;; Parameters:    Size  Location     Type
 47859 ;;		None
 47860 ;; Auto vars:     Size  Location     Type
 47861 ;;		None
 47862 ;; Return value:  Size  Location     Type
 47863 ;;                  1    wreg      void 
 47864 ;; Registers used:
 47865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47866 ;; Tracked objects:
 47867 ;;		On entry : 0/0
 47868 ;;		On exit  : 0/0
 47869 ;;		Unchanged: 0/0
 47870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47875 ;;Total ram usage:        3 bytes
 47876 ;; Hardware stack levels used:    1
 47877 ;; Hardware stack levels required when called:    1
 47878 ;; This function calls:
 47879 ;;		i2_ExternalFlash_MediaDetect
 47880 ;;		i2_ExternalFlash_MediaInitialize
 47881 ;;		i2_ResetSenseData
 47882 ;;		i2_USBTransferOnePacket
 47883 ;; This function is called by:
 47884 ;;		_APP_DeviceMSDInitialize
 47885 ;; This function uses a non-reentrant model
 47886 ;;
 47887                           
 47888                           	psect	text238
 47889  011610                     __ptext238:
 47890                           	opt stack 0
 47891  011610                     _USBMSDInit:
 47892                           	opt stack 13
 47893                           
 47894                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 47895                           
 47896                           ;incstack = 0
 47897  011610  0E00               	movlw	0
 47898  011612  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 47899  011614  0E40               	movlw	64
 47900  011616  6E2F               	movwf	i2USBTransferOnePacket@data,c
 47901  011618  0E0D               	movlw	13
 47902  01161A  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 47903  01161C  0E40               	movlw	64
 47904  01161E  6E31               	movwf	i2USBTransferOnePacket@len,c
 47905  011620  0E02               	movlw	2
 47906  011622  EC24  F08E         	call	i2_USBTransferOnePacket
 47907  011626  C02E  F0DE         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47908  01162A  C02F  F0DF         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47909  01162E  C014  F0DC         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 47910  011632  C015  F0DD         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 47911                           
 47912                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 47913  011636  0E00               	movlw	0
 47914  011638  0100               	movlb	0	; () banked
 47915  01163A  6FE8               	movwf	_MSD_State& (0+255),b
 47916                           
 47917                           ; BSR set to: 0
 47918                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 47919  01163C  69E7               	setf	_MSDCommandState& (0+255),b
 47920                           
 47921                           ; BSR set to: 0
 47922                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 47923  01163E  0E00               	movlw	0
 47924  011640  0101               	movlb	1	; () banked
 47925  011642  6FF9               	movwf	_MSDReadState& (0+255),b
 47926                           
 47927                           ; BSR set to: 1
 47928                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 47929  011644  0E00               	movlw	0
 47930  011646  6E1F               	movwf	_MSDWriteState,c
 47931                           
 47932                           ; BSR set to: 1
 47933                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 47934  011648  0E00               	movlw	0
 47935  01164A  0100               	movlb	0	; () banked
 47936  01164C  6FE6               	movwf	_MSDHostNoData& (0+255),b
 47937                           
 47938                           ; BSR set to: 0
 47939                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 47940  01164E  0E00               	movlw	0
 47941  011650  0102               	movlb	2	; () banked
 47942  011652  6FAA               	movwf	_gblNumBLKS& (0+255),b
 47943  011654  0E00               	movlw	0
 47944  011656  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 47945  011658  0E00               	movlw	0
 47946  01165A  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 47947  01165C  0E00               	movlw	0
 47948  01165E  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 47949                           
 47950                           ; BSR set to: 2
 47951                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 47952  011660  0E00               	movlw	0
 47953  011662  6FA6               	movwf	_gblBLKLen& (0+255),b
 47954  011664  0E00               	movlw	0
 47955  011666  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 47956  011668  0E00               	movlw	0
 47957  01166A  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 47958  01166C  0E00               	movlw	0
 47959  01166E  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 47960                           
 47961                           ; BSR set to: 2
 47962                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 47963  011670  0E01               	movlw	1
 47964  011672  0101               	movlb	1	; () banked
 47965  011674  6FF5               	movwf	_MSDCBWValid& (0+255),b
 47966                           
 47967                           ; BSR set to: 1
 47968                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 47969  011676  0E00               	movlw	0
 47970  011678  0102               	movlb	2	; () banked
 47971  01167A  6FB3               	movwf	(_gblMediaPresent+1)& (0+255),b
 47972  01167C  0E00               	movlw	0
 47973  01167E  6FB2               	movwf	_gblMediaPresent& (0+255),b
 47974                           
 47975                           ; BSR set to: 2
 47976                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 47977  011680  0E00               	movlw	0
 47978  011682  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 47979  011684  D04A               	goto	i2l538
 47980  011686                     
 47981                           ; BSR set to: 2
 47982                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 47983                           
 47984                           ; BSR set to: 2
 47985  011686  514E               	movf	(_gblCBW+13)& (0+255),w,b
 47986  011688  0D01               	mullw	1
 47987  01168A  0EF6               	movlw	low _SoftDetach
 47988  01168C  24F3               	addwf	prodl,w,c
 47989  01168E  6ED9               	movwf	fsr2l,c
 47990  011690  0E01               	movlw	high _SoftDetach
 47991  011692  20F4               	addwfc	prodh,w,c
 47992  011694  6EDA               	movwf	fsr2h,c
 47993  011696  0E00               	movlw	0
 47994  011698  6EDF               	movwf	indf2,c
 47995                           
 47996                           ; BSR set to: 2
 47997                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 47998  01169A  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 47999  01169E  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 48000  0116A2  EE22  F0C4         	lfsr	2,_LUN+9
 48001  0116A6  D801               	call	i2u1644_48
 48002  0116A8  D00A               	goto	i2u1644_49
 48003  0116AA                     i2u1644_48:
 48004  0116AA  0005               	push	
 48005  0116AC  6EFA               	movwf	pclath,c
 48006  0116AE  50DE               	movf	postinc2,w,c
 48007  0116B0  6EFD               	movwf	tosl,c
 48008  0116B2  50DE               	movf	postinc2,w,c
 48009  0116B4  6EFE               	movwf	tosh,c
 48010  0116B6  50DE               	movf	postinc2,w,c
 48011  0116B8  6EFF               	movwf	tosu,c
 48012  0116BA  50FA               	movf	pclath,w,c
 48013  0116BC  0012               	return		;indir
 48014  0116BE                     i2u1644_49:
 48015  0116BE  0900               	iorlw	0
 48016  0116C0  B4D8               	btfsc	status,2,c
 48017  0116C2  D027               	goto	i2l541
 48018                           
 48019                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 48020  0116C4  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 48021  0116C8  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 48022  0116CC  D801               	call	i2u1646_48
 48023  0116CE  D00B               	goto	i2u1646_49
 48024  0116D0                     i2u1646_48:
 48025  0116D0  0005               	push	
 48026  0116D2  6EFA               	movwf	pclath,c
 48027  0116D4  0102               	movlb	2	; () banked
 48028  0116D6  51BB               	movf	_LUN& (0+255),w,b
 48029  0116D8  6EFD               	movwf	tosl,c
 48030  0116DA  51BC               	movf	(_LUN+1)& (0+255),w,b
 48031  0116DC  6EFE               	movwf	tosh,c
 48032  0116DE  51BD               	movf	(_LUN+2)& (0+255),w,b
 48033  0116E0  6EFF               	movwf	tosu,c
 48034  0116E2  50FA               	movf	pclath,w,c
 48035  0116E4  0012               	return		;indir
 48036  0116E6                     i2u1646_49:
 48037  0116E6  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 48038  0116E8  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 48039  0116EA  B4D8               	btfsc	status,2,c
 48040  0116EC  D012               	goto	i2l541
 48041                           
 48042                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 48043  0116EE  C24E  F039         	movff	_gblCBW+13,??_USBMSDInit
 48044  0116F2  0E01               	movlw	1
 48045  0116F4  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 48046  0116F6  0E00               	movlw	0
 48047  0116F8  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 48048  0116FA  2A39               	incf	??_USBMSDInit,f,c
 48049  0116FC  D003               	goto	i2u1648_44
 48050  0116FE                     i2u1648_45:
 48051  0116FE  90D8               	bcf	status,0,c
 48052  011700  363A               	rlcf	??_USBMSDInit+1,f,c
 48053  011702  363B               	rlcf	??_USBMSDInit+2,f,c
 48054  011704                     i2u1648_44:
 48055  011704  2E39               	decfsz	??_USBMSDInit,f,c
 48056  011706  D7FB               	goto	i2u1648_45
 48057  011708  503A               	movf	??_USBMSDInit+1,w,c
 48058  01170A  0102               	movlb	2	; () banked
 48059  01170C  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 48060  01170E  503B               	movf	??_USBMSDInit+2,w,c
 48061  011710  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 48062  011712                     i2l541:
 48063                           
 48064                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 48065                           
 48066                           ; BSR set to: 2
 48067                           
 48068                           ; BSR set to: 2
 48069  011712  EC5A  F0A3         	call	i2_ResetSenseData	;wreg free
 48070  011716  0102               	movlb	2	; () banked
 48071  011718  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 48072  01171A                     i2l538:
 48073                           
 48074                           ; BSR set to: 2
 48075                           
 48076                           ; BSR set to: 2
 48077  01171A  514E               	movf	(_gblCBW+13)& (0+255),w,b
 48078  01171C  A4D8               	btfss	status,2,c
 48079  01171E  0012               	return	
 48080  011720  D7B2               	goto	i2l539
 48081  011722                     __end_of_USBMSDInit:
 48082                           	opt stack 0
 48083                           tosu	equ	0xFFF
 48084                           tosh	equ	0xFFE
 48085                           tosl	equ	0xFFD
 48086                           pclatu	equ	0xFFB
 48087                           pclath	equ	0xFFA
 48088                           tblptru	equ	0xFF8
 48089                           tblptrh	equ	0xFF7
 48090                           tblptrl	equ	0xFF6
 48091                           tablat	equ	0xFF5
 48092                           prodh	equ	0xFF4
 48093                           prodl	equ	0xFF3
 48094                           intcon	equ	0xFF2
 48095                           intcon2	equ	0xFF1
 48096                           intcon3	equ	0xFF0
 48097                           indf0	equ	0xFEF
 48098                           postinc0	equ	0xFEE
 48099                           fsr0h	equ	0xFEA
 48100                           fsr0l	equ	0xFE9
 48101                           wreg	equ	0xFE8
 48102                           indf1	equ	0xFE7
 48103                           postinc1	equ	0xFE6
 48104                           postdec1	equ	0xFE5
 48105                           plusw1	equ	0xFE3
 48106                           fsr1h	equ	0xFE2
 48107                           fsr1l	equ	0xFE1
 48108                           indf2	equ	0xFDF
 48109                           postinc2	equ	0xFDE
 48110                           postdec2	equ	0xFDD
 48111                           plusw2	equ	0xFDB
 48112                           fsr2h	equ	0xFDA
 48113                           fsr2l	equ	0xFD9
 48114                           status	equ	0xFD8
 48115                           
 48116 ;; *************** function i2_ResetSenseData *****************
 48117 ;; Defined at:
 48118 ;;		line 1373 in file "usb_device_msd.c"
 48119 ;; Parameters:    Size  Location     Type
 48120 ;;		None
 48121 ;; Auto vars:     Size  Location     Type
 48122 ;;		None
 48123 ;; Return value:  Size  Location     Type
 48124 ;;                  1    wreg      void 
 48125 ;; Registers used:
 48126 ;;		wreg, status,2
 48127 ;; Tracked objects:
 48128 ;;		On entry : 0/0
 48129 ;;		On exit  : 0/0
 48130 ;;		Unchanged: 0/0
 48131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48136 ;;Total ram usage:        0 bytes
 48137 ;; Hardware stack levels used:    1
 48138 ;; This function calls:
 48139 ;;		Nothing
 48140 ;; This function is called by:
 48141 ;;		_USBMSDInit
 48142 ;; This function uses a non-reentrant model
 48143 ;;
 48144                           
 48145                           	psect	text239
 48146  0146B4                     __ptext239:
 48147                           	opt stack 0
 48148  0146B4                     i2_ResetSenseData:
 48149                           	opt stack 13
 48150                           
 48151                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 48152                           
 48153                           ; BSR set to: 2
 48154                           ;incstack = 0
 48155  0146B4  0102               	movlb	2	; () banked
 48156  0146B6  9160               	bcf	_gblSenseData& (0+255),0,b
 48157  0146B8  9360               	bcf	_gblSenseData& (0+255),1,b
 48158  0146BA  9560               	bcf	_gblSenseData& (0+255),2,b
 48159  0146BC  9760               	bcf	_gblSenseData& (0+255),3,b
 48160  0146BE  8960               	bsf	_gblSenseData& (0+255),4,b
 48161  0146C0  8B60               	bsf	_gblSenseData& (0+255),5,b
 48162  0146C2  8D60               	bsf	_gblSenseData& (0+255),6,b
 48163                           
 48164                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 48165  0146C4  9F60               	bcf	_gblSenseData& (0+255),7,b
 48166                           
 48167                           ; BSR set to: 2
 48168                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 48169  0146C6  0E00               	movlw	0
 48170  0146C8  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 48171                           
 48172                           ; BSR set to: 2
 48173                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 48174  0146CA  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 48175  0146CC  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 48176  0146CE  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 48177  0146D0  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 48178                           
 48179                           ; BSR set to: 2
 48180                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 48181  0146D2  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 48182                           
 48183                           ; BSR set to: 2
 48184                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 48185  0146D4  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 48186                           
 48187                           ; BSR set to: 2
 48188                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 48189  0146D6  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 48190                           
 48191                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 48192  0146D8  0E00               	movlw	0
 48193  0146DA  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 48194                           
 48195                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 48196  0146DC  0E00               	movlw	0
 48197  0146DE  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 48198                           
 48199                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 48200  0146E0  0E00               	movlw	0
 48201  0146E2  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 48202                           
 48203                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 48204  0146E4  0E00               	movlw	0
 48205  0146E6  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 48206                           
 48207                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 48208  0146E8  0E0A               	movlw	10
 48209  0146EA  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 48210                           
 48211                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 48212  0146EC  0E00               	movlw	0
 48213  0146EE  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 48214  0146F0  0E00               	movlw	0
 48215  0146F2  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 48216  0146F4  0E00               	movlw	0
 48217  0146F6  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 48218  0146F8  0E00               	movlw	0
 48219  0146FA  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 48220                           
 48221                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 48222  0146FC  0E00               	movlw	0
 48223  0146FE  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 48224                           
 48225                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 48226  014700  0E00               	movlw	0
 48227  014702  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 48228                           
 48229                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 48230  014704  0E00               	movlw	0
 48231  014706  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 48232                           
 48233                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 48234  014708  0E00               	movlw	0
 48235  01470A  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 48236                           
 48237                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 48238  01470C  0E00               	movlw	0
 48239  01470E  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 48240                           
 48241                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 48242  014710  0E00               	movlw	0
 48243  014712  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 48244                           
 48245                           ; BSR set to: 2
 48246  014714  0012               	return		;funcret
 48247  014716                     __end_ofi2_ResetSenseData:
 48248                           	opt stack 0
 48249                           tosu	equ	0xFFF
 48250                           tosh	equ	0xFFE
 48251                           tosl	equ	0xFFD
 48252                           pclatu	equ	0xFFB
 48253                           pclath	equ	0xFFA
 48254                           tblptru	equ	0xFF8
 48255                           tblptrh	equ	0xFF7
 48256                           tblptrl	equ	0xFF6
 48257                           tablat	equ	0xFF5
 48258                           prodh	equ	0xFF4
 48259                           prodl	equ	0xFF3
 48260                           intcon	equ	0xFF2
 48261                           intcon2	equ	0xFF1
 48262                           intcon3	equ	0xFF0
 48263                           indf0	equ	0xFEF
 48264                           postinc0	equ	0xFEE
 48265                           fsr0h	equ	0xFEA
 48266                           fsr0l	equ	0xFE9
 48267                           wreg	equ	0xFE8
 48268                           indf1	equ	0xFE7
 48269                           postinc1	equ	0xFE6
 48270                           postdec1	equ	0xFE5
 48271                           plusw1	equ	0xFE3
 48272                           fsr1h	equ	0xFE2
 48273                           fsr1l	equ	0xFE1
 48274                           indf2	equ	0xFDF
 48275                           postinc2	equ	0xFDE
 48276                           postdec2	equ	0xFDD
 48277                           plusw2	equ	0xFDB
 48278                           fsr2h	equ	0xFDA
 48279                           fsr2l	equ	0xFD9
 48280                           status	equ	0xFD8
 48281                           
 48282 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 48283 ;; Defined at:
 48284 ;;		line 10 in file "external_flash.c"
 48285 ;; Parameters:    Size  Location     Type
 48286 ;;  config          2    0[COMRAM] PTR void 
 48287 ;;		 -> NULL(0), 
 48288 ;; Auto vars:     Size  Location     Type
 48289 ;;		None
 48290 ;; Return value:  Size  Location     Type
 48291 ;;                  2    0[COMRAM] PTR struct .
 48292 ;; Registers used:
 48293 ;;		wreg, status,2, status,0
 48294 ;; Tracked objects:
 48295 ;;		On entry : 0/0
 48296 ;;		On exit  : 0/0
 48297 ;;		Unchanged: 0/0
 48298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48303 ;;Total ram usage:        2 bytes
 48304 ;; Hardware stack levels used:    1
 48305 ;; This function calls:
 48306 ;;		Nothing
 48307 ;; This function is called by:
 48308 ;;		_USBMSDInit
 48309 ;;		_MSDProcessCommand
 48310 ;; This function uses a non-reentrant model
 48311 ;;
 48312                           
 48313                           	psect	text240
 48314  015C06                     __ptext240:
 48315                           	opt stack 0
 48316  015C06                     i2_ExternalFlash_MediaInitialize:
 48317                           	opt stack 13
 48318                           
 48319                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 48320                           
 48321                           ; BSR set to: 2
 48322                           ;incstack = 0
 48323  015C06  0102               	movlb	2	; () banked
 48324  015C08  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 48325                           
 48326                           ; BSR set to: 2
 48327                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 48328  015C0A  0E02               	movlw	2
 48329  015C0C  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 48330  015C0E  0E00               	movlw	0
 48331  015C10  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 48332                           
 48333                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 48334  015C12  0E00               	movlw	0
 48335  015C14  6FB6               	movwf	_mediaInformation& (0+255),b
 48336                           
 48337                           ; BSR set to: 2
 48338                           ;external_flash.c: 15: return &mediaInformation;
 48339  015C16  0EB6               	movlw	low _mediaInformation
 48340  015C18  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 48341  015C1A  0E02               	movlw	high _mediaInformation
 48342  015C1C  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 48343  015C1E  0012               	return	
 48344  015C20                     __end_ofi2_ExternalFlash_MediaInitialize:
 48345                           	opt stack 0
 48346                           tosu	equ	0xFFF
 48347                           tosh	equ	0xFFE
 48348                           tosl	equ	0xFFD
 48349                           pclatu	equ	0xFFB
 48350                           pclath	equ	0xFFA
 48351                           tblptru	equ	0xFF8
 48352                           tblptrh	equ	0xFF7
 48353                           tblptrl	equ	0xFF6
 48354                           tablat	equ	0xFF5
 48355                           prodh	equ	0xFF4
 48356                           prodl	equ	0xFF3
 48357                           intcon	equ	0xFF2
 48358                           intcon2	equ	0xFF1
 48359                           intcon3	equ	0xFF0
 48360                           indf0	equ	0xFEF
 48361                           postinc0	equ	0xFEE
 48362                           fsr0h	equ	0xFEA
 48363                           fsr0l	equ	0xFE9
 48364                           wreg	equ	0xFE8
 48365                           indf1	equ	0xFE7
 48366                           postinc1	equ	0xFE6
 48367                           postdec1	equ	0xFE5
 48368                           plusw1	equ	0xFE3
 48369                           fsr1h	equ	0xFE2
 48370                           fsr1l	equ	0xFE1
 48371                           indf2	equ	0xFDF
 48372                           postinc2	equ	0xFDE
 48373                           postdec2	equ	0xFDD
 48374                           plusw2	equ	0xFDB
 48375                           fsr2h	equ	0xFDA
 48376                           fsr2l	equ	0xFD9
 48377                           status	equ	0xFD8
 48378                           
 48379 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 48380 ;; Defined at:
 48381 ;;		line 29 in file "external_flash.c"
 48382 ;; Parameters:    Size  Location     Type
 48383 ;;  config          2    0[COMRAM] PTR void 
 48384 ;;		 -> NULL(0), 
 48385 ;; Auto vars:     Size  Location     Type
 48386 ;;		None
 48387 ;; Return value:  Size  Location     Type
 48388 ;;                  1    wreg      unsigned char 
 48389 ;; Registers used:
 48390 ;;		wreg
 48391 ;; Tracked objects:
 48392 ;;		On entry : 0/0
 48393 ;;		On exit  : 0/0
 48394 ;;		Unchanged: 0/0
 48395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48400 ;;Total ram usage:        2 bytes
 48401 ;; Hardware stack levels used:    1
 48402 ;; This function calls:
 48403 ;;		Nothing
 48404 ;; This function is called by:
 48405 ;;		_USBMSDInit
 48406 ;;		_MSDProcessCommand
 48407 ;; This function uses a non-reentrant model
 48408 ;;
 48409                           
 48410                           	psect	text241
 48411  015EF6                     __ptext241:
 48412                           	opt stack 0
 48413  015EF6                     i2_ExternalFlash_MediaDetect:
 48414                           	opt stack 13
 48415                           
 48416                           ;external_flash.c: 31: return 1;
 48417                           
 48418                           ; BSR set to: 2
 48419                           ;incstack = 0
 48420  015EF6  0E01               	movlw	1
 48421  015EF8  0012               	return	
 48422  015EFA                     __end_ofi2_ExternalFlash_MediaDetect:
 48423                           	opt stack 0
 48424                           tosu	equ	0xFFF
 48425                           tosh	equ	0xFFE
 48426                           tosl	equ	0xFFD
 48427                           pclatu	equ	0xFFB
 48428                           pclath	equ	0xFFA
 48429                           tblptru	equ	0xFF8
 48430                           tblptrh	equ	0xFF7
 48431                           tblptrl	equ	0xFF6
 48432                           tablat	equ	0xFF5
 48433                           prodh	equ	0xFF4
 48434                           prodl	equ	0xFF3
 48435                           intcon	equ	0xFF2
 48436                           intcon2	equ	0xFF1
 48437                           intcon3	equ	0xFF0
 48438                           indf0	equ	0xFEF
 48439                           postinc0	equ	0xFEE
 48440                           fsr0h	equ	0xFEA
 48441                           fsr0l	equ	0xFE9
 48442                           wreg	equ	0xFE8
 48443                           indf1	equ	0xFE7
 48444                           postinc1	equ	0xFE6
 48445                           postdec1	equ	0xFE5
 48446                           plusw1	equ	0xFE3
 48447                           fsr1h	equ	0xFE2
 48448                           fsr1l	equ	0xFE1
 48449                           indf2	equ	0xFDF
 48450                           postinc2	equ	0xFDE
 48451                           postdec2	equ	0xFDD
 48452                           plusw2	equ	0xFDB
 48453                           fsr2h	equ	0xFDA
 48454                           fsr2l	equ	0xFD9
 48455                           status	equ	0xFD8
 48456                           
 48457 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 48458 ;; Defined at:
 48459 ;;		line 81 in file "app_device_custom_hid.c"
 48460 ;; Parameters:    Size  Location     Type
 48461 ;;		None
 48462 ;; Auto vars:     Size  Location     Type
 48463 ;;		None
 48464 ;; Return value:  Size  Location     Type
 48465 ;;                  1    wreg      void 
 48466 ;; Registers used:
 48467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48468 ;; Tracked objects:
 48469 ;;		On entry : 0/0
 48470 ;;		On exit  : 0/0
 48471 ;;		Unchanged: 0/0
 48472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48477 ;;Total ram usage:        0 bytes
 48478 ;; Hardware stack levels used:    1
 48479 ;; Hardware stack levels required when called:    2
 48480 ;; This function calls:
 48481 ;;		_USBEnableEndpoint
 48482 ;;		i2_USBTransferOnePacket
 48483 ;; This function is called by:
 48484 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48485 ;; This function uses a non-reentrant model
 48486 ;;
 48487                           
 48488                           	psect	text242
 48489  01554A                     __ptext242:
 48490                           	opt stack 0
 48491  01554A                     _APP_DeviceCustomHIDInitialize:
 48492                           	opt stack 13
 48493                           
 48494                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 48495                           
 48496                           ;incstack = 0
 48497  01554A  0E00               	movlw	0
 48498  01554C  0100               	movlb	0	; () banked
 48499  01554E  6FD8               	movwf	_USBInHandle& (0+255),b
 48500  015550  0E00               	movlw	0
 48501  015552  6FD9               	movwf	(_USBInHandle+1)& (0+255),b
 48502                           
 48503                           ; BSR set to: 0
 48504                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 48505  015554  0E1E               	movlw	30
 48506  015556  6E36               	movwf	USBEnableEndpoint@options,c
 48507  015558  0E01               	movlw	1
 48508  01555A  ECCB  F0A9         	call	_USBEnableEndpoint
 48509                           
 48510                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 48511  01555E  0E00               	movlw	0
 48512  015560  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 48513  015562  0E78               	movlw	low _ReceivedDataBuffer
 48514  015564  6E2F               	movwf	i2USBTransferOnePacket@data,c
 48515  015566  0E04               	movlw	high _ReceivedDataBuffer
 48516  015568  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 48517  01556A  0E40               	movlw	64
 48518  01556C  6E31               	movwf	i2USBTransferOnePacket@len,c
 48519  01556E  0E01               	movlw	1
 48520  015570  EC24  F08E         	call	i2_USBTransferOnePacket
 48521  015574  C02E  F1E9         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 48522  015578  C02F  F1EA         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 48523  01557C  0012               	return		;funcret
 48524  01557E                     __end_of_APP_DeviceCustomHIDInitialize:
 48525                           	opt stack 0
 48526                           tosu	equ	0xFFF
 48527                           tosh	equ	0xFFE
 48528                           tosl	equ	0xFFD
 48529                           pclatu	equ	0xFFB
 48530                           pclath	equ	0xFFA
 48531                           tblptru	equ	0xFF8
 48532                           tblptrh	equ	0xFF7
 48533                           tblptrl	equ	0xFF6
 48534                           tablat	equ	0xFF5
 48535                           prodh	equ	0xFF4
 48536                           prodl	equ	0xFF3
 48537                           intcon	equ	0xFF2
 48538                           intcon2	equ	0xFF1
 48539                           intcon3	equ	0xFF0
 48540                           indf0	equ	0xFEF
 48541                           postinc0	equ	0xFEE
 48542                           fsr0h	equ	0xFEA
 48543                           fsr0l	equ	0xFE9
 48544                           wreg	equ	0xFE8
 48545                           indf1	equ	0xFE7
 48546                           postinc1	equ	0xFE6
 48547                           postdec1	equ	0xFE5
 48548                           plusw1	equ	0xFE3
 48549                           fsr1h	equ	0xFE2
 48550                           fsr1l	equ	0xFE1
 48551                           indf2	equ	0xFDF
 48552                           postinc2	equ	0xFDE
 48553                           postdec2	equ	0xFDD
 48554                           plusw2	equ	0xFDB
 48555                           fsr2h	equ	0xFDA
 48556                           fsr2l	equ	0xFD9
 48557                           status	equ	0xFD8
 48558                           
 48559 ;; *************** function i2_USBTransferOnePacket *****************
 48560 ;; Defined at:
 48561 ;;		line 995 in file "usb_device.c"
 48562 ;; Parameters:    Size  Location     Type
 48563 ;;  ep              1    wreg     unsigned char 
 48564 ;;  dir             1    0[COMRAM] unsigned char 
 48565 ;;  data            2    1[COMRAM] PTR unsigned char 
 48566 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 48567 ;;		 -> msd_cbw(31), NULL(0), 
 48568 ;;  len             1    3[COMRAM] unsigned char 
 48569 ;; Auto vars:     Size  Location     Type
 48570 ;;  ep              1    8[COMRAM] unsigned char 
 48571 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 48572 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48573 ;; Return value:  Size  Location     Type
 48574 ;;                  2    0[COMRAM] PTR void 
 48575 ;; Registers used:
 48576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48577 ;; Tracked objects:
 48578 ;;		On entry : 0/0
 48579 ;;		On exit  : 0/0
 48580 ;;		Unchanged: 0/0
 48581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48583 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48585 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48586 ;;Total ram usage:       11 bytes
 48587 ;; Hardware stack levels used:    1
 48588 ;; This function calls:
 48589 ;;		Nothing
 48590 ;; This function is called by:
 48591 ;;		_USBMSDInit
 48592 ;;		_USBCheckMSDRequest
 48593 ;;		_MSDTransferTerminated
 48594 ;;		_APP_DeviceCustomHIDInitialize
 48595 ;; This function uses a non-reentrant model
 48596 ;;
 48597                           
 48598                           	psect	text243
 48599  011C48                     __ptext243:
 48600                           	opt stack 0
 48601  011C48                     i2_USBTransferOnePacket:
 48602                           	opt stack 14
 48603                           
 48604                           ;incstack = 0
 48605                           ;i2USBTransferOnePacket@ep stored from wreg
 48606  011C48  6E36               	movwf	i2USBTransferOnePacket@ep,c
 48607                           
 48608                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 48609  011C4A  502E               	movf	i2USBTransferOnePacket@dir,w,c
 48610  011C4C  B4D8               	btfsc	status,2,c
 48611  011C4E  D007               	goto	i2l186
 48612                           
 48613                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 48614  011C50  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48615  011C52  0D02               	mullw	2
 48616  011C54  0E10               	movlw	low _pBDTEntryIn
 48617  011C56  24F3               	addwf	prodl,w,c
 48618  011C58  6ED9               	movwf	fsr2l,c
 48619  011C5A  0E00               	movlw	high _pBDTEntryIn
 48620  011C5C  D006               	goto	L65
 48621  011C5E                     i2l186:
 48622                           
 48623                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 48624  011C5E  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48625  011C60  0D02               	mullw	2
 48626  011C62  0ED3               	movlw	low _pBDTEntryOut
 48627  011C64  24F3               	addwf	prodl,w,c
 48628  011C66  6ED9               	movwf	fsr2l,c
 48629  011C68  0E01               	movlw	high _pBDTEntryOut
 48630  011C6A                     L65:
 48631  011C6A  20F4               	addwfc	prodh,w,c
 48632  011C6C  6EDA               	movwf	fsr2h,c
 48633  011C6E  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 48634  011C72  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 48635                           
 48636                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 48637  011C76  5037               	movf	i2USBTransferOnePacket@handle,w,c
 48638  011C78  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 48639  011C7A  A4D8               	btfss	status,2,c
 48640  011C7C  D005               	goto	i2l188
 48641                           
 48642                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 48643  011C7E  0E00               	movlw	0
 48644  011C80  6E2E               	movwf	?i2_USBTransferOnePacket,c
 48645  011C82  0E00               	movlw	0
 48646  011C84  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 48647  011C86  0012               	return	
 48648  011C88                     i2l188:
 48649                           
 48650                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 48651  011C88  EE20 F002          	lfsr	2,2
 48652  011C8C  5037               	movf	i2USBTransferOnePacket@handle,w,c
 48653  011C8E  26D9               	addwf	fsr2l,f,c
 48654  011C90  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 48655  011C92  22DA               	addwfc	fsr2h,f,c
 48656  011C94  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 48657  011C98  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 48658                           
 48659                           ;usb_device.c: 1030: handle->CNT = len;
 48660  011C9C  EE20 F001          	lfsr	2,1
 48661  011CA0  5037               	movf	i2USBTransferOnePacket@handle,w,c
 48662  011CA2  26D9               	addwf	fsr2l,f,c
 48663  011CA4  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 48664  011CA6  22DA               	addwfc	fsr2h,f,c
 48665  011CA8  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 48666                           
 48667                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 48668  011CAC  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 48669  011CB0  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 48670  011CB4  0E40               	movlw	64
 48671  011CB6  16DF               	andwf	indf2,f,c
 48672                           
 48673                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 48674  011CB8  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 48675  011CBC  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 48676  011CC0  0E00               	movlw	0
 48677  011CC2  86DB               	bsf	plusw2,3,c
 48678                           
 48679                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 48680  011CC4  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 48681  011CC8  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 48682  011CCC  0E00               	movlw	0
 48683  011CCE  8EDB               	bsf	plusw2,7,c
 48684                           
 48685                           ;usb_device.c: 1036: if(dir != 0)
 48686  011CD0  502E               	movf	i2USBTransferOnePacket@dir,w,c
 48687  011CD2  B4D8               	btfsc	status,2,c
 48688  011CD4  D018               	goto	i2l190
 48689                           
 48690                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 48691  011CD6  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48692  011CD8  0D02               	mullw	2
 48693  011CDA  0E10               	movlw	low _pBDTEntryIn
 48694  011CDC  24F3               	addwf	prodl,w,c
 48695  011CDE  6ED9               	movwf	fsr2l,c
 48696  011CE0  0E00               	movlw	high _pBDTEntryIn
 48697  011CE2  20F4               	addwfc	prodh,w,c
 48698  011CE4  6EDA               	movwf	fsr2h,c
 48699  011CE6  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 48700  011CEA  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 48701  011CEE  0E04               	movlw	4
 48702  011CF0  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 48703  011CF2  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 48704  011CF4  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 48705  011CF6  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 48706  011CF8  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48707  011CFA  0D02               	mullw	2
 48708  011CFC  0E10               	movlw	low _pBDTEntryIn
 48709  011CFE  24F3               	addwf	prodl,w,c
 48710  011D00  6ED9               	movwf	fsr2l,c
 48711  011D02  0E00               	movlw	high _pBDTEntryIn
 48712  011D04  D017               	goto	L66
 48713  011D06                     i2l190:
 48714                           
 48715                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 48716  011D06  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48717  011D08  0D02               	mullw	2
 48718  011D0A  0ED3               	movlw	low _pBDTEntryOut
 48719  011D0C  24F3               	addwf	prodl,w,c
 48720  011D0E  6ED9               	movwf	fsr2l,c
 48721  011D10  0E01               	movlw	high _pBDTEntryOut
 48722  011D12  20F4               	addwfc	prodh,w,c
 48723  011D14  6EDA               	movwf	fsr2h,c
 48724  011D16  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 48725  011D1A  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 48726  011D1E  0E04               	movlw	4
 48727  011D20  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 48728  011D22  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 48729  011D24  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 48730  011D26  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 48731  011D28  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48732  011D2A  0D02               	mullw	2
 48733  011D2C  0ED3               	movlw	low _pBDTEntryOut
 48734  011D2E  24F3               	addwf	prodl,w,c
 48735  011D30  6ED9               	movwf	fsr2l,c
 48736  011D32  0E01               	movlw	high _pBDTEntryOut
 48737  011D34                     L66:
 48738  011D34  20F4               	addwfc	prodh,w,c
 48739  011D36  6EDA               	movwf	fsr2h,c
 48740  011D38  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 48741  011D3C  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 48742                           
 48743                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 48744  011D40  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 48745  011D44  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 48746  011D48  0012               	return	
 48747  011D4A                     __end_ofi2_USBTransferOnePacket:
 48748                           	opt stack 0
 48749                           tosu	equ	0xFFF
 48750                           tosh	equ	0xFFE
 48751                           tosl	equ	0xFFD
 48752                           pclatu	equ	0xFFB
 48753                           pclath	equ	0xFFA
 48754                           tblptru	equ	0xFF8
 48755                           tblptrh	equ	0xFF7
 48756                           tblptrl	equ	0xFF6
 48757                           tablat	equ	0xFF5
 48758                           prodh	equ	0xFF4
 48759                           prodl	equ	0xFF3
 48760                           intcon	equ	0xFF2
 48761                           intcon2	equ	0xFF1
 48762                           intcon3	equ	0xFF0
 48763                           indf0	equ	0xFEF
 48764                           postinc0	equ	0xFEE
 48765                           fsr0h	equ	0xFEA
 48766                           fsr0l	equ	0xFE9
 48767                           wreg	equ	0xFE8
 48768                           indf1	equ	0xFE7
 48769                           postinc1	equ	0xFE6
 48770                           postdec1	equ	0xFE5
 48771                           plusw1	equ	0xFE3
 48772                           fsr1h	equ	0xFE2
 48773                           fsr1l	equ	0xFE1
 48774                           indf2	equ	0xFDF
 48775                           postinc2	equ	0xFDE
 48776                           postdec2	equ	0xFDD
 48777                           plusw2	equ	0xFDB
 48778                           fsr2h	equ	0xFDA
 48779                           fsr2l	equ	0xFD9
 48780                           status	equ	0xFD8
 48781                           
 48782 ;; *************** function _USBEnableEndpoint *****************
 48783 ;; Defined at:
 48784 ;;		line 878 in file "usb_device.c"
 48785 ;; Parameters:    Size  Location     Type
 48786 ;;  ep              1    wreg     unsigned char 
 48787 ;;  options         1    8[COMRAM] unsigned char 
 48788 ;; Auto vars:     Size  Location     Type
 48789 ;;  ep              1   11[COMRAM] unsigned char 
 48790 ;;  p               2    9[COMRAM] PTR unsigned char 
 48791 ;;		 -> UEP0(1), 
 48792 ;; Return value:  Size  Location     Type
 48793 ;;                  1    wreg      void 
 48794 ;; Registers used:
 48795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48796 ;; Tracked objects:
 48797 ;;		On entry : 0/0
 48798 ;;		On exit  : 0/0
 48799 ;;		Unchanged: 0/0
 48800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48802 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48805 ;;Total ram usage:        4 bytes
 48806 ;; Hardware stack levels used:    1
 48807 ;; Hardware stack levels required when called:    1
 48808 ;; This function calls:
 48809 ;;		_USBConfigureEndpoint
 48810 ;; This function is called by:
 48811 ;;		_APP_DeviceCustomHIDInitialize
 48812 ;;		_APP_DeviceMSDInitialize
 48813 ;; This function uses a non-reentrant model
 48814 ;;
 48815                           
 48816                           	psect	text244
 48817  015396                     __ptext244:
 48818                           	opt stack 0
 48819  015396                     _USBEnableEndpoint:
 48820                           	opt stack 13
 48821                           
 48822                           ;incstack = 0
 48823                           ;USBEnableEndpoint@ep stored from wreg
 48824  015396  6E39               	movwf	USBEnableEndpoint@ep,c
 48825                           
 48826                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 48827  015398  A436               	btfss	USBEnableEndpoint@options,2,c
 48828  01539A  D005               	goto	i2l181
 48829                           
 48830                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 48831  01539C  0E00               	movlw	0
 48832  01539E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 48833  0153A0  5039               	movf	USBEnableEndpoint@ep,w,c
 48834  0153A2  EC27  F09B         	call	_USBConfigureEndpoint
 48835  0153A6                     i2l181:
 48836                           
 48837                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 48838  0153A6  A236               	btfss	USBEnableEndpoint@options,1,c
 48839  0153A8  D005               	goto	i2l182
 48840                           
 48841                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 48842  0153AA  0E01               	movlw	1
 48843  0153AC  6E2E               	movwf	USBConfigureEndpoint@direction,c
 48844  0153AE  5039               	movf	USBEnableEndpoint@ep,w,c
 48845  0153B0  EC27  F09B         	call	_USBConfigureEndpoint
 48846  0153B4                     i2l182:
 48847                           
 48848                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 48849  0153B4  5039               	movf	USBEnableEndpoint@ep,w,c
 48850  0153B6  0D01               	mullw	1
 48851  0153B8  0E26               	movlw	38
 48852  0153BA  24F3               	addwf	prodl,w,c
 48853  0153BC  6E37               	movwf	USBEnableEndpoint@p,c
 48854  0153BE  0E0F               	movlw	15
 48855  0153C0  20F4               	addwfc	prodh,w,c
 48856  0153C2  6E38               	movwf	USBEnableEndpoint@p+1,c
 48857                           
 48858                           ;usb_device.c: 901: *p = options;
 48859  0153C4  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 48860  0153C8  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 48861  0153CC  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 48862  0153D0  0012               	return		;funcret
 48863  0153D2                     __end_of_USBEnableEndpoint:
 48864                           	opt stack 0
 48865                           tosu	equ	0xFFF
 48866                           tosh	equ	0xFFE
 48867                           tosl	equ	0xFFD
 48868                           pclatu	equ	0xFFB
 48869                           pclath	equ	0xFFA
 48870                           tblptru	equ	0xFF8
 48871                           tblptrh	equ	0xFF7
 48872                           tblptrl	equ	0xFF6
 48873                           tablat	equ	0xFF5
 48874                           prodh	equ	0xFF4
 48875                           prodl	equ	0xFF3
 48876                           intcon	equ	0xFF2
 48877                           intcon2	equ	0xFF1
 48878                           intcon3	equ	0xFF0
 48879                           indf0	equ	0xFEF
 48880                           postinc0	equ	0xFEE
 48881                           fsr0h	equ	0xFEA
 48882                           fsr0l	equ	0xFE9
 48883                           wreg	equ	0xFE8
 48884                           indf1	equ	0xFE7
 48885                           postinc1	equ	0xFE6
 48886                           postdec1	equ	0xFE5
 48887                           plusw1	equ	0xFE3
 48888                           fsr1h	equ	0xFE2
 48889                           fsr1l	equ	0xFE1
 48890                           indf2	equ	0xFDF
 48891                           postinc2	equ	0xFDE
 48892                           postdec2	equ	0xFDD
 48893                           plusw2	equ	0xFDB
 48894                           fsr2h	equ	0xFDA
 48895                           fsr2l	equ	0xFD9
 48896                           status	equ	0xFD8
 48897                           
 48898 ;; *************** function _USBConfigureEndpoint *****************
 48899 ;; Defined at:
 48900 ;;		line 1545 in file "usb_device.c"
 48901 ;; Parameters:    Size  Location     Type
 48902 ;;  EPNum           1    wreg     unsigned char 
 48903 ;;  direction       1    0[COMRAM] unsigned char 
 48904 ;; Auto vars:     Size  Location     Type
 48905 ;;  EPNum           1    5[COMRAM] unsigned char 
 48906 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 48907 ;;		 -> BDT(48), 
 48908 ;; Return value:  Size  Location     Type
 48909 ;;                  1    wreg      void 
 48910 ;; Registers used:
 48911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48912 ;; Tracked objects:
 48913 ;;		On entry : 0/0
 48914 ;;		On exit  : 0/0
 48915 ;;		Unchanged: 0/0
 48916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48917 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48918 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48921 ;;Total ram usage:        8 bytes
 48922 ;; Hardware stack levels used:    1
 48923 ;; This function calls:
 48924 ;;		Nothing
 48925 ;; This function is called by:
 48926 ;;		_USBEnableEndpoint
 48927 ;; This function uses a non-reentrant model
 48928 ;;
 48929                           
 48930                           	psect	text245
 48931  01364E                     __ptext245:
 48932                           	opt stack 0
 48933  01364E                     _USBConfigureEndpoint:
 48934                           	opt stack 13
 48935                           
 48936                           ;incstack = 0
 48937                           ;USBConfigureEndpoint@EPNum stored from wreg
 48938  01364E  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 48939                           
 48940                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 48941  013650  0E00               	movlw	0
 48942  013652  6E34               	movwf	USBConfigureEndpoint@handle,c
 48943  013654  0E0D               	movlw	13
 48944  013656  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 48945                           
 48946                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 48947  013658  502E               	movf	USBConfigureEndpoint@direction,w,c
 48948  01365A  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 48949  01365C  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 48950  01365E  90D8               	bcf	status,0,c
 48951  013660  362F               	rlcf	??_USBConfigureEndpoint,f,c
 48952  013662  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 48953  013664  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 48954  013666  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 48955  013668  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 48956  01366A  90D8               	bcf	status,0,c
 48957  01366C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 48958  01366E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 48959  013670  90D8               	bcf	status,0,c
 48960  013672  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 48961  013674  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 48962  013676  502F               	movf	??_USBConfigureEndpoint,w,c
 48963  013678  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 48964  01367A  5030               	movf	??_USBConfigureEndpoint+1,w,c
 48965  01367C  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 48966  01367E  90D8               	bcf	status,0,c
 48967  013680  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 48968  013682  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 48969  013684  90D8               	bcf	status,0,c
 48970  013686  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 48971  013688  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 48972  01368A  5031               	movf	??_USBConfigureEndpoint+2,w,c
 48973  01368C  2634               	addwf	USBConfigureEndpoint@handle,f,c
 48974  01368E  5032               	movf	??_USBConfigureEndpoint+3,w,c
 48975  013690  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 48976                           
 48977                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 48978  013692  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 48979  013696  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 48980  01369A  9EDF               	bcf	indf2,7,c
 48981                           
 48982                           ;usb_device.c: 1559: if(direction == 0)
 48983  01369C  502E               	movf	USBConfigureEndpoint@direction,w,c
 48984  01369E  A4D8               	btfss	status,2,c
 48985  0136A0  D007               	goto	i2l228
 48986                           
 48987                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 48988  0136A2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 48989  0136A4  0D02               	mullw	2
 48990  0136A6  0ED3               	movlw	low _pBDTEntryOut
 48991  0136A8  24F3               	addwf	prodl,w,c
 48992  0136AA  6ED9               	movwf	fsr2l,c
 48993  0136AC  0E01               	movlw	high _pBDTEntryOut
 48994  0136AE  D006               	goto	L67
 48995  0136B0                     i2l228:
 48996                           
 48997                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 48998  0136B0  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 48999  0136B2  0D02               	mullw	2
 49000  0136B4  0E10               	movlw	low _pBDTEntryIn
 49001  0136B6  24F3               	addwf	prodl,w,c
 49002  0136B8  6ED9               	movwf	fsr2l,c
 49003  0136BA  0E00               	movlw	high _pBDTEntryIn
 49004  0136BC                     L67:
 49005  0136BC  20F4               	addwfc	prodh,w,c
 49006  0136BE  6EDA               	movwf	fsr2h,c
 49007  0136C0  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 49008  0136C4  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 49009                           
 49010                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 49011  0136C8  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 49012  0136CC  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 49013  0136D0  9CDF               	bcf	indf2,6,c
 49014                           
 49015                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 49016  0136D2  EE20 F004          	lfsr	2,4
 49017  0136D6  5034               	movf	USBConfigureEndpoint@handle,w,c
 49018  0136D8  26D9               	addwf	fsr2l,f,c
 49019  0136DA  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 49020  0136DC  22DA               	addwfc	fsr2h,f,c
 49021  0136DE  8CDF               	bsf	indf2,6,c
 49022  0136E0  0012               	return		;funcret
 49023  0136E2                     __end_of_USBConfigureEndpoint:
 49024                           	opt stack 0
 49025                           tosu	equ	0xFFF
 49026                           tosh	equ	0xFFE
 49027                           tosl	equ	0xFFD
 49028                           pclatu	equ	0xFFB
 49029                           pclath	equ	0xFFA
 49030                           tblptru	equ	0xFF8
 49031                           tblptrh	equ	0xFF7
 49032                           tblptrl	equ	0xFF6
 49033                           tablat	equ	0xFF5
 49034                           prodh	equ	0xFF4
 49035                           prodl	equ	0xFF3
 49036                           intcon	equ	0xFF2
 49037                           intcon2	equ	0xFF1
 49038                           intcon3	equ	0xFF0
 49039                           indf0	equ	0xFEF
 49040                           postinc0	equ	0xFEE
 49041                           fsr0h	equ	0xFEA
 49042                           fsr0l	equ	0xFE9
 49043                           wreg	equ	0xFE8
 49044                           indf1	equ	0xFE7
 49045                           postinc1	equ	0xFE6
 49046                           postdec1	equ	0xFE5
 49047                           plusw1	equ	0xFE3
 49048                           fsr1h	equ	0xFE2
 49049                           fsr1l	equ	0xFE1
 49050                           indf2	equ	0xFDF
 49051                           postinc2	equ	0xFDE
 49052                           postdec2	equ	0xFDD
 49053                           plusw2	equ	0xFDB
 49054                           fsr2h	equ	0xFDA
 49055                           fsr2l	equ	0xFD9
 49056                           status	equ	0xFD8
 49057                           
 49058 ;; *************** function _USBCtrlTrfOutHandler *****************
 49059 ;; Defined at:
 49060 ;;		line 2540 in file "usb_device.c"
 49061 ;; Parameters:    Size  Location     Type
 49062 ;;		None
 49063 ;; Auto vars:     Size  Location     Type
 49064 ;;		None
 49065 ;; Return value:  Size  Location     Type
 49066 ;;                  1    wreg      void 
 49067 ;; Registers used:
 49068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49069 ;; Tracked objects:
 49070 ;;		On entry : 0/0
 49071 ;;		On exit  : 0/0
 49072 ;;		Unchanged: 0/0
 49073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49078 ;;Total ram usage:        0 bytes
 49079 ;; Hardware stack levels used:    1
 49080 ;; Hardware stack levels required when called:    2
 49081 ;; This function calls:
 49082 ;;		_USBCtrlTrfRxService
 49083 ;; This function is called by:
 49084 ;;		_USBCtrlEPService
 49085 ;; This function uses a non-reentrant model
 49086 ;;
 49087                           
 49088                           	psect	text246
 49089  0148E6                     __ptext246:
 49090                           	opt stack 0
 49091  0148E6                     _USBCtrlTrfOutHandler:
 49092                           	opt stack 13
 49093                           
 49094                           ;usb_device.c: 2542: if(controlTransferState == 2)
 49095                           
 49096                           ;incstack = 0
 49097  0148E6  0E02               	movlw	2
 49098  0148E8  1829               	xorwf	_controlTransferState,w,c	;volatile
 49099  0148EA  A4D8               	btfss	status,2,c
 49100  0148EC  D003               	goto	i2l334
 49101                           
 49102                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 49103  0148EE  EC91  F08B         	call	_USBCtrlTrfRxService	;wreg free
 49104                           
 49105                           ;usb_device.c: 2545: }
 49106  0148F2  0012               	return	
 49107  0148F4                     i2l334:
 49108                           
 49109                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 49110  0148F4  0E00               	movlw	0
 49111  0148F6  6E29               	movwf	_controlTransferState,c	;volatile
 49112                           
 49113                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 49114  0148F8  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 49115  0148FA  A4D8               	btfss	status,2,c
 49116  0148FC  D01F               	goto	i2l336
 49117                           
 49118                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 49119  0148FE  EE20 F001          	lfsr	2,1
 49120  014902  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49121  014904  26D9               	addwf	fsr2l,f,c
 49122  014906  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49123  014908  22DA               	addwfc	fsr2h,f,c
 49124  01490A  0E08               	movlw	8
 49125  01490C  6EDF               	movwf	indf2,c
 49126                           
 49127                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49128  01490E  EE20 F002          	lfsr	2,2
 49129  014912  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49130  014914  26D9               	addwf	fsr2l,f,c
 49131  014916  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49132  014918  22DA               	addwfc	fsr2h,f,c
 49133  01491A  0E30               	movlw	48
 49134  01491C  6EDE               	movwf	postinc2,c
 49135  01491E  0E0D               	movlw	13
 49136  014920  6EDD               	movwf	postdec2,c
 49137                           
 49138                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49139  014922  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49140  014926  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49141  01492A  0E0C               	movlw	12
 49142  01492C  6EDF               	movwf	indf2,c
 49143                           
 49144                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49145  01492E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49146  014932  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49147  014936  0E00               	movlw	0
 49148  014938  8EDB               	bsf	plusw2,7,c
 49149                           
 49150                           ;usb_device.c: 2563: }
 49151  01493A  0012               	return	
 49152  01493C                     i2l336:
 49153                           
 49154                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 49155  01493C  0E00               	movlw	0
 49156  01493E  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 49157  014940  0012               	return	
 49158  014942                     __end_of_USBCtrlTrfOutHandler:
 49159                           	opt stack 0
 49160                           tosu	equ	0xFFF
 49161                           tosh	equ	0xFFE
 49162                           tosl	equ	0xFFD
 49163                           pclatu	equ	0xFFB
 49164                           pclath	equ	0xFFA
 49165                           tblptru	equ	0xFF8
 49166                           tblptrh	equ	0xFF7
 49167                           tblptrl	equ	0xFF6
 49168                           tablat	equ	0xFF5
 49169                           prodh	equ	0xFF4
 49170                           prodl	equ	0xFF3
 49171                           intcon	equ	0xFF2
 49172                           intcon2	equ	0xFF1
 49173                           intcon3	equ	0xFF0
 49174                           indf0	equ	0xFEF
 49175                           postinc0	equ	0xFEE
 49176                           fsr0h	equ	0xFEA
 49177                           fsr0l	equ	0xFE9
 49178                           wreg	equ	0xFE8
 49179                           indf1	equ	0xFE7
 49180                           postinc1	equ	0xFE6
 49181                           postdec1	equ	0xFE5
 49182                           plusw1	equ	0xFE3
 49183                           fsr1h	equ	0xFE2
 49184                           fsr1l	equ	0xFE1
 49185                           indf2	equ	0xFDF
 49186                           postinc2	equ	0xFDE
 49187                           postdec2	equ	0xFDD
 49188                           plusw2	equ	0xFDB
 49189                           fsr2h	equ	0xFDA
 49190                           fsr2l	equ	0xFD9
 49191                           status	equ	0xFD8
 49192                           
 49193 ;; *************** function _USBCtrlTrfRxService *****************
 49194 ;; Defined at:
 49195 ;;		line 1854 in file "usb_device.c"
 49196 ;; Parameters:    Size  Location     Type
 49197 ;;		None
 49198 ;; Auto vars:     Size  Location     Type
 49199 ;;  byteToRead      1    1[COMRAM] unsigned char 
 49200 ;;  i               1    0[COMRAM] unsigned char 
 49201 ;; Return value:  Size  Location     Type
 49202 ;;                  1    wreg      void 
 49203 ;; Registers used:
 49204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49205 ;; Tracked objects:
 49206 ;;		On entry : 0/0
 49207 ;;		On exit  : 0/0
 49208 ;;		Unchanged: 0/0
 49209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49214 ;;Total ram usage:        2 bytes
 49215 ;; Hardware stack levels used:    1
 49216 ;; Hardware stack levels required when called:    1
 49217 ;; This function calls:
 49218 ;;		_USBCtrlEPAllowStatusStage
 49219 ;; This function is called by:
 49220 ;;		_USBCtrlTrfOutHandler
 49221 ;; This function uses a non-reentrant model
 49222 ;;
 49223                           
 49224                           	psect	text247
 49225  011722                     __ptext247:
 49226                           	opt stack 0
 49227  011722                     _USBCtrlTrfRxService:
 49228                           	opt stack 13
 49229                           
 49230                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 49231                           
 49232                           ;incstack = 0
 49233  011722  EE20 F001          	lfsr	2,1
 49234  011726  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 49235  011728  26D9               	addwf	fsr2l,f,c
 49236  01172A  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49237  01172C  22DA               	addwfc	fsr2h,f,c
 49238  01172E  50DF               	movf	indf2,w,c
 49239  011730  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 49240                           
 49241                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 49242  011732  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49243  011734  5C05               	subwf	_outPipes+4,w,c	;volatile
 49244  011736  0E00               	movlw	0
 49245  011738  5806               	subwfb	_outPipes+5,w,c	;volatile
 49246  01173A  A0D8               	btfss	status,0,c
 49247                           
 49248                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 49249  01173C  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 49250                           
 49251                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 49252  011740  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49253  011742  5E05               	subwf	_outPipes+4,f,c	;volatile
 49254  011744  0E00               	movlw	0
 49255  011746  5A06               	subwfb	_outPipes+5,f,c	;volatile
 49256                           
 49257                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 49258  011748  0E00               	movlw	0
 49259  01174A  6E2E               	movwf	USBCtrlTrfRxService@i,c
 49260  01174C  D011               	goto	i2l262
 49261  01174E                     
 49262                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 49263  01174E  502E               	movf	USBCtrlTrfRxService@i,w,c
 49264  011750  0D01               	mullw	1
 49265  011752  0E38               	movlw	56
 49266  011754  24F3               	addwf	prodl,w,c
 49267  011756  6ED9               	movwf	fsr2l,c
 49268  011758  0E0D               	movlw	13
 49269  01175A  20F4               	addwfc	prodh,w,c
 49270  01175C  6EDA               	movwf	fsr2h,c
 49271  01175E  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 49272  011762  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 49273  011766  CFDF FFE7          	movff	indf2,indf1
 49274  01176A  4A01               	infsnz	_outPipes,f,c	;volatile
 49275  01176C  2A02               	incf	_outPipes+1,f,c	;volatile
 49276  01176E  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 49277  011770                     i2l262:
 49278  011770  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49279  011772  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 49280  011774  A0D8               	btfss	status,0,c
 49281  011776  D7EB               	goto	i2l263
 49282                           
 49283                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 49284  011778  5005               	movf	_outPipes+4,w,c	;volatile
 49285  01177A  1006               	iorwf	_outPipes+5,w,c	;volatile
 49286  01177C  B4D8               	btfsc	status,2,c
 49287  01177E  D032               	goto	i2l265
 49288                           
 49289                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 49290  011780  EE20 F001          	lfsr	2,1
 49291  011784  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49292  011786  26D9               	addwf	fsr2l,f,c
 49293  011788  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49294  01178A  22DA               	addwfc	fsr2h,f,c
 49295  01178C  0E08               	movlw	8
 49296  01178E  6EDF               	movwf	indf2,c
 49297                           
 49298                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49299  011790  EE20 F002          	lfsr	2,2
 49300  011794  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49301  011796  26D9               	addwf	fsr2l,f,c
 49302  011798  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49303  01179A  22DA               	addwfc	fsr2h,f,c
 49304  01179C  0E38               	movlw	56
 49305  01179E  6EDE               	movwf	postinc2,c
 49306  0117A0  0E0D               	movlw	13
 49307  0117A2  6EDD               	movwf	postdec2,c
 49308                           
 49309                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 49310  0117A4  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49311  0117A8  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49312  0117AC  BCDF               	btfsc	indf2,6,c
 49313  0117AE  D00D               	goto	i2l266
 49314                           
 49315                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 49316  0117B0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49317  0117B4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49318  0117B8  0E48               	movlw	72
 49319  0117BA  6EDF               	movwf	indf2,c
 49320                           
 49321                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49322  0117BC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49323  0117C0  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49324  0117C4  0E00               	movlw	0
 49325  0117C6  8EDB               	bsf	plusw2,7,c
 49326                           
 49327                           ;usb_device.c: 1891: }
 49328  0117C8  0012               	return	
 49329  0117CA                     i2l266:
 49330                           
 49331                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 49332  0117CA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49333  0117CE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49334  0117D2  0E08               	movlw	8
 49335  0117D4  6EDF               	movwf	indf2,c
 49336                           
 49337                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49338  0117D6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49339  0117DA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49340  0117DE  0E00               	movlw	0
 49341  0117E0  8EDB               	bsf	plusw2,7,c
 49342                           
 49343                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 49344  0117E2  0012               	return	
 49345  0117E4                     i2l265:
 49346                           
 49347                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49348  0117E4  EE20 F001          	lfsr	2,1
 49349  0117E8  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49350  0117EA  26D9               	addwf	fsr2l,f,c
 49351  0117EC  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49352  0117EE  22DA               	addwfc	fsr2h,f,c
 49353  0117F0  0E08               	movlw	8
 49354  0117F2  6EDF               	movwf	indf2,c
 49355                           
 49356                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49357  0117F4  EE20 F002          	lfsr	2,2
 49358  0117F8  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49359  0117FA  26D9               	addwf	fsr2l,f,c
 49360  0117FC  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49361  0117FE  22DA               	addwfc	fsr2h,f,c
 49362  011800  0E30               	movlw	48
 49363  011802  6EDE               	movwf	postinc2,c
 49364  011804  0E0D               	movlw	13
 49365  011806  6EDD               	movwf	postdec2,c
 49366                           
 49367                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49368  011808  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49369  01180C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49370  011810  0E04               	movlw	4
 49371  011812  6EDF               	movwf	indf2,c
 49372                           
 49373                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49374  011814  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49375  011818  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49376  01181C  0E00               	movlw	0
 49377  01181E  8EDB               	bsf	plusw2,7,c
 49378                           
 49379                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 49380                           
 49381                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 49382  011820  9E04               	bcf	_outPipes+3,7,c	;volatile
 49383                           
 49384                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 49385  011822  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 49386  011824  A4D8               	btfss	status,2,c
 49387  011826  0012               	return	
 49388                           
 49389                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 49390  011828  ECED  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49391  01182C  0012               	return	
 49392  01182E                     __end_of_USBCtrlTrfRxService:
 49393                           	opt stack 0
 49394                           tosu	equ	0xFFF
 49395                           tosh	equ	0xFFE
 49396                           tosl	equ	0xFFD
 49397                           pclatu	equ	0xFFB
 49398                           pclath	equ	0xFFA
 49399                           tblptru	equ	0xFF8
 49400                           tblptrh	equ	0xFF7
 49401                           tblptrl	equ	0xFF6
 49402                           tablat	equ	0xFF5
 49403                           prodh	equ	0xFF4
 49404                           prodl	equ	0xFF3
 49405                           intcon	equ	0xFF2
 49406                           intcon2	equ	0xFF1
 49407                           intcon3	equ	0xFF0
 49408                           indf0	equ	0xFEF
 49409                           postinc0	equ	0xFEE
 49410                           fsr0h	equ	0xFEA
 49411                           fsr0l	equ	0xFE9
 49412                           wreg	equ	0xFE8
 49413                           indf1	equ	0xFE7
 49414                           postinc1	equ	0xFE6
 49415                           postdec1	equ	0xFE5
 49416                           plusw1	equ	0xFE3
 49417                           fsr1h	equ	0xFE2
 49418                           fsr1l	equ	0xFE1
 49419                           indf2	equ	0xFDF
 49420                           postinc2	equ	0xFDE
 49421                           postdec2	equ	0xFDD
 49422                           plusw2	equ	0xFDB
 49423                           fsr2h	equ	0xFDA
 49424                           fsr2l	equ	0xFD9
 49425                           status	equ	0xFD8
 49426                           
 49427 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 49428 ;; Defined at:
 49429 ;;		line 1418 in file "usb_device.c"
 49430 ;; Parameters:    Size  Location     Type
 49431 ;;		None
 49432 ;; Auto vars:     Size  Location     Type
 49433 ;;		None
 49434 ;; Return value:  Size  Location     Type
 49435 ;;                  1    wreg      void 
 49436 ;; Registers used:
 49437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49438 ;; Tracked objects:
 49439 ;;		On entry : 0/0
 49440 ;;		On exit  : 0/0
 49441 ;;		Unchanged: 0/0
 49442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49447 ;;Total ram usage:        0 bytes
 49448 ;; Hardware stack levels used:    1
 49449 ;; This function calls:
 49450 ;;		Nothing
 49451 ;; This function is called by:
 49452 ;;		_USBDeviceTasks
 49453 ;;		_USBCtrlEPServiceComplete
 49454 ;;		_USBCtrlTrfRxService
 49455 ;; This function uses a non-reentrant model
 49456 ;;
 49457                           
 49458                           	psect	text248
 49459  012DDA                     __ptext248:
 49460                           	opt stack 0
 49461  012DDA                     _USBCtrlEPAllowStatusStage:
 49462                           	opt stack 13
 49463                           
 49464                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 49465                           
 49466                           ;incstack = 0
 49467  012DDA  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 49468  012DDC  A4D8               	btfss	status,2,c
 49469  012DDE  0012               	return	
 49470                           
 49471                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 49472  012DE0  0E01               	movlw	1
 49473  012DE2  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 49474                           
 49475                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 49476  012DE4  5021               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 49477  012DE6  A4D8               	btfss	status,2,c
 49478  012DE8  0012               	return	
 49479                           
 49480                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 49481  012DEA  0E01               	movlw	1
 49482  012DEC  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 49483                           
 49484                           ;usb_device.c: 1434: if(controlTransferState == 2)
 49485  012DEE  0E02               	movlw	2
 49486  012DF0  1829               	xorwf	_controlTransferState,w,c	;volatile
 49487  012DF2  A4D8               	btfss	status,2,c
 49488  012DF4  D015               	goto	i2l216
 49489                           
 49490                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 49491  012DF6  EE20 F001          	lfsr	2,1
 49492  012DFA  5010               	movf	_pBDTEntryIn,w,c
 49493  012DFC  26D9               	addwf	fsr2l,f,c
 49494  012DFE  5011               	movf	_pBDTEntryIn+1,w,c
 49495  012E00  22DA               	addwfc	fsr2h,f,c
 49496  012E02  0E00               	movlw	0
 49497  012E04  6EDF               	movwf	indf2,c
 49498                           
 49499                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49500  012E06  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49501  012E0A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49502  012E0E  0E48               	movlw	72
 49503  012E10  6EDF               	movwf	indf2,c
 49504                           
 49505                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49506  012E12  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49507  012E16  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49508  012E1A  0E00               	movlw	0
 49509  012E1C  8EDB               	bsf	plusw2,7,c
 49510                           
 49511                           ;usb_device.c: 1439: }
 49512  012E1E  0012               	return	
 49513  012E20                     i2l216:
 49514                           
 49515                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 49516  012E20  0429               	decf	_controlTransferState,w,c	;volatile
 49517  012E22  A4D8               	btfss	status,2,c
 49518  012E24  0012               	return	
 49519                           
 49520                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 49521  012E26  0E00               	movlw	0
 49522  012E28  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 49523                           
 49524                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 49525  012E2A  EE20 F001          	lfsr	2,1
 49526  012E2E  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 49527  012E30  26D9               	addwf	fsr2l,f,c
 49528  012E32  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49529  012E34  22DA               	addwfc	fsr2h,f,c
 49530  012E36  0E08               	movlw	8
 49531  012E38  6EDF               	movwf	indf2,c
 49532                           
 49533                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 49534  012E3A  EE20 F002          	lfsr	2,2
 49535  012E3E  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 49536  012E40  26D9               	addwf	fsr2l,f,c
 49537  012E42  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49538  012E44  22DA               	addwfc	fsr2h,f,c
 49539  012E46  0E30               	movlw	48
 49540  012E48  6EDE               	movwf	postinc2,c
 49541  012E4A  0E0D               	movlw	13
 49542  012E4C  6EDD               	movwf	postdec2,c
 49543                           
 49544                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 49545  012E4E  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49546  012E52  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49547  012E56  0E04               	movlw	4
 49548  012E58  6EDF               	movwf	indf2,c
 49549                           
 49550                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 49551  012E5A  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49552  012E5E  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49553  012E62  0E00               	movlw	0
 49554  012E64  8EDB               	bsf	plusw2,7,c
 49555                           
 49556                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 49557  012E66  0E01               	movlw	1
 49558  012E68  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 49559                           
 49560                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 49561  012E6A  EE20 F001          	lfsr	2,1
 49562  012E6E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49563  012E70  26D9               	addwf	fsr2l,f,c
 49564  012E72  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49565  012E74  22DA               	addwfc	fsr2h,f,c
 49566  012E76  0E08               	movlw	8
 49567  012E78  6EDF               	movwf	indf2,c
 49568                           
 49569                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49570  012E7A  EE20 F002          	lfsr	2,2
 49571  012E7E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49572  012E80  26D9               	addwf	fsr2l,f,c
 49573  012E82  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49574  012E84  22DA               	addwfc	fsr2h,f,c
 49575  012E86  0E30               	movlw	48
 49576  012E88  6EDE               	movwf	postinc2,c
 49577  012E8A  0E0D               	movlw	13
 49578  012E8C  6EDD               	movwf	postdec2,c
 49579                           
 49580                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 49581  012E8E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49582  012E92  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49583  012E96  0E80               	movlw	128
 49584  012E98  6EDF               	movwf	indf2,c
 49585  012E9A  0012               	return	
 49586  012E9C                     __end_of_USBCtrlEPAllowStatusStage:
 49587                           	opt stack 0
 49588                           tosu	equ	0xFFF
 49589                           tosh	equ	0xFFE
 49590                           tosl	equ	0xFFD
 49591                           pclatu	equ	0xFFB
 49592                           pclath	equ	0xFFA
 49593                           tblptru	equ	0xFF8
 49594                           tblptrh	equ	0xFF7
 49595                           tblptrl	equ	0xFF6
 49596                           tablat	equ	0xFF5
 49597                           prodh	equ	0xFF4
 49598                           prodl	equ	0xFF3
 49599                           intcon	equ	0xFF2
 49600                           intcon2	equ	0xFF1
 49601                           intcon3	equ	0xFF0
 49602                           indf0	equ	0xFEF
 49603                           postinc0	equ	0xFEE
 49604                           fsr0h	equ	0xFEA
 49605                           fsr0l	equ	0xFE9
 49606                           wreg	equ	0xFE8
 49607                           indf1	equ	0xFE7
 49608                           postinc1	equ	0xFE6
 49609                           postdec1	equ	0xFE5
 49610                           plusw1	equ	0xFE3
 49611                           fsr1h	equ	0xFE2
 49612                           fsr1l	equ	0xFE1
 49613                           indf2	equ	0xFDF
 49614                           postinc2	equ	0xFDE
 49615                           postdec2	equ	0xFDD
 49616                           plusw2	equ	0xFDB
 49617                           fsr2h	equ	0xFDA
 49618                           fsr2l	equ	0xFD9
 49619                           status	equ	0xFD8
 49620                           
 49621 ;; *************** function _USBCtrlTrfInHandler *****************
 49622 ;; Defined at:
 49623 ;;		line 2594 in file "usb_device.c"
 49624 ;; Parameters:    Size  Location     Type
 49625 ;;		None
 49626 ;; Auto vars:     Size  Location     Type
 49627 ;;  lastDTS         1    1[COMRAM] unsigned char 
 49628 ;; Return value:  Size  Location     Type
 49629 ;;                  1    wreg      void 
 49630 ;; Registers used:
 49631 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49632 ;; Tracked objects:
 49633 ;;		On entry : 0/0
 49634 ;;		On exit  : 0/0
 49635 ;;		Unchanged: 0/0
 49636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49641 ;;Total ram usage:        1 bytes
 49642 ;; Hardware stack levels used:    1
 49643 ;; Hardware stack levels required when called:    1
 49644 ;; This function calls:
 49645 ;;		_USBCtrlTrfTxService
 49646 ;; This function is called by:
 49647 ;;		_USBCtrlEPService
 49648 ;; This function uses a non-reentrant model
 49649 ;;
 49650                           
 49651                           	psect	text249
 49652  012F5A                     __ptext249:
 49653                           	opt stack 0
 49654  012F5A                     _USBCtrlTrfInHandler:
 49655                           	opt stack 14
 49656                           
 49657                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 49658                           
 49659                           ;incstack = 0
 49660  012F5A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49661  012F5E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49662  012F62  0E00               	movlw	0
 49663  012F64  BCDF               	btfsc	indf2,6,c
 49664  012F66  0E01               	movlw	1
 49665  012F68  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 49666                           
 49667                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49668  012F6A  0E04               	movlw	4
 49669  012F6C  1810               	xorwf	_pBDTEntryIn,w,c
 49670  012F6E  6E10               	movwf	_pBDTEntryIn,c
 49671  012F70  5011               	movf	_pBDTEntryIn+1,w,c
 49672  012F72  6E11               	movwf	_pBDTEntryIn+1,c
 49673                           
 49674                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 49675  012F74  0E08               	movlw	8
 49676  012F76  182B               	xorwf	_USBDeviceState,w,c	;volatile
 49677  012F78  A4D8               	btfss	status,2,c
 49678  012F7A  D00C               	goto	i2l343
 49679                           
 49680                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 49681  012F7C  010D               	movlb	13	; () banked
 49682  012F7E  5132               	movf	50,w,b	;volatile
 49683  012F80  0B7F               	andlw	127
 49684  012F82  010F               	movlb	15	; () banked
 49685  012F84  6F38               	movwf	56,b	;volatile
 49686                           
 49687                           ; BSR set to: 15
 49688                           ;usb_device.c: 2609: if(UADDR != 0u)
 49689  012F86  5138               	movf	56,w,b	;volatile
 49690  012F88  B4D8               	btfsc	status,2,c
 49691  012F8A  D002               	goto	i2l342
 49692                           
 49693                           ; BSR set to: 15
 49694                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 49695  012F8C  0E10               	movlw	16
 49696  012F8E  D001               	goto	L68
 49697  012F90                     i2l342:
 49698                           
 49699                           ; BSR set to: 15
 49700                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 49701                           
 49702                           ; BSR set to: 15
 49703  012F90  0E04               	movlw	4
 49704  012F92                     L68:
 49705  012F92  6E2B               	movwf	_USBDeviceState,c	;volatile
 49706  012F94                     i2l343:
 49707                           
 49708                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 49709                           
 49710                           ; BSR set to: 15
 49711                           
 49712                           ; BSR set to: 15
 49713  012F94  0429               	decf	_controlTransferState,w,c	;volatile
 49714  012F96  A4D8               	btfss	status,2,c
 49715  012F98  D03A               	goto	i2l344
 49716                           
 49717                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 49718  012F9A  EE20 F002          	lfsr	2,2
 49719  012F9E  5010               	movf	_pBDTEntryIn,w,c
 49720  012FA0  26D9               	addwf	fsr2l,f,c
 49721  012FA2  5011               	movf	_pBDTEntryIn+1,w,c
 49722  012FA4  22DA               	addwfc	fsr2h,f,c
 49723  012FA6  0E38               	movlw	56
 49724  012FA8  6EDE               	movwf	postinc2,c
 49725  012FAA  0E0D               	movlw	13
 49726  012FAC  6EDD               	movwf	postdec2,c
 49727                           
 49728                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 49729  012FAE  ECF4  F094         	call	_USBCtrlTrfTxService	;wreg free
 49730                           
 49731                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 49732  012FB2  0E02               	movlw	2
 49733  012FB4  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 49734  012FB6  A4D8               	btfss	status,2,c
 49735  012FB8  D00D               	goto	i2l345
 49736                           
 49737                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 49738  012FBA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49739  012FBE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49740  012FC2  0E04               	movlw	4
 49741  012FC4  6EDF               	movwf	indf2,c
 49742                           
 49743                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49744  012FC6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49745  012FCA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49746  012FCE  0E00               	movlw	0
 49747  012FD0  8EDB               	bsf	plusw2,7,c
 49748                           
 49749                           ;usb_device.c: 2635: }
 49750  012FD2  0012               	return	
 49751  012FD4                     i2l345:
 49752                           
 49753                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 49754  012FD4  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 49755  012FD6  A4D8               	btfss	status,2,c
 49756  012FD8  D00D               	goto	i2l347
 49757                           
 49758                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 49759  012FDA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49760  012FDE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49761  012FE2  0E48               	movlw	72
 49762  012FE4  6EDF               	movwf	indf2,c
 49763                           
 49764                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49765  012FE6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49766  012FEA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49767  012FEE  0E00               	movlw	0
 49768  012FF0  8EDB               	bsf	plusw2,7,c
 49769                           
 49770                           ;usb_device.c: 2642: }
 49771  012FF2  0012               	return	
 49772  012FF4                     i2l347:
 49773                           
 49774                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 49775  012FF4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49776  012FF8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49777  012FFC  0E08               	movlw	8
 49778  012FFE  6EDF               	movwf	indf2,c
 49779                           
 49780                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49781  013000  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49782  013004  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49783  013008  0E00               	movlw	0
 49784  01300A  8EDB               	bsf	plusw2,7,c
 49785                           
 49786                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 49787  01300C  0012               	return	
 49788  01300E                     i2l344:
 49789                           
 49790                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 49791  01300E  BE04               	btfsc	_outPipes+3,7,c	;volatile
 49792                           
 49793                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 49794                           
 49795                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 49796  013010  9E04               	bcf	_outPipes+3,7,c	;volatile
 49797                           
 49798                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 49799  013012  0E00               	movlw	0
 49800  013014  6E29               	movwf	_controlTransferState,c	;volatile
 49801  013016  0012               	return	
 49802  013018                     __end_of_USBCtrlTrfInHandler:
 49803                           	opt stack 0
 49804                           tosu	equ	0xFFF
 49805                           tosh	equ	0xFFE
 49806                           tosl	equ	0xFFD
 49807                           pclatu	equ	0xFFB
 49808                           pclath	equ	0xFFA
 49809                           tblptru	equ	0xFF8
 49810                           tblptrh	equ	0xFF7
 49811                           tblptrl	equ	0xFF6
 49812                           tablat	equ	0xFF5
 49813                           prodh	equ	0xFF4
 49814                           prodl	equ	0xFF3
 49815                           intcon	equ	0xFF2
 49816                           intcon2	equ	0xFF1
 49817                           intcon3	equ	0xFF0
 49818                           indf0	equ	0xFEF
 49819                           postinc0	equ	0xFEE
 49820                           fsr0h	equ	0xFEA
 49821                           fsr0l	equ	0xFE9
 49822                           wreg	equ	0xFE8
 49823                           indf1	equ	0xFE7
 49824                           postinc1	equ	0xFE6
 49825                           postdec1	equ	0xFE5
 49826                           plusw1	equ	0xFE3
 49827                           fsr1h	equ	0xFE2
 49828                           fsr1l	equ	0xFE1
 49829                           indf2	equ	0xFDF
 49830                           postinc2	equ	0xFDE
 49831                           postdec2	equ	0xFDD
 49832                           plusw2	equ	0xFDB
 49833                           fsr2h	equ	0xFDA
 49834                           fsr2l	equ	0xFD9
 49835                           status	equ	0xFD8
 49836                           
 49837 ;; *************** function _USBCtrlTrfTxService *****************
 49838 ;; Defined at:
 49839 ;;		line 1773 in file "usb_device.c"
 49840 ;; Parameters:    Size  Location     Type
 49841 ;;		None
 49842 ;; Auto vars:     Size  Location     Type
 49843 ;;  byteToSend      1    0[COMRAM] unsigned char 
 49844 ;; Return value:  Size  Location     Type
 49845 ;;                  1    wreg      void 
 49846 ;; Registers used:
 49847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49848 ;; Tracked objects:
 49849 ;;		On entry : 0/0
 49850 ;;		On exit  : 0/0
 49851 ;;		Unchanged: 0/0
 49852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49857 ;;Total ram usage:        1 bytes
 49858 ;; Hardware stack levels used:    1
 49859 ;; This function calls:
 49860 ;;		Nothing
 49861 ;; This function is called by:
 49862 ;;		_USBCtrlEPAllowDataStage
 49863 ;;		_USBCtrlTrfInHandler
 49864 ;; This function uses a non-reentrant model
 49865 ;;
 49866                           
 49867                           	psect	text250
 49868  0129E8                     __ptext250:
 49869                           	opt stack 0
 49870  0129E8                     _USBCtrlTrfTxService:
 49871                           	opt stack 12
 49872                           
 49873                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 49874                           
 49875                           ;incstack = 0
 49876  0129E8  0E08               	movlw	8
 49877  0129EA  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 49878                           
 49879                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 49880  0129EC  500F               	movf	_inPipes+5,w,c	;volatile
 49881  0129EE  E110               	bnz	i2l11923
 49882  0129F0  0E08               	movlw	8
 49883  0129F2  5C0E               	subwf	_inPipes+4,w,c	;volatile
 49884  0129F4  B0D8               	btfsc	status,0,c
 49885  0129F6  D00C               	goto	i2l249
 49886                           
 49887                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 49888  0129F8  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 49889                           
 49890                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 49891  0129FC  502A               	movf	_shortPacketStatus,w,c	;volatile
 49892  0129FE  A4D8               	btfss	status,2,c
 49893  012A00  D002               	goto	i2l247
 49894                           
 49895                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 49896  012A02  0E01               	movlw	1
 49897  012A04  D004               	goto	L69
 49898  012A06                     i2l247:
 49899                           
 49900                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 49901  012A06  042A               	decf	_shortPacketStatus,w,c	;volatile
 49902  012A08  A4D8               	btfss	status,2,c
 49903  012A0A  D002               	goto	i2l249
 49904                           
 49905                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 49906  012A0C  0E02               	movlw	2
 49907  012A0E                     L69:
 49908  012A0E  6E2A               	movwf	_shortPacketStatus,c	;volatile
 49909  012A10                     i2l249:
 49910  012A10                     i2l11923:
 49911                           
 49912                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 49913  012A10  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 49914  012A12  5E0E               	subwf	_inPipes+4,f,c	;volatile
 49915  012A14  0E00               	movlw	0
 49916  012A16  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 49917                           
 49918                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 49919  012A18  EE20 F001          	lfsr	2,1
 49920  012A1C  5010               	movf	_pBDTEntryIn,w,c
 49921  012A1E  26D9               	addwf	fsr2l,f,c
 49922  012A20  5011               	movf	_pBDTEntryIn+1,w,c
 49923  012A22  22DA               	addwfc	fsr2h,f,c
 49924  012A24  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 49925                           
 49926                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 49927  012A28  0E38               	movlw	56
 49928  012A2A  0101               	movlb	1	; () banked
 49929  012A2C  6FED               	movwf	_pDst& (0+255),b
 49930  012A2E  0E0D               	movlw	13
 49931  012A30  6FEE               	movwf	(_pDst+1)& (0+255),b
 49932                           
 49933                           ; BSR set to: 1
 49934                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 49935  012A32  A00D               	btfss	_inPipes+3,0,c	;volatile
 49936  012A34  D01D               	goto	i2l251
 49937  012A36  D03C               	goto	i2l255
 49938  012A38                     
 49939                           ; BSR set to: 1
 49940                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 49941                           
 49942                           ; BSR set to: 1
 49943  012A38  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 49944  012A3C  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 49945  012A40  0E00               	movlw	low (__mediumconst shr (0+16))
 49946  012A42  6EF8               	movwf	tblptru,c
 49947  012A44  C1ED  FFD9         	movff	_pDst,fsr2l
 49948  012A48  C1EE  FFDA         	movff	_pDst+1,fsr2h
 49949  012A4C  0E0E               	movlw	(high __ramtop+-1)
 49950  012A4E  64F7               	cpfsgt	tblptrh,c
 49951  012A50  D003               	bra	i2u911_47
 49952  012A52  0008               	tblrd		*
 49953  012A54  50F5               	movf	tablat,w,c
 49954  012A56  D005               	bra	i2u911_40
 49955  012A58                     i2u911_47:
 49956  012A58  CFF6 FFE9          	movff	tblptrl,fsr0l
 49957  012A5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 49958  012A60  50EF               	movf	indf0,w,c
 49959  012A62                     i2u911_40:
 49960  012A62  6EDF               	movwf	indf2,c
 49961  012A64  4A0A               	infsnz	_inPipes,f,c	;volatile
 49962  012A66  2A0B               	incf	_inPipes+1,f,c	;volatile
 49963  012A68  0101               	movlb	1	; () banked
 49964  012A6A  4BED               	infsnz	_pDst& (0+255),f,b
 49965  012A6C  2BEE               	incf	(_pDst+1)& (0+255),f,b
 49966                           
 49967                           ; BSR set to: 1
 49968                           ;usb_device.c: 1816: byteToSend--;
 49969  012A6E  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 49970  012A70                     i2l251:
 49971                           
 49972                           ; BSR set to: 1
 49973                           
 49974                           ; BSR set to: 1
 49975  012A70  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 49976  012A72  B4D8               	btfsc	status,2,c
 49977  012A74  0012               	return	
 49978  012A76  D7E0               	goto	i2l252
 49979  012A78                     
 49980                           ; BSR set to: 1
 49981                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 49982                           
 49983                           ; BSR set to: 1
 49984  012A78  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 49985  012A7C  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 49986  012A80  0E00               	movlw	low (__mediumconst shr (0+16))
 49987  012A82  6EF8               	movwf	tblptru,c
 49988  012A84  C1ED  FFD9         	movff	_pDst,fsr2l
 49989  012A88  C1EE  FFDA         	movff	_pDst+1,fsr2h
 49990  012A8C  0E0E               	movlw	(high __ramtop+-1)
 49991  012A8E  64F7               	cpfsgt	tblptrh,c
 49992  012A90  D003               	bra	i2u913_47
 49993  012A92  0008               	tblrd		*
 49994  012A94  50F5               	movf	tablat,w,c
 49995  012A96  D005               	bra	i2u913_40
 49996  012A98                     i2u913_47:
 49997  012A98  CFF6 FFE9          	movff	tblptrl,fsr0l
 49998  012A9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 49999  012AA0  50EF               	movf	indf0,w,c
 50000  012AA2                     i2u913_40:
 50001  012AA2  6EDF               	movwf	indf2,c
 50002  012AA4  4A0A               	infsnz	_inPipes,f,c	;volatile
 50003  012AA6  2A0B               	incf	_inPipes+1,f,c	;volatile
 50004  012AA8  0101               	movlb	1	; () banked
 50005  012AAA  4BED               	infsnz	_pDst& (0+255),f,b
 50006  012AAC  2BEE               	incf	(_pDst+1)& (0+255),f,b
 50007                           
 50008                           ; BSR set to: 1
 50009                           ;usb_device.c: 1824: byteToSend--;
 50010  012AAE  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 50011  012AB0                     i2l255:
 50012                           
 50013                           ; BSR set to: 1
 50014                           
 50015                           ; BSR set to: 1
 50016  012AB0  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 50017  012AB2  B4D8               	btfsc	status,2,c
 50018  012AB4  0012               	return	
 50019  012AB6  D7E0               	goto	i2l256
 50020  012AB8                     __end_of_USBCtrlTrfTxService:
 50021                           	opt stack 0
 50022                           tosu	equ	0xFFF
 50023                           tosh	equ	0xFFE
 50024                           tosl	equ	0xFFD
 50025                           pclatu	equ	0xFFB
 50026                           pclath	equ	0xFFA
 50027                           tblptru	equ	0xFF8
 50028                           tblptrh	equ	0xFF7
 50029                           tblptrl	equ	0xFF6
 50030                           tablat	equ	0xFF5
 50031                           prodh	equ	0xFF4
 50032                           prodl	equ	0xFF3
 50033                           intcon	equ	0xFF2
 50034                           intcon2	equ	0xFF1
 50035                           intcon3	equ	0xFF0
 50036                           indf0	equ	0xFEF
 50037                           postinc0	equ	0xFEE
 50038                           fsr0h	equ	0xFEA
 50039                           fsr0l	equ	0xFE9
 50040                           wreg	equ	0xFE8
 50041                           indf1	equ	0xFE7
 50042                           postinc1	equ	0xFE6
 50043                           postdec1	equ	0xFE5
 50044                           plusw1	equ	0xFE3
 50045                           fsr1h	equ	0xFE2
 50046                           fsr1l	equ	0xFE1
 50047                           indf2	equ	0xFDF
 50048                           postinc2	equ	0xFDE
 50049                           postdec2	equ	0xFDD
 50050                           plusw2	equ	0xFDB
 50051                           fsr2h	equ	0xFDA
 50052                           fsr2l	equ	0xFD9
 50053                           status	equ	0xFD8
 50054                           tosu	equ	0xFFF
 50055                           tosh	equ	0xFFE
 50056                           tosl	equ	0xFFD
 50057                           pclatu	equ	0xFFB
 50058                           pclath	equ	0xFFA
 50059                           tblptru	equ	0xFF8
 50060                           tblptrh	equ	0xFF7
 50061                           tblptrl	equ	0xFF6
 50062                           tablat	equ	0xFF5
 50063                           prodh	equ	0xFF4
 50064                           prodl	equ	0xFF3
 50065                           intcon	equ	0xFF2
 50066                           intcon2	equ	0xFF1
 50067                           intcon3	equ	0xFF0
 50068                           indf0	equ	0xFEF
 50069                           postinc0	equ	0xFEE
 50070                           fsr0h	equ	0xFEA
 50071                           fsr0l	equ	0xFE9
 50072                           wreg	equ	0xFE8
 50073                           indf1	equ	0xFE7
 50074                           postinc1	equ	0xFE6
 50075                           postdec1	equ	0xFE5
 50076                           plusw1	equ	0xFE3
 50077                           fsr1h	equ	0xFE2
 50078                           fsr1l	equ	0xFE1
 50079                           indf2	equ	0xFDF
 50080                           postinc2	equ	0xFDE
 50081                           postdec2	equ	0xFDD
 50082                           plusw2	equ	0xFDB
 50083                           fsr2h	equ	0xFDA
 50084                           fsr2l	equ	0xFD9
 50085                           status	equ	0xFD8
 50086                           
 50087                           	psect	text251
 50088  000000                     __ptext251:
 50089                           	opt stack 0
 50090                           tosu	equ	0xFFF
 50091                           tosh	equ	0xFFE
 50092                           tosl	equ	0xFFD
 50093                           pclatu	equ	0xFFB
 50094                           pclath	equ	0xFFA
 50095                           tblptru	equ	0xFF8
 50096                           tblptrh	equ	0xFF7
 50097                           tblptrl	equ	0xFF6
 50098                           tablat	equ	0xFF5
 50099                           prodh	equ	0xFF4
 50100                           prodl	equ	0xFF3
 50101                           intcon	equ	0xFF2
 50102                           intcon2	equ	0xFF1
 50103                           intcon3	equ	0xFF0
 50104                           indf0	equ	0xFEF
 50105                           postinc0	equ	0xFEE
 50106                           fsr0h	equ	0xFEA
 50107                           fsr0l	equ	0xFE9
 50108                           wreg	equ	0xFE8
 50109                           indf1	equ	0xFE7
 50110                           postinc1	equ	0xFE6
 50111                           postdec1	equ	0xFE5
 50112                           plusw1	equ	0xFE3
 50113                           fsr1h	equ	0xFE2
 50114                           fsr1l	equ	0xFE1
 50115                           indf2	equ	0xFDF
 50116                           postinc2	equ	0xFDE
 50117                           postdec2	equ	0xFDD
 50118                           plusw2	equ	0xFDB
 50119                           fsr2h	equ	0xFDA
 50120                           fsr2l	equ	0xFD9
 50121                           status	equ	0xFD8
 50122                           
 50123                           	psect	rparam
 50124  0000                     tosu	equ	0xFFF
 50125                           tosh	equ	0xFFE
 50126                           tosl	equ	0xFFD
 50127                           pclatu	equ	0xFFB
 50128                           pclath	equ	0xFFA
 50129                           tblptru	equ	0xFF8
 50130                           tblptrh	equ	0xFF7
 50131                           tblptrl	equ	0xFF6
 50132                           tablat	equ	0xFF5
 50133                           prodh	equ	0xFF4
 50134                           prodl	equ	0xFF3
 50135                           intcon	equ	0xFF2
 50136                           intcon2	equ	0xFF1
 50137                           intcon3	equ	0xFF0
 50138                           indf0	equ	0xFEF
 50139                           postinc0	equ	0xFEE
 50140                           fsr0h	equ	0xFEA
 50141                           fsr0l	equ	0xFE9
 50142                           wreg	equ	0xFE8
 50143                           indf1	equ	0xFE7
 50144                           postinc1	equ	0xFE6
 50145                           postdec1	equ	0xFE5
 50146                           plusw1	equ	0xFE3
 50147                           fsr1h	equ	0xFE2
 50148                           fsr1l	equ	0xFE1
 50149                           indf2	equ	0xFDF
 50150                           postinc2	equ	0xFDE
 50151                           postdec2	equ	0xFDD
 50152                           plusw2	equ	0xFDB
 50153                           fsr2h	equ	0xFDA
 50154                           fsr2l	equ	0xFD9
 50155                           status	equ	0xFD8
 50156                           
 50157                           	psect	temp
 50158  00005B                     btemp:
 50159                           	opt stack 0
 50160  00005B                     	ds	1
 50161  0000                     int$flags	set	btemp
 50162  0000                     wtemp8	set	btemp+1
 50163  0000                     ttemp5	set	btemp+1
 50164  0000                     ttemp6	set	btemp+4
 50165  0000                     ttemp7	set	btemp+8
 50166                           tosu	equ	0xFFF
 50167                           tosh	equ	0xFFE
 50168                           tosl	equ	0xFFD
 50169                           pclatu	equ	0xFFB
 50170                           pclath	equ	0xFFA
 50171                           tblptru	equ	0xFF8
 50172                           tblptrh	equ	0xFF7
 50173                           tblptrl	equ	0xFF6
 50174                           tablat	equ	0xFF5
 50175                           prodh	equ	0xFF4
 50176                           prodl	equ	0xFF3
 50177                           intcon	equ	0xFF2
 50178                           intcon2	equ	0xFF1
 50179                           intcon3	equ	0xFF0
 50180                           indf0	equ	0xFEF
 50181                           postinc0	equ	0xFEE
 50182                           fsr0h	equ	0xFEA
 50183                           fsr0l	equ	0xFE9
 50184                           wreg	equ	0xFE8
 50185                           indf1	equ	0xFE7
 50186                           postinc1	equ	0xFE6
 50187                           postdec1	equ	0xFE5
 50188                           plusw1	equ	0xFE3
 50189                           fsr1h	equ	0xFE2
 50190                           fsr1l	equ	0xFE1
 50191                           indf2	equ	0xFDF
 50192                           postinc2	equ	0xFDE
 50193                           postdec2	equ	0xFDD
 50194                           plusw2	equ	0xFDB
 50195                           fsr2h	equ	0xFDA
 50196                           fsr2l	equ	0xFD9
 50197                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    120     137
    BANK1           256    211     256
    BANK2           256      0     248
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2275$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2275$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2732	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2698	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2697	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2644	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2643	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2275$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2275$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2275$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2275$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2275$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2275$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2275$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2275$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2275$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2275$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S145$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S135$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S135$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S111$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S111$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S111$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S111$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_rtcc_write_eeprom
    _rtcc_correct_day->__number_of_days
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bcd_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_month_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_day_decimal->__rtcc_bcd_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bcd_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___xxtofl->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  569206
                                            118 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   33097
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    3026
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   20851
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     248
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   28856
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0   12610
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     8     8      0   12610
                                             43 BANK0      8     8      0
                   __rtcc_verify_bcd
                    _i2c_eeprom_read
                   _rtcc_correct_day
                       _rtcc_get_day
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     393
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     263
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) __rtcc_verify_bcd                                     4     2      2    1589
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     164
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      93
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    7244
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4827
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     670
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1758
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    8730
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    8730
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  238101
                                              0 BANK1     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    7583
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2    1033
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4    1237
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     305
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   99441
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    9351
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4   10541
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     816
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    9238
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4  120277
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   26532
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   27263
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   26056
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4884
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2    1434
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     634
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     634
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    9108
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    9327
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    9465
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    9491
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0   11180
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bcd_to_decimal                                 3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    5605
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    5185
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    4460
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    4426
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3960
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     164
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    4794
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3    1086
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3708
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   46617
                                            115 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     677
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    2801
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    8825
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     711
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    8825
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 67    67      0   15158
                                             48 BANK0     67    67      0
                            ___aldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     580
                                             14 BANK0     14    10      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1901
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    9329
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8145
                                             24 BANK0     24    19      5
                            ___fltol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2394
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   18856
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    7721
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0   11135
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    4094
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     808
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     195
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2460
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2321
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    4044
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    3216
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  138850
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  138850
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  131246
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   66528
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   64480
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   28752
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   18274
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   17839
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4654
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5092
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    6302
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   19726
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    9479
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    9121
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    8851
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2824
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1176
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8    1080
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   21280
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    4355
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    4200
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3978
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2896
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     851
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0     127
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     896
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      43
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    4159
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    5417
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58167
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___fltol
       ___lmul
       ___xxtofl
         ___aldiv (ARG)
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bcd_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         __rtcc_verify_bcd
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_correct_day
           __number_of_days
             _rtcc_get_month
             _rtcc_get_year
           _rtcc_get_day
           _rtcc_set_day
             __rtcc_write_disable
             __rtcc_write_enable
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable
     _ui_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      89       5       85.6%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     492      31        0.0%
DATA                 0      0     692       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Oct 02 17:27:04 2018

                rtcc_get_year_decimal@bcd_year 0063                                     _USB_SD_Ptr C307  
                     fat_create_file@extension 009D         __end_of_i2c_display_send_init_sequence 566E  
      __size_of_i2c_display_send_init_sequence 002E                 _i2c_display_send_init_sequence 5640  
                          __system_timer0_init 529C                        rtcc_set_minutes@minutes 0060  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit 0668  
                           _USBCheckHIDRequest 2918                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day 5916  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init 1C48                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 003D           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                  __display_efficiency@battery 00CE                              ?__rtcc_verify_bcd 0060  
                                          l151 0714                                            l208 55A6  
                                          l209 55A4                                            l147 06B2  
                                          l149 06DA                    __end_of_USBStdGetDscHandler 1064  
                                          l190 19FA                                  ?_i2c_adc_read 0065  
                                          l186 1952                                            l194 1890  
                                          l188 197C                                            l700 0114  
                                          l612 0E82                                            l710 EB42  
                                          l630 45C4                                            l606 F4A4  
                                          l623 45CC                                            l704 ED4A  
                                          l712 EB6C                                            l640 CF46  
                                          l624 4590                                            l616 0F2E  
                                          l713 EBB4                                            l705 EA96  
                                          l641 CF50                                            l617 0F28  
                                          l609 F4AC                                            l730 1E5A  
                                          l722 ED00                                            l714 EB90  
                                          l634 D2A4                                            l650 D0FE  
                                          l626 45AC                                            l707 ED6C  
                                          l723 ED18                                            l715 EBFA  
                                          l643 CFA2                                            l635 CF26  
                                          l619 0F32                                            l732 1E6E  
                                          l724 ED32                                            l716 EBF6  
                                          l708 EB3C                                            l660 D1C8  
                                          l644 D064                                            l628 45B8  
                                          l741 1F12                                            l653 D132  
                                          l645 D06E                                            l629 45BE  
                                          l581 F3DC                                            l901 E4AA  
                                          l742 1EFC                                            l718 EC10  
                                          l670 D24C                                            l654 D160  
                                          l646 D090                                            l638 CF36  
                                          l574 F4C4                                            l582 F3C2  
                                          l590 F4E2                                            l910 E58A  
                                          l902 E4D2                                            l735 1EAA  
                                          l719 EC90                                            l671 D260  
                                          l591 F3FC                                            l583 F396  
                                          l575 F292                                            l903 E720  
                                          l664 D204                                            l656 D194  
                                          l648 D0BE                                            l584 F39E  
                                          l912 E590                                            l904 E51E  
                                          l681 3134                                            l761 1522  
                                          l753 1F24                                            l665 D218  
                                          l593 F408                                            l905 E784  
                                          l921 E618                                            l770 1558  
                                          l738 1EB6                                            l674 D29C  
                                          l666 D236                                            l658 D1B0  
                                          l586 F3B6                                            l906 E530  
                                          l771 1566                                            l739 1EDE  
                                          l691 FFE2                                            l595 F42A  
                                          l579 F2B4                                            l931 E708  
                                          l907 E536                                            l772 157A  
                                          l692 FFF8                                            l668 D262  
                                          l596 F42E                                            l932 E710  
                                          l916 E5D2                                            l908 E576  
                                          _BDT 000D00                                            l773 1588  
                                          l757 1F34                                            l685 012E  
                                          l669 D23C                                            l597 F452  
                                          l774 159C                                            l694 0046  
                                          l686 FF74                                            l950 49FC  
                                          l679 311E                                            l767 15E6  
                                          l775 15D8                                            l695 006C  
                                          l927 E66C                                            l768 1550  
                                          l688 0152                                            l696 009A  
                                          l952 4A08                                            l928 E672  
                                          l697 00AC                                            l689 FFCA  
                                          l929 E6F8                                            l698 00B2  
                __size_of__sector_from_cluster 0010                                            l699 00C8  
                                          l956 4A1A                       __display_time@presshours 014E  
                                          l949 4A38                                            l958 4A26  
                                          l899 E484                                            _LBA 01D9  
                    _buck_remote_get_dutycycle 5EE2                                            _PR2 000FCB  
                     __display_time@pressmonth 013C                                            _LUN 02BB  
                                          _UIE 000F36                                            _UIR 000F62  
                         _i2c_digipot_reset_on 58A4                  __size_of_rtcc_decrement_hours 0022  
           system_calculate_output_voltage@tmp 0070                     __end_of_buck_get_dutycycle 5EEE  
                     ??_rtcc_increment_minutes 0068                  __size_of_rtcc_decrement_month 0022  
                     ??_rtcc_increment_seconds 0068                                            _idx 00E1  
                                   _USBSuspend 5610                                            _now 029E  
                       __end_of_display_update 3F9E                           USBStdSetCfgHandler@i 0045  
                       i2c_eeprom_read@address 0071                             ??__rtcc_verify_bcd 0062  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                 _USBDeviceTasks 0A3C  
                          ?_USBCheckHIDRequest 002E                                   __CFG_IESO$ON 000000  
                          ?_rtcc_increment_day 002E                                 _USBDeviceState 002B  
                             _rtcc_read_eeprom 0CC4                                   ?__write_root 0088  
                          _rtcc_increment_year 59AA                        rtcc_set_seconds@seconds 0060  
                        ??_USBCtrlTrfRxService 002E                           __read_fat@fat_sector 0089  
                     __size_ofi2_USBDeviceInit 0144                       USBEnableEndpoint@options 0036  
                      __buck_initial_dutycycle 3018                              ??_MSDErrorHandler 0068  
                         ?__system_timer0_init 002E                       fat_create_file@root_slot 00AB  
                                 ___fltol@exp1 0069                    __flash_write_to_buffer@data 0075  
                                         l1111 E0CC                                           l1103 DF14  
                                         l1112 DFDC                                           l1113 E102  
                                         l1105 DF32                                           l1130 4F06  
                                         l1114 DFF8                                           l2010 C692  
                                         l1123 4F56                                           l1115 E030  
                                         l2011 C66C                                           l1132 4F12  
                                         l1116 E0C6                                           l2100 FA9E  
                                         l1125 4F62                                           l2101 FA78  
                                         l2013 C9FA                                           l2005 C9CE  
                                         l2021 C730                                           l1150 2332  
                                         l1070 DDCC                                           l2110 FB68  
                                         l2030 C7BC                                           l2022 C75C  
                                         l2014 C6AA                                           l2006 C624  
                                         l1143 2382                                           l1151 233A  
                                         l2111 FB38                                           l2103 FAE0  
                                         l2023 C736                                           l2015 C6D6  
                                         l2007 C650                                           l1160 237C  
                                         l1152 2342                                           l1144 230A  
                                         l2104 FABA                                           l2200 0238  
                                         l2040 C884                                           l2032 C824  
                                         l2016 C6B0                                           l2008 C62A  
                                         l1153 234A                                           l1081 DFD6  
                                         l1233 5D6A                                           l2113 FB44  
                                         l2201 0212                                           l2033 C7FE  
                                         l2025 C79E                                           l1401 590C  
                                         l1170 2246                                           l1410 4FA8  
                                         l1154 2352                                           l1146 2312  
                                         l1090 DE84                                           l1082 DE1C  
                                         l2114 FB50                                           l2106 FB06  
                                         l2050 C974                                           l2042 C8C2  
                                         l2026 C778                                           l2018 C718  
                                         l3002 2BE0                                           l1171 2250  
                                         l1411 4FAE                                           l1155 235A  
                                         l1147 231A                                           l2115 FB5C  
                                         l2107 FB16                                           l2203 0294  
                                         l2051 C94E                                           l2043 C8EE  
                                         l2035 C83C                                           l2019 C6F2  
                                         l1164 22A4                                           l1180 229A  
                                         l1172 225A                                           l1420 4BCC  
                                         l1412 4FB4                                           l1156 2362  
                                         l1148 2322                                           l1076 DFA2  
                                         l2108 FB26                                           l2204 026E  
                                         l2044 C8C8                                           l2036 C868  
                                         l2028 C7B6                                           l3020 048A  
                                         l1173 2262                                           l1165 221E  
                                         l1421 4BD0                                           l1157 236A  
                                         l1149 232A                                           l1077 DDE8  
                                         l2053 C9B6                                           l2037 C842  
                                         l2029 C7E2                                           l3021 04C0  
                                         l1174 226A                                           l1510 5EC8  
                                         l1422 4BD4                                           l1406 4FB8  
                                         l1158 2370                                           l1094 DEB8  
                                         l1086 DE50                                           l2150 EA58  
                                         l2206 02F0                                           l2054 C990  
                                         l2046 C930                                           l3014 033E  
                                         l1191 111E                                           l1175 2272  
                                         l1167 2228                                           l1407 4F9C  
                                         l1159 2376                                           l2143 E8FA  
                                         l2207 02CA                                           l2047 C90A  
                                         l2039 C8AA                                           l2071 05CA  
                                         l1192 1126                                           l1184 10F6  
                                         l1176 227A                                           l1168 2232  
                                         l1416 4BD8                                           l2152 E97E  
                                         l2144 E8D2                                           l2080 062A  
                                         l2072 05A4                                           l1504 5EA0  
                                         l3008 2C38                                           l3016 0350  
                                         l1440 11AE                                           l2400 0D9E  
                                         l1193 112E                                           l1185 1078  
                                         l1177 2282                                           l1169 223C  
                                         l1417 4BC4                                           l1409 4FA2  
                                         l4001 55FC                                           l2161 E9FE  
                                         l2153 E958                                           l2137 E8B6  
                                         l2049 C948                                           l3041 F7BE  
                                         l3017 039E                                           l1433 12D2  
                                         l2401 0DC8                                           l1194 1136  
                                         l2250 5D28                                           l1178 228A  
                                         l1418 4BFA                                           l1098 DEEC  
                                         l4002 55EA                                           l2162 E9D8  
                                         l2138 E890                                           l1522 5E98  
                                         l3042 F798                                           l3018 04C6  
                                         l2402 0DF2                                           l2307 5E34  
                                         l1195 113E                                           l1187 10A4  
                                         l2243 5D1E                                           l1179 2292  
                                         l1419 4BC8                                           l1099 DEF0  
                                         l2155 EA74                                           l2075 0612  
                                         l2067 0574                                           l3019 0468  
                                         l1188 114E                                           l1196 1146  
                                         l2244 5D12                                           l1540 417E  
                                         l2148 E914                                           l2180 E388  
                                         l2076 05EC                                           l2068 054E  
                                         l1516 5EAC                                           l3300 EFA4  
                                         l3044 F916                                           l2260 56AE  
                                         l2325 5E5E                                           l1189 1116  
                                         l1533 41C4                                           l1541 4182  
                                         l2501 2D90                                           l2165 EA3E  
                                         l2157 E9BE                                           l2181 E362  
                                         l2093 FA06                                           l3301 EFB4  
                                         l3045 F836                                           l4013 3D16  
                                         l1373 52BC                                           l1534 4176  
                                         l2166 EA18                                           l2158 E998  
                                         l2094 F9E0                                           l3302 EFC4  
                                         l3046 F88E                                           l3038 F750  
                                         l4014 3CB4                                           l1374 52AA  
                                         l1630 14EE                                           l2270 4456  
                                         l2262 56C6                                           l2343 5E50  
                                         l1551 4E90                                           l1543 41AC  
                                         l1535 41DA                                           l1615 3C8E  
                                         l4007 532A                                           l2183 E3FE  
                                         l2079 0650                                           l3303 EFD4  
                                         l3047 F8D4                                           l4015 3D0C  
                                         l1375 52CC                                           l1631 1490  
                                         l2271 445A                                           l1391 1C18  
                                         l2255 5680                                           l1552 4E72  
                                         l1544 419E                                           l1616 3C5E  
                                         l2512 40EE                                           l2520 40C0  
                                         l2504 2DB2                                           l4008 5324  
                                         l2184 E3D8                                           l3304 EFE4  
                                         l1376 52B2                                           l1640 D680  
                                         l1632 1498                                           l1624 13E4  
                                         l2361 5E42                                           l2249 5D34  
                                         l1537 4186                                           l2521 40CA  
                                         l2513 4092                                           l2177 E346  
                                         l2097 FA5A                                           l3305 EFF4  
                                         l1641 D2F0                                           l1633 14A0  
                                         l2265 442A                                           l2257 5698  
                                         l1801 D8AE                                           l1546 41A2  
                                         l1538 417A                                           l2506 2DCE  
                                         l2530 57B2                                           l2610 4884  
                                         l2602 487A                                           l2178 E320  
                                         l2098 FA34                                           l3306 F004  
                                         l1634 14A8                                           l1626 146C  
                                         l2274 511C                                           l1810 D912  
                                         l1802 D8BA                                           l1547 41A6  
                                         l2515 409E                                           l2603 4874  
                                         l3315 4070                                           l1643 D374  
                                         l1635 14B0                                           l1803 D8C4  
                                         l1660 4EC8                                           l2620 5BAE  
                                         l2524 40DA                                           l2532 57CE  
                                         l2604 4858                                           l1652 35EC  
                                         l1396 5C02                                           l1644 D3F6  
                                         l1628 14C0                                           l1636 14B8  
                                         l2276 512E                                           l1820 D962  
                                         l1804 D8DA                     USBConfigureEndpoint@handle 0034  
                                         l1661 4EA8                                           l2517 40B0  
                                         l2541 CB10                                           l2605 483E  
                                         l2197 01F6                                           l1645 D478  
                                         l1557 356A                                           l1629 1488  
                                         l2277 513A                                           l1821 D96C  
                                         l1813 D91E                                           l2630 5CF2  
                                         l2550 CBE0                                           l2606 486C  
                                         l2198 01D0                                           l1646 D4FA  
                                         l1558 354C                                           l2278 5146  
                                         l1822 D97A                                           l1814 D92A  
                                         l1495 5ED0                                           l3351 3A8A  
                                         l2607 4842                                           l1647 D57C  
                                         l1831 D9B0                                           l1815 D934  
                                         l1807 D8E6                                           l1751 D6D6  
                                         l3328 4B16                                           l3352 3A98  
                                         l2480 4334                                           l2560 CD8E  
                                         l2552 CC16                                           l2544 CB44  
                                         l2608 484C                                           l1920 FCF0  
                                         l1672 413A                                           l1680 412A  
                                         l3280 5426                                           l1648 D5FE  
                                         l1744 D9D8                                           l1832 D9BE  
                                         l1824 D982                                           l1816 D94A  
                                         l1808 D8F2                                           l1760 D72A  
                                         l1752 D6E4                                           l2289 5E18  
                                         l2625 5D0A                                           l3329 4B2A  
                                         l2537 CF08                                           l1913 FC64  
                                         l1585 49E8                                           l1681 4132  
                                         l1809 D8FC                                           l1761 D734  
                                         l1745 D6B2                                           l2642 50E8  
                                         l2474 3038                                           l2570 CF02  
                                         l2562 CD98                                           l2546 CB66  
                                         l2538 CAA8                                           l1930 FD52  
                                         l1906 5034                                           l3610 2628  
                                         l1586 49CA                                           l1834 D9C6  
                                         l1826 D98E                                           l1770 D78C  
                                         l1762 D744                                           l1754 D6EC  
                                         l1746 D6C2                                           l2651 58A0  
                                         l2379 5E26                                           l2635 5998  
                                         l2803 3E44                                           l3347 3A56  
                                         l1923 FCD4                                           l1667 575C  
                                         l1675 4102                                           l1827 D99C  
                                         l1819 D956                                           l1771 D796  
                                         l1755 D6F6                                           l1843 21EE  
                                         l1851 218A                                           l2644 50FE  
                                         l2804 3E4E                                           l3348 3A4A  
                                         l2476 30AE                                           l2484 434E  
                                         l2564 CDC4                                           l2556 CC58  
                                         l2548 CBB4                                           l2492 44D2  
                                         l1924 FCE8                                           l1908 5040  
                                         l1940 3BCE                                           l1676 410A  
                                         l3540 38AA                                           l2396 0D06  
                                         l1836 D9D2                                           l1780 D7E8  
                                         l1772 D7A6                                           l1764 D74C  
                                         l1756 D700                                           l1748 D6CA  
                                         l1852 21A8                                           l1844 212E  
                                         l2637 59A4                                           l2477 30CE  
                                         l2581 1D92                                           l1925 FD48  
                                         l1917 FC3C                                           l1941 3BD8  
                                         l1677 4112                                           l3541 38BA  
                                         l2397 0D30                                           l1829 D9A4  
                                         l1781 D7F2                                           l1765 D75E  
                                         l1757 D710                                           l1853 21DE  
                                         l2806 3E86                                           l2830 4A66  
                                         l2822 4DC2                                           l2566 CDEA  
                                         l2558 CC80                                           l2494 44F6  
                                         l2574 1E2C                                           l2590 1DF6  
                                         l1926 FD02                                           l1918 FC5A  
                                         l1942 3BDE                                           l1678 411A  
                                         l2398 0D5A                                           l1782 D802  
                                         l1774 D7AE                                           l1766 D768  
                                         l2751 4AFC                                           l2831 4A70  
                                         l2823 4DCC                                           l2583 1DA4  
                                         l2575 1D4C                                           l1927 FD46  
                                         l3391 2B1C                                           l3615 265C  
                                         l3607 25CC                                           l1935 3BF0  
                                         l1943 3BE4                                           l1679 4122  
                                         l3543 38D8                                           l2399 0D7C  
                                         l1791 D856                                           l1775 D7BA  
                                         l1767 D778                                           l1759 D718  
                                         l1847 2142                                           l2904 54FE  
                                         l2808 3EA6                                           l2760 37FC  
                                         l2488 4368                                           l2568 CEF8  
                                         l2592 1E14                                           l2584 1DB2  
                                         l3800 4C78                                           l3392 2B10  
                                         l3616 2650                                           l1960 FE48  
                                         l1944 3BEA                                           l1936 3BB8  
                                         l3544 38D0                                           l1792 D862  
                                         l1784 D80A                                           l1776 D7C4  
                                         l1848 2152                                           l2649 588E  
                                         l2681 3940                                           l1929 FD82  
                                         l3609 2638                                           l3297 ED96  
                                         l1793 D870                                           l1785 D81A  
                                         l1777 D7D4                                           l1769 D780  
                                         l1849 2166                                           l2690 3978  
                                         l2682 3920                                           l2586 1DCE  
                                         l3810 51E2                                           l3618 2678  
                                         l1962 FEB0                                           l1938 3BBE  
                                         l1786 D826                                           l2691 3960  
                                         l2499 2D38                                           l2595 1E26  
                                         l2579 1D66                                           l3803 4CA0  
                                         l3395 2B50                                           l1963 FE8A  
                                         l1939 3BC8                                           l3299 EF98  
                                         l3547 38F8                                           l1795 D878  
                                         l1787 D834                                           l1779 D7DC  
                                         l2908 54CA                                           l2676 5E76  
                                         l2684 3928                                           l3804 4CAA  
                                         l3396 2B5E                                           l3388 2AD6  
                                         l1956 FE2C                                           l3548 3902  
                                         l1796 D882                                           l2757 37C6  
                                         l2693 397A                                           l2685 3930  
                                         l2589 1DE0                                           l3813 5202  
                                         l3397 2B74                                           l3389 2AEE  
                                         l1965 FF26                                           l1957 FE06  
                                         l3549 3910                                           l1797 D88C  
                                         l1789 D83C                                           l2766 331C  
                                         l2686 393A                                           l3814 520C  
                                         l1966 FF00                                           l1798 D8A2  
                                         l2839 5982                                           l1959 FE6E  
                                         l2688 3968                                           l2769 335A  
                                         l2785 4BA2                                           l2689 3958  
                                         l3809 51EA                                           l2777 4212  
                                         l2786 4B5E                                           l2970 375A  
                                         l2778 4236                                           l2963 3F12  
                                         l2947 3DC2                                           l2795 4958  
                                         l2955 580E                                           l2788 4B88  
                                         l2796 4962                                           l2949 3E2A  
                                         l2957 5820                                           l2967 36F6  
                                         l3970 09A0                                           l3962 093A  
                                         l3963 094A                                           l3972 09EA  
                                         l3964 0968                                           l3973 09DE  
                                         l3990 320A                                           l3966 097A  
                                         l3799 4C80                                           l3983 51B4  
                                         l3967 096E                                           l3969 09B8  
                                         l3978 0A2A                                           l3995 4762  
                                         l3987 318C                                           l3996 4728  
                                         l3989 31C8                          ??i2_SYSTEM_Initialize 002E  
                                         STR_1 C458                 __fill_buffer_get_display1@cntr 0065  
                                         STR_9 C443                 __fill_buffer_get_display1@line 0066  
               __fill_buffer_get_display2@cntr 0065                 __fill_buffer_get_display2@line 0066  
                                _i2c_frequency 01F4                          ??_USBCtrlTrfTxService 002E  
                                         _UCFG 000F39                                           _UEP0 000F26  
                                         _UEP1 000F27                               ?_fat_create_file 009B  
                                         _UEIE 000F37                                           u8940 4536  
                                         u8950 4544                                           u8960 4552  
                                         _UEIR 000F63                                           _UCON 000F65  
                                         u8970 4560                                           u8980 456E  
                                         u8948 453A                                           u8990 457A  
                                         u8958 4548                                           u8968 4556  
                                         u8978 4564                                           _TMR2 000FCC  
                                         u8996 457C                                           u8988 4572  
                               ?_i2c_adc_start 006A                    __size_ofi2_USBStallEndpoint 0106  
                        _i2c_digipot_reset_off 58CA             __fill_buffer_get_display1@position 0067  
                         _system_output_toggle 58F0                         __size_of_adc_calibrate 000C  
                               ??_buck_operate 007E                                 _ResetSenseData 45F0  
       USBStdFeatureReqHandler@current_ep_data 0048                         ?__update_modified_time 006D  
                                         _pDst 01ED                                           _main E472  
                                         _last 02A2                                           _itoa 518E  
                     ??i2_USBTransferOnePacket 0032                     __end_of_fat_append_to_file F964  
                  __size_of_APP_DeviceMSDTasks 0012                                           fsr0h 000FEA  
                                         fsr1h 000FE2                        __end_of_display_prepare 3C30  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                _USBDeviceAttach 557E  
                                         btemp 005B                                           _utoa 3184  
           __fill_buffer_get_display2@position 0067                     ??_ExternalFlash_SectorRead 0093  
                              ??_rtcc_get_year 0060                           __size_of__buck_start 00C6  
           __size_of_buck_remote_set_dutycycle 0024                   __display_charger@charger_off 0182  
                      ?_rtcc_get_hours_decimal 002E                   ?i2_ExternalFlash_MediaDetect 002E  
                    _ExternalFlash_MediaDetect 5EB2                                           prodh 000FF4  
                                         prodl 000FF3                                           start C086  
              __end_of_APP_DeviceMSDInitialize 5E04                          _display_get_character 56CA  
                       ??__rtcc_bcd_to_decimal 0060                           ??_USBCheckHIDRequest 002E  
                             ?_MSDWriteHandler 002E                           ??_rtcc_increment_day 0068  
                         _rtcc_increment_hours 5A32                 ??_MSDProcessCommandMediaAbsent 00A7  
                   __end_of_USBCheckStdRequest 2918                         ??_USBCtrlTrfOutHandler 0030  
                         ?_rtcc_increment_year 002E                           _rtcc_increment_month 59EE  
                 ??__flash_copy_page_to_buffer 0076                 ?__flash_write_page_from_buffer 0073  
                                 ___param_bank 000000                      __size_of_flash_page_write 0050  
                    ??_USBStdFeatureReqHandler 0045                                   _USBOutHandle 01E9  
                     __end_of__display_charger EA94                     __size_of_system_output_off 0056  
                              ??_buck_get_mode 0060                __size_of__flash_write_to_buffer 0052  
                     ??_USBStdGetStatusHandler 002E                       ??_buck_remote_get_status 0060  
                               ?_USBDeviceInit 002E                              __flash_get_status 5516  
      __end_of_system_calculate_output_current 12B2       __size_of_system_calculate_output_current 0124  
             ?_system_calculate_output_current 002E              ??_system_calculate_output_current 006C  
              _system_calculate_output_current 118E                           __buck_set_sync_async 408C  
              __flash_spi_tx_tx@command_length 0062                     __end_of_rtcc_decrement_day 5962  
                     _system_ui_inactive_count 01E7                             _buck_remote_enable 01F1  
                   __buck_initial_dutycycle@dc 006E                                  __CFG_PLLDIV$2 000000  
                              ??_rtcc_set_year 0060                  i2c_display_write_fixed@length 0067  
                                        l20021 41E4                                          l20111 375E  
                                        l20109 375A                                          l21007 35E4  
                                        l20039 5806                                          l20153 2BA8  
                                        l20147 2B94                         ?_i2c_digipot_backlight 002E  
                                        l20451 F2AC                                          l22107 06AA  
                                        l20189 2C4A                                          l20623 4F4E  
                                        l22135 070C                                          l21271 502C  
                                        l20387 55EA                                          l20629 4F5A  
                                        l20653 4F0A                                          l21277 5038  
                                        l20647 4EFE                                          l22291 4A26  
                                        l22287 4A08                                          l21831 CDEA  
                                        l21745 CB08                      __buck_set_sync_async@mode 0063  
                                        l20875 13DC                                          l21759 CB5E  
                               ??_i2c_adc_read 0067                                          l18221 4728  
                                        l21965 048A                                          l21993 F798  
                                        l18097 1EB6                                          l19403 3CB4  
                                        l18299 0126                                          l18387 ED44  
                                        l18753 D088                                          l19813 FBD4  
                                ___fltol@sign1 0068                                          l19833 FC7E  
                              __end_of___aldiv 2B86                             ?__flash_get_status 006C  
                                        l19957 44EE                                          l19969 2D30  
                                        ?_main 002E                  rtcc_increment_minutes@minutes 0068  
                                        ?_itoa 0070                                __end_of___awdiv 391A  
                                        STR_10 C44F                                          STR_11 C461  
                                        STR_12 C436                          ?_i2c_digipot_reset_on 002E  
                             ??__display_clear 0060              __size_of_USBCtrlEPServiceComplete 00F2  
                           _buck_remote_set_on 5CF8                                __end_of___fltol 268A  
                        rtcc_decrement_day@day 0068                                __end_of___lldiv 3AAA  
                                        ?_utoa 0067               MSDCheckForErrorCases@DeviceBytes 006A  
                                        u21000 FA70                                          u21100 E7F2  
                              ___awdiv@divisor 0062                                          u21110 E80E  
                                        u21120 E82A                         __end_of_USBDeviceTasks 0B80  
                                        u21130 E846                                          u21140 E862  
                                        u20500 FDF4                                          u21300 016A  
                                        u21150 E87E                                          u21070 E79E  
                                        u21310 0186                                          u22111 1B4E  
                                        u21080 E7BA                                          u21240 E13A  
                                        u21320 01A2                                          u20600 C4EC  
                                        u22121 1B70                                          u21090 E7D6  
                                        u21250 E156                                          u21330 01BE  
                                        u20610 C508                                          u22131 1B92  
                                        u22300 DE32                                          u20460 506C  
                                        u21260 E172                                          u20620 C524  
                                        u21190 E952                                          u20630 C540  
                                        u22320 DE66                                          u21440 CB9A  
                                        u20480 FD9E                                          u20640 C55C  
                                        u20560 C47C                                          u22410 DF48  
                                        u20490 FDBA                                          u20650 C578  
                                        u20570 C498                                          u22340 DE9A  
                                        u21540 CDD6                                          u20660 C594  
                                        u20580 C4B4                                          u20900 05E0  
                                        u22180 2176                                          u21470 CBF2  
                                        u20670 C5B0                                          u20590 C4D0  
                                        u22430 24A4                                          u22360 DECE  
                                        u22280 DDFE                                          u21480 CC0C  
                                        u20680 C5CC                                          u20840 04E8  
                                        u22600 13B0                                          u22440 2586  
                                        u21490 CC4C                                          u20690 C5E8  
                                        u20850 0504                      ?_USBCtrlEPServiceComplete 002E  
                                        u23227 395A                                          u22435 249A  
                                        u22380 DF06                                          u21820 0770  
                                        u20940 F97A                                          u20860 0520  
                                        u22460 11A2                                          u23237 3962  
                                        u22605 13A6                                          u22445 257C  
                                        u20950 F996                                          u20870 053C  
                                        u22470 128C                                          u23247 4B7A  
                                        u22640 2014                                          u20960 F9B2  
                                        u21680 036E                                          u23257 4B8C  
                                        u20970 F9CE                                          u20890 059C  
                                        u21690 039A                                          u22730 E5D8  
                                        u23267 4B96                                          u22475 1282  
                                        u17108 ECDA                                          u16325 3E5A  
                                        u17109 ECEE                                          u22645 200A  
                                        u21685 0364                                          u16510 150E  
                                        u17038 EBC4                                          u21790 06CE  
                                        u17310 51EE                                          u22590 12C6  
                                        u22750 E63A                                          u16415 4A7C  
                                        u17039 EBD8                                          u17080 ECCC  
                                        u17090 ECCE                                          u18130 309E  
                                        u22770 E706                                          u22690 E4A4  
                                        u16435 3FB8                                          u16700 1EF8  
                                        u18300 3CDA                                          u18045 4D1A  
                                        u18215 42DC                                          u16800 54FA  
                                        u18400 0E48                                          u17280 4C84  
                                        u19120 2C44                                          u19200 543E  
                                        u18225 42F8                                          u16730 1F0E  
                                        u16810 54C6                                          u19130 2C4A  
                                        u18235 4482                                          u16820 474A  
                                        u17700 D1EE                                          u17620 D0B8  
                                        u19300 25EA                                          u18245 449E  
                                        u19045 47A2                                          u16750 1F20  
                                        u18414 0E60                                          u18350 38DC  
                                        u18415 0E5A                                          u19055 47FE  
                                        u18424 0E9A                                          u18280 3E26  
                                        u18425 0E94                                          u19305 25E0  
                                        u18265 3DE8                                          u19145 07F6  
                                        u18530 50E2                                          u16770 1F30  
                                        u17730 D26A                                          u17810 4426  
                                        u16827 4740                                __end_of___lwdiv 4CB4  
                                        u19155 0828                                          u18540 50F8  
                                        u19260 2B20                                          u19340 2662  
                                        u19420 09F4                                          u16845 FF9C  
                                        u19165 085A                                          u17638 D0DA  
                                        u18630 FBE8                                          u17639 D0EE  
                                        u19175 088C                                          u18464 0EF8  
                                        u18448 0EC2                                          u18640 FC5E  
                                        u18465 0EF2                                          u18449 0ED8  
                                        u19185 08B4                                          u17690 D1DC  
                                        u19530 F2A8                   __flash_write_to_buffer@start 0073  
                                        u16955 EABE                                          u17588 CFB2  
                                        u18388 0E16                                          u17860 4344  
                                        u17765 3C3E                                          u17589 CFC6  
                                        u18389 0E2A                                          u17598 CFE6  
                                        u19550 F2DC                                          u18670 FC92  
                                        u17599 CFFA                                          u19720 F486  
                                        u17960 3A5A                                          u18840 2D74  
                                        u18680 FCEC                                          u17945 496E  
                                        u16898 0020                                          u16978 EAF6  
                                        u17890 435E                                          u16899 0034  
                                        u16979 EB0A                                          u19900 3610  
                                        u19750 4F8A                                          u18960 5826  
                                        u19790 4F3A                                          u18990 3F1A  
                                        u19871 564A                                __end_of___lwmod 5216  
                                        i2l300 3246                                          i2l301 324A  
                                        i2l302 3264                                          i2l222 33B2  
                                        i2l310 5254                                          i2l151 0C26  
                                        i2l216 2E20                                          i2l224 33C8  
                                        i2l233 20B2                                          i2l161 0A80  
                                        i2l234 205C                                          i2l162 0A8C  
                                        i2l251 2A70                                          i2l323 3516  
                                        i2l147 0BC6                                          i2l171 0B16  
                                        i2l252 2A38                                          i2l228 36B0  
                                        i2l324 3510                                          i2l164 0AB2  
                                        i2l181 53A6                                          i2l309 5256  
                                        i2l317 54A2                                          i2l149 0BEE  
                                        i2l157 0A52                                          i2l342 2F90  
                                        i2l262 1770                                          i2l334 48F4  
                                        i2l182 53B4                                          i2l190 1D06  
                                        i2l430 2972                                          i2l238 20D8  
                                        i2l318 54A0                                          i2l174 0B3C  
                                        i2l166 0AC6                                          i2l158 0A62  
                                        i2l255 2AB0                                          i2l247 2A06  
                                        i2l343 2F94                                          i2l263 174E  
                                        i2l431 2950                                          i2l167 0AD2  
                                        i2l159 0A6A                                          i2l256 2A78  
                                        i2l344 300E                                          i2l336 493C  
                                        i2l440 29A0                                          i2l360 2858  
                                        i2l176 0B5C                                          i2l168 0AFA  
                                        i2l249 2A10                                          i2l345 2FD4  
                                        i2l265 17E4                                          i2l441 29B6  
                                        i2l361 285E                                          i2l169 0B04  
                                        i2l266 17CA                                          i2l186 1C5E  
                                        i2l194 1A9C                                          i2l434 29C0  
                                        i2l282 104C                                          i2l274 26D2  
                                        i2l362 2864                                          i2l178 0B78  
                                        i2l347 2FF4                                          i2l427 2962  
                                        i2l291 1046                                          i2l283 0F48  
                                        i2l363 2876                                          i2l188 1C88  
                                        i2l428 2934                                          i2l276 2744  
                                        i2l364 287C                                          i2l541 1712  
                                        i2l381 F102                                          i2l285 0F5A  
                                        i2l357 28D4                                          i2l438 2980  
                                        i2l550 2EB0                                          i2l390 F254  
                                        i2l374 F02E                                          i2l286 0FE4  
                                        i2l366 2882                                          i2l358 2850  
                                        i2l439 2996                                          i2l383 F182  
                                        i2l375 F032                                          i2l295 32A0  
                                        i2l367 289E                                          i2l288 0FEA  
                                        i2l296 323A                                          i2l368 28B6  
                                        i2l393 F20E                                          i2l385 F14C  
                                        i2l377 F098                                          i2l289 1040  
                                        i2l538 171A                                          i2l554 2F18  
                                        i2l386 F168                                          i2l539 1686  
                                        i2l395 F260                                          i2l379 F0E0  
                                        i2l299 32B6                                          i2l388 F1CE  
                                        i2l549 2F4A                                          i2l389 F1DA  
                                        i2l566 2F1E                                          i2l830 39B2  
                                        i2l824 39D4                                          i2l832 39BC  
                        rtcc_write_eeprom@date 0085                                          i2l834 39C6  
                             ??__display_inout 0090                                          i2l828 39A2  
                                        i2l829 39AA                                          i2l950 4CB8  
                                        i2l784 4C28                                          i2l952 4CC2  
                                        _UADDR 000F38                                          i2l787 4C5E  
                                        i2l956 4CD4                                ___awdiv@counter 0064  
                                        i2l949 4CF2                                          i2l958 4CE0  
                                        _TMR0H 000FD7                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
      __end_of_system_calculate_output_voltage 24CA       __size_of_system_calculate_output_voltage 00E2  
             ?_system_calculate_output_voltage 002E              ??_system_calculate_output_voltage 006C  
              _system_calculate_output_voltage 23E8                                          _RPOR5 000EC5  
                                        _RPOR6 000EC6                                          _USTAT 000F64  
                             __i2c_read@length 0067                    ?_ExternalFlash_CapacityRead 0060  
                              ?_display_update 002E                         __rtcc_verify_bcd@value 0063  
           __size_of_USBCtrlEPAllowStatusStage 00C2                                _i2c_eeprom_read 4D08  
                          ___lmul@multiplicand 0064                       __end_of__display_outputs FB86  
                              ??_flash_is_busy 0071                               __end_of_MSDTasks F4E6  
                                   i2memcpy@d1 002E                                 __CFG_FCMEN$OFF 000000  
                              __read_fat@value 008D                             _USBCheckMSDRequest 2E9C  
                                   i2memcpy@s1 0030                         ??__buck_operate_remote 0076  
              __end_of_USBCtrlEPAllowDataStage 33FA                          __get_dateTime@minutes 0072  
                                        _sd000 C432                                          _sd001 C35B  
                                        _sd002 C38F                                          _sd003 C3FE  
                        __get_dateTime@seconds 0073                 ?_USBIncrement1msInternalTimers 002E  
                  log_generate_entry@log_entry 0078                 __size_of_MSDTransferTerminated 0056  
                          ??__flash_get_status 006E                          _rtcc_get_year_decimal 5DA4  
                __end_of_MSDTransferTerminated 4C60                                   _gblCBWLength 01F7  
          i2c_display_send_init_sequence@F6877 03ED                            ?_buck_remote_set_on 002E  
                                   i2memset@p1 002E                         ?_MSDCheckForErrorCases 006A  
                        ??__system_timer0_init 0060                          __buck_start@dutycycle 0072  
            __size_of_rtcc_get_minutes_decimal 0010                              ?__flash_spi_tx_rx 0060  
                            ?__flash_spi_tx_tx 0060                      ?_rtcc_get_minutes_decimal 002E  
                        i2USBStallEndpoint@dir 002E                         __end_of_ResetSenseData 4652  
                     __get_empty_cluster@value 008D                    rtcc_get_day_decimal@bcd_day 0063  
                   __end_of__display_usb@F7241 C1FB                     __end_of__display_usb@F7235 C11B  
                   __end_of__display_usb@F7237 C23B                     __end_of__display_usb@F7239 C22B  
                   ?_log_get_number_of_samples 0060                       __parse_command_long@data 0063  
                             ??_rtcc_get_hours 0060                          ?_system_output_toggle 002E  
                rtcc_increment_seconds@seconds 0068                               ??_rtcc_get_month 0060  
            system_calculate_input_current@tmp 0070                                          pclath 000FFA  
                           ??__flash_spi_tx_rx 0068                             ??__flash_spi_tx_tx 0068  
                              __end_of_ui_init 5D62                                          tablat 000FF5  
                    __size_of_USBStallEndpoint 010A                            ?_USBCheckMSDRequest 002E  
                              _MSDCommandState 00E7               __display_charger@charger_startup 0172  
                  ??_ExternalFlash_SectorWrite 008D                                          plusw1 000FE3  
                                        plusw2 000FDB                  __display_charger@charger_sync 0139  
               __end_of_rtcc_get_hours_decimal 5DA4                                __end_of_tmr_isr 3490  
                                  ?_USBMSDInit 002E       ExternalFlash_WriteProtectStateGet@config 0060  
                                        ttemp5 005C                                          ttemp6 005F  
                                        ttemp7 0063                  __size_of__system_encoder_init 003E  
                                        utoa@c 006F                                __number_of_days 43F6  
                                        utoa@v 006D                                          status 000FD8  
                  ?__flash_copy_page_to_buffer 0073                              __CFG_DSWDTPS$8192 000000  
                                        wtemp8 005C                       __end_ofi2_ResetSenseData 4716  
                              __end_of_strncmp 3D32                ??__fill_buffer_get_calibration1 006B  
              ??__fill_buffer_get_calibration2 006B                               __end_ofi2_memcpy 48E6  
                  __end_of__display_efficiency E472                               __end_ofi2_memset 5800  
               __display_temperature@external1 00A4                 __display_temperature@external2 00B0  
               ??_MSDComputeDeviceInAndResidue 0062                       __ic2_display_set_address 577C  
                            __buck_timer2_init 5C38                                 _MSDReadHandler FF72  
                        ?_rtcc_increment_hours 002E                          ??_rtcc_increment_year 0068  
                        ?_rtcc_increment_month 002E                          __size_of__display_usb 0192  
            __end_of_buck_remote_set_dutycycle 59AA              __size_of_rtcc_get_seconds_decimal 0010  
                      __CFG_DSWDTOSC$INTOSCREF 000000                   __size_of_USBStdSetCfgHandler 00DC  
            fat_create_file@number_of_clusters 00AC                           flash_page_write@data 0081  
                ??i2_ExternalFlash_MediaDetect 0030                __size_of_fat_get_empty_clusters 0092  
                    ?_rtcc_get_seconds_decimal 002E                           flash_page_write@page 007F  
                     __end_of_log_collect_data F00E                                __initialization 2C4E  
                  __display_temperature@header 0090                           ??_buck_remote_set_on 0060  
                           ?__buck_timer2_init 002E                      __end_of__flash_get_status 554A  
      __end_ofi2_ExternalFlash_MediaInitialize 5C20       __size_ofi2_ExternalFlash_MediaInitialize 001A  
        __end_of_ExternalFlash_MediaInitialize 5B20         __size_of_ExternalFlash_MediaInitialize 0022  
            ??i2_ExternalFlash_MediaInitialize 0030               ?i2_ExternalFlash_MediaInitialize 002E  
              i2_ExternalFlash_MediaInitialize 5C06                  _ExternalFlash_MediaInitialize 5AFE  
                                  _system_init 1B44                 __size_of_system_encoder_enable 0010  
                                 __end_of_main E78C                                   __end_of_itoa 51D2  
                __end_of_system_encoder_enable 5D84                               _rtcc_set_minutes 5C98  
                 __size_of__rtcc_increment_bcd 002E                               _rtcc_set_seconds 5C68  
              __end_of_i2c_display_write_fixed 49F6                                   __end_of_utoa 322E  
                  ??__fill_buffer_get_display1 0064                    ??__fill_buffer_get_display2 0064  
                     __parse_command_short@cmd 008B                          ?__buck_set_sync_async 0062  
                             __end_of_i2c_init 5E72                    __end_of__rtcc_decrement_bcd 56CA  
                     __end_of__i2c_acknowledge 5EB2                                  ??__i2c_open_1 0060  
                   __end_of__get_empty_cluster 3F24                                  _adc_calibrate 5E72  
                         ??_USBCheckMSDRequest 0039                                 __CFG_OSC$HSPLL 000000  
       MSDComputeDeviceInAndResidue@DiExpected 0060                        _USBCheckMSDRequest$2643 0039  
                      _USBCheckMSDRequest$2644 003B                          system_init@appendtext 0100  
                    __size_of_USBCtrlEPService 0096                            ??__buck_timer2_init 0060  
                                       ??_main 00D6                               __end_of__i2c_get 5EA8  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0394                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 002E  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 5EF2  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 5EEE  
                                  ?_USBSuspend 002E    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year 5A76                __size_of_rtcc_increment_minutes 0022  
              __size_of_rtcc_increment_seconds 0022                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes 5E4A                       __end_of_rtcc_get_seconds 5E2E  
                  __size_of__write_calibration 0094                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach 55B0                         __flash_write_to_buffer 4DAC  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                       __get_dateTime@datetime 0074                                         _ADRESH 000FC4  
                                       _ADRESL 000FC3                                         _CCPR1L 000FBB  
                                       _EECON2 000FA7                                         _DMABCH 000F66  
                                       _DMABCL 000F67                               ___awdiv@dividend 0060  
                       ?_i2c_digipot_reset_off 002E                                ?_ResetSenseData 002E  
                  ??__get_available_root_entry 008E                                     __i2c_start 5ECE  
                       SYSTEM_Initialize@state 0060                                     __i2c_write 4E4E  
                                 __display_usb 04D6                               __end_of_adc_init 5B9A  
                             __end_of_adc_read 39A0                                         i2l1330 3452  
                                       i2l1322 3468                                         i2l1331 343C  
                                       i2l1332 3466                                         i2l1324 3420  
                                       i2l1333 3442                                         i2l1325 3408  
                                       i2l1334 3448                                         i2l1326 3434  
                                       i2l1335 3472                                         i2l1327 340E  
                                       i2l1336 3480                                         i2l1328 3416  
                                       i2l4001 57EE                                         i2l1337 347E  
                                       i2l4002 57DE                                         i2l1339 348C  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
                                       i2l3995 48D4                                         i2l3996 489C  
              ??_APP_DeviceCustomHIDInitialize 003A                       ?__fill_buffer_get_status 002E  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init 5C50                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler 0158  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                             __end_of___xxtofl 0A3C                       i2USBTransferOnePacket@ep 0036  
                             ??__i2c_wait_idle 0060                              ??i2_USBDeviceInit 0036  
                       ?_display_get_character 0060                               ?_display_prepare 002E  
              __size_ofi2_USBTransferOnePacket 0102                                __read_root@slot 008E  
                            ?__get_input_power 006E                        __write_calibration@addr 0097  
                  fat_append_to_file@file_size 009F                        __write_calibration@cntr 009C  
                               __CFG_WPDIS$OFF 000000                               __read_fat@offset 008B  
                             _i2c_eeprom_tasks 4100                              _shortPacketStatus 002A  
            fat_append_to_file@number_of_bytes 0091                     __get_empty_cluster@cluster 008F  
                               __CFG_XINST$OFF 000000                               _i2c_eeprom_write 3C30  
                           ??__get_input_power 0070                                rtcc_set_day@day 0060  
                 ??__parse_command_calibration 0067                                USBDeviceTasks@i 004C  
                                  i2memcpy@tmp 0038                                   _CCPTMRS0bits 000F52  
                  USBStdFeatureReqHandler@pUEP 0046                       USBTransferOnePacket@data 0061  
                   USBCtrlTrfInHandler@lastDTS 002F                   __end_of__flash_set_page_size 424E  
                              ??_USBDeviceInit 0068             __flash_copy_page_to_buffer@command 0079  
                     __end_of_rtcc_correct_day 5B40                       flash_partial_read@length 0077  
                                       ___lmul 4B04                                         _gblCBW 0241  
                                    ??___aldiv 0068                             __size_of__i2c_read 0094  
                           __size_of__i2c_send 000A                         __size_of__get_dateTime 0146  
                                    ??___awdiv 0064                                 __CFG_STVREN$ON 000000  
                           __size_of__i2c_stop 0008                         __size_of__get_checksum 0036  
                                    ??___fltol 0064                                      ??___lldiv 0068  
                                    ??___lwdiv 0064    i2SYSTEM_Initialize@pll_startup_counter_3287 0030  
    SYSTEM_Initialize@pll_startup_counter_3287 0063                   __size_of_flash_partial_write 006C  
                               ?_adc_calibrate 002E                                     _SoftDetach 01F6  
                                    ??___lwmod 0064                                         _buffer 0800  
                            _USBEnableEndpoint 5396                __size_of_USBStdGetStatusHandler 009C  
              __size_of_buck_remote_get_status 0028                        system_output_off@output 0061  
                              __get_date@month 0069                                         _memcpy 4716  
                   ?_adc_calculate_temperature 006C                                         _memset 55E0  
                      __end_of_i2c_eeprom_read 4D5A                                         clear_0 2CB6  
                                       clear_1 2CC8                                         clear_2 2CD4  
                                       clear_3 2CE0                                         clear_4 2CEC  
                                       clear_5 2CF8                      _ExternalFlash_SectorWrite 54AE  
                                       clear_6 2D04                                __CFG_CLKOEC$OFF 000000  
                             __end_of_inq_resp C3E1                               ___awdiv@quotient 0066  
                       ??_i2c_digipot_reset_on 006A                                         _ui_run 212C  
                      ?_system_encoder_disable 002E                             ?_USBEnableEndpoint 0036  
                 __size_of__buck_operate_local 047E                           __end_of_buck_operate 488A  
                           _flash_partial_read 3F9E                                         _status 01F0  
                        i2c_display_init@F6880 03E4                                         _strlen 531A  
                      ?_rtcc_decrement_minutes 002E                        ?_rtcc_decrement_seconds 002E  
                       __display_outputs@F7251 C0B5                         __display_outputs@F7245 C269  
                       __display_outputs@F7247 C20B                         __display_outputs@F7249 C0CA  
                       __size_of__buck_prepare 0064                  __size_of_USBTransferOnePacket 0106  
                          __size_of_USBMSDInit 0112                    i2c_display_write_fixed@data 0065  
                   __end_of_log_generate_entry DDC4    i2c_display_send_init_sequence@init_sequence 006A  
                       __size_of__flash_wakeup 0058                        __write_root@root_sector 008B  
                                       itoa@cp 0076                         __size_of__flash_spi_tx 005A  
                            _i2c_set_frequency 4170                          system_init@extension2 017E  
                        __end_of_fat_find_file 2C4E         buck_remote_set_synchronous@synchronous 0060  
                  fat_get_empty_clusters@value 008D                         _fat_get_empty_clusters 36E2  
                __size_of__parse_command_short 00E4                         ?_rtcc_get_year_decimal 002E  
               __display_charger@charger_async 0124            __size_of_get_next_eeprom_write_task 002C  
                                 __mediumconst C08A                            __end_of__i2c_open_1 5C38  
               i2c_digipot_reset_on@data_array 006A                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                  __end_of__display_time@F7200 C2F7                    __end_of__display_time@F7202 C2EE  
                  __end_of__display_time@F7210 C2C3                    __end_of__display_time@F7204 C307  
                  __end_of__display_time@F7212 C157                    __end_of__display_time@F7220 C143  
                  __end_of__display_time@F7206 C2E4                    __end_of__display_time@F7214 C1C6  
                  __end_of__display_time@F7222 C12F                      __rtcc_decrement_bcd@value 0067  
                  __end_of__display_time@F7208 C2CF                    __end_of__display_time@F7216 C25B  
                  __end_of__display_time@F7224 C24B                    __end_of__display_time@F7218 C1B4  
                                    ??_ui_init 0060                    __end_of__display_time@F7198 C285  
             __size_of_APP_DeviceMSDInitialize 0010                ??__flash_compare_page_to_buffer 0076  
                          ??_USBEnableEndpoint 0037                             ?_i2c_set_frequency 002E  
            __end_of__display_efficiency@F7280 C269              __end_of__display_efficiency@F7276 C17D  
            __end_of__display_efficiency@F7278 C16A                            ?_flash_partial_read 0073  
                      __end_of__number_of_days 445E                       __size_of_flash_page_read 0028  
                    __fill_buffer_get_display1 4F3E                      __fill_buffer_get_display2 4EEE  
                                    ??_tmr_isr 002E                     __end_of__root_is_available 3E2E  
                       ??_system_output_toggle 0062                      __size_of_system_output_on 004E  
                                  _CtrlTrfData 000D38           __end_of_buck_remote_change_dutycycle 5104  
        __size_of_buck_remote_change_dutycycle 004A                   _buck_remote_change_dutycycle 50BA  
                                    ??_strncmp 0066                           __size_of__write_root 005C  
           buck_remote_change_dutycycle@change 0060                          __end_of_ui_get_status 5EE2  
           __size_of_buck_remote_get_dutycycle 0006                         __display_outputs@line3 0060  
                       __display_outputs@line4 0075              i2ExternalFlash_MediaDetect@config 002E  
              ExternalFlash_MediaDetect@config 0060                           _controlTransferState 0029  
                   ??_APP_DeviceCustomHIDTasks 008C                          __flash_spi_tx_rx@data 0064  
                         __CFG_LS48MHZ$SYS48X8 000000                                   ___xxtofl@arg 0078  
                                 ___xxtofl@exp 0077                        ?_rtcc_get_month_decimal 002E  
                            _SYSTEM_Initialize 49F6                                   ___xxtofl@val 006E  
                __size_of__display_temperature 01C8                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization 2D0A              MSDCheckForErrorCases@MSDErrorCase 0070  
                   log_write_to_disk@log_entry 0101                    ?__parse_command_calibration 0063  
                              ?_MSDReadHandler 002E                   __size_of__buck_set_dutycycle 006A  
                         __end_of_i2c_adc_read 4DAC                         ??_rtcc_increment_hours 0068  
                           ?_SYSTEM_Initialize 002E                         ??_rtcc_increment_month 0068  
                       __size_of__display_itoa 0206                                  ___rparam_used 000001  
                       __size_of__display_time 0640                         _rtcc_increment_minutes 5A10  
                       _rtcc_increment_seconds 59CC                       __size_of_USBStallHandler 0044  
                                   ___fltol@f1 0060                   __end_of__i2c_not_acknowledge 5E9E  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle 30D2                    __end_of__parse_command_long 2304  
                __size_of_rtcc_get_day_decimal 0010                             __size_of__get_date 0068  
                          __size_of_USBSuspend 0030                             __size_of__get_time 006A  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom 0E06                           ??_flash_partial_read 007B  
                             _flash_page_write 4DFE                              ?__get_temperature 006E  
                               __pcstackCOMRAM 002E                     __size_of__flash_get_status 0034  
                    __end_of_USBEnableEndpoint 53D2                              _log_write_to_disk 4018  
                       ??__buck_set_sync_async 0063            __size_of_ExternalFlash_CapacityRead 0014  
                           __rtcc_write_enable 5D10                        _battery_voltage_maximum 02E9  
        __end_of__fill_buffer_get_calibration1 3DB2         __size_of__fill_buffer_get_calibration1 0080  
                __fill_buffer_get_calibration1 3D32          __end_of__fill_buffer_get_calibration2 46B4  
       __size_of__fill_buffer_get_calibration2 0062                  __fill_buffer_get_calibration2 4652  
                                __end_of_sd000 C436                                  __end_of_sd001 C38F  
                                __end_of_sd002 C3BD                                  __end_of_sd003 C418  
                         buck_remote_set_on@on 0060                                      ?_MSDTasks 002E  
                                 __pidataBANK2 5358                                   __pidataBANK3 5BB6  
                                 __pidataBANK4 438E                            ??_SYSTEM_Initialize 0060  
                    __get_available_root_entry 5800                           __rtcc_verify_bcd@max 0061  
                         __rtcc_verify_bcd@min 0060           ExternalFlash_SectorWrite@sector_addr 0086  
             __size_of_USBCtrlEPAllowDataStage 0098                             __buck_prepare@cntr 0060  
         __size_of_i2c_eeprom_read_calibration 011E                             ??__get_temperature 0070  
                    rtcc_decrement_hours@hours 0068                             __size_of__read_fat 004A  
                              _active_protocol 01FE                            i2USBStallEndpoint@p 0034  
                           ?_log_write_to_disk 002E                 __end_of_system_encoder_disable 5EDC  
                __size_of_USBConfigureEndpoint 0094             __size_of_ExternalFlash_MediaDetect 000A  
                  __end_of_USBCtrlTrfInHandler 3018                   ?_buck_remote_set_synchronous 002E  
                          _userInterfaceStatus 01F3                 __end_of_rtcc_decrement_minutes 5ADC  
               __end_of_rtcc_decrement_seconds 5A98                            display_prepare@mode 00D5  
                                 _gblSenseData 0260                                _MSDErrorHandler 14F4  
               ?_ExternalFlash_MediaInitialize 0060                      __end_of_i2c_set_frequency 41E0  
                          ?__rtcc_write_enable 002E                         i2_USBTransferOnePacket 1C48  
                          system_init@filename 0168                   __size_of_system_output_is_on 001A  
                                   __buck_stop 57A8                            ??_log_write_to_disk 00D0  
             fat_get_empty_clusters@fat_sector 0089                   buck_remote_set_enable@remote 0060  
                                    ?i2_memcpy 002E                                      ?i2_memset 002E  
        __end_of_MSDProcessCommandMediaPresent D2EE         __size_of_MSDProcessCommandMediaPresent 03CA  
                _MSDProcessCommandMediaPresent CF24                         flash_partial_read@data 0079  
                           __size_of_buck_init 000E                         flash_partial_read@page 0073  
                                __get_date@day 006A                __size_of_buck_remote_set_enable 001C  
                     ??_USBCtrlTrfSetupHandler 004B                        _USBTicksSinceSuspendEnd 01FA  
                                __get_dateTime 07B2                                  __get_checksum 540C  
            __flash_copy_page_to_buffer@buffer 0075                               ?_USBDeviceAttach 002E  
                    __end_of_SYSTEM_Initialize 4A50                        ??__update_modified_time 006F  
                            __end_of__i2c_read 35BA                   __size_of__rtcc_write_disable 0016  
                            __end_of__i2c_send 5EC6                         _USBStdGetStatusHandler 322E  
               __end_of_rtcc_get_month_decimal 5DC4                            USBStallEndpoint@dir 0060  
                            __end_of__i2c_stop 5ECE                         _buck_remote_get_status 587C  
                                  ?__i2c_start 002E                                    ?__i2c_write 0065  
                                   __pbssBANK0 00D8                                     __pbssBANK1 01D3  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                   __pbssBANK4 0468                         __read_root@root_sector 008A  
                fat_append_to_file@fat_cluster 00A5               __size_of_i2c_display_write_fixed 005A  
                             _USBStallEndpoint 182E                                     _gblNumBLKS 02AA  
                ?_buck_remote_change_dutycycle 002E                                      ?_i2c_init 002E  
                           _buck_get_dutycycle 5EE8                      __size_of__rtcc_verify_bcd 0046  
            __end_of_buck_remote_get_dutycycle 5EE8                   __end_of__sector_from_cluster 5DE4  
                         ??__rtcc_write_enable 0060                   ??_schedule_eeprom_write_task 0060  
                                   __read_root 47D2                     __size_of__buck_timer2_init 0018  
                             _mediaInformation 02B6                   __end_of_rtcc_decrement_hours 5AFE  
                 __end_of_rtcc_decrement_month 5ABA                                  __buck_prepare 44C6  
                                __flash_wakeup 4B5C                      rtcc_decrement_month@month 0068  
                                __flash_spi_tx 4AAA                                      ?__i2c_get 002E  
                  __size_of_USBWakeFromSuspend 0036                                    _pBDTEntryIn 0010  
                    __end_of_log_write_to_disk 408C                    __size_of_i2c_display_cursor 002A  
                   __update_modified_time@root 006D               __end_of_USBCtrlEPServiceComplete 212C  
        __end_of_APP_DeviceCustomHIDInitialize 557E         __size_of_APP_DeviceCustomHIDInitialize 0034  
                _APP_DeviceCustomHIDInitialize 554A                           log_collect_data@temp 0078  
                  MSDTransferTerminated@handle 0039                            ?_buck_get_dutycycle 002E  
           ExternalFlash_SectorSizeRead@config 0060                           USBCtrlTrfRxService@i 002E  
                              ??_adc_calibrate 0060                         __size_of_log_start_new 00DA  
                                      ?___lmul 0060                                     ??_MSDTasks 00AC  
                       __display_itoa@decimals 007A                        ??_i2c_digipot_backlight 006A  
                      __get_checksum@log_entry 0060                              ?__display_charger 002E  
               __flash_write_to_buffer@command 007A                  rtcc_decrement_minutes@minutes 0068  
                                    MSDTasks@i 00B1                                        _CCP1CON 000FBA  
                         i2c_adc_start@channel 006C                                        ?_memcpy 0060  
                           _fat_append_to_file F742                                        ?_memset 0060  
                               ___lmul@product 0068                                     _device_dsc C418  
                             ??_display_update 0070                               ?_i2c_eeprom_read 0071  
                                  __i2c_open_1 5C20                             ??__display_charger 0090  
                             _USBCtrlEPService 3490              system_calculate_input_voltage@tmp 0070  
                                      ?_ui_run 002E                                     _ep_data_in 01E4  
                           __display_clear@col 0063                                      ?_adc_init 002E  
                                    ?_adc_read 0060                         rtcc_read_eeprom@buffer 0092  
                           __display_clear@row 0062                                        ?_strlen 0060  
                fat_append_to_file@file_number 00A9                 __parse_command_calibration@cmd 002E  
                ??_buck_remote_set_synchronous 0060                    APP_DeviceCustomHIDTasks@idx 0096  
             __sector_from_cluster@fat_cluster 0060                    __end_of_USBCtrlTrfRxService 182E  
                                __display_itoa FB86                                  __display_time C466  
                           _USBCheckStdRequest 2840                      __write_calibration@buffer 0087  
                            _configDescriptor1 C31B                                        i2l12309 57DE  
                                      i2l11633 294A                                        i2l22241 0B0E  
                                      i2l11923 2A10                                        i2l11871 4CC2  
                                      i2l14417 489C                                        i2l11875 4CE0  
                                      i2l23501 39EC                                        i2l23503 3A20  
                                      i2l16171 0BBE                                        i2l16199 0C1E  
                      ??_MSDCheckForErrorCases 006E                                        i2l18581 26CA  
                           __size_of_rtcc_init 001A                                      ?___xxtofl 006E  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 4D08  
                                   ??i2_memcpy 0034                         fat_append_to_file@data 0093  
                                   ??i2_memset 0034                                     _flash_init 514A  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService 2AB8  
                            __end_of__get_date 44C6                            _USBStdSetCfgHandler 268A  
          __size_of_schedule_eeprom_write_task 0050                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 4324  
                            ?__display_outputs 002E                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 002E                     __end_ofi2_USBStallEndpoint 1B44  
                           _rtcc_decrement_day 593C                            __rtcc_increment_bcd 566E  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes 5CB0                       __end_of_rtcc_set_seconds 5C80  
                          ?_USBCheckStdRequest 002E                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 012C                       __display_charger@fan_off 0100  
                         __flash_set_page_size 41E0                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task 577C  
                   _get_next_eeprom_write_task 5750                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks 5D74                                        _UIRbits 000F62  
                            __end_of__read_fat 5026                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 3EAA         __size_of__flash_compare_page_to_buffer 007C  
                __flash_compare_page_to_buffer 3E2E                                     __write_fat 525A  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 002E                                   ??_USBMSDInit 0039  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 002E                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 002E  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 002E                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand 0E06  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 002E  
                                   _lastSecond 01EF                           ?_USBStdSetCfgHandler 002E  
                        __end_of_rtcc_get_year 5E20                    __size_of_USBCheckHIDRequest 00D0  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 0026  
                           ??i2_ResetSenseData 002E                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01B6                              __end_of_hid_rpt01 C3FE  
                       _buck_remote_set_enable 5B9A                             ?_MSDProcessCommand 002E  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler 1610  
                            __end_of_buck_init 5E12                     _MSDTransferTerminated$2732 003B  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 0098  
                    __size_of__flash_spi_tx_tx 0090           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 002E                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 002E                             __display_usb@F7241 C1EA  
                           __display_usb@F7235 C107                             __display_usb@F7237 C22B  
                           __display_usb@F7239 C21B                  __size_of__rtcc_bcd_to_decimal 001E  
                         ?__rtcc_increment_bcd 0064                          __size_of_buck_operate 005C  
                         ??_USBCheckStdRequest 004B                                        ___aldiv 2AB8  
                __size_of_USBCtrlTrfOutHandler 005C          i2ExternalFlash_MediaInitialize@config 002E  
          ExternalFlash_MediaInitialize@config 0060                                        ___awdiv 3894  
                             _ToSendDataBuffer 03A4                                __size_of___lmul 0058  
                                      ___fltol 25AC                                        ___lldiv 3A26  
                             ??_USBDeviceTasks 004C                                        ___lwdiv 4C60  
                            ??_USBStallHandler 002E                                        ___lwmod 51D2  
                           ??_log_collect_data 0074                              ?__i2c_acknowledge 002E  
                        __end_of_buck_get_mode 5EF6                            __size_of__i2c_start 0008  
                 __end_of__system_encoder_init 531A                                        __pcinit 2C4E  
                              __size_of_memcpy 0060                            __size_of__i2c_write 0050  
                              __size_of_memset 0030                       __size_of_MSDWriteHandler 02DC  
                    __end_of_configDescriptor1 C35B                            ??_MSDProcessCommand 00A7  
                                      __ramtop 0F00                   ExternalFlash_SectorRead@page 0093  
               ?__fill_buffer_get_calibration1 002E                 ?__fill_buffer_get_calibration2 002E  
                   __size_of_i2c_set_frequency 0070                                     ??_adc_init 0060  
                                   ??_adc_read 0062                                        __ptext0 E472  
                                      __ptext1 212C                                        __ptext2 5D74  
                                      __ptext3 5ED6                                        __ptext4 5640  
                                      __ptext5 58A4                                        __ptext6 58CA  
                                      __ptext7 56F8                                        __ptext8 D6B0  
                                      __ptext9 58F0                                 ?__display_itoa 0078  
                                      _inPipes 000A                           ??_rtcc_decrement_day 0068  
                              __size_of_ui_run 00EC                                 ?__display_time 002E  
                        _task_list_write_index 001D                             __display_time@cntr 01D2  
                 __end_of__display_inout@F7190 C1D8                   __end_of__display_inout@F7192 C319  
                 __end_of__display_inout@F7194 C293              __size_of_ExternalFlash_SectorRead 0034  
                 __end_of__display_inout@F7188 C1EA                    _USBDeferOUTDataStagePackets 01FB  
                           __display_time@mode 01CB                             ??__i2c_acknowledge 0060  
                                    _T0CONbits 000FD5                             __display_time@year 01CC  
                        __end_of_rtcc_set_year 5C68                      ?_ExternalFlash_SectorRead 008B  
                              __size_of_strlen 003E                    __end_of__system_timer0_init 52DC  
                                    _T1CONbits 000FCD                                    ?__buck_stop 002E  
                                 ??_USBSuspend 0045                                      _T2CONbits 000FCA  
                           __end_of_USBMSDInit 1722                               ??_ResetSenseData 0060  
                      ?__flash_write_to_buffer 0073                                     ??___xxtofl 0072  
                      _APP_DeviceMSDInitialize 5DF4                                        _msd_cbw 000D40  
                     __end_of_i2c_eeprom_tasks 4170                               ___aldiv@dividend 0060  
                                      _msd_csw 000D80                        ??_i2c_digipot_reset_off 006A  
                         __i2c_not_acknowledge 5E94                       __end_of_i2c_eeprom_write 3CB2  
                              i2_USBDeviceInit 0B80                                        _ui_init 5D50  
                             i2USBDeviceInit@i 0036                                  _log_start_new 2766  
           __size_of_ExternalFlash_SectorWrite 0034                        __size_of__buck_pin_init 0030  
                        ?__flash_set_page_size 002E                                        _tmr_isr 33FA  
                        __end_of_flash_is_busy 5986                             __end_of_USB_CD_Ptr C31B  
                                   _msd_buffer 000600                             __get_empty_cluster 3EAA  
                            ?_rtcc_get_minutes 002E                              ?_rtcc_get_seconds 002E  
                   __size_of_SYSTEM_Initialize 005A                               _system_output_on 4F8E  
              __size_of_USBCtrlTrfSetupHandler 0090                          __size_of_i2c_adc_read 0052  
                __size_of__buck_operate_remote 00FE                                        _strncmp 3CB2  
                          _flash_partial_write 424E                           end_of_initialization 2D0A  
                      rtcc_decrement_year@year 0068                        ??_display_get_character 0061  
                        _MSDTransferTerminated 4C0A          __flash_compare_page_to_buffer@command 007B  
               ?_MSDProcessCommandMediaPresent 002E                             __end_of_USB_SD_Ptr C30F  
                  __end_of_rtcc_increment_year 59CC                             ??_rtcc_get_minutes 0060  
                           ??_rtcc_get_seconds 0060                            i2c_eeprom_write@dat 0072  
                                      memcpy@d 0067           __size_of_buck_remote_set_synchronous 0018  
                                      memcpy@n 0064                                        memcpy@s 0069  
                             __write_fat@value 008A                   __get_temperature@temperature 006E  
                          _pBDTEntryEP0OutNext 0018                      __rtcc_bcd_to_decimal@ones 0061  
                    __end_of_MSDProcessCommand 0F38                                        itoa@buf 0070  
                                  ?__read_root 0087                      __rtcc_bcd_to_decimal@tens 0060  
                                      memset@c 0062                                        itoa@val 0072  
                                      memset@n 0064                                        memset@p 0066  
                          __buck_operate_local CAA6                                _USB1msTickCount 01DD  
                     __buck_operate_local$8817 007B                                   _buck_operate 482E  
                          ?__get_empty_cluster 0087                   fat_get_empty_clusters@offset 008B  
                                    i2u1221_40 48BE                                      i2u1221_47 48B4  
                     ?_USBStdFeatureReqHandler 002E                                      i2u2206_40 0B7C  
                i2c_eeprom_write@slave_address 0083                                      i2u1461_40 0BE2  
                                    i2u1464_40 0C82             __size_of__fill_buffer_get_display1 0050  
           __size_of__fill_buffer_get_display2 0050                       fat_append_to_file@length 00AA  
                             _inputCapacitySum 0282                                      i2u1644_48 16AA  
                                    i2u1644_49 16BE                                      i2u1734_40 26FE  
                                    i2u1646_48 16D0                                      i2u1646_49 16E6  
                                    i2u1752_40 F1F4                                      i2u1648_44 1704  
                                    i2u1648_45 16FE                       fat_append_to_file@offset 00A7  
                        ??_USBStdSetCfgHandler 0045                                ___lldiv@divisor 0064  
                   __size_of_log_write_to_disk 0074            rtcc_get_minutes_decimal@bcd_minutes 0063  
                     fat_append_to_file@sector 009D                              __end_of_rtcc_init 5BEC  
               ??_buck_remote_change_dutycycle 0060                                ___lldiv@counter 006C  
                          __end_of__buck_start 2DDA                                  ?_rtcc_get_day 002E  
          rtcc_get_seconds_decimal@bcd_seconds 0063                                   _averageCount 0016  
                        ??__rtcc_increment_bcd 0066                             __end_of_USBSuspend 5640  
                            __get_time@minutes 0069                              __get_time@seconds 006A  
                      _USBCtrlEPAllowDataStage 3362                     ?_buck_remote_set_dutycycle 002E  
                             ___aldiv@quotient 006A                    __size_of_buck_remote_set_on 0018  
                                      postdec1 000FE5                                        postdec2 000FDD  
         __end_of_ExternalFlash_SectorSizeRead 5E8A          __size_of_ExternalFlash_SectorSizeRead 000C  
                 _ExternalFlash_SectorSizeRead 5E7E                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                          rtcc_set_hours@hours 0060                              ?_rtcc_correct_day 002E  
                     __buck_operate_local@cntr 007D                           ?_flash_partial_write 007F  
                 __size_of__display_efficiency 034A               __size_of__fill_buffer_get_status 025C  
                                ??__ui_encoder 008B                                  ?_rtcc_set_day 002E  
                                      utoa@buf 0067                      _log_get_number_of_samples 5E8A  
      MSDProcessCommandMediaPresent@sectorSize 009E                       _USBCtrlEPServiceComplete 203A  
                                      utoa@val 0069                   log_write_to_disk@file_number 0100  
                                    _MSD_State 00E8                                  _inputPowerSum 028A  
                        _system_encoder_enable 5D74                                        strlen@s 0060  
                  ??_adc_calculate_temperature 006F                             ??_rtcc_correct_day 0064  
                  __size_of_USBCheckMSDRequest 00BE                     _USBStatusStageEnabledFlag1 0022  
                   _USBStatusStageEnabledFlag2 0021                       flash_partial_write@match 0087  
                         ?__buck_operate_local 002E                             USBEnableEndpoint@p 0037  
                      ?_fat_get_empty_clusters 0087                        ??_rtcc_get_year_decimal 0063  
                                    _PORTAbits 000F80                                      _PORTBbits 000F81  
                      __display_outputs@header 009A                               _outputCurrentSum 028E  
                     flash_partial_write@start 0081                      __size_of__get_input_power 0082  
                         ??__get_empty_cluster 0089                 __end_of__flash_write_to_buffer 4DFE  
                          __buck_set_dutycycle 4324                               __CFG_DSBOREN$OFF 000000  
                    __display_temperature@cntr 00C7                           __sector_from_cluster 5DD4  
                                 _i2c_adc_read 4D5A                           _rtcc_decrement_hours 5ADC  
                   __rtcc_bcd_to_decimal@input 0062                           _rtcc_decrement_month 5A98  
           __size_of__get_available_root_entry 002A                                ??__get_dateTime 0068  
                   __end_of__write_calibration 364E                          ?__i2c_not_acknowledge 002E  
                fat_append_to_file@new_cluster 00A3                       _rtcc_get_minutes_decimal 5D84  
                              ??__get_checksum 0062                         fat_create_file@cluster 00AE  
                          flash_page_read@data 0089                   __size_of__rtcc_decrement_bcd 002E  
                            adc_read@adc_value 0063                                    ?_flash_init 002E  
                          flash_page_read@page 0087                               __CFG_CPUDIV$OSC1 000000  
                fat_get_empty_clusters@cluster 0091                                  ___xxtofl@sign 0076  
                                    _TRISAbits 000F92                                 ?_log_start_new 002E  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISDbits 000F95                                      _TRISEbits 000F96  
                           _ReceivedDataBuffer 0478                             _BothEP0OutUOWNsSet 0025  
                fat_get_empty_clusters@maximum 0087                       __end_of_flash_page_write 4E4E  
                                __pbssBIGRAMll 0800                               ??_MSDReadHandler 0095  
                    USBConfigureEndpoint@EPNum 0033                        _i2c_display_write_fixed 499C  
                            __CFG_SOSCSEL$HIGH 000000                     ?_USBCtrlEPAllowStatusStage 002E  
                              ??__buck_prepare 0060                     __display_efficiency@header 0092  
                      __display_time@presssave 0170            USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                      __size_of__display_clear 004A                                      _USTATcopy 002C  
                              ??__flash_wakeup 0068                   __size_of_rtcc_decrement_year 0022  
                        __end_of_i2c_adc_start 540C             __end_of_schedule_eeprom_write_task 4EEE  
                   _schedule_eeprom_write_task 4E9E  MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
                      ?_rtcc_increment_minutes 002E                        ?_rtcc_increment_seconds 002E  
                              ??__flash_spi_tx 0064                                    ?__write_fat 0088  
                   __display_efficiency@footer 00B8                        __size_of__display_inout 01E6  
                 ?_i2c_eeprom_read_calibration 002E                               __rtcc_verify_bcd 5104  
                           _log_generate_entry DA44                i2c_eeprom_read_calibration@addr 007F  
                 __end_of_USBTransferOnePacket 1A3E                           ?__buck_set_dutycycle 002E  
              i2c_eeprom_read_calibration@cntr 0081                                    _CCP1CONbits 000FBA  
                     _rtcc_get_seconds_decimal 5DE4                            _system_output_is_on 5BEC  
          __end_ofi2_ExternalFlash_MediaDetect 5EFA                          i2c_eeprom_read@length 0075  
                  i2_ExternalFlash_MediaDetect 5EF6                            rtcc_set_month@month 0060  
                   __display_efficiency@source 00A5                         i2c_display_cursor@line 006E  
                             __CFG_IOL1WAY$OFF 000000                            __get_dateTime@hours 0071  
                 __end_of__parse_command_short 23E8                            __get_dateTime@month 006F  
                               ??_rtcc_get_day 0060                            __size_of__buck_stop 002C  
               ?__flash_compare_page_to_buffer 0073                             __root_is_available 3DB2  
                            __CFG_WPEND$PAGE_0 000000              __end_of__fill_buffer_get_display1 4F8E  
            __end_of__fill_buffer_get_display2 4F3E                            ?_log_generate_entry 0078  
           __flash_compare_page_to_buffer@page 0073                            __CFG_MSSP7B_EN$MSK7 000000  
                            ?_rtcc_read_eeprom 002E                  __get_empty_cluster@fat_sector 0089  
                             ?_MSDErrorHandler 002E                        __size_of_rtcc_get_hours 000E  
                      __size_of_rtcc_get_month 000E                               __write_root@data 0088  
                       _USBCtrlTrfSetupHandler 3804                 __end_of__display_outputs@F7251 C0CA  
               __end_of__display_outputs@F7245 C277                 __end_of__display_outputs@F7247 C21B  
               __end_of__display_outputs@F7249 C0DF         __end_of_system_calculate_input_current 13D6  
      __size_of_system_calculate_input_current 0124                 _system_calculate_input_current 12B2  
                        ??_flash_partial_write 0087                      system_output_is_on@output 0060  
                               ??_rtcc_set_day 0060                               __write_root@slot 008F  
                          __rtcc_write_disable 5D26               ExternalFlash_CapacityRead@config 0060  
                      ?i2_USBTransferOnePacket 002E                       __size_of_display_prepare 0082  
                        __end_of_USBDeviceInit 07B2                             ??_rtcc_read_eeprom 008B  
        __end_of_USBIncrement1msInternalTimers 5B60         __size_of_USBIncrement1msInternalTimers 0020  
                _USBIncrement1msInternalTimers 5B40                   __end_of__display_temperature 0320  
                               __end_of___lmul 4B5C                 __end_of_fat_get_empty_clusters 3774  
                              ??__display_itoa 007D                  ?_ExternalFlash_SectorSizeRead 0060  
                              ??__display_time 0060             __end_of__display_temperature@F7300 C2AB  
                   __display_temperature@F7300 C29F             __end_of__display_temperature@F7302 C29F  
                   __display_temperature@F7302 C293             __end_of__display_temperature@F7296 C0F3  
                   __display_temperature@F7296 C0DF             __end_of__display_temperature@F7298 C2DA  
                   __display_temperature@F7298 C2CF                            ?__root_is_available 002E  
                            __size_of_MSDTasks 0260                          ??__buck_operate_local 0076  
                     __end_of_USBStallEndpoint 1938                                      i2memcpy@d 0034  
                     ?__buck_initial_dutycycle 002E                                      i2memcpy@n 0032  
                            ??_fat_create_file 00A3                        __end_ofi2_USBDeviceInit 0CC4  
                                    i2memcpy@s 0036                      ??_APP_DeviceMSDInitialize 003C  
                                    i2memset@c 0030                                      i2memset@n 0032  
                                    i2memset@p 0034                          ?__sector_from_cluster 0060  
                         ?_system_output_is_on 002E                                 __end_of_memcpy 4776  
                              _MSDRetryAttempt 01F8                           i2USBStallEndpoint@ep 0033  
       __end_of_system_calculate_input_voltage 25AC        __size_of_system_calculate_input_voltage 00E2  
               _system_calculate_input_voltage 24CA                                 __end_of_memset 5610  
                        __get_output_power@pwr 006F                          ?_rtcc_decrement_hours 002E  
                             __CFG_DSWDTEN$OFF 000000                        __parse_command_long@cmd 0064  
                        ?_rtcc_decrement_month 002E                            __size_of__read_root 005C  
                __size_of_i2c_digipot_reset_on 0026                              _USBBusIsSuspended 0027  
                    flash_partial_write@length 0083                                 __end_of_ui_run 2218  
                 __end_of_rtcc_get_day_decimal 5DD4          __get_available_root_entry@file_number 008E  
                               __end_of_strlen 5358                  __display_temperature@internal 00BC  
                          __end_of__ui_encoder DA44                      __flash_set_page_size@size 0077  
                                _chargerOnTime 02B0                            start_initialization 2C4E  
                      ?_USBStdGetStatusHandler 002E                                  ??__write_root 008A  
                    __size_of__get_temperature 002C                        ?_buck_remote_get_status 002E  
                         ??_log_generate_entry 007A                       i2SYSTEM_Initialize@state 0032  
                ExternalFlash_SectorWrite@page 008D                  USBCtrlTrfRxService@byteToRead 002F  
                       ??__flash_set_page_size 0073                              ??_MSDWriteHandler 008F  
            __end_of__get_available_root_entry 582A                       ??_rtcc_get_hours_decimal 0063  
               get_next_eeprom_write_task@task 0060                              __size_ofi2_memcpy 005C  
                   i2c_display_cursor@position 006D                           ?__rtcc_write_disable 002E  
                       ?_MSDTransferTerminated 0039                         __display_charger@F7261 C30F  
                       __display_charger@F7263 C2F7                         __display_charger@F7271 C0F3  
                       __display_charger@F7255 C0A0                         __display_charger@F7265 C2AB  
                       __display_charger@F7257 C190                         __display_charger@F7267 C1FB  
                       __display_charger@F7259 C17D                         __display_charger@F7269 C08B  
                            __size_ofi2_memset 002C                                _USBMSDOutHandle 00DE  
             __ic2_display_set_address@address 006A                 __end_of_rtcc_increment_minutes 5A32  
                 __end_of_USBConfigureEndpoint 36E2                 __end_of_rtcc_increment_seconds 59EE  
                         system_init@filename2 0171                                   ??__i2c_start 0060  
                                 ??__i2c_write 0068                __end_of_USBStdFeatureReqHandler F286  
                            USBStallEndpoint@p 0066                                  _MSDHostNoData 00E6  
                         _task_list_read_index 001E                      _adc_calculate_temperature 1F44  
                         ??__root_is_available 0087                 __size_of__update_modified_time 0036  
            __end_of_USBCtrlEPAllowStatusStage 2E9C                  __size_of_system_output_toggle 0026  
                                  __buck_start 2D14                  __end_of__update_modified_time 5478  
         fat_get_empty_clusters@empty_clusters 008F                          ??__buck_set_dutycycle 0060  
                     __end_of_USBCtrlEPService 3526                     __size_of_MSDProcessCommand 0132  
                         __system_encoder_init 52DC                                      __i2c_read 3526  
                      __size_of_rtcc_set_hours 0018                           rtcc_read_eeprom@date 008C  
                                    __i2c_send 5EBC                        __size_of_rtcc_set_month 0018  
                                    __i2c_stop 5EC6                           __flash_spi_tx@length 0062  
      _ExternalFlash_MediaInitialize$intlevel0 5B04                  ??_i2c_eeprom_read_calibration 0079  
                         __display_inout@F7190 C1C6                           __display_inout@F7192 C316  
                         __display_inout@F7194 C285                           __display_inout@F7188 C1D8  
                            __size_of_i2c_init 000C                              _rtcc_write_eeprom 5070  
                    ??_USBCtrlEPAllowDataStage 002F                               __buck_start@cntr 0075  
                               USBDeviceInit@i 0068                               __buck_start@mode 0073  
                       __write_calibration@ptr 0099                  __size_of_rtcc_increment_hours 0022  
                __size_of_rtcc_increment_month 0022                  __root_is_available@first_byte 008D  
                       _pBDTEntryEP0OutCurrent 001A                         __size_of_fat_find_file 00C8  
                           ?_rtcc_write_eeprom 002E                                    _DMACON1bits 000F88  
                       i2c_eeprom_write@length 006E                                    _DMACON2bits 000F86  
                          __size_of_flash_init 0044                        USBTransferOnePacket@dir 0060  
                             __flash_spi_tx_rx 32CA                               __flash_spi_tx_tx 3774  
                      USBTransferOnePacket@len 0063                              __size_of__i2c_get 000A  
                  MSDErrorHandler@OldMSD_State 0069                                  _MSDTasks$2697 00AD  
               __end_ofi2_USBTransferOnePacket 1D4A                                  _MSDTasks$2698 00AF  
                  __size_of_flash_partial_read 007A                                 __get_date@date 006B  
                                     ??___lmul 0068                               _outputVoltageSum 0292  
                      flash_partial_read@start 0075                                 __get_date@year 0068  
                          _USBStdGetDscHandler 0F38                         ?_system_encoder_enable 002E  
                       system_output_on@output 0060                              __CFG_ADCSEL$BIT10 000000  
            __size_of_APP_DeviceCustomHIDTasks 0364                                    __pdataBANK2 02BB  
                                  __pdataBANK3 03E4                                    __pdataBANK4 0400  
                __size_of__buck_set_sync_async 0074                      ?_APP_DeviceCustomHIDTasks 002E  
                      rtcc_increment_year@year 0068                           __size_of_system_init 0104  
               __size_of_i2c_digipot_backlight 002C                                       ??_memcpy 0066  
                      __size_of__i2c_wait_idle 0064                                       ??_memset 0066  
                         __display_inout@line1 0090                           system_init@extension 017A  
                         __display_inout@line2 00A2                   __size_of__parse_command_long 00EC  
                         __display_inout@line3 00C2                           __display_inout@line4 00B4  
                __end_of_i2c_digipot_backlight 5724                                   ?__i2c_open_1 002E  
                       __size_of_ui_get_status 0006                            ??_rtcc_write_eeprom 0085  
                        ??_system_output_is_on 0060                                       ??_ui_run 008B  
                           __end_of__i2c_start 5ED6                          __number_of_days@month 0063  
                           __end_of__i2c_write 4E9E                      __root_is_available@offset 008A  
                          __size_of__write_fat 0042                                       ??_strlen 0062  
                        __display_outputs@cntr 00A9                         ??__i2c_not_acknowledge 0060  
                        __display_outputs@mode 00A8                         _USBActiveConfiguration 002D  
               __end_of_USBStdGetStatusHandler 32CA                       _buck_dutycycle_last_step 01F2  
                              ??_log_start_new 0064                 __end_of_buck_remote_get_status 58A4  
                    __buck_operate_remote$8818 0076                              __size_of_adc_init 001C  
                            __size_of_adc_read 0086                                    __pbssCOMRAM 0001  
                              adc_read@channel 0062                     fat_append_to_file@position 00AC  
                  fat_create_file@next_cluster 00A7                                _flash_page_read 5854  
                    ??_i2c_display_write_fixed 0068                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                   __size_of_USBCtrlTrfInHandler 00BE  
                 ??_ExternalFlash_CapacityRead 0064                 __size_of_MSDCheckForErrorCases 00FC  
                               __buck_pin_init 55B0                  __end_of_MSDCheckForErrorCases 1F44  
                        ??__rtcc_write_disable 0060                              __size_of___xxtofl 0144  
                                    _gblBLKLen 02A6                      __size_of__display_charger 0308  
           __end_of_flash_command_pagesize_512 C432                     _flash_command_pagesize_512 C42E  
           __end_of_flash_command_pagesize_528 C42E                     _flash_command_pagesize_528 C42A  
                         ?_USBStdGetDscHandler 002E                     i2c_set_frequency@frequency 0060  
                            ?_rtcc_set_minutes 002E                              ?_rtcc_set_seconds 002E  
                                    __get_date 445E                         __get_checksum@checksum 0064  
                                    __get_time 42BA                    ?_get_next_eeprom_write_task 002E  
                          __end_of__write_root 47D2                          ?__system_encoder_init 002E  
                   __end_of_USBWakeFromSuspend 54AE                             ??_rtcc_set_minutes 0060  
                           ??_rtcc_set_seconds 0060                      __end_of_rtcc_write_eeprom 50BA  
                   __end_of_i2c_display_cursor 5854                                     ?__i2c_read 0065  
                  __size_of__rtcc_write_enable 0016                                     ?__i2c_send 002E  
                              _USBStallHandler 5216                                   _pBDTEntryOut 01D3  
                                   ?__i2c_stop 002E                        ?_buck_remote_set_enable 002E  
                   ?_buck_remote_get_dutycycle 002E                                      __read_fat 4FDC  
               schedule_eeprom_write_task@task 0061                       __size_of_USBDeviceAttach 0032  
                      __rtcc_decrement_bcd@max 0065                        __rtcc_decrement_bcd@min 0064  
             __end_of_ExternalFlash_SectorRead 5516                       __get_checksum@byte_array 0062  
                           i2_USBStallEndpoint 1A3E                      __size_of__display_outputs 0222  
                             ___lwdiv@dividend 0060                            flash_is_busy@status 0071  
                 buck_remote_get_status@retval 0060                              fat_find_file@name 0087  
               MSDProcessCommandMediaPresent@i 00A6                            fat_find_file@buffer 008B  
                            fat_find_file@slot 0096                                      __pintcode C008  
                    fat_create_file@root_entry 00B0                        __fill_buffer_get_status F4E6  
                           _APP_DeviceMSDTasks 5D62                                  __pmediumconst C08A  
                                     ?___aldiv 0060                            fat_find_file@offset 0099  
                                     ?___awdiv 0060                                      __ptext100 C466  
                                    __ptext101 0158                                      __ptext110 FB86  
                                    __ptext102 F964                                      __ptext111 531A  
                                    __ptext103 FD8C                                      __ptext200 5E58  
                                    __ptext120 57A8                                      __ptext112 518E  
                                    __ptext104 E128                                      __ptext201 587C  
                                    __ptext121 2D14                                      __ptext113 3184  
                                    __ptext105 08F8                                      __ptext210 4716  
                                    __ptext202 5EE2                                      __ptext130 0668  
                                    __ptext122 408C                                      __ptext114 51D2  
                                    __ptext106 25AC                                      __ptext211 1938  
                                    __ptext203 5EF2                                      __ptext131 55E0  
                                    __ptext123 4324                                      __ptext115 4C60  
                                    __ptext107 2AB8                                      __ptext220 3490  
                                    __ptext204 5EE8                                      __ptext140 5EEE  
                                    __ptext132 557E                                      __ptext124 3018  
                                    __ptext116 482E                                      __ptext108 5026  
                                    __ptext221 488A                                      __ptext213 33FA  
                                    __ptext205 4EEE                                      __ptext141 54AE  
                                    __ptext133 49F6                                      __ptext125 3A26  
                                    __ptext117 1D4A                                      __ptext109 E78C  
                                    __ptext230 F00E                                      __ptext222 3804  
                                    __ptext214 0A3C                                      __ptext206 4F3E  
                                    __ptext150 182E                                      __ptext142 4DFE  
                                    __ptext134 5D62                                      __ptext126 391A  
                                    __ptext118 44C6                                      __ptext231 39A0  
                                    __ptext223 203A                                      __ptext215 0B80  
                                    __ptext207 56CA                                      __ptext151 45F0  
                                    __ptext143 4DAC                                      __ptext135 F286  
                                    __ptext127 5E72                                      __ptext119 CAA6  
                                    __ptext240 5C06                                      __ptext232 4CB4  
                                    __ptext224 3362                                      __ptext216 5478  
                                    __ptext208 4652                                      __ptext160 30D2  
                                    __ptext152 54E2                                      __ptext144 3774  
                                    __ptext136 0E06                                      __ptext128 1F44  
                                    __ptext241 5EF6                                      __ptext233 2E9C  
                                    __ptext225 2840                                      __ptext217 5610  
                                    __ptext209 3D32                                      __ptext161 5E7E  
                                    __ptext153 5854                                      __ptext145 4A50  
                                    __ptext137 458E                                      __ptext129 4B04  
                                    __ptext250 29E8                                      __ptext242 554A  
                                    __ptext234 2918                                      __ptext226 268A  
                                    __ptext218 5216                                      __ptext170 3C30  
                                    __ptext162 5D3C                                      __ptext154 3F9E  
                                    __ptext146 3E2E                                      __ptext138 CF24  
                                    __ptext251 0000                                      __ptext243 1C48  
                                    __ptext235 4C0A                                      __ptext227 57D4  
                                    __ptext219 5B40                                      __ptext171 4170  
                                    __ptext163 5AFE                                      __ptext155 5962  
                                    __ptext147 FF72                                      __ptext139 EA94  
                                    __ptext244 5396                                      __ptext236 1A3E  
                                    __ptext228 322E                                      __ptext180 5C80  
                                    __ptext172 4E4E                                      __ptext164 5EB2  
                                    __ptext156 4B5C                                      __ptext148 1E48  
                                    __ptext245 364E                                      __ptext237 5DF4  
                                    __ptext229 0F38                                      __ptext181 5C98  
                                    __ptext173 452A                                      __ptext165 DDC4  
                                    __ptext157 4AAA                                      __ptext149 14F4  
                                    __ptext246 48E6                                      __ptext238 1610  
                                    __ptext190 50BA                                      __ptext182 5CB0  
                                    __ptext174 5EC6                                      __ptext166 2304  
                                    __ptext158 5516                                      __ptext247 1722  
                                    __ptext239 46B4                                      __ptext191 1064  
                                    __ptext183 5CC8                                      __ptext175 5ECE  
                                    __ptext167 4F8E                                      __ptext159 32CA  
                                    __ptext248 2DDA                                      __ptext192 4E9E  
                                    __ptext184 5D10                                      __ptext176 5EBC  
                                    __ptext168 4BB4                                      __ptext249 2F5A  
                                    __ptext193 F4E6                                      __ptext185 5D26  
                                    __ptext177 2218                                      __ptext169 5070  
                                    __ptext194 5EDC                                      __ptext186 5CE0  
                                    __ptext178 5C50                                      __ptext195 5E12  
                                    __ptext187 5CF8                                      __ptext179 5C68  
                                    __ptext196 5E20                                      __ptext188 5B9A  
                                    __ptext197 5E2E                                      __ptext189 5986  
                                    __ptext198 5E3C                                      __ptext199 5E4A  
                     __end_of_system_output_on 4FDC                                       ?___fltol 0060  
                          fat_find_file@sector 0097                                       ?___lldiv 0060  
                        __end_of_adc_calibrate 5E7E                                       ?___lwdiv 0060  
                                     ?___lwmod 0060                                      _hid_rpt01 C3E1  
                                  __ui_encoder D6B0                            ?i2_USBStallEndpoint 002E  
                       ??__sector_from_cluster 0062                                      _buck_init 5E04  
                                    _idle_rate 01FF                         ??_rtcc_decrement_hours 0068  
                       ??_rtcc_decrement_month 0068                                 __get_time@time 006B  
                             ?i2_USBDeviceInit 002E                          _buck_remote_dutycycle 00E2  
                     __display_efficiency@cntr 00D2                                __i2c_write@data 0065  
                             __get_input_power 3B2C                                __i2c_write@cntr 0069  
                          fat_create_file@name 009B                            ?_APP_DeviceMSDTasks 002E  
                    __size_ofi2_ResetSenseData 0062                           __display_time@setday 01C3  
           __flash_write_to_buffer@data_length 0077                            fat_create_file@size 009F  
                                 ??__buck_stop 0060                           _USBTransferOnePacket 1938  
                 __flash_spi_tx_rx@data_length 0066                     ?_ExternalFlash_MediaDetect 0060  
                       __end_of__buck_pin_init 55E0                 ??_ExternalFlash_SectorSizeRead 0062  
                            ??_display_prepare 00D3                           __CFG_RTCOSC$T1OSCREF 000000  
                         __parse_command_short 2304                           __end_of_rtcc_get_day 5E66  
           __size_of_log_get_number_of_samples 000A                                  _fat_find_file 2B86  
                            __display_itoa@len 008D                              __display_itoa@pos 008F  
                            __display_itoa@tmp 0083                              ?_i2c_eeprom_tasks 002E  
                    __size_of_log_collect_data 029E                   __end_of__rtcc_bcd_to_decimal 5B7E  
                                     ?_ui_init 002E                    __size_of_buck_get_dutycycle 0006  
                            ?_i2c_eeprom_write 006A                   __end_of_USBCtrlTrfOutHandler 4942  
                     __size_of_i2c_eeprom_read 0052                          ??_USBStdGetDscHandler 002E  
               __size_of_i2c_digipot_reset_off 0026            __size_of__flash_copy_page_to_buffer 005A  
                                  _ep_data_out 01E1                               ___lwdiv@quotient 0065  
                                     ?_tmr_isr 002E                __size_of_rtcc_get_hours_decimal 0010  
                __end_of_i2c_digipot_reset_off 58F0                             ??_i2c_eeprom_tasks 009D  
                                _MSDWriteState 001F                   __size_of_USBCtrlTrfRxService 010C  
              __parse_command_calibration@dat1 0064                __parse_command_calibration@dat2 0065  
              __parse_command_calibration@dat3 0066                  USBConfigureEndpoint@direction 002E  
                                     ?_strncmp 0060                            __display_efficiency E128  
                               __display_clear 5026                              __display_time@day 01CE  
                         __end_of_rtcc_set_day 5CE0                             ??_i2c_eeprom_write 006F  
                    __size_of__i2c_acknowledge 000A                                  ?__display_usb 002E  
              __parse_command_calibration@item 0063                              __display_time@tad 0180  
                                   ?__get_date 0064                              __display_time@pts 0100  
                         ??i2_USBStallEndpoint 002F                ?_i2c_display_send_init_sequence 002E  
             ??_i2c_display_send_init_sequence 006A                              __display_usb@cntr 00A5  
                               __display_inout FD8C                                     ?__get_time 0064  
                                _ui_get_status 5EDC                   __size_ofi2_SYSTEM_Initialize 0054  
               __end_of_buck_remote_set_enable 5BB6                           __display_temperature 0158  
                              ___aldiv@divisor 0064                   __size_of_USBCtrlTrfTxService 00D0  
                                 ??__read_root 0089                           __display_usb@usb_off 0074  
               __size_of_display_get_character 002E                                ___aldiv@counter 0068  
                         ??_APP_DeviceMSDTasks 00B2                  __end_of_display_get_character 56F8  
                                    _extension 02F4                                       _LATAbits 000F89  
                                     _LATBbits 000F8A                                       _LATCbits 000F8B  
                                     _LATDbits 000F8C                                       _LATEbits 000F8D  
                   __end_of_USBCheckHIDRequest 29E8                 __root_is_available@file_number 008C  
                            __get_output_power 3AAA                     __end_of_rtcc_increment_day 593C  
         __flash_compare_page_to_buffer@buffer 0075                     ??_USBCtrlEPServiceComplete 002F  
                                   ?__read_fat 0087                       __size_of__number_of_days 0068  
                      __i2c_read@slave_address 006F                                       _IPR2bits 000FA2  
                                     _PIE2bits 000FA0                       ??_system_encoder_disable 0060  
                          __rtcc_decrement_bcd 569C                           _rtcc_get_day_decimal 5DC4  
                  __size_of_fat_append_to_file 0222                             ?__get_output_power 006D  
                                  _buck_status 001C                             __end_of__buck_stop 57D4  
         __flash_compare_page_to_buffer@status 0079                                       _PIR1bits 000F9E  
                                    _task_list 0468                                       _PIR2bits 000FA1  
                     ??_rtcc_decrement_minutes 0068                       ??_rtcc_decrement_seconds 0068  
                               _rtcc_get_hours 5E4A                                       i2u911_40 2A62  
                                     i2u911_47 2A58                                       i2u913_40 2AA2  
                                     i2u913_47 2A98                                 _rtcc_get_month 5E2E  
                                     i2u871_40 2EFA                                       i2u981_40 1036  
                                     i2u981_47 102C                                       _RCONbits 000FD0  
                    __size_of_rtcc_get_minutes 000E                      __size_of_rtcc_get_seconds 000E  
                                     i2u978_40 0FB0                                       i2u978_47 0FA6  
                                     i2u979_40 0FE0                                       i2u979_47 0FD6  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote 1E48  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 002C  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks F286  
                   _USBDeferINDataStagePackets 0020                      ?__ic2_display_set_address 002E  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00D8  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 002E  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init 5BD2                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous 5CF8                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous 5CE0                           _USBConfigureEndpoint 364E  
                          ??__get_output_power 006F                            _rtcc_decrement_year 5A54  
                                   ?_buck_init 002E                              __i2c_write@length 0067  
                      __end_of_flash_page_read 587C             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 0278                                 _USBMSDInHandle 00DC  
                     __end_of__rtcc_verify_bcd 514A                                     _ADCON0bits 000FC2  
                                   _ADCON1bits 000FC1                         __display_time@sethours 01B0  
                        ?_USBTransferOnePacket 0060                         __display_time@setmonth 01A6  
                            __read_root@offset 008C                         __display_time@pressday 0160  
                  __display_charger@supply_off 014D                    __size_of_rtcc_decrement_day 0026  
                            _outputCapacitySum 027E                 __size_of_rtcc_get_year_decimal 0010  
          _ExternalFlash_MediaDetect$intlevel0 5EB8                              _SYS_InterruptHigh C008  
                     ??_rtcc_get_month_decimal 0063                  __end_of_rtcc_get_year_decimal 5DB4  
                           __end_of__read_root 482E                          ?__parse_command_short 002E  
                              ?__buck_pin_init 002E                           ?__rtcc_decrement_bcd 0064  
                    i2c_display_cursor@address 006F                               __CFG_WPFP$PAGE_1 000000  
                               ?_fat_find_file 0087                   i2c_eeprom_read@slave_address 0078  
                                 ??_flash_init 0078                                   _RemoteWakeup 0028  
            __end_of_ExternalFlash_MediaDetect 5EBC                             __get_dateTime@year 006E  
                                     i2_memcpy 488A                                       i2_memset 57D4  
                             __get_temperature 5724              MSDCheckForErrorCases@DeviceNoData 006F  
                   ??_rtcc_get_seconds_decimal 0063                                    __write_root 4776  
                           ?_SYS_InterruptHigh 002E                         __end_of__display_clear 5070  
                       __size_of_rtcc_get_year 000E                      __size_of_rtcc_correct_day 0020  
                      __end_of_USBStallHandler 525A                         __end_of__display_inout FF72  
                            ?_flash_page_write 007F              __end_of_log_get_number_of_samples 5E94  
                               __i2c_read@data 0065                ??__flash_write_page_from_buffer 0076  
                      __size_of_display_update 007A                                 ??__display_usb 0060  
                               __i2c_read@cntr 0070                              ___lmul@multiplier 0060  
                                  _INTCON2bits 000FF1                                    _INTCON3bits 000FF0  
                                    copy_data0 2C62                                      copy_data1 2C82  
                                    copy_data2 2CA2                   __size_of__system_timer0_init 0040  
                               ?_ui_get_status 002E                         ??__system_encoder_init 0060  
                  ??_USBCtrlEPAllowStatusStage 002E                           ?_rtcc_decrement_year 002E  
                 fat_create_file@cluster_count 00A9                    __end_of_USBStdSetCfgHandler 2766  
                        ?__display_temperature 002E                             ??_flash_page_write 0083  
                                 ??__write_fat 008C                      __end_of__get_output_power 3B2C  
                  ?_schedule_eeprom_write_task 002E                                       _i2c_init 5E66  
                                 _lowPowerTime 02AE                            ??_SYS_InterruptHigh 004D  
                   __size_of_rtcc_write_eeprom 004A                                 _rtcc_set_hours 5CB0  
                               _rtcc_set_month 5C80     __i2c_eeprom_load_default_calibration@index 0062  
                       __size_of_buck_get_mode 0004                                    ??__i2c_read 0068  
                  __end_of__rtcc_increment_bcd 569C             system_calculate_output_current@tmp 0070  
                                  ??__i2c_send 0060                                   _MSDReadState 01F9  
                           __write_calibration 35BA                                    ??__i2c_stop 0060  
           buck_remote_set_dutycycle@dutycycle 0060                             __write_fat@cluster 0088  
                           __end_of_device_dsc C42A             adc_calculate_temperature@adc_value 006C  
                           __get_checksum@cntr 0065                         __end_of_rtcc_get_hours 5E58  
                     MSDErrorHandler@ErrorCase 0068                         __end_of_rtcc_get_month 5E3C  
                        ?_rtcc_get_day_decimal 002E                                       __i2c_get 5E9E  
                            i2c_adc_start@gain 006B                        ?_USBCtrlTrfSetupHandler 002E  
                              _fat_create_file 0320                         __size_of_rtcc_set_year 0018  
                    ??__fill_buffer_get_status 0061                                     _ANCON0bits 000F48  
                   __end_of_buck_remote_set_on 5D10                                     _ANCON1bits 000F49  
                      USBStdGetStatusHandler@p 002F                                       __Hrparam 0000  
                          __display_itoa@value 0078                          __display_charger@cntr 018E  
                 __size_of_rtcc_increment_year 0022                                      memcpy@tmp 0066  
                                     __Lrparam 0000             __size_of_adc_calculate_temperature 00F6  
                       USBTransferOnePacket@ep 0068                         _rtcc_get_hours_decimal 5D94  
                               _buck_dutycycle 00E5                            ?__write_calibration 002E  
                          rtcc_correct_day@day 0064                                       _SetupPkt 000D30  
                          rtcc_correct_day@max 0065                             __end_of_flash_init 518E  
                        ??__display_efficiency 0090                                 _TransferLength 00DA  
                    __get_empty_cluster@offset 008B                     __end_of_USBCheckMSDRequest 2F5A  
                          __display_inout@cntr 00C5                                     ?_rtcc_init 002E  
                        ?_USBConfigureEndpoint 002E                           __number_of_days@year 0061  
                             __size_of___aldiv 00CE                       _ExternalFlash_SectorRead 54E2  
                    display_get_character@line 0063                         __size_of_flash_is_busy 0024  
                            ??_USBDeviceAttach 0060                                 __i2c_wait_idle 452A  
                              _MSDWriteHandler EA94                               __size_of___awdiv 0086  
                         __display_outputs@low 008A                               __size_of___fltol 00DE  
                             __size_of___lldiv 0084                               __size_of___lwdiv 0054  
                             __size_of___lwmod 0044      ExternalFlash_SectorWrite@allowWriteToZero 008C  
         __size_ofi2_ExternalFlash_MediaDetect 0004                                    _MSDCBWValid 01F5  
                    __end_of_SYS_InterruptHigh C086                                 _buck_remote_on 00E4  
                            ?_USBStallEndpoint 0060                     i2c_display_write_fixed@pos 0068  
              i2c_adc_start@configuration_byte 006D                            __display_time@F7200 C2EE  
                          __display_time@F7202 C2E4                            __display_time@F7210 C2B7  
                          __display_time@F7204 C2FF                            __display_time@F7212 C143  
                          __display_time@F7220 C12F                                       _adc_init 5B7E  
                          __display_time@F7206 C2DA                            __display_time@F7214 C1B4  
                          __display_time@F7222 C11B                            __display_time@F7208 C2C3  
                          __display_time@F7216 C24B                            __display_time@F7224 C23B  
                                     _adc_read 391A                            __display_time@F7218 C1A2  
                          __display_time@F7198 C277                    __size_of__get_empty_cluster 007A  
                           __end_of__write_fat 529C                           __size_of__i2c_open_1 0018  
                        ??__rtcc_decrement_bcd 0066                             ??_USBStallEndpoint 0061  
              __flash_copy_page_to_buffer@page 0073             __end_of_ExternalFlash_CapacityRead 5D50  
                   _ExternalFlash_CapacityRead 5D3C                                       ___xxtofl 08F8  
                      ??_MSDTransferTerminated 003B                  schedule_eeprom_write_task@idx 0062  
                    __size_of_rtcc_read_eeprom 0142                        __size_of_USBDeviceTasks 0144  
                              ___lwdiv@divisor 0062                ?_system_calculate_input_current 002E  
             ??_system_calculate_input_current 006C                          __end_of__get_dateTime 08F8  
                         ??__write_calibration 0085                          __end_of__get_checksum 5442  
                    _buck_remote_set_dutycycle 5986                                ?__display_clear 002E  
                     __end_of__flash_spi_tx_rx 3362                                ___lwdiv@counter 0064  
                     __end_of__flash_spi_tx_tx 3804              __buck_operate_local@tmp_dutycycle 007C  
                                     __ptext10 59AA                                       __ptext11 59CC  
                                     __ptext20 5ABA                                       __ptext12 59EE  
                                     __ptext21 5ADC                                       __ptext13 5A10  
                                     __ptext30 5104                                       __ptext22 593C  
                                     __ptext14 5A32                                       __ptext31 2766  
                                     __ptext23 569C                                       __ptext15 5916  
                                     __ptext40 5E04                                       __ptext32 5E66  
                                     __ptext24 1B44                                       __ptext16 566E  
                                     __ptext41 5C38                                       __ptext33 5C20  
                                     __ptext25 5D50                                       __ptext17 5A54  
                                     __ptext50 4018                                       __ptext42 55B0  
                                     __ptext34 13D6                                       __ptext26 5BD2  
                                     __ptext18 5A76                                _inputCurrentSum 0296  
                                     __ptext51 DA44                                       __ptext43 5B7E  
                                     __ptext35 4D08                                       __ptext27 0CC4  
                                     __ptext19 5A98                                       __ptext60 5800  
                                     __ptext52 5724                                       __ptext44 529C  
                                     __ptext36 3526                                       __ptext28 5B20  
                                     __ptext61 F742                                       __ptext53 3894  
                                     __ptext45 52DC                                       __ptext37 D2EE  
                                     __ptext29 43F6                                       __ptext70 445E  
                                     __ptext62 4776                                       __ptext54 07B2  
                                     __ptext46 23E8                                       __ptext38 514A  
                                     __ptext71 5DA4                                       __ptext63 525A  
                                     __ptext55 540C                                       __ptext47 118E  
                                     __ptext39 41E0                                       __ptext80 ED70  
                                     __ptext72 5DB4                                       __ptext64 424E  
                                     __ptext56 0320                                       __ptext48 24CA  
                                     __ptext81 5BEC                                       __ptext73 5DC4  
                                     __ptext65 4942                                       __ptext57 36E2  
                                     __ptext49 12B2                                       __ptext90 4D5A  
                                     __ptext82 5DE4                                       __ptext74 5DD4  
                                     __ptext66 5442                                       __ptext58 2B86  
                                     __ptext91 5E94                                       __ptext83 5B60  
                                     __ptext75 3DB2                                       __ptext67 42BA  
                                     __ptext59 3CB2                                       __ptext92 5E9E  
                                     __ptext84 3AAA                                       __ptext76 47D2  
                                     __ptext68 5D84                                       __ptext93 5EA8  
                                     __ptext85 3B2C                                       __ptext77 4FDC  
                                     __ptext69 5D94                                       __ptext94 3F24  
                                     __ptext86 4100                                       __ptext78 3EAA  
                                     __ptext95 499C                                       __ptext87 5750  
                                     __ptext79 5E8A                                       __ptext96 582A  
                                     __ptext88 35BA                                       __ptext97 577C  
                                     __ptext89 53D2                                       __ptext98 3BAE  
                                     __ptext99 04D6                               __display_charger E78C  
          __size_of__parse_command_calibration 012A                               __size_of_ui_init 0012  
                                 _SSP1CON1bits 000FC6                                ?__display_inout 002E  
                                 _SSP1CON2bits 000FC5                                       _filename 02EB  
                __buck_start@startup_dutycycle 0074                   __flash_set_page_size@command 0073  
                        ??_rtcc_decrement_year 0068                            __display_time@hours 01CF  
                       __end_of_rtcc_set_hours 5CC8                                   _SSP2CON1bits 000F72  
                             __size_of_tmr_isr 0096           __end_of_MSDProcessCommandMediaAbsent 45F0  
        __size_of_MSDProcessCommandMediaAbsent 0062                   _MSDProcessCommandMediaAbsent 458E  
                                  ??__get_date 0066                          __flash_wakeup@command 0068  
                          __display_time@month 01CD                         __end_of_rtcc_set_month 5C98  
             __size_of__buck_initial_dutycycle 00BA                                    ??__get_time 0066  
    buck_remote_change_dutycycle@new_dutycycle 0061                               __size_of_strncmp 0080  
                                 ?__buck_start 0072                            __parse_command_long 2218  
                          __display_usb@header 0060                     ?_ExternalFlash_SectorWrite 0084  
              ?_system_calculate_input_voltage 002E               ??_system_calculate_input_voltage 006C  
               ExternalFlash_SectorRead@config 008B                 ExternalFlash_SectorRead@buffer 0091  
            i2c_eeprom_read_calibration@buffer 007B                          __end_of__buck_prepare 452A  
           __end_of__flash_copy_page_to_buffer 499C                     __flash_copy_page_to_buffer 4942  
                      __size_of_ResetSenseData 0062               __end_of_APP_DeviceCustomHIDTasks E128  
                 __end_of_i2c_digipot_reset_on 58CA                              ??_i2c_eeprom_read 0076  
                        __end_of__flash_wakeup 4BB4                 __end_of_USBCtrlTrfSetupHandler 3894  
                                __size_of_main 031A                              ?_USBCtrlEPService 002E  
                                __size_of_itoa 0044                          __end_of__flash_spi_tx 4B04  
                                     _inq_resp C3BD                                  __size_of_utoa 00AA  
                             __display_usb@low 0085                                    ??__read_fat 0089  
                  __end_of_flash_partial_write 42BA                                     strncmp@len 0064  
                          __display_usb@usb_on 0095                                ?_rtcc_get_hours 002E  
           __buck_set_sync_async@new_dutycycle 0062                                ?_rtcc_get_month 002E  
                   __display_time@pressminutes 0114                     __display_time@pressseconds 0128  
                           ??_USBCtrlEPService 004B                               __display_outputs F964  
                      ??_system_encoder_enable 0060                __size_of_system_encoder_disable 0006  
                          _USBCtrlTrfInHandler 2F5A             _MSDProcessCommandMediaPresent$2715 009B  
             __get_empty_cluster@first_cluster 0087                    __end_of__buck_operate_local CF24  
         __parse_command_calibration@parameter 0069                                  _rtcc_get_year 5E12  
                        _calibrationParameters 0300                __size_of_rtcc_decrement_minutes 0022  
              __size_of_rtcc_decrement_seconds 0022                         __end_of__i2c_wait_idle 458E  
                         __rtcc_bcd_to_decimal 5B60                                       _outPipes 0001  
                   ?__fill_buffer_get_display1 002E                     ?__fill_buffer_get_display2 002E  
                         _USBCtrlTrfOutHandler 48E6                                       int$flags 005B  
            __end_of_adc_calculate_temperature 203A                              ??__number_of_days 0060  
                    _USBCtrlEPAllowStatusStage 2DDA                   __end_of_system_output_toggle 5916  
                         ?__parse_command_long 0063                              _system_output_off 4BB4  
                                 _SSP1STATbits 000FC7                                    ??_buck_init 0060  
                            __get_dateTime@day 0070                         ??_USBTransferOnePacket 0064  
                   i2c_digipot_backlight@level 006A                          __size_of_rtcc_get_day 000E  
                             ?_flash_page_read 0087                                   _SSP2STATbits 000F73  
                                _buck_get_mode 5EF2                         __size_of_i2c_adc_start 003A  
                        __end_of__display_itoa FD8C                          __end_of__display_time CAA6  
                             i2_ResetSenseData 46B4                 ?_APP_DeviceCustomHIDInitialize 002E  
                              ??_fat_find_file 008B                             ?_system_output_off 002E  
                       ??__parse_command_short 008B                 __end_of__display_charger@F7261 C316  
               __end_of__display_charger@F7263 C2FF                 __end_of__display_charger@F7271 C107  
               __end_of__display_charger@F7255 C0B5                 __end_of__display_charger@F7265 C2B7  
               __end_of__display_charger@F7257 C1A2                 __end_of__display_charger@F7267 C20B  
               __end_of__display_charger@F7259 C190                 __end_of__display_charger@F7269 C0A0  
                             system_init@F7100 03F6                               system_init@F7102 02E1  
                             system_init@F7104 0400          MSDProcessCommandMediaPresent@capacity 00A2  
                display_get_character@position 0060                       __size_of_MSDErrorHandler 011C  
                             system_init@F7096 02D8                               system_init@F7098 02E5  
                            rtcc_set_year@year 0060                      _USBDeferStatusStagePacket 0023  
              __end_of__fill_buffer_get_status F742                                  _rtcc_set_year 5C50  
                 __end_of_rtcc_increment_hours 5A54                   __end_of_rtcc_increment_month 5A10  
                                  _OSCTUNEbits 000F9B                                     _INTCONbits 000FF2  
              __size_of_rtcc_get_month_decimal 0010                          __size_of_rtcc_set_day 0018  
                            __write_fat@offset 008E                           ?_USBCtrlTrfInHandler 002E  
                                     memcpy@d1 0060                                       memcpy@s1 0062  
                         i2c_eeprom_write@data 006C                               _log_collect_data ED70  
                         i2c_eeprom_write@cntr 0084                  USBCtrlTrfTxService@byteToSend 002E  
                  __size_of_log_generate_entry 0380                i2c_digipot_backlight@data_array 006B  
                     __number_of_days@bcd_year 0062                                       itoa@base 0074  
                  __end_of__buck_set_dutycycle 438E                                ??_ui_get_status 0060  
                                     memset@p1 0060                            ??_system_output_off 0060  
         __end_of_MSDComputeDeviceInAndResidue 3184          __size_of_MSDComputeDeviceInAndResidue 00B2  
                 _MSDComputeDeviceInAndResidue 30D2                               ?_USBStallHandler 002E  
                     USBStdFeatureReqHandler@p 0049                     ?__get_available_root_entry 002E  
                 __end_of__buck_set_sync_async 4100                  __size_of__flash_set_page_size 006E  
                       ??__display_temperature 0090                           __buck_operate_remote 1D4A  
                                _flash_is_busy 5962                               __i2c_acknowledge 5EA8  
                              ?_rtcc_set_hours 002E                        __end_of_fat_create_file 04D6  
                              ?_rtcc_set_month 002E                                       intlevel2 0000  
                     __flash_get_status@status 006F                __flash_spi_tx_rx@command_length 0062  
                 adc_calculate_temperature@tmp 0075                     __size_of__get_output_power 0082  
                  __size_of__root_is_available 007C                         __size_of_USBDeviceInit 014A  
                ?_MSDProcessCommandMediaAbsent 002E        __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3A26  
     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086              ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
             ?_USER_USB_CALLBACK_EVENT_HANDLER 003D                _USER_USB_CALLBACK_EVENT_HANDLER 39A0  
                  rtcc_read_eeprom@error_found 008B                               ___lwmod@dividend 0060  
                 i2USBTransferOnePacket@handle 0037                        i2c_adc_start@resolution 006A  
            __end_of_ExternalFlash_SectorWrite 54E2                               ___lldiv@dividend 0060  
        __end_of__flash_write_page_from_buffer 4AAA         __size_of__flash_write_page_from_buffer 005A  
                __flash_write_page_from_buffer 4A50                       __end_of__get_input_power 3BAE  
                       ??_rtcc_get_day_decimal 0063         i2SYSTEM_Initialize@pll_startup_counter 002E  
         SYSTEM_Initialize@pll_startup_counter 0061                          __update_modified_time 5442  
                              _display_content 0354                    ??_buck_remote_get_dutycycle 0060  
                   __end_of_flash_partial_read 4018                        __end_of_MSDWriteHandler ED70  
                                    strncmp@s1 0060                                      strncmp@s2 0062  
                               ?_rtcc_get_year 002E                        __size_of_MSDReadHandler 01E6  
                                 _rtcc_get_day 5E58                     i2USBTransferOnePacket@data 002F  
                                ??_system_init 0093                          ?__rtcc_bcd_to_decimal 002E  
                             _rtcc_get_minutes 5E3C                               _rtcc_get_seconds 5E20  
                  __end_of_system_output_is_on 5C06                         ??_USBConfigureEndpoint 002F  
                              ?__i2c_wait_idle 002E                          ?_USBCtrlTrfOutHandler 002E  
                              _display_prepare 3BAE               __end_of_rtcc_get_minutes_decimal 5D94  
                     ??__flash_write_to_buffer 007A                      __end_of_system_output_off 4C0A  
                    __size_of_rtcc_set_minutes 0018                       ?_APP_DeviceMSDInitialize 002E  
                    __size_of_rtcc_set_seconds 0018                      __display_efficiency@F7280 C25B  
                    __display_efficiency@F7276 C16A                      __display_efficiency@F7278 C157  
                          _USBCtrlTrfRxService 1722                                    ??_rtcc_init 0093  
                           _USBWakeFromSuspend 5478                          ??__parse_command_long 0064  
                         __end_of__display_usb 0668                              ?_system_output_on 002E  
                                 ?__ui_encoder 002E                                   _rtcc_set_day 5CC8  
                           _i2c_display_cursor 582A                        _USBStdFeatureReqHandler F00E  
                      _temperatureExternal1Sum 0276                        _temperatureExternal2Sum 0272  
                    rtcc_increment_hours@hours 0068                                 ?_buck_get_mode 002E  
                          i2_SYSTEM_Initialize 4CB4                            _USBCtrlTrfTxService 29E8  
                   __size_of_SYS_InterruptHigh 007E          __flash_write_page_from_buffer@command 0079  
                      __rtcc_increment_bcd@max 0065                             ??_system_output_on 0060  
                      __rtcc_increment_bcd@min 0064                                       utoa@base 006B  
                                   _RTCCFGbits 000F3F                                _gblMediaPresent 02B2  
                  __end_of__rtcc_write_disable 5D3C                                 ?_rtcc_set_year 002E  
                              _inputVoltageSum 029A                          _i2c_digipot_backlight 56F8  
          ExternalFlash_SectorRead@sector_addr 008D                            ?_USBWakeFromSuspend 002E  
                                   _PPSCONbits 000EBF                               ___lldiv@quotient 0068  
                              ___lwmod@divisor 0062                    ??_ExternalFlash_MediaDetect 0062  
                          ?_i2c_display_cursor 006D                          ??_USBCtrlTrfInHandler 002F  
                                     strlen@cp 0064                         _system_encoder_disable 5ED6  
 __end_of__i2c_eeprom_load_default_calibration D6B0  __size_of__i2c_eeprom_load_default_calibration 03C2  
       ??__i2c_eeprom_load_default_calibration 0063          ?__i2c_eeprom_load_default_calibration 0060  
         __i2c_eeprom_load_default_calibration D2EE                   __flash_spi_tx_tx@data_length 0066  
                        _USBAlternateInterface 01FC                                ___lwmod@counter 0064  
                    __display_efficiency@panel 00CA               __end_of_rtcc_get_seconds_decimal 5DF4  
                __size_of__i2c_not_acknowledge 000A                        _buck_remote_synchronous 00E3  
                                  _ptrNextData 01EB                          __end_of_log_start_new 2840  
                                 ___aldiv@sign 0069                         _rtcc_decrement_minutes 5ABA  
                       _rtcc_decrement_seconds 5A76                      i2USBTransferOnePacket@dir 002E  
                    i2USBTransferOnePacket@len 0031                            USBEnableEndpoint@ep 0039  
                              _endpoint_number 0026                               _rtcc_correct_day 5B20  
                               _display_update 3F24                          ?__buck_operate_remote 002E  
                               ?_flash_is_busy 002E                           ?_USBCtrlTrfRxService 002E  
                        _MSDCheckForErrorCases 1E48                           __get_input_power@pwr 0070  
                   __end_of__rtcc_write_enable 5D26                  ?_MSDComputeDeviceInAndResidue 0060  
             __end_of__ic2_display_set_address 57A8            __end_of_i2c_eeprom_read_calibration 14F4  
                  _i2c_eeprom_read_calibration 13D6                           ?i2_SYSTEM_Initialize 002E  
                     ?_USBCtrlEPAllowDataStage 002E                                 _MSBBufferIndex 02B4  
                     __flash_spi_tx_rx@command 0060                           ?_USBCtrlTrfTxService 002E  
                                _i2c_adc_start 53D2                      flash_partial_read@address 0083  
           __end_of__parse_command_calibration 118E                     __parse_command_calibration 1064  
                                   _USBMSDInit 1610                                  ?_buck_operate 002E  
                 _USBStatusStageTimeoutCounter 0024                ??_ExternalFlash_MediaInitialize 0062  
                         ??_USBWakeFromSuspend 0045                     USBTransferOnePacket@handle 0069  
                       _rtcc_get_month_decimal 5DB4                           ??_i2c_display_cursor 006E  
                    flash_partial_read@command 007F                      rtcc_increment_month@month 0068  
                     ??_fat_get_empty_clusters 0089                      __size_of_i2c_eeprom_tasks 0070  
                                   _USB_CD_Ptr C319                       __end_of__get_temperature 5750  
                     __flash_spi_tx_tx@command 0060                      __size_of_i2c_eeprom_write 0082  
                                  _power_state 00E0                                    _USBInHandle 00D8  
                     _APP_DeviceCustomHIDTasks DDC4  
