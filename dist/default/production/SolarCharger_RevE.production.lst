

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jul 09 23:41:42 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1,group=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   275                           	psect	text251,global,reloc=2,class=CODE,delta=1
   276                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   277                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   278                           	dabs	1,0x600,512,_msd_buffer
   279                           	dabs	1,0xD00,48,_BDT
   280                           	dabs	1,0xD40,31,_msd_cbw
   281                           	dabs	1,0xD80,13,_msd_csw
   282                           	dabs	1,0xD38,8,_CtrlTrfData
   283                           	dabs	1,0xD30,8,_SetupPkt
   284  0000                     
   285                           ; Version 1.44
   286                           ; Generated 14/09/2017 GMT
   287                           ; 
   288                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   289                           ; All rights reserved.
   290                           ; 
   291                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   292                           ; 
   293                           ; Redistribution and use in source and binary forms, with or without modification, are
   294                           ; permitted provided that the following conditions are met:
   295                           ; 
   296                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   297                           ;        conditions and the following disclaimer.
   298                           ; 
   299                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   300                           ;        of conditions and the following disclaimer in the documentation and/or other
   301                           ;        materials provided with the distribution.
   302                           ; 
   303                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   304                           ;        software without specific prior written permission.
   305                           ; 
   306                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   307                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   308                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   309                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   310                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   311                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   312                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   313                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   314                           ; 
   315                           ; 
   316                           ; Code-generator required, PIC18F47J53 Definitions
   317                           ; 
   318                           ; SFR Addresses
   319  0000                     
   320                           	psect	idataBANK2
   321  012276                     __pidataBANK2:
   322                           	opt stack 0
   323                           
   324                           ;initializer for _LUN
   325  012276  22                 	db	low _ExternalFlash_MediaInitialize
   326  012277  2A                 	db	high _ExternalFlash_MediaInitialize
   327  012278  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   328  012279  74                 	db	low _ExternalFlash_CapacityRead
   329  01227A  2C                 	db	high _ExternalFlash_CapacityRead
   330  01227B  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   331  01227C  A6                 	db	low _ExternalFlash_SectorSizeRead
   332  01227D  2D                 	db	high _ExternalFlash_SectorSizeRead
   333  01227E  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   334  01227F  DA                 	db	low _ExternalFlash_MediaDetect
   335  012280  2D                 	db	high _ExternalFlash_MediaDetect
   336  012281  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   337  012282  00                 	db	low _ExternalFlash_SectorRead
   338  012283  24                 	db	high _ExternalFlash_SectorRead
   339  012284  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   340  012285  1C                 	db	low _ExternalFlash_WriteProtectStateGet
   341  012286  2E                 	db	high _ExternalFlash_WriteProtectStateGet
   342  012287  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   343  012288  CC                 	db	low _ExternalFlash_SectorWrite
   344  012289  23                 	db	high _ExternalFlash_SectorWrite
   345  01228A  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   346  01228B  00                 	db	0
   347  01228C  00                 	db	0
   348  01228D  00                 	db	0
   349  01228E  00                 	db	0
   350  01228F  00                 	db	0
   351  012290  00                 	db	0
   352  012291  00                 	db	0
   353  012292  00                 	db	0
   354                           
   355                           ;initializer for system_init@F8579
   356  012293  54                 	db	84
   357  012294  45                 	db	69
   358  012295  53                 	db	83
   359  012296  54                 	db	84
   360  012297  20                 	db	32
   361  012298  20                 	db	32
   362  012299  20                 	db	32
   363  01229A  20                 	db	32
   364  01229B  00                 	db	0
   365                           
   366                           ;initializer for system_init@F8585
   367  01229C  54                 	db	84
   368  01229D  58                 	db	88
   369  01229E  54                 	db	84
   370  01229F  00                 	db	0
   371                           
   372                           ;initializer for system_init@F8581
   373  0122A0  54                 	db	84
   374  0122A1  58                 	db	88
   375  0122A2  54                 	db	84
   376  0122A3  00                 	db	0
   377                           
   378                           ;initializer for _battery_voltage_maximum
   379  0122A4  34BC               	dw	13500
   380                           
   381                           ;initializer for _filename
   382  0122A6  4C                 	db	76
   383  0122A7  4F                 	db	79
   384  0122A8  47                 	db	71
   385  0122A9  20                 	db	32
   386  0122AA  20                 	db	32
   387  0122AB  20                 	db	32
   388  0122AC  20                 	db	32
   389  0122AD  20                 	db	32
   390  0122AE  00                 	db	0
   391                           
   392                           ;initializer for _extension
   393  0122AF  54                 	db	84
   394  0122B0  58                 	db	88
   395  0122B1  54                 	db	84
   396  0122B2  00                 	db	0
   397                           
   398                           	psect	idataBANK3
   399  012ADA                     __pidataBANK3:
   400                           	opt stack 0
   401                           
   402                           ;initializer for i2c_display_init@F8363
   403  012ADA  3A                 	db	58
   404  012ADB  1E                 	db	30
   405  012ADC  39                 	db	57
   406  012ADD  0C                 	db	12
   407  012ADE  74                 	db	116
   408  012ADF  5C                 	db	92
   409  012AE0  6D                 	db	109
   410  012AE1  0C                 	db	12
   411  012AE2  01                 	db	1
   412                           
   413                           ;initializer for i2c_display_send_init_sequence@F8360
   414  012AE3  3A                 	db	58
   415  012AE4  1E                 	db	30
   416  012AE5  39                 	db	57
   417  012AE6  0C                 	db	12
   418  012AE7  74                 	db	116
   419  012AE8  5C                 	db	92
   420  012AE9  6D                 	db	109
   421  012AEA  0C                 	db	12
   422  012AEB  01                 	db	1
   423                           
   424                           ;initializer for system_init@F8583
   425  012AEC  4E                 	db	78
   426  012AED  45                 	db	69
   427  012AEE  57                 	db	87
   428  012AEF  46                 	db	70
   429  012AF0  49                 	db	73
   430  012AF1  4C                 	db	76
   431  012AF2  45                 	db	69
   432  012AF3  20                 	db	32
   433  012AF4  00                 	db	0
   434                           
   435                           	psect	idataBANK4
   436  0112AA                     __pidataBANK4:
   437                           	opt stack 0
   438                           
   439                           ;initializer for system_init@F8587
   440  0112AA  4A                 	db	74
   441  0112AB  75                 	db	117
   442  0112AC  73                 	db	115
   443  0112AD  74                 	db	116
   444  0112AE  20                 	db	32
   445  0112AF  61                 	db	97
   446  0112B0  70                 	db	112
   447  0112B1  70                 	db	112
   448  0112B2  65                 	db	101
   449  0112B3  6E                 	db	110
   450  0112B4  64                 	db	100
   451  0112B5  65                 	db	101
   452  0112B6  64                 	db	100
   453  0112B7  20                 	db	32
   454  0112B8  74                 	db	116
   455  0112B9  68                 	db	104
   456  0112BA  69                 	db	105
   457  0112BB  73                 	db	115
   458  0112BC  20                 	db	32
   459  0112BD  74                 	db	116
   460  0112BE  65                 	db	101
   461  0112BF  78                 	db	120
   462  0112C0  74                 	db	116
   463  0112C1  21                 	db	33
   464  0112C2  20                 	db	32
   465  0112C3  4E                 	db	78
   466  0112C4  6F                 	db	111
   467  0112C5  77                 	db	119
   468  0112C6  20                 	db	32
   469  0112C7  74                 	db	116
   470  0112C8  68                 	db	104
   471  0112C9  69                 	db	105
   472  0112CA  73                 	db	115
   473  0112CB  20                 	db	32
   474  0112CC  69                 	db	105
   475  0112CD  73                 	db	115
   476  0112CE  20                 	db	32
   477  0112CF  73                 	db	115
   478  0112D0  75                 	db	117
   479  0112D1  70                 	db	112
   480  0112D2  65                 	db	101
   481  0112D3  72                 	db	114
   482  0112D4  2D                 	db	45
   483  0112D5  6C                 	db	108
   484  0112D6  6F                 	db	111
   485  0112D7  6E                 	db	110
   486  0112D8  67                 	db	103
   487  0112D9  2E                 	db	46
   488  0112DA  20                 	db	32
   489  0112DB  69                 	db	105
   490  0112DC  74                 	db	116
   491  0112DD  20                 	db	32
   492  0112DE  67                 	db	103
   493  0112DF  6F                 	db	111
   494  0112E0  65                 	db	101
   495  0112E1  73                 	db	115
   496  0112E2  20                 	db	32
   497  0112E3  6F                 	db	111
   498  0112E4  6E                 	db	110
   499  0112E5  20                 	db	32
   500  0112E6  61                 	db	97
   501  0112E7  6E                 	db	110
   502  0112E8  64                 	db	100
   503  0112E9  20                 	db	32
   504  0112EA  6F                 	db	111
   505  0112EB  6E                 	db	110
   506  0112EC  20                 	db	32
   507  0112ED  61                 	db	97
   508  0112EE  6E                 	db	110
   509  0112EF  64                 	db	100
   510  0112F0  20                 	db	32
   511  0112F1  6F                 	db	111
   512  0112F2  6E                 	db	110
   513  0112F3  20                 	db	32
   514  0112F4  2E                 	db	46
   515  0112F5  2E                 	db	46
   516  0112F6  2E                 	db	46
   517  0112F7  20                 	db	32
   518  0112F8  62                 	db	98
   519  0112F9  75                 	db	117
   520  0112FA  74                 	db	116
   521  0112FB  20                 	db	32
   522  0112FC  66                 	db	102
   523  0112FD  69                 	db	105
   524  0112FE  6E                 	db	110
   525  0112FF  61                 	db	97
   526  011300  6C                 	db	108
   527  011301  6C                 	db	108
   528  011302  79                 	db	121
   529  011303  20                 	db	32
   530  011304  69                 	db	105
   531  011305  74                 	db	116
   532  011306  20                 	db	32
   533  011307  65                 	db	101
   534  011308  6E                 	db	110
   535  011309  64                 	db	100
   536  01130A  73                 	db	115
   537  01130B  20                 	db	32
   538  01130C  48                 	db	72
   539  01130D  45                 	db	69
   540  01130E  52                 	db	82
   541  01130F  45                 	db	69
   542  011310  2E                 	db	46
   543  011311  00                 	db	0
   544                           
   545                           	psect	mediumconst
   546  0090AA                     __pmediumconst:
   547                           	opt stack 0
   548  0090AA  00                 	db	0
   549  0090AB                     __display_charger@F8752:
   550                           	opt stack 0
   551  0090AB  43                 	db	67
   552  0090AC  68                 	db	104
   553  0090AD  61                 	db	97
   554  0090AE  72                 	db	114
   555  0090AF  67                 	db	103
   556  0090B0  65                 	db	101
   557  0090B1  72                 	db	114
   558  0090B2  20                 	db	32
   559  0090B3  41                 	db	65
   560  0090B4  73                 	db	115
   561  0090B5  79                 	db	121
   562  0090B6  6E                 	db	110
   563  0090B7  63                 	db	99
   564  0090B8  68                 	db	104
   565  0090B9  72                 	db	114
   566  0090BA  6F                 	db	111
   567  0090BB  6E                 	db	110
   568  0090BC  6F                 	db	111
   569  0090BD  75                 	db	117
   570  0090BE  73                 	db	115
   571  0090BF  00                 	db	0
   572  0090C0                     __end_of__display_charger@F8752:
   573                           	opt stack 0
   574  0090C0                     __display_charger@F8738:
   575                           	opt stack 0
   576  0090C0  4D                 	db	77
   577  0090C1  50                 	db	80
   578  0090C2  50                 	db	80
   579  0090C3  54                 	db	84
   580  0090C4  20                 	db	32
   581  0090C5  43                 	db	67
   582  0090C6  68                 	db	104
   583  0090C7  61                 	db	97
   584  0090C8  72                 	db	114
   585  0090C9  67                 	db	103
   586  0090CA  65                 	db	101
   587  0090CB  72                 	db	114
   588  0090CC  20                 	db	32
   589  0090CD  44                 	db	68
   590  0090CE  65                 	db	101
   591  0090CF  74                 	db	116
   592  0090D0  61                 	db	97
   593  0090D1  69                 	db	105
   594  0090D2  6C                 	db	108
   595  0090D3  73                 	db	115
   596  0090D4  00                 	db	0
   597  0090D5                     __end_of__display_charger@F8738:
   598                           	opt stack 0
   599  0090D5                     __display_outputs@F8734:
   600                           	opt stack 0
   601  0090D5  20                 	db	32
   602  0090D6  20                 	db	32
   603  0090D7  4F                 	db	79
   604  0090D8  75                 	db	117
   605  0090D9  74                 	db	116
   606  0090DA  33                 	db	51
   607  0090DB  20                 	db	32
   608  0090DC  6F                 	db	111
   609  0090DD  66                 	db	102
   610  0090DE  66                 	db	102
   611  0090DF  20                 	db	32
   612  0090E0  20                 	db	32
   613  0090E1  4F                 	db	79
   614  0090E2  75                 	db	117
   615  0090E3  74                 	db	116
   616  0090E4  34                 	db	52
   617  0090E5  20                 	db	32
   618  0090E6  6F                 	db	111
   619  0090E7  66                 	db	102
   620  0090E8  66                 	db	102
   621  0090E9  00                 	db	0
   622  0090EA                     __end_of__display_outputs@F8734:
   623                           	opt stack 0
   624  0090EA                     __display_outputs@F8732:
   625                           	opt stack 0
   626  0090EA  20                 	db	32
   627  0090EB  20                 	db	32
   628  0090EC  4F                 	db	79
   629  0090ED  75                 	db	117
   630  0090EE  74                 	db	116
   631  0090EF  31                 	db	49
   632  0090F0  20                 	db	32
   633  0090F1  6F                 	db	111
   634  0090F2  66                 	db	102
   635  0090F3  66                 	db	102
   636  0090F4  20                 	db	32
   637  0090F5  20                 	db	32
   638  0090F6  4F                 	db	79
   639  0090F7  75                 	db	117
   640  0090F8  74                 	db	116
   641  0090F9  32                 	db	50
   642  0090FA  20                 	db	32
   643  0090FB  6F                 	db	111
   644  0090FC  66                 	db	102
   645  0090FD  66                 	db	102
   646  0090FE  00                 	db	0
   647  0090FF                     __end_of__display_outputs@F8732:
   648                           	opt stack 0
   649  0090FF                     __display_temperature@F8779:
   650                           	opt stack 0
   651  0090FF  54                 	db	84
   652  009100  65                 	db	101
   653  009101  6D                 	db	109
   654  009102  70                 	db	112
   655  009103  65                 	db	101
   656  009104  72                 	db	114
   657  009105  61                 	db	97
   658  009106  74                 	db	116
   659  009107  75                 	db	117
   660  009108  72                 	db	114
   661  009109  65                 	db	101
   662  00910A  20                 	db	32
   663  00910B  4D                 	db	77
   664  00910C  6F                 	db	111
   665  00910D  6E                 	db	110
   666  00910E  69                 	db	105
   667  00910F  74                 	db	116
   668  009110  6F                 	db	111
   669  009111  72                 	db	114
   670  009112  00                 	db	0
   671  009113                     __end_of__display_temperature@F8779:
   672                           	opt stack 0
   673  009113                     __display_charger@F8754:
   674                           	opt stack 0
   675  009113  43                 	db	67
   676  009114  68                 	db	104
   677  009115  61                 	db	97
   678  009116  72                 	db	114
   679  009117  67                 	db	103
   680  009118  65                 	db	101
   681  009119  72                 	db	114
   682  00911A  20                 	db	32
   683  00911B  53                 	db	83
   684  00911C  79                 	db	121
   685  00911D  6E                 	db	110
   686  00911E  63                 	db	99
   687  00911F  68                 	db	104
   688  009120  72                 	db	114
   689  009121  6F                 	db	111
   690  009122  6E                 	db	110
   691  009123  6F                 	db	111
   692  009124  75                 	db	117
   693  009125  73                 	db	115
   694  009126  00                 	db	0
   695  009127                     __end_of__display_charger@F8754:
   696                           	opt stack 0
   697  009127                     __display_usb@F8718:
   698                           	opt stack 0
   699  009127  55                 	db	85
   700  009128  53                 	db	83
   701  009129  42                 	db	66
   702  00912A  20                 	db	32
   703  00912B  43                 	db	67
   704  00912C  68                 	db	104
   705  00912D  61                 	db	97
   706  00912E  72                 	db	114
   707  00912F  67                 	db	103
   708  009130  65                 	db	101
   709  009131  72                 	db	114
   710  009132  20                 	db	32
   711  009133  4F                 	db	79
   712  009134  75                 	db	117
   713  009135  74                 	db	116
   714  009136  70                 	db	112
   715  009137  75                 	db	117
   716  009138  74                 	db	116
   717  009139  73                 	db	115
   718  00913A  00                 	db	0
   719  00913B                     __end_of__display_usb@F8718:
   720                           	opt stack 0
   721  00913B                     __display_time@F8705:
   722                           	opt stack 0
   723  00913B  2D                 	db	45
   724  00913C  3E                 	db	62
   725  00913D  50                 	db	80
   726  00913E  72                 	db	114
   727  00913F  65                 	db	101
   728  009140  73                 	db	115
   729  009141  73                 	db	115
   730  009142  20                 	db	32
   731  009143  66                 	db	102
   732  009144  6F                 	db	111
   733  009145  72                 	db	114
   734  009146  20                 	db	32
   735  009147  73                 	db	115
   736  009148  65                 	db	101
   737  009149  63                 	db	99
   738  00914A  6F                 	db	111
   739  00914B  6E                 	db	110
   740  00914C  64                 	db	100
   741  00914D  73                 	db	115
   742  00914E  00                 	db	0
   743  00914F                     __end_of__display_time@F8705:
   744                           	opt stack 0
   745  00914F                     __display_time@F8703:
   746                           	opt stack 0
   747  00914F  2D                 	db	45
   748  009150  3E                 	db	62
   749  009151  50                 	db	80
   750  009152  72                 	db	114
   751  009153  65                 	db	101
   752  009154  73                 	db	115
   753  009155  73                 	db	115
   754  009156  20                 	db	32
   755  009157  66                 	db	102
   756  009158  6F                 	db	111
   757  009159  72                 	db	114
   758  00915A  20                 	db	32
   759  00915B  6D                 	db	109
   760  00915C  69                 	db	105
   761  00915D  6E                 	db	110
   762  00915E  75                 	db	117
   763  00915F  74                 	db	116
   764  009160  65                 	db	101
   765  009161  73                 	db	115
   766  009162  00                 	db	0
   767  009163                     __end_of__display_time@F8703:
   768                           	opt stack 0
   769  009163                     __display_time@F8695:
   770                           	opt stack 0
   771  009163  2D                 	db	45
   772  009164  3E                 	db	62
   773  009165  50                 	db	80
   774  009166  72                 	db	114
   775  009167  65                 	db	101
   776  009168  73                 	db	115
   777  009169  73                 	db	115
   778  00916A  20                 	db	32
   779  00916B  74                 	db	116
   780  00916C  6F                 	db	111
   781  00916D  20                 	db	32
   782  00916E  73                 	db	115
   783  00916F  65                 	db	101
   784  009170  74                 	db	116
   785  009171  20                 	db	32
   786  009172  74                 	db	116
   787  009173  69                 	db	105
   788  009174  6D                 	db	109
   789  009175  65                 	db	101
   790  009176  00                 	db	0
   791  009177                     __end_of__display_time@F8695:
   792                           	opt stack 0
   793  009177                     __display_efficiency@F8761:
   794                           	opt stack 0
   795  009177  50                 	db	80
   796  009178  61                 	db	97
   797  009179  6E                 	db	110
   798  00917A  65                 	db	101
   799  00917B  6C                 	db	108
   800  00917C  3A                 	db	58
   801  00917D  20                 	db	32
   802  00917E  20                 	db	32
   803  00917F  20                 	db	32
   804  009180  20                 	db	32
   805  009181  42                 	db	66
   806  009182  61                 	db	97
   807  009183  74                 	db	116
   808  009184  74                 	db	116
   809  009185  65                 	db	101
   810  009186  72                 	db	114
   811  009187  79                 	db	121
   812  009188  3A                 	db	58
   813  009189  00                 	db	0
   814  00918A                     __end_of__display_efficiency@F8761:
   815                           	opt stack 0
   816  00918A                     __display_efficiency@F8759:
   817                           	opt stack 0
   818  00918A  43                 	db	67
   819  00918B  68                 	db	104
   820  00918C  61                 	db	97
   821  00918D  72                 	db	114
   822  00918E  67                 	db	103
   823  00918F  65                 	db	101
   824  009190  72                 	db	114
   825  009191  20                 	db	32
   826  009192  45                 	db	69
   827  009193  66                 	db	102
   828  009194  66                 	db	102
   829  009195  69                 	db	105
   830  009196  63                 	db	99
   831  009197  69                 	db	105
   832  009198  65                 	db	101
   833  009199  6E                 	db	110
   834  00919A  63                 	db	99
   835  00919B  79                 	db	121
   836  00919C  00                 	db	0
   837  00919D                     __end_of__display_efficiency@F8759:
   838                           	opt stack 0
   839  00919D                     __display_charger@F8742:
   840                           	opt stack 0
   841  00919D  43                 	db	67
   842  00919E  68                 	db	104
   843  00919F  61                 	db	97
   844  0091A0  72                 	db	114
   845  0091A1  67                 	db	103
   846  0091A2  65                 	db	101
   847  0091A3  72                 	db	114
   848  0091A4  20                 	db	32
   849  0091A5  73                 	db	115
   850  0091A6  75                 	db	117
   851  0091A7  70                 	db	112
   852  0091A8  70                 	db	112
   853  0091A9  6C                 	db	108
   854  0091AA  79                 	db	121
   855  0091AB  20                 	db	32
   856  0091AC  6F                 	db	111
   857  0091AD  66                 	db	102
   858  0091AE  66                 	db	102
   859  0091AF  00                 	db	0
   860  0091B0                     __end_of__display_charger@F8742:
   861                           	opt stack 0
   862  0091B0                     __display_charger@F8740:
   863                           	opt stack 0
   864  0091B0  43                 	db	67
   865  0091B1  68                 	db	104
   866  0091B2  61                 	db	97
   867  0091B3  72                 	db	114
   868  0091B4  67                 	db	103
   869  0091B5  65                 	db	101
   870  0091B6  72                 	db	114
   871  0091B7  20                 	db	32
   872  0091B8  73                 	db	115
   873  0091B9  75                 	db	117
   874  0091BA  70                 	db	112
   875  0091BB  70                 	db	112
   876  0091BC  6C                 	db	108
   877  0091BD  79                 	db	121
   878  0091BE  20                 	db	32
   879  0091BF  6F                 	db	111
   880  0091C0  6E                 	db	110
   881  0091C1  00                 	db	0
   882  0091C2                     __end_of__display_charger@F8740:
   883                           	opt stack 0
   884  0091C2                     __display_time@F8701:
   885                           	opt stack 0
   886  0091C2  2D                 	db	45
   887  0091C3  3E                 	db	62
   888  0091C4  50                 	db	80
   889  0091C5  72                 	db	114
   890  0091C6  65                 	db	101
   891  0091C7  73                 	db	115
   892  0091C8  73                 	db	115
   893  0091C9  20                 	db	32
   894  0091CA  66                 	db	102
   895  0091CB  6F                 	db	111
   896  0091CC  72                 	db	114
   897  0091CD  20                 	db	32
   898  0091CE  68                 	db	104
   899  0091CF  6F                 	db	111
   900  0091D0  75                 	db	117
   901  0091D1  72                 	db	114
   902  0091D2  73                 	db	115
   903  0091D3  00                 	db	0
   904  0091D4                     __end_of__display_time@F8701:
   905                           	opt stack 0
   906  0091D4                     __display_time@F8697:
   907                           	opt stack 0
   908  0091D4  2D                 	db	45
   909  0091D5  3E                 	db	62
   910  0091D6  50                 	db	80
   911  0091D7  72                 	db	114
   912  0091D8  65                 	db	101
   913  0091D9  73                 	db	115
   914  0091DA  73                 	db	115
   915  0091DB  20                 	db	32
   916  0091DC  66                 	db	102
   917  0091DD  6F                 	db	111
   918  0091DE  72                 	db	114
   919  0091DF  20                 	db	32
   920  0091E0  6D                 	db	109
   921  0091E1  6F                 	db	111
   922  0091E2  6E                 	db	110
   923  0091E3  74                 	db	116
   924  0091E4  68                 	db	104
   925  0091E5  00                 	db	0
   926  0091E6                     __end_of__display_time@F8697:
   927                           	opt stack 0
   928  0091E6                     __display_inout@F8673:
   929                           	opt stack 0
   930  0091E6  20                 	db	32
   931  0091E7  20                 	db	32
   932  0091E8  20                 	db	32
   933  0091E9  49                 	db	73
   934  0091EA  6E                 	db	110
   935  0091EB  70                 	db	112
   936  0091EC  75                 	db	117
   937  0091ED  74                 	db	116
   938  0091EE  20                 	db	32
   939  0091EF  20                 	db	32
   940  0091F0  20                 	db	32
   941  0091F1  4F                 	db	79
   942  0091F2  75                 	db	117
   943  0091F3  74                 	db	116
   944  0091F4  70                 	db	112
   945  0091F5  75                 	db	117
   946  0091F6  74                 	db	116
   947  0091F7  00                 	db	0
   948  0091F8                     __end_of__display_inout@F8673:
   949                           	opt stack 0
   950  0091F8                     __display_inout@F8671:
   951                           	opt stack 0
   952  0091F8  56                 	db	86
   953  0091F9  6F                 	db	111
   954  0091FA  6C                 	db	108
   955  0091FB  74                 	db	116
   956  0091FC  61                 	db	97
   957  0091FD  67                 	db	103
   958  0091FE  65                 	db	101
   959  0091FF  20                 	db	32
   960  009200  26                 	db	38
   961  009201  20                 	db	32
   962  009202  43                 	db	67
   963  009203  75                 	db	117
   964  009204  72                 	db	114
   965  009205  72                 	db	114
   966  009206  65                 	db	101
   967  009207  6E                 	db	110
   968  009208  74                 	db	116
   969  009209  00                 	db	0
   970  00920A                     __end_of__display_inout@F8671:
   971                           	opt stack 0
   972  00920A                     __display_usb@F8724:
   973                           	opt stack 0
   974  00920A  55                 	db	85
   975  00920B  53                 	db	83
   976  00920C  42                 	db	66
   977  00920D  20                 	db	32
   978  00920E  63                 	db	99
   979  00920F  68                 	db	104
   980  009210  61                 	db	97
   981  009211  72                 	db	114
   982  009212  67                 	db	103
   983  009213  69                 	db	105
   984  009214  6E                 	db	110
   985  009215  67                 	db	103
   986  009216  20                 	db	32
   987  009217  6F                 	db	111
   988  009218  66                 	db	102
   989  009219  66                 	db	102
   990  00921A  00                 	db	0
   991  00921B                     __end_of__display_usb@F8724:
   992                           	opt stack 0
   993  00921B                     __display_charger@F8750:
   994                           	opt stack 0
   995  00921B  43                 	db	67
   996  00921C  68                 	db	104
   997  00921D  61                 	db	97
   998  00921E  72                 	db	114
   999  00921F  67                 	db	103
  1000  009220  65                 	db	101
  1001  009221  72                 	db	114
  1002  009222  20                 	db	32
  1003  009223  53                 	db	83
  1004  009224  74                 	db	116
  1005  009225  61                 	db	97
  1006  009226  72                 	db	114
  1007  009227  74                 	db	116
  1008  009228  75                 	db	117
  1009  009229  70                 	db	112
  1010  00922A  00                 	db	0
  1011  00922B                     __end_of__display_charger@F8750:
  1012                           	opt stack 0
  1013  00922B                     __display_outputs@F8730:
  1014                           	opt stack 0
  1015  00922B  42                 	db	66
  1016  00922C  61                 	db	97
  1017  00922D  74                 	db	116
  1018  00922E  74                 	db	116
  1019  00922F  65                 	db	101
  1020  009230  72                 	db	114
  1021  009231  79                 	db	121
  1022  009232  20                 	db	32
  1023  009233  74                 	db	116
  1024  009234  6F                 	db	111
  1025  009235  6F                 	db	111
  1026  009236  20                 	db	32
  1027  009237  6C                 	db	108
  1028  009238  6F                 	db	111
  1029  009239  77                 	db	119
  1030  00923A  00                 	db	0
  1031  00923B                     __end_of__display_outputs@F8730:
  1032                           	opt stack 0
  1033  00923B                     __display_usb@F8722:
  1034                           	opt stack 0
  1035  00923B  55                 	db	85
  1036  00923C  53                 	db	83
  1037  00923D  42                 	db	66
  1038  00923E  20                 	db	32
  1039  00923F  63                 	db	99
  1040  009240  68                 	db	104
  1041  009241  61                 	db	97
  1042  009242  72                 	db	114
  1043  009243  67                 	db	103
  1044  009244  69                 	db	105
  1045  009245  6E                 	db	110
  1046  009246  67                 	db	103
  1047  009247  20                 	db	32
  1048  009248  6F                 	db	111
  1049  009249  6E                 	db	110
  1050  00924A  00                 	db	0
  1051  00924B                     __end_of__display_usb@F8722:
  1052                           	opt stack 0
  1053  00924B                     __display_usb@F8720:
  1054                           	opt stack 0
  1055  00924B  42                 	db	66
  1056  00924C  61                 	db	97
  1057  00924D  74                 	db	116
  1058  00924E  74                 	db	116
  1059  00924F  65                 	db	101
  1060  009250  72                 	db	114
  1061  009251  79                 	db	121
  1062  009252  20                 	db	32
  1063  009253  74                 	db	116
  1064  009254  6F                 	db	111
  1065  009255  6F                 	db	111
  1066  009256  20                 	db	32
  1067  009257  6C                 	db	108
  1068  009258  6F                 	db	111
  1069  009259  77                 	db	119
  1070  00925A  00                 	db	0
  1071  00925B                     __end_of__display_usb@F8720:
  1072                           	opt stack 0
  1073  00925B                     __display_time@F8707:
  1074                           	opt stack 0
  1075  00925B  2D                 	db	45
  1076  00925C  3E                 	db	62
  1077  00925D  50                 	db	80
  1078  00925E  72                 	db	114
  1079  00925F  65                 	db	101
  1080  009260  73                 	db	115
  1081  009261  73                 	db	115
  1082  009262  20                 	db	32
  1083  009263  74                 	db	116
  1084  009264  6F                 	db	111
  1085  009265  20                 	db	32
  1086  009266  73                 	db	115
  1087  009267  61                 	db	97
  1088  009268  76                 	db	118
  1089  009269  65                 	db	101
  1090  00926A  00                 	db	0
  1091  00926B                     __end_of__display_time@F8707:
  1092                           	opt stack 0
  1093  00926B                     __display_time@F8699:
  1094                           	opt stack 0
  1095  00926B  2D                 	db	45
  1096  00926C  3E                 	db	62
  1097  00926D  50                 	db	80
  1098  00926E  72                 	db	114
  1099  00926F  65                 	db	101
  1100  009270  73                 	db	115
  1101  009271  73                 	db	115
  1102  009272  20                 	db	32
  1103  009273  66                 	db	102
  1104  009274  6F                 	db	111
  1105  009275  72                 	db	114
  1106  009276  20                 	db	32
  1107  009277  64                 	db	100
  1108  009278  61                 	db	97
  1109  009279  79                 	db	121
  1110  00927A  00                 	db	0
  1111  00927B                     __end_of__display_time@F8699:
  1112                           	opt stack 0
  1113  00927B                     __display_efficiency@F8763:
  1114                           	opt stack 0
  1115  00927B  45                 	db	69
  1116  00927C  3A                 	db	58
  1117  00927D  20                 	db	32
  1118  00927E  20                 	db	32
  1119  00927F  20                 	db	32
  1120  009280  20                 	db	32
  1121  009281  20                 	db	32
  1122  009282  20                 	db	32
  1123  009283  20                 	db	32
  1124  009284  20                 	db	32
  1125  009285  20                 	db	32
  1126  009286  4C                 	db	76
  1127  009287  3A                 	db	58
  1128  009288  00                 	db	0
  1129  009289                     __end_of__display_efficiency@F8763:
  1130                           	opt stack 0
  1131  009289                     __display_outputs@F8728:
  1132                           	opt stack 0
  1133  009289  50                 	db	80
  1134  00928A  6F                 	db	111
  1135  00928B  77                 	db	119
  1136  00928C  65                 	db	101
  1137  00928D  72                 	db	114
  1138  00928E  20                 	db	32
  1139  00928F  4F                 	db	79
  1140  009290  75                 	db	117
  1141  009291  74                 	db	116
  1142  009292  70                 	db	112
  1143  009293  75                 	db	117
  1144  009294  74                 	db	116
  1145  009295  73                 	db	115
  1146  009296  00                 	db	0
  1147  009297                     __end_of__display_outputs@F8728:
  1148                           	opt stack 0
  1149  009297                     __display_time@F8681:
  1150                           	opt stack 0
  1151  009297  54                 	db	84
  1152  009298  69                 	db	105
  1153  009299  6D                 	db	109
  1154  00929A  65                 	db	101
  1155  00929B  20                 	db	32
  1156  00929C  61                 	db	97
  1157  00929D  6E                 	db	110
  1158  00929E  64                 	db	100
  1159  00929F  20                 	db	32
  1160  0092A0  44                 	db	68
  1161  0092A1  61                 	db	97
  1162  0092A2  74                 	db	116
  1163  0092A3  65                 	db	101
  1164  0092A4  00                 	db	0
  1165  0092A5                     __end_of__display_time@F8681:
  1166                           	opt stack 0
  1167  0092A5                     __display_inout@F8677:
  1168                           	opt stack 0
  1169  0092A5  41                 	db	65
  1170  0092A6  3A                 	db	58
  1171  0092A7  20                 	db	32
  1172  0092A8  2D                 	db	45
  1173  0092A9  2D                 	db	45
  1174  0092AA  20                 	db	32
  1175  0092AB  20                 	db	32
  1176  0092AC  20                 	db	32
  1177  0092AD  20                 	db	32
  1178  0092AE  20                 	db	32
  1179  0092AF  20                 	db	32
  1180  0092B0  2D                 	db	45
  1181  0092B1  2D                 	db	45
  1182  0092B2  00                 	db	0
  1183  0092B3                     __end_of__display_inout@F8677:
  1184                           	opt stack 0
  1185  0092B3                     __display_temperature@F8785:
  1186                           	opt stack 0
  1187  0092B3  45                 	db	69
  1188  0092B4  78                 	db	120
  1189  0092B5  74                 	db	116
  1190  0092B6  65                 	db	101
  1191  0092B7  72                 	db	114
  1192  0092B8  6E                 	db	110
  1193  0092B9  61                 	db	97
  1194  0092BA  6C                 	db	108
  1195  0092BB  20                 	db	32
  1196  0092BC  32                 	db	50
  1197  0092BD  3A                 	db	58
  1198  0092BE  00                 	db	0
  1199  0092BF                     __end_of__display_temperature@F8785:
  1200                           	opt stack 0
  1201  0092BF                     __display_temperature@F8783:
  1202                           	opt stack 0
  1203  0092BF  45                 	db	69
  1204  0092C0  78                 	db	120
  1205  0092C1  74                 	db	116
  1206  0092C2  65                 	db	101
  1207  0092C3  72                 	db	114
  1208  0092C4  6E                 	db	110
  1209  0092C5  61                 	db	97
  1210  0092C6  6C                 	db	108
  1211  0092C7  20                 	db	32
  1212  0092C8  31                 	db	49
  1213  0092C9  3A                 	db	58
  1214  0092CA  00                 	db	0
  1215  0092CB                     __end_of__display_temperature@F8783:
  1216                           	opt stack 0
  1217  0092CB                     __display_charger@F8748:
  1218                           	opt stack 0
  1219  0092CB  43                 	db	67
  1220  0092CC  68                 	db	104
  1221  0092CD  61                 	db	97
  1222  0092CE  72                 	db	114
  1223  0092CF  67                 	db	103
  1224  0092D0  65                 	db	101
  1225  0092D1  72                 	db	114
  1226  0092D2  20                 	db	32
  1227  0092D3  6F                 	db	111
  1228  0092D4  66                 	db	102
  1229  0092D5  66                 	db	102
  1230  0092D6  00                 	db	0
  1231  0092D7                     __end_of__display_charger@F8748:
  1232                           	opt stack 0
  1233  0092D7                     __display_time@F8693:
  1234                           	opt stack 0
  1235  0092D7  53                 	db	83
  1236  0092D8  65                 	db	101
  1237  0092D9  74                 	db	116
  1238  0092DA  20                 	db	32
  1239  0092DB  73                 	db	115
  1240  0092DC  65                 	db	101
  1241  0092DD  63                 	db	99
  1242  0092DE  6F                 	db	111
  1243  0092DF  6E                 	db	110
  1244  0092E0  64                 	db	100
  1245  0092E1  73                 	db	115
  1246  0092E2  00                 	db	0
  1247  0092E3                     __end_of__display_time@F8693:
  1248                           	opt stack 0
  1249  0092E3                     __display_time@F8691:
  1250                           	opt stack 0
  1251  0092E3  53                 	db	83
  1252  0092E4  65                 	db	101
  1253  0092E5  74                 	db	116
  1254  0092E6  20                 	db	32
  1255  0092E7  6D                 	db	109
  1256  0092E8  69                 	db	105
  1257  0092E9  6E                 	db	110
  1258  0092EA  75                 	db	117
  1259  0092EB  74                 	db	116
  1260  0092EC  65                 	db	101
  1261  0092ED  73                 	db	115
  1262  0092EE  00                 	db	0
  1263  0092EF                     __end_of__display_time@F8691:
  1264                           	opt stack 0
  1265  0092EF                     __display_temperature@F8781:
  1266                           	opt stack 0
  1267  0092EF  4F                 	db	79
  1268  0092F0  6E                 	db	110
  1269  0092F1  2D                 	db	45
  1270  0092F2  62                 	db	98
  1271  0092F3  6F                 	db	111
  1272  0092F4  61                 	db	97
  1273  0092F5  72                 	db	114
  1274  0092F6  64                 	db	100
  1275  0092F7  3A                 	db	58
  1276  0092F8  20                 	db	32
  1277  0092F9  00                 	db	0
  1278  0092FA                     __end_of__display_temperature@F8781:
  1279                           	opt stack 0
  1280  0092FA                     __display_time@F8689:
  1281                           	opt stack 0
  1282  0092FA  53                 	db	83
  1283  0092FB  65                 	db	101
  1284  0092FC  74                 	db	116
  1285  0092FD  20                 	db	32
  1286  0092FE  68                 	db	104
  1287  0092FF  6F                 	db	111
  1288  009300  75                 	db	117
  1289  009301  72                 	db	114
  1290  009302  73                 	db	115
  1291  009303  00                 	db	0
  1292  009304                     __end_of__display_time@F8689:
  1293                           	opt stack 0
  1294  009304                     __display_time@F8685:
  1295                           	opt stack 0
  1296  009304  53                 	db	83
  1297  009305  65                 	db	101
  1298  009306  74                 	db	116
  1299  009307  20                 	db	32
  1300  009308  6D                 	db	109
  1301  009309  6F                 	db	111
  1302  00930A  6E                 	db	110
  1303  00930B  74                 	db	116
  1304  00930C  68                 	db	104
  1305  00930D  00                 	db	0
  1306  00930E                     __end_of__display_time@F8685:
  1307                           	opt stack 0
  1308  00930E                     __display_time@F8683:
  1309                           	opt stack 0
  1310  00930E  53                 	db	83
  1311  00930F  65                 	db	101
  1312  009310  74                 	db	116
  1313  009311  20                 	db	32
  1314  009312  79                 	db	121
  1315  009313  65                 	db	101
  1316  009314  61                 	db	97
  1317  009315  72                 	db	114
  1318  009316  00                 	db	0
  1319  009317                     __end_of__display_time@F8683:
  1320                           	opt stack 0
  1321  009317                     __display_charger@F8746:
  1322                           	opt stack 0
  1323  009317  46                 	db	70
  1324  009318  61                 	db	97
  1325  009319  6E                 	db	110
  1326  00931A  20                 	db	32
  1327  00931B  6F                 	db	111
  1328  00931C  66                 	db	102
  1329  00931D  66                 	db	102
  1330  00931E  00                 	db	0
  1331  00931F                     __end_of__display_charger@F8746:
  1332                           	opt stack 0
  1333  00931F                     __display_time@F8687:
  1334                           	opt stack 0
  1335  00931F  53                 	db	83
  1336  009320  65                 	db	101
  1337  009321  74                 	db	116
  1338  009322  20                 	db	32
  1339  009323  64                 	db	100
  1340  009324  61                 	db	97
  1341  009325  79                 	db	121
  1342  009326  00                 	db	0
  1343  009327                     __end_of__display_time@F8687:
  1344                           	opt stack 0
  1345  009327                     _USB_SD_Ptr:
  1346                           	opt stack 0
  1347  009327  52                 	db	low _sd000
  1348  009328  94                 	db	high _sd000
  1349  009329  7B                 	db	low _sd001
  1350  00932A  93                 	db	high _sd001
  1351  00932B  AF                 	db	low _sd002
  1352  00932C  93                 	db	high _sd002
  1353  00932D  1E                 	db	low _sd003
  1354  00932E  94                 	db	high _sd003
  1355  00932F                     __end_of_USB_SD_Ptr:
  1356                           	opt stack 0
  1357  00932F                     __display_charger@F8744:
  1358                           	opt stack 0
  1359  00932F  46                 	db	70
  1360  009330  61                 	db	97
  1361  009331  6E                 	db	110
  1362  009332  20                 	db	32
  1363  009333  6F                 	db	111
  1364  009334  6E                 	db	110
  1365  009335  00                 	db	0
  1366  009336                     __end_of__display_charger@F8744:
  1367                           	opt stack 0
  1368  009336                     __display_inout@F8675:
  1369                           	opt stack 0
  1370  009336  56                 	db	86
  1371  009337  3A                 	db	58
  1372  009338  00                 	db	0
  1373  009339                     __end_of__display_inout@F8675:
  1374                           	opt stack 0
  1375  009339                     _USB_CD_Ptr:
  1376                           	opt stack 0
  1377  009339  3B                 	db	low _configDescriptor1
  1378  00933A  93                 	db	high _configDescriptor1
  1379  00933B                     __end_of_USB_CD_Ptr:
  1380                           	opt stack 0
  1381  00933B                     _configDescriptor1:
  1382                           	opt stack 0
  1383  00933B  09                 	db	9
  1384  00933C  02                 	db	2
  1385  00933D  40                 	db	64
  1386  00933E  00                 	db	0
  1387  00933F  02                 	db	2
  1388  009340  01                 	db	1
  1389  009341  00                 	db	0
  1390  009342  C0                 	db	192
  1391  009343  32                 	db	50
  1392  009344  09                 	db	9
  1393  009345  04                 	db	4
  1394  009346  00                 	db	0
  1395  009347  00                 	db	0
  1396  009348  02                 	db	2
  1397  009349  03                 	db	3
  1398  00934A  00                 	db	0
  1399  00934B  00                 	db	0
  1400  00934C  00                 	db	0
  1401  00934D  09                 	db	9
  1402  00934E  21                 	db	33
  1403  00934F  11                 	db	17
  1404  009350  01                 	db	1
  1405  009351  00                 	db	0
  1406  009352  01                 	db	1
  1407  009353  22                 	db	34
  1408  009354  1D                 	db	29
  1409  009355  00                 	db	0
  1410  009356  07                 	db	7
  1411  009357  05                 	db	5
  1412  009358  81                 	db	129
  1413  009359  03                 	db	3
  1414  00935A  40                 	db	64
  1415  00935B  00                 	db	0
  1416  00935C  01                 	db	1
  1417  00935D  07                 	db	7
  1418  00935E  05                 	db	5
  1419  00935F  01                 	db	1
  1420  009360  03                 	db	3
  1421  009361  40                 	db	64
  1422  009362  00                 	db	0
  1423  009363  01                 	db	1
  1424  009364  09                 	db	9
  1425  009365  04                 	db	4
  1426  009366  01                 	db	1
  1427  009367  00                 	db	0
  1428  009368  02                 	db	2
  1429  009369  08                 	db	8
  1430  00936A  06                 	db	6
  1431  00936B  50                 	db	80
  1432  00936C  00                 	db	0
  1433  00936D  07                 	db	7
  1434  00936E  05                 	db	5
  1435  00936F  82                 	db	130
  1436  009370  02                 	db	2
  1437  009371  40                 	db	64
  1438  009372  00                 	db	0
  1439  009373  01                 	db	1
  1440  009374  07                 	db	7
  1441  009375  05                 	db	5
  1442  009376  02                 	db	2
  1443  009377  02                 	db	2
  1444  009378  40                 	db	64
  1445  009379  00                 	db	0
  1446  00937A  01                 	db	1
  1447  00937B                     __end_of_configDescriptor1:
  1448                           	opt stack 0
  1449  00937B                     _sd001:
  1450                           	opt stack 0
  1451  00937B  34                 	db	52
  1452  00937C  03                 	db	3
  1453  00937D  0053               	dw	83
  1454  00937F  006F               	dw	111
  1455  009381  006C               	dw	108
  1456  009383  0064               	dw	100
  1457  009385  0065               	dw	101
  1458  009387  0072               	dw	114
  1459  009389  006E               	dw	110
  1460  00938B  0065               	dw	101
  1461  00938D  0072               	dw	114
  1462  00938F  0064               	dw	100
  1463  009391  002E               	dw	46
  1464  009393  0063               	dw	99
  1465  009395  006F               	dw	111
  1466  009397  006D               	dw	109
  1467  009399  0020               	dw	32
  1468  00939B  0020               	dw	32
  1469  00939D  0020               	dw	32
  1470  00939F  0020               	dw	32
  1471  0093A1  0020               	dw	32
  1472  0093A3  0020               	dw	32
  1473  0093A5  0020               	dw	32
  1474  0093A7  0020               	dw	32
  1475  0093A9  0020               	dw	32
  1476  0093AB  0020               	dw	32
  1477  0093AD  0020               	dw	32
  1478  0093AF                     __end_of_sd001:
  1479                           	opt stack 0
  1480  0093AF                     _sd002:
  1481                           	opt stack 0
  1482  0093AF  2E                 	db	46
  1483  0093B0  03                 	db	3
  1484  0093B1  004D               	dw	77
  1485  0093B3  0050               	dw	80
  1486  0093B5  0050               	dw	80
  1487  0093B7  0054               	dw	84
  1488  0093B9  0053               	dw	83
  1489  0093BB  006F               	dw	111
  1490  0093BD  006C               	dw	108
  1491  0093BF  0061               	dw	97
  1492  0093C1  0072               	dw	114
  1493  0093C3  0020               	dw	32
  1494  0093C5  0043               	dw	67
  1495  0093C7  0068               	dw	104
  1496  0093C9  0061               	dw	97
  1497  0093CB  0072               	dw	114
  1498  0093CD  0067               	dw	103
  1499  0093CF  0065               	dw	101
  1500  0093D1  0072               	dw	114
  1501  0093D3  0020               	dw	32
  1502  0093D5  0052               	dw	82
  1503  0093D7  0065               	dw	101
  1504  0093D9  0076               	dw	118
  1505  0093DB  0045               	dw	69
  1506  0093DD                     __end_of_sd002:
  1507                           	opt stack 0
  1508  0093DD                     _inq_resp:
  1509                           	opt stack 0
  1510  0093DD  00                 	db	0
  1511  0093DE  80                 	db	128
  1512  0093DF  04                 	db	4
  1513  0093E0  02                 	db	2
  1514  0093E1  20                 	db	32
  1515  0093E2  00                 	db	0
  1516  0093E3  00                 	db	0
  1517  0093E4  00                 	db	0
  1518  0093E5  4D                 	db	77
  1519  0093E6  69                 	db	105
  1520  0093E7  63                 	db	99
  1521  0093E8  72                 	db	114
  1522  0093E9  6F                 	db	111
  1523  0093EA  63                 	db	99
  1524  0093EB  68                 	db	104
  1525  0093EC  70                 	db	112
  1526  0093ED  4D                 	db	77
  1527  0093EE  61                 	db	97
  1528  0093EF  73                 	db	115
  1529  0093F0  73                 	db	115
  1530  0093F1  20                 	db	32
  1531  0093F2  53                 	db	83
  1532  0093F3  74                 	db	116
  1533  0093F4  6F                 	db	111
  1534  0093F5  72                 	db	114
  1535  0093F6  61                 	db	97
  1536  0093F7  67                 	db	103
  1537  0093F8  65                 	db	101
  1538  0093F9  20                 	db	32
  1539  0093FA  20                 	db	32
  1540  0093FB  20                 	db	32
  1541  0093FC  20                 	db	32
  1542  0093FD  30                 	db	48
  1543  0093FE  30                 	db	48
  1544  0093FF  30                 	db	48
  1545  009400  31                 	db	49
  1546  009401                     __end_of_inq_resp:
  1547                           	opt stack 0
  1548  009401                     _hid_rpt01:
  1549                           	opt stack 0
  1550  009401  06                 	db	6
  1551  009402  00                 	db	0
  1552  009403  FF                 	db	255
  1553  009404  09                 	db	9
  1554  009405  01                 	db	1
  1555  009406  A1                 	db	161
  1556  009407  01                 	db	1
  1557  009408  19                 	db	25
  1558  009409  01                 	db	1
  1559  00940A  29                 	db	41
  1560  00940B  40                 	db	64
  1561  00940C  15                 	db	21
  1562  00940D  00                 	db	0
  1563  00940E  26                 	db	38
  1564  00940F  FF                 	db	255
  1565  009410  00                 	db	0
  1566  009411  75                 	db	117
  1567  009412  08                 	db	8
  1568  009413  95                 	db	149
  1569  009414  40                 	db	64
  1570  009415  81                 	db	129
  1571  009416  00                 	db	0
  1572  009417  19                 	db	25
  1573  009418  01                 	db	1
  1574  009419  29                 	db	41
  1575  00941A  40                 	db	64
  1576  00941B  91                 	db	145
  1577  00941C  00                 	db	0
  1578  00941D  C0                 	db	192
  1579  00941E                     __end_of_hid_rpt01:
  1580                           	opt stack 0
  1581  00941E                     _sd003:
  1582                           	opt stack 0
  1583  00941E  1A                 	db	26
  1584  00941F  03                 	db	3
  1585  009420  0031               	dw	49
  1586  009422  0032               	dw	50
  1587  009424  0033               	dw	51
  1588  009426  0034               	dw	52
  1589  009428  0035               	dw	53
  1590  00942A  0036               	dw	54
  1591  00942C  0037               	dw	55
  1592  00942E  0038               	dw	56
  1593  009430  0039               	dw	57
  1594  009432  0030               	dw	48
  1595  009434  0039               	dw	57
  1596  009436  0039               	dw	57
  1597  009438                     __end_of_sd003:
  1598                           	opt stack 0
  1599  009438                     _device_dsc:
  1600                           	opt stack 0
  1601  009438  12                 	db	18
  1602  009439  01                 	db	1
  1603  00943A  0200               	dw	512
  1604  00943C  00                 	db	0
  1605  00943D  00                 	db	0
  1606  00943E  00                 	db	0
  1607  00943F  08                 	db	8
  1608  009440  04D8               	dw	1240
  1609  009442  F08E               	dw	61582
  1610  009444  0100               	dw	256
  1611  009446  01                 	db	1
  1612  009447  02                 	db	2
  1613  009448  00                 	db	0
  1614  009449  01                 	db	1
  1615  00944A                     __end_of_device_dsc:
  1616                           	opt stack 0
  1617  00944A                     _flash_command_pagesize_528:
  1618                           	opt stack 0
  1619  00944A  3D                 	db	61
  1620  00944B  2A                 	db	42
  1621  00944C  80                 	db	128
  1622  00944D  A7                 	db	167
  1623  00944E                     __end_of_flash_command_pagesize_528:
  1624                           	opt stack 0
  1625  00944E                     _flash_command_pagesize_512:
  1626                           	opt stack 0
  1627  00944E  3D                 	db	61
  1628  00944F  2A                 	db	42
  1629  009450  80                 	db	128
  1630  009451  A6                 	db	166
  1631  009452                     __end_of_flash_command_pagesize_512:
  1632                           	opt stack 0
  1633  009452                     _sd000:
  1634                           	opt stack 0
  1635  009452  04                 	db	4
  1636  009453  03                 	db	3
  1637  009454  0409               	dw	1033
  1638  009456                     __end_of_sd000:
  1639                           	opt stack 0
  1640  0000                     _RPINR22	set	3837
  1641  0000                     _RPOR22	set	3798
  1642  0000                     _RPOR21	set	3797
  1643  0000                     _RPINR21	set	3836
  1644  0000                     _RPOR5	set	3781
  1645  0000                     _RPOR6	set	3782
  1646  0000                     _RPINR2	set	3810
  1647  0000                     _RPINR3	set	3811
  1648  0000                     _RPINR1	set	3809
  1649  0000                     _PPSCONbits	set	3775
  1650  0000                     _CCPTMRS0bits	set	3922
  1651  0000                     _RTCVALH	set	3899
  1652  0000                     _RTCVALL	set	3898
  1653  0000                     _RTCCAL	set	3902
  1654  0000                     _RTCCFGbits	set	3903
  1655  0000                     _ANCON1bits	set	3913
  1656  0000                     _ANCON0bits	set	3912
  1657  0000                     _UEP0bits	set	3878
  1658  0000                     _UIEbits	set	3894
  1659  0000                     _UADDR	set	3896
  1660  0000                     _UIE	set	3894
  1661  0000                     _UEIE	set	3895
  1662  0000                     _UCFG	set	3897
  1663  0000                     _UEP1	set	3879
  1664  0000                     _UEP0	set	3878
  1665  0000                     _SSP2CON1bits	set	3954
  1666  0000                     _SSP2STATbits	set	3955
  1667  0000                     _RXADDRL	set	3945
  1668  0000                     _RXADDRH	set	3944
  1669  0000                     _DMABCL	set	3943
  1670  0000                     _DMABCH	set	3942
  1671  0000                     _TXADDRL	set	3947
  1672  0000                     _TXADDRH	set	3946
  1673  0000                     _DMACON2bits	set	3974
  1674  0000                     _DMACON1bits	set	3976
  1675  0000                     _ADRESL	set	4035
  1676  0000                     _ADRESH	set	4036
  1677  0000                     _ADCON1bits	set	4033
  1678  0000                     _ADCON0bits	set	4034
  1679  0000                     _CCP1CON	set	4026
  1680  0000                     _TMR2	set	4044
  1681  0000                     _PR2	set	4043
  1682  0000                     _CCPR1L	set	4027
  1683  0000                     _CCP1CONbits	set	4026
  1684  0000                     _T2CONbits	set	4042
  1685  0000                     _SSP1BUF	set	4041
  1686  0000                     _SSP1CON2bits	set	4037
  1687  0000                     _SSP1CON1bits	set	4038
  1688  0000                     _SSP1ADD	set	4040
  1689  0000                     _SSP1STATbits	set	4039
  1690  0000                     _T1CONbits	set	4045
  1691  0000                     _TMR1L	set	4046
  1692  0000                     _TMR1H	set	4047
  1693  0000                     _PIR1bits	set	3998
  1694  0000                     _LATAbits	set	3977
  1695  0000                     _TRISEbits	set	3990
  1696  0000                     _LATEbits	set	3981
  1697  0000                     _LATCbits	set	3979
  1698  0000                     _TRISAbits	set	3986
  1699  0000                     _TRISBbits	set	3987
  1700  0000                     _LATBbits	set	3978
  1701  0000                     _TRISDbits	set	3989
  1702  0000                     _TRISCbits	set	3988
  1703  0000                     _T0CONbits	set	4053
  1704  0000                     _INTCON2bits	set	4081
  1705  0000                     _EECON2	set	4007
  1706  0000                     _PORTBbits	set	3969
  1707  0000                     _INTCON3bits	set	4080
  1708  0000                     _TMR0L	set	4054
  1709  0000                     _TMR0H	set	4055
  1710  0000                     _PORTAbits	set	3968
  1711  0000                     _OSCCON	set	4051
  1712  0000                     _OSCTUNEbits	set	3995
  1713  0000                     _LATDbits	set	3980
  1714  0000                     _INTCONbits	set	4082
  1715  0000                     _IPR2bits	set	4002
  1716  0000                     _RCONbits	set	4048
  1717  0000                     _UCON	set	3941
  1718  0000                     _USTAT	set	3940
  1719  0000                     _PIR2bits	set	4001
  1720  0000                     _UIRbits	set	3938
  1721  0000                     _UCONbits	set	3941
  1722  0000                     _UIR	set	3938
  1723  0000                     _UEIR	set	3939
  1724  0000                     _PIE2bits	set	4000
  1725  009456  48                 	db	72	;'H'
  1726  009457  65                 	db	101	;'e'
  1727  009458  6C                 	db	108	;'l'
  1728  009459  6C                 	db	108	;'l'
  1729  00945A  6F                 	db	111	;'o'
  1730  00945B  20                 	db	32
  1731  00945C  57                 	db	87	;'W'
  1732  00945D  6F                 	db	111	;'o'
  1733  00945E  72                 	db	114	;'r'
  1734  00945F  6C                 	db	108	;'l'
  1735  009460  64                 	db	100	;'d'
  1736  009461  21                 	db	33
  1737  009462  00                 	db	0
  1738  009463  53                 	db	83	;'S'
  1739  009464  6F                 	db	111	;'o'
  1740  009465  6C                 	db	108	;'l'
  1741  009466  61                 	db	97	;'a'
  1742  009467  72                 	db	114	;'r'
  1743  009468  43                 	db	67	;'C'
  1744  009469  68                 	db	104	;'h'
  1745  00946A  61                 	db	97	;'a'
  1746  00946B  72                 	db	114	;'r'
  1747  00946C  67                 	db	103	;'g'
  1748  00946D  72                 	db	114	;'r'
  1749  00946E  00                 	db	0
  1750  00946F  46                 	db	70	;'F'
  1751  009470  49                 	db	73	;'I'
  1752  009471  4C                 	db	76	;'L'
  1753  009472  45                 	db	69	;'E'
  1754  009473  20                 	db	32
  1755  009474  20                 	db	32
  1756  009475  20                 	db	32
  1757  009476  20                 	db	32
  1758  009477  00                 	db	0
  1759  009478                     STR_1:
  1760  009478  4D                 	db	77	;'M'
  1761  009479  53                 	db	83	;'S'
  1762  00947A  44                 	db	68	;'D'
  1763  00947B  4F                 	db	79	;'O'
  1764  00947C  53                 	db	83	;'S'
  1765  00947D  35                 	db	53	;'5'
  1766  00947E  2E                 	db	46
  1767  00947F  30                 	db	48	;'0'
  1768  009480  00                 	db	0
  1769  009481  54                 	db	84	;'T'
  1770  009482  58                 	db	88	;'X'
  1771  009483  54                 	db	84	;'T'
  1772  009484  00                 	db	0
  1773  0000                     
  1774                           ; #config settings
  1775  009485  00                 	db	0	; dummy byte at the end
  1776  0000                     
  1777                           	psect	cinit
  1778  00FA24                     __pcinit:
  1779                           	opt stack 0
  1780  00FA24                     start_initialization:
  1781                           	opt stack 0
  1782  00FA24                     __initialization:
  1783                           	opt stack 0
  1784                           
  1785                           ; Initialize objects allocated to BANK4 (104 bytes)
  1786                           ; load TBLPTR registers with __pidataBANK4
  1787  00FA24  0EAA               	movlw	low __pidataBANK4
  1788  00FA26  6EF6               	movwf	tblptrl,c
  1789  00FA28  0E12               	movlw	high __pidataBANK4
  1790  00FA2A  6EF7               	movwf	tblptrh,c
  1791  00FA2C  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1792  00FA2E  6EF8               	movwf	tblptru,c
  1793  00FA30  EE04  F000         	lfsr	0,__pdataBANK4
  1794  00FA34  EE10 F068          	lfsr	1,104
  1795  00FA38                     copy_data0:
  1796  00FA38  0009               	tblrd		*+
  1797  00FA3A  CFF5 FFEE          	movff	tablat,postinc0
  1798  00FA3E  50E5               	movf	postdec1,w,c
  1799  00FA40  50E1               	movf	fsr1l,w,c
  1800  00FA42  E1FA               	bnz	copy_data0
  1801                           
  1802                           ; Initialize objects allocated to BANK3 (27 bytes)
  1803                           ; load TBLPTR registers with __pidataBANK3
  1804  00FA44  0EDA               	movlw	low __pidataBANK3
  1805  00FA46  6EF6               	movwf	tblptrl,c
  1806  00FA48  0E2A               	movlw	high __pidataBANK3
  1807  00FA4A  6EF7               	movwf	tblptrh,c
  1808  00FA4C  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1809  00FA4E  6EF8               	movwf	tblptru,c
  1810  00FA50  EE03  F0E4         	lfsr	0,__pdataBANK3
  1811  00FA54  EE10 F01B          	lfsr	1,27
  1812  00FA58                     copy_data1:
  1813  00FA58  0009               	tblrd		*+
  1814  00FA5A  CFF5 FFEE          	movff	tablat,postinc0
  1815  00FA5E  50E5               	movf	postdec1,w,c
  1816  00FA60  50E1               	movf	fsr1l,w,c
  1817  00FA62  E1FA               	bnz	copy_data1
  1818                           
  1819                           ; Initialize objects allocated to BANK2 (61 bytes)
  1820                           ; load TBLPTR registers with __pidataBANK2
  1821  00FA64  0E76               	movlw	low __pidataBANK2
  1822  00FA66  6EF6               	movwf	tblptrl,c
  1823  00FA68  0E22               	movlw	high __pidataBANK2
  1824  00FA6A  6EF7               	movwf	tblptrh,c
  1825  00FA6C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1826  00FA6E  6EF8               	movwf	tblptru,c
  1827  00FA70  EE02  F0BF         	lfsr	0,__pdataBANK2
  1828  00FA74  EE10 F03D          	lfsr	1,61
  1829  00FA78                     copy_data2:
  1830  00FA78  0009               	tblrd		*+
  1831  00FA7A  CFF5 FFEE          	movff	tablat,postinc0
  1832  00FA7E  50E5               	movf	postdec1,w,c
  1833  00FA80  50E1               	movf	fsr1l,w,c
  1834  00FA82  E1FA               	bnz	copy_data2
  1835                           
  1836                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1837  00FA84  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1838  00FA88  EE12 F000          	lfsr	1,512
  1839  00FA8C                     clear_0:
  1840  00FA8C  6AEE               	clrf	postinc0,c
  1841  00FA8E  50E5               	movf	postdec1,w,c
  1842  00FA90  50E1               	movf	fsr1l,w,c
  1843  00FA92  E1FC               	bnz	clear_0
  1844  00FA94  50E2               	movf	fsr1h,w,c
  1845  00FA96  E1FA               	bnz	clear_0
  1846                           
  1847                           ; Clear objects allocated to BANK4 (80 bytes)
  1848  00FA98  EE04  F068         	lfsr	0,__pbssBANK4
  1849  00FA9C  0E50               	movlw	80
  1850  00FA9E                     clear_1:
  1851  00FA9E  6AEE               	clrf	postinc0,c
  1852  00FAA0  06E8               	decf	wreg,f,c
  1853  00FAA2  E1FD               	bnz	clear_1
  1854                           
  1855                           ; Clear objects allocated to BANK3 (228 bytes)
  1856  00FAA4  EE03  F000         	lfsr	0,__pbssBANK3
  1857  00FAA8  0EE4               	movlw	228
  1858  00FAAA                     clear_2:
  1859  00FAAA  6AEE               	clrf	postinc0,c
  1860  00FAAC  06E8               	decf	wreg,f,c
  1861  00FAAE  E1FD               	bnz	clear_2
  1862                           
  1863                           ; Clear objects allocated to BANK2 (191 bytes)
  1864  00FAB0  EE02  F000         	lfsr	0,__pbssBANK2
  1865  00FAB4  0EBF               	movlw	191
  1866  00FAB6                     clear_3:
  1867  00FAB6  6AEE               	clrf	postinc0,c
  1868  00FAB8  06E8               	decf	wreg,f,c
  1869  00FABA  E1FD               	bnz	clear_3
  1870                           
  1871                           ; Clear objects allocated to BANK1 (45 bytes)
  1872  00FABC  EE01  F0D3         	lfsr	0,__pbssBANK1
  1873  00FAC0  0E2D               	movlw	45
  1874  00FAC2                     clear_4:
  1875  00FAC2  6AEE               	clrf	postinc0,c
  1876  00FAC4  06E8               	decf	wreg,f,c
  1877  00FAC6  E1FD               	bnz	clear_4
  1878                           
  1879                           ; Clear objects allocated to BANK0 (13 bytes)
  1880  00FAC8  EE00  F0F3         	lfsr	0,__pbssBANK0
  1881  00FACC  0E0D               	movlw	13
  1882  00FACE                     clear_5:
  1883  00FACE  6AEE               	clrf	postinc0,c
  1884  00FAD0  06E8               	decf	wreg,f,c
  1885  00FAD2  E1FD               	bnz	clear_5
  1886                           
  1887                           ; Clear objects allocated to COMRAM (45 bytes)
  1888  00FAD4  EE00  F032         	lfsr	0,__pbssCOMRAM
  1889  00FAD8  0E2D               	movlw	45
  1890  00FADA                     clear_6:
  1891  00FADA  6AEE               	clrf	postinc0,c
  1892  00FADC  06E8               	decf	wreg,f,c
  1893  00FADE  E1FD               	bnz	clear_6
  1894  00FAE0                     end_of_initialization:
  1895                           	opt stack 0
  1896  00FAE0                     __end_of__initialization:
  1897                           	opt stack 0
  1898  00FAE0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1899  00FAE2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1900  00FAE4  0100               	movlb	0
  1901  00FAE6  EF38  F05A         	goto	_main	;jump to C main() function
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           
  1912                           	psect	bssCOMRAM
  1913  000032                     __pbssCOMRAM:
  1914                           	opt stack 0
  1915  000032                     _outPipes:
  1916                           	opt stack 0
  1917  000032                     	ds	9
  1918  00003B                     _pBDTEntryIn:
  1919                           	opt stack 0
  1920  00003B                     	ds	6
  1921  000041                     _averageCount:
  1922                           	opt stack 0
  1923  000041                     	ds	2
  1924  000043                     _TransferLength:
  1925                           	opt stack 0
  1926  000043                     	ds	2
  1927  000045                     _USBMSDInHandle:
  1928                           	opt stack 0
  1929  000045                     	ds	2
  1930  000047                     _USBMSDOutHandle:
  1931                           	opt stack 0
  1932  000047                     	ds	2
  1933  000049                     _pBDTEntryEP0OutCurrent:
  1934                           	opt stack 0
  1935  000049                     	ds	2
  1936  00004B                     _power_state:
  1937                           	opt stack 0
  1938  00004B                     	ds	1
  1939  00004C                     _idx:
  1940                           	opt stack 0
  1941  00004C                     	ds	1
  1942  00004D                     _buck_remote_synchronous:
  1943                           	opt stack 0
  1944  00004D                     	ds	1
  1945  00004E                     _buck_remote_on:
  1946                           	opt stack 0
  1947  00004E                     	ds	1
  1948  00004F                     _task_list_write_index:
  1949                           	opt stack 0
  1950  00004F                     	ds	1
  1951  000050                     _task_list_read_index:
  1952                           	opt stack 0
  1953  000050                     	ds	1
  1954  000051                     _MSDHostNoData:
  1955                           	opt stack 0
  1956  000051                     	ds	1
  1957  000052                     _MSDWriteState:
  1958                           	opt stack 0
  1959  000052                     	ds	1
  1960  000053                     _MSDCommandState:
  1961                           	opt stack 0
  1962  000053                     	ds	1
  1963  000054                     _MSD_State:
  1964                           	opt stack 0
  1965  000054                     	ds	1
  1966  000055                     _USBDeferStatusStagePacket:
  1967                           	opt stack 0
  1968  000055                     	ds	1
  1969  000056                     _USBStatusStageTimeoutCounter:
  1970                           	opt stack 0
  1971  000056                     	ds	1
  1972  000057                     _endpoint_number:
  1973                           	opt stack 0
  1974  000057                     	ds	1
  1975  000058                     _USBBusIsSuspended:
  1976                           	opt stack 0
  1977  000058                     	ds	1
  1978  000059                     _RemoteWakeup:
  1979                           	opt stack 0
  1980  000059                     	ds	1
  1981  00005A                     _controlTransferState:
  1982                           	opt stack 0
  1983  00005A                     	ds	1
  1984  00005B                     _shortPacketStatus:
  1985                           	opt stack 0
  1986  00005B                     	ds	1
  1987  00005C                     _USBDeviceState:
  1988                           	opt stack 0
  1989  00005C                     	ds	1
  1990  00005D                     _USTATcopy:
  1991                           	opt stack 0
  1992  00005D                     	ds	1
  1993  00005E                     _USBActiveConfiguration:
  1994                           	opt stack 0
  1995  00005E                     	ds	1
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           postdec1	equ	0xFE5
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           
  2006                           	psect	bssBANK0
  2007  0000F3                     __pbssBANK0:
  2008                           	opt stack 0
  2009  0000F3                     _inPipes:
  2010                           	opt stack 0
  2011  0000F3                     	ds	6
  2012  0000F9                     _USBInHandle:
  2013                           	opt stack 0
  2014  0000F9                     	ds	2
  2015  0000FB                     _pBDTEntryEP0OutNext:
  2016                           	opt stack 0
  2017  0000FB                     	ds	2
  2018  0000FD                     _buck_remote_dutycycle:
  2019                           	opt stack 0
  2020  0000FD                     	ds	1
  2021  0000FE                     _buck_dutycycle:
  2022                           	opt stack 0
  2023  0000FE                     	ds	1
  2024  0000FF                     _buck_status:
  2025                           	opt stack 0
  2026  0000FF                     	ds	1
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           postinc0	equ	0xFEE
  2032                           wreg	equ	0xFE8
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           
  2037                           	psect	bssBANK1
  2038  0001D3                     __pbssBANK1:
  2039                           	opt stack 0
  2040  0001D3                     _pBDTEntryOut:
  2041                           	opt stack 0
  2042  0001D3                     	ds	6
  2043  0001D9                     _LBA:
  2044                           	opt stack 0
  2045  0001D9                     	ds	4
  2046  0001DD                     _USB1msTickCount:
  2047                           	opt stack 0
  2048  0001DD                     	ds	4
  2049  0001E1                     _ep_data_out:
  2050                           	opt stack 0
  2051  0001E1                     	ds	3
  2052  0001E4                     _ep_data_in:
  2053                           	opt stack 0
  2054  0001E4                     	ds	3
  2055  0001E7                     _ptrNextData:
  2056                           	opt stack 0
  2057  0001E7                     	ds	2
  2058  0001E9                     _pDst:
  2059                           	opt stack 0
  2060  0001E9                     	ds	2
  2061  0001EB                     _lastSecond:
  2062                           	opt stack 0
  2063  0001EB                     	ds	1
  2064  0001EC                     _status:
  2065                           	opt stack 0
  2066  0001EC                     	ds	1
  2067  0001ED                     _buck_remote_enable:
  2068                           	opt stack 0
  2069  0001ED                     	ds	1
  2070  0001EE                     _buck_dutycycle_last_step:
  2071                           	opt stack 0
  2072  0001EE                     	ds	1
  2073  0001EF                     _userInterfaceStatus:
  2074                           	opt stack 0
  2075  0001EF                     	ds	1
  2076  0001F0                     _i2c_frequency:
  2077                           	opt stack 0
  2078  0001F0                     	ds	1
  2079  0001F1                     _MSDCBWValid:
  2080                           	opt stack 0
  2081  0001F1                     	ds	1
  2082  0001F2                     _SoftDetach:
  2083                           	opt stack 0
  2084  0001F2                     	ds	1
  2085  0001F3                     _gblCBWLength:
  2086                           	opt stack 0
  2087  0001F3                     	ds	1
  2088  0001F4                     _MSDRetryAttempt:
  2089                           	opt stack 0
  2090  0001F4                     	ds	1
  2091  0001F5                     _MSDReadState:
  2092                           	opt stack 0
  2093  0001F5                     	ds	1
  2094  0001F6                     _USBTicksSinceSuspendEnd:
  2095                           	opt stack 0
  2096  0001F6                     	ds	1
  2097  0001F7                     _USBDeferOUTDataStagePackets:
  2098                           	opt stack 0
  2099  0001F7                     	ds	1
  2100  0001F8                     _USBDeferINDataStagePackets:
  2101                           	opt stack 0
  2102  0001F8                     	ds	1
  2103  0001F9                     _USBStatusStageEnabledFlag2:
  2104                           	opt stack 0
  2105  0001F9                     	ds	1
  2106  0001FA                     _USBStatusStageEnabledFlag1:
  2107                           	opt stack 0
  2108  0001FA                     	ds	1
  2109  0001FB                     _BothEP0OutUOWNsSet:
  2110                           	opt stack 0
  2111  0001FB                     	ds	1
  2112  0001FC                     _USBAlternateInterface:
  2113                           	opt stack 0
  2114  0001FC                     	ds	2
  2115  0001FE                     _active_protocol:
  2116                           	opt stack 0
  2117  0001FE                     	ds	1
  2118  0001FF                     _idle_rate:
  2119                           	opt stack 0
  2120  0001FF                     	ds	1
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1h	equ	0xFE2
  2129                           fsr1l	equ	0xFE1
  2130                           
  2131                           	psect	bssBANK2
  2132  000200                     __pbssBANK2:
  2133                           	opt stack 0
  2134  000200                     _os:
  2135                           	opt stack 0
  2136  000200                     	ds	65
  2137  000241                     _gblCBW:
  2138                           	opt stack 0
  2139  000241                     	ds	31
  2140  000260                     _gblSenseData:
  2141                           	opt stack 0
  2142  000260                     	ds	18
  2143  000272                     _temperatureExternal2Sum:
  2144                           	opt stack 0
  2145  000272                     	ds	4
  2146  000276                     _temperatureExternal1Sum:
  2147                           	opt stack 0
  2148  000276                     	ds	4
  2149  00027A                     _temperatureOnboardSum:
  2150                           	opt stack 0
  2151  00027A                     	ds	4
  2152  00027E                     _outputCapacitySum:
  2153                           	opt stack 0
  2154  00027E                     	ds	4
  2155  000282                     _inputCapacitySum:
  2156                           	opt stack 0
  2157  000282                     	ds	4
  2158  000286                     _outputPowerSum:
  2159                           	opt stack 0
  2160  000286                     	ds	4
  2161  00028A                     _inputPowerSum:
  2162                           	opt stack 0
  2163  00028A                     	ds	4
  2164  00028E                     _outputCurrentSum:
  2165                           	opt stack 0
  2166  00028E                     	ds	4
  2167  000292                     _outputVoltageSum:
  2168                           	opt stack 0
  2169  000292                     	ds	4
  2170  000296                     _inputCurrentSum:
  2171                           	opt stack 0
  2172  000296                     	ds	4
  2173  00029A                     _inputVoltageSum:
  2174                           	opt stack 0
  2175  00029A                     	ds	4
  2176  00029E                     _now:
  2177                           	opt stack 0
  2178  00029E                     	ds	4
  2179  0002A2                     _last:
  2180                           	opt stack 0
  2181  0002A2                     	ds	4
  2182  0002A6                     _gblBLKLen:
  2183                           	opt stack 0
  2184  0002A6                     	ds	4
  2185  0002AA                     _gblNumBLKS:
  2186                           	opt stack 0
  2187  0002AA                     	ds	4
  2188  0002AE                     _lowPowerTime:
  2189                           	opt stack 0
  2190  0002AE                     	ds	2
  2191  0002B0                     _chargerOnTime:
  2192                           	opt stack 0
  2193  0002B0                     	ds	2
  2194  0002B2                     _system_ui_inactive_count:
  2195                           	opt stack 0
  2196  0002B2                     	ds	2
  2197  0002B4                     _USBOutHandle:
  2198                           	opt stack 0
  2199  0002B4                     	ds	2
  2200  0002B6                     _gblMediaPresent:
  2201                           	opt stack 0
  2202  0002B6                     	ds	2
  2203  0002B8                     _MSBBufferIndex:
  2204                           	opt stack 0
  2205  0002B8                     	ds	2
  2206  0002BA                     _mediaInformation:
  2207                           	opt stack 0
  2208  0002BA                     	ds	5
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	dataBANK2
  2220  0002BF                     __pdataBANK2:
  2221                           	opt stack 0
  2222  0002BF                     _LUN:
  2223                           	opt stack 0
  2224  0002BF                     	ds	29
  2225  0002DC                     system_init@F8579:
  2226                           	opt stack 0
  2227  0002DC                     	ds	9
  2228  0002E5                     system_init@F8585:
  2229                           	opt stack 0
  2230  0002E5                     	ds	4
  2231  0002E9                     system_init@F8581:
  2232                           	opt stack 0
  2233  0002E9                     	ds	4
  2234  0002ED                     _battery_voltage_maximum:
  2235                           	opt stack 0
  2236  0002ED                     	ds	2
  2237  0002EF                     _filename:
  2238                           	opt stack 0
  2239  0002EF                     	ds	9
  2240  0002F8                     _extension:
  2241                           	opt stack 0
  2242  0002F8                     	ds	4
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           postdec1	equ	0xFE5
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           
  2253                           	psect	bssBANK3
  2254  000300                     __pbssBANK3:
  2255                           	opt stack 0
  2256  000300                     _calibrationParameters:
  2257                           	opt stack 0
  2258  000300                     	ds	84
  2259  000354                     _display_content:
  2260                           	opt stack 0
  2261  000354                     	ds	80
  2262  0003A4                     _ToSendDataBuffer:
  2263                           	opt stack 0
  2264  0003A4                     	ds	64
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           postdec1	equ	0xFE5
  2272                           fsr1h	equ	0xFE2
  2273                           fsr1l	equ	0xFE1
  2274                           
  2275                           	psect	dataBANK3
  2276  0003E4                     __pdataBANK3:
  2277                           	opt stack 0
  2278  0003E4                     i2c_display_init@F8363:
  2279                           	opt stack 0
  2280  0003E4                     	ds	9
  2281  0003ED                     i2c_display_send_init_sequence@F8360:
  2282                           	opt stack 0
  2283  0003ED                     	ds	9
  2284  0003F6                     system_init@F8583:
  2285                           	opt stack 0
  2286  0003F6                     	ds	9
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	bssBANK4
  2298  000468                     __pbssBANK4:
  2299                           	opt stack 0
  2300  000468                     _task_list:
  2301                           	opt stack 0
  2302  000468                     	ds	16
  2303  000478                     _ReceivedDataBuffer:
  2304                           	opt stack 0
  2305  000478                     	ds	64
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           postdec1	equ	0xFE5
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           
  2316                           	psect	dataBANK4
  2317  000400                     __pdataBANK4:
  2318                           	opt stack 0
  2319  000400                     system_init@F8587:
  2320                           	opt stack 0
  2321  000400                     	ds	104
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           postdec1	equ	0xFE5
  2329                           fsr1h	equ	0xFE2
  2330                           fsr1l	equ	0xFE1
  2331                           
  2332                           	psect	bssBIGRAMll
  2333  000800                     __pbssBIGRAMll:
  2334                           	opt stack 0
  2335  000800                     _buffer:
  2336                           	opt stack 0
  2337  000800                     	ds	512
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postdec1	equ	0xFE5
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           
  2348                           	psect	cstackBANK1
  2349  000100                     __pcstackBANK1:
  2350                           	opt stack 0
  2351  000100                     __display_charger@fan_off:
  2352                           	opt stack 0
  2353  000100                     __display_time@pts:
  2354                           	opt stack 0
  2355  000100                     system_init@appendtext:
  2356                           	opt stack 0
  2357                           
  2358                           ; 104 bytes @ 0x0
  2359  000100                     	ds	8
  2360  000108                     __display_charger@fan_on:
  2361                           	opt stack 0
  2362                           
  2363                           ; 7 bytes @ 0x8
  2364  000108                     	ds	7
  2365  00010F                     __display_charger@header:
  2366                           	opt stack 0
  2367                           
  2368                           ; 21 bytes @ 0xF
  2369  00010F                     	ds	5
  2370  000114                     __display_time@pressminutes:
  2371                           	opt stack 0
  2372                           
  2373                           ; 20 bytes @ 0x14
  2374  000114                     	ds	16
  2375  000124                     __display_charger@charger_async:
  2376                           	opt stack 0
  2377                           
  2378                           ; 21 bytes @ 0x24
  2379  000124                     	ds	4
  2380  000128                     __display_time@pressseconds:
  2381                           	opt stack 0
  2382                           
  2383                           ; 20 bytes @ 0x28
  2384  000128                     	ds	17
  2385  000139                     __display_charger@charger_sync:
  2386                           	opt stack 0
  2387                           
  2388                           ; 20 bytes @ 0x39
  2389  000139                     	ds	3
  2390  00013C                     __display_time@pressmonth:
  2391                           	opt stack 0
  2392                           
  2393                           ; 18 bytes @ 0x3C
  2394  00013C                     	ds	17
  2395  00014D                     __display_charger@supply_off:
  2396                           	opt stack 0
  2397                           
  2398                           ; 19 bytes @ 0x4D
  2399  00014D                     	ds	1
  2400  00014E                     __display_time@presshours:
  2401                           	opt stack 0
  2402                           
  2403                           ; 18 bytes @ 0x4E
  2404  00014E                     	ds	18
  2405  000160                     __display_time@pressday:
  2406                           	opt stack 0
  2407  000160                     __display_charger@supply_on:
  2408                           	opt stack 0
  2409                           
  2410                           ; 18 bytes @ 0x60
  2411  000160                     	ds	8
  2412  000168                     system_init@filename:
  2413                           	opt stack 0
  2414                           
  2415                           ; 9 bytes @ 0x68
  2416  000168                     	ds	8
  2417  000170                     __display_time@presssave:
  2418                           	opt stack 0
  2419                           
  2420                           ; 16 bytes @ 0x70
  2421  000170                     	ds	1
  2422  000171                     system_init@filename2:
  2423                           	opt stack 0
  2424                           
  2425                           ; 9 bytes @ 0x71
  2426  000171                     	ds	1
  2427  000172                     __display_charger@charger_startup:
  2428                           	opt stack 0
  2429                           
  2430                           ; 16 bytes @ 0x72
  2431  000172                     	ds	8
  2432  00017A                     system_init@extension:
  2433                           	opt stack 0
  2434                           
  2435                           ; 4 bytes @ 0x7A
  2436  00017A                     	ds	4
  2437  00017E                     system_init@extension2:
  2438                           	opt stack 0
  2439                           
  2440                           ; 4 bytes @ 0x7E
  2441  00017E                     	ds	2
  2442  000180                     __display_time@tad:
  2443                           	opt stack 0
  2444                           
  2445                           ; 14 bytes @ 0x80
  2446  000180                     	ds	2
  2447  000182                     __display_charger@charger_off:
  2448                           	opt stack 0
  2449                           
  2450                           ; 12 bytes @ 0x82
  2451  000182                     	ds	12
  2452  00018E                     __display_charger@cntr:
  2453                           	opt stack 0
  2454  00018E                     __display_time@setminutes:
  2455                           	opt stack 0
  2456                           
  2457                           ; 12 bytes @ 0x8E
  2458  00018E                     	ds	12
  2459  00019A                     __display_time@setseconds:
  2460                           	opt stack 0
  2461                           
  2462                           ; 12 bytes @ 0x9A
  2463  00019A                     	ds	12
  2464  0001A6                     __display_time@setmonth:
  2465                           	opt stack 0
  2466                           
  2467                           ; 10 bytes @ 0xA6
  2468  0001A6                     	ds	10
  2469  0001B0                     __display_time@sethours:
  2470                           	opt stack 0
  2471                           
  2472                           ; 10 bytes @ 0xB0
  2473  0001B0                     	ds	10
  2474  0001BA                     __display_time@setyear:
  2475                           	opt stack 0
  2476                           
  2477                           ; 9 bytes @ 0xBA
  2478  0001BA                     	ds	9
  2479  0001C3                     __display_time@setday:
  2480                           	opt stack 0
  2481                           
  2482                           ; 8 bytes @ 0xC3
  2483  0001C3                     	ds	8
  2484  0001CB                     __display_time@mode:
  2485                           	opt stack 0
  2486                           
  2487                           ; 1 bytes @ 0xCB
  2488  0001CB                     	ds	1
  2489  0001CC                     __display_time@year:
  2490                           	opt stack 0
  2491                           
  2492                           ; 1 bytes @ 0xCC
  2493  0001CC                     	ds	1
  2494  0001CD                     __display_time@month:
  2495                           	opt stack 0
  2496                           
  2497                           ; 1 bytes @ 0xCD
  2498  0001CD                     	ds	1
  2499  0001CE                     __display_time@day:
  2500                           	opt stack 0
  2501                           
  2502                           ; 1 bytes @ 0xCE
  2503  0001CE                     	ds	1
  2504  0001CF                     __display_time@hours:
  2505                           	opt stack 0
  2506                           
  2507                           ; 1 bytes @ 0xCF
  2508  0001CF                     	ds	1
  2509  0001D0                     __display_time@minutes:
  2510                           	opt stack 0
  2511                           
  2512                           ; 1 bytes @ 0xD0
  2513  0001D0                     	ds	1
  2514  0001D1                     __display_time@seconds:
  2515                           	opt stack 0
  2516                           
  2517                           ; 1 bytes @ 0xD1
  2518  0001D1                     	ds	1
  2519  0001D2                     __display_time@cntr:
  2520                           	opt stack 0
  2521                           
  2522                           ; 1 bytes @ 0xD2
  2523  0001D2                     	ds	1
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           
  2534                           	psect	cstackBANK0
  2535  000060                     __pcstackBANK0:
  2536                           	opt stack 0
  2537  000060                     ??_system_output_off:
  2538  000060                     ??__i2c_wait_idle:
  2539  000060                     ??__display_clear:
  2540  000060                     ??__number_of_days:
  2541  000060                     ??__buck_set_dutycycle:
  2542  000060                     ?_USBTransferOnePacket:
  2543                           	opt stack 0
  2544  000060                     ?_adc_read:
  2545                           	opt stack 0
  2546  000060                     ?_log_get_number_of_samples:
  2547                           	opt stack 0
  2548  000060                     ?_ExternalFlash_MediaInitialize:
  2549                           	opt stack 0
  2550  000060                     ?_ExternalFlash_SectorSizeRead:
  2551                           	opt stack 0
  2552  000060                     ?_strlen:
  2553                           	opt stack 0
  2554  000060                     ?_strncmp:
  2555                           	opt stack 0
  2556  000060                     ?__sector_from_cluster:
  2557                           	opt stack 0
  2558  000060                     ?___awdiv:
  2559                           	opt stack 0
  2560  000060                     ?___lwdiv:
  2561                           	opt stack 0
  2562  000060                     ?___lwmod:
  2563                           	opt stack 0
  2564  000060                     ?___ftpack:
  2565                           	opt stack 0
  2566  000060                     ?_ExternalFlash_CapacityRead:
  2567                           	opt stack 0
  2568  000060                     ?___lmul:
  2569                           	opt stack 0
  2570  000060                     ?___aldiv:
  2571                           	opt stack 0
  2572  000060                     ?___fttol:
  2573                           	opt stack 0
  2574  000060                     ?___lldiv:
  2575                           	opt stack 0
  2576  000060                     USBTransferOnePacket@dir:
  2577                           	opt stack 0
  2578  000060                     USBStallEndpoint@dir:
  2579                           	opt stack 0
  2580  000060                     system_output_is_on@output:
  2581                           	opt stack 0
  2582  000060                     system_output_on@output:
  2583                           	opt stack 0
  2584  000060                     __i2c_send@dat:
  2585                           	opt stack 0
  2586  000060                     i2c_set_frequency@frequency:
  2587                           	opt stack 0
  2588  000060                     get_next_eeprom_write_task@task:
  2589                           	opt stack 0
  2590  000060                     display_get_character@position:
  2591                           	opt stack 0
  2592  000060                     __rtcc_bdc_to_decimal@tens:
  2593                           	opt stack 0
  2594  000060                     rtcc_set_year@year:
  2595                           	opt stack 0
  2596  000060                     rtcc_set_month@month:
  2597                           	opt stack 0
  2598  000060                     rtcc_set_day@day:
  2599                           	opt stack 0
  2600  000060                     rtcc_set_hours@hours:
  2601                           	opt stack 0
  2602  000060                     rtcc_set_minutes@minutes:
  2603                           	opt stack 0
  2604  000060                     rtcc_set_seconds@seconds:
  2605                           	opt stack 0
  2606  000060                     __buck_prepare@cntr:
  2607                           	opt stack 0
  2608  000060                     buck_remote_set_enable@remote:
  2609                           	opt stack 0
  2610  000060                     buck_remote_set_on@on:
  2611                           	opt stack 0
  2612  000060                     buck_remote_set_synchronous@synchronous:
  2613                           	opt stack 0
  2614  000060                     buck_remote_set_dutycycle@dutycycle:
  2615                           	opt stack 0
  2616  000060                     buck_remote_change_dutycycle@change:
  2617                           	opt stack 0
  2618  000060                     buck_remote_get_status@retval:
  2619                           	opt stack 0
  2620  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2621                           	opt stack 0
  2622  000060                     SYSTEM_Initialize@pll_startup_counter:
  2623                           	opt stack 0
  2624  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2625                           	opt stack 0
  2626  000060                     __flash_spi_tx@data:
  2627                           	opt stack 0
  2628  000060                     __flash_spi_tx_tx@command:
  2629                           	opt stack 0
  2630  000060                     __flash_spi_tx_rx@command:
  2631                           	opt stack 0
  2632  000060                     ExternalFlash_MediaInitialize@config:
  2633                           	opt stack 0
  2634  000060                     ExternalFlash_SectorSizeRead@config:
  2635                           	opt stack 0
  2636  000060                     ExternalFlash_CapacityRead@config:
  2637                           	opt stack 0
  2638  000060                     ExternalFlash_MediaDetect@config:
  2639                           	opt stack 0
  2640  000060                     ExternalFlash_WriteProtectStateGet@config:
  2641                           	opt stack 0
  2642  000060                     __sector_from_cluster@fat_cluster:
  2643                           	opt stack 0
  2644  000060                     __get_checksum@log_entry:
  2645                           	opt stack 0
  2646  000060                     ___awdiv@dividend:
  2647                           	opt stack 0
  2648  000060                     ___lwdiv@dividend:
  2649                           	opt stack 0
  2650  000060                     ___lwmod@dividend:
  2651                           	opt stack 0
  2652  000060                     memcpy@d1:
  2653                           	opt stack 0
  2654  000060                     memset@p1:
  2655                           	opt stack 0
  2656  000060                     strlen@s:
  2657                           	opt stack 0
  2658  000060                     strncmp@s1:
  2659                           	opt stack 0
  2660  000060                     ___ftpack@arg:
  2661                           	opt stack 0
  2662  000060                     ___fttol@f1:
  2663                           	opt stack 0
  2664  000060                     ___lmul@multiplier:
  2665                           	opt stack 0
  2666  000060                     ___aldiv@dividend:
  2667                           	opt stack 0
  2668  000060                     ___lldiv@dividend:
  2669                           	opt stack 0
  2670  000060                     __display_usb@header:
  2671                           	opt stack 0
  2672  000060                     __display_outputs@line3:
  2673                           	opt stack 0
  2674                           
  2675                           ; 21 bytes @ 0x0
  2676  000060                     	ds	1
  2677  000061                     ??__fill_buffer_get_status:
  2678  000061                     ??_display_get_character:
  2679  000061                     ??_USBStallEndpoint:
  2680  000061                     system_output_off@output:
  2681                           	opt stack 0
  2682  000061                     schedule_eeprom_write_task@task:
  2683                           	opt stack 0
  2684  000061                     __rtcc_bdc_to_decimal@ones:
  2685                           	opt stack 0
  2686  000061                     __number_of_days@year:
  2687                           	opt stack 0
  2688  000061                     __buck_set_dutycycle@dutyCycle:
  2689                           	opt stack 0
  2690  000061                     USBTransferOnePacket@data:
  2691                           	opt stack 0
  2692  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2693                           	opt stack 0
  2694                           
  2695                           ; 2 bytes @ 0x1
  2696  000061                     	ds	1
  2697  000062                     ??_MSDComputeDeviceInAndResidue:
  2698  000062                     ??_strlen:
  2699  000062                     system_output_toggle@output:
  2700                           	opt stack 0
  2701  000062                     __i2c_eeprom_load_default_calibration@index:
  2702                           	opt stack 0
  2703  000062                     schedule_eeprom_write_task@idx:
  2704                           	opt stack 0
  2705  000062                     __display_clear@row:
  2706                           	opt stack 0
  2707  000062                     __rtcc_bdc_to_decimal@input:
  2708                           	opt stack 0
  2709  000062                     __number_of_days@bcd_year:
  2710                           	opt stack 0
  2711  000062                     __buck_set_sync_async@new_dutycycle:
  2712                           	opt stack 0
  2713  000062                     adc_read@channel:
  2714                           	opt stack 0
  2715  000062                     SYSTEM_Initialize@pll_startup_counter_3284:
  2716                           	opt stack 0
  2717  000062                     __flash_spi_tx@length:
  2718                           	opt stack 0
  2719  000062                     __flash_spi_tx_tx@command_length:
  2720                           	opt stack 0
  2721  000062                     __flash_spi_tx_rx@command_length:
  2722                           	opt stack 0
  2723  000062                     __get_checksum@byte_array:
  2724                           	opt stack 0
  2725  000062                     ___awdiv@divisor:
  2726                           	opt stack 0
  2727  000062                     ___lwdiv@divisor:
  2728                           	opt stack 0
  2729  000062                     ___lwmod@divisor:
  2730                           	opt stack 0
  2731  000062                     memcpy@s1:
  2732                           	opt stack 0
  2733  000062                     memset@c:
  2734                           	opt stack 0
  2735  000062                     strncmp@s2:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x2
  2739  000062                     	ds	1
  2740  000063                     USBTransferOnePacket@len:
  2741                           	opt stack 0
  2742  000063                     __parse_command_long@data:
  2743                           	opt stack 0
  2744  000063                     __parse_command_calibration@item:
  2745                           	opt stack 0
  2746  000063                     display_get_character@line:
  2747                           	opt stack 0
  2748  000063                     __display_clear@col:
  2749                           	opt stack 0
  2750  000063                     __number_of_days@month:
  2751                           	opt stack 0
  2752  000063                     rtcc_get_year_decimal@bcd_year:
  2753                           	opt stack 0
  2754  000063                     rtcc_get_month_decimal@bcd_month:
  2755                           	opt stack 0
  2756  000063                     rtcc_get_day_decimal@bcd_day:
  2757                           	opt stack 0
  2758  000063                     rtcc_get_hours_decimal@bcd_hours:
  2759                           	opt stack 0
  2760  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2761                           	opt stack 0
  2762  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2763                           	opt stack 0
  2764  000063                     __buck_set_sync_async@mode:
  2765                           	opt stack 0
  2766  000063                     ___ftpack@exp:
  2767                           	opt stack 0
  2768  000063                     adc_read@adc_value:
  2769                           	opt stack 0
  2770                           
  2771                           ; 2 bytes @ 0x3
  2772  000063                     	ds	1
  2773  000064                     ??_USBTransferOnePacket:
  2774  000064                     ??__fill_buffer_get_display1:
  2775  000064                     ??__fill_buffer_get_display2:
  2776  000064                     ??__flash_spi_tx:
  2777  000064                     ??___fttol:
  2778  000064                     ?__get_time:
  2779                           	opt stack 0
  2780  000064                     ?__get_date:
  2781                           	opt stack 0
  2782  000064                     ?__get_dateTime:
  2783                           	opt stack 0
  2784  000064                     SYSTEM_Initialize@state:
  2785                           	opt stack 0
  2786  000064                     __parse_command_long@cmd:
  2787                           	opt stack 0
  2788  000064                     __parse_command_calibration@dat1:
  2789                           	opt stack 0
  2790  000064                     __rtcc_increment_bcd@min:
  2791                           	opt stack 0
  2792  000064                     __rtcc_decrement_bcd@min:
  2793                           	opt stack 0
  2794  000064                     rtcc_correct_day@day:
  2795                           	opt stack 0
  2796  000064                     __get_checksum@checksum:
  2797                           	opt stack 0
  2798  000064                     ___awdiv@counter:
  2799                           	opt stack 0
  2800  000064                     ___ftpack@sign:
  2801                           	opt stack 0
  2802  000064                     ___lwmod@counter:
  2803                           	opt stack 0
  2804  000064                     __flash_spi_tx_tx@data:
  2805                           	opt stack 0
  2806  000064                     __flash_spi_tx_rx@data:
  2807                           	opt stack 0
  2808  000064                     ___lwdiv@quotient:
  2809                           	opt stack 0
  2810  000064                     memcpy@n:
  2811                           	opt stack 0
  2812  000064                     memset@n:
  2813                           	opt stack 0
  2814  000064                     strlen@cp:
  2815                           	opt stack 0
  2816  000064                     strncmp@len:
  2817                           	opt stack 0
  2818  000064                     ___lmul@multiplicand:
  2819                           	opt stack 0
  2820  000064                     ___aldiv@divisor:
  2821                           	opt stack 0
  2822  000064                     ___lldiv@divisor:
  2823                           	opt stack 0
  2824                           
  2825                           ; 4 bytes @ 0x4
  2826  000064                     	ds	1
  2827  000065                     ??___ftpack:
  2828  000065                     ?_i2c_adc_read:
  2829                           	opt stack 0
  2830  000065                     USBStallEndpoint@ep:
  2831                           	opt stack 0
  2832  000065                     __fill_buffer_get_display1@cntr:
  2833                           	opt stack 0
  2834  000065                     __fill_buffer_get_display2@cntr:
  2835                           	opt stack 0
  2836  000065                     __parse_command_calibration@dat2:
  2837                           	opt stack 0
  2838  000065                     __rtcc_increment_bcd@max:
  2839                           	opt stack 0
  2840  000065                     __rtcc_decrement_bcd@max:
  2841                           	opt stack 0
  2842  000065                     rtcc_correct_day@max:
  2843                           	opt stack 0
  2844  000065                     __get_checksum@cntr:
  2845                           	opt stack 0
  2846  000065                     ___awdiv@sign:
  2847                           	opt stack 0
  2848  000065                     __i2c_write@data:
  2849                           	opt stack 0
  2850  000065                     __i2c_read@data:
  2851                           	opt stack 0
  2852  000065                     i2c_display_write_fixed@data:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x5
  2856  000065                     	ds	1
  2857  000066                     ??_strncmp:
  2858  000066                     ??__rtcc_increment_bcd:
  2859  000066                     ??__rtcc_decrement_bcd:
  2860  000066                     ??__get_time:
  2861  000066                     ??__get_date:
  2862  000066                     __fill_buffer_get_display1@line:
  2863                           	opt stack 0
  2864  000066                     __fill_buffer_get_display2@line:
  2865                           	opt stack 0
  2866  000066                     __parse_command_calibration@dat3:
  2867                           	opt stack 0
  2868  000066                     ___lwdiv@counter:
  2869                           	opt stack 0
  2870  000066                     USBStallEndpoint@p:
  2871                           	opt stack 0
  2872  000066                     __flash_spi_tx_tx@data_length:
  2873                           	opt stack 0
  2874  000066                     __flash_spi_tx_rx@data_length:
  2875                           	opt stack 0
  2876  000066                     ___awdiv@quotient:
  2877                           	opt stack 0
  2878  000066                     memcpy@d:
  2879                           	opt stack 0
  2880  000066                     memset@p:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x6
  2884  000066                     	ds	1
  2885  000067                     ??_i2c_adc_read:
  2886  000067                     ??__parse_command_calibration:
  2887  000067                     __fill_buffer_get_display1@position:
  2888                           	opt stack 0
  2889  000067                     __fill_buffer_get_display2@position:
  2890                           	opt stack 0
  2891  000067                     __i2c_write@length:
  2892                           	opt stack 0
  2893  000067                     __i2c_read@length:
  2894                           	opt stack 0
  2895  000067                     i2c_display_write_fixed@length:
  2896                           	opt stack 0
  2897  000067                     __rtcc_increment_bcd@value:
  2898                           	opt stack 0
  2899  000067                     __rtcc_decrement_bcd@value:
  2900                           	opt stack 0
  2901  000067                     utoa@buf:
  2902                           	opt stack 0
  2903                           
  2904                           ; 2 bytes @ 0x7
  2905  000067                     	ds	1
  2906  000068                     ??__i2c_read:
  2907  000068                     ??__flash_spi_tx_tx:
  2908  000068                     ??__flash_spi_tx_rx:
  2909  000068                     ??__get_dateTime:
  2910  000068                     USBDeviceInit@i:
  2911                           	opt stack 0
  2912  000068                     USBTransferOnePacket@ep:
  2913                           	opt stack 0
  2914  000068                     MSDErrorHandler@ErrorCase:
  2915                           	opt stack 0
  2916  000068                     __i2c_write@slave_address:
  2917                           	opt stack 0
  2918  000068                     i2c_display_write_fixed@pos:
  2919                           	opt stack 0
  2920  000068                     rtcc_increment_year@year:
  2921                           	opt stack 0
  2922  000068                     rtcc_decrement_year@year:
  2923                           	opt stack 0
  2924  000068                     rtcc_increment_month@month:
  2925                           	opt stack 0
  2926  000068                     rtcc_decrement_month@month:
  2927                           	opt stack 0
  2928  000068                     rtcc_increment_day@day:
  2929                           	opt stack 0
  2930  000068                     rtcc_decrement_day@day:
  2931                           	opt stack 0
  2932  000068                     rtcc_increment_hours@hours:
  2933                           	opt stack 0
  2934  000068                     rtcc_decrement_hours@hours:
  2935                           	opt stack 0
  2936  000068                     rtcc_increment_minutes@minutes:
  2937                           	opt stack 0
  2938  000068                     rtcc_decrement_minutes@minutes:
  2939                           	opt stack 0
  2940  000068                     rtcc_increment_seconds@seconds:
  2941                           	opt stack 0
  2942  000068                     rtcc_decrement_seconds@seconds:
  2943                           	opt stack 0
  2944  000068                     __flash_wakeup@command:
  2945                           	opt stack 0
  2946  000068                     __get_time@hours:
  2947                           	opt stack 0
  2948  000068                     __get_date@year:
  2949                           	opt stack 0
  2950  000068                     ___aldiv@counter:
  2951                           	opt stack 0
  2952  000068                     i2c_adc_read@result:
  2953                           	opt stack 0
  2954  000068                     memcpy@s:
  2955                           	opt stack 0
  2956  000068                     ___lmul@product:
  2957                           	opt stack 0
  2958  000068                     ___lldiv@quotient:
  2959                           	opt stack 0
  2960                           
  2961                           ; 4 bytes @ 0x8
  2962  000068                     	ds	1
  2963  000069                     MSDErrorHandler@OldMSD_State:
  2964                           	opt stack 0
  2965  000069                     __i2c_write@cntr:
  2966                           	opt stack 0
  2967  000069                     __get_time@minutes:
  2968                           	opt stack 0
  2969  000069                     __get_date@month:
  2970                           	opt stack 0
  2971  000069                     ___aldiv@sign:
  2972                           	opt stack 0
  2973  000069                     ___fttol@sign1:
  2974                           	opt stack 0
  2975  000069                     USBTransferOnePacket@handle:
  2976                           	opt stack 0
  2977  000069                     __parse_command_calibration@parameter:
  2978                           	opt stack 0
  2979  000069                     utoa@val:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x9
  2983  000069                     	ds	1
  2984  00006A                     __ic2_display_set_address@address:
  2985                           	opt stack 0
  2986  00006A                     i2c_digipot_backlight@level:
  2987                           	opt stack 0
  2988  00006A                     i2c_adc_start@resolution:
  2989                           	opt stack 0
  2990  00006A                     __get_time@seconds:
  2991                           	opt stack 0
  2992  00006A                     __get_date@day:
  2993                           	opt stack 0
  2994  00006A                     memcpy@tmp:
  2995                           	opt stack 0
  2996  00006A                     i2c_digipot_reset_on@data_array:
  2997                           	opt stack 0
  2998  00006A                     i2c_digipot_reset_off@data_array:
  2999                           	opt stack 0
  3000  00006A                     i2c_eeprom_write@address:
  3001                           	opt stack 0
  3002  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3003                           	opt stack 0
  3004  00006A                     ___aldiv@quotient:
  3005                           	opt stack 0
  3006  00006A                     ___fttol@lval:
  3007                           	opt stack 0
  3008  00006A                     i2c_display_send_init_sequence@init_sequence:
  3009                           	opt stack 0
  3010                           
  3011                           ; 9 bytes @ 0xA
  3012  00006A                     	ds	1
  3013  00006B                     i2c_adc_start@gain:
  3014                           	opt stack 0
  3015  00006B                     __ic2_display_set_address@data_array:
  3016                           	opt stack 0
  3017  00006B                     i2c_digipot_backlight@data_array:
  3018                           	opt stack 0
  3019  00006B                     __get_time@time:
  3020                           	opt stack 0
  3021  00006B                     __get_date@date:
  3022                           	opt stack 0
  3023  00006B                     utoa@base:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0xB
  3027  00006B                     	ds	1
  3028  00006C                     ??_system_calculate_output_voltage:
  3029  00006C                     ??_system_calculate_input_voltage:
  3030  00006C                     ??_system_calculate_output_current:
  3031  00006C                     ??_system_calculate_input_current:
  3032  00006C                     ?_adc_calculate_temperature:
  3033                           	opt stack 0
  3034  00006C                     ?__flash_get_status:
  3035                           	opt stack 0
  3036  00006C                     i2c_adc_start@channel:
  3037                           	opt stack 0
  3038  00006C                     ___lldiv@counter:
  3039                           	opt stack 0
  3040  00006C                     i2c_eeprom_write@data:
  3041                           	opt stack 0
  3042  00006C                     adc_calculate_temperature@adc_value:
  3043                           	opt stack 0
  3044                           
  3045                           ; 2 bytes @ 0xC
  3046  00006C                     	ds	1
  3047  00006D                     ??__buck_initial_dutycycle:
  3048  00006D                     ?__get_output_power:
  3049                           	opt stack 0
  3050  00006D                     i2c_display_cursor@position:
  3051                           	opt stack 0
  3052  00006D                     i2c_adc_start@configuration_byte:
  3053                           	opt stack 0
  3054  00006D                     __update_modified_time@root:
  3055                           	opt stack 0
  3056  00006D                     utoa@v:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0xD
  3060  00006D                     	ds	1
  3061  00006E                     ?__get_input_power:
  3062                           	opt stack 0
  3063  00006E                     ?___altoft:
  3064                           	opt stack 0
  3065  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3066                           	opt stack 0
  3067  00006E                     i2c_display_cursor@line:
  3068                           	opt stack 0
  3069  00006E                     i2c_eeprom_write@length:
  3070                           	opt stack 0
  3071  00006E                     adc_calculate_temperature@calibration:
  3072                           	opt stack 0
  3073  00006E                     __flash_get_status@command:
  3074                           	opt stack 0
  3075  00006E                     __get_dateTime@year:
  3076                           	opt stack 0
  3077  00006E                     ___fttol@exp1:
  3078                           	opt stack 0
  3079  00006E                     __get_temperature@temperature:
  3080                           	opt stack 0
  3081  00006E                     __buck_initial_dutycycle@dc:
  3082                           	opt stack 0
  3083  00006E                     ___altoft@c:
  3084                           	opt stack 0
  3085                           
  3086                           ; 4 bytes @ 0xE
  3087  00006E                     	ds	1
  3088  00006F                     ??_adc_calculate_temperature:
  3089  00006F                     ??_i2c_eeprom_write:
  3090  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  3091                           	opt stack 0
  3092  00006F                     __i2c_read@slave_address:
  3093                           	opt stack 0
  3094  00006F                     i2c_display_cursor@address:
  3095                           	opt stack 0
  3096  00006F                     __get_dateTime@month:
  3097                           	opt stack 0
  3098  00006F                     utoa@c:
  3099                           	opt stack 0
  3100  00006F                     __flash_get_status@status:
  3101                           	opt stack 0
  3102  00006F                     __get_output_power@pwr:
  3103                           	opt stack 0
  3104                           
  3105                           ; 4 bytes @ 0xF
  3106  00006F                     	ds	1
  3107  000070                     MSDCheckForErrorCases@DeviceNoData:
  3108                           	opt stack 0
  3109  000070                     __i2c_read@cntr:
  3110                           	opt stack 0
  3111  000070                     __get_dateTime@day:
  3112                           	opt stack 0
  3113  000070                     itoa@buf:
  3114                           	opt stack 0
  3115  000070                     system_calculate_input_voltage@tmp:
  3116                           	opt stack 0
  3117  000070                     system_calculate_output_voltage@tmp:
  3118                           	opt stack 0
  3119  000070                     system_calculate_input_current@tmp:
  3120                           	opt stack 0
  3121  000070                     system_calculate_output_current@tmp:
  3122                           	opt stack 0
  3123  000070                     __get_input_power@pwr:
  3124                           	opt stack 0
  3125                           
  3126                           ; 4 bytes @ 0x10
  3127  000070                     	ds	1
  3128  000071                     __get_dateTime@hours:
  3129                           	opt stack 0
  3130  000071                     i2c_eeprom_read@address:
  3131                           	opt stack 0
  3132  000071                     flash_is_busy@status:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x11
  3136  000071                     	ds	1
  3137  000072                     ??___altoft:
  3138  000072                     __buck_start@dutycycle:
  3139                           	opt stack 0
  3140  000072                     __get_dateTime@minutes:
  3141                           	opt stack 0
  3142  000072                     itoa@val:
  3143                           	opt stack 0
  3144  000072                     i2c_eeprom_write@dat:
  3145                           	opt stack 0
  3146                           
  3147                           ; 17 bytes @ 0x12
  3148  000072                     	ds	1
  3149  000073                     __buck_start@mode:
  3150                           	opt stack 0
  3151  000073                     __get_dateTime@seconds:
  3152                           	opt stack 0
  3153  000073                     i2c_eeprom_read@data:
  3154                           	opt stack 0
  3155  000073                     __flash_copy_page_to_buffer@page:
  3156                           	opt stack 0
  3157  000073                     __flash_compare_page_to_buffer@page:
  3158                           	opt stack 0
  3159  000073                     __flash_write_to_buffer@start:
  3160                           	opt stack 0
  3161  000073                     __flash_write_page_from_buffer@page:
  3162                           	opt stack 0
  3163  000073                     flash_partial_read@page:
  3164                           	opt stack 0
  3165  000073                     __flash_set_page_size@command:
  3166                           	opt stack 0
  3167                           
  3168                           ; 4 bytes @ 0x13
  3169  000073                     	ds	1
  3170  000074                     ??_log_collect_data:
  3171  000074                     __buck_start@startup_dutycycle:
  3172                           	opt stack 0
  3173  000074                     itoa@base:
  3174                           	opt stack 0
  3175  000074                     __get_dateTime@datetime:
  3176                           	opt stack 0
  3177  000074                     __display_usb@usb_off:
  3178                           	opt stack 0
  3179                           
  3180                           ; 17 bytes @ 0x14
  3181  000074                     	ds	1
  3182  000075                     i2c_eeprom_read@length:
  3183                           	opt stack 0
  3184  000075                     __buck_start@cntr:
  3185                           	opt stack 0
  3186  000075                     __flash_copy_page_to_buffer@buffer:
  3187                           	opt stack 0
  3188  000075                     __flash_compare_page_to_buffer@buffer:
  3189                           	opt stack 0
  3190  000075                     __flash_write_page_from_buffer@buffer:
  3191                           	opt stack 0
  3192  000075                     __flash_write_to_buffer@data:
  3193                           	opt stack 0
  3194  000075                     flash_partial_read@start:
  3195                           	opt stack 0
  3196  000075                     adc_calculate_temperature@tmp:
  3197                           	opt stack 0
  3198  000075                     __display_outputs@line4:
  3199                           	opt stack 0
  3200                           
  3201                           ; 21 bytes @ 0x15
  3202  000075                     	ds	1
  3203  000076                     ??_i2c_eeprom_read:
  3204  000076                     ??__buck_operate_local:
  3205  000076                     ??__flash_copy_page_to_buffer:
  3206  000076                     ??__flash_compare_page_to_buffer:
  3207  000076                     ??__flash_write_page_from_buffer:
  3208  000076                     ___altoft@exp:
  3209                           	opt stack 0
  3210  000076                     __buck_operate_remote$8730:
  3211                           	opt stack 0
  3212  000076                     itoa@cp:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x16
  3216  000076                     	ds	1
  3217  000077                     i2c_eeprom_read@addr:
  3218                           	opt stack 0
  3219  000077                     __flash_set_page_size@size:
  3220                           	opt stack 0
  3221  000077                     ___altoft@sign:
  3222                           	opt stack 0
  3223  000077                     __flash_write_to_buffer@data_length:
  3224                           	opt stack 0
  3225  000077                     flash_partial_read@length:
  3226                           	opt stack 0
  3227                           
  3228                           ; 2 bytes @ 0x17
  3229  000077                     	ds	1
  3230  000078                     i2c_eeprom_read@slave_address:
  3231                           	opt stack 0
  3232  000078                     __display_itoa@value:
  3233                           	opt stack 0
  3234  000078                     log_collect_data@temp:
  3235                           	opt stack 0
  3236  000078                     log_generate_entry@log_entry:
  3237                           	opt stack 0
  3238                           
  3239                           ; 2 bytes @ 0x18
  3240  000078                     	ds	1
  3241  000079                     ??_i2c_eeprom_read_calibration:
  3242  000079                     __flash_write_to_buffer@buffer:
  3243                           	opt stack 0
  3244  000079                     __flash_compare_page_to_buffer@status:
  3245                           	opt stack 0
  3246  000079                     flash_partial_read@data:
  3247                           	opt stack 0
  3248  000079                     __flash_copy_page_to_buffer@command:
  3249                           	opt stack 0
  3250  000079                     __flash_write_page_from_buffer@command:
  3251                           	opt stack 0
  3252  000079                     rtcc_read_eeprom@date:
  3253                           	opt stack 0
  3254                           
  3255                           ; 6 bytes @ 0x19
  3256  000079                     	ds	1
  3257  00007A                     ??_log_generate_entry:
  3258  00007A                     __display_itoa@decimals:
  3259                           	opt stack 0
  3260  00007A                     __flash_write_to_buffer@command:
  3261                           	opt stack 0
  3262                           
  3263                           ; 4 bytes @ 0x1A
  3264  00007A                     	ds	1
  3265  00007B                     ??_flash_partial_read:
  3266  00007B                     __buck_operate_local$8729:
  3267                           	opt stack 0
  3268  00007B                     __display_itoa@text:
  3269                           	opt stack 0
  3270  00007B                     i2c_eeprom_read_calibration@buffer:
  3271                           	opt stack 0
  3272  00007B                     __flash_compare_page_to_buffer@command:
  3273                           	opt stack 0
  3274                           
  3275                           ; 4 bytes @ 0x1B
  3276  00007B                     	ds	1
  3277  00007C                     __buck_operate_local@tmp_dutycycle:
  3278                           	opt stack 0
  3279                           
  3280                           ; 1 bytes @ 0x1C
  3281  00007C                     	ds	1
  3282  00007D                     ??__display_itoa:
  3283  00007D                     __buck_operate_local@cntr:
  3284                           	opt stack 0
  3285                           
  3286                           ; 1 bytes @ 0x1D
  3287  00007D                     	ds	1
  3288  00007E                     
  3289                           ; 1 bytes @ 0x1E
  3290  00007E                     	ds	1
  3291  00007F                     i2c_eeprom_read_calibration@addr:
  3292                           	opt stack 0
  3293  00007F                     flash_page_write@page:
  3294                           	opt stack 0
  3295  00007F                     flash_partial_write@page:
  3296                           	opt stack 0
  3297  00007F                     flash_partial_read@command:
  3298                           	opt stack 0
  3299                           
  3300                           ; 4 bytes @ 0x1F
  3301  00007F                     	ds	2
  3302  000081                     i2c_eeprom_read_calibration@cntr:
  3303                           	opt stack 0
  3304  000081                     flash_page_write@data:
  3305                           	opt stack 0
  3306  000081                     flash_partial_write@start:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x21
  3310  000081                     	ds	1
  3311  000082                     
  3312                           ; 1 bytes @ 0x22
  3313  000082                     	ds	1
  3314  000083                     i2c_eeprom_write@slave_address:
  3315                           	opt stack 0
  3316  000083                     flash_page_write@match:
  3317                           	opt stack 0
  3318  000083                     flash_partial_write@length:
  3319                           	opt stack 0
  3320  000083                     flash_partial_read@address:
  3321                           	opt stack 0
  3322  000083                     __display_itoa@tmp:
  3323                           	opt stack 0
  3324                           
  3325                           ; 10 bytes @ 0x23
  3326  000083                     	ds	1
  3327  000084                     i2c_eeprom_write@cntr:
  3328                           	opt stack 0
  3329  000084                     ExternalFlash_SectorWrite@config:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x24
  3333  000084                     	ds	1
  3334  000085                     ??__write_calibration:
  3335  000085                     flash_partial_write@data:
  3336                           	opt stack 0
  3337  000085                     rtcc_write_eeprom@date:
  3338                           	opt stack 0
  3339  000085                     __display_usb@low:
  3340                           	opt stack 0
  3341                           
  3342                           ; 16 bytes @ 0x25
  3343  000085                     	ds	1
  3344  000086                     ExternalFlash_SectorWrite@sector_addr:
  3345                           	opt stack 0
  3346                           
  3347                           ; 4 bytes @ 0x26
  3348  000086                     	ds	1
  3349  000087                     ??__root_is_available:
  3350  000087                     ?__get_empty_cluster:
  3351                           	opt stack 0
  3352  000087                     ?_fat_get_empty_clusters:
  3353                           	opt stack 0
  3354  000087                     ?__read_fat:
  3355                           	opt stack 0
  3356  000087                     flash_partial_write@match:
  3357                           	opt stack 0
  3358  000087                     flash_page_read@page:
  3359                           	opt stack 0
  3360  000087                     __get_empty_cluster@first_cluster:
  3361                           	opt stack 0
  3362  000087                     fat_get_empty_clusters@maximum:
  3363                           	opt stack 0
  3364  000087                     __read_fat@cluster:
  3365                           	opt stack 0
  3366  000087                     __read_root@data:
  3367                           	opt stack 0
  3368  000087                     fat_find_file@name:
  3369                           	opt stack 0
  3370  000087                     __write_calibration@buffer:
  3371                           	opt stack 0
  3372                           
  3373                           ; 16 bytes @ 0x27
  3374  000087                     	ds	1
  3375  000088                     __root_is_available@root_sector:
  3376                           	opt stack 0
  3377  000088                     __write_fat@cluster:
  3378                           	opt stack 0
  3379  000088                     __write_root@data:
  3380                           	opt stack 0
  3381                           
  3382                           ; 2 bytes @ 0x28
  3383  000088                     	ds	1
  3384  000089                     ??__read_root:
  3385  000089                     flash_page_read@data:
  3386                           	opt stack 0
  3387  000089                     __get_empty_cluster@fat_sector:
  3388                           	opt stack 0
  3389  000089                     fat_get_empty_clusters@fat_sector:
  3390                           	opt stack 0
  3391  000089                     __read_fat@fat_sector:
  3392                           	opt stack 0
  3393  000089                     fat_find_file@extension:
  3394                           	opt stack 0
  3395                           
  3396                           ; 2 bytes @ 0x29
  3397  000089                     	ds	1
  3398  00008A                     ??__write_root:
  3399  00008A                     ExternalFlash_SectorWrite@buffer:
  3400                           	opt stack 0
  3401  00008A                     __root_is_available@offset:
  3402                           	opt stack 0
  3403  00008A                     __write_fat@value:
  3404                           	opt stack 0
  3405  00008A                     __read_root@root_sector:
  3406                           	opt stack 0
  3407  00008A                     __display_outputs@low:
  3408                           	opt stack 0
  3409                           
  3410                           ; 16 bytes @ 0x2A
  3411  00008A                     	ds	1
  3412  00008B                     __parse_command_short@cmd:
  3413                           	opt stack 0
  3414  00008B                     ExternalFlash_SectorRead@config:
  3415                           	opt stack 0
  3416  00008B                     __get_empty_cluster@offset:
  3417                           	opt stack 0
  3418  00008B                     fat_get_empty_clusters@offset:
  3419                           	opt stack 0
  3420  00008B                     __read_fat@offset:
  3421                           	opt stack 0
  3422  00008B                     __write_root@root_sector:
  3423                           	opt stack 0
  3424  00008B                     fat_find_file@buffer:
  3425                           	opt stack 0
  3426                           
  3427                           ; 11 bytes @ 0x2B
  3428  00008B                     	ds	1
  3429  00008C                     ??_APP_DeviceCustomHIDTasks:
  3430  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3431                           	opt stack 0
  3432  00008C                     __root_is_available@file_number:
  3433                           	opt stack 0
  3434  00008C                     __write_fat@fat_sector:
  3435                           	opt stack 0
  3436  00008C                     __read_root@offset:
  3437                           	opt stack 0
  3438                           
  3439                           ; 2 bytes @ 0x2C
  3440  00008C                     	ds	1
  3441  00008D                     __display_itoa@len:
  3442                           	opt stack 0
  3443  00008D                     __root_is_available@first_byte:
  3444                           	opt stack 0
  3445  00008D                     ExternalFlash_SectorWrite@page:
  3446                           	opt stack 0
  3447  00008D                     __get_empty_cluster@value:
  3448                           	opt stack 0
  3449  00008D                     fat_get_empty_clusters@value:
  3450                           	opt stack 0
  3451  00008D                     __read_fat@value:
  3452                           	opt stack 0
  3453  00008D                     __write_root@offset:
  3454                           	opt stack 0
  3455  00008D                     ExternalFlash_SectorRead@sector_addr:
  3456                           	opt stack 0
  3457                           
  3458                           ; 4 bytes @ 0x2D
  3459  00008D                     	ds	1
  3460  00008E                     __display_itoa@missing:
  3461                           	opt stack 0
  3462  00008E                     __get_available_root_entry@file_number:
  3463                           	opt stack 0
  3464  00008E                     __read_root@slot:
  3465                           	opt stack 0
  3466  00008E                     __write_fat@offset:
  3467                           	opt stack 0
  3468                           
  3469                           ; 2 bytes @ 0x2E
  3470  00008E                     	ds	1
  3471  00008F                     ??_MSDWriteHandler:
  3472  00008F                     __display_itoa@pos:
  3473                           	opt stack 0
  3474  00008F                     __write_root@slot:
  3475                           	opt stack 0
  3476  00008F                     __get_empty_cluster@cluster:
  3477                           	opt stack 0
  3478  00008F                     fat_get_empty_clusters@empty_clusters:
  3479                           	opt stack 0
  3480                           
  3481                           ; 2 bytes @ 0x2F
  3482  00008F                     	ds	1
  3483  000090                     ??__display_charger:
  3484  000090                     ??__display_efficiency:
  3485  000090                     __display_inout@line1:
  3486                           	opt stack 0
  3487  000090                     __display_temperature@header:
  3488                           	opt stack 0
  3489                           
  3490                           ; 20 bytes @ 0x30
  3491  000090                     	ds	1
  3492  000091                     ExternalFlash_SectorRead@buffer:
  3493                           	opt stack 0
  3494  000091                     fat_get_empty_clusters@cluster:
  3495                           	opt stack 0
  3496  000091                     fat_append_to_file@number_of_bytes:
  3497                           	opt stack 0
  3498                           
  3499                           ; 2 bytes @ 0x31
  3500  000091                     	ds	1
  3501  000092                     __display_efficiency@header:
  3502                           	opt stack 0
  3503                           
  3504                           ; 19 bytes @ 0x32
  3505  000092                     	ds	1
  3506  000093                     ExternalFlash_SectorRead@page:
  3507                           	opt stack 0
  3508  000093                     fat_append_to_file@data:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x33
  3512  000093                     	ds	1
  3513  000094                     APP_DeviceCustomHIDTasks@return_value:
  3514                           	opt stack 0
  3515                           
  3516                           ; 2 bytes @ 0x34
  3517  000094                     	ds	1
  3518  000095                     ??_MSDReadHandler:
  3519  000095                     ??_fat_append_to_file:
  3520  000095                     __display_usb@usb_on:
  3521                           	opt stack 0
  3522                           
  3523                           ; 16 bytes @ 0x35
  3524  000095                     	ds	1
  3525  000096                     APP_DeviceCustomHIDTasks@idx:
  3526                           	opt stack 0
  3527  000096                     fat_find_file@slot:
  3528                           	opt stack 0
  3529                           
  3530                           ; 1 bytes @ 0x36
  3531  000096                     	ds	1
  3532  000097                     __write_calibration@addr:
  3533                           	opt stack 0
  3534  000097                     fat_find_file@sector:
  3535                           	opt stack 0
  3536                           
  3537                           ; 2 bytes @ 0x37
  3538  000097                     	ds	2
  3539  000099                     ??_MSDProcessCommandMediaPresent:
  3540  000099                     __write_calibration@ptr:
  3541                           	opt stack 0
  3542  000099                     fat_find_file@offset:
  3543                           	opt stack 0
  3544                           
  3545                           ; 2 bytes @ 0x39
  3546  000099                     	ds	1
  3547  00009A                     __display_outputs@header:
  3548                           	opt stack 0
  3549                           
  3550                           ; 14 bytes @ 0x3A
  3551  00009A                     	ds	1
  3552  00009B                     __write_calibration@index:
  3553                           	opt stack 0
  3554  00009B                     _MSDProcessCommandMediaPresent$2712:
  3555                           	opt stack 0
  3556  00009B                     fat_create_file@name:
  3557                           	opt stack 0
  3558                           
  3559                           ; 2 bytes @ 0x3B
  3560  00009B                     	ds	1
  3561  00009C                     __write_calibration@cntr:
  3562                           	opt stack 0
  3563                           
  3564                           ; 1 bytes @ 0x3C
  3565  00009C                     	ds	1
  3566  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3567                           	opt stack 0
  3568  00009D                     fat_create_file@extension:
  3569                           	opt stack 0
  3570  00009D                     fat_append_to_file@sector:
  3571                           	opt stack 0
  3572                           
  3573                           ; 2 bytes @ 0x3D
  3574  00009D                     	ds	1
  3575  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3576                           	opt stack 0
  3577                           
  3578                           ; 4 bytes @ 0x3E
  3579  00009E                     	ds	1
  3580  00009F                     fat_create_file@size:
  3581                           	opt stack 0
  3582  00009F                     fat_append_to_file@file_size:
  3583                           	opt stack 0
  3584                           
  3585                           ; 4 bytes @ 0x3F
  3586  00009F                     	ds	3
  3587  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3588                           	opt stack 0
  3589  0000A2                     __display_inout@line2:
  3590                           	opt stack 0
  3591                           
  3592                           ; 18 bytes @ 0x42
  3593  0000A2                     	ds	1
  3594  0000A3                     ??_fat_create_file:
  3595  0000A3                     fat_append_to_file@new_cluster:
  3596                           	opt stack 0
  3597                           
  3598                           ; 2 bytes @ 0x43
  3599  0000A3                     	ds	1
  3600  0000A4                     __display_temperature@external1:
  3601                           	opt stack 0
  3602                           
  3603                           ; 12 bytes @ 0x44
  3604  0000A4                     	ds	1
  3605  0000A5                     __display_usb@cntr:
  3606                           	opt stack 0
  3607  0000A5                     fat_append_to_file@fat_cluster:
  3608                           	opt stack 0
  3609  0000A5                     __display_efficiency@source:
  3610                           	opt stack 0
  3611                           
  3612                           ; 19 bytes @ 0x45
  3613  0000A5                     	ds	1
  3614  0000A6                     MSDProcessCommandMediaPresent@i:
  3615                           	opt stack 0
  3616                           
  3617                           ; 1 bytes @ 0x46
  3618  0000A6                     	ds	1
  3619  0000A7                     ??_MSDProcessCommand:
  3620  0000A7                     fat_create_file@next_cluster:
  3621                           	opt stack 0
  3622  0000A7                     fat_append_to_file@offset:
  3623                           	opt stack 0
  3624                           
  3625                           ; 2 bytes @ 0x47
  3626  0000A7                     	ds	1
  3627  0000A8                     __display_outputs@mode:
  3628                           	opt stack 0
  3629                           
  3630                           ; 1 bytes @ 0x48
  3631  0000A8                     	ds	1
  3632  0000A9                     __display_outputs@cntr:
  3633                           	opt stack 0
  3634  0000A9                     fat_append_to_file@file_number:
  3635                           	opt stack 0
  3636  0000A9                     fat_create_file@cluster_count:
  3637                           	opt stack 0
  3638                           
  3639                           ; 2 bytes @ 0x49
  3640  0000A9                     	ds	1
  3641  0000AA                     fat_append_to_file@length:
  3642                           	opt stack 0
  3643                           
  3644                           ; 2 bytes @ 0x4A
  3645  0000AA                     	ds	1
  3646  0000AB                     fat_create_file@root_slot:
  3647                           	opt stack 0
  3648                           
  3649                           ; 1 bytes @ 0x4B
  3650  0000AB                     	ds	1
  3651  0000AC                     ??_MSDTasks:
  3652  0000AC                     fat_create_file@number_of_clusters:
  3653                           	opt stack 0
  3654  0000AC                     fat_append_to_file@position:
  3655                           	opt stack 0
  3656                           
  3657                           ; 4 bytes @ 0x4C
  3658  0000AC                     	ds	1
  3659  0000AD                     _MSDTasks$2694:
  3660                           	opt stack 0
  3661                           
  3662                           ; 2 bytes @ 0x4D
  3663  0000AD                     	ds	1
  3664  0000AE                     fat_create_file@cluster:
  3665                           	opt stack 0
  3666                           
  3667                           ; 2 bytes @ 0x4E
  3668  0000AE                     	ds	1
  3669  0000AF                     _MSDTasks$2695:
  3670                           	opt stack 0
  3671                           
  3672                           ; 2 bytes @ 0x4F
  3673  0000AF                     	ds	1
  3674  0000B0                     __display_temperature@external2:
  3675                           	opt stack 0
  3676  0000B0                     fat_create_file@root_entry:
  3677                           	opt stack 0
  3678  0000B0                     fat_append_to_file@root:
  3679                           	opt stack 0
  3680                           
  3681                           ; 32 bytes @ 0x50
  3682  0000B0                     	ds	1
  3683  0000B1                     MSDTasks@i:
  3684                           	opt stack 0
  3685                           
  3686                           ; 1 bytes @ 0x51
  3687  0000B1                     	ds	1
  3688  0000B2                     
  3689                           ; 1 bytes @ 0x52
  3690  0000B2                     	ds	2
  3691  0000B4                     __display_inout@line4:
  3692                           	opt stack 0
  3693                           
  3694                           ; 14 bytes @ 0x54
  3695  0000B4                     	ds	4
  3696  0000B8                     __display_efficiency@footer:
  3697                           	opt stack 0
  3698                           
  3699                           ; 14 bytes @ 0x58
  3700  0000B8                     	ds	4
  3701  0000BC                     __display_temperature@internal:
  3702                           	opt stack 0
  3703                           
  3704                           ; 11 bytes @ 0x5C
  3705  0000BC                     	ds	6
  3706  0000C2                     __display_inout@line3:
  3707                           	opt stack 0
  3708                           
  3709                           ; 3 bytes @ 0x62
  3710  0000C2                     	ds	3
  3711  0000C5                     __display_inout@cntr:
  3712                           	opt stack 0
  3713                           
  3714                           ; 1 bytes @ 0x65
  3715  0000C5                     	ds	1
  3716  0000C6                     __display_efficiency@efficiency:
  3717                           	opt stack 0
  3718                           
  3719                           ; 3 bytes @ 0x66
  3720  0000C6                     	ds	1
  3721  0000C7                     __display_temperature@cntr:
  3722                           	opt stack 0
  3723                           
  3724                           ; 1 bytes @ 0x67
  3725  0000C7                     	ds	2
  3726  0000C9                     __display_efficiency@panel:
  3727                           	opt stack 0
  3728                           
  3729                           ; 4 bytes @ 0x69
  3730  0000C9                     	ds	4
  3731  0000CD                     __display_efficiency@battery:
  3732                           	opt stack 0
  3733                           
  3734                           ; 4 bytes @ 0x6D
  3735  0000CD                     	ds	3
  3736  0000D0                     log_write_to_disk@file_number:
  3737                           	opt stack 0
  3738                           
  3739                           ; 1 bytes @ 0x70
  3740  0000D0                     	ds	1
  3741  0000D1                     __display_efficiency@cntr:
  3742                           	opt stack 0
  3743  0000D1                     log_write_to_disk@log_entry:
  3744                           	opt stack 0
  3745                           
  3746                           ; 32 bytes @ 0x71
  3747  0000D1                     	ds	1
  3748  0000D2                     ??_display_prepare:
  3749                           
  3750                           ; 1 bytes @ 0x72
  3751  0000D2                     	ds	2
  3752  0000D4                     display_prepare@mode:
  3753                           	opt stack 0
  3754                           
  3755                           ; 1 bytes @ 0x74
  3756  0000D4                     	ds	29
  3757  0000F1                     ??_main:
  3758                           
  3759                           ; 1 bytes @ 0x91
  3760  0000F1                     	ds	2
  3761                           tblptru	equ	0xFF8
  3762                           tblptrh	equ	0xFF7
  3763                           tblptrl	equ	0xFF6
  3764                           tablat	equ	0xFF5
  3765                           postinc0	equ	0xFEE
  3766                           wreg	equ	0xFE8
  3767                           postdec1	equ	0xFE5
  3768                           fsr1h	equ	0xFE2
  3769                           fsr1l	equ	0xFE1
  3770                           
  3771                           	psect	cstackCOMRAM
  3772  000001                     __pcstackCOMRAM:
  3773                           	opt stack 0
  3774  000001                     ??_USBStdGetDscHandler:
  3775  000001                     ??_USBStdGetStatusHandler:
  3776  000001                     ?i2_USBTransferOnePacket:
  3777                           	opt stack 0
  3778  000001                     ?i2_ExternalFlash_MediaInitialize:
  3779                           	opt stack 0
  3780  000001                     USBConfigureEndpoint@direction:
  3781                           	opt stack 0
  3782  000001                     USBCtrlTrfTxService@byteToSend:
  3783                           	opt stack 0
  3784  000001                     USBCtrlTrfRxService@i:
  3785                           	opt stack 0
  3786  000001                     i2USBTransferOnePacket@dir:
  3787                           	opt stack 0
  3788  000001                     i2USBStallEndpoint@dir:
  3789                           	opt stack 0
  3790  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  3791                           	opt stack 0
  3792  000001                     i2ExternalFlash_MediaInitialize@config:
  3793                           	opt stack 0
  3794  000001                     i2ExternalFlash_MediaDetect@config:
  3795                           	opt stack 0
  3796  000001                     i2memcpy@d1:
  3797                           	opt stack 0
  3798  000001                     i2memset@p1:
  3799                           	opt stack 0
  3800                           
  3801                           ; 2 bytes @ 0x0
  3802  000001                     	ds	1
  3803  000002                     ??_USBConfigureEndpoint:
  3804  000002                     ??i2_USBStallEndpoint:
  3805  000002                     USBCtrlTrfRxService@byteToRead:
  3806                           	opt stack 0
  3807  000002                     USBCtrlTrfInHandler@lastDTS:
  3808                           	opt stack 0
  3809  000002                     USBStdGetStatusHandler@p:
  3810                           	opt stack 0
  3811  000002                     i2USBTransferOnePacket@data:
  3812                           	opt stack 0
  3813                           
  3814                           ; 2 bytes @ 0x1
  3815  000002                     	ds	1
  3816  000003                     i2SYSTEM_Initialize@pll_startup_counter_3284:
  3817                           	opt stack 0
  3818  000003                     i2memcpy@s1:
  3819                           	opt stack 0
  3820  000003                     i2memset@c:
  3821                           	opt stack 0
  3822                           
  3823                           ; 2 bytes @ 0x2
  3824  000003                     	ds	1
  3825  000004                     i2USBTransferOnePacket@len:
  3826                           	opt stack 0
  3827                           
  3828                           ; 1 bytes @ 0x3
  3829  000004                     	ds	1
  3830  000005                     ??i2_USBTransferOnePacket:
  3831  000005                     i2SYSTEM_Initialize@state:
  3832                           	opt stack 0
  3833  000005                     i2memcpy@n:
  3834                           	opt stack 0
  3835  000005                     i2memset@n:
  3836                           	opt stack 0
  3837                           
  3838                           ; 2 bytes @ 0x4
  3839  000005                     	ds	1
  3840  000006                     USBConfigureEndpoint@EPNum:
  3841                           	opt stack 0
  3842  000006                     i2USBStallEndpoint@ep:
  3843                           	opt stack 0
  3844                           
  3845                           ; 1 bytes @ 0x5
  3846  000006                     	ds	1
  3847  000007                     USBConfigureEndpoint@handle:
  3848                           	opt stack 0
  3849  000007                     i2USBStallEndpoint@p:
  3850                           	opt stack 0
  3851  000007                     i2memcpy@d:
  3852                           	opt stack 0
  3853  000007                     i2memset@p:
  3854                           	opt stack 0
  3855                           
  3856                           ; 2 bytes @ 0x6
  3857  000007                     	ds	2
  3858  000009                     USBEnableEndpoint@options:
  3859                           	opt stack 0
  3860  000009                     i2USBDeviceInit@i:
  3861                           	opt stack 0
  3862  000009                     i2USBTransferOnePacket@ep:
  3863                           	opt stack 0
  3864  000009                     i2memcpy@s:
  3865                           	opt stack 0
  3866                           
  3867                           ; 2 bytes @ 0x8
  3868  000009                     	ds	1
  3869  00000A                     USBEnableEndpoint@p:
  3870                           	opt stack 0
  3871  00000A                     i2USBTransferOnePacket@handle:
  3872                           	opt stack 0
  3873                           
  3874                           ; 2 bytes @ 0x9
  3875  00000A                     	ds	1
  3876  00000B                     i2memcpy@tmp:
  3877                           	opt stack 0
  3878                           
  3879                           ; 1 bytes @ 0xA
  3880  00000B                     	ds	1
  3881  00000C                     ??_USBMSDInit:
  3882  00000C                     USBEnableEndpoint@ep:
  3883                           	opt stack 0
  3884  00000C                     _USBCheckMSDRequest$2640:
  3885                           	opt stack 0
  3886  00000C                     MSDTransferTerminated@handle:
  3887                           	opt stack 0
  3888                           
  3889                           ; 2 bytes @ 0xB
  3890  00000C                     	ds	1
  3891  00000D                     
  3892                           ; 1 bytes @ 0xC
  3893  00000D                     	ds	1
  3894  00000E                     _USBCheckMSDRequest$2641:
  3895                           	opt stack 0
  3896  00000E                     _MSDTransferTerminated$2729:
  3897                           	opt stack 0
  3898                           
  3899                           ; 2 bytes @ 0xD
  3900  00000E                     	ds	1
  3901  00000F                     
  3902                           ; 1 bytes @ 0xE
  3903  00000F                     	ds	1
  3904  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3905                           	opt stack 0
  3906                           
  3907                           ; 2 bytes @ 0xF
  3908  000010                     	ds	2
  3909  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3910                           	opt stack 0
  3911                           
  3912                           ; 2 bytes @ 0x11
  3913  000012                     	ds	2
  3914  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3915                           	opt stack 0
  3916                           
  3917                           ; 2 bytes @ 0x13
  3918  000014                     	ds	2
  3919  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3920                           
  3921                           ; 1 bytes @ 0x15
  3922  000016                     	ds	2
  3923  000018                     ??_USBStdFeatureReqHandler:
  3924  000018                     USBStdSetCfgHandler@i:
  3925                           	opt stack 0
  3926                           
  3927                           ; 1 bytes @ 0x17
  3928  000018                     	ds	1
  3929  000019                     USBStdFeatureReqHandler@pUEP:
  3930                           	opt stack 0
  3931                           
  3932                           ; 2 bytes @ 0x18
  3933  000019                     	ds	2
  3934  00001B                     USBStdFeatureReqHandler@current_ep_data:
  3935                           	opt stack 0
  3936                           
  3937                           ; 1 bytes @ 0x1A
  3938  00001B                     	ds	1
  3939  00001C                     USBStdFeatureReqHandler@p:
  3940                           	opt stack 0
  3941                           
  3942                           ; 2 bytes @ 0x1B
  3943  00001C                     	ds	2
  3944  00001E                     ??_USBCtrlEPService:
  3945  00001E                     
  3946                           ; 1 bytes @ 0x1D
  3947  00001E                     	ds	1
  3948  00001F                     USBDeviceTasks@i:
  3949                           	opt stack 0
  3950                           
  3951                           ; 1 bytes @ 0x1E
  3952  00001F                     	ds	1
  3953  000020                     ??_SYS_InterruptHigh:
  3954                           
  3955                           ; 1 bytes @ 0x1F
  3956  000020                     	ds	18
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           postinc0	equ	0xFEE
  3962                           wreg	equ	0xFE8
  3963                           postdec1	equ	0xFE5
  3964                           fsr1h	equ	0xFE2
  3965                           fsr1l	equ	0xFE1
  3966                           
  3967 ;;
  3968 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3969 ;;
  3970 ;; *************** function _main *****************
  3971 ;; Defined at:
  3972 ;;		line 50 in file "main.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;Total ram usage:        2 bytes
  3991 ;; Hardware stack levels required when called:   22
  3992 ;; This function calls:
  3993 ;;		_APP_DeviceCustomHIDTasks
  3994 ;;		_APP_DeviceMSDTasks
  3995 ;;		_SYSTEM_Initialize
  3996 ;;		_USBDeviceAttach
  3997 ;;		_USBDeviceInit
  3998 ;;		_adc_calculate_temperature
  3999 ;;		_adc_calibrate
  4000 ;;		_adc_read
  4001 ;;		_buck_get_mode
  4002 ;;		_buck_operate
  4003 ;;		_display_prepare
  4004 ;;		_display_update
  4005 ;;		_i2c_adc_read
  4006 ;;		_i2c_adc_start
  4007 ;;		_i2c_eeprom_tasks
  4008 ;;		_log_collect_data
  4009 ;;		_log_get_number_of_samples
  4010 ;;		_log_start_new
  4011 ;;		_log_write_to_disk
  4012 ;;		_system_calculate_input_current
  4013 ;;		_system_calculate_input_voltage
  4014 ;;		_system_calculate_output_current
  4015 ;;		_system_calculate_output_voltage
  4016 ;;		_system_init
  4017 ;;		_system_output_off
  4018 ;;		_ui_get_status
  4019 ;;		_ui_run
  4020 ;; This function is called by:
  4021 ;;		Startup code after reset
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text0
  4026  00B470                     __ptext0:
  4027                           	opt stack 0
  4028  00B470                     _main:
  4029                           	opt stack 9
  4030                           
  4031                           ;main.c: 55: system_init();
  4032                           
  4033                           ;incstack = 0
  4034  00B470  EC62  F074         	call	_system_init	;wreg free
  4035                           
  4036                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4037  00B474  0E00               	movlw	0
  4038  00B476  EC8B  F08C         	call	_SYSTEM_Initialize
  4039                           
  4040                           ;main.c: 59: USBDeviceInit();
  4041  00B47A  EC2D  F06B         	call	_USBDeviceInit	;wreg free
  4042                           
  4043                           ;main.c: 60: USBDeviceAttach();
  4044  00B47E  EC4E  F092         	call	_USBDeviceAttach	;wreg free
  4045  00B482                     
  4046                           ;main.c: 63: {
  4047                           ;main.c: 86: APP_DeviceMSDTasks();
  4048  00B482  EC44  F096         	call	_APP_DeviceMSDTasks	;wreg free
  4049                           
  4050                           ;main.c: 88: if(!os.done)
  4051  00B486  0102               	movlb	2	; () banked
  4052  00B488  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4053  00B48A  A4D8               	btfss	status,2,c
  4054  00B48C  D7FA               	goto	l899
  4055                           
  4056                           ; BSR set to: 2
  4057                           ;main.c: 89: {
  4058                           ;main.c: 93: if(os.output_voltage<12000)
  4059  00B48E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4060  00B490  D006               	goto	u15460
  4061  00B492  0EE0               	movlw	224
  4062  00B494  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4063  00B496  0E2E               	movlw	46
  4064  00B498  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4065  00B49A  B0D8               	btfsc	status,0,c
  4066  00B49C  D003               	goto	l901
  4067  00B49E                     u15460:
  4068                           
  4069                           ; BSR set to: 2
  4070                           ;main.c: 94: {
  4071                           ;main.c: 95: system_output_off(OUTPUT_USB);
  4072  00B49E  0E10               	movlw	16
  4073  00B4A0  EC3E  F08D         	call	_system_output_off
  4074  00B4A4                     l901:
  4075                           
  4076                           ;main.c: 96: }
  4077                           ;main.c: 97: if(os.output_voltage<-1)
  4078  00B4A4  0102               	movlb	2	; () banked
  4079  00B4A6  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4080  00B4A8  D011               	goto	l902
  4081  00B4AA  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4082  00B4AC  0EFF               	movlw	255
  4083  00B4AE  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4084  00B4B0  B0D8               	btfsc	status,0,c
  4085  00B4B2  D00C               	goto	l902
  4086                           
  4087                           ; BSR set to: 2
  4088                           ;main.c: 98: {
  4089                           ;main.c: 99: system_output_off(OUTPUT_1);
  4090  00B4B4  0E01               	movlw	1
  4091  00B4B6  EC3E  F08D         	call	_system_output_off
  4092                           
  4093                           ;main.c: 100: system_output_off(OUTPUT_2);
  4094  00B4BA  0E02               	movlw	2
  4095  00B4BC  EC3E  F08D         	call	_system_output_off
  4096                           
  4097                           ;main.c: 101: system_output_off(OUTPUT_3);
  4098  00B4C0  0E04               	movlw	4
  4099  00B4C2  EC3E  F08D         	call	_system_output_off
  4100                           
  4101                           ;main.c: 102: system_output_off(OUTPUT_4);
  4102  00B4C6  0E08               	movlw	8
  4103  00B4C8  EC3E  F08D         	call	_system_output_off
  4104  00B4CC                     l902:
  4105                           
  4106                           ;main.c: 103: }
  4107                           ;main.c: 106: i2c_eeprom_tasks();
  4108  00B4CC  ECD7  F087         	call	_i2c_eeprom_tasks	;wreg free
  4109                           
  4110                           ;main.c: 109: ui_run();
  4111  00B4D0  ECE4  F074         	call	_ui_run	;wreg free
  4112                           
  4113                           ;main.c: 112: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4114  00B4D4  0E00               	movlw	0
  4115  00B4D6  ECE0  F083         	call	_adc_read
  4116  00B4DA  0100               	movlb	0	; () banked
  4117  00B4DC  5160               	movf	?_adc_read& (0+255),w,b
  4118  00B4DE  0102               	movlb	2	; () banked
  4119  00B4E0  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4120  00B4E2  0100               	movlb	0	; () banked
  4121  00B4E4  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4122  00B4E6  0102               	movlb	2	; () banked
  4123  00B4E8  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4124                           
  4125                           ;main.c: 113: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4126  00B4EA  0E01               	movlw	1
  4127  00B4EC  ECE0  F083         	call	_adc_read
  4128  00B4F0  0100               	movlb	0	; () banked
  4129  00B4F2  5160               	movf	?_adc_read& (0+255),w,b
  4130  00B4F4  0102               	movlb	2	; () banked
  4131  00B4F6  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4132  00B4F8  0100               	movlb	0	; () banked
  4133  00B4FA  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4134  00B4FC  0102               	movlb	2	; () banked
  4135  00B4FE  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4136                           
  4137                           ;main.c: 114: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4138  00B500  0E02               	movlw	2
  4139  00B502  ECE0  F083         	call	_adc_read
  4140  00B506  0100               	movlb	0	; () banked
  4141  00B508  5160               	movf	?_adc_read& (0+255),w,b
  4142  00B50A  0102               	movlb	2	; () banked
  4143  00B50C  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4144  00B50E  0100               	movlb	0	; () banked
  4145  00B510  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4146  00B512  0102               	movlb	2	; () banked
  4147  00B514  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4148                           
  4149                           ;main.c: 117: switch(os.timeSlot&0b00001111)
  4150  00B516  D101               	goto	l903
  4151  00B518                     
  4152                           ;main.c: 120: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4153                           
  4154                           ; BSR set to: 2
  4155  00B518  0E01               	movlw	1
  4156  00B51A  0100               	movlb	0	; () banked
  4157  00B51C  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4158  00B51E  0E00               	movlw	0
  4159  00B520  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4160  00B522  0E00               	movlw	0
  4161  00B524  EC78  F091         	call	_i2c_adc_start
  4162                           
  4163                           ;main.c: 121: break;
  4164  00B528  D12A               	goto	l905
  4165  00B52A                     
  4166                           ;main.c: 124: APP_DeviceCustomHIDTasks();
  4167  00B52A  ECE6  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4168                           
  4169                           ;main.c: 128: break;
  4170  00B52E  D127               	goto	l905
  4171  00B530                     
  4172                           ;main.c: 132: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4173  00B530  EC11  F08E         	call	_i2c_adc_read	;wreg free
  4174  00B534  0102               	movlb	2	; () banked
  4175  00B536  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4176  00B538  0B0F               	andlw	15
  4177  00B53A  0B03               	andlw	3
  4178  00B53C  0100               	movlb	0	; () banked
  4179  00B53E  6FF1               	movwf	??_main& (0+255),b
  4180  00B540  6BF2               	clrf	(??_main+1)& (0+255),b
  4181  00B542  90D8               	bcf	status,0,c
  4182  00B544  37F1               	rlcf	??_main& (0+255),f,b
  4183  00B546  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4184  00B548  0E1F               	movlw	low (_os+31)
  4185  00B54A  25F1               	addwf	??_main& (0+255),w,b
  4186  00B54C  6ED9               	movwf	fsr2l,c
  4187  00B54E  0E02               	movlw	high (_os+31)
  4188  00B550  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4189  00B552  6EDA               	movwf	fsr2h,c
  4190  00B554  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4191  00B558  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;main.c: 133: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4195  00B55C  0E01               	movlw	1
  4196  00B55E  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4197  00B560  0E00               	movlw	0
  4198  00B562  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4199  00B564  0E03               	movlw	3
  4200  00B566  EC78  F091         	call	_i2c_adc_start
  4201                           
  4202                           ;main.c: 134: system_calculate_output_voltage();
  4203  00B56A  EC3B  F079         	call	_system_calculate_output_voltage	;wreg free
  4204                           
  4205                           ;main.c: 135: break;
  4206  00B56E  D107               	goto	l905
  4207  00B570                     
  4208                           ;main.c: 138: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4209  00B570  EC02  F097         	call	_ui_get_status	;wreg free
  4210  00B574  0A05               	xorlw	5
  4211  00B576  A4D8               	btfss	status,2,c
  4212  00B578  D102               	goto	l905
  4213                           
  4214                           ;main.c: 139: {
  4215                           ;main.c: 140: display_prepare(os.display_mode);
  4216  00B57A  0102               	movlb	2	; () banked
  4217  00B57C  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4218  00B57E  EC2A  F085         	call	_display_prepare
  4219                           
  4220                           ;main.c: 141: }
  4221                           ;main.c: 142: break;
  4222  00B582  D0FD               	goto	l905
  4223  00B584                     
  4224                           ;main.c: 145: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4225  00B584  EC02  F097         	call	_ui_get_status	;wreg free
  4226                           
  4227                           ;main.c: 148: }
  4228                           ;main.c: 149: break;
  4229                           
  4230                           ;main.c: 146: {
  4231  00B588  D0FA               	goto	l905
  4232  00B58A                     
  4233                           ;main.c: 152: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4234  00B58A  EC11  F08E         	call	_i2c_adc_read	;wreg free
  4235  00B58E  0102               	movlb	2	; () banked
  4236  00B590  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4237  00B592  0B0F               	andlw	15
  4238  00B594  0B03               	andlw	3
  4239  00B596  0100               	movlb	0	; () banked
  4240  00B598  6FF1               	movwf	??_main& (0+255),b
  4241  00B59A  6BF2               	clrf	(??_main+1)& (0+255),b
  4242  00B59C  90D8               	bcf	status,0,c
  4243  00B59E  37F1               	rlcf	??_main& (0+255),f,b
  4244  00B5A0  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4245  00B5A2  0E0A               	movlw	low (_os+10)
  4246  00B5A4  25F1               	addwf	??_main& (0+255),w,b
  4247  00B5A6  6ED9               	movwf	fsr2l,c
  4248  00B5A8  0E02               	movlw	high (_os+10)
  4249  00B5AA  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4250  00B5AC  6EDA               	movwf	fsr2h,c
  4251  00B5AE  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4252  00B5B2  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4253                           
  4254                           ;main.c: 154: {
  4255                           ;main.c: 155: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4256                           
  4257                           ; BSR set to: 0
  4258                           
  4259                           ;main.c: 153: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4260  00B5B6  0E01               	movlw	1
  4261  00B5B8  0100               	movlb	0	; () banked
  4262  00B5BA  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4263  00B5BC  0E00               	movlw	0
  4264  00B5BE  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4265  00B5C0  0E01               	movlw	1
  4266  00B5C2  EC78  F091         	call	_i2c_adc_start
  4267                           
  4268                           ;main.c: 156: }
  4269                           ;main.c: 157: system_calculate_input_voltage();
  4270  00B5C6  ECAC  F079         	call	_system_calculate_input_voltage	;wreg free
  4271                           
  4272                           ;main.c: 158: break;
  4273  00B5CA  D0D9               	goto	l905
  4274  00B5CC                     
  4275                           ;main.c: 161: APP_DeviceCustomHIDTasks();
  4276  00B5CC  ECE6  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4277                           
  4278                           ;main.c: 162: break;
  4279  00B5D0  D0D6               	goto	l905
  4280  00B5D2                     u15500:
  4281                           
  4282                           ;main.c: 166: {
  4283                           ;main.c: 167: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4284  00B5D2  EC11  F08E         	call	_i2c_adc_read	;wreg free
  4285  00B5D6  0102               	movlb	2	; () banked
  4286  00B5D8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4287  00B5DA  0B0F               	andlw	15
  4288  00B5DC  0B03               	andlw	3
  4289  00B5DE  0100               	movlb	0	; () banked
  4290  00B5E0  6FF1               	movwf	??_main& (0+255),b
  4291  00B5E2  6BF2               	clrf	(??_main+1)& (0+255),b
  4292  00B5E4  90D8               	bcf	status,0,c
  4293  00B5E6  37F1               	rlcf	??_main& (0+255),f,b
  4294  00B5E8  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4295  00B5EA  0E29               	movlw	low (_os+41)
  4296  00B5EC  25F1               	addwf	??_main& (0+255),w,b
  4297  00B5EE  6ED9               	movwf	fsr2l,c
  4298  00B5F0  0E02               	movlw	high (_os+41)
  4299  00B5F2  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4300  00B5F4  6EDA               	movwf	fsr2h,c
  4301  00B5F6  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4302  00B5FA  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;main.c: 168: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4306  00B5FE  0E01               	movlw	1
  4307  00B600  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4308  00B602  0E00               	movlw	0
  4309  00B604  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4310  00B606  0E02               	movlw	2
  4311  00B608  EC78  F091         	call	_i2c_adc_start
  4312                           
  4313                           ;main.c: 169: system_calculate_output_current();
  4314  00B60C  EC88  F06F         	call	_system_calculate_output_current	;wreg free
  4315                           
  4316                           ;main.c: 170: }
  4317                           ;main.c: 171: break;
  4318  00B610  D0B6               	goto	l905
  4319  00B612                     
  4320                           ;main.c: 174: APP_DeviceCustomHIDTasks();
  4321  00B612  ECE6  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4322                           
  4323                           ;main.c: 175: log_collect_data();
  4324  00B616  ECB2  F05E         	call	_log_collect_data	;wreg free
  4325                           
  4326                           ;main.c: 176: if(log_get_number_of_samples() == 30)
  4327  00B61A  ECD9  F096         	call	_log_get_number_of_samples	;wreg free
  4328  00B61E  0E1E               	movlw	30
  4329  00B620  0100               	movlb	0	; () banked
  4330  00B622  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4331  00B624  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4332  00B626  A4D8               	btfss	status,2,c
  4333  00B628  D0AA               	goto	l905
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;main.c: 177: {
  4337                           ;main.c: 178: log_write_to_disk();
  4338  00B62A  EC7E  F088         	call	_log_write_to_disk	;wreg free
  4339                           
  4340                           ;main.c: 179: log_start_new();
  4341  00B62E  EC6E  F07B         	call	_log_start_new	;wreg free
  4342                           
  4343                           ;main.c: 180: }
  4344                           ;main.c: 181: break;
  4345  00B632  D0A5               	goto	l905
  4346  00B634                     u15520:
  4347                           
  4348                           ;main.c: 185: {
  4349                           ;main.c: 186: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4350  00B634  EC11  F08E         	call	_i2c_adc_read	;wreg free
  4351  00B638  0102               	movlb	2	; () banked
  4352  00B63A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4353  00B63C  0B0F               	andlw	15
  4354  00B63E  0B03               	andlw	3
  4355  00B640  0100               	movlb	0	; () banked
  4356  00B642  6FF1               	movwf	??_main& (0+255),b
  4357  00B644  6BF2               	clrf	(??_main+1)& (0+255),b
  4358  00B646  90D8               	bcf	status,0,c
  4359  00B648  37F1               	rlcf	??_main& (0+255),f,b
  4360  00B64A  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4361  00B64C  0E14               	movlw	low (_os+20)
  4362  00B64E  25F1               	addwf	??_main& (0+255),w,b
  4363  00B650  6ED9               	movwf	fsr2l,c
  4364  00B652  0E02               	movlw	high (_os+20)
  4365  00B654  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4366  00B656  6EDA               	movwf	fsr2h,c
  4367  00B658  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4368  00B65C  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4369                           
  4370                           ;main.c: 187: system_calculate_input_current();
  4371  00B660  EC1A  F070         	call	_system_calculate_input_current	;wreg free
  4372                           
  4373                           ;main.c: 188: }
  4374                           ;main.c: 189: break;
  4375  00B664  D08C               	goto	l905
  4376  00B666                     
  4377                           ;main.c: 192: buck_operate();
  4378  00B666  ECD5  F08B         	call	_buck_operate	;wreg free
  4379                           
  4380                           ;main.c: 193: break;
  4381  00B66A  D089               	goto	l905
  4382  00B66C                     
  4383                           ;main.c: 197: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4384  00B66C  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4385  00B670  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4386  00B674  0E04               	movlw	4
  4387  00B676  0100               	movlb	0	; () banked
  4388  00B678  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4389  00B67A  EC5E  F077         	call	_adc_calculate_temperature	;wreg free
  4390  00B67E  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4391  00B682  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4392                           
  4393                           ;main.c: 198: os.temperature_onboard_adc = 0;
  4394  00B686  0E00               	movlw	0
  4395  00B688  0102               	movlb	2	; () banked
  4396  00B68A  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4397  00B68C  0E00               	movlw	0
  4398  00B68E  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4399                           
  4400                           ; BSR set to: 2
  4401                           ;main.c: 199: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4402  00B690  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4403  00B694  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4404  00B698  0E05               	movlw	5
  4405  00B69A  0100               	movlb	0	; () banked
  4406  00B69C  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4407  00B69E  EC5E  F077         	call	_adc_calculate_temperature	;wreg free
  4408  00B6A2  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4409  00B6A6  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4410                           
  4411                           ;main.c: 200: os.temperature_external_1_adc = 0;
  4412  00B6AA  0E00               	movlw	0
  4413  00B6AC  0102               	movlb	2	; () banked
  4414  00B6AE  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4415  00B6B0  0E00               	movlw	0
  4416  00B6B2  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4417                           
  4418                           ; BSR set to: 2
  4419                           ;main.c: 201: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4420  00B6B4  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4421  00B6B8  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4422  00B6BC  0E06               	movlw	6
  4423  00B6BE  0100               	movlb	0	; () banked
  4424  00B6C0  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4425  00B6C2  EC5E  F077         	call	_adc_calculate_temperature	;wreg free
  4426  00B6C6  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4427  00B6CA  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4428                           
  4429                           ;main.c: 202: os.temperature_external_2_adc = 0;
  4430  00B6CE  0E00               	movlw	0
  4431  00B6D0  0102               	movlb	2	; () banked
  4432  00B6D2  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4433  00B6D4  0E00               	movlw	0
  4434  00B6D6  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4435                           
  4436                           ; BSR set to: 2
  4437                           ;main.c: 203: adc_calibrate();
  4438  00B6D8  ECCD  F096         	call	_adc_calibrate	;wreg free
  4439                           
  4440                           ;main.c: 205: if(os.temperature_onboard>3000)
  4441  00B6DC  0102               	movlb	2	; () banked
  4442  00B6DE  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4443  00B6E0  D008               	goto	l929
  4444  00B6E2  0EB9               	movlw	185
  4445  00B6E4  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4446  00B6E6  0E0B               	movlw	11
  4447  00B6E8  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4448  00B6EA  A0D8               	btfss	status,0,c
  4449  00B6EC  D002               	goto	l929
  4450                           
  4451                           ; BSR set to: 2
  4452                           ;main.c: 206: {
  4453                           ;main.c: 207: LATDbits.LD1 = 1;
  4454  00B6EE  828C               	bsf	3980,1,c	;volatile
  4455                           
  4456                           ;main.c: 208: }
  4457  00B6F0  D008               	goto	l931
  4458  00B6F2                     l929:
  4459                           
  4460                           ; BSR set to: 2
  4461                           ;main.c: 209: else if(os.temperature_onboard<2500)
  4462                           
  4463                           ; BSR set to: 2
  4464  00B6F2  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4465  00B6F4  D005               	goto	u15540
  4466  00B6F6  0EC4               	movlw	196
  4467  00B6F8  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4468  00B6FA  0E09               	movlw	9
  4469  00B6FC  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4470  00B6FE  A0D8               	btfss	status,0,c
  4471  00B700                     u15540:
  4472                           
  4473                           ; BSR set to: 2
  4474                           ;main.c: 210: {
  4475                           ;main.c: 211: LATDbits.LD1 = 0;
  4476  00B700  928C               	bcf	3980,1,c	;volatile
  4477  00B702                     l931:
  4478                           
  4479                           ; BSR set to: 2
  4480                           ;main.c: 212: }
  4481                           ;main.c: 213: display_prepare(os.display_mode);
  4482                           
  4483                           ; BSR set to: 2
  4484                           
  4485                           ; BSR set to: 2
  4486  00B702  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4487  00B704  EC2A  F085         	call	_display_prepare
  4488                           
  4489                           ;main.c: 214: break;
  4490  00B708  D03A               	goto	l905
  4491  00B70A                     
  4492                           ;main.c: 217: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4493  00B70A  EC02  F097         	call	_ui_get_status	;wreg free
  4494  00B70E  0A05               	xorlw	5
  4495  00B710  A4D8               	btfss	status,2,c
  4496  00B712  D035               	goto	l905
  4497                           
  4498                           ;main.c: 218: {
  4499                           ;main.c: 219: display_update();
  4500  00B714  ECE5  F086         	call	_display_update	;wreg free
  4501                           
  4502                           ;main.c: 222: }
  4503                           
  4504                           ;main.c: 220: }
  4505                           ;main.c: 221: break;
  4506  00B718  D032               	goto	l905
  4507  00B71A                     l903:
  4508  00B71A  0102               	movlb	2	; () banked
  4509  00B71C  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4510  00B71E  0B0F               	andlw	15
  4511  00B720  0100               	movlb	0	; () banked
  4512  00B722  6FF1               	movwf	??_main& (0+255),b
  4513  00B724  6BF2               	clrf	(??_main+1)& (0+255),b
  4514                           
  4515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4516                           ; Switch size 1, requested type "space"
  4517                           ; Number of cases is 1, Range of values is 0 to 0
  4518                           ; switch strategies available:
  4519                           ; Name         Instructions Cycles
  4520                           ; simple_byte            4     3 (average)
  4521                           ;	Chosen strategy is simple_byte
  4522  00B726  51F2               	movf	(??_main+1)& (0+255),w,b
  4523  00B728  0A00               	xorlw	0	; case 0
  4524  00B72A  A4D8               	btfss	status,2,c
  4525  00B72C  D028               	goto	l905
  4526                           
  4527                           ; BSR set to: 0
  4528                           ; Switch size 1, requested type "space"
  4529                           ; Number of cases is 13, Range of values is 0 to 15
  4530                           ; switch strategies available:
  4531                           ; Name         Instructions Cycles
  4532                           ; simple_byte           40    21 (average)
  4533                           ;	Chosen strategy is simple_byte
  4534  00B72E  51F1               	movf	??_main& (0+255),w,b
  4535  00B730  0A00               	xorlw	0	; case 0
  4536  00B732  B4D8               	btfsc	status,2,c
  4537  00B734  D6F1               	goto	l904
  4538  00B736  0A01               	xorlw	1	; case 1
  4539  00B738  B4D8               	btfsc	status,2,c
  4540  00B73A  D6F7               	goto	l906
  4541  00B73C  0A02               	xorlw	2	; case 3
  4542  00B73E  B4D8               	btfsc	status,2,c
  4543  00B740  D6F7               	goto	l907
  4544  00B742  0A07               	xorlw	7	; case 4
  4545  00B744  B4D8               	btfsc	status,2,c
  4546  00B746  D714               	goto	l908
  4547  00B748  0A01               	xorlw	1	; case 5
  4548  00B74A  B4D8               	btfsc	status,2,c
  4549  00B74C  D71B               	goto	l910
  4550  00B74E  0A03               	xorlw	3	; case 6
  4551  00B750  B4D8               	btfsc	status,2,c
  4552  00B752  D71B               	goto	l912
  4553  00B754  0A0E               	xorlw	14	; case 8
  4554  00B756  B4D8               	btfsc	status,2,c
  4555  00B758  D739               	goto	l916
  4556  00B75A  0A01               	xorlw	1	; case 9
  4557  00B75C  B4D8               	btfsc	status,2,c
  4558  00B75E  D739               	goto	u15500
  4559  00B760  0A02               	xorlw	2	; case 11
  4560  00B762  B4D8               	btfsc	status,2,c
  4561  00B764  D756               	goto	l921
  4562  00B766  0A07               	xorlw	7	; case 12
  4563  00B768  B4D8               	btfsc	status,2,c
  4564  00B76A  D764               	goto	u15520
  4565  00B76C  0A01               	xorlw	1	; case 13
  4566  00B76E  B4D8               	btfsc	status,2,c
  4567  00B770  D77A               	goto	l927
  4568  00B772  0A03               	xorlw	3	; case 14
  4569  00B774  B4D8               	btfsc	status,2,c
  4570  00B776  D77A               	goto	l928
  4571  00B778  0A01               	xorlw	1	; case 15
  4572  00B77A  B4D8               	btfsc	status,2,c
  4573  00B77C  D7C6               	goto	l932
  4574  00B77E                     l905:
  4575                           
  4576                           ;main.c: 223: os.done = 1;
  4577                           
  4578                           ; BSR set to: 0
  4579  00B77E  0E01               	movlw	1
  4580  00B780  0102               	movlb	2	; () banked
  4581  00B782  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4582                           
  4583                           ; BSR set to: 2
  4584                           
  4585                           ; BSR set to: 2
  4586  00B784  D67E               	goto	l899
  4587  00B786                     __end_of_main:
  4588                           	opt stack 0
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           postdec1	equ	0xFE5
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _ui_run *****************
  4605 ;; Defined at:
  4606 ;;		line 334 in file "ui.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:   15
  4627 ;; This function calls:
  4628 ;;		__ui_encoder
  4629 ;;		_i2c_digipot_backlight
  4630 ;;		_i2c_digipot_reset_off
  4631 ;;		_i2c_digipot_reset_on
  4632 ;;		_i2c_display_send_init_sequence
  4633 ;;		_system_encoder_disable
  4634 ;;		_system_encoder_enable
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text1
  4641  00E9C8                     __ptext1:
  4642                           	opt stack 0
  4643  00E9C8                     _ui_run:
  4644                           	opt stack 15
  4645                           
  4646                           ;ui.c: 336: switch(userInterfaceStatus)
  4647                           
  4648                           ; BSR set to: 2
  4649                           ;incstack = 0
  4650  00E9C8  D06B               	goto	l1843
  4651  00E9CA                     
  4652                           ;ui.c: 339: if (os.buttonCount!=0)
  4653  00E9CA  0102               	movlb	2	; () banked
  4654  00E9CC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4655  00E9CE  B4D8               	btfsc	status,2,c
  4656  00E9D0  0012               	return	
  4657                           
  4658                           ; BSR set to: 2
  4659                           ;ui.c: 340: {
  4660                           ;ui.c: 342: LATCbits.LC2 = 1;
  4661  00E9D2  848B               	bsf	3979,2,c	;volatile
  4662                           
  4663                           ; BSR set to: 2
  4664                           ;ui.c: 343: os.buttonCount = 0;
  4665  00E9D4  0E00               	movlw	0
  4666  00E9D6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4667                           
  4668                           ;ui.c: 345: system_ui_inactive_count = 0;
  4669  00E9D8  0E00               	movlw	0
  4670  00E9DA  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4671  00E9DC  0E00               	movlw	0
  4672  00E9DE  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4673                           
  4674                           ;ui.c: 346: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4675  00E9E0  0E01               	movlw	1
  4676  00E9E2  0101               	movlb	1	; () banked
  4677  00E9E4  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;ui.c: 347: }
  4681                           ;ui.c: 348: break;
  4682  00E9E6  0012               	return	
  4683  00E9E8                     l1847:
  4684                           
  4685                           ; BSR set to: 1
  4686                           ;ui.c: 357: LATDbits.LD0 = 0;
  4687  00E9E8  908C               	bcf	3980,0,c	;volatile
  4688                           
  4689                           ; BSR set to: 1
  4690                           ;ui.c: 359: system_ui_inactive_count = 0;
  4691  00E9EA  0E00               	movlw	0
  4692  00E9EC  0102               	movlb	2	; () banked
  4693  00E9EE  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4694  00E9F0  0E00               	movlw	0
  4695  00E9F2  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4696                           
  4697                           ;ui.c: 360: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4698  00E9F4  0E02               	movlw	2
  4699  00E9F6  0101               	movlb	1	; () banked
  4700  00E9F8  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4701                           
  4702                           ;ui.c: 361: break;
  4703  00E9FA  0012               	return	
  4704  00E9FC                     
  4705                           ; BSR set to: 1
  4706                           ;ui.c: 365: i2c_digipot_reset_on();
  4707                           
  4708                           ; BSR set to: 1
  4709  00E9FC  ECE5  F093         	call	_i2c_digipot_reset_on	;wreg free
  4710                           
  4711                           ;ui.c: 367: system_ui_inactive_count = 0;
  4712  00EA00  0E00               	movlw	0
  4713  00EA02  0102               	movlb	2	; () banked
  4714  00EA04  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4715  00EA06  0E00               	movlw	0
  4716  00EA08  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4717                           
  4718                           ; BSR set to: 2
  4719                           ;ui.c: 368: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4720  00EA0A  0E03               	movlw	3
  4721  00EA0C  0101               	movlb	1	; () banked
  4722  00EA0E  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4723                           
  4724                           ;ui.c: 369: break;
  4725  00EA10  0012               	return	
  4726  00EA12                     
  4727                           ; BSR set to: 1
  4728                           ;ui.c: 372: ++system_ui_inactive_count;
  4729                           
  4730                           ; BSR set to: 1
  4731  00EA12  0102               	movlb	2	; () banked
  4732  00EA14  4BB2               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4733  00EA16  2BB3               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4734                           
  4735                           ; BSR set to: 2
  4736                           ;ui.c: 374: if (system_ui_inactive_count>3)
  4737  00EA18  51B3               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4738  00EA1A  E104               	bnz	u14830
  4739  00EA1C  0E04               	movlw	4
  4740  00EA1E  5DB2               	subwf	_system_ui_inactive_count& (0+255),w,b
  4741  00EA20  A0D8               	btfss	status,0,c
  4742  00EA22  0012               	return	
  4743  00EA24                     u14830:
  4744                           
  4745                           ; BSR set to: 2
  4746                           ;ui.c: 375: {
  4747                           ;ui.c: 376: i2c_digipot_reset_off();
  4748  00EA24  ECF8  F093         	call	_i2c_digipot_reset_off	;wreg free
  4749                           
  4750                           ;ui.c: 377: system_ui_inactive_count = 0;
  4751  00EA28  0E00               	movlw	0
  4752  00EA2A  0102               	movlb	2	; () banked
  4753  00EA2C  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4754  00EA2E  0E00               	movlw	0
  4755  00EA30  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4756                           
  4757                           ; BSR set to: 2
  4758                           ;ui.c: 378: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4759  00EA32  0E04               	movlw	4
  4760  00EA34  0101               	movlb	1	; () banked
  4761  00EA36  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4762                           
  4763                           ; BSR set to: 1
  4764                           ;ui.c: 379: }
  4765                           ;ui.c: 380: break;
  4766  00EA38  0012               	return	
  4767  00EA3A                     
  4768                           ; BSR set to: 1
  4769                           ;ui.c: 384: i2c_display_send_init_sequence();
  4770                           
  4771                           ; BSR set to: 1
  4772  00EA3A  ECAF  F092         	call	_i2c_display_send_init_sequence	;wreg free
  4773                           
  4774                           ;ui.c: 386: i2c_digipot_backlight(150);
  4775  00EA3E  0E96               	movlw	150
  4776  00EA40  EC39  F093         	call	_i2c_digipot_backlight
  4777                           
  4778                           ;ui.c: 388: system_encoder_enable();
  4779  00EA44  EC4D  F096         	call	_system_encoder_enable	;wreg free
  4780                           
  4781                           ;ui.c: 390: system_ui_inactive_count = 0;
  4782  00EA48  0E00               	movlw	0
  4783  00EA4A  0102               	movlb	2	; () banked
  4784  00EA4C  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4785  00EA4E  0E00               	movlw	0
  4786  00EA50  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4787                           
  4788                           ; BSR set to: 2
  4789                           ;ui.c: 391: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4790  00EA52  0E05               	movlw	5
  4791  00EA54  0101               	movlb	1	; () banked
  4792  00EA56  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4793                           
  4794                           ;ui.c: 392: break;
  4795  00EA58  0012               	return	
  4796  00EA5A                     
  4797                           ; BSR set to: 1
  4798                           ;ui.c: 395: if (os.encoderCount==0 && os.buttonCount==0)
  4799                           
  4800                           ; BSR set to: 1
  4801  00EA5A  0102               	movlb	2	; () banked
  4802  00EA5C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4803  00EA5E  A4D8               	btfss	status,2,c
  4804  00EA60  D017               	goto	l1853
  4805                           
  4806                           ; BSR set to: 2
  4807  00EA62  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4808  00EA64  A4D8               	btfss	status,2,c
  4809  00EA66  D014               	goto	l1853
  4810                           
  4811                           ; BSR set to: 2
  4812                           ;ui.c: 396: {
  4813                           ;ui.c: 397: ++system_ui_inactive_count;
  4814  00EA68  4BB2               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4815  00EA6A  2BB3               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4816                           
  4817                           ; BSR set to: 2
  4818                           ;ui.c: 398: if(system_ui_inactive_count > 20000)
  4819  00EA6C  0E21               	movlw	33
  4820  00EA6E  5DB2               	subwf	_system_ui_inactive_count& (0+255),w,b
  4821  00EA70  0E4E               	movlw	78
  4822  00EA72  59B3               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4823  00EA74  A0D8               	btfss	status,0,c
  4824  00EA76  0012               	return	
  4825                           
  4826                           ; BSR set to: 2
  4827                           ;ui.c: 399: {
  4828                           ;ui.c: 401: system_encoder_disable();
  4829  00EA78  ECFF  F096         	call	_system_encoder_disable	;wreg free
  4830                           
  4831                           ;ui.c: 403: LATDbits.LD0 = 1;
  4832  00EA7C  808C               	bsf	3980,0,c	;volatile
  4833                           
  4834                           ;ui.c: 406: system_ui_inactive_count = 0;
  4835  00EA7E  0E00               	movlw	0
  4836  00EA80  0102               	movlb	2	; () banked
  4837  00EA82  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4838  00EA84  0E00               	movlw	0
  4839  00EA86  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4840                           
  4841                           ; BSR set to: 2
  4842                           ;ui.c: 407: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4843  00EA88  0E00               	movlw	0
  4844  00EA8A  0101               	movlb	1	; () banked
  4845  00EA8C  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4846                           
  4847                           ; BSR set to: 1
  4848                           ;ui.c: 408: }
  4849                           ;ui.c: 409: }
  4850  00EA8E  0012               	return	
  4851  00EA90                     l1853:
  4852                           
  4853                           ;ui.c: 410: else
  4854                           ;ui.c: 411: {
  4855                           ;ui.c: 412: system_ui_inactive_count = 0;
  4856                           
  4857                           ; BSR set to: 1
  4858  00EA90  0E00               	movlw	0
  4859  00EA92  0102               	movlb	2	; () banked
  4860  00EA94  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4861  00EA96  0E00               	movlw	0
  4862  00EA98  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4863                           
  4864                           ; BSR set to: 2
  4865                           ;ui.c: 413: _ui_encoder();
  4866  00EA9A  EC5C  F053         	call	__ui_encoder	;wreg free
  4867                           
  4868                           ;ui.c: 416: }
  4869                           
  4870                           ;ui.c: 414: }
  4871                           ;ui.c: 415: break;
  4872  00EA9E  0012               	return	
  4873  00EAA0                     l1843:
  4874  00EAA0  0101               	movlb	1	; () banked
  4875  00EAA2  51EF               	movf	_userInterfaceStatus& (0+255),w,b
  4876                           
  4877                           ; Switch size 1, requested type "space"
  4878                           ; Number of cases is 6, Range of values is 0 to 5
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte           19    10 (average)
  4882                           ;	Chosen strategy is simple_byte
  4883  00EAA4  0A00               	xorlw	0	; case 0
  4884  00EAA6  B4D8               	btfsc	status,2,c
  4885  00EAA8  D790               	goto	l1844
  4886  00EAAA  0A01               	xorlw	1	; case 1
  4887  00EAAC  B4D8               	btfsc	status,2,c
  4888  00EAAE  D79C               	goto	l1847
  4889  00EAB0  0A03               	xorlw	3	; case 2
  4890  00EAB2  B4D8               	btfsc	status,2,c
  4891  00EAB4  D7A3               	goto	l1848
  4892  00EAB6  0A01               	xorlw	1	; case 3
  4893  00EAB8  B4D8               	btfsc	status,2,c
  4894  00EABA  D7AB               	goto	l1849
  4895  00EABC  0A07               	xorlw	7	; case 4
  4896  00EABE  B4D8               	btfsc	status,2,c
  4897  00EAC0  D7BC               	goto	l1851
  4898  00EAC2  0A01               	xorlw	1	; case 5
  4899  00EAC4  A4D8               	btfss	status,2,c
  4900  00EAC6  0012               	return	
  4901  00EAC8  D7C8               	goto	l1852
  4902  00EACA                     __end_of_ui_run:
  4903                           	opt stack 0
  4904                           tblptru	equ	0xFF8
  4905                           tblptrh	equ	0xFF7
  4906                           tblptrl	equ	0xFF6
  4907                           tablat	equ	0xFF5
  4908                           postinc0	equ	0xFEE
  4909                           wreg	equ	0xFE8
  4910                           postdec1	equ	0xFE5
  4911                           fsr1h	equ	0xFE2
  4912                           fsr1l	equ	0xFE1
  4913                           postinc2	equ	0xFDE
  4914                           postdec2	equ	0xFDD
  4915                           fsr2h	equ	0xFDA
  4916                           fsr2l	equ	0xFD9
  4917                           status	equ	0xFD8
  4918                           
  4919 ;; *************** function _system_encoder_enable *****************
  4920 ;; Defined at:
  4921 ;;		line 198 in file "os.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;		None
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, status,2
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;Total ram usage:        0 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:   10
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_ui_run
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text2
  4950  012C9A                     __ptext2:
  4951                           	opt stack 0
  4952  012C9A                     _system_encoder_enable:
  4953                           	opt stack 19
  4954                           
  4955                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  4956                           
  4957                           ;incstack = 0
  4958  012C9A  92F0               	bcf	intcon3,1,c	;volatile
  4959                           
  4960                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  4961  012C9C  94F0               	bcf	intcon3,2,c	;volatile
  4962                           
  4963                           ;os.c: 205: os.encoderCount = 0;
  4964  012C9E  0E00               	movlw	0
  4965  012CA0  0102               	movlb	2	; () banked
  4966  012CA2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  4967                           
  4968                           ; BSR set to: 2
  4969                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  4970  012CA4  88F0               	bsf	intcon3,4,c	;volatile
  4971                           
  4972                           ; BSR set to: 2
  4973                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  4974  012CA6  8AF0               	bsf	intcon3,5,c	;volatile
  4975                           
  4976                           ; BSR set to: 2
  4977  012CA8  0012               	return		;funcret
  4978  012CAA                     __end_of_system_encoder_enable:
  4979                           	opt stack 0
  4980                           tblptru	equ	0xFF8
  4981                           tblptrh	equ	0xFF7
  4982                           tblptrl	equ	0xFF6
  4983                           tablat	equ	0xFF5
  4984                           intcon3	equ	0xFF0
  4985                           postinc0	equ	0xFEE
  4986                           wreg	equ	0xFE8
  4987                           postdec1	equ	0xFE5
  4988                           fsr1h	equ	0xFE2
  4989                           fsr1l	equ	0xFE1
  4990                           postinc2	equ	0xFDE
  4991                           postdec2	equ	0xFDD
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           status	equ	0xFD8
  4995                           
  4996 ;; *************** function _system_encoder_disable *****************
  4997 ;; Defined at:
  4998 ;;		line 191 in file "os.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		None
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:   10
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_ui_run
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text3
  5027  012DFE                     __ptext3:
  5028                           	opt stack 0
  5029  012DFE                     _system_encoder_disable:
  5030                           	opt stack 19
  5031                           
  5032                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5033                           
  5034                           ; BSR set to: 2
  5035                           ;incstack = 0
  5036  012DFE  98F0               	bcf	intcon3,4,c	;volatile
  5037                           
  5038                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5039  012E00  9AF0               	bcf	intcon3,5,c	;volatile
  5040  012E02  0012               	return		;funcret
  5041  012E04                     __end_of_system_encoder_disable:
  5042                           	opt stack 0
  5043                           tblptru	equ	0xFF8
  5044                           tblptrh	equ	0xFF7
  5045                           tblptrl	equ	0xFF6
  5046                           tablat	equ	0xFF5
  5047                           intcon3	equ	0xFF0
  5048                           postinc0	equ	0xFEE
  5049                           wreg	equ	0xFE8
  5050                           postdec1	equ	0xFE5
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           postinc2	equ	0xFDE
  5054                           postdec2	equ	0xFDD
  5055                           fsr2h	equ	0xFDA
  5056                           fsr2l	equ	0xFD9
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _i2c_display_send_init_sequence *****************
  5060 ;; Defined at:
  5061 ;;		line 248 in file "i2c.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5078 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5079 ;;Total ram usage:        9 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:   12
  5082 ;; This function calls:
  5083 ;;		__i2c_write
  5084 ;;		_i2c_set_frequency
  5085 ;; This function is called by:
  5086 ;;		_ui_run
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text4
  5091  01255E                     __ptext4:
  5092                           	opt stack 0
  5093  01255E                     _i2c_display_send_init_sequence:
  5094                           	opt stack 17
  5095                           
  5096                           ;i2c.c: 250: uint8_t init_sequence[9] = {
  5097                           ;i2c.c: 251: 0x3A,
  5098                           ;i2c.c: 253: 0b00011110,
  5099                           ;i2c.c: 254: 0x39,
  5100                           ;i2c.c: 256: 0b00001100,
  5101                           ;i2c.c: 257: 0x74,
  5102                           ;i2c.c: 258: 0b1011100,
  5103                           ;i2c.c: 259: 0x6d,
  5104                           ;i2c.c: 260: 0x0c,
  5105                           ;i2c.c: 261: 0x01
  5106                           ;i2c.c: 262: };
  5107                           
  5108                           ;incstack = 0
  5109  01255E  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F8360
  5110  012562  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5111  012566  0E08               	movlw	8
  5112  012568                     u12471:
  5113  012568  CFDB FFE3          	movff	plusw2,plusw1
  5114  01256C  06E8               	decf	wreg,f,c
  5115  01256E  E2FC               	bc	u12471
  5116                           
  5117                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5118  012570  0E00               	movlw	0
  5119  012572  EC0F  F088         	call	_i2c_set_frequency
  5120                           
  5121                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5122  012576  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5123  012578  0100               	movlb	0	; () banked
  5124  01257A  6F65               	movwf	__i2c_write@data& (0+255),b
  5125  01257C  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5126  01257E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5127  012580  0E09               	movlw	9
  5128  012582  6F67               	movwf	__i2c_write@length& (0+255),b
  5129  012584  0E78               	movlw	120
  5130  012586  ECB4  F08E         	call	__i2c_write
  5131  01258A  0012               	return		;funcret
  5132  01258C                     __end_of_i2c_display_send_init_sequence:
  5133                           	opt stack 0
  5134                           tblptru	equ	0xFF8
  5135                           tblptrh	equ	0xFF7
  5136                           tblptrl	equ	0xFF6
  5137                           tablat	equ	0xFF5
  5138                           intcon3	equ	0xFF0
  5139                           postinc0	equ	0xFEE
  5140                           wreg	equ	0xFE8
  5141                           postdec1	equ	0xFE5
  5142                           plusw1	equ	0xFE3
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           postinc2	equ	0xFDE
  5146                           postdec2	equ	0xFDD
  5147                           plusw2	equ	0xFDB
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _i2c_digipot_reset_on *****************
  5153 ;; Defined at:
  5154 ;;		line 425 in file "i2c.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;Total ram usage:        2 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:   12
  5175 ;; This function calls:
  5176 ;;		__i2c_write
  5177 ;;		_i2c_set_frequency
  5178 ;; This function is called by:
  5179 ;;		_ui_run
  5180 ;;		_i2c_display_init
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text5
  5185  0127CA                     __ptext5:
  5186                           	opt stack 0
  5187  0127CA                     _i2c_digipot_reset_on:
  5188                           	opt stack 17
  5189                           
  5190                           ;i2c.c: 427: uint8_t data_array[2];
  5191                           ;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5192                           
  5193                           ;incstack = 0
  5194  0127CA  0E10               	movlw	16
  5195  0127CC  0100               	movlb	0	; () banked
  5196  0127CE  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5197                           
  5198                           ;i2c.c: 430: data_array[1] = 0x00;
  5199  0127D0  0E00               	movlw	0
  5200  0127D2  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5204  0127D4  0E02               	movlw	2
  5205  0127D6  EC0F  F088         	call	_i2c_set_frequency
  5206                           
  5207                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5208  0127DA  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5209  0127DC  0100               	movlb	0	; () banked
  5210  0127DE  6F65               	movwf	__i2c_write@data& (0+255),b
  5211  0127E0  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5212  0127E2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5213  0127E4  0E02               	movlw	2
  5214  0127E6  6F67               	movwf	__i2c_write@length& (0+255),b
  5215  0127E8  0E5C               	movlw	92
  5216  0127EA  ECB4  F08E         	call	__i2c_write
  5217  0127EE  0012               	return		;funcret
  5218  0127F0                     __end_of_i2c_digipot_reset_on:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           intcon3	equ	0xFF0
  5225                           postinc0	equ	0xFEE
  5226                           wreg	equ	0xFE8
  5227                           postdec1	equ	0xFE5
  5228                           plusw1	equ	0xFE3
  5229                           fsr1h	equ	0xFE2
  5230                           fsr1l	equ	0xFE1
  5231                           postinc2	equ	0xFDE
  5232                           postdec2	equ	0xFDD
  5233                           plusw2	equ	0xFDB
  5234                           fsr2h	equ	0xFDA
  5235                           fsr2l	equ	0xFD9
  5236                           status	equ	0xFD8
  5237                           
  5238 ;; *************** function _i2c_digipot_reset_off *****************
  5239 ;; Defined at:
  5240 ;;		line 438 in file "i2c.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5258 ;;Total ram usage:        2 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:   12
  5261 ;; This function calls:
  5262 ;;		__i2c_write
  5263 ;;		_i2c_set_frequency
  5264 ;; This function is called by:
  5265 ;;		_ui_run
  5266 ;;		_i2c_display_init
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text6
  5271  0127F0                     __ptext6:
  5272                           	opt stack 0
  5273  0127F0                     _i2c_digipot_reset_off:
  5274                           	opt stack 17
  5275                           
  5276                           ;i2c.c: 440: uint8_t data_array[2];
  5277                           ;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5278                           
  5279                           ;incstack = 0
  5280  0127F0  0E10               	movlw	16
  5281  0127F2  0100               	movlb	0	; () banked
  5282  0127F4  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5283                           
  5284                           ;i2c.c: 442: data_array[1] = 0x80;
  5285  0127F6  0E80               	movlw	128
  5286  0127F8  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5290  0127FA  0E02               	movlw	2
  5291  0127FC  EC0F  F088         	call	_i2c_set_frequency
  5292                           
  5293                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5294  012800  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5295  012802  0100               	movlb	0	; () banked
  5296  012804  6F65               	movwf	__i2c_write@data& (0+255),b
  5297  012806  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5298  012808  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5299  01280A  0E02               	movlw	2
  5300  01280C  6F67               	movwf	__i2c_write@length& (0+255),b
  5301  01280E  0E5C               	movlw	92
  5302  012810  ECB4  F08E         	call	__i2c_write
  5303  012814  0012               	return		;funcret
  5304  012816                     __end_of_i2c_digipot_reset_off:
  5305                           	opt stack 0
  5306                           tblptru	equ	0xFF8
  5307                           tblptrh	equ	0xFF7
  5308                           tblptrl	equ	0xFF6
  5309                           tablat	equ	0xFF5
  5310                           intcon3	equ	0xFF0
  5311                           postinc0	equ	0xFEE
  5312                           wreg	equ	0xFE8
  5313                           postdec1	equ	0xFE5
  5314                           plusw1	equ	0xFE3
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           postinc2	equ	0xFDE
  5318                           postdec2	equ	0xFDD
  5319                           plusw2	equ	0xFDB
  5320                           fsr2h	equ	0xFDA
  5321                           fsr2l	equ	0xFD9
  5322                           status	equ	0xFD8
  5323                           
  5324 ;; *************** function _i2c_digipot_backlight *****************
  5325 ;; Defined at:
  5326 ;;		line 450 in file "i2c.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  level           1    wreg     unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  level           1   10[BANK0 ] unsigned char 
  5331 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;Total ram usage:        3 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:   12
  5348 ;; This function calls:
  5349 ;;		__i2c_write
  5350 ;;		_i2c_set_frequency
  5351 ;; This function is called by:
  5352 ;;		_ui_run
  5353 ;;		_i2c_display_init
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text7
  5358  012672                     __ptext7:
  5359                           	opt stack 0
  5360  012672                     _i2c_digipot_backlight:
  5361                           	opt stack 17
  5362                           
  5363                           ;incstack = 0
  5364                           ;i2c_digipot_backlight@level stored from wreg
  5365  012672  0100               	movlb	0	; () banked
  5366  012674  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5367                           
  5368                           ;i2c.c: 452: uint8_t data_array[2];
  5369                           ;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5370  012676  0E00               	movlw	0
  5371  012678  0100               	movlb	0	; () banked
  5372  01267A  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;i2c.c: 454: data_array[1] = level>>1;
  5376  01267C  90D8               	bcf	status,0,c
  5377  01267E  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5378  012680  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5382  012682  0E02               	movlw	2
  5383  012684  EC0F  F088         	call	_i2c_set_frequency
  5384                           
  5385                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5386  012688  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5387  01268A  0100               	movlb	0	; () banked
  5388  01268C  6F65               	movwf	__i2c_write@data& (0+255),b
  5389  01268E  0E00               	movlw	high i2c_digipot_backlight@data_array
  5390  012690  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5391  012692  0E02               	movlw	2
  5392  012694  6F67               	movwf	__i2c_write@length& (0+255),b
  5393  012696  0E5C               	movlw	92
  5394  012698  ECB4  F08E         	call	__i2c_write
  5395  01269C  0012               	return		;funcret
  5396  01269E                     __end_of_i2c_digipot_backlight:
  5397                           	opt stack 0
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           intcon3	equ	0xFF0
  5403                           postinc0	equ	0xFEE
  5404                           wreg	equ	0xFE8
  5405                           postdec1	equ	0xFE5
  5406                           plusw1	equ	0xFE3
  5407                           fsr1h	equ	0xFE2
  5408                           fsr1l	equ	0xFE1
  5409                           postinc2	equ	0xFDE
  5410                           postdec2	equ	0xFDD
  5411                           plusw2	equ	0xFDB
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8
  5415                           
  5416 ;; *************** function __ui_encoder *****************
  5417 ;; Defined at:
  5418 ;;		line 17 in file "ui.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;Total ram usage:        0 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:   14
  5439 ;; This function calls:
  5440 ;;		_rtcc_correct_day
  5441 ;;		_rtcc_decrement_day
  5442 ;;		_rtcc_decrement_hours
  5443 ;;		_rtcc_decrement_minutes
  5444 ;;		_rtcc_decrement_month
  5445 ;;		_rtcc_decrement_seconds
  5446 ;;		_rtcc_decrement_year
  5447 ;;		_rtcc_increment_day
  5448 ;;		_rtcc_increment_hours
  5449 ;;		_rtcc_increment_minutes
  5450 ;;		_rtcc_increment_month
  5451 ;;		_rtcc_increment_seconds
  5452 ;;		_rtcc_increment_year
  5453 ;;		_rtcc_write_eeprom
  5454 ;;		_system_output_off
  5455 ;;		_system_output_on
  5456 ;;		_system_output_toggle
  5457 ;; This function is called by:
  5458 ;;		_ui_run
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text8
  5463  00A6B8                     __ptext8:
  5464                           	opt stack 0
  5465  00A6B8                     __ui_encoder:
  5466                           	opt stack 15
  5467                           
  5468                           ;ui.c: 19: switch(os.display_mode)
  5469                           
  5470                           ;incstack = 0
  5471  00A6B8  D193               	goto	l1744
  5472  00A6BA                     
  5473                           ;ui.c: 22: if(os.encoderCount>0)
  5474  00A6BA  0102               	movlb	2	; () banked
  5475  00A6BC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5476  00A6BE  0A80               	xorlw	128
  5477  00A6C0  0F7F               	addlw	-129
  5478  00A6C2  A0D8               	btfss	status,0,c
  5479  00A6C4  D002               	goto	l1746
  5480                           
  5481                           ; BSR set to: 2
  5482                           ;ui.c: 23: {
  5483                           ;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5484  00A6C6  0E10               	movlw	16
  5485  00A6C8  D003               	goto	L1
  5486  00A6CA                     l1746:
  5487                           
  5488                           ; BSR set to: 2
  5489                           ;ui.c: 26: else if(os.encoderCount<0)
  5490                           
  5491                           ; BSR set to: 2
  5492  00A6CA  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5493  00A6CC  D002               	goto	l1748
  5494                           
  5495                           ; BSR set to: 2
  5496                           ;ui.c: 27: {
  5497                           ;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5498  00A6CE  0E60               	movlw	96
  5499  00A6D0                     L1:
  5500  00A6D0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5501  00A6D2                     l1748:
  5502                           
  5503                           ; BSR set to: 2
  5504                           ;ui.c: 29: }
  5505                           ;ui.c: 30: if(os.buttonCount)
  5506                           
  5507                           ; BSR set to: 2
  5508  00A6D2  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5509                           
  5510                           ; BSR set to: 2
  5511                           ;ui.c: 33: }
  5512                           ;ui.c: 34: os.encoderCount = 0;
  5513                           
  5514                           ; BSR set to: 2
  5515                           
  5516                           ;ui.c: 31: {
  5517                           ;ui.c: 32: ;
  5518  00A6D4  0E00               	movlw	0
  5519  00A6D6  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5520                           
  5521                           ;ui.c: 35: os.buttonCount = 0;
  5522  00A6D8  0E00               	movlw	0
  5523  00A6DA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5524                           
  5525                           ;ui.c: 36: break;
  5526  00A6DC  0012               	return	
  5527  00A6DE                     
  5528                           ; BSR set to: 2
  5529                           ;ui.c: 39: if(os.encoderCount>0)
  5530                           
  5531                           ; BSR set to: 2
  5532  00A6DE  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5533  00A6E0  0A80               	xorlw	128
  5534  00A6E2  0F7F               	addlw	-129
  5535  00A6E4  A0D8               	btfss	status,0,c
  5536  00A6E6  D002               	goto	l1752
  5537                           
  5538                           ; BSR set to: 2
  5539                           ;ui.c: 40: {
  5540                           ;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5541  00A6E8  0E20               	movlw	32
  5542  00A6EA  D003               	goto	L2
  5543  00A6EC                     l1752:
  5544                           
  5545                           ; BSR set to: 2
  5546                           ;ui.c: 43: else if(os.encoderCount<0)
  5547                           
  5548                           ; BSR set to: 2
  5549  00A6EC  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5550  00A6EE  D002               	goto	l1754
  5551                           
  5552                           ; BSR set to: 2
  5553                           ;ui.c: 44: {
  5554                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5555  00A6F0  0E00               	movlw	0
  5556  00A6F2                     L2:
  5557  00A6F2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5558  00A6F4                     l1754:
  5559                           
  5560                           ; BSR set to: 2
  5561                           ;ui.c: 46: }
  5562                           ;ui.c: 47: if(os.buttonCount)
  5563                           
  5564                           ; BSR set to: 2
  5565  00A6F4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5566  00A6F6  B4D8               	btfsc	status,2,c
  5567  00A6F8  D002               	goto	l1755
  5568                           
  5569                           ; BSR set to: 2
  5570                           ;ui.c: 48: {
  5571                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5572  00A6FA  0E11               	movlw	17
  5573  00A6FC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5574  00A6FE                     l1755:
  5575                           
  5576                           ; BSR set to: 2
  5577                           ;ui.c: 50: }
  5578                           ;ui.c: 51: os.encoderCount = 0;
  5579  00A6FE  0E00               	movlw	0
  5580  00A700  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5581                           
  5582                           ;ui.c: 52: os.buttonCount = 0;
  5583  00A702  0E00               	movlw	0
  5584  00A704  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5585                           
  5586                           ;ui.c: 53: break;
  5587  00A706  0012               	return	
  5588  00A708                     
  5589                           ; BSR set to: 2
  5590                           ;ui.c: 56: if(os.encoderCount>0)
  5591                           
  5592                           ; BSR set to: 2
  5593  00A708  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5594  00A70A  0A80               	xorlw	128
  5595  00A70C  0F7F               	addlw	-129
  5596  00A70E  A0D8               	btfss	status,0,c
  5597  00A710  D003               	goto	l1757
  5598                           
  5599                           ; BSR set to: 2
  5600                           ;ui.c: 57: {
  5601                           ;ui.c: 58: rtcc_increment_year();
  5602  00A712  EC56  F094         	call	_rtcc_increment_year	;wreg free
  5603                           
  5604                           ;ui.c: 59: }
  5605  00A716  D004               	goto	l1759
  5606  00A718                     l1757:
  5607                           
  5608                           ;ui.c: 60: else if(os.encoderCount<0)
  5609  00A718  0102               	movlb	2	; () banked
  5610  00A71A  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5611                           
  5612                           ; BSR set to: 2
  5613                           ;ui.c: 61: {
  5614                           ;ui.c: 62: rtcc_decrement_year();
  5615  00A71C  ECAB  F094         	call	_rtcc_decrement_year	;wreg free
  5616  00A720                     l1759:
  5617                           
  5618                           ;ui.c: 63: }
  5619                           ;ui.c: 64: if(os.buttonCount)
  5620  00A720  0102               	movlb	2	; () banked
  5621  00A722  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5622  00A724  B4D8               	btfsc	status,2,c
  5623  00A726  D005               	goto	l1760
  5624                           
  5625                           ; BSR set to: 2
  5626                           ;ui.c: 65: {
  5627                           ;ui.c: 66: rtcc_correct_day();
  5628  00A728  EC22  F095         	call	_rtcc_correct_day	;wreg free
  5629                           
  5630                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5631  00A72C  0E12               	movlw	18
  5632  00A72E  0102               	movlb	2	; () banked
  5633  00A730  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5634  00A732                     l1760:
  5635                           
  5636                           ; BSR set to: 2
  5637                           ;ui.c: 68: }
  5638                           ;ui.c: 69: os.encoderCount = 0;
  5639                           
  5640                           ; BSR set to: 2
  5641  00A732  0E00               	movlw	0
  5642  00A734  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5643                           
  5644                           ; BSR set to: 2
  5645                           ;ui.c: 70: os.buttonCount = 0;
  5646  00A736  0E00               	movlw	0
  5647  00A738  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5648                           
  5649                           ;ui.c: 71: break;
  5650  00A73A  0012               	return	
  5651  00A73C                     
  5652                           ; BSR set to: 2
  5653                           ;ui.c: 74: if(os.encoderCount>0)
  5654                           
  5655                           ; BSR set to: 2
  5656  00A73C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5657  00A73E  0A80               	xorlw	128
  5658  00A740  0F7F               	addlw	-129
  5659  00A742  A0D8               	btfss	status,0,c
  5660  00A744  D003               	goto	l1762
  5661                           
  5662                           ; BSR set to: 2
  5663                           ;ui.c: 75: {
  5664                           ;ui.c: 76: rtcc_increment_month();
  5665  00A746  EC78  F094         	call	_rtcc_increment_month	;wreg free
  5666                           
  5667                           ;ui.c: 77: }
  5668  00A74A  D004               	goto	l1764
  5669  00A74C                     l1762:
  5670                           
  5671                           ;ui.c: 78: else if(os.encoderCount<0)
  5672  00A74C  0102               	movlb	2	; () banked
  5673  00A74E  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5674                           
  5675                           ; BSR set to: 2
  5676                           ;ui.c: 79: {
  5677                           ;ui.c: 80: rtcc_decrement_month();
  5678  00A750  ECCD  F094         	call	_rtcc_decrement_month	;wreg free
  5679  00A754                     l1764:
  5680                           
  5681                           ;ui.c: 81: }
  5682                           ;ui.c: 82: if(os.buttonCount)
  5683  00A754  0102               	movlb	2	; () banked
  5684  00A756  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5685  00A758  B4D8               	btfsc	status,2,c
  5686  00A75A  D005               	goto	l1765
  5687                           
  5688                           ; BSR set to: 2
  5689                           ;ui.c: 83: {
  5690                           ;ui.c: 84: rtcc_correct_day();
  5691  00A75C  EC22  F095         	call	_rtcc_correct_day	;wreg free
  5692                           
  5693                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5694  00A760  0E13               	movlw	19
  5695  00A762  0102               	movlb	2	; () banked
  5696  00A764  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5697  00A766                     l1765:
  5698                           
  5699                           ; BSR set to: 2
  5700                           ;ui.c: 86: }
  5701                           ;ui.c: 87: os.encoderCount = 0;
  5702                           
  5703                           ; BSR set to: 2
  5704  00A766  0E00               	movlw	0
  5705  00A768  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5706                           
  5707                           ; BSR set to: 2
  5708                           ;ui.c: 88: os.buttonCount = 0;
  5709  00A76A  0E00               	movlw	0
  5710  00A76C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5711                           
  5712                           ;ui.c: 89: break;
  5713  00A76E  0012               	return	
  5714  00A770                     
  5715                           ; BSR set to: 2
  5716                           ;ui.c: 92: if(os.encoderCount>0)
  5717                           
  5718                           ; BSR set to: 2
  5719  00A770  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5720  00A772  0A80               	xorlw	128
  5721  00A774  0F7F               	addlw	-129
  5722  00A776  A0D8               	btfss	status,0,c
  5723  00A778  D003               	goto	l1767
  5724                           
  5725                           ; BSR set to: 2
  5726                           ;ui.c: 93: {
  5727                           ;ui.c: 94: rtcc_increment_day();
  5728  00A77A  EC1E  F094         	call	_rtcc_increment_day	;wreg free
  5729                           
  5730                           ;ui.c: 95: }
  5731  00A77E  D004               	goto	l1769
  5732  00A780                     l1767:
  5733                           
  5734                           ;ui.c: 96: else if(os.encoderCount<0)
  5735  00A780  0102               	movlb	2	; () banked
  5736  00A782  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5737                           
  5738                           ; BSR set to: 2
  5739                           ;ui.c: 97: {
  5740                           ;ui.c: 98: rtcc_decrement_day();
  5741  00A784  EC31  F094         	call	_rtcc_decrement_day	;wreg free
  5742  00A788                     l1769:
  5743                           
  5744                           ;ui.c: 99: }
  5745                           ;ui.c: 100: if(os.buttonCount)
  5746  00A788  0102               	movlb	2	; () banked
  5747  00A78A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5748  00A78C  B4D8               	btfsc	status,2,c
  5749  00A78E  D002               	goto	l1770
  5750                           
  5751                           ; BSR set to: 2
  5752                           ;ui.c: 101: {
  5753                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5754  00A790  0E14               	movlw	20
  5755  00A792  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5756  00A794                     l1770:
  5757                           
  5758                           ; BSR set to: 2
  5759                           ;ui.c: 103: }
  5760                           ;ui.c: 104: os.encoderCount = 0;
  5761  00A794  0E00               	movlw	0
  5762  00A796  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5763                           
  5764                           ;ui.c: 105: os.buttonCount = 0;
  5765  00A798  0E00               	movlw	0
  5766  00A79A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5767                           
  5768                           ;ui.c: 106: break;
  5769  00A79C  0012               	return	
  5770  00A79E                     
  5771                           ; BSR set to: 2
  5772                           ;ui.c: 109: if(os.encoderCount>0)
  5773                           
  5774                           ; BSR set to: 2
  5775  00A79E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5776  00A7A0  0A80               	xorlw	128
  5777  00A7A2  0F7F               	addlw	-129
  5778  00A7A4  A0D8               	btfss	status,0,c
  5779  00A7A6  D003               	goto	l1772
  5780                           
  5781                           ; BSR set to: 2
  5782                           ;ui.c: 110: {
  5783                           ;ui.c: 111: rtcc_increment_hours();
  5784  00A7A8  EC9A  F094         	call	_rtcc_increment_hours	;wreg free
  5785                           
  5786                           ;ui.c: 112: }
  5787  00A7AC  D004               	goto	l1774
  5788  00A7AE                     l1772:
  5789                           
  5790                           ;ui.c: 113: else if(os.encoderCount<0)
  5791  00A7AE  0102               	movlb	2	; () banked
  5792  00A7B0  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5793                           
  5794                           ; BSR set to: 2
  5795                           ;ui.c: 114: {
  5796                           ;ui.c: 115: rtcc_decrement_hours();
  5797  00A7B2  ECEF  F094         	call	_rtcc_decrement_hours	;wreg free
  5798  00A7B6                     l1774:
  5799                           
  5800                           ;ui.c: 116: }
  5801                           ;ui.c: 117: if(os.buttonCount)
  5802  00A7B6  0102               	movlb	2	; () banked
  5803  00A7B8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5804  00A7BA  B4D8               	btfsc	status,2,c
  5805  00A7BC  D002               	goto	l1775
  5806                           
  5807                           ; BSR set to: 2
  5808                           ;ui.c: 118: {
  5809                           ;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5810  00A7BE  0E15               	movlw	21
  5811  00A7C0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5812  00A7C2                     l1775:
  5813                           
  5814                           ; BSR set to: 2
  5815                           ;ui.c: 120: }
  5816                           ;ui.c: 121: os.encoderCount = 0;
  5817  00A7C2  0E00               	movlw	0
  5818  00A7C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5819                           
  5820                           ;ui.c: 122: os.buttonCount = 0;
  5821  00A7C6  0E00               	movlw	0
  5822  00A7C8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5823                           
  5824                           ;ui.c: 123: break;
  5825  00A7CA  0012               	return	
  5826  00A7CC                     
  5827                           ; BSR set to: 2
  5828                           ;ui.c: 126: if(os.encoderCount>0)
  5829                           
  5830                           ; BSR set to: 2
  5831  00A7CC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5832  00A7CE  0A80               	xorlw	128
  5833  00A7D0  0F7F               	addlw	-129
  5834  00A7D2  A0D8               	btfss	status,0,c
  5835  00A7D4  D003               	goto	l1777
  5836                           
  5837                           ; BSR set to: 2
  5838                           ;ui.c: 127: {
  5839                           ;ui.c: 128: rtcc_increment_minutes();
  5840  00A7D6  EC89  F094         	call	_rtcc_increment_minutes	;wreg free
  5841                           
  5842                           ;ui.c: 129: }
  5843  00A7DA  D004               	goto	l1779
  5844  00A7DC                     l1777:
  5845                           
  5846                           ;ui.c: 130: else if(os.encoderCount<0)
  5847  00A7DC  0102               	movlb	2	; () banked
  5848  00A7DE  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5849                           
  5850                           ; BSR set to: 2
  5851                           ;ui.c: 131: {
  5852                           ;ui.c: 132: rtcc_decrement_minutes();
  5853  00A7E0  ECDE  F094         	call	_rtcc_decrement_minutes	;wreg free
  5854  00A7E4                     l1779:
  5855                           
  5856                           ;ui.c: 133: }
  5857                           ;ui.c: 134: if(os.buttonCount)
  5858  00A7E4  0102               	movlb	2	; () banked
  5859  00A7E6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5860  00A7E8  B4D8               	btfsc	status,2,c
  5861  00A7EA  D002               	goto	l1780
  5862                           
  5863                           ; BSR set to: 2
  5864                           ;ui.c: 135: {
  5865                           ;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5866  00A7EC  0E16               	movlw	22
  5867  00A7EE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5868  00A7F0                     l1780:
  5869                           
  5870                           ; BSR set to: 2
  5871                           ;ui.c: 137: }
  5872                           ;ui.c: 138: os.encoderCount = 0;
  5873  00A7F0  0E00               	movlw	0
  5874  00A7F2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5875                           
  5876                           ;ui.c: 139: os.buttonCount = 0;
  5877  00A7F4  0E00               	movlw	0
  5878  00A7F6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5879                           
  5880                           ;ui.c: 140: break;
  5881  00A7F8  0012               	return	
  5882  00A7FA                     
  5883                           ; BSR set to: 2
  5884                           ;ui.c: 143: if(os.encoderCount>0)
  5885                           
  5886                           ; BSR set to: 2
  5887  00A7FA  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5888  00A7FC  0A80               	xorlw	128
  5889  00A7FE  0F7F               	addlw	-129
  5890  00A800  A0D8               	btfss	status,0,c
  5891  00A802  D003               	goto	l1782
  5892                           
  5893                           ; BSR set to: 2
  5894                           ;ui.c: 144: {
  5895                           ;ui.c: 145: rtcc_increment_seconds();
  5896  00A804  EC67  F094         	call	_rtcc_increment_seconds	;wreg free
  5897                           
  5898                           ;ui.c: 146: }
  5899  00A808  D004               	goto	l1784
  5900  00A80A                     l1782:
  5901                           
  5902                           ;ui.c: 147: else if(os.encoderCount<0)
  5903  00A80A  0102               	movlb	2	; () banked
  5904  00A80C  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5905                           
  5906                           ; BSR set to: 2
  5907                           ;ui.c: 148: {
  5908                           ;ui.c: 149: rtcc_decrement_seconds();
  5909  00A80E  ECBC  F094         	call	_rtcc_decrement_seconds	;wreg free
  5910  00A812                     l1784:
  5911                           
  5912                           ;ui.c: 150: }
  5913                           ;ui.c: 151: if(os.buttonCount)
  5914  00A812  0102               	movlb	2	; () banked
  5915  00A814  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5916  00A816  B4D8               	btfsc	status,2,c
  5917  00A818  D004               	goto	l1785
  5918                           
  5919                           ; BSR set to: 2
  5920                           ;ui.c: 152: {
  5921                           ;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5922  00A81A  0E10               	movlw	16
  5923  00A81C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5924                           
  5925                           ; BSR set to: 2
  5926                           ;ui.c: 154: rtcc_write_eeprom();
  5927  00A81E  ECEB  F08F         	call	_rtcc_write_eeprom	;wreg free
  5928  00A822                     l1785:
  5929                           
  5930                           ;ui.c: 155: }
  5931                           ;ui.c: 156: os.encoderCount = 0;
  5932  00A822  0E00               	movlw	0
  5933  00A824  0102               	movlb	2	; () banked
  5934  00A826  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5935                           
  5936                           ; BSR set to: 2
  5937                           ;ui.c: 157: os.buttonCount = 0;
  5938  00A828  0E00               	movlw	0
  5939  00A82A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5940                           
  5941                           ;ui.c: 158: break;
  5942  00A82C  0012               	return	
  5943  00A82E                     
  5944                           ; BSR set to: 2
  5945                           ;ui.c: 161: if(os.encoderCount>0)
  5946                           
  5947                           ; BSR set to: 2
  5948  00A82E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5949  00A830  0A80               	xorlw	128
  5950  00A832  0F7F               	addlw	-129
  5951  00A834  A0D8               	btfss	status,0,c
  5952  00A836  D002               	goto	l1787
  5953                           
  5954                           ; BSR set to: 2
  5955                           ;ui.c: 162: {
  5956                           ;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  5957  00A838  0E30               	movlw	48
  5958  00A83A  D003               	goto	L3
  5959  00A83C                     l1787:
  5960                           
  5961                           ; BSR set to: 2
  5962                           ;ui.c: 165: else if(os.encoderCount<0)
  5963                           
  5964                           ; BSR set to: 2
  5965  00A83C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5966  00A83E  D002               	goto	l1789
  5967                           
  5968                           ; BSR set to: 2
  5969                           ;ui.c: 166: {
  5970                           ;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5971  00A840  0E10               	movlw	16
  5972  00A842                     L3:
  5973  00A842  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5974  00A844                     l1789:
  5975                           
  5976                           ; BSR set to: 2
  5977                           ;ui.c: 168: }
  5978                           ;ui.c: 169: if(os.buttonCount)
  5979                           
  5980                           ; BSR set to: 2
  5981  00A844  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5982  00A846  A4D8               	btfss	status,2,c
  5983                           
  5984                           ; BSR set to: 2
  5985                           ;ui.c: 170: {
  5986                           ;ui.c: 171: if(os.output_voltage>12000)
  5987  00A848  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  5988  00A84A  D009               	goto	l1791
  5989  00A84C  0EE1               	movlw	225
  5990  00A84E  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  5991  00A850  0E2E               	movlw	46
  5992  00A852  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  5993  00A854  A0D8               	btfss	status,0,c
  5994  00A856  D003               	goto	l1791
  5995                           
  5996                           ; BSR set to: 2
  5997                           ;ui.c: 172: {
  5998                           ;ui.c: 173: system_output_toggle(OUTPUT_USB);
  5999  00A858  0E10               	movlw	16
  6000  00A85A  EC0B  F094         	call	_system_output_toggle
  6001  00A85E                     l1791:
  6002                           
  6003                           ;ui.c: 174: }
  6004                           ;ui.c: 175: }
  6005                           ;ui.c: 176: os.encoderCount = 0;
  6006  00A85E  0E00               	movlw	0
  6007  00A860  0102               	movlb	2	; () banked
  6008  00A862  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6009                           
  6010                           ; BSR set to: 2
  6011                           ;ui.c: 177: os.buttonCount = 0;
  6012  00A864  0E00               	movlw	0
  6013  00A866  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6014                           
  6015                           ;ui.c: 178: break;
  6016  00A868  0012               	return	
  6017  00A86A                     
  6018                           ; BSR set to: 2
  6019                           ;ui.c: 181: if(os.encoderCount>0)
  6020                           
  6021                           ; BSR set to: 2
  6022  00A86A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6023  00A86C  0A80               	xorlw	128
  6024  00A86E  0F7F               	addlw	-129
  6025  00A870  A0D8               	btfss	status,0,c
  6026  00A872  D002               	goto	l1793
  6027                           
  6028                           ; BSR set to: 2
  6029                           ;ui.c: 182: {
  6030                           ;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6031  00A874  0E40               	movlw	64
  6032  00A876  D003               	goto	L4
  6033  00A878                     l1793:
  6034                           
  6035                           ; BSR set to: 2
  6036                           ;ui.c: 185: else if(os.encoderCount<0)
  6037                           
  6038                           ; BSR set to: 2
  6039  00A878  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6040  00A87A  D002               	goto	l1795
  6041                           
  6042                           ; BSR set to: 2
  6043                           ;ui.c: 186: {
  6044                           ;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6045  00A87C  0E20               	movlw	32
  6046  00A87E                     L4:
  6047  00A87E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6048  00A880                     l1795:
  6049                           
  6050                           ; BSR set to: 2
  6051                           ;ui.c: 188: }
  6052                           ;ui.c: 189: if(os.buttonCount)
  6053                           
  6054                           ; BSR set to: 2
  6055  00A880  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6056  00A882  B4D8               	btfsc	status,2,c
  6057  00A884  D002               	goto	l1796
  6058                           
  6059                           ; BSR set to: 2
  6060                           ;ui.c: 190: {
  6061                           ;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  6062  00A886  0E31               	movlw	49
  6063  00A888  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6064  00A88A                     l1796:
  6065                           
  6066                           ; BSR set to: 2
  6067                           ;ui.c: 192: }
  6068                           ;ui.c: 193: os.encoderCount = 0;
  6069  00A88A  0E00               	movlw	0
  6070  00A88C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6071                           
  6072                           ;ui.c: 194: os.buttonCount = 0;
  6073  00A88E  0E00               	movlw	0
  6074  00A890  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6075                           
  6076                           ;ui.c: 195: break;
  6077  00A892  0012               	return	
  6078  00A894                     
  6079                           ; BSR set to: 2
  6080                           ;ui.c: 198: if(os.encoderCount>0)
  6081                           
  6082                           ; BSR set to: 2
  6083  00A894  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6084  00A896  0A80               	xorlw	128
  6085  00A898  0F7F               	addlw	-129
  6086  00A89A  A0D8               	btfss	status,0,c
  6087  00A89C  D006               	goto	l1798
  6088                           
  6089                           ; BSR set to: 2
  6090                           ;ui.c: 199: {
  6091                           ;ui.c: 200: if(os.output_voltage>-1)
  6092  00A89E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6093  00A8A0  D00A               	goto	l1801
  6094                           
  6095                           ; BSR set to: 2
  6096                           ;ui.c: 201: system_output_on(OUTPUT_1);
  6097  00A8A2  0E01               	movlw	1
  6098  00A8A4  EC54  F08F         	call	_system_output_on
  6099                           
  6100                           ;ui.c: 202: }
  6101  00A8A8  D006               	goto	l1801
  6102  00A8AA                     l1798:
  6103                           
  6104                           ;ui.c: 203: else if(os.encoderCount<0)
  6105  00A8AA  0102               	movlb	2	; () banked
  6106  00A8AC  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6107  00A8AE  D003               	goto	l1801
  6108                           
  6109                           ; BSR set to: 2
  6110                           ;ui.c: 204: {
  6111                           ;ui.c: 205: system_output_off(OUTPUT_1);
  6112  00A8B0  0E01               	movlw	1
  6113  00A8B2  EC3E  F08D         	call	_system_output_off
  6114  00A8B6                     l1801:
  6115                           
  6116                           ;ui.c: 206: }
  6117                           ;ui.c: 207: if(os.buttonCount)
  6118  00A8B6  0102               	movlb	2	; () banked
  6119  00A8B8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6120  00A8BA  B4D8               	btfsc	status,2,c
  6121  00A8BC  D002               	goto	l1802
  6122                           
  6123                           ; BSR set to: 2
  6124                           ;ui.c: 208: {
  6125                           ;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6126  00A8BE  0E32               	movlw	50
  6127  00A8C0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6128  00A8C2                     l1802:
  6129                           
  6130                           ; BSR set to: 2
  6131                           ;ui.c: 210: }
  6132                           ;ui.c: 211: os.encoderCount = 0;
  6133  00A8C2  0E00               	movlw	0
  6134  00A8C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6135                           
  6136                           ;ui.c: 212: os.buttonCount = 0;
  6137  00A8C6  0E00               	movlw	0
  6138  00A8C8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6139                           
  6140                           ;ui.c: 213: break;
  6141  00A8CA  0012               	return	
  6142  00A8CC                     
  6143                           ; BSR set to: 2
  6144                           ;ui.c: 216: if(os.encoderCount>0)
  6145                           
  6146                           ; BSR set to: 2
  6147  00A8CC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6148  00A8CE  0A80               	xorlw	128
  6149  00A8D0  0F7F               	addlw	-129
  6150  00A8D2  A0D8               	btfss	status,0,c
  6151  00A8D4  D006               	goto	l1804
  6152                           
  6153                           ; BSR set to: 2
  6154                           ;ui.c: 217: {
  6155                           ;ui.c: 218: if(os.output_voltage>-1)
  6156  00A8D6  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6157  00A8D8  D00A               	goto	l1807
  6158                           
  6159                           ; BSR set to: 2
  6160                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6161  00A8DA  0E02               	movlw	2
  6162  00A8DC  EC54  F08F         	call	_system_output_on
  6163                           
  6164                           ;ui.c: 220: }
  6165  00A8E0  D006               	goto	l1807
  6166  00A8E2                     l1804:
  6167                           
  6168                           ;ui.c: 221: else if(os.encoderCount<0)
  6169  00A8E2  0102               	movlb	2	; () banked
  6170  00A8E4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6171  00A8E6  D003               	goto	l1807
  6172                           
  6173                           ; BSR set to: 2
  6174                           ;ui.c: 222: {
  6175                           ;ui.c: 223: system_output_off(OUTPUT_2);
  6176  00A8E8  0E02               	movlw	2
  6177  00A8EA  EC3E  F08D         	call	_system_output_off
  6178  00A8EE                     l1807:
  6179                           
  6180                           ;ui.c: 224: }
  6181                           ;ui.c: 225: if(os.buttonCount)
  6182  00A8EE  0102               	movlb	2	; () banked
  6183  00A8F0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6184  00A8F2  B4D8               	btfsc	status,2,c
  6185  00A8F4  D002               	goto	l1808
  6186                           
  6187                           ; BSR set to: 2
  6188                           ;ui.c: 226: {
  6189                           ;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6190  00A8F6  0E33               	movlw	51
  6191  00A8F8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6192  00A8FA                     l1808:
  6193                           
  6194                           ; BSR set to: 2
  6195                           ;ui.c: 228: }
  6196                           ;ui.c: 229: os.encoderCount = 0;
  6197  00A8FA  0E00               	movlw	0
  6198  00A8FC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6199                           
  6200                           ;ui.c: 230: os.buttonCount = 0;
  6201  00A8FE  0E00               	movlw	0
  6202  00A900  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6203                           
  6204                           ;ui.c: 231: break;
  6205  00A902  0012               	return	
  6206  00A904                     
  6207                           ; BSR set to: 2
  6208                           ;ui.c: 234: if(os.encoderCount>0)
  6209                           
  6210                           ; BSR set to: 2
  6211  00A904  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6212  00A906  0A80               	xorlw	128
  6213  00A908  0F7F               	addlw	-129
  6214  00A90A  A0D8               	btfss	status,0,c
  6215  00A90C  D006               	goto	l1810
  6216                           
  6217                           ; BSR set to: 2
  6218                           ;ui.c: 235: {
  6219                           ;ui.c: 236: if(os.output_voltage>-1)
  6220  00A90E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6221  00A910  D00A               	goto	l1813
  6222                           
  6223                           ; BSR set to: 2
  6224                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6225  00A912  0E04               	movlw	4
  6226  00A914  EC54  F08F         	call	_system_output_on
  6227                           
  6228                           ;ui.c: 238: }
  6229  00A918  D006               	goto	l1813
  6230  00A91A                     l1810:
  6231                           
  6232                           ;ui.c: 239: else if(os.encoderCount<0)
  6233  00A91A  0102               	movlb	2	; () banked
  6234  00A91C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6235  00A91E  D003               	goto	l1813
  6236                           
  6237                           ; BSR set to: 2
  6238                           ;ui.c: 240: {
  6239                           ;ui.c: 241: system_output_off(OUTPUT_3);
  6240  00A920  0E04               	movlw	4
  6241  00A922  EC3E  F08D         	call	_system_output_off
  6242  00A926                     l1813:
  6243                           
  6244                           ;ui.c: 242: }
  6245                           ;ui.c: 243: if(os.buttonCount)
  6246  00A926  0102               	movlb	2	; () banked
  6247  00A928  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6248  00A92A  B4D8               	btfsc	status,2,c
  6249  00A92C  D002               	goto	l1814
  6250                           
  6251                           ; BSR set to: 2
  6252                           ;ui.c: 244: {
  6253                           ;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6254  00A92E  0E34               	movlw	52
  6255  00A930  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6256  00A932                     l1814:
  6257                           
  6258                           ; BSR set to: 2
  6259                           ;ui.c: 246: }
  6260                           ;ui.c: 247: os.encoderCount = 0;
  6261  00A932  0E00               	movlw	0
  6262  00A934  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6263                           
  6264                           ;ui.c: 248: os.buttonCount = 0;
  6265  00A936  0E00               	movlw	0
  6266  00A938  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6267                           
  6268                           ;ui.c: 249: break;
  6269  00A93A  0012               	return	
  6270  00A93C                     
  6271                           ; BSR set to: 2
  6272                           ;ui.c: 252: if(os.encoderCount>0)
  6273                           
  6274                           ; BSR set to: 2
  6275  00A93C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6276  00A93E  0A80               	xorlw	128
  6277  00A940  0F7F               	addlw	-129
  6278  00A942  A0D8               	btfss	status,0,c
  6279  00A944  D006               	goto	l1816
  6280                           
  6281                           ; BSR set to: 2
  6282                           ;ui.c: 253: {
  6283                           ;ui.c: 254: if(os.output_voltage>-1)
  6284  00A946  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6285  00A948  D00A               	goto	l1819
  6286                           
  6287                           ; BSR set to: 2
  6288                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6289  00A94A  0E08               	movlw	8
  6290  00A94C  EC54  F08F         	call	_system_output_on
  6291                           
  6292                           ;ui.c: 256: }
  6293  00A950  D006               	goto	l1819
  6294  00A952                     l1816:
  6295                           
  6296                           ;ui.c: 257: else if(os.encoderCount<0)
  6297  00A952  0102               	movlb	2	; () banked
  6298  00A954  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6299  00A956  D003               	goto	l1819
  6300                           
  6301                           ; BSR set to: 2
  6302                           ;ui.c: 258: {
  6303                           ;ui.c: 259: system_output_off(OUTPUT_4);
  6304  00A958  0E08               	movlw	8
  6305  00A95A  EC3E  F08D         	call	_system_output_off
  6306  00A95E                     l1819:
  6307                           
  6308                           ;ui.c: 260: }
  6309                           ;ui.c: 261: if(os.buttonCount)
  6310  00A95E  0102               	movlb	2	; () banked
  6311  00A960  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6312  00A962  B4D8               	btfsc	status,2,c
  6313  00A964  D002               	goto	l1820
  6314                           
  6315                           ; BSR set to: 2
  6316                           ;ui.c: 262: {
  6317                           ;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6318  00A966  0E30               	movlw	48
  6319  00A968  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6320  00A96A                     l1820:
  6321                           
  6322                           ; BSR set to: 2
  6323                           ;ui.c: 264: }
  6324                           ;ui.c: 265: os.encoderCount = 0;
  6325  00A96A  0E00               	movlw	0
  6326  00A96C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6327                           
  6328                           ;ui.c: 266: os.buttonCount = 0;
  6329  00A96E  0E00               	movlw	0
  6330  00A970  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6331                           
  6332                           ;ui.c: 267: break;
  6333  00A972  0012               	return	
  6334  00A974                     
  6335                           ; BSR set to: 2
  6336                           ;ui.c: 270: if(os.encoderCount>0)
  6337                           
  6338                           ; BSR set to: 2
  6339  00A974  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6340  00A976  0A80               	xorlw	128
  6341  00A978  0F7F               	addlw	-129
  6342  00A97A  A0D8               	btfss	status,0,c
  6343  00A97C  D002               	goto	l1822
  6344                           
  6345                           ; BSR set to: 2
  6346                           ;ui.c: 271: {
  6347                           ;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6348  00A97E  0E50               	movlw	80
  6349  00A980  D003               	goto	L5
  6350  00A982                     l1822:
  6351                           
  6352                           ; BSR set to: 2
  6353                           ;ui.c: 274: else if(os.encoderCount<0)
  6354                           
  6355                           ; BSR set to: 2
  6356  00A982  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6357  00A984  D002               	goto	l1824
  6358                           
  6359                           ; BSR set to: 2
  6360                           ;ui.c: 275: {
  6361                           ;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6362  00A986  0E30               	movlw	48
  6363  00A988                     L5:
  6364  00A988  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6365  00A98A                     l1824:
  6366                           
  6367                           ; BSR set to: 2
  6368                           ;ui.c: 277: }
  6369                           ;ui.c: 278: if(os.buttonCount)
  6370                           
  6371                           ; BSR set to: 2
  6372  00A98A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6373                           
  6374                           ; BSR set to: 2
  6375                           ;ui.c: 281: }
  6376                           ;ui.c: 282: os.encoderCount = 0;
  6377                           
  6378                           ; BSR set to: 2
  6379                           
  6380                           ;ui.c: 279: {
  6381                           ;ui.c: 280: ;
  6382  00A98C  0E00               	movlw	0
  6383  00A98E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6384                           
  6385                           ;ui.c: 283: os.buttonCount = 0;
  6386  00A990  0E00               	movlw	0
  6387  00A992  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6388                           
  6389                           ;ui.c: 284: break;
  6390  00A994  0012               	return	
  6391  00A996                     
  6392                           ; BSR set to: 2
  6393                           ;ui.c: 287: if(os.encoderCount>0)
  6394                           
  6395                           ; BSR set to: 2
  6396  00A996  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6397  00A998  0A80               	xorlw	128
  6398  00A99A  0F7F               	addlw	-129
  6399  00A99C  A0D8               	btfss	status,0,c
  6400  00A99E  D002               	goto	l1827
  6401                           
  6402                           ; BSR set to: 2
  6403                           ;ui.c: 288: {
  6404                           ;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6405  00A9A0  0E60               	movlw	96
  6406  00A9A2  D003               	goto	L6
  6407  00A9A4                     l1827:
  6408                           
  6409                           ; BSR set to: 2
  6410                           ;ui.c: 291: else if(os.encoderCount<0)
  6411                           
  6412                           ; BSR set to: 2
  6413  00A9A4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6414  00A9A6  D002               	goto	l1829
  6415                           
  6416                           ; BSR set to: 2
  6417                           ;ui.c: 292: {
  6418                           ;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6419  00A9A8  0E40               	movlw	64
  6420  00A9AA                     L6:
  6421  00A9AA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6422  00A9AC                     l1829:
  6423                           
  6424                           ; BSR set to: 2
  6425                           ;ui.c: 294: }
  6426                           ;ui.c: 295: if(os.buttonCount)
  6427                           
  6428                           ; BSR set to: 2
  6429  00A9AC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6430                           
  6431                           ; BSR set to: 2
  6432                           ;ui.c: 298: }
  6433                           ;ui.c: 299: os.encoderCount = 0;
  6434                           
  6435                           ; BSR set to: 2
  6436                           
  6437                           ;ui.c: 296: {
  6438                           ;ui.c: 297: ;
  6439  00A9AE  0E00               	movlw	0
  6440  00A9B0  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6441                           
  6442                           ;ui.c: 300: os.buttonCount = 0;
  6443  00A9B2  0E00               	movlw	0
  6444  00A9B4  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6445                           
  6446                           ;ui.c: 301: break;
  6447  00A9B6  0012               	return	
  6448  00A9B8                     
  6449                           ; BSR set to: 2
  6450                           ;ui.c: 304: if(os.encoderCount>0)
  6451                           
  6452                           ; BSR set to: 2
  6453  00A9B8  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6454  00A9BA  0A80               	xorlw	128
  6455  00A9BC  0F7F               	addlw	-129
  6456  00A9BE  A0D8               	btfss	status,0,c
  6457  00A9C0  D002               	goto	l1832
  6458                           
  6459                           ; BSR set to: 2
  6460                           ;ui.c: 305: {
  6461                           ;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6462  00A9C2  0E00               	movlw	0
  6463  00A9C4  D003               	goto	L7
  6464  00A9C6                     l1832:
  6465                           
  6466                           ; BSR set to: 2
  6467                           ;ui.c: 308: else if(os.encoderCount<0)
  6468                           
  6469                           ; BSR set to: 2
  6470  00A9C6  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6471  00A9C8  D002               	goto	l1834
  6472                           
  6473                           ; BSR set to: 2
  6474                           ;ui.c: 309: {
  6475                           ;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6476  00A9CA  0E50               	movlw	80
  6477  00A9CC                     L7:
  6478  00A9CC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6479  00A9CE                     l1834:
  6480                           
  6481                           ; BSR set to: 2
  6482                           ;ui.c: 311: }
  6483                           ;ui.c: 312: if(os.buttonCount)
  6484                           
  6485                           ; BSR set to: 2
  6486  00A9CE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6487                           
  6488                           ; BSR set to: 2
  6489                           ;ui.c: 315: }
  6490                           ;ui.c: 316: os.encoderCount = 0;
  6491                           
  6492                           ; BSR set to: 2
  6493                           
  6494                           ;ui.c: 313: {
  6495                           ;ui.c: 314: ;
  6496  00A9D0  0E00               	movlw	0
  6497  00A9D2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6498                           
  6499                           ;ui.c: 317: os.buttonCount = 0;
  6500  00A9D4  0E00               	movlw	0
  6501  00A9D6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6502                           
  6503                           ;ui.c: 318: break;
  6504  00A9D8  0012               	return	
  6505  00A9DA                     
  6506                           ; BSR set to: 2
  6507                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6508                           
  6509                           ; BSR set to: 2
  6510  00A9DA  0E00               	movlw	0
  6511  00A9DC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6512                           
  6513                           ;ui.c: 322: }
  6514  00A9DE  0012               	return	
  6515  00A9E0                     l1744:
  6516                           
  6517                           ; BSR set to: 2
  6518  00A9E0  0102               	movlb	2	; () banked
  6519  00A9E2  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6520                           
  6521                           ; Switch size 1, requested type "space"
  6522                           ; Number of cases is 17, Range of values is 0 to 96
  6523                           ; switch strategies available:
  6524                           ; Name         Instructions Cycles
  6525                           ; simple_byte           52    27 (average)
  6526                           ;	Chosen strategy is simple_byte
  6527  00A9E4  0A00               	xorlw	0	; case 0
  6528  00A9E6  B4D8               	btfsc	status,2,c
  6529  00A9E8  D668               	goto	l1745
  6530  00A9EA  0A10               	xorlw	16	; case 16
  6531  00A9EC  B4D8               	btfsc	status,2,c
  6532  00A9EE  D677               	goto	l1751
  6533  00A9F0  0A01               	xorlw	1	; case 17
  6534  00A9F2  B4D8               	btfsc	status,2,c
  6535  00A9F4  D689               	goto	l1756
  6536  00A9F6  0A03               	xorlw	3	; case 18
  6537  00A9F8  B4D8               	btfsc	status,2,c
  6538  00A9FA  D6A0               	goto	l1761
  6539  00A9FC  0A01               	xorlw	1	; case 19
  6540  00A9FE  B4D8               	btfsc	status,2,c
  6541  00AA00  D6B7               	goto	l1766
  6542  00AA02  0A07               	xorlw	7	; case 20
  6543  00AA04  B4D8               	btfsc	status,2,c
  6544  00AA06  D6CB               	goto	l1771
  6545  00AA08  0A01               	xorlw	1	; case 21
  6546  00AA0A  B4D8               	btfsc	status,2,c
  6547  00AA0C  D6DF               	goto	l1776
  6548  00AA0E  0A03               	xorlw	3	; case 22
  6549  00AA10  B4D8               	btfsc	status,2,c
  6550  00AA12  D6F3               	goto	l1781
  6551  00AA14  0A36               	xorlw	54	; case 32
  6552  00AA16  B4D8               	btfsc	status,2,c
  6553  00AA18  D70A               	goto	l1786
  6554  00AA1A  0A10               	xorlw	16	; case 48
  6555  00AA1C  B4D8               	btfsc	status,2,c
  6556  00AA1E  D725               	goto	l1792
  6557  00AA20  0A01               	xorlw	1	; case 49
  6558  00AA22  B4D8               	btfsc	status,2,c
  6559  00AA24  D737               	goto	l1797
  6560  00AA26  0A03               	xorlw	3	; case 50
  6561  00AA28  B4D8               	btfsc	status,2,c
  6562  00AA2A  D750               	goto	l1803
  6563  00AA2C  0A01               	xorlw	1	; case 51
  6564  00AA2E  B4D8               	btfsc	status,2,c
  6565  00AA30  D769               	goto	l1809
  6566  00AA32  0A07               	xorlw	7	; case 52
  6567  00AA34  B4D8               	btfsc	status,2,c
  6568  00AA36  D782               	goto	l1815
  6569  00AA38  0A74               	xorlw	116	; case 64
  6570  00AA3A  B4D8               	btfsc	status,2,c
  6571  00AA3C  D79B               	goto	l1821
  6572  00AA3E  0A10               	xorlw	16	; case 80
  6573  00AA40  B4D8               	btfsc	status,2,c
  6574  00AA42  D7A9               	goto	l1826
  6575  00AA44  0A30               	xorlw	48	; case 96
  6576  00AA46  B4D8               	btfsc	status,2,c
  6577  00AA48  D7B7               	goto	l1831
  6578  00AA4A  D7C7               	goto	l1836
  6579  00AA4C                     __end_of__ui_encoder:
  6580                           	opt stack 0
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           intcon3	equ	0xFF0
  6586                           postinc0	equ	0xFEE
  6587                           wreg	equ	0xFE8
  6588                           postdec1	equ	0xFE5
  6589                           plusw1	equ	0xFE3
  6590                           fsr1h	equ	0xFE2
  6591                           fsr1l	equ	0xFE1
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           plusw2	equ	0xFDB
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _system_output_toggle *****************
  6600 ;; Defined at:
  6601 ;;		line 499 in file "os.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  output          1    wreg     enum E8135
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  output          1    2[BANK0 ] enum E8135
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6618 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6619 ;;Total ram usage:        1 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:   11
  6622 ;; This function calls:
  6623 ;;		_system_output_is_on
  6624 ;;		_system_output_off
  6625 ;;		_system_output_on
  6626 ;; This function is called by:
  6627 ;;		__ui_encoder
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text9
  6632  012816                     __ptext9:
  6633                           	opt stack 0
  6634  012816                     _system_output_toggle:
  6635                           	opt stack 17
  6636                           
  6637                           ; BSR set to: 2
  6638                           ;incstack = 0
  6639                           ;system_output_toggle@output stored from wreg
  6640  012816  0100               	movlb	0	; () banked
  6641  012818  6F62               	movwf	system_output_toggle@output& (0+255),b
  6642                           
  6643                           ;os.c: 501: if(system_output_is_on(output))
  6644  01281A  0100               	movlb	0	; () banked
  6645  01281C  5162               	movf	system_output_toggle@output& (0+255),w,b
  6646  01281E  EC88  F095         	call	_system_output_is_on
  6647  012822  0900               	iorlw	0
  6648  012824  B4D8               	btfsc	status,2,c
  6649  012826  D005               	goto	l1401
  6650                           
  6651                           ;os.c: 502: system_output_off(output);
  6652  012828  0100               	movlb	0	; () banked
  6653  01282A  5162               	movf	system_output_toggle@output& (0+255),w,b
  6654  01282C  EC3E  F08D         	call	_system_output_off
  6655  012830  0012               	return	
  6656  012832                     l1401:
  6657                           
  6658                           ;os.c: 503: else
  6659                           ;os.c: 504: system_output_on(output);
  6660  012832  0100               	movlb	0	; () banked
  6661  012834  5162               	movf	system_output_toggle@output& (0+255),w,b
  6662  012836  EC54  F08F         	call	_system_output_on
  6663  01283A  0012               	return	
  6664  01283C                     __end_of_system_output_toggle:
  6665                           	opt stack 0
  6666                           tblptru	equ	0xFF8
  6667                           tblptrh	equ	0xFF7
  6668                           tblptrl	equ	0xFF6
  6669                           tablat	equ	0xFF5
  6670                           intcon3	equ	0xFF0
  6671                           postinc0	equ	0xFEE
  6672                           wreg	equ	0xFE8
  6673                           postdec1	equ	0xFE5
  6674                           plusw1	equ	0xFE3
  6675                           fsr1h	equ	0xFE2
  6676                           fsr1l	equ	0xFE1
  6677                           postinc2	equ	0xFDE
  6678                           postdec2	equ	0xFDD
  6679                           plusw2	equ	0xFDB
  6680                           fsr2h	equ	0xFDA
  6681                           fsr2l	equ	0xFD9
  6682                           status	equ	0xFD8
  6683                           
  6684 ;; *************** function _rtcc_increment_year *****************
  6685 ;; Defined at:
  6686 ;;		line 126 in file "rtcc.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  year            1    8[BANK0 ] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6703 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;Total ram usage:        1 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:   12
  6707 ;; This function calls:
  6708 ;;		__rtcc_increment_bcd
  6709 ;;		_rtcc_get_year
  6710 ;;		_rtcc_set_year
  6711 ;; This function is called by:
  6712 ;;		__ui_encoder
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text10
  6717  0128AC                     __ptext10:
  6718                           	opt stack 0
  6719  0128AC                     _rtcc_increment_year:
  6720                           	opt stack 16
  6721                           
  6722                           ;rtcc.c: 128: uint8_t year = rtcc_get_year();
  6723                           
  6724                           ;incstack = 0
  6725  0128AC  EC9D  F096         	call	_rtcc_get_year	;wreg free
  6726  0128B0  0100               	movlb	0	; () banked
  6727  0128B2  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;rtcc.c: 129: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6731  0128B4  0E00               	movlw	0
  6732  0128B6  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6733  0128B8  0E99               	movlw	153
  6734  0128BA  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6735  0128BC  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6736  0128BE  ECC6  F092         	call	__rtcc_increment_bcd
  6737  0128C2  0100               	movlb	0	; () banked
  6738  0128C4  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;rtcc.c: 130: rtcc_set_year(year);
  6742  0128C6  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6743  0128C8  ECBA  F095         	call	_rtcc_set_year
  6744  0128CC  0012               	return		;funcret
  6745  0128CE                     __end_of_rtcc_increment_year:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           intcon3	equ	0xFF0
  6752                           postinc0	equ	0xFEE
  6753                           wreg	equ	0xFE8
  6754                           postdec1	equ	0xFE5
  6755                           plusw1	equ	0xFE3
  6756                           fsr1h	equ	0xFE2
  6757                           fsr1l	equ	0xFE1
  6758                           postinc2	equ	0xFDE
  6759                           postdec2	equ	0xFDD
  6760                           plusw2	equ	0xFDB
  6761                           fsr2h	equ	0xFDA
  6762                           fsr2l	equ	0xFD9
  6763                           status	equ	0xFD8
  6764                           
  6765 ;; *************** function _rtcc_increment_seconds *****************
  6766 ;; Defined at:
  6767 ;;		line 316 in file "rtcc.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  seconds         1    8[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;Total ram usage:        1 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:   12
  6788 ;; This function calls:
  6789 ;;		__rtcc_increment_bcd
  6790 ;;		_rtcc_get_seconds
  6791 ;;		_rtcc_set_seconds
  6792 ;; This function is called by:
  6793 ;;		__ui_encoder
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text11
  6798  0128CE                     __ptext11:
  6799                           	opt stack 0
  6800  0128CE                     _rtcc_increment_seconds:
  6801                           	opt stack 16
  6802                           
  6803                           ;rtcc.c: 318: uint8_t seconds = rtcc_get_seconds();
  6804                           
  6805                           ;incstack = 0
  6806  0128CE  ECA4  F096         	call	_rtcc_get_seconds	;wreg free
  6807  0128D2  0100               	movlb	0	; () banked
  6808  0128D4  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;rtcc.c: 319: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6812  0128D6  0E00               	movlw	0
  6813  0128D8  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6814  0128DA  0E59               	movlw	89
  6815  0128DC  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6816  0128DE  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6817  0128E0  ECC6  F092         	call	__rtcc_increment_bcd
  6818  0128E4  0100               	movlb	0	; () banked
  6819  0128E6  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;rtcc.c: 320: rtcc_set_seconds(seconds);
  6823  0128E8  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6824  0128EA  ECC6  F095         	call	_rtcc_set_seconds
  6825  0128EE  0012               	return		;funcret
  6826  0128F0                     __end_of_rtcc_increment_seconds:
  6827                           	opt stack 0
  6828                           tblptru	equ	0xFF8
  6829                           tblptrh	equ	0xFF7
  6830                           tblptrl	equ	0xFF6
  6831                           tablat	equ	0xFF5
  6832                           intcon3	equ	0xFF0
  6833                           postinc0	equ	0xFEE
  6834                           wreg	equ	0xFE8
  6835                           postdec1	equ	0xFE5
  6836                           plusw1	equ	0xFE3
  6837                           fsr1h	equ	0xFE2
  6838                           fsr1l	equ	0xFE1
  6839                           postinc2	equ	0xFDE
  6840                           postdec2	equ	0xFDD
  6841                           plusw2	equ	0xFDB
  6842                           fsr2h	equ	0xFDA
  6843                           fsr2l	equ	0xFD9
  6844                           status	equ	0xFD8
  6845                           
  6846 ;; *************** function _rtcc_increment_month *****************
  6847 ;; Defined at:
  6848 ;;		line 164 in file "rtcc.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  month           1    8[BANK0 ] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2, status,0, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;Total ram usage:        1 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:   12
  6869 ;; This function calls:
  6870 ;;		__rtcc_increment_bcd
  6871 ;;		_rtcc_get_month
  6872 ;;		_rtcc_set_month
  6873 ;; This function is called by:
  6874 ;;		__ui_encoder
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text12
  6879  0128F0                     __ptext12:
  6880                           	opt stack 0
  6881  0128F0                     _rtcc_increment_month:
  6882                           	opt stack 16
  6883                           
  6884                           ;rtcc.c: 166: uint8_t month = rtcc_get_month();
  6885                           
  6886                           ;incstack = 0
  6887  0128F0  ECAB  F096         	call	_rtcc_get_month	;wreg free
  6888  0128F4  0100               	movlb	0	; () banked
  6889  0128F6  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;rtcc.c: 167: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  6893  0128F8  0E01               	movlw	1
  6894  0128FA  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6895  0128FC  0E12               	movlw	18
  6896  0128FE  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6897  012900  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6898  012902  ECC6  F092         	call	__rtcc_increment_bcd
  6899  012906  0100               	movlb	0	; () banked
  6900  012908  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;rtcc.c: 168: rtcc_set_month(month);
  6904  01290A  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6905  01290C  ECD2  F095         	call	_rtcc_set_month
  6906  012910  0012               	return		;funcret
  6907  012912                     __end_of_rtcc_increment_month:
  6908                           	opt stack 0
  6909                           tblptru	equ	0xFF8
  6910                           tblptrh	equ	0xFF7
  6911                           tblptrl	equ	0xFF6
  6912                           tablat	equ	0xFF5
  6913                           intcon3	equ	0xFF0
  6914                           postinc0	equ	0xFEE
  6915                           wreg	equ	0xFE8
  6916                           postdec1	equ	0xFE5
  6917                           plusw1	equ	0xFE3
  6918                           fsr1h	equ	0xFE2
  6919                           fsr1l	equ	0xFE1
  6920                           postinc2	equ	0xFDE
  6921                           postdec2	equ	0xFDD
  6922                           plusw2	equ	0xFDB
  6923                           fsr2h	equ	0xFDA
  6924                           fsr2l	equ	0xFD9
  6925                           status	equ	0xFD8
  6926                           
  6927 ;; *************** function _rtcc_increment_minutes *****************
  6928 ;; Defined at:
  6929 ;;		line 278 in file "rtcc.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  minutes         1    8[BANK0 ] unsigned char 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;Total ram usage:        1 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:   12
  6950 ;; This function calls:
  6951 ;;		__rtcc_increment_bcd
  6952 ;;		_rtcc_get_minutes
  6953 ;;		_rtcc_set_minutes
  6954 ;; This function is called by:
  6955 ;;		__ui_encoder
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text13
  6960  012912                     __ptext13:
  6961                           	opt stack 0
  6962  012912                     _rtcc_increment_minutes:
  6963                           	opt stack 16
  6964                           
  6965                           ;rtcc.c: 280: uint8_t minutes = rtcc_get_minutes();
  6966                           
  6967                           ;incstack = 0
  6968  012912  ECB2  F096         	call	_rtcc_get_minutes	;wreg free
  6969  012916  0100               	movlb	0	; () banked
  6970  012918  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;rtcc.c: 281: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  6974  01291A  0E00               	movlw	0
  6975  01291C  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6976  01291E  0E59               	movlw	89
  6977  012920  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6978  012922  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6979  012924  ECC6  F092         	call	__rtcc_increment_bcd
  6980  012928  0100               	movlb	0	; () banked
  6981  01292A  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;rtcc.c: 282: rtcc_set_minutes(minutes);
  6985  01292C  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6986  01292E  ECDE  F095         	call	_rtcc_set_minutes
  6987  012932  0012               	return		;funcret
  6988  012934                     __end_of_rtcc_increment_minutes:
  6989                           	opt stack 0
  6990                           tblptru	equ	0xFF8
  6991                           tblptrh	equ	0xFF7
  6992                           tblptrl	equ	0xFF6
  6993                           tablat	equ	0xFF5
  6994                           intcon3	equ	0xFF0
  6995                           postinc0	equ	0xFEE
  6996                           wreg	equ	0xFE8
  6997                           postdec1	equ	0xFE5
  6998                           plusw1	equ	0xFE3
  6999                           fsr1h	equ	0xFE2
  7000                           fsr1l	equ	0xFE1
  7001                           postinc2	equ	0xFDE
  7002                           postdec2	equ	0xFDD
  7003                           plusw2	equ	0xFDB
  7004                           fsr2h	equ	0xFDA
  7005                           fsr2l	equ	0xFD9
  7006                           status	equ	0xFD8
  7007                           
  7008 ;; *************** function _rtcc_increment_hours *****************
  7009 ;; Defined at:
  7010 ;;		line 240 in file "rtcc.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  hours           1    8[BANK0 ] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;Total ram usage:        1 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:   12
  7031 ;; This function calls:
  7032 ;;		__rtcc_increment_bcd
  7033 ;;		_rtcc_get_hours
  7034 ;;		_rtcc_set_hours
  7035 ;; This function is called by:
  7036 ;;		__ui_encoder
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text14
  7041  012934                     __ptext14:
  7042                           	opt stack 0
  7043  012934                     _rtcc_increment_hours:
  7044                           	opt stack 16
  7045                           
  7046                           ;rtcc.c: 242: uint8_t hours = rtcc_get_hours();
  7047                           
  7048                           ;incstack = 0
  7049  012934  ECB9  F096         	call	_rtcc_get_hours	;wreg free
  7050  012938  0100               	movlb	0	; () banked
  7051  01293A  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;rtcc.c: 243: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  7055  01293C  0E00               	movlw	0
  7056  01293E  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7057  012940  0E23               	movlw	35
  7058  012942  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7059  012944  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7060  012946  ECC6  F092         	call	__rtcc_increment_bcd
  7061  01294A  0100               	movlb	0	; () banked
  7062  01294C  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;rtcc.c: 244: rtcc_set_hours(hours);
  7066  01294E  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7067  012950  ECEA  F095         	call	_rtcc_set_hours
  7068  012954  0012               	return		;funcret
  7069  012956                     __end_of_rtcc_increment_hours:
  7070                           	opt stack 0
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           intcon3	equ	0xFF0
  7076                           postinc0	equ	0xFEE
  7077                           wreg	equ	0xFE8
  7078                           postdec1	equ	0xFE5
  7079                           plusw1	equ	0xFE3
  7080                           fsr1h	equ	0xFE2
  7081                           fsr1l	equ	0xFE1
  7082                           postinc2	equ	0xFDE
  7083                           postdec2	equ	0xFDD
  7084                           plusw2	equ	0xFDB
  7085                           fsr2h	equ	0xFDA
  7086                           fsr2l	equ	0xFD9
  7087                           status	equ	0xFD8
  7088                           
  7089 ;; *************** function _rtcc_increment_day *****************
  7090 ;; Defined at:
  7091 ;;		line 202 in file "rtcc.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  day             1    8[BANK0 ] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;Total ram usage:        1 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   12
  7112 ;; This function calls:
  7113 ;;		__number_of_days
  7114 ;;		__rtcc_increment_bcd
  7115 ;;		_rtcc_get_day
  7116 ;;		_rtcc_set_day
  7117 ;; This function is called by:
  7118 ;;		__ui_encoder
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text15
  7123  01283C                     __ptext15:
  7124                           	opt stack 0
  7125  01283C                     _rtcc_increment_day:
  7126                           	opt stack 16
  7127                           
  7128                           ;rtcc.c: 204: uint8_t day = rtcc_get_day();
  7129                           
  7130                           ;incstack = 0
  7131  01283C  ECC0  F096         	call	_rtcc_get_day	;wreg free
  7132  012840  0100               	movlb	0	; () banked
  7133  012842  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;rtcc.c: 205: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7137  012844  0E01               	movlw	1
  7138  012846  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7139  012848  EC89  F089         	call	__number_of_days	;wreg free
  7140  01284C  0100               	movlb	0	; () banked
  7141  01284E  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7142  012850  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7143  012852  ECC6  F092         	call	__rtcc_increment_bcd
  7144  012856  0100               	movlb	0	; () banked
  7145  012858  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;rtcc.c: 206: rtcc_set_day(day);
  7149  01285A  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7150  01285C  ECF6  F095         	call	_rtcc_set_day
  7151  012860  0012               	return		;funcret
  7152  012862                     __end_of_rtcc_increment_day:
  7153                           	opt stack 0
  7154                           tblptru	equ	0xFF8
  7155                           tblptrh	equ	0xFF7
  7156                           tblptrl	equ	0xFF6
  7157                           tablat	equ	0xFF5
  7158                           intcon3	equ	0xFF0
  7159                           postinc0	equ	0xFEE
  7160                           wreg	equ	0xFE8
  7161                           postdec1	equ	0xFE5
  7162                           plusw1	equ	0xFE3
  7163                           fsr1h	equ	0xFE2
  7164                           fsr1l	equ	0xFE1
  7165                           postinc2	equ	0xFDE
  7166                           postdec2	equ	0xFDD
  7167                           plusw2	equ	0xFDB
  7168                           fsr2h	equ	0xFDA
  7169                           fsr2l	equ	0xFD9
  7170                           status	equ	0xFD8
  7171                           
  7172 ;; *************** function __rtcc_increment_bcd *****************
  7173 ;; Defined at:
  7174 ;;		line 34 in file "rtcc.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;  value           1    wreg     unsigned char 
  7177 ;;  min             1    4[BANK0 ] unsigned char 
  7178 ;;  max             1    5[BANK0 ] unsigned char 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;  value           1    7[BANK0 ] unsigned char 
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      unsigned char 
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7194 ;;Total ram usage:        4 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:   10
  7197 ;; This function calls:
  7198 ;;		Nothing
  7199 ;; This function is called by:
  7200 ;;		_rtcc_increment_year
  7201 ;;		_rtcc_increment_month
  7202 ;;		_rtcc_increment_day
  7203 ;;		_rtcc_increment_hours
  7204 ;;		_rtcc_increment_minutes
  7205 ;;		_rtcc_increment_seconds
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text16
  7210  01258C                     __ptext16:
  7211                           	opt stack 0
  7212  01258C                     __rtcc_increment_bcd:
  7213                           	opt stack 17
  7214                           
  7215                           ;incstack = 0
  7216                           ;__rtcc_increment_bcd@value stored from wreg
  7217  01258C  0100               	movlb	0	; () banked
  7218  01258E  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7219                           
  7220                           ;rtcc.c: 36: if(value==max)
  7221  012590  0100               	movlb	0	; () banked
  7222  012592  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7223  012594  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7224  012596  A4D8               	btfss	status,2,c
  7225  012598  D002               	goto	l2253
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;rtcc.c: 37: return min;
  7229  01259A  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7230  01259C  0012               	return	
  7231  01259E                     l2253:
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;rtcc.c: 38: ++value;
  7235                           
  7236                           ; BSR set to: 0
  7237  01259E  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7238                           
  7239                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7240  0125A0  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7241  0125A4  0E0F               	movlw	15
  7242  0125A6  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7243  0125A8  0E09               	movlw	9
  7244  0125AA  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7245  0125AC  D004               	goto	l2255
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;rtcc.c: 40: {
  7249                           ;rtcc.c: 41: value += 0x10;
  7250  0125AE  0E10               	movlw	16
  7251  0125B0  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7252                           
  7253                           ;rtcc.c: 42: value &= 0xF0;
  7254  0125B2  0EF0               	movlw	240
  7255  0125B4  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7256  0125B6                     l2255:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;rtcc.c: 43: }
  7260                           ;rtcc.c: 44: return value;
  7261                           
  7262                           ; BSR set to: 0
  7263  0125B6  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7264  0125B8  0012               	return	
  7265  0125BA                     __end_of__rtcc_increment_bcd:
  7266                           	opt stack 0
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           intcon3	equ	0xFF0
  7272                           postinc0	equ	0xFEE
  7273                           wreg	equ	0xFE8
  7274                           postdec1	equ	0xFE5
  7275                           plusw1	equ	0xFE3
  7276                           fsr1h	equ	0xFE2
  7277                           fsr1l	equ	0xFE1
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           plusw2	equ	0xFDB
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8
  7284                           
  7285 ;; *************** function _rtcc_decrement_year *****************
  7286 ;; Defined at:
  7287 ;;		line 133 in file "rtcc.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;		None
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  year            1    8[BANK0 ] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7305 ;;Total ram usage:        1 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:   12
  7308 ;; This function calls:
  7309 ;;		__rtcc_decrement_bcd
  7310 ;;		_rtcc_get_year
  7311 ;;		_rtcc_set_year
  7312 ;; This function is called by:
  7313 ;;		__ui_encoder
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text17
  7318  012956                     __ptext17:
  7319                           	opt stack 0
  7320  012956                     _rtcc_decrement_year:
  7321                           	opt stack 16
  7322                           
  7323                           ;rtcc.c: 135: uint8_t year = rtcc_get_year();
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;incstack = 0
  7327  012956  EC9D  F096         	call	_rtcc_get_year	;wreg free
  7328  01295A  0100               	movlb	0	; () banked
  7329  01295C  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;rtcc.c: 136: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7333  01295E  0E00               	movlw	0
  7334  012960  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7335  012962  0E99               	movlw	153
  7336  012964  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7337  012966  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7338  012968  ECDD  F092         	call	__rtcc_decrement_bcd
  7339  01296C  0100               	movlb	0	; () banked
  7340  01296E  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;rtcc.c: 137: rtcc_set_year(year);
  7344  012970  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7345  012972  ECBA  F095         	call	_rtcc_set_year
  7346  012976  0012               	return		;funcret
  7347  012978                     __end_of_rtcc_decrement_year:
  7348                           	opt stack 0
  7349                           tblptru	equ	0xFF8
  7350                           tblptrh	equ	0xFF7
  7351                           tblptrl	equ	0xFF6
  7352                           tablat	equ	0xFF5
  7353                           intcon3	equ	0xFF0
  7354                           postinc0	equ	0xFEE
  7355                           wreg	equ	0xFE8
  7356                           postdec1	equ	0xFE5
  7357                           plusw1	equ	0xFE3
  7358                           fsr1h	equ	0xFE2
  7359                           fsr1l	equ	0xFE1
  7360                           postinc2	equ	0xFDE
  7361                           postdec2	equ	0xFDD
  7362                           plusw2	equ	0xFDB
  7363                           fsr2h	equ	0xFDA
  7364                           fsr2l	equ	0xFD9
  7365                           status	equ	0xFD8
  7366                           
  7367 ;; *************** function _rtcc_decrement_seconds *****************
  7368 ;; Defined at:
  7369 ;;		line 323 in file "rtcc.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  seconds         1    8[BANK0 ] unsigned char 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;Total ram usage:        1 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:   12
  7390 ;; This function calls:
  7391 ;;		__rtcc_decrement_bcd
  7392 ;;		_rtcc_get_seconds
  7393 ;;		_rtcc_set_seconds
  7394 ;; This function is called by:
  7395 ;;		__ui_encoder
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text18
  7400  012978                     __ptext18:
  7401                           	opt stack 0
  7402  012978                     _rtcc_decrement_seconds:
  7403                           	opt stack 16
  7404                           
  7405                           ;rtcc.c: 325: uint8_t seconds = rtcc_get_seconds();
  7406                           
  7407                           ;incstack = 0
  7408  012978  ECA4  F096         	call	_rtcc_get_seconds	;wreg free
  7409  01297C  0100               	movlb	0	; () banked
  7410  01297E  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;rtcc.c: 326: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7414  012980  0E00               	movlw	0
  7415  012982  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7416  012984  0E59               	movlw	89
  7417  012986  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7418  012988  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7419  01298A  ECDD  F092         	call	__rtcc_decrement_bcd
  7420  01298E  0100               	movlb	0	; () banked
  7421  012990  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;rtcc.c: 327: rtcc_set_seconds(seconds);
  7425  012992  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7426  012994  ECC6  F095         	call	_rtcc_set_seconds
  7427  012998  0012               	return		;funcret
  7428  01299A                     __end_of_rtcc_decrement_seconds:
  7429                           	opt stack 0
  7430                           tblptru	equ	0xFF8
  7431                           tblptrh	equ	0xFF7
  7432                           tblptrl	equ	0xFF6
  7433                           tablat	equ	0xFF5
  7434                           intcon3	equ	0xFF0
  7435                           postinc0	equ	0xFEE
  7436                           wreg	equ	0xFE8
  7437                           postdec1	equ	0xFE5
  7438                           plusw1	equ	0xFE3
  7439                           fsr1h	equ	0xFE2
  7440                           fsr1l	equ	0xFE1
  7441                           postinc2	equ	0xFDE
  7442                           postdec2	equ	0xFDD
  7443                           plusw2	equ	0xFDB
  7444                           fsr2h	equ	0xFDA
  7445                           fsr2l	equ	0xFD9
  7446                           status	equ	0xFD8
  7447                           
  7448 ;; *************** function _rtcc_decrement_month *****************
  7449 ;; Defined at:
  7450 ;;		line 171 in file "rtcc.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  month           1    8[BANK0 ] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7468 ;;Total ram usage:        1 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:   12
  7471 ;; This function calls:
  7472 ;;		__rtcc_decrement_bcd
  7473 ;;		_rtcc_get_month
  7474 ;;		_rtcc_set_month
  7475 ;; This function is called by:
  7476 ;;		__ui_encoder
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text19
  7481  01299A                     __ptext19:
  7482                           	opt stack 0
  7483  01299A                     _rtcc_decrement_month:
  7484                           	opt stack 16
  7485                           
  7486                           ;rtcc.c: 173: uint8_t month = rtcc_get_month();
  7487                           
  7488                           ;incstack = 0
  7489  01299A  ECAB  F096         	call	_rtcc_get_month	;wreg free
  7490  01299E  0100               	movlb	0	; () banked
  7491  0129A0  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;rtcc.c: 174: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7495  0129A2  0E01               	movlw	1
  7496  0129A4  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7497  0129A6  0E12               	movlw	18
  7498  0129A8  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7499  0129AA  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7500  0129AC  ECDD  F092         	call	__rtcc_decrement_bcd
  7501  0129B0  0100               	movlb	0	; () banked
  7502  0129B2  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;rtcc.c: 175: rtcc_set_month(month);
  7506  0129B4  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7507  0129B6  ECD2  F095         	call	_rtcc_set_month
  7508  0129BA  0012               	return		;funcret
  7509  0129BC                     __end_of_rtcc_decrement_month:
  7510                           	opt stack 0
  7511                           tblptru	equ	0xFF8
  7512                           tblptrh	equ	0xFF7
  7513                           tblptrl	equ	0xFF6
  7514                           tablat	equ	0xFF5
  7515                           intcon3	equ	0xFF0
  7516                           postinc0	equ	0xFEE
  7517                           wreg	equ	0xFE8
  7518                           postdec1	equ	0xFE5
  7519                           plusw1	equ	0xFE3
  7520                           fsr1h	equ	0xFE2
  7521                           fsr1l	equ	0xFE1
  7522                           postinc2	equ	0xFDE
  7523                           postdec2	equ	0xFDD
  7524                           plusw2	equ	0xFDB
  7525                           fsr2h	equ	0xFDA
  7526                           fsr2l	equ	0xFD9
  7527                           status	equ	0xFD8
  7528                           
  7529 ;; *************** function _rtcc_decrement_minutes *****************
  7530 ;; Defined at:
  7531 ;;		line 285 in file "rtcc.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;  minutes         1    8[BANK0 ] unsigned char 
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      void 
  7538 ;; Registers used:
  7539 ;;		wreg, status,2, status,0, cstack
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7549 ;;Total ram usage:        1 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:   12
  7552 ;; This function calls:
  7553 ;;		__rtcc_decrement_bcd
  7554 ;;		_rtcc_get_minutes
  7555 ;;		_rtcc_set_minutes
  7556 ;; This function is called by:
  7557 ;;		__ui_encoder
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text20
  7562  0129BC                     __ptext20:
  7563                           	opt stack 0
  7564  0129BC                     _rtcc_decrement_minutes:
  7565                           	opt stack 16
  7566                           
  7567                           ;rtcc.c: 287: uint8_t minutes = rtcc_get_minutes();
  7568                           
  7569                           ;incstack = 0
  7570  0129BC  ECB2  F096         	call	_rtcc_get_minutes	;wreg free
  7571  0129C0  0100               	movlb	0	; () banked
  7572  0129C2  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;rtcc.c: 288: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7576  0129C4  0E00               	movlw	0
  7577  0129C6  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7578  0129C8  0E59               	movlw	89
  7579  0129CA  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7580  0129CC  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7581  0129CE  ECDD  F092         	call	__rtcc_decrement_bcd
  7582  0129D2  0100               	movlb	0	; () banked
  7583  0129D4  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;rtcc.c: 289: rtcc_set_minutes(minutes);
  7587  0129D6  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7588  0129D8  ECDE  F095         	call	_rtcc_set_minutes
  7589  0129DC  0012               	return		;funcret
  7590  0129DE                     __end_of_rtcc_decrement_minutes:
  7591                           	opt stack 0
  7592                           tblptru	equ	0xFF8
  7593                           tblptrh	equ	0xFF7
  7594                           tblptrl	equ	0xFF6
  7595                           tablat	equ	0xFF5
  7596                           intcon3	equ	0xFF0
  7597                           postinc0	equ	0xFEE
  7598                           wreg	equ	0xFE8
  7599                           postdec1	equ	0xFE5
  7600                           plusw1	equ	0xFE3
  7601                           fsr1h	equ	0xFE2
  7602                           fsr1l	equ	0xFE1
  7603                           postinc2	equ	0xFDE
  7604                           postdec2	equ	0xFDD
  7605                           plusw2	equ	0xFDB
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _rtcc_decrement_hours *****************
  7611 ;; Defined at:
  7612 ;;		line 247 in file "rtcc.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  hours           1    8[BANK0 ] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:        1 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:   12
  7633 ;; This function calls:
  7634 ;;		__rtcc_decrement_bcd
  7635 ;;		_rtcc_get_hours
  7636 ;;		_rtcc_set_hours
  7637 ;; This function is called by:
  7638 ;;		__ui_encoder
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text21
  7643  0129DE                     __ptext21:
  7644                           	opt stack 0
  7645  0129DE                     _rtcc_decrement_hours:
  7646                           	opt stack 16
  7647                           
  7648                           ;rtcc.c: 249: uint8_t hours = rtcc_get_hours();
  7649                           
  7650                           ;incstack = 0
  7651  0129DE  ECB9  F096         	call	_rtcc_get_hours	;wreg free
  7652  0129E2  0100               	movlb	0	; () banked
  7653  0129E4  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;rtcc.c: 250: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7657  0129E6  0E00               	movlw	0
  7658  0129E8  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7659  0129EA  0E23               	movlw	35
  7660  0129EC  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7661  0129EE  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7662  0129F0  ECDD  F092         	call	__rtcc_decrement_bcd
  7663  0129F4  0100               	movlb	0	; () banked
  7664  0129F6  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;rtcc.c: 251: rtcc_set_hours(hours);
  7668  0129F8  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7669  0129FA  ECEA  F095         	call	_rtcc_set_hours
  7670  0129FE  0012               	return		;funcret
  7671  012A00                     __end_of_rtcc_decrement_hours:
  7672                           	opt stack 0
  7673                           tblptru	equ	0xFF8
  7674                           tblptrh	equ	0xFF7
  7675                           tblptrl	equ	0xFF6
  7676                           tablat	equ	0xFF5
  7677                           intcon3	equ	0xFF0
  7678                           postinc0	equ	0xFEE
  7679                           wreg	equ	0xFE8
  7680                           postdec1	equ	0xFE5
  7681                           plusw1	equ	0xFE3
  7682                           fsr1h	equ	0xFE2
  7683                           fsr1l	equ	0xFE1
  7684                           postinc2	equ	0xFDE
  7685                           postdec2	equ	0xFDD
  7686                           plusw2	equ	0xFDB
  7687                           fsr2h	equ	0xFDA
  7688                           fsr2l	equ	0xFD9
  7689                           status	equ	0xFD8
  7690                           
  7691 ;; *************** function _rtcc_decrement_day *****************
  7692 ;; Defined at:
  7693 ;;		line 209 in file "rtcc.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  day             1    8[BANK0 ] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;Total ram usage:        1 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:   12
  7714 ;; This function calls:
  7715 ;;		__number_of_days
  7716 ;;		__rtcc_decrement_bcd
  7717 ;;		_rtcc_get_day
  7718 ;;		_rtcc_set_day
  7719 ;; This function is called by:
  7720 ;;		__ui_encoder
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text22
  7725  012862                     __ptext22:
  7726                           	opt stack 0
  7727  012862                     _rtcc_decrement_day:
  7728                           	opt stack 16
  7729                           
  7730                           ;rtcc.c: 211: uint8_t day = rtcc_get_day();
  7731                           
  7732                           ;incstack = 0
  7733  012862  ECC0  F096         	call	_rtcc_get_day	;wreg free
  7734  012866  0100               	movlb	0	; () banked
  7735  012868  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;rtcc.c: 212: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7739  01286A  0E01               	movlw	1
  7740  01286C  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7741  01286E  EC89  F089         	call	__number_of_days	;wreg free
  7742  012872  0100               	movlb	0	; () banked
  7743  012874  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7744  012876  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7745  012878  ECDD  F092         	call	__rtcc_decrement_bcd
  7746  01287C  0100               	movlb	0	; () banked
  7747  01287E  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;rtcc.c: 213: rtcc_set_day(day);
  7751  012880  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7752  012882  ECF6  F095         	call	_rtcc_set_day
  7753  012886  0012               	return		;funcret
  7754  012888                     __end_of_rtcc_decrement_day:
  7755                           	opt stack 0
  7756                           tblptru	equ	0xFF8
  7757                           tblptrh	equ	0xFF7
  7758                           tblptrl	equ	0xFF6
  7759                           tablat	equ	0xFF5
  7760                           intcon3	equ	0xFF0
  7761                           postinc0	equ	0xFEE
  7762                           wreg	equ	0xFE8
  7763                           postdec1	equ	0xFE5
  7764                           plusw1	equ	0xFE3
  7765                           fsr1h	equ	0xFE2
  7766                           fsr1l	equ	0xFE1
  7767                           postinc2	equ	0xFDE
  7768                           postdec2	equ	0xFDD
  7769                           plusw2	equ	0xFDB
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function __rtcc_decrement_bcd *****************
  7775 ;; Defined at:
  7776 ;;		line 47 in file "rtcc.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  value           1    wreg     unsigned char 
  7779 ;;  min             1    4[BANK0 ] unsigned char 
  7780 ;;  max             1    5[BANK0 ] unsigned char 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  value           1    7[BANK0 ] unsigned char 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  1    wreg      unsigned char 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7794 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7795 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7796 ;;Total ram usage:        4 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:   10
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_rtcc_decrement_year
  7803 ;;		_rtcc_decrement_month
  7804 ;;		_rtcc_decrement_day
  7805 ;;		_rtcc_decrement_hours
  7806 ;;		_rtcc_decrement_minutes
  7807 ;;		_rtcc_decrement_seconds
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text23
  7812  0125BA                     __ptext23:
  7813                           	opt stack 0
  7814  0125BA                     __rtcc_decrement_bcd:
  7815                           	opt stack 17
  7816                           
  7817                           ;incstack = 0
  7818                           ;__rtcc_decrement_bcd@value stored from wreg
  7819  0125BA  0100               	movlb	0	; () banked
  7820  0125BC  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7821                           
  7822                           ;rtcc.c: 49: if(value==min)
  7823  0125BE  0100               	movlb	0	; () banked
  7824  0125C0  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7825  0125C2  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7826  0125C4  A4D8               	btfss	status,2,c
  7827  0125C6  D002               	goto	l2258
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;rtcc.c: 50: return max;
  7831  0125C8  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  7832  0125CA  0012               	return	
  7833  0125CC                     l2258:
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;rtcc.c: 51: --value;
  7837                           
  7838                           ; BSR set to: 0
  7839  0125CC  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  7840                           
  7841                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  7842  0125CE  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  7843  0125D2  0E0F               	movlw	15
  7844  0125D4  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  7845  0125D6  0E09               	movlw	9
  7846  0125D8  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  7847  0125DA  D004               	goto	l2260
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;rtcc.c: 53: {
  7851                           ;rtcc.c: 54: value &= 0xF0;
  7852  0125DC  0EF0               	movlw	240
  7853  0125DE  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7854                           
  7855                           ;rtcc.c: 55: value |= 0x09;
  7856  0125E0  0E09               	movlw	9
  7857  0125E2  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7858  0125E4                     l2260:
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;rtcc.c: 56: }
  7862                           ;rtcc.c: 57: return value;
  7863                           
  7864                           ; BSR set to: 0
  7865  0125E4  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  7866  0125E6  0012               	return	
  7867  0125E8                     __end_of__rtcc_decrement_bcd:
  7868                           	opt stack 0
  7869                           tblptru	equ	0xFF8
  7870                           tblptrh	equ	0xFF7
  7871                           tblptrl	equ	0xFF6
  7872                           tablat	equ	0xFF5
  7873                           intcon3	equ	0xFF0
  7874                           postinc0	equ	0xFEE
  7875                           wreg	equ	0xFE8
  7876                           postdec1	equ	0xFE5
  7877                           plusw1	equ	0xFE3
  7878                           fsr1h	equ	0xFE2
  7879                           fsr1l	equ	0xFE1
  7880                           postinc2	equ	0xFDE
  7881                           postdec2	equ	0xFDD
  7882                           plusw2	equ	0xFDB
  7883                           fsr2h	equ	0xFDA
  7884                           fsr2l	equ	0xFD9
  7885                           status	equ	0xFD8
  7886                           
  7887 ;; *************** function _rtcc_correct_day *****************
  7888 ;; Defined at:
  7889 ;;		line 94 in file "rtcc.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;		None
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  max             1    5[BANK0 ] unsigned char 
  7894 ;;  day             1    4[BANK0 ] unsigned char 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;Total ram usage:        2 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:   12
  7911 ;; This function calls:
  7912 ;;		__number_of_days
  7913 ;;		_rtcc_get_day
  7914 ;;		_rtcc_set_day
  7915 ;; This function is called by:
  7916 ;;		__ui_encoder
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text24
  7921  012A44                     __ptext24:
  7922                           	opt stack 0
  7923  012A44                     _rtcc_correct_day:
  7924                           	opt stack 16
  7925                           
  7926                           ;rtcc.c: 96: uint8_t day = rtcc_get_day();
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;incstack = 0
  7930  012A44  ECC0  F096         	call	_rtcc_get_day	;wreg free
  7931  012A48  0100               	movlb	0	; () banked
  7932  012A4A  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;rtcc.c: 97: uint8_t max = _number_of_days();
  7936  012A4C  EC89  F089         	call	__number_of_days	;wreg free
  7937  012A50  0100               	movlb	0	; () banked
  7938  012A52  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;rtcc.c: 98: if(day>max)
  7942  012A54  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  7943  012A56  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  7944  012A58  B0D8               	btfsc	status,0,c
  7945  012A5A  0012               	return	
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;rtcc.c: 99: rtcc_set_day(max);
  7949  012A5C  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  7950  012A5E  ECF6  F095         	call	_rtcc_set_day
  7951  012A62  0012               	return	
  7952  012A64                     __end_of_rtcc_correct_day:
  7953                           	opt stack 0
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           intcon3	equ	0xFF0
  7959                           postinc0	equ	0xFEE
  7960                           wreg	equ	0xFE8
  7961                           postdec1	equ	0xFE5
  7962                           plusw1	equ	0xFE3
  7963                           fsr1h	equ	0xFE2
  7964                           fsr1l	equ	0xFE1
  7965                           postinc2	equ	0xFDE
  7966                           postdec2	equ	0xFDD
  7967                           plusw2	equ	0xFDB
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function __number_of_days *****************
  7973 ;; Defined at:
  7974 ;;		line 60 in file "rtcc.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  month           1    3[BANK0 ] unsigned char 
  7979 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  7980 ;;  year            1    1[BANK0 ] unsigned char 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      unsigned char 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;Total ram usage:        4 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:   11
  7997 ;; This function calls:
  7998 ;;		_rtcc_get_month
  7999 ;;		_rtcc_get_year
  8000 ;; This function is called by:
  8001 ;;		_rtcc_correct_day
  8002 ;;		_rtcc_increment_day
  8003 ;;		_rtcc_decrement_day
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text25
  8008  011312                     __ptext25:
  8009                           	opt stack 0
  8010  011312                     __number_of_days:
  8011                           	opt stack 16
  8012                           
  8013                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  8014                           
  8015                           ;incstack = 0
  8016  011312  ECAB  F096         	call	_rtcc_get_month	;wreg free
  8017  011316  0100               	movlb	0	; () banked
  8018  011318  6F63               	movwf	__number_of_days@month& (0+255),b
  8019                           
  8020                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  8021  01131A  EC9D  F096         	call	_rtcc_get_year	;wreg free
  8022  01131E  0100               	movlb	0	; () banked
  8023  011320  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;rtcc.c: 64: uint8_t year;
  8027                           ;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || month==0x11)
  8028  011322  0E04               	movlw	4
  8029  011324  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8030  011326  B4D8               	btfsc	status,2,c
  8031  011328  D00C               	goto	u10600
  8032                           
  8033                           ; BSR set to: 0
  8034  01132A  0E06               	movlw	6
  8035  01132C  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8036  01132E  B4D8               	btfsc	status,2,c
  8037  011330  D008               	goto	u10600
  8038                           
  8039                           ; BSR set to: 0
  8040  011332  0E09               	movlw	9
  8041  011334  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8042  011336  B4D8               	btfsc	status,2,c
  8043  011338  D004               	goto	u10600
  8044                           
  8045                           ; BSR set to: 0
  8046  01133A  0E11               	movlw	17
  8047  01133C  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8048  01133E  A4D8               	btfss	status,2,c
  8049  011340  D002               	goto	l2263
  8050  011342                     u10600:
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;rtcc.c: 66: return 0x30;
  8054                           
  8055                           ; BSR set to: 0
  8056  011342  0E30               	movlw	48
  8057                           
  8058                           ; BSR set to: 0
  8059  011344  0012               	return	
  8060  011346                     l2263:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;rtcc.c: 67: if(month==0x02)
  8064                           
  8065                           ; BSR set to: 0
  8066  011346  0E02               	movlw	2
  8067  011348  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8068  01134A  A4D8               	btfss	status,2,c
  8069  01134C  D014               	goto	l2269
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;rtcc.c: 68: {
  8073                           ;rtcc.c: 69: year = bcd_year>>4;
  8074  01134E  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  8075  011350  0B0F               	andlw	15
  8076  011352  6F61               	movwf	__number_of_days@year& (0+255),b
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;rtcc.c: 70: year *= 10;
  8080  011354  0E0A               	movlw	10
  8081  011356  0361               	mulwf	__number_of_days@year& (0+255),b
  8082  011358  50F3               	movf	prodl,w,c
  8083  01135A  6F61               	movwf	__number_of_days@year& (0+255),b
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  8087  01135C  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  8088  01135E  0B0F               	andlw	15
  8089  011360  2761               	addwf	__number_of_days@year& (0+255),f,b
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;rtcc.c: 72: if(year&0b11)
  8093  011362  C061  F060         	movff	__number_of_days@year,??__number_of_days
  8094  011366  0E03               	movlw	3
  8095  011368  1760               	andwf	??__number_of_days& (0+255),f,b
  8096  01136A  B4D8               	btfsc	status,2,c
  8097  01136C  D002               	goto	l2268
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;rtcc.c: 73: return 0x28;
  8101  01136E  0E28               	movlw	40
  8102                           
  8103                           ; BSR set to: 0
  8104  011370  0012               	return	
  8105  011372                     l2268:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;rtcc.c: 74: else
  8109                           ;rtcc.c: 75: return 0x29;
  8110                           
  8111                           ; BSR set to: 0
  8112  011372  0E29               	movlw	41
  8113                           
  8114                           ; BSR set to: 0
  8115  011374  0012               	return	
  8116  011376                     l2269:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;rtcc.c: 76: }
  8120                           ;rtcc.c: 77: return 0x31;
  8121                           
  8122                           ; BSR set to: 0
  8123                           
  8124                           ; BSR set to: 0
  8125  011376  0E31               	movlw	49
  8126  011378  0012               	return	
  8127  01137A                     __end_of__number_of_days:
  8128                           	opt stack 0
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodl	equ	0xFF3
  8134                           intcon3	equ	0xFF0
  8135                           postinc0	equ	0xFEE
  8136                           wreg	equ	0xFE8
  8137                           postdec1	equ	0xFE5
  8138                           plusw1	equ	0xFE3
  8139                           fsr1h	equ	0xFE2
  8140                           fsr1l	equ	0xFE1
  8141                           postinc2	equ	0xFDE
  8142                           postdec2	equ	0xFDD
  8143                           plusw2	equ	0xFDB
  8144                           fsr2h	equ	0xFDA
  8145                           fsr2l	equ	0xFD9
  8146                           status	equ	0xFD8
  8147                           
  8148 ;; *************** function _system_init *****************
  8149 ;; Defined at:
  8150 ;;		line 250 in file "os.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  8155 ;;  temp           50    0        unsigned char [50]
  8156 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  8157 ;;  filename        9  104[BANK1 ] unsigned char [9]
  8158 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  8159 ;;  extension       4  122[BANK1 ] unsigned char [4]
  8160 ;;  file_number     1    0        unsigned char 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8174 ;;Total ram usage:      130 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:   15
  8177 ;; This function calls:
  8178 ;;		__system_encoder_init
  8179 ;;		__system_timer0_init
  8180 ;;		_adc_init
  8181 ;;		_buck_init
  8182 ;;		_flash_init
  8183 ;;		_i2c_eeprom_read_calibration
  8184 ;;		_i2c_init
  8185 ;;		_log_start_new
  8186 ;;		_rtcc_init
  8187 ;;		_ui_init
  8188 ;; This function is called by:
  8189 ;;		_main
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text26
  8194  00E8C4                     __ptext26:
  8195                           	opt stack 0
  8196  00E8C4                     _system_init:
  8197                           	opt stack 15
  8198                           
  8199                           ;os.c: 252: char filename[9] = "TEST    ";
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;incstack = 0
  8203  00E8C4  EE22  F0DC         	lfsr	2,system_init@F8579
  8204  00E8C8  EE11  F068         	lfsr	1,system_init@filename
  8205  00E8CC  0E08               	movlw	8
  8206  00E8CE                     u14761:
  8207  00E8CE  CFDB FFE3          	movff	plusw2,plusw1
  8208  00E8D2  06E8               	decf	wreg,f,c
  8209  00E8D4  E2FC               	bc	u14761
  8210                           
  8211                           ;os.c: 253: char extension[4] = "TXT";
  8212  00E8D6  C2E9  F17A         	movff	system_init@F8581,system_init@extension
  8213  00E8DA  C2EA  F17B         	movff	system_init@F8581+1,system_init@extension+1
  8214  00E8DE  C2EB  F17C         	movff	system_init@F8581+2,system_init@extension+2
  8215  00E8E2  C2EC  F17D         	movff	system_init@F8581+3,system_init@extension+3
  8216                           
  8217                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  8218  00E8E6  EE23  F0F6         	lfsr	2,system_init@F8583
  8219  00E8EA  EE11  F071         	lfsr	1,system_init@filename2
  8220  00E8EE  0E08               	movlw	8
  8221  00E8F0                     u14771:
  8222  00E8F0  CFDB FFE3          	movff	plusw2,plusw1
  8223  00E8F4  06E8               	decf	wreg,f,c
  8224  00E8F6  E2FC               	bc	u14771
  8225                           
  8226                           ;os.c: 255: char extension2[4] = "TXT";
  8227  00E8F8  C2E5  F17E         	movff	system_init@F8585,system_init@extension2
  8228  00E8FC  C2E6  F17F         	movff	system_init@F8585+1,system_init@extension2+1
  8229  00E900  C2E7  F180         	movff	system_init@F8585+2,system_init@extension2+2
  8230  00E904  C2E8  F181         	movff	system_init@F8585+3,system_init@extension2+3
  8231                           
  8232                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  8233  00E908  EE24  F000         	lfsr	2,system_init@F8587
  8234  00E90C  EE11  F000         	lfsr	1,system_init@appendtext
  8235  00E910  0E67               	movlw	103
  8236  00E912                     u14781:
  8237  00E912  CFDB FFE3          	movff	plusw2,plusw1
  8238  00E916  06E8               	decf	wreg,f,c
  8239  00E918  E2FC               	bc	u14781
  8240                           
  8241                           ;os.c: 257: uint8_t file_number;
  8242                           ;os.c: 258: uint8_t temp[50];
  8243                           ;os.c: 261: TRISCbits.TRISC2 = 0;
  8244  00E91A  9494               	bcf	3988,2,c	;volatile
  8245                           
  8246                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  8247  00E91C  9095               	bcf	3989,0,c	;volatile
  8248                           
  8249                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  8250  00E91E  9695               	bcf	3989,3,c	;volatile
  8251                           
  8252                           ;os.c: 265: LATDbits.LD3 = 0;
  8253  00E920  968C               	bcf	3980,3,c	;volatile
  8254                           
  8255                           ;os.c: 268: LATDbits.LD1 = 0;
  8256  00E922  928C               	bcf	3980,1,c	;volatile
  8257                           
  8258                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  8259  00E924  9295               	bcf	3989,1,c	;volatile
  8260                           
  8261                           ;os.c: 272: LATBbits.LB1 = 0;
  8262  00E926  928A               	bcf	3978,1,c	;volatile
  8263                           
  8264                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  8265  00E928  9293               	bcf	3987,1,c	;volatile
  8266                           
  8267                           ;os.c: 274: LATBbits.LB2 = 0;
  8268  00E92A  948A               	bcf	3978,2,c	;volatile
  8269                           
  8270                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  8271  00E92C  9493               	bcf	3987,2,c	;volatile
  8272                           
  8273                           ;os.c: 276: LATBbits.LB3 = 0;
  8274  00E92E  968A               	bcf	3978,3,c	;volatile
  8275                           
  8276                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  8277  00E930  9693               	bcf	3987,3,c	;volatile
  8278                           
  8279                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  8280  00E932  8C95               	bsf	3989,6,c	;volatile
  8281                           
  8282                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  8283  00E934  9895               	bcf	3989,4,c	;volatile
  8284                           
  8285                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  8286  00E936  9A95               	bcf	3989,5,c	;volatile
  8287                           
  8288                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  8289  00E938  9E95               	bcf	3989,7,c	;volatile
  8290                           
  8291                           ;os.c: 285: LATDbits.LD7 = 1;
  8292  00E93A  8E8C               	bsf	3980,7,c	;volatile
  8293                           
  8294                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  8295  00E93C  8692               	bsf	3986,3,c	;volatile
  8296                           
  8297                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  8298  00E93E  010F               	movlb	15	; () banked
  8299  00E940  9748               	bcf	72,3,b	;volatile
  8300                           
  8301                           ; BSR set to: 15
  8302                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  8303  00E942  8093               	bsf	3987,0,c	;volatile
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  8307  00E944  9949               	bcf	73,4,b	;volatile
  8308                           
  8309                           ; BSR set to: 15
  8310                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  8311  00E946  8292               	bsf	3986,1,c	;volatile
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  8315  00E948  9348               	bcf	72,1,b	;volatile
  8316                           
  8317                           ; BSR set to: 15
  8318                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  8319  00E94A  8492               	bsf	3986,2,c	;volatile
  8320                           
  8321                           ; BSR set to: 15
  8322                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  8323  00E94C  9548               	bcf	72,2,b	;volatile
  8324                           
  8325                           ; BSR set to: 15
  8326                           ;os.c: 298: LATCbits.LC7 = 0;
  8327  00E94E  9E8B               	bcf	3979,7,c	;volatile
  8328                           
  8329                           ; BSR set to: 15
  8330                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  8331  00E950  9E94               	bcf	3988,7,c	;volatile
  8332                           
  8333                           ; BSR set to: 15
  8334                           ;os.c: 300: LATEbits.LE2 = 1;
  8335  00E952  848D               	bsf	3981,2,c	;volatile
  8336                           
  8337                           ; BSR set to: 15
  8338                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  8339  00E954  9496               	bcf	3990,2,c	;volatile
  8340                           
  8341                           ; BSR set to: 15
  8342                           ;os.c: 302: LATEbits.LE1 = 1;
  8343  00E956  828D               	bsf	3981,1,c	;volatile
  8344                           
  8345                           ; BSR set to: 15
  8346                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  8347  00E958  9296               	bcf	3990,1,c	;volatile
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;os.c: 304: LATEbits.LE0 = 1;
  8351  00E95A  808D               	bsf	3981,0,c	;volatile
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  8355  00E95C  9096               	bcf	3990,0,c	;volatile
  8356                           
  8357                           ; BSR set to: 15
  8358                           ;os.c: 306: LATAbits.LA5 = 1;
  8359  00E95E  8A89               	bsf	3977,5,c	;volatile
  8360                           
  8361                           ; BSR set to: 15
  8362                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  8363  00E960  9A92               	bcf	3986,5,c	;volatile
  8364                           
  8365                           ; BSR set to: 15
  8366                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  8367  00E962  8092               	bsf	3986,0,c	;volatile
  8368                           
  8369                           ; BSR set to: 15
  8370                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  8371  00E964  8148               	bsf	72,0,b	;volatile
  8372                           
  8373                           ; BSR set to: 15
  8374                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  8375  00E966  8C93               	bsf	3987,6,c	;volatile
  8376                           
  8377                           ; BSR set to: 15
  8378                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  8379  00E968  8E93               	bsf	3987,7,c	;volatile
  8380                           
  8381                           ; BSR set to: 15
  8382                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  8383  00E96A  0E02               	movlw	2
  8384  00E96C  0102               	movlb	2	; () banked
  8385  00E96E  6F00               	movwf	_os& (0+255),b	;volatile
  8386                           
  8387                           ; BSR set to: 2
  8388                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  8389  00E970  0E01               	movlw	1
  8390  00E972  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8391                           
  8392                           ; BSR set to: 2
  8393                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  8394  00E974  0E00               	movlw	0
  8395  00E976  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8396                           
  8397                           ; BSR set to: 2
  8398                           ;os.c: 336: os.buckDutyCycle = 0;
  8399  00E978  0E00               	movlw	0
  8400  00E97A  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8401                           
  8402                           ; BSR set to: 2
  8403                           ;os.c: 337: os.buckLastStep = -1;
  8404  00E97C  6904               	setf	(_os+4)& (0+255),b	;volatile
  8405                           
  8406                           ; BSR set to: 2
  8407                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8408  00E97E  0E00               	movlw	0
  8409  00E980  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8410                           
  8411                           ; BSR set to: 2
  8412                           ;os.c: 341: os.output_voltage = 13000;
  8413  00E982  0E32               	movlw	50
  8414  00E984  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8415  00E986  0EC8               	movlw	200
  8416  00E988  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8417                           
  8418                           ; BSR set to: 2
  8419                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8420  00E98A  909E               	bcf	3998,0,c	;volatile
  8421                           
  8422                           ; BSR set to: 2
  8423                           ;os.c: 347: TMR1H = 0xFC;
  8424  00E98C  0EFC               	movlw	252
  8425  00E98E  6ECF               	movwf	4047,c	;volatile
  8426                           
  8427                           ; BSR set to: 2
  8428                           ;os.c: 348: TMR1L = 0x00;
  8429  00E990  0E00               	movlw	0
  8430  00E992  6ECE               	movwf	4046,c	;volatile
  8431                           
  8432                           ; BSR set to: 2
  8433                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8434  00E994  80CD               	bsf	4045,0,c	;volatile
  8435                           
  8436                           ; BSR set to: 2
  8437                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8438  00E996  86CD               	bsf	4045,3,c	;volatile
  8439  00E998                     
  8440                           ; BSR set to: 2
  8441  00E998  A09E               	btfss	3998,0,c	;volatile
  8442  00E99A  D7FE               	goto	l1391
  8443                           
  8444                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8445  00E99C  90CD               	bcf	4045,0,c	;volatile
  8446                           
  8447                           ;os.c: 359: i2c_init();
  8448  00E99E  ECC7  F096         	call	_i2c_init	;wreg free
  8449                           
  8450                           ;os.c: 361: ui_init();
  8451  00E9A2  EC30  F096         	call	_ui_init	;wreg free
  8452                           
  8453                           ;os.c: 364: adc_init();
  8454  00E9A6  EC51  F095         	call	_adc_init	;wreg free
  8455                           
  8456                           ;os.c: 367: rtcc_init();
  8457  00E9AA  EC7B  F095         	call	_rtcc_init	;wreg free
  8458                           
  8459                           ;os.c: 370: i2c_eeprom_read_calibration();
  8460  00E9AE  ECAC  F070         	call	_i2c_eeprom_read_calibration	;wreg free
  8461                           
  8462                           ;os.c: 385: _system_timer0_init();
  8463  00E9B2  ECDD  F090         	call	__system_timer0_init	;wreg free
  8464                           
  8465                           ;os.c: 394: _system_encoder_init();
  8466  00E9B6  ECFD  F090         	call	__system_encoder_init	;wreg free
  8467                           
  8468                           ;os.c: 396: flash_init();
  8469  00E9BA  EC9B  F090         	call	_flash_init	;wreg free
  8470                           
  8471                           ;os.c: 430: buck_init();
  8472  00E9BE  EC55  F096         	call	_buck_init	;wreg free
  8473                           
  8474                           ;os.c: 433: log_start_new();
  8475  00E9C2  EC6E  F07B         	call	_log_start_new	;wreg free
  8476  00E9C6  0012               	return		;funcret
  8477  00E9C8                     __end_of_system_init:
  8478                           	opt stack 0
  8479                           tblptru	equ	0xFF8
  8480                           tblptrh	equ	0xFF7
  8481                           tblptrl	equ	0xFF6
  8482                           tablat	equ	0xFF5
  8483                           prodl	equ	0xFF3
  8484                           intcon3	equ	0xFF0
  8485                           postinc0	equ	0xFEE
  8486                           wreg	equ	0xFE8
  8487                           postdec1	equ	0xFE5
  8488                           plusw1	equ	0xFE3
  8489                           fsr1h	equ	0xFE2
  8490                           fsr1l	equ	0xFE1
  8491                           postinc2	equ	0xFDE
  8492                           postdec2	equ	0xFDD
  8493                           plusw2	equ	0xFDB
  8494                           fsr2h	equ	0xFDA
  8495                           fsr2l	equ	0xFD9
  8496                           status	equ	0xFD8
  8497                           
  8498 ;; *************** function _ui_init *****************
  8499 ;; Defined at:
  8500 ;;		line 325 in file "ui.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg, status,2
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8518 ;;Total ram usage:        0 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:   10
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_system_init
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text27
  8529  012C60                     __ptext27:
  8530                           	opt stack 0
  8531  012C60                     _ui_init:
  8532                           	opt stack 19
  8533                           
  8534                           ;ui.c: 327: system_ui_inactive_count = 0;
  8535                           
  8536                           ;incstack = 0
  8537  012C60  0E00               	movlw	0
  8538  012C62  0102               	movlb	2	; () banked
  8539  012C64  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8540  012C66  0E00               	movlw	0
  8541  012C68  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  8542                           
  8543                           ; BSR set to: 2
  8544                           ;ui.c: 329: LATCbits.LC2 = 1;
  8545  012C6A  848B               	bsf	3979,2,c	;volatile
  8546                           
  8547                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8548  012C6C  0E01               	movlw	1
  8549  012C6E  0101               	movlb	1	; () banked
  8550  012C70  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  8551                           
  8552                           ; BSR set to: 1
  8553  012C72  0012               	return		;funcret
  8554  012C74                     __end_of_ui_init:
  8555                           	opt stack 0
  8556                           tblptru	equ	0xFF8
  8557                           tblptrh	equ	0xFF7
  8558                           tblptrl	equ	0xFF6
  8559                           tablat	equ	0xFF5
  8560                           prodl	equ	0xFF3
  8561                           intcon3	equ	0xFF0
  8562                           postinc0	equ	0xFEE
  8563                           wreg	equ	0xFE8
  8564                           postdec1	equ	0xFE5
  8565                           plusw1	equ	0xFE3
  8566                           fsr1h	equ	0xFE2
  8567                           fsr1l	equ	0xFE1
  8568                           postinc2	equ	0xFDE
  8569                           postdec2	equ	0xFDD
  8570                           plusw2	equ	0xFDB
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8
  8574                           
  8575 ;; *************** function _rtcc_init *****************
  8576 ;; Defined at:
  8577 ;;		line 81 in file "rtcc.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:   14
  8598 ;; This function calls:
  8599 ;;		_rtcc_read_eeprom
  8600 ;; This function is called by:
  8601 ;;		_system_init
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text28
  8606  012AF6                     __ptext28:
  8607                           	opt stack 0
  8608  012AF6                     _rtcc_init:
  8609                           	opt stack 15
  8610                           
  8611                           ;rtcc.c: 83: EECON2 = 0x55;
  8612                           
  8613                           ; BSR set to: 1
  8614                           ;incstack = 0
  8615  012AF6  0E55               	movlw	85
  8616  012AF8  6EA7               	movwf	4007,c	;volsfr
  8617                           
  8618                           ;rtcc.c: 84: EECON2 = 0xAA;
  8619  012AFA  0EAA               	movlw	170
  8620  012AFC  6EA7               	movwf	4007,c	;volsfr
  8621                           
  8622                           ;rtcc.c: 85: RTCCFGbits.RTCWREN = 1;
  8623  012AFE  010F               	movlb	15	; () banked
  8624  012B00  8B3F               	bsf	63,5,b	;volatile
  8625                           
  8626                           ; BSR set to: 15
  8627                           ;rtcc.c: 86: RTCCFGbits.RTCEN = 1;
  8628  012B02  8F3F               	bsf	63,7,b	;volatile
  8629                           
  8630                           ; BSR set to: 15
  8631                           ;rtcc.c: 87: RTCCFGbits.RTCOE = 0;
  8632  012B04  953F               	bcf	63,2,b	;volatile
  8633                           
  8634                           ;rtcc.c: 88: RTCCAL = 0x00;
  8635  012B06  0E00               	movlw	0
  8636  012B08  6F3E               	movwf	62,b	;volatile
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;rtcc.c: 91: rtcc_read_eeprom();
  8640  012B0A  EC7B  F08F         	call	_rtcc_read_eeprom	;wreg free
  8641  012B0E  0012               	return		;funcret
  8642  012B10                     __end_of_rtcc_init:
  8643                           	opt stack 0
  8644                           tblptru	equ	0xFF8
  8645                           tblptrh	equ	0xFF7
  8646                           tblptrl	equ	0xFF6
  8647                           tablat	equ	0xFF5
  8648                           prodl	equ	0xFF3
  8649                           intcon3	equ	0xFF0
  8650                           postinc0	equ	0xFEE
  8651                           wreg	equ	0xFE8
  8652                           postdec1	equ	0xFE5
  8653                           plusw1	equ	0xFE3
  8654                           fsr1h	equ	0xFE2
  8655                           fsr1l	equ	0xFE1
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           plusw2	equ	0xFDB
  8659                           fsr2h	equ	0xFDA
  8660                           fsr2l	equ	0xFD9
  8661                           status	equ	0xFD8
  8662                           
  8663 ;; *************** function _rtcc_read_eeprom *****************
  8664 ;; Defined at:
  8665 ;;		line 330 in file "rtcc.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;		None
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  date            6   25[BANK0 ] unsigned char [6]
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  1    wreg      void 
  8672 ;; Registers used:
  8673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;Total ram usage:        6 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; Hardware stack levels required when called:   13
  8686 ;; This function calls:
  8687 ;;		_i2c_eeprom_read
  8688 ;;		_rtcc_set_day
  8689 ;;		_rtcc_set_hours
  8690 ;;		_rtcc_set_minutes
  8691 ;;		_rtcc_set_month
  8692 ;;		_rtcc_set_seconds
  8693 ;;		_rtcc_set_year
  8694 ;; This function is called by:
  8695 ;;		_rtcc_init
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text29
  8700  011EF6                     __ptext29:
  8701                           	opt stack 0
  8702  011EF6                     _rtcc_read_eeprom:
  8703                           	opt stack 15
  8704                           
  8705                           ;rtcc.c: 332: uint8_t date[6];
  8706                           ;rtcc.c: 333: i2c_eeprom_read(0x0040, &date[0], 6);
  8707                           
  8708                           ;incstack = 0
  8709  011EF6  0E00               	movlw	0
  8710  011EF8  0100               	movlb	0	; () banked
  8711  011EFA  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8712  011EFC  0E40               	movlw	64
  8713  011EFE  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8714  011F00  0E79               	movlw	low rtcc_read_eeprom@date
  8715  011F02  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8716  011F04  0E00               	movlw	high rtcc_read_eeprom@date
  8717  011F06  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8718  011F08  0E06               	movlw	6
  8719  011F0A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8720  011F0C  ECE8  F08D         	call	_i2c_eeprom_read	;wreg free
  8721                           
  8722                           ;rtcc.c: 336: rtcc_set_year(date[0]);
  8723  011F10  0100               	movlb	0	; () banked
  8724  011F12  5179               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8725  011F14  ECBA  F095         	call	_rtcc_set_year
  8726                           
  8727                           ;rtcc.c: 337: rtcc_set_month(date[1]);
  8728  011F18  0100               	movlb	0	; () banked
  8729  011F1A  517A               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8730  011F1C  ECD2  F095         	call	_rtcc_set_month
  8731                           
  8732                           ;rtcc.c: 338: rtcc_set_day(date[2]);
  8733  011F20  0100               	movlb	0	; () banked
  8734  011F22  517B               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8735  011F24  ECF6  F095         	call	_rtcc_set_day
  8736                           
  8737                           ;rtcc.c: 339: rtcc_set_hours(date[3]);
  8738  011F28  0100               	movlb	0	; () banked
  8739  011F2A  517C               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8740  011F2C  ECEA  F095         	call	_rtcc_set_hours
  8741                           
  8742                           ;rtcc.c: 340: rtcc_set_minutes(date[4]);
  8743  011F30  0100               	movlb	0	; () banked
  8744  011F32  517D               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8745  011F34  ECDE  F095         	call	_rtcc_set_minutes
  8746                           
  8747                           ;rtcc.c: 341: rtcc_set_seconds(date[5]);
  8748  011F38  0100               	movlb	0	; () banked
  8749  011F3A  517E               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8750  011F3C  ECC6  F095         	call	_rtcc_set_seconds
  8751  011F40  0012               	return		;funcret
  8752  011F42                     __end_of_rtcc_read_eeprom:
  8753                           	opt stack 0
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodl	equ	0xFF3
  8759                           intcon3	equ	0xFF0
  8760                           postinc0	equ	0xFEE
  8761                           wreg	equ	0xFE8
  8762                           postdec1	equ	0xFE5
  8763                           plusw1	equ	0xFE3
  8764                           fsr1h	equ	0xFE2
  8765                           fsr1l	equ	0xFE1
  8766                           postinc2	equ	0xFDE
  8767                           postdec2	equ	0xFDD
  8768                           plusw2	equ	0xFDB
  8769                           fsr2h	equ	0xFDA
  8770                           fsr2l	equ	0xFD9
  8771                           status	equ	0xFD8
  8772                           
  8773 ;; *************** function _log_start_new *****************
  8774 ;; Defined at:
  8775 ;;		line 71 in file "log.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:   12
  8796 ;; This function calls:
  8797 ;;		_rtcc_get_seconds_decimal
  8798 ;; This function is called by:
  8799 ;;		_main
  8800 ;;		_system_init
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text30
  8805  00F6DC                     __ptext30:
  8806                           	opt stack 0
  8807  00F6DC                     _log_start_new:
  8808                           	opt stack 17
  8809                           
  8810                           ;log.c: 73: inputVoltageSum = 0;
  8811                           
  8812                           ;incstack = 0
  8813  00F6DC  0E00               	movlw	0
  8814  00F6DE  0102               	movlb	2	; () banked
  8815  00F6E0  6F9A               	movwf	_inputVoltageSum& (0+255),b
  8816  00F6E2  0E00               	movlw	0
  8817  00F6E4  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  8818  00F6E6  0E00               	movlw	0
  8819  00F6E8  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  8820  00F6EA  0E00               	movlw	0
  8821  00F6EC  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  8822                           
  8823                           ;log.c: 74: inputCurrentSum = 0;
  8824  00F6EE  0E00               	movlw	0
  8825  00F6F0  6F96               	movwf	_inputCurrentSum& (0+255),b
  8826  00F6F2  0E00               	movlw	0
  8827  00F6F4  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  8828  00F6F6  0E00               	movlw	0
  8829  00F6F8  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  8830  00F6FA  0E00               	movlw	0
  8831  00F6FC  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  8832                           
  8833                           ;log.c: 75: outputVoltageSum = 0;
  8834  00F6FE  0E00               	movlw	0
  8835  00F700  6F92               	movwf	_outputVoltageSum& (0+255),b
  8836  00F702  0E00               	movlw	0
  8837  00F704  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  8838  00F706  0E00               	movlw	0
  8839  00F708  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  8840  00F70A  0E00               	movlw	0
  8841  00F70C  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  8842                           
  8843                           ;log.c: 76: outputCurrentSum = 0;
  8844  00F70E  0E00               	movlw	0
  8845  00F710  6F8E               	movwf	_outputCurrentSum& (0+255),b
  8846  00F712  0E00               	movlw	0
  8847  00F714  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  8848  00F716  0E00               	movlw	0
  8849  00F718  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  8850  00F71A  0E00               	movlw	0
  8851  00F71C  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  8852                           
  8853                           ;log.c: 77: inputPowerSum = 0;
  8854  00F71E  0E00               	movlw	0
  8855  00F720  6F8A               	movwf	_inputPowerSum& (0+255),b
  8856  00F722  0E00               	movlw	0
  8857  00F724  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  8858  00F726  0E00               	movlw	0
  8859  00F728  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  8860  00F72A  0E00               	movlw	0
  8861  00F72C  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  8862                           
  8863                           ;log.c: 78: outputPowerSum = 0;
  8864  00F72E  0E00               	movlw	0
  8865  00F730  6F86               	movwf	_outputPowerSum& (0+255),b
  8866  00F732  0E00               	movlw	0
  8867  00F734  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  8868  00F736  0E00               	movlw	0
  8869  00F738  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  8870  00F73A  0E00               	movlw	0
  8871  00F73C  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  8872                           
  8873                           ;log.c: 79: inputCapacitySum = 0;
  8874  00F73E  0E00               	movlw	0
  8875  00F740  6F82               	movwf	_inputCapacitySum& (0+255),b
  8876  00F742  0E00               	movlw	0
  8877  00F744  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  8878  00F746  0E00               	movlw	0
  8879  00F748  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  8880  00F74A  0E00               	movlw	0
  8881  00F74C  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  8882                           
  8883                           ;log.c: 80: outputCapacitySum = 0;
  8884  00F74E  0E00               	movlw	0
  8885  00F750  6F7E               	movwf	_outputCapacitySum& (0+255),b
  8886  00F752  0E00               	movlw	0
  8887  00F754  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  8888  00F756  0E00               	movlw	0
  8889  00F758  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  8890  00F75A  0E00               	movlw	0
  8891  00F75C  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  8892                           
  8893                           ;log.c: 81: temperatureOnboardSum = 0;
  8894  00F75E  0E00               	movlw	0
  8895  00F760  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  8896  00F762  0E00               	movlw	0
  8897  00F764  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  8898  00F766  0E00               	movlw	0
  8899  00F768  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  8900  00F76A  0E00               	movlw	0
  8901  00F76C  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  8902                           
  8903                           ;log.c: 82: temperatureExternal1Sum = 0;
  8904  00F76E  0E00               	movlw	0
  8905  00F770  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  8906  00F772  0E00               	movlw	0
  8907  00F774  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  8908  00F776  0E00               	movlw	0
  8909  00F778  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  8910  00F77A  0E00               	movlw	0
  8911  00F77C  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  8912                           
  8913                           ;log.c: 83: temperatureExternal2Sum = 0;
  8914  00F77E  0E00               	movlw	0
  8915  00F780  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  8916  00F782  0E00               	movlw	0
  8917  00F784  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  8918  00F786  0E00               	movlw	0
  8919  00F788  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  8920  00F78A  0E00               	movlw	0
  8921  00F78C  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  8922                           
  8923                           ;log.c: 84: chargerOnTime = 0;
  8924  00F78E  0E00               	movlw	0
  8925  00F790  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  8926  00F792  0E00               	movlw	0
  8927  00F794  6FB0               	movwf	_chargerOnTime& (0+255),b
  8928                           
  8929                           ;log.c: 85: lowPowerTime = 0;
  8930  00F796  0E00               	movlw	0
  8931  00F798  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  8932  00F79A  0E00               	movlw	0
  8933  00F79C  6FAE               	movwf	_lowPowerTime& (0+255),b
  8934                           
  8935                           ;log.c: 86: status = 0;
  8936  00F79E  0E00               	movlw	0
  8937  00F7A0  0101               	movlb	1	; () banked
  8938  00F7A2  6FEC               	movwf	_status& (0+255),b
  8939                           
  8940                           ;log.c: 87: averageCount = 0;
  8941  00F7A4  0E00               	movlw	0
  8942  00F7A6  6E42               	movwf	_averageCount+1,c
  8943  00F7A8  0E00               	movlw	0
  8944  00F7AA  6E41               	movwf	_averageCount,c
  8945                           
  8946                           ; BSR set to: 1
  8947                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  8948  00F7AC  EC8D  F096         	call	_rtcc_get_seconds_decimal	;wreg free
  8949  00F7B0  0101               	movlb	1	; () banked
  8950  00F7B2  6FEB               	movwf	_lastSecond& (0+255),b
  8951                           
  8952                           ; BSR set to: 1
  8953  00F7B4  0012               	return		;funcret
  8954  00F7B6                     __end_of_log_start_new:
  8955                           	opt stack 0
  8956                           tblptru	equ	0xFF8
  8957                           tblptrh	equ	0xFF7
  8958                           tblptrl	equ	0xFF6
  8959                           tablat	equ	0xFF5
  8960                           prodl	equ	0xFF3
  8961                           intcon3	equ	0xFF0
  8962                           postinc0	equ	0xFEE
  8963                           wreg	equ	0xFE8
  8964                           postdec1	equ	0xFE5
  8965                           plusw1	equ	0xFE3
  8966                           fsr1h	equ	0xFE2
  8967                           fsr1l	equ	0xFE1
  8968                           postinc2	equ	0xFDE
  8969                           postdec2	equ	0xFDD
  8970                           plusw2	equ	0xFDB
  8971                           fsr2h	equ	0xFDA
  8972                           fsr2l	equ	0xFD9
  8973                           status	equ	0xFD8
  8974                           
  8975 ;; *************** function _i2c_init *****************
  8976 ;; Defined at:
  8977 ;;		line 94 in file "i2c.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;Total ram usage:        0 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:   11
  8998 ;; This function calls:
  8999 ;;		__i2c_open_1
  9000 ;;		_i2c_set_frequency
  9001 ;; This function is called by:
  9002 ;;		_system_init
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text31
  9007  012D8E                     __ptext31:
  9008                           	opt stack 0
  9009  012D8E                     _i2c_init:
  9010                           	opt stack 18
  9011                           
  9012                           ;i2c.c: 96: _i2c_open_1();
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;incstack = 0
  9016  012D8E  ECA2  F095         	call	__i2c_open_1	;wreg free
  9017                           
  9018                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9019  012D92  0E00               	movlw	0
  9020  012D94  EC0F  F088         	call	_i2c_set_frequency
  9021  012D98  0012               	return		;funcret
  9022  012D9A                     __end_of_i2c_init:
  9023                           	opt stack 0
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           prodl	equ	0xFF3
  9029                           intcon3	equ	0xFF0
  9030                           postinc0	equ	0xFEE
  9031                           wreg	equ	0xFE8
  9032                           postdec1	equ	0xFE5
  9033                           plusw1	equ	0xFE3
  9034                           fsr1h	equ	0xFE2
  9035                           fsr1l	equ	0xFE1
  9036                           postinc2	equ	0xFDE
  9037                           postdec2	equ	0xFDD
  9038                           plusw2	equ	0xFDB
  9039                           fsr2h	equ	0xFDA
  9040                           fsr2l	equ	0xFD9
  9041                           status	equ	0xFD8
  9042                           
  9043 ;; *************** function __i2c_open_1 *****************
  9044 ;; Defined at:
  9045 ;;		line 33 in file "i2c.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;		None
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      void 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;Total ram usage:        0 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   10
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		_i2c_init
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text32
  9074  012B44                     __ptext32:
  9075                           	opt stack 0
  9076  012B44                     __i2c_open_1:
  9077                           	opt stack 18
  9078                           
  9079                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9080                           
  9081                           ;incstack = 0
  9082  012B44  9EC7               	bcf	4039,7,c	;volatile
  9083                           
  9084                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9085  012B46  9CC7               	bcf	4039,6,c	;volatile
  9086                           
  9087                           ;i2c.c: 37: SSP1ADD = 29;
  9088  012B48  0E1D               	movlw	29
  9089  012B4A  6EC8               	movwf	4040,c	;volatile
  9090                           
  9091                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9092  012B4C  9EC6               	bcf	4038,7,c	;volatile
  9093                           
  9094                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9095  012B4E  9CC6               	bcf	4038,6,c	;volatile
  9096                           
  9097                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9098  012B50  50C6               	movf	4038,w,c	;volatile
  9099  012B52  0BF0               	andlw	-16
  9100  012B54  0908               	iorlw	8
  9101  012B56  6EC6               	movwf	4038,c	;volatile
  9102                           
  9103                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9104  012B58  8AC6               	bsf	4038,5,c	;volatile
  9105  012B5A  0012               	return		;funcret
  9106  012B5C                     __end_of__i2c_open_1:
  9107                           	opt stack 0
  9108                           tblptru	equ	0xFF8
  9109                           tblptrh	equ	0xFF7
  9110                           tblptrl	equ	0xFF6
  9111                           tablat	equ	0xFF5
  9112                           prodl	equ	0xFF3
  9113                           intcon3	equ	0xFF0
  9114                           postinc0	equ	0xFEE
  9115                           wreg	equ	0xFE8
  9116                           postdec1	equ	0xFE5
  9117                           plusw1	equ	0xFE3
  9118                           fsr1h	equ	0xFE2
  9119                           fsr1l	equ	0xFE1
  9120                           postinc2	equ	0xFDE
  9121                           postdec2	equ	0xFDD
  9122                           plusw2	equ	0xFDB
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127 ;; *************** function _i2c_eeprom_read_calibration *****************
  9128 ;; Defined at:
  9129 ;;		line 579 in file "i2c.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9134 ;;  addr            2   31[BANK0 ] unsigned int 
  9135 ;;  cntr            1   33[BANK0 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;Total ram usage:        9 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:   13
  9152 ;; This function calls:
  9153 ;;		__i2c_eeprom_load_default_calibration
  9154 ;;		_i2c_eeprom_read
  9155 ;;		_schedule_eeprom_write_task
  9156 ;; This function is called by:
  9157 ;;		_system_init
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text33
  9162  00E158                     __ptext33:
  9163                           	opt stack 0
  9164  00E158                     _i2c_eeprom_read_calibration:
  9165                           	opt stack 16
  9166                           
  9167                           ;i2c.c: 581: uint8_t buffer[4];
  9168                           ;i2c.c: 582: uint8_t cntr;
  9169                           ;i2c.c: 583: uint16_t addr;
  9170                           ;i2c.c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9171                           
  9172                           ;incstack = 0
  9173  00E158  0E00               	movlw	0
  9174  00E15A  0100               	movlb	0	; () banked
  9175  00E15C  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9176  00E15E                     l14636:
  9177                           
  9178                           ; BSR set to: 0
  9179  00E15E  0E06               	movlw	6
  9180  00E160  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9181  00E162  D001               	goto	l1624
  9182  00E164  0012               	return	
  9183  00E166                     l1624:
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;i2c.c: 586: {
  9187                           ;i2c.c: 588: addr = 0x0100 + (cntr<<4);
  9188                           
  9189                           ; BSR set to: 0
  9190  00E166  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9191  00E168  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9192  00E16A  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9193  00E16C  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9194  00E16E  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9195  00E170  0EF0               	movlw	240
  9196  00E172  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9197  00E174  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9198  00E176  0B0F               	andlw	15
  9199  00E178  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9200  00E17A  0EF0               	movlw	240
  9201  00E17C  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9202  00E17E  0E00               	movlw	0
  9203  00E180  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9204  00E182  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9205  00E184  0E01               	movlw	1
  9206  00E186  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9207  00E188  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9211  00E18A  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9212  00E18E  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9213  00E192  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9214  00E194  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9215  00E196  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9216  00E198  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9217  00E19A  0E04               	movlw	4
  9218  00E19C  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9219  00E19E  ECE8  F08D         	call	_i2c_eeprom_read	;wreg free
  9220                           
  9221                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9222  00E1A2  0E77               	movlw	119
  9223  00E1A4  0100               	movlb	0	; () banked
  9224  00E1A6  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9225  00E1A8  A4D8               	btfss	status,2,c
  9226  00E1AA  D021               	goto	l1626
  9227                           
  9228                           ; BSR set to: 0
  9229  00E1AC  0E55               	movlw	85
  9230  00E1AE  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9231  00E1B0  A4D8               	btfss	status,2,c
  9232  00E1B2  D01D               	goto	l1626
  9233                           
  9234                           ; BSR set to: 0
  9235  00E1B4  0E33               	movlw	51
  9236  00E1B6  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9237  00E1B8  A4D8               	btfss	status,2,c
  9238  00E1BA  D019               	goto	l1626
  9239                           
  9240                           ; BSR set to: 0
  9241  00E1BC  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9242  00E1BE  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9243  00E1C0  A4D8               	btfss	status,2,c
  9244  00E1C2  D015               	goto	l1626
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;i2c.c: 592: {
  9248                           ;i2c.c: 594: addr += 4;
  9249  00E1C4  0E04               	movlw	4
  9250  00E1C6  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9251  00E1C8  0E00               	movlw	0
  9252  00E1CA  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9256  00E1CC  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9257  00E1D0  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9258  00E1D4  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9259  00E1D6  0D0C               	mullw	12
  9260  00E1D8  0E00               	movlw	low _calibrationParameters
  9261  00E1DA  24F3               	addwf	prodl,w,c
  9262  00E1DC  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9263  00E1DE  0E03               	movlw	high _calibrationParameters
  9264  00E1E0  20F4               	addwfc	prodh,w,c
  9265  00E1E2  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9266  00E1E4  0E0C               	movlw	12
  9267  00E1E6  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9268  00E1E8  ECE8  F08D         	call	_i2c_eeprom_read	;wreg free
  9269                           
  9270                           ;i2c.c: 596: }
  9271  00E1EC  D041               	goto	l1630
  9272  00E1EE                     l1626:
  9273                           
  9274                           ;i2c.c: 597: else
  9275                           ;i2c.c: 598: {
  9276                           ;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  9277  00E1EE  0100               	movlb	0	; () banked
  9278  00E1F0  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9279  00E1F2  0D0C               	mullw	12
  9280  00E1F4  0E00               	movlw	low _calibrationParameters
  9281  00E1F6  24F3               	addwf	prodl,w,c
  9282  00E1F8  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9283  00E1FA  0E03               	movlw	high _calibrationParameters
  9284  00E1FC  20F4               	addwfc	prodh,w,c
  9285  00E1FE  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9286  00E200  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9287  00E204  EC9E  F04F         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9288                           
  9289                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9290  00E208  D01C               	goto	l1628
  9291  00E20A                     
  9292                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9293  00E20A  0E02               	movlw	2
  9294  00E20C  ECDC  F08E         	call	_schedule_eeprom_write_task
  9295                           
  9296                           ;i2c.c: 606: break;
  9297  00E210  D02F               	goto	l1630
  9298  00E212                     
  9299                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9300  00E212  0E03               	movlw	3
  9301  00E214  ECDC  F08E         	call	_schedule_eeprom_write_task
  9302                           
  9303                           ;i2c.c: 609: break;
  9304  00E218  D02B               	goto	l1630
  9305  00E21A                     
  9306                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9307  00E21A  0E04               	movlw	4
  9308  00E21C  ECDC  F08E         	call	_schedule_eeprom_write_task
  9309                           
  9310                           ;i2c.c: 612: break;
  9311  00E220  D027               	goto	l1630
  9312  00E222                     
  9313                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9314  00E222  0E05               	movlw	5
  9315  00E224  ECDC  F08E         	call	_schedule_eeprom_write_task
  9316                           
  9317                           ;i2c.c: 615: break;
  9318  00E228  D023               	goto	l1630
  9319  00E22A                     
  9320                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9321  00E22A  0E06               	movlw	6
  9322  00E22C  ECDC  F08E         	call	_schedule_eeprom_write_task
  9323                           
  9324                           ;i2c.c: 618: break;
  9325  00E230  D01F               	goto	l1630
  9326  00E232                     
  9327                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9328  00E232  0E07               	movlw	7
  9329  00E234  ECDC  F08E         	call	_schedule_eeprom_write_task
  9330                           
  9331                           ;i2c.c: 621: break;
  9332  00E238  D01B               	goto	l1630
  9333  00E23A                     
  9334                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9335  00E23A  0E08               	movlw	8
  9336  00E23C  ECDC  F08E         	call	_schedule_eeprom_write_task
  9337                           
  9338                           ;i2c.c: 625: }
  9339                           
  9340                           ;i2c.c: 624: break;
  9341  00E240  D017               	goto	l1630
  9342  00E242                     l1628:
  9343  00E242  0100               	movlb	0	; () banked
  9344  00E244  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9345                           
  9346                           ; Switch size 1, requested type "space"
  9347                           ; Number of cases is 7, Range of values is 0 to 6
  9348                           ; switch strategies available:
  9349                           ; Name         Instructions Cycles
  9350                           ; simple_byte           22    12 (average)
  9351                           ;	Chosen strategy is simple_byte
  9352  00E246  0A00               	xorlw	0	; case 0
  9353  00E248  B4D8               	btfsc	status,2,c
  9354  00E24A  D7DF               	goto	l1629
  9355  00E24C  0A01               	xorlw	1	; case 1
  9356  00E24E  B4D8               	btfsc	status,2,c
  9357  00E250  D7E0               	goto	l1631
  9358  00E252  0A03               	xorlw	3	; case 2
  9359  00E254  B4D8               	btfsc	status,2,c
  9360  00E256  D7E1               	goto	l1632
  9361  00E258  0A01               	xorlw	1	; case 3
  9362  00E25A  B4D8               	btfsc	status,2,c
  9363  00E25C  D7E2               	goto	l1633
  9364  00E25E  0A07               	xorlw	7	; case 4
  9365  00E260  B4D8               	btfsc	status,2,c
  9366  00E262  D7E3               	goto	l1634
  9367  00E264  0A01               	xorlw	1	; case 5
  9368  00E266  B4D8               	btfsc	status,2,c
  9369  00E268  D7E4               	goto	l1635
  9370  00E26A  0A03               	xorlw	3	; case 6
  9371  00E26C  B4D8               	btfsc	status,2,c
  9372  00E26E  D7E5               	goto	l1636
  9373  00E270                     l1630:
  9374                           
  9375                           ; BSR set to: 0
  9376                           
  9377                           ; BSR set to: 0
  9378  00E270  0100               	movlb	0	; () banked
  9379  00E272  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
  9380  00E274  D774               	goto	l14636
  9381  00E276                     __end_of_i2c_eeprom_read_calibration:
  9382                           	opt stack 0
  9383                           tblptru	equ	0xFF8
  9384                           tblptrh	equ	0xFF7
  9385                           tblptrl	equ	0xFF6
  9386                           tablat	equ	0xFF5
  9387                           prodh	equ	0xFF4
  9388                           prodl	equ	0xFF3
  9389                           intcon3	equ	0xFF0
  9390                           postinc0	equ	0xFEE
  9391                           wreg	equ	0xFE8
  9392                           postdec1	equ	0xFE5
  9393                           plusw1	equ	0xFE3
  9394                           fsr1h	equ	0xFE2
  9395                           fsr1l	equ	0xFE1
  9396                           postinc2	equ	0xFDE
  9397                           postdec2	equ	0xFDD
  9398                           plusw2	equ	0xFDB
  9399                           fsr2h	equ	0xFDA
  9400                           fsr2l	equ	0xFD9
  9401                           status	equ	0xFD8
  9402                           
  9403 ;; *************** function _i2c_eeprom_read *****************
  9404 ;; Defined at:
  9405 ;;		line 563 in file "i2c.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  address         2   17[BANK0 ] unsigned int 
  9408 ;;  data            2   19[BANK0 ] PTR unsigned char 
  9409 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  9410 ;;  length          1   21[BANK0 ] unsigned char 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  9413 ;;  addr            1   23[BANK0 ] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9423 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;Total ram usage:        8 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:   12
  9430 ;; This function calls:
  9431 ;;		__i2c_read
  9432 ;;		__i2c_write
  9433 ;;		_i2c_set_frequency
  9434 ;; This function is called by:
  9435 ;;		_i2c_eeprom_read_calibration
  9436 ;;		_rtcc_read_eeprom
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text34
  9441  011BD0                     __ptext34:
  9442                           	opt stack 0
  9443  011BD0                     _i2c_eeprom_read:
  9444                           	opt stack 15
  9445                           
  9446                           ;i2c.c: 565: uint8_t slave_address;
  9447                           ;i2c.c: 566: uint8_t addr;
  9448                           ;i2c.c: 567: addr = address & 0xFF;
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;incstack = 0
  9452  011BD0  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  9453                           
  9454                           ;i2c.c: 568: address &= 0b0000011100000000;
  9455  011BD4  0100               	movlb	0	; () banked
  9456  011BD6  0E00               	movlw	0
  9457  011BD8  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  9458  011BDA  0E07               	movlw	7
  9459  011BDC  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9460                           
  9461                           ;i2c.c: 569: address >>= 7;
  9462  011BDE  0E07               	movlw	7
  9463  011BE0  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  9464  011BE2                     u10505:
  9465  011BE2  90D8               	bcf	status,0,c
  9466  011BE4  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9467  011BE6  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  9468  011BE8  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  9469  011BEA  D7FB               	goto	u10505
  9470                           
  9471                           ;i2c.c: 570: slave_address = 0b10100000 | address;
  9472  011BEC  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  9473  011BEE  09A0               	iorlw	160
  9474  011BF0  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  9478  011BF2  0E02               	movlw	2
  9479  011BF4  EC0F  F088         	call	_i2c_set_frequency
  9480                           
  9481                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
  9482  011BF8  0E77               	movlw	low i2c_eeprom_read@addr
  9483  011BFA  0100               	movlb	0	; () banked
  9484  011BFC  6F65               	movwf	__i2c_write@data& (0+255),b
  9485  011BFE  0E00               	movlw	high i2c_eeprom_read@addr
  9486  011C00  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9487  011C02  0E01               	movlw	1
  9488  011C04  6F67               	movwf	__i2c_write@length& (0+255),b
  9489  011C06  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9490  011C08  ECB4  F08E         	call	__i2c_write
  9491                           
  9492                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
  9493  011C0C  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  9494  011C10  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  9495  011C14  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  9496  011C18  0100               	movlb	0	; () banked
  9497  011C1A  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9498  011C1C  ECE5  F081         	call	__i2c_read
  9499  011C20  0012               	return		;funcret
  9500  011C22                     __end_of_i2c_eeprom_read:
  9501                           	opt stack 0
  9502                           tblptru	equ	0xFF8
  9503                           tblptrh	equ	0xFF7
  9504                           tblptrl	equ	0xFF6
  9505                           tablat	equ	0xFF5
  9506                           prodh	equ	0xFF4
  9507                           prodl	equ	0xFF3
  9508                           intcon3	equ	0xFF0
  9509                           postinc0	equ	0xFEE
  9510                           wreg	equ	0xFE8
  9511                           postdec1	equ	0xFE5
  9512                           plusw1	equ	0xFE3
  9513                           fsr1h	equ	0xFE2
  9514                           fsr1l	equ	0xFE1
  9515                           postinc2	equ	0xFDE
  9516                           postdec2	equ	0xFDD
  9517                           plusw2	equ	0xFDB
  9518                           fsr2h	equ	0xFDA
  9519                           fsr2l	equ	0xFD9
  9520                           status	equ	0xFD8
  9521                           
  9522 ;; *************** function __i2c_read *****************
  9523 ;; Defined at:
  9524 ;;		line 167 in file "i2c.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  slave_addres    1    wreg     unsigned char 
  9527 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9528 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  9529 ;;  length          1    7[BANK0 ] unsigned char 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  9532 ;;  cntr            1   16[BANK0 ] unsigned char 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9542 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;Total ram usage:       12 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:   11
  9549 ;; This function calls:
  9550 ;;		__i2c_acknowledge
  9551 ;;		__i2c_get
  9552 ;;		__i2c_not_acknowledge
  9553 ;;		__i2c_send
  9554 ;;		__i2c_start
  9555 ;;		__i2c_stop
  9556 ;;		__i2c_wait_idle
  9557 ;; This function is called by:
  9558 ;;		_i2c_eeprom_read
  9559 ;;		_i2c_eeprom_readByte
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text35
  9564  0103CA                     __ptext35:
  9565                           	opt stack 0
  9566  0103CA                     __i2c_read:
  9567                           	opt stack 15
  9568                           
  9569                           ;incstack = 0
  9570                           ;__i2c_read@slave_address stored from wreg
  9571  0103CA  0100               	movlb	0	; () banked
  9572  0103CC  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  9573                           
  9574                           ;i2c.c: 169: uint8_t cntr;
  9575                           ;i2c.c: 171: _i2c_wait_idle();
  9576  0103CE  EC24  F08A         	call	__i2c_wait_idle	;wreg free
  9577                           
  9578                           ;i2c.c: 172: _i2c_start();
  9579  0103D2  ECFB  F096         	call	__i2c_start	;wreg free
  9580                           
  9581                           ;i2c.c: 173: _i2c_wait_idle();
  9582  0103D6  EC24  F08A         	call	__i2c_wait_idle	;wreg free
  9583                           
  9584                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
  9585  0103DA  0100               	movlb	0	; () banked
  9586  0103DC  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  9587  0103DE  0901               	iorlw	1
  9588  0103E0  ECF2  F096         	call	__i2c_send
  9589                           
  9590                           ;i2c.c: 175: _i2c_wait_idle();
  9591  0103E4  EC24  F08A         	call	__i2c_wait_idle	;wreg free
  9592                           
  9593                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
  9594  0103E8  0E00               	movlw	0
  9595  0103EA  0100               	movlb	0	; () banked
  9596  0103EC  6F70               	movwf	__i2c_read@cntr& (0+255),b
  9597  0103EE  D00F               	goto	l1557
  9598  0103F0                     
  9599                           ; BSR set to: 0
  9600                           ;i2c.c: 186: {
  9601                           ;i2c.c: 187: data[cntr] = _i2c_get();
  9602                           
  9603                           ; BSR set to: 0
  9604  0103F0  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9605  0103F2  0D01               	mullw	1
  9606  0103F4  50F3               	movf	prodl,w,c
  9607  0103F6  2565               	addwf	__i2c_read@data& (0+255),w,b
  9608  0103F8  6ED9               	movwf	fsr2l,c
  9609  0103FA  50F4               	movf	prodh,w,c
  9610  0103FC  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9611  0103FE  6EDA               	movwf	fsr2h,c
  9612  010400  ECE3  F096         	call	__i2c_get	;wreg free
  9613  010404  6EDF               	movwf	indf2,c
  9614                           
  9615                           ;i2c.c: 188: _i2c_acknowledge();
  9616  010406  ECE8  F096         	call	__i2c_acknowledge	;wreg free
  9617  01040A  0100               	movlb	0	; () banked
  9618  01040C  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  9619  01040E                     l1557:
  9620                           
  9621                           ; BSR set to: 0
  9622                           
  9623                           ; BSR set to: 0
  9624  01040E  0EFF               	movlw	255
  9625  010410  6F68               	movwf	??__i2c_read& (0+255),b
  9626  010412  0EFF               	movlw	255
  9627  010414  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  9628  010416  5167               	movf	__i2c_read@length& (0+255),w,b
  9629  010418  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  9630  01041A  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  9631  01041C  5168               	movf	??__i2c_read& (0+255),w,b
  9632  01041E  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  9633  010420  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  9634  010422  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  9635  010424  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9636  010426  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  9637  010428  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  9638  01042A  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  9639  01042C  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  9640  01042E  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  9641  010430  0A80               	xorlw	128
  9642  010432  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  9643  010434  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  9644  010436  0A80               	xorlw	128
  9645  010438  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  9646  01043A  A0D8               	btfss	status,0,c
  9647  01043C  D7D9               	goto	l1558
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;i2c.c: 189: }
  9651                           ;i2c.c: 190: data[cntr] = _i2c_get();
  9652                           
  9653                           ; BSR set to: 0
  9654  01043E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9655  010440  0D01               	mullw	1
  9656  010442  50F3               	movf	prodl,w,c
  9657  010444  2565               	addwf	__i2c_read@data& (0+255),w,b
  9658  010446  6ED9               	movwf	fsr2l,c
  9659  010448  50F4               	movf	prodh,w,c
  9660  01044A  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9661  01044C  6EDA               	movwf	fsr2h,c
  9662  01044E  ECE3  F096         	call	__i2c_get	;wreg free
  9663  010452  6EDF               	movwf	indf2,c
  9664                           
  9665                           ;i2c.c: 191: _i2c_not_acknowledge();
  9666  010454  ECDE  F096         	call	__i2c_not_acknowledge	;wreg free
  9667                           
  9668                           ;i2c.c: 193: _i2c_stop();
  9669  010458  ECF7  F096         	call	__i2c_stop	;wreg free
  9670  01045C  0012               	return		;funcret
  9671  01045E                     __end_of__i2c_read:
  9672                           	opt stack 0
  9673                           tblptru	equ	0xFF8
  9674                           tblptrh	equ	0xFF7
  9675                           tblptrl	equ	0xFF6
  9676                           tablat	equ	0xFF5
  9677                           prodh	equ	0xFF4
  9678                           prodl	equ	0xFF3
  9679                           intcon3	equ	0xFF0
  9680                           postinc0	equ	0xFEE
  9681                           wreg	equ	0xFE8
  9682                           postdec1	equ	0xFE5
  9683                           plusw1	equ	0xFE3
  9684                           fsr1h	equ	0xFE2
  9685                           fsr1l	equ	0xFE1
  9686                           indf2	equ	0xFDF
  9687                           postinc2	equ	0xFDE
  9688                           postdec2	equ	0xFDD
  9689                           plusw2	equ	0xFDB
  9690                           fsr2h	equ	0xFDA
  9691                           fsr2l	equ	0xFD9
  9692                           status	equ	0xFD8
  9693                           
  9694 ;; *************** function __i2c_eeprom_load_default_calibration *****************
  9695 ;; Defined at:
  9696 ;;		line 645 in file "i2c.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  buffer          2    0[BANK0 ] PTR struct .
  9699 ;;		 -> calibrationParameters(84), 
  9700 ;;  index           1    2[BANK0 ] enum E8148
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;		None
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1    wreg      void 
  9705 ;; Registers used:
  9706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9712 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;Total ram usage:        3 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; Hardware stack levels required when called:   10
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_i2c_eeprom_read_calibration
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text36
  9727  009F3C                     __ptext36:
  9728                           	opt stack 0
  9729  009F3C                     __i2c_eeprom_load_default_calibration:
  9730                           	opt stack 18
  9731                           
  9732                           ;i2c.c: 647: switch(index)
  9733                           
  9734                           ;incstack = 0
  9735  009F3C  D1C8               	goto	l1640
  9736  009F3E                     
  9737                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
  9738  009F3E  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9739  009F42  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9740  009F46  0E00               	movlw	0
  9741  009F48  6EDE               	movwf	postinc2,c
  9742  009F4A  0E00               	movlw	0
  9743  009F4C  6EDD               	movwf	postdec2,c
  9744                           
  9745                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
  9746  009F4E  0100               	movlb	0	; () banked
  9747  009F50  EE20 F002          	lfsr	2,2
  9748  009F54  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9749  009F56  26D9               	addwf	fsr2l,f,c
  9750  009F58  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9751  009F5A  22DA               	addwfc	fsr2h,f,c
  9752  009F5C  0E0B               	movlw	11
  9753  009F5E  6EDE               	movwf	postinc2,c
  9754  009F60  0E00               	movlw	0
  9755  009F62  6EDD               	movwf	postdec2,c
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
  9759  009F64  EE20 F004          	lfsr	2,4
  9760  009F68  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9761  009F6A  26D9               	addwf	fsr2l,f,c
  9762  009F6C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9763  009F6E  22DA               	addwfc	fsr2h,f,c
  9764  009F70  0E04               	movlw	4
  9765  009F72  6EDF               	movwf	indf2,c
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;i2c.c: 653: (*buffer).Offset = 0;
  9769  009F74  EE20 F005          	lfsr	2,5
  9770  009F78  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9771  009F7A  26D9               	addwf	fsr2l,f,c
  9772  009F7C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9773  009F7E  22DA               	addwfc	fsr2h,f,c
  9774  009F80  0E00               	movlw	0
  9775  009F82  6EDE               	movwf	postinc2,c
  9776  009F84  0E00               	movlw	0
  9777  009F86  6EDD               	movwf	postdec2,c
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;i2c.c: 654: (*buffer).Multiplier = 11;
  9781  009F88  EE20 F007          	lfsr	2,7
  9782  009F8C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9783  009F8E  26D9               	addwf	fsr2l,f,c
  9784  009F90  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9785  009F92  22DA               	addwfc	fsr2h,f,c
  9786  009F94  0E0B               	movlw	11
  9787  009F96  6EDE               	movwf	postinc2,c
  9788  009F98  0E00               	movlw	0
  9789  009F9A  6EDD               	movwf	postdec2,c
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;i2c.c: 655: (*buffer).Shift = 4;
  9793  009F9C  EE20 F009          	lfsr	2,9
  9794  009FA0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9795  009FA2  26D9               	addwf	fsr2l,f,c
  9796  009FA4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9797  009FA6  22DA               	addwfc	fsr2h,f,c
  9798  009FA8  0E04               	movlw	4
  9799  009FAA  6EDF               	movwf	indf2,c
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
  9803  009FAC  EE20 F00A          	lfsr	2,10
  9804  009FB0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9805  009FB2  26D9               	addwf	fsr2l,f,c
  9806  009FB4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9807  009FB6  22DA               	addwfc	fsr2h,f,c
  9808  009FB8  0E00               	movlw	0
  9809  009FBA  6EDE               	movwf	postinc2,c
  9810  009FBC  0E00               	movlw	0
  9811  009FBE  6EDD               	movwf	postdec2,c
  9812                           
  9813                           ;i2c.c: 657: break;
  9814  009FC0  0012               	return	
  9815  009FC2                     
  9816                           ; BSR set to: 0
  9817                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
  9818                           
  9819                           ; BSR set to: 0
  9820  009FC2  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9821  009FC6  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9822  009FCA  0E00               	movlw	0
  9823  009FCC  6EDE               	movwf	postinc2,c
  9824  009FCE  0E00               	movlw	0
  9825  009FD0  6EDD               	movwf	postdec2,c
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
  9829  009FD2  EE20 F002          	lfsr	2,2
  9830  009FD6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9831  009FD8  26D9               	addwf	fsr2l,f,c
  9832  009FDA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9833  009FDC  22DA               	addwfc	fsr2h,f,c
  9834  009FDE  0E11               	movlw	17
  9835  009FE0  6EDE               	movwf	postinc2,c
  9836  009FE2  0E00               	movlw	0
  9837  009FE4  6EDD               	movwf	postdec2,c
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
  9841  009FE6  EE20 F004          	lfsr	2,4
  9842  009FEA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9843  009FEC  26D9               	addwf	fsr2l,f,c
  9844  009FEE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9845  009FF0  22DA               	addwfc	fsr2h,f,c
  9846  009FF2  0E05               	movlw	5
  9847  009FF4  6EDF               	movwf	indf2,c
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;i2c.c: 662: (*buffer).Offset = 0;
  9851  009FF6  EE20 F005          	lfsr	2,5
  9852  009FFA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9853  009FFC  26D9               	addwf	fsr2l,f,c
  9854  009FFE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9855  00A000  22DA               	addwfc	fsr2h,f,c
  9856  00A002  0E00               	movlw	0
  9857  00A004  6EDE               	movwf	postinc2,c
  9858  00A006  0E00               	movlw	0
  9859  00A008  6EDD               	movwf	postdec2,c
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;i2c.c: 663: (*buffer).Multiplier = 17;
  9863  00A00A  EE20 F007          	lfsr	2,7
  9864  00A00E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9865  00A010  26D9               	addwf	fsr2l,f,c
  9866  00A012  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9867  00A014  22DA               	addwfc	fsr2h,f,c
  9868  00A016  0E11               	movlw	17
  9869  00A018  6EDE               	movwf	postinc2,c
  9870  00A01A  0E00               	movlw	0
  9871  00A01C  6EDD               	movwf	postdec2,c
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;i2c.c: 664: (*buffer).Shift = 5;
  9875  00A01E  EE20 F009          	lfsr	2,9
  9876  00A022  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9877  00A024  26D9               	addwf	fsr2l,f,c
  9878  00A026  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9879  00A028  22DA               	addwfc	fsr2h,f,c
  9880  00A02A  0E05               	movlw	5
  9881  00A02C  6EDF               	movwf	indf2,c
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
  9885  00A02E  EE20 F00A          	lfsr	2,10
  9886  00A032  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9887  00A034  26D9               	addwf	fsr2l,f,c
  9888  00A036  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9889  00A038  22DA               	addwfc	fsr2h,f,c
  9890  00A03A  0E00               	movlw	0
  9891  00A03C  6EDE               	movwf	postinc2,c
  9892  00A03E  0E00               	movlw	0
  9893  00A040  6EDD               	movwf	postdec2,c
  9894                           
  9895                           ;i2c.c: 666: break;
  9896  00A042  0012               	return	
  9897  00A044                     
  9898                           ; BSR set to: 0
  9899                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
  9900                           
  9901                           ; BSR set to: 0
  9902  00A044  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9903  00A048  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9904  00A04C  0E00               	movlw	0
  9905  00A04E  6EDE               	movwf	postinc2,c
  9906  00A050  0E00               	movlw	0
  9907  00A052  6EDD               	movwf	postdec2,c
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
  9911  00A054  EE20 F002          	lfsr	2,2
  9912  00A058  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9913  00A05A  26D9               	addwf	fsr2l,f,c
  9914  00A05C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9915  00A05E  22DA               	addwfc	fsr2h,f,c
  9916  00A060  0EDB               	movlw	219
  9917  00A062  6EDE               	movwf	postinc2,c
  9918  00A064  0E16               	movlw	22
  9919  00A066  6EDD               	movwf	postdec2,c
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
  9923  00A068  EE20 F004          	lfsr	2,4
  9924  00A06C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9925  00A06E  26D9               	addwf	fsr2l,f,c
  9926  00A070  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9927  00A072  22DA               	addwfc	fsr2h,f,c
  9928  00A074  0E0F               	movlw	15
  9929  00A076  6EDF               	movwf	indf2,c
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;i2c.c: 671: (*buffer).Offset = 0;
  9933  00A078  EE20 F005          	lfsr	2,5
  9934  00A07C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9935  00A07E  26D9               	addwf	fsr2l,f,c
  9936  00A080  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9937  00A082  22DA               	addwfc	fsr2h,f,c
  9938  00A084  0E00               	movlw	0
  9939  00A086  6EDE               	movwf	postinc2,c
  9940  00A088  0E00               	movlw	0
  9941  00A08A  6EDD               	movwf	postdec2,c
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
  9945  00A08C  EE20 F007          	lfsr	2,7
  9946  00A090  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9947  00A092  26D9               	addwf	fsr2l,f,c
  9948  00A094  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9949  00A096  22DA               	addwfc	fsr2h,f,c
  9950  00A098  0EDB               	movlw	219
  9951  00A09A  6EDE               	movwf	postinc2,c
  9952  00A09C  0E16               	movlw	22
  9953  00A09E  6EDD               	movwf	postdec2,c
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;i2c.c: 673: (*buffer).Shift = 15;
  9957  00A0A0  EE20 F009          	lfsr	2,9
  9958  00A0A4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9959  00A0A6  26D9               	addwf	fsr2l,f,c
  9960  00A0A8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9961  00A0AA  22DA               	addwfc	fsr2h,f,c
  9962  00A0AC  0E0F               	movlw	15
  9963  00A0AE  6EDF               	movwf	indf2,c
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
  9967  00A0B0  EE20 F00A          	lfsr	2,10
  9968  00A0B4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9969  00A0B6  26D9               	addwf	fsr2l,f,c
  9970  00A0B8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9971  00A0BA  22DA               	addwfc	fsr2h,f,c
  9972  00A0BC  0E00               	movlw	0
  9973  00A0BE  6EDE               	movwf	postinc2,c
  9974  00A0C0  0E00               	movlw	0
  9975  00A0C2  6EDD               	movwf	postdec2,c
  9976                           
  9977                           ;i2c.c: 675: break;
  9978  00A0C4  0012               	return	
  9979  00A0C6                     
  9980                           ; BSR set to: 0
  9981                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
  9982                           
  9983                           ; BSR set to: 0
  9984  00A0C6  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9985  00A0CA  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9986  00A0CE  0E00               	movlw	0
  9987  00A0D0  6EDE               	movwf	postinc2,c
  9988  00A0D2  0E00               	movlw	0
  9989  00A0D4  6EDD               	movwf	postdec2,c
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
  9993  00A0D6  EE20 F002          	lfsr	2,2
  9994  00A0DA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9995  00A0DC  26D9               	addwf	fsr2l,f,c
  9996  00A0DE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9997  00A0E0  22DA               	addwfc	fsr2h,f,c
  9998  00A0E2  0EDB               	movlw	219
  9999  00A0E4  6EDE               	movwf	postinc2,c
 10000  00A0E6  0E16               	movlw	22
 10001  00A0E8  6EDD               	movwf	postdec2,c
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10005  00A0EA  EE20 F004          	lfsr	2,4
 10006  00A0EE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10007  00A0F0  26D9               	addwf	fsr2l,f,c
 10008  00A0F2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10009  00A0F4  22DA               	addwfc	fsr2h,f,c
 10010  00A0F6  0E0F               	movlw	15
 10011  00A0F8  6EDF               	movwf	indf2,c
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;i2c.c: 680: (*buffer).Offset = 0;
 10015  00A0FA  EE20 F005          	lfsr	2,5
 10016  00A0FE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10017  00A100  26D9               	addwf	fsr2l,f,c
 10018  00A102  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10019  00A104  22DA               	addwfc	fsr2h,f,c
 10020  00A106  0E00               	movlw	0
 10021  00A108  6EDE               	movwf	postinc2,c
 10022  00A10A  0E00               	movlw	0
 10023  00A10C  6EDD               	movwf	postdec2,c
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10027  00A10E  EE20 F007          	lfsr	2,7
 10028  00A112  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10029  00A114  26D9               	addwf	fsr2l,f,c
 10030  00A116  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10031  00A118  22DA               	addwfc	fsr2h,f,c
 10032  00A11A  0EDB               	movlw	219
 10033  00A11C  6EDE               	movwf	postinc2,c
 10034  00A11E  0E16               	movlw	22
 10035  00A120  6EDD               	movwf	postdec2,c
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;i2c.c: 682: (*buffer).Shift = 15;
 10039  00A122  EE20 F009          	lfsr	2,9
 10040  00A126  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10041  00A128  26D9               	addwf	fsr2l,f,c
 10042  00A12A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10043  00A12C  22DA               	addwfc	fsr2h,f,c
 10044  00A12E  0E0F               	movlw	15
 10045  00A130  6EDF               	movwf	indf2,c
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10049  00A132  EE20 F00A          	lfsr	2,10
 10050  00A136  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10051  00A138  26D9               	addwf	fsr2l,f,c
 10052  00A13A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10053  00A13C  22DA               	addwfc	fsr2h,f,c
 10054  00A13E  0E00               	movlw	0
 10055  00A140  6EDE               	movwf	postinc2,c
 10056  00A142  0E00               	movlw	0
 10057  00A144  6EDD               	movwf	postdec2,c
 10058                           
 10059                           ;i2c.c: 684: break;
 10060  00A146  0012               	return	
 10061  00A148                     
 10062                           ; BSR set to: 0
 10063                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10064                           
 10065                           ; BSR set to: 0
 10066  00A148  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10067  00A14C  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10068  00A150  0E37               	movlw	55
 10069  00A152  6EDE               	movwf	postinc2,c
 10070  00A154  0ECA               	movlw	202
 10071  00A156  6EDD               	movwf	postdec2,c
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10075  00A158  EE20 F002          	lfsr	2,2
 10076  00A15C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10077  00A15E  26D9               	addwf	fsr2l,f,c
 10078  00A160  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10079  00A162  22DA               	addwfc	fsr2h,f,c
 10080  00A164  0E29               	movlw	41
 10081  00A166  6EDE               	movwf	postinc2,c
 10082  00A168  0ED3               	movlw	211
 10083  00A16A  6EDD               	movwf	postdec2,c
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10087  00A16C  EE20 F004          	lfsr	2,4
 10088  00A170  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10089  00A172  26D9               	addwf	fsr2l,f,c
 10090  00A174  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10091  00A176  22DA               	addwfc	fsr2h,f,c
 10092  00A178  0E0D               	movlw	13
 10093  00A17A  6EDF               	movwf	indf2,c
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10097  00A17C  EE20 F005          	lfsr	2,5
 10098  00A180  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10099  00A182  26D9               	addwf	fsr2l,f,c
 10100  00A184  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10101  00A186  22DA               	addwfc	fsr2h,f,c
 10102  00A188  0E37               	movlw	55
 10103  00A18A  6EDE               	movwf	postinc2,c
 10104  00A18C  0ECA               	movlw	202
 10105  00A18E  6EDD               	movwf	postdec2,c
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10109  00A190  EE20 F007          	lfsr	2,7
 10110  00A194  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10111  00A196  26D9               	addwf	fsr2l,f,c
 10112  00A198  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10113  00A19A  22DA               	addwfc	fsr2h,f,c
 10114  00A19C  0E29               	movlw	41
 10115  00A19E  6EDE               	movwf	postinc2,c
 10116  00A1A0  0ED3               	movlw	211
 10117  00A1A2  6EDD               	movwf	postdec2,c
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;i2c.c: 691: (*buffer).Shift = 13;
 10121  00A1A4  EE20 F009          	lfsr	2,9
 10122  00A1A8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10123  00A1AA  26D9               	addwf	fsr2l,f,c
 10124  00A1AC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10125  00A1AE  22DA               	addwfc	fsr2h,f,c
 10126  00A1B0  0E0D               	movlw	13
 10127  00A1B2  6EDF               	movwf	indf2,c
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10131  00A1B4  EE20 F00A          	lfsr	2,10
 10132  00A1B8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10133  00A1BA  26D9               	addwf	fsr2l,f,c
 10134  00A1BC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10135  00A1BE  22DA               	addwfc	fsr2h,f,c
 10136  00A1C0  0E00               	movlw	0
 10137  00A1C2  6EDE               	movwf	postinc2,c
 10138  00A1C4  0E00               	movlw	0
 10139  00A1C6  6EDD               	movwf	postdec2,c
 10140                           
 10141                           ;i2c.c: 693: break;
 10142  00A1C8  0012               	return	
 10143  00A1CA                     
 10144                           ; BSR set to: 0
 10145                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10146                           
 10147                           ; BSR set to: 0
 10148  00A1CA  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10149  00A1CE  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10150  00A1D2  0E37               	movlw	55
 10151  00A1D4  6EDE               	movwf	postinc2,c
 10152  00A1D6  0ECA               	movlw	202
 10153  00A1D8  6EDD               	movwf	postdec2,c
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10157  00A1DA  EE20 F002          	lfsr	2,2
 10158  00A1DE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10159  00A1E0  26D9               	addwf	fsr2l,f,c
 10160  00A1E2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10161  00A1E4  22DA               	addwfc	fsr2h,f,c
 10162  00A1E6  0E29               	movlw	41
 10163  00A1E8  6EDE               	movwf	postinc2,c
 10164  00A1EA  0ED3               	movlw	211
 10165  00A1EC  6EDD               	movwf	postdec2,c
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10169  00A1EE  EE20 F004          	lfsr	2,4
 10170  00A1F2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10171  00A1F4  26D9               	addwf	fsr2l,f,c
 10172  00A1F6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10173  00A1F8  22DA               	addwfc	fsr2h,f,c
 10174  00A1FA  0E0D               	movlw	13
 10175  00A1FC  6EDF               	movwf	indf2,c
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10179  00A1FE  EE20 F005          	lfsr	2,5
 10180  00A202  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10181  00A204  26D9               	addwf	fsr2l,f,c
 10182  00A206  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10183  00A208  22DA               	addwfc	fsr2h,f,c
 10184  00A20A  0E37               	movlw	55
 10185  00A20C  6EDE               	movwf	postinc2,c
 10186  00A20E  0ECA               	movlw	202
 10187  00A210  6EDD               	movwf	postdec2,c
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10191  00A212  EE20 F007          	lfsr	2,7
 10192  00A216  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10193  00A218  26D9               	addwf	fsr2l,f,c
 10194  00A21A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10195  00A21C  22DA               	addwfc	fsr2h,f,c
 10196  00A21E  0E29               	movlw	41
 10197  00A220  6EDE               	movwf	postinc2,c
 10198  00A222  0ED3               	movlw	211
 10199  00A224  6EDD               	movwf	postdec2,c
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;i2c.c: 700: (*buffer).Shift = 13;
 10203  00A226  EE20 F009          	lfsr	2,9
 10204  00A22A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10205  00A22C  26D9               	addwf	fsr2l,f,c
 10206  00A22E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10207  00A230  22DA               	addwfc	fsr2h,f,c
 10208  00A232  0E0D               	movlw	13
 10209  00A234  6EDF               	movwf	indf2,c
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10213  00A236  EE20 F00A          	lfsr	2,10
 10214  00A23A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10215  00A23C  26D9               	addwf	fsr2l,f,c
 10216  00A23E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10217  00A240  22DA               	addwfc	fsr2h,f,c
 10218  00A242  0E00               	movlw	0
 10219  00A244  6EDE               	movwf	postinc2,c
 10220  00A246  0E00               	movlw	0
 10221  00A248  6EDD               	movwf	postdec2,c
 10222                           
 10223                           ;i2c.c: 702: break;
 10224  00A24A  0012               	return	
 10225  00A24C                     
 10226                           ; BSR set to: 0
 10227                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10228                           
 10229                           ; BSR set to: 0
 10230  00A24C  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10231  00A250  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10232  00A254  0E37               	movlw	55
 10233  00A256  6EDE               	movwf	postinc2,c
 10234  00A258  0ECA               	movlw	202
 10235  00A25A  6EDD               	movwf	postdec2,c
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10239  00A25C  EE20 F002          	lfsr	2,2
 10240  00A260  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10241  00A262  26D9               	addwf	fsr2l,f,c
 10242  00A264  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10243  00A266  22DA               	addwfc	fsr2h,f,c
 10244  00A268  0E29               	movlw	41
 10245  00A26A  6EDE               	movwf	postinc2,c
 10246  00A26C  0ED3               	movlw	211
 10247  00A26E  6EDD               	movwf	postdec2,c
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10251  00A270  EE20 F004          	lfsr	2,4
 10252  00A274  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10253  00A276  26D9               	addwf	fsr2l,f,c
 10254  00A278  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10255  00A27A  22DA               	addwfc	fsr2h,f,c
 10256  00A27C  0E0D               	movlw	13
 10257  00A27E  6EDF               	movwf	indf2,c
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10261  00A280  EE20 F005          	lfsr	2,5
 10262  00A284  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10263  00A286  26D9               	addwf	fsr2l,f,c
 10264  00A288  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10265  00A28A  22DA               	addwfc	fsr2h,f,c
 10266  00A28C  0E37               	movlw	55
 10267  00A28E  6EDE               	movwf	postinc2,c
 10268  00A290  0ECA               	movlw	202
 10269  00A292  6EDD               	movwf	postdec2,c
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10273  00A294  EE20 F007          	lfsr	2,7
 10274  00A298  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10275  00A29A  26D9               	addwf	fsr2l,f,c
 10276  00A29C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10277  00A29E  22DA               	addwfc	fsr2h,f,c
 10278  00A2A0  0E29               	movlw	41
 10279  00A2A2  6EDE               	movwf	postinc2,c
 10280  00A2A4  0ED3               	movlw	211
 10281  00A2A6  6EDD               	movwf	postdec2,c
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;i2c.c: 709: (*buffer).Shift = 13;
 10285  00A2A8  EE20 F009          	lfsr	2,9
 10286  00A2AC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10287  00A2AE  26D9               	addwf	fsr2l,f,c
 10288  00A2B0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10289  00A2B2  22DA               	addwfc	fsr2h,f,c
 10290  00A2B4  0E0D               	movlw	13
 10291  00A2B6  6EDF               	movwf	indf2,c
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 10295  00A2B8  EE20 F00A          	lfsr	2,10
 10296  00A2BC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10297  00A2BE  26D9               	addwf	fsr2l,f,c
 10298  00A2C0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10299  00A2C2  22DA               	addwfc	fsr2h,f,c
 10300  00A2C4  0E00               	movlw	0
 10301  00A2C6  6EDE               	movwf	postinc2,c
 10302  00A2C8  0E00               	movlw	0
 10303  00A2CA  6EDD               	movwf	postdec2,c
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;i2c.c: 712: }
 10307                           
 10308                           ;i2c.c: 711: break;
 10309  00A2CC  0012               	return	
 10310  00A2CE                     l1640:
 10311                           
 10312                           ; BSR set to: 0
 10313  00A2CE  0100               	movlb	0	; () banked
 10314  00A2D0  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 10315                           
 10316                           ; Switch size 1, requested type "space"
 10317                           ; Number of cases is 7, Range of values is 0 to 6
 10318                           ; switch strategies available:
 10319                           ; Name         Instructions Cycles
 10320                           ; simple_byte           22    12 (average)
 10321                           ;	Chosen strategy is simple_byte
 10322  00A2D2  0A00               	xorlw	0	; case 0
 10323  00A2D4  B4D8               	btfsc	status,2,c
 10324  00A2D6  D633               	goto	l1641
 10325  00A2D8  0A01               	xorlw	1	; case 1
 10326  00A2DA  B4D8               	btfsc	status,2,c
 10327  00A2DC  D672               	goto	l1643
 10328  00A2DE  0A03               	xorlw	3	; case 2
 10329  00A2E0  B4D8               	btfsc	status,2,c
 10330  00A2E2  D6B0               	goto	l1644
 10331  00A2E4  0A01               	xorlw	1	; case 3
 10332  00A2E6  B4D8               	btfsc	status,2,c
 10333  00A2E8  D6EE               	goto	l1645
 10334  00A2EA  0A07               	xorlw	7	; case 4
 10335  00A2EC  B4D8               	btfsc	status,2,c
 10336  00A2EE  D72C               	goto	l1646
 10337  00A2F0  0A01               	xorlw	1	; case 5
 10338  00A2F2  B4D8               	btfsc	status,2,c
 10339  00A2F4  D76A               	goto	l1647
 10340  00A2F6  0A03               	xorlw	3	; case 6
 10341  00A2F8  A4D8               	btfss	status,2,c
 10342  00A2FA  0012               	return	
 10343  00A2FC  D7A7               	goto	l1648
 10344  00A2FE                     __end_of__i2c_eeprom_load_default_calibration:
 10345                           	opt stack 0
 10346                           tblptru	equ	0xFF8
 10347                           tblptrh	equ	0xFF7
 10348                           tblptrl	equ	0xFF6
 10349                           tablat	equ	0xFF5
 10350                           prodh	equ	0xFF4
 10351                           prodl	equ	0xFF3
 10352                           intcon3	equ	0xFF0
 10353                           postinc0	equ	0xFEE
 10354                           wreg	equ	0xFE8
 10355                           postdec1	equ	0xFE5
 10356                           plusw1	equ	0xFE3
 10357                           fsr1h	equ	0xFE2
 10358                           fsr1l	equ	0xFE1
 10359                           indf2	equ	0xFDF
 10360                           postinc2	equ	0xFDE
 10361                           postdec2	equ	0xFDD
 10362                           plusw2	equ	0xFDB
 10363                           fsr2h	equ	0xFDA
 10364                           fsr2l	equ	0xFD9
 10365                           status	equ	0xFD8
 10366                           
 10367 ;; *************** function _flash_init *****************
 10368 ;; Defined at:
 10369 ;;		line 448 in file "flash.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      void 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10387 ;;Total ram usage:        0 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:   14
 10390 ;; This function calls:
 10391 ;;		__flash_set_page_size
 10392 ;; This function is called by:
 10393 ;;		_system_init
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           	psect	text37
 10398  012136                     __ptext37:
 10399                           	opt stack 0
 10400  012136                     _flash_init:
 10401                           	opt stack 15
 10402                           
 10403                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 10404                           
 10405                           ; BSR set to: 0
 10406                           ;incstack = 0
 10407  012136  0E55               	movlw	85
 10408  012138  6EA7               	movwf	4007,c	;volsfr
 10409  01213A  0EAA               	movlw	170
 10410  01213C  6EA7               	movwf	4007,c	;volsfr
 10411  01213E  010E               	movlb	14	; () banked
 10412  012140  91BF               	bcf	191,0,b	;volatile
 10413                           
 10414                           ;flash.c: 452: RPINR21 = 23;
 10415  012142  0E17               	movlw	23
 10416  012144  6FFC               	movwf	252,b	;volatile
 10417                           
 10418                           ;flash.c: 453: RPOR21 = 10;
 10419  012146  0E0A               	movlw	10
 10420  012148  6FD5               	movwf	213,b	;volatile
 10421                           
 10422                           ;flash.c: 455: RPOR22 = 11;
 10423  01214A  0E0B               	movlw	11
 10424  01214C  6FD6               	movwf	214,b	;volatile
 10425                           
 10426                           ;flash.c: 456: RPINR22 = 22;
 10427  01214E  0E16               	movlw	22
 10428  012150  6FFD               	movwf	253,b	;volatile
 10429                           
 10430                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 10431  012152  0E55               	movlw	85
 10432  012154  6EA7               	movwf	4007,c	;volsfr
 10433  012156  0EAA               	movlw	170
 10434  012158  6EA7               	movwf	4007,c	;volsfr
 10435                           
 10436                           ; BSR set to: 14
 10437  01215A  81BF               	bsf	191,0,b	;volatile
 10438                           
 10439                           ; BSR set to: 14
 10440                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 10441  01215C  8E73               	bsf	3955,7,c	;volatile
 10442                           
 10443                           ; BSR set to: 14
 10444                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 10445  01215E  8C73               	bsf	3955,6,c	;volatile
 10446                           
 10447                           ; BSR set to: 14
 10448                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 10449  012160  9872               	bcf	3954,4,c	;volatile
 10450                           
 10451                           ; BSR set to: 14
 10452                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 10453  012162  9072               	bcf	3954,0,c	;volatile
 10454  012164  9272               	bcf	3954,1,c	;volatile
 10455  012166  9472               	bcf	3954,2,c	;volatile
 10456  012168  9672               	bcf	3954,3,c	;volatile
 10457                           
 10458                           ; BSR set to: 14
 10459                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 10460  01216A  8A72               	bsf	3954,5,c	;volatile
 10461                           
 10462                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 10463  01216C  0E00               	movlw	0
 10464  01216E  6E4B               	movwf	_power_state,c
 10465                           
 10466                           ; BSR set to: 14
 10467                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 10468  012170  0E00               	movlw	0
 10469  012172  EC47  F088         	call	__flash_set_page_size
 10470  012176  0012               	return		;funcret
 10471  012178                     __end_of_flash_init:
 10472                           	opt stack 0
 10473                           tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           prodh	equ	0xFF4
 10478                           prodl	equ	0xFF3
 10479                           intcon3	equ	0xFF0
 10480                           postinc0	equ	0xFEE
 10481                           wreg	equ	0xFE8
 10482                           postdec1	equ	0xFE5
 10483                           plusw1	equ	0xFE3
 10484                           fsr1h	equ	0xFE2
 10485                           fsr1l	equ	0xFE1
 10486                           indf2	equ	0xFDF
 10487                           postinc2	equ	0xFDE
 10488                           postdec2	equ	0xFDD
 10489                           plusw2	equ	0xFDB
 10490                           fsr2h	equ	0xFDA
 10491                           fsr2l	equ	0xFD9
 10492                           status	equ	0xFD8
 10493                           
 10494 ;; *************** function __flash_set_page_size *****************
 10495 ;; Defined at:
 10496 ;;		line 260 in file "flash.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  size            1    wreg     enum E8333
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;  size            1   23[BANK0 ] enum E8333
 10501 ;;  command         4   19[BANK0 ] unsigned char [4]
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10515 ;;Total ram usage:        5 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; Hardware stack levels required when called:   13
 10518 ;; This function calls:
 10519 ;;		__flash_spi_tx
 10520 ;;		_flash_is_busy
 10521 ;;		_memcpy
 10522 ;; This function is called by:
 10523 ;;		_flash_init
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text38
 10528  01108E                     __ptext38:
 10529                           	opt stack 0
 10530  01108E                     __flash_set_page_size:
 10531                           	opt stack 15
 10532                           
 10533                           ;incstack = 0
 10534                           ;__flash_set_page_size@size stored from wreg
 10535  01108E  0100               	movlb	0	; () banked
 10536  011090  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 10537  011092                     
 10538                           ;flash.c: 262: uint8_t command[4];
 10539                           ;flash.c: 265: while(flash_is_busy());
 10540  011092  EC00  F095         	call	_flash_is_busy	;wreg free
 10541  011096  0900               	iorlw	0
 10542  011098  A4D8               	btfss	status,2,c
 10543  01109A  D7FB               	goto	l13776
 10544                           
 10545                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 10546  01109C  0100               	movlb	0	; () banked
 10547  01109E  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 10548  0110A0  A4D8               	btfss	status,2,c
 10549  0110A2  D00E               	goto	l2760
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 10553  0110A4  0E73               	movlw	low __flash_set_page_size@command
 10554  0110A6  6F60               	movwf	memcpy@d1& (0+255),b
 10555  0110A8  0E00               	movlw	high __flash_set_page_size@command
 10556  0110AA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10557  0110AC  0E4E               	movlw	low _flash_command_pagesize_512
 10558  0110AE  6F62               	movwf	memcpy@s1& (0+255),b
 10559  0110B0  0E94               	movlw	high _flash_command_pagesize_512
 10560  0110B2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10561  0110B4  0E00               	movlw	0
 10562  0110B6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10563  0110B8  0E04               	movlw	4
 10564  0110BA  6F64               	movwf	memcpy@n& (0+255),b
 10565  0110BC  EC1A  F08B         	call	_memcpy	;wreg free
 10566  0110C0                     l2760:
 10567                           
 10568                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 10569  0110C0  0100               	movlb	0	; () banked
 10570  0110C2  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 10571  0110C4  A4D8               	btfss	status,2,c
 10572  0110C6  D00E               	goto	l2761
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 10576  0110C8  0E73               	movlw	low __flash_set_page_size@command
 10577  0110CA  6F60               	movwf	memcpy@d1& (0+255),b
 10578  0110CC  0E00               	movlw	high __flash_set_page_size@command
 10579  0110CE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10580  0110D0  0E4A               	movlw	low _flash_command_pagesize_528
 10581  0110D2  6F62               	movwf	memcpy@s1& (0+255),b
 10582  0110D4  0E94               	movlw	high _flash_command_pagesize_528
 10583  0110D6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10584  0110D8  0E00               	movlw	0
 10585  0110DA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10586  0110DC  0E04               	movlw	4
 10587  0110DE  6F64               	movwf	memcpy@n& (0+255),b
 10588  0110E0  EC1A  F08B         	call	_memcpy	;wreg free
 10589  0110E4                     l2761:
 10590                           
 10591                           ;flash.c: 274: _flash_spi_tx(command, 4);
 10592  0110E4  0E73               	movlw	low __flash_set_page_size@command
 10593  0110E6  0100               	movlb	0	; () banked
 10594  0110E8  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 10595  0110EA  0E00               	movlw	high __flash_set_page_size@command
 10596  0110EC  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 10597  0110EE  0E00               	movlw	0
 10598  0110F0  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 10599  0110F2  0E04               	movlw	4
 10600  0110F4  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 10601  0110F6  ECE5  F08C         	call	__flash_spi_tx	;wreg free
 10602  0110FA  0012               	return		;funcret
 10603  0110FC                     __end_of__flash_set_page_size:
 10604                           	opt stack 0
 10605                           tblptru	equ	0xFF8
 10606                           tblptrh	equ	0xFF7
 10607                           tblptrl	equ	0xFF6
 10608                           tablat	equ	0xFF5
 10609                           prodh	equ	0xFF4
 10610                           prodl	equ	0xFF3
 10611                           intcon3	equ	0xFF0
 10612                           postinc0	equ	0xFEE
 10613                           wreg	equ	0xFE8
 10614                           postdec1	equ	0xFE5
 10615                           plusw1	equ	0xFE3
 10616                           fsr1h	equ	0xFE2
 10617                           fsr1l	equ	0xFE1
 10618                           indf2	equ	0xFDF
 10619                           postinc2	equ	0xFDE
 10620                           postdec2	equ	0xFDD
 10621                           plusw2	equ	0xFDB
 10622                           fsr2h	equ	0xFDA
 10623                           fsr2l	equ	0xFD9
 10624                           status	equ	0xFD8
 10625                           
 10626 ;; *************** function _buck_init *****************
 10627 ;; Defined at:
 10628 ;;		line 543 in file "buck.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;		None
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, status,2, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10646 ;;Total ram usage:        0 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; Hardware stack levels required when called:   11
 10649 ;; This function calls:
 10650 ;;		__buck_pin_init
 10651 ;;		__buck_timer2_init
 10652 ;; This function is called by:
 10653 ;;		_system_init
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text39
 10658  012CAA                     __ptext39:
 10659                           	opt stack 0
 10660  012CAA                     _buck_init:
 10661                           	opt stack 18
 10662                           
 10663                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 10664                           
 10665                           ;incstack = 0
 10666  012CAA  0E00               	movlw	0
 10667  012CAC  0100               	movlb	0	; () banked
 10668  012CAE  6FFF               	movwf	_buck_status& (0+255),b
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;buck.c: 546: _buck_timer2_init();
 10672  012CB0  ECAE  F095         	call	__buck_timer2_init	;wreg free
 10673                           
 10674                           ;buck.c: 547: _buck_pin_init();
 10675  012CB4  EC67  F092         	call	__buck_pin_init	;wreg free
 10676  012CB8  0012               	return		;funcret
 10677  012CBA                     __end_of_buck_init:
 10678                           	opt stack 0
 10679                           tblptru	equ	0xFF8
 10680                           tblptrh	equ	0xFF7
 10681                           tblptrl	equ	0xFF6
 10682                           tablat	equ	0xFF5
 10683                           prodh	equ	0xFF4
 10684                           prodl	equ	0xFF3
 10685                           intcon3	equ	0xFF0
 10686                           postinc0	equ	0xFEE
 10687                           wreg	equ	0xFE8
 10688                           postdec1	equ	0xFE5
 10689                           plusw1	equ	0xFE3
 10690                           fsr1h	equ	0xFE2
 10691                           fsr1l	equ	0xFE1
 10692                           indf2	equ	0xFDF
 10693                           postinc2	equ	0xFDE
 10694                           postdec2	equ	0xFDD
 10695                           plusw2	equ	0xFDB
 10696                           fsr2h	equ	0xFDA
 10697                           fsr2l	equ	0xFD9
 10698                           status	equ	0xFD8
 10699                           
 10700 ;; *************** function __buck_timer2_init *****************
 10701 ;; Defined at:
 10702 ;;		line 64 in file "buck.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;		None
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;		None
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		None
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10720 ;;Total ram usage:        0 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:   10
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_buck_init
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text40
 10731  012B5C                     __ptext40:
 10732                           	opt stack 0
 10733  012B5C                     __buck_timer2_init:
 10734                           	opt stack 18
 10735                           
 10736                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 10737                           
 10738                           ;incstack = 0
 10739  012B5C  010F               	movlb	15	; () banked
 10740  012B5E  9152               	bcf	82,0,b	;volatile
 10741  012B60  9352               	bcf	82,1,b	;volatile
 10742  012B62  9552               	bcf	82,2,b	;volatile
 10743                           
 10744                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 10745  012B64  86CA               	bsf	4042,3,c	;volatile
 10746  012B66  88CA               	bsf	4042,4,c	;volatile
 10747  012B68  8ACA               	bsf	4042,5,c	;volatile
 10748  012B6A  8CCA               	bsf	4042,6,c	;volatile
 10749                           
 10750                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 10751  012B6C  92CA               	bcf	4042,1,c	;volatile
 10752                           
 10753                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 10754  012B6E  90CA               	bcf	4042,0,c	;volatile
 10755                           
 10756                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 10757  012B70  94CA               	bcf	4042,2,c	;volatile
 10758                           
 10759                           ; BSR set to: 15
 10760  012B72  0012               	return		;funcret
 10761  012B74                     __end_of__buck_timer2_init:
 10762                           	opt stack 0
 10763                           tblptru	equ	0xFF8
 10764                           tblptrh	equ	0xFF7
 10765                           tblptrl	equ	0xFF6
 10766                           tablat	equ	0xFF5
 10767                           prodh	equ	0xFF4
 10768                           prodl	equ	0xFF3
 10769                           intcon3	equ	0xFF0
 10770                           postinc0	equ	0xFEE
 10771                           wreg	equ	0xFE8
 10772                           postdec1	equ	0xFE5
 10773                           plusw1	equ	0xFE3
 10774                           fsr1h	equ	0xFE2
 10775                           fsr1l	equ	0xFE1
 10776                           indf2	equ	0xFDF
 10777                           postinc2	equ	0xFDE
 10778                           postdec2	equ	0xFDD
 10779                           plusw2	equ	0xFDB
 10780                           fsr2h	equ	0xFDA
 10781                           fsr2l	equ	0xFD9
 10782                           status	equ	0xFD8
 10783                           
 10784 ;; *************** function __buck_pin_init *****************
 10785 ;; Defined at:
 10786 ;;		line 41 in file "buck.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg, status,2
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10804 ;;Total ram usage:        0 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:   10
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_buck_init
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           	psect	text41
 10815  0124CE                     __ptext41:
 10816                           	opt stack 0
 10817  0124CE                     __buck_pin_init:
 10818                           	opt stack 18
 10819                           
 10820                           ;buck.c: 44: LATBbits.LB1 = 0;
 10821                           
 10822                           ; BSR set to: 15
 10823                           ;incstack = 0
 10824  0124CE  928A               	bcf	3978,1,c	;volatile
 10825                           
 10826                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 10827  0124D0  9293               	bcf	3987,1,c	;volatile
 10828                           
 10829                           ;buck.c: 46: LATBbits.LB2 = 0;
 10830  0124D2  948A               	bcf	3978,2,c	;volatile
 10831                           
 10832                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 10833  0124D4  9493               	bcf	3987,2,c	;volatile
 10834                           
 10835                           ;buck.c: 48: LATBbits.LB3 = 0;
 10836  0124D6  968A               	bcf	3978,3,c	;volatile
 10837                           
 10838                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 10839  0124D8  9693               	bcf	3987,3,c	;volatile
 10840                           
 10841                           ;buck.c: 52: LATBbits.LATB2 = 0;
 10842  0124DA  948A               	bcf	3978,2,c	;volatile
 10843                           
 10844                           ;buck.c: 53: LATBbits.LATB1 = 0;
 10845  0124DC  928A               	bcf	3978,1,c	;volatile
 10846                           
 10847                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 10848  0124DE  0E55               	movlw	85
 10849  0124E0  6EA7               	movwf	4007,c	;volsfr
 10850  0124E2  0EAA               	movlw	170
 10851  0124E4  6EA7               	movwf	4007,c	;volsfr
 10852  0124E6  010E               	movlb	14	; () banked
 10853  0124E8  91BF               	bcf	191,0,b	;volatile
 10854                           
 10855                           ;buck.c: 57: RPOR6 = 14;
 10856  0124EA  0E0E               	movlw	14
 10857  0124EC  6FC6               	movwf	198,b	;volatile
 10858                           
 10859                           ;buck.c: 58: RPOR5 = 15;
 10860  0124EE  0E0F               	movlw	15
 10861  0124F0  6FC5               	movwf	197,b	;volatile
 10862                           
 10863                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 10864  0124F2  0E55               	movlw	85
 10865  0124F4  6EA7               	movwf	4007,c	;volsfr
 10866  0124F6  0EAA               	movlw	170
 10867  0124F8  6EA7               	movwf	4007,c	;volsfr
 10868                           
 10869                           ; BSR set to: 14
 10870  0124FA  81BF               	bsf	191,0,b	;volatile
 10871                           
 10872                           ; BSR set to: 14
 10873  0124FC  0012               	return		;funcret
 10874  0124FE                     __end_of__buck_pin_init:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon3	equ	0xFF0
 10883                           postinc0	equ	0xFEE
 10884                           wreg	equ	0xFE8
 10885                           postdec1	equ	0xFE5
 10886                           plusw1	equ	0xFE3
 10887                           fsr1h	equ	0xFE2
 10888                           fsr1l	equ	0xFE1
 10889                           indf2	equ	0xFDF
 10890                           postinc2	equ	0xFDE
 10891                           postdec2	equ	0xFDD
 10892                           plusw2	equ	0xFDB
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function _adc_init *****************
 10898 ;; Defined at:
 10899 ;;		line 9 in file "adc.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      void 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:   10
 10920 ;; This function calls:
 10921 ;;		Nothing
 10922 ;; This function is called by:
 10923 ;;		_system_init
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text42
 10928  012AA2                     __ptext42:
 10929                           	opt stack 0
 10930  012AA2                     _adc_init:
 10931                           	opt stack 19
 10932                           
 10933                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 10934                           
 10935                           ; BSR set to: 14
 10936                           ;incstack = 0
 10937  012AA2  9EC2               	bcf	4034,7,c	;volatile
 10938                           
 10939                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 10940  012AA4  8CC2               	bsf	4034,6,c	;volatile
 10941                           
 10942                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 10943  012AA6  50C2               	movf	4034,w,c	;volatile
 10944  012AA8  0BC3               	andlw	-61
 10945  012AAA  0930               	iorlw	48
 10946  012AAC  6EC2               	movwf	4034,c	;volatile
 10947                           
 10948                           ;adc.c: 14: ADCON0bits.ADON = 1;
 10949  012AAE  80C2               	bsf	4034,0,c	;volatile
 10950                           
 10951                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 10952  012AB0  9EC1               	bcf	4033,7,c	;volatile
 10953                           
 10954                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 10955  012AB2  9CC1               	bcf	4033,6,c	;volatile
 10956                           
 10957                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 10958  012AB4  50C1               	movf	4033,w,c	;volatile
 10959  012AB6  0BF8               	andlw	-8
 10960  012AB8  0906               	iorlw	6
 10961  012ABA  6EC1               	movwf	4033,c	;volatile
 10962  012ABC  0012               	return		;funcret
 10963  012ABE                     __end_of_adc_init:
 10964                           	opt stack 0
 10965                           tblptru	equ	0xFF8
 10966                           tblptrh	equ	0xFF7
 10967                           tblptrl	equ	0xFF6
 10968                           tablat	equ	0xFF5
 10969                           prodh	equ	0xFF4
 10970                           prodl	equ	0xFF3
 10971                           intcon3	equ	0xFF0
 10972                           postinc0	equ	0xFEE
 10973                           wreg	equ	0xFE8
 10974                           postdec1	equ	0xFE5
 10975                           plusw1	equ	0xFE3
 10976                           fsr1h	equ	0xFE2
 10977                           fsr1l	equ	0xFE1
 10978                           indf2	equ	0xFDF
 10979                           postinc2	equ	0xFDE
 10980                           postdec2	equ	0xFDD
 10981                           plusw2	equ	0xFDB
 10982                           fsr2h	equ	0xFDA
 10983                           fsr2l	equ	0xFD9
 10984                           status	equ	0xFD8
 10985                           
 10986 ;; *************** function __system_timer0_init *****************
 10987 ;; Defined at:
 10988 ;;		line 214 in file "os.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;		None
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;		None
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1    wreg      void 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11006 ;;Total ram usage:        0 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; Hardware stack levels required when called:   10
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_system_init
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text43
 11017  0121BA                     __ptext43:
 11018                           	opt stack 0
 11019  0121BA                     __system_timer0_init:
 11020                           	opt stack 19
 11021                           
 11022                           ;os.c: 217: T0CONbits.T0CS = 0;
 11023                           
 11024                           ;incstack = 0
 11025  0121BA  9AD5               	bcf	4053,5,c	;volatile
 11026                           
 11027                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11028  0121BC  9CD5               	bcf	4053,6,c	;volatile
 11029                           
 11030                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11031  0121BE  94D5               	bcf	4053,2,c	;volatile
 11032                           
 11033                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11034  0121C0  82D5               	bsf	4053,1,c	;volatile
 11035                           
 11036                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11037  0121C2  90D5               	bcf	4053,0,c	;volatile
 11038                           
 11039                           ;os.c: 225: T0CONbits.PSA = 0;
 11040  0121C4  96D5               	bcf	4053,3,c	;volatile
 11041                           
 11042                           ;os.c: 227: switch(os.clockFrequency)
 11043  0121C6  D009               	goto	l1373
 11044  0121C8                     
 11045                           ;os.c: 230: TMR0H = 0xF8;
 11046  0121C8  0EF8               	movlw	248
 11047  0121CA  6ED7               	movwf	4055,c	;volatile
 11048                           
 11049                           ;os.c: 231: TMR0L = 0x30;
 11050  0121CC  0E30               	movlw	48
 11051  0121CE  D003               	goto	L8
 11052  0121D0                     
 11053                           ;os.c: 234: TMR0H = 0xD1;
 11054  0121D0  0ED1               	movlw	209
 11055  0121D2  6ED7               	movwf	4055,c	;volatile
 11056                           
 11057                           ;os.c: 235: TMR0L = 0x20;
 11058  0121D4  0E20               	movlw	32
 11059  0121D6                     L8:
 11060  0121D6  6ED6               	movwf	4054,c	;volatile
 11061                           
 11062                           ;os.c: 237: }
 11063                           
 11064                           ;os.c: 236: break;
 11065  0121D8  D008               	goto	l1375
 11066  0121DA                     l1373:
 11067  0121DA  0102               	movlb	2	; () banked
 11068  0121DC  5100               	movf	_os& (0+255),w,b	;volatile
 11069                           
 11070                           ; Switch size 1, requested type "space"
 11071                           ; Number of cases is 2, Range of values is 1 to 2
 11072                           ; switch strategies available:
 11073                           ; Name         Instructions Cycles
 11074                           ; simple_byte            7     4 (average)
 11075                           ;	Chosen strategy is simple_byte
 11076  0121DE  0A01               	xorlw	1	; case 1
 11077  0121E0  B4D8               	btfsc	status,2,c
 11078  0121E2  D7F2               	goto	l1374
 11079  0121E4  0A03               	xorlw	3	; case 2
 11080  0121E6  B4D8               	btfsc	status,2,c
 11081  0121E8  D7F3               	goto	l1376
 11082  0121EA                     l1375:
 11083                           
 11084                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11085  0121EA  8ED5               	bsf	4053,7,c	;volatile
 11086                           
 11087                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11088  0121EC  94F2               	bcf	intcon,2,c	;volatile
 11089                           
 11090                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11091  0121EE  8AF2               	bsf	intcon,5,c	;volatile
 11092                           
 11093                           ;os.c: 244: INTCONbits.GIE = 1;
 11094  0121F0  8EF2               	bsf	intcon,7,c	;volatile
 11095                           
 11096                           ;os.c: 247: os.timeSlot = 0;
 11097  0121F2  0E00               	movlw	0
 11098  0121F4  0102               	movlb	2	; () banked
 11099  0121F6  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11100                           
 11101                           ; BSR set to: 2
 11102  0121F8  0012               	return		;funcret
 11103  0121FA                     __end_of__system_timer0_init:
 11104                           	opt stack 0
 11105                           tblptru	equ	0xFF8
 11106                           tblptrh	equ	0xFF7
 11107                           tblptrl	equ	0xFF6
 11108                           tablat	equ	0xFF5
 11109                           prodh	equ	0xFF4
 11110                           prodl	equ	0xFF3
 11111                           intcon	equ	0xFF2
 11112                           intcon3	equ	0xFF0
 11113                           postinc0	equ	0xFEE
 11114                           wreg	equ	0xFE8
 11115                           postdec1	equ	0xFE5
 11116                           plusw1	equ	0xFE3
 11117                           fsr1h	equ	0xFE2
 11118                           fsr1l	equ	0xFE1
 11119                           indf2	equ	0xFDF
 11120                           postinc2	equ	0xFDE
 11121                           postdec2	equ	0xFDD
 11122                           plusw2	equ	0xFDB
 11123                           fsr2h	equ	0xFDA
 11124                           fsr2l	equ	0xFD9
 11125                           status	equ	0xFD8
 11126                           
 11127 ;; *************** function __system_encoder_init *****************
 11128 ;; Defined at:
 11129 ;;		line 160 in file "os.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;		None
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;Total ram usage:        0 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:   10
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_system_init
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text44
 11158  0121FA                     __ptext44:
 11159                           	opt stack 0
 11160  0121FA                     __system_encoder_init:
 11161                           	opt stack 19
 11162                           
 11163                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11164                           
 11165                           ; BSR set to: 2
 11166                           ;incstack = 0
 11167  0121FA  0E55               	movlw	85
 11168  0121FC  6EA7               	movwf	4007,c	;volsfr
 11169  0121FE  0EAA               	movlw	170
 11170  012200  6EA7               	movwf	4007,c	;volsfr
 11171  012202  010E               	movlb	14	; () banked
 11172  012204  91BF               	bcf	191,0,b	;volatile
 11173                           
 11174                           ;os.c: 163: RPINR1 = 0;
 11175  012206  0E00               	movlw	0
 11176  012208  6FE1               	movwf	225,b	;volatile
 11177                           
 11178                           ;os.c: 164: RPINR3 = 9;
 11179  01220A  0E09               	movlw	9
 11180  01220C  6FE3               	movwf	227,b	;volatile
 11181                           
 11182                           ;os.c: 165: RPINR2 = 10;
 11183  01220E  0E0A               	movlw	10
 11184  012210  6FE2               	movwf	226,b	;volatile
 11185                           
 11186                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11187  012212  0E55               	movlw	85
 11188  012214  6EA7               	movwf	4007,c	;volsfr
 11189  012216  0EAA               	movlw	170
 11190  012218  6EA7               	movwf	4007,c	;volsfr
 11191                           
 11192                           ; BSR set to: 14
 11193  01221A  91BF               	bcf	191,0,b	;volatile
 11194                           
 11195                           ; BSR set to: 14
 11196                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11197  01221C  9AF1               	bcf	intcon2,5,c	;volatile
 11198                           
 11199                           ; BSR set to: 14
 11200                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11201  01221E  90F0               	bcf	intcon3,0,c	;volatile
 11202                           
 11203                           ; BSR set to: 14
 11204                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11205  012220  86F0               	bsf	intcon3,3,c	;volatile
 11206                           
 11207                           ; BSR set to: 14
 11208                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11209  012222  88F1               	bsf	intcon2,4,c	;volatile
 11210                           
 11211                           ; BSR set to: 14
 11212                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11213  012224  92F0               	bcf	intcon3,1,c	;volatile
 11214                           
 11215                           ; BSR set to: 14
 11216                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11217  012226  86F1               	bsf	intcon2,3,c	;volatile
 11218                           
 11219                           ; BSR set to: 14
 11220                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11221  012228  94F0               	bcf	intcon3,2,c	;volatile
 11222                           
 11223                           ; BSR set to: 14
 11224                           ;os.c: 185: INTCONbits.GIE = 1;
 11225  01222A  8EF2               	bsf	intcon,7,c	;volatile
 11226                           
 11227                           ;os.c: 187: os.encoderCount = 0;
 11228  01222C  0E00               	movlw	0
 11229  01222E  0102               	movlb	2	; () banked
 11230  012230  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11231                           
 11232                           ;os.c: 188: os.buttonCount = 0;
 11233  012232  0E00               	movlw	0
 11234  012234  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11235                           
 11236                           ; BSR set to: 2
 11237  012236  0012               	return		;funcret
 11238  012238                     __end_of__system_encoder_init:
 11239                           	opt stack 0
 11240                           tblptru	equ	0xFF8
 11241                           tblptrh	equ	0xFF7
 11242                           tblptrl	equ	0xFF6
 11243                           tablat	equ	0xFF5
 11244                           prodh	equ	0xFF4
 11245                           prodl	equ	0xFF3
 11246                           intcon	equ	0xFF2
 11247                           intcon2	equ	0xFF1
 11248                           intcon3	equ	0xFF0
 11249                           postinc0	equ	0xFEE
 11250                           wreg	equ	0xFE8
 11251                           postdec1	equ	0xFE5
 11252                           plusw1	equ	0xFE3
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           indf2	equ	0xFDF
 11256                           postinc2	equ	0xFDE
 11257                           postdec2	equ	0xFDD
 11258                           plusw2	equ	0xFDB
 11259                           fsr2h	equ	0xFDA
 11260                           fsr2l	equ	0xFD9
 11261                           status	equ	0xFD8
 11262                           
 11263 ;; *************** function _system_calculate_output_voltage *****************
 11264 ;; Defined at:
 11265 ;;		line 587 in file "os.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;  tmp             4   16[BANK0 ] long 
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11282 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11283 ;;Total ram usage:        8 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:   11
 11286 ;; This function calls:
 11287 ;;		___lmul
 11288 ;; This function is called by:
 11289 ;;		_main
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text45
 11294  00F276                     __ptext45:
 11295                           	opt stack 0
 11296  00F276                     _system_calculate_output_voltage:
 11297                           	opt stack 19
 11298                           
 11299                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 11300                           
 11301                           ; BSR set to: 2
 11302                           ;incstack = 0
 11303  00F276  0102               	movlb	2	; () banked
 11304  00F278  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 11305  00F27A  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 11306  00F27C  0100               	movlb	0	; () banked
 11307  00F27E  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 11308  00F280  0102               	movlb	2	; () banked
 11309  00F282  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 11310  00F284  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 11311  00F286  0100               	movlb	0	; () banked
 11312  00F288  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11313  00F28A  0102               	movlb	2	; () banked
 11314  00F28C  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 11315  00F28E  0100               	movlb	0	; () banked
 11316  00F290  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11317  00F292  0102               	movlb	2	; () banked
 11318  00F294  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 11319  00F296  0100               	movlb	0	; () banked
 11320  00F298  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11321  00F29A  0102               	movlb	2	; () banked
 11322  00F29C  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 11323  00F29E  0100               	movlb	0	; () banked
 11324  00F2A0  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11325  00F2A2  0102               	movlb	2	; () banked
 11326  00F2A4  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 11327  00F2A6  0100               	movlb	0	; () banked
 11328  00F2A8  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11329  00F2AA  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 11330  00F2AE  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 11331  00F2B2  0E00               	movlw	0
 11332  00F2B4  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 11333  00F2B6  0EFF               	movlw	-1
 11334  00F2B8  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 11335  00F2BA  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 11336                           
 11337                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 11338  00F2BC  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 11339  00F2C0  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 11340  00F2C4  0E00               	movlw	0
 11341  00F2C6  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 11342  00F2C8  0EFF               	movlw	255
 11343  00F2CA  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 11344  00F2CC  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 11345  00F2CE  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 11346  00F2D0  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11347  00F2D2  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 11348  00F2D4  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11349  00F2D6  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 11350  00F2D8  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11351  00F2DA  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 11352  00F2DC  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11353                           
 11354                           ; BSR set to: 0
 11355                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 11356  00F2DE  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 11357  00F2E2  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 11358  00F2E6  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 11359  00F2EA  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 11360  00F2EE  EE23  F013         	lfsr	2,_calibrationParameters+19
 11361  00F2F2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11362  00F2F6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11363  00F2FA  0E00               	movlw	0
 11364  00F2FC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11365  00F2FE  0EFF               	movlw	-1
 11366  00F300  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11367  00F302  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11368  00F304  EC12  F08D         	call	___lmul	;wreg free
 11369  00F308  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 11370  00F30C  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 11371  00F310  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 11372  00F314  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 11373                           
 11374                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 11375  00F318  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 11376  00F31C  0EFF               	movlw	-1
 11377  00F31E  0100               	movlb	0	; () banked
 11378  00F320  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11379  00F322  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 11380  00F324  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11381  00F326  D005               	goto	u15080
 11382  00F328                     u15085:
 11383  00F328  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11384  00F32A  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11385  00F32C  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11386  00F32E  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11387  00F330  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11388  00F332                     u15080:
 11389  00F332  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11390  00F334  D7F9               	goto	u15085
 11391                           
 11392                           ;os.c: 593: tmp += 1;
 11393  00F336  0E01               	movlw	1
 11394  00F338  0100               	movlb	0	; () banked
 11395  00F33A  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11396  00F33C  0E00               	movlw	0
 11397  00F33E  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11398  00F340  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11399  00F342  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;os.c: 594: tmp >>= 1;
 11403  00F344  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11404  00F346  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11405  00F348  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11406  00F34A  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11407  00F34C  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 11411  00F34E  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 11412  00F352  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 11413                           
 11414                           ; BSR set to: 0
 11415  00F356  0012               	return		;funcret
 11416  00F358                     __end_of_system_calculate_output_voltage:
 11417                           	opt stack 0
 11418                           tblptru	equ	0xFF8
 11419                           tblptrh	equ	0xFF7
 11420                           tblptrl	equ	0xFF6
 11421                           tablat	equ	0xFF5
 11422                           prodh	equ	0xFF4
 11423                           prodl	equ	0xFF3
 11424                           intcon	equ	0xFF2
 11425                           intcon2	equ	0xFF1
 11426                           intcon3	equ	0xFF0
 11427                           postinc0	equ	0xFEE
 11428                           wreg	equ	0xFE8
 11429                           postdec1	equ	0xFE5
 11430                           plusw1	equ	0xFE3
 11431                           fsr1h	equ	0xFE2
 11432                           fsr1l	equ	0xFE1
 11433                           indf2	equ	0xFDF
 11434                           postinc2	equ	0xFDE
 11435                           postdec2	equ	0xFDD
 11436                           plusw2	equ	0xFDB
 11437                           fsr2h	equ	0xFDA
 11438                           fsr2l	equ	0xFD9
 11439                           status	equ	0xFD8
 11440                           
 11441 ;; *************** function _system_calculate_output_current *****************
 11442 ;; Defined at:
 11443 ;;		line 625 in file "os.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;		None
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;  tmp             4   16[BANK0 ] long 
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      void 
 11450 ;; Registers used:
 11451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11459 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11460 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11461 ;;Total ram usage:        8 bytes
 11462 ;; Hardware stack levels used:    1
 11463 ;; Hardware stack levels required when called:   11
 11464 ;; This function calls:
 11465 ;;		___lmul
 11466 ;;		_buck_get_mode
 11467 ;; This function is called by:
 11468 ;;		_main
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text46
 11473  00DF10                     __ptext46:
 11474                           	opt stack 0
 11475  00DF10                     _system_calculate_output_current:
 11476                           	opt stack 19
 11477                           
 11478                           ;os.c: 627: int32_t tmp;
 11479                           ;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;incstack = 0
 11483  00DF10  EC08  F097         	call	_buck_get_mode	;wreg free
 11484  00DF14  0900               	iorlw	0
 11485  00DF16  B4D8               	btfsc	status,2,c
 11486  00DF18  D005               	goto	u15110
 11487  00DF1A  EC08  F097         	call	_buck_get_mode	;wreg free
 11488  00DF1E  0A80               	xorlw	128
 11489  00DF20  A4D8               	btfss	status,2,c
 11490  00DF22  D006               	goto	l1440
 11491  00DF24                     u15110:
 11492                           
 11493                           ;os.c: 630: {
 11494                           ;os.c: 631: os.output_current = 0;
 11495  00DF24  0E00               	movlw	0
 11496  00DF26  0102               	movlb	2	; () banked
 11497  00DF28  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 11498  00DF2A  0E00               	movlw	0
 11499  00DF2C  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 11500                           
 11501                           ;os.c: 632: }
 11502  00DF2E  0012               	return	
 11503  00DF30                     l1440:
 11504                           
 11505                           ;os.c: 633: else
 11506                           ;os.c: 634: {
 11507                           ;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.output_current_adc[1] + os.ou
      +                          tput_current_adc[2] + os.output_current_adc[3]);
 11508                           
 11509                           ; BSR set to: 2
 11510  00DF30  0102               	movlb	2	; () banked
 11511  00DF32  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 11512  00DF34  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 11513  00DF36  0100               	movlb	0	; () banked
 11514  00DF38  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 11515  00DF3A  0102               	movlb	2	; () banked
 11516  00DF3C  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 11517  00DF3E  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 11518  00DF40  0100               	movlb	0	; () banked
 11519  00DF42  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11520  00DF44  0102               	movlb	2	; () banked
 11521  00DF46  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 11522  00DF48  0100               	movlb	0	; () banked
 11523  00DF4A  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11524  00DF4C  0102               	movlb	2	; () banked
 11525  00DF4E  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 11526  00DF50  0100               	movlb	0	; () banked
 11527  00DF52  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11528  00DF54  0102               	movlb	2	; () banked
 11529  00DF56  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 11530  00DF58  0100               	movlb	0	; () banked
 11531  00DF5A  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11532  00DF5C  0102               	movlb	2	; () banked
 11533  00DF5E  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 11534  00DF60  0100               	movlb	0	; () banked
 11535  00DF62  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11536  00DF64  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 11537  00DF68  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 11538  00DF6C  0E00               	movlw	0
 11539  00DF6E  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 11540  00DF70  0EFF               	movlw	-1
 11541  00DF72  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 11542  00DF74  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 11543                           
 11544                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 11545  00DF76  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 11546  00DF7A  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 11547  00DF7E  0E00               	movlw	0
 11548  00DF80  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11549  00DF82  0EFF               	movlw	255
 11550  00DF84  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11551  00DF86  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11552  00DF88  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11553  00DF8A  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11554  00DF8C  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11555  00DF8E  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11556  00DF90  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11557  00DF92  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11558  00DF94  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11559  00DF96  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11560                           
 11561                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 11562  00DF98  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 11563  00DF9C  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 11564  00DFA0  0E00               	movlw	0
 11565  00DFA2  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11566  00DFA4  0EFF               	movlw	255
 11567  00DFA6  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11568  00DFA8  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11569  00DFAA  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11570  00DFAC  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11571  00DFAE  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11572  00DFB0  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11573  00DFB2  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11574  00DFB4  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11575  00DFB6  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11576  00DFB8  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 11580  00DFBA  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 11581  00DFBE  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 11582  00DFC2  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 11583  00DFC6  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 11584  00DFCA  EE23  F02B         	lfsr	2,_calibrationParameters+43
 11585  00DFCE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11586  00DFD2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11587  00DFD6  0E00               	movlw	0
 11588  00DFD8  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11589  00DFDA  0EFF               	movlw	-1
 11590  00DFDC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11591  00DFDE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11592  00DFE0  EC12  F08D         	call	___lmul	;wreg free
 11593  00DFE4  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 11594  00DFE8  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 11595  00DFEC  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 11596  00DFF0  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 11597                           
 11598                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 11599  00DFF4  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 11600  00DFF8  0EFF               	movlw	-1
 11601  00DFFA  0100               	movlb	0	; () banked
 11602  00DFFC  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11603  00DFFE  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 11604  00E000  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11605  00E002  D005               	goto	u15120
 11606  00E004                     u15125:
 11607  00E004  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11608  00E006  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11609  00E008  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11610  00E00A  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11611  00E00C  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11612  00E00E                     u15120:
 11613  00E00E  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 11614  00E010  D7F9               	goto	u15125
 11615                           
 11616                           ;os.c: 640: tmp += 1;
 11617  00E012  0E01               	movlw	1
 11618  00E014  0100               	movlb	0	; () banked
 11619  00E016  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11620  00E018  0E00               	movlw	0
 11621  00E01A  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11622  00E01C  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11623  00E01E  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;os.c: 641: tmp >>= 1;
 11627  00E020  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11628  00E022  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11629  00E024  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11630  00E026  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11631  00E028  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;os.c: 642: os.output_current = (int16_t) tmp;
 11635  00E02A  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 11636  00E02E  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 11637  00E032  0012               	return	
 11638  00E034                     __end_of_system_calculate_output_current:
 11639                           	opt stack 0
 11640                           tblptru	equ	0xFF8
 11641                           tblptrh	equ	0xFF7
 11642                           tblptrl	equ	0xFF6
 11643                           tablat	equ	0xFF5
 11644                           prodh	equ	0xFF4
 11645                           prodl	equ	0xFF3
 11646                           intcon	equ	0xFF2
 11647                           intcon2	equ	0xFF1
 11648                           intcon3	equ	0xFF0
 11649                           postinc0	equ	0xFEE
 11650                           wreg	equ	0xFE8
 11651                           postdec1	equ	0xFE5
 11652                           plusw1	equ	0xFE3
 11653                           fsr1h	equ	0xFE2
 11654                           fsr1l	equ	0xFE1
 11655                           indf2	equ	0xFDF
 11656                           postinc2	equ	0xFDE
 11657                           postdec2	equ	0xFDD
 11658                           plusw2	equ	0xFDB
 11659                           fsr2h	equ	0xFDA
 11660                           fsr2l	equ	0xFD9
 11661                           status	equ	0xFD8
 11662                           
 11663 ;; *************** function _system_calculate_input_voltage *****************
 11664 ;; Defined at:
 11665 ;;		line 570 in file "os.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;		None
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  tmp             4   16[BANK0 ] long 
 11670 ;; Return value:  Size  Location     Type
 11671 ;;                  1    wreg      void 
 11672 ;; Registers used:
 11673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11674 ;; Tracked objects:
 11675 ;;		On entry : 0/0
 11676 ;;		On exit  : 0/0
 11677 ;;		Unchanged: 0/0
 11678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11680 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11681 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11682 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11683 ;;Total ram usage:        8 bytes
 11684 ;; Hardware stack levels used:    1
 11685 ;; Hardware stack levels required when called:   11
 11686 ;; This function calls:
 11687 ;;		___lmul
 11688 ;; This function is called by:
 11689 ;;		_main
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           	psect	text47
 11694  00F358                     __ptext47:
 11695                           	opt stack 0
 11696  00F358                     _system_calculate_input_voltage:
 11697                           	opt stack 19
 11698                           
 11699                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 11700                           
 11701                           ;incstack = 0
 11702  00F358  0102               	movlb	2	; () banked
 11703  00F35A  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 11704  00F35C  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 11705  00F35E  0100               	movlb	0	; () banked
 11706  00F360  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 11707  00F362  0102               	movlb	2	; () banked
 11708  00F364  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 11709  00F366  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 11710  00F368  0100               	movlb	0	; () banked
 11711  00F36A  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 11712  00F36C  0102               	movlb	2	; () banked
 11713  00F36E  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 11714  00F370  0100               	movlb	0	; () banked
 11715  00F372  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11716  00F374  0102               	movlb	2	; () banked
 11717  00F376  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 11718  00F378  0100               	movlb	0	; () banked
 11719  00F37A  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11720  00F37C  0102               	movlb	2	; () banked
 11721  00F37E  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 11722  00F380  0100               	movlb	0	; () banked
 11723  00F382  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11724  00F384  0102               	movlb	2	; () banked
 11725  00F386  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 11726  00F388  0100               	movlb	0	; () banked
 11727  00F38A  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11728  00F38C  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 11729  00F390  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 11730  00F394  0E00               	movlw	0
 11731  00F396  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 11732  00F398  0EFF               	movlw	-1
 11733  00F39A  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 11734  00F39C  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 11735                           
 11736                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 11737  00F39E  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 11738  00F3A2  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 11739  00F3A6  0E00               	movlw	0
 11740  00F3A8  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 11741  00F3AA  0EFF               	movlw	255
 11742  00F3AC  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 11743  00F3AE  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 11744  00F3B0  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 11745  00F3B2  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 11746  00F3B4  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 11747  00F3B6  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11748  00F3B8  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 11749  00F3BA  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11750  00F3BC  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 11751  00F3BE  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 11755  00F3C0  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 11756  00F3C4  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 11757  00F3C8  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 11758  00F3CC  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 11759  00F3D0  EE23  F007         	lfsr	2,_calibrationParameters+7
 11760  00F3D4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11761  00F3D8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11762  00F3DC  0E00               	movlw	0
 11763  00F3DE  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11764  00F3E0  0EFF               	movlw	-1
 11765  00F3E2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11766  00F3E4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11767  00F3E6  EC12  F08D         	call	___lmul	;wreg free
 11768  00F3EA  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 11769  00F3EE  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 11770  00F3F2  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 11771  00F3F6  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 11772                           
 11773                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 11774  00F3FA  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 11775  00F3FE  0EFF               	movlw	-1
 11776  00F400  0100               	movlb	0	; () banked
 11777  00F402  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11778  00F404  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 11779  00F406  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 11780  00F408  D005               	goto	u15090
 11781  00F40A                     u15095:
 11782  00F40A  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 11783  00F40C  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11784  00F40E  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11785  00F410  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11786  00F412  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 11787  00F414                     u15090:
 11788  00F414  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11789  00F416  D7F9               	goto	u15095
 11790                           
 11791                           ;os.c: 576: tmp += 1;
 11792  00F418  0E01               	movlw	1
 11793  00F41A  0100               	movlb	0	; () banked
 11794  00F41C  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 11795  00F41E  0E00               	movlw	0
 11796  00F420  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11797  00F422  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11798  00F424  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;os.c: 577: tmp >>= 1;
 11802  00F426  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 11803  00F428  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11804  00F42A  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11805  00F42C  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11806  00F42E  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 11810  00F430  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 11811  00F434  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 11812                           
 11813                           ; BSR set to: 0
 11814  00F438  0012               	return		;funcret
 11815  00F43A                     __end_of_system_calculate_input_voltage:
 11816                           	opt stack 0
 11817                           tblptru	equ	0xFF8
 11818                           tblptrh	equ	0xFF7
 11819                           tblptrl	equ	0xFF6
 11820                           tablat	equ	0xFF5
 11821                           prodh	equ	0xFF4
 11822                           prodl	equ	0xFF3
 11823                           intcon	equ	0xFF2
 11824                           intcon2	equ	0xFF1
 11825                           intcon3	equ	0xFF0
 11826                           postinc0	equ	0xFEE
 11827                           wreg	equ	0xFE8
 11828                           postdec1	equ	0xFE5
 11829                           plusw1	equ	0xFE3
 11830                           fsr1h	equ	0xFE2
 11831                           fsr1l	equ	0xFE1
 11832                           indf2	equ	0xFDF
 11833                           postinc2	equ	0xFDE
 11834                           postdec2	equ	0xFDD
 11835                           plusw2	equ	0xFDB
 11836                           fsr2h	equ	0xFDA
 11837                           fsr2l	equ	0xFD9
 11838                           status	equ	0xFD8
 11839                           
 11840 ;; *************** function _system_calculate_input_current *****************
 11841 ;; Defined at:
 11842 ;;		line 604 in file "os.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;		None
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;  tmp             4   16[BANK0 ] long 
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  1    wreg      void 
 11849 ;; Registers used:
 11850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11859 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11860 ;;Total ram usage:        8 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; Hardware stack levels required when called:   11
 11863 ;; This function calls:
 11864 ;;		___lmul
 11865 ;;		_buck_get_mode
 11866 ;; This function is called by:
 11867 ;;		_main
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text48
 11872  00E034                     __ptext48:
 11873                           	opt stack 0
 11874  00E034                     _system_calculate_input_current:
 11875                           	opt stack 19
 11876                           
 11877                           ;os.c: 606: int32_t tmp;
 11878                           ;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;incstack = 0
 11882  00E034  EC08  F097         	call	_buck_get_mode	;wreg free
 11883  00E038  0900               	iorlw	0
 11884  00E03A  B4D8               	btfsc	status,2,c
 11885  00E03C  D005               	goto	u15240
 11886  00E03E  EC08  F097         	call	_buck_get_mode	;wreg free
 11887  00E042  0A80               	xorlw	128
 11888  00E044  A4D8               	btfss	status,2,c
 11889  00E046  D006               	goto	l1433
 11890  00E048                     u15240:
 11891                           
 11892                           ;os.c: 609: {
 11893                           ;os.c: 610: os.input_current = 0;
 11894  00E048  0E00               	movlw	0
 11895  00E04A  0102               	movlb	2	; () banked
 11896  00E04C  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 11897  00E04E  0E00               	movlw	0
 11898  00E050  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 11899                           
 11900                           ;os.c: 611: }
 11901  00E052  0012               	return	
 11902  00E054                     l1433:
 11903                           
 11904                           ;os.c: 612: else
 11905                           ;os.c: 613: {
 11906                           ;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.input_current_adc[1] + os.inpu
      +                          t_current_adc[2] + os.input_current_adc[3]);
 11907                           
 11908                           ; BSR set to: 2
 11909  00E054  0102               	movlb	2	; () banked
 11910  00E056  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 11911  00E058  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 11912  00E05A  0100               	movlb	0	; () banked
 11913  00E05C  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 11914  00E05E  0102               	movlb	2	; () banked
 11915  00E060  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 11916  00E062  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 11917  00E064  0100               	movlb	0	; () banked
 11918  00E066  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 11919  00E068  0102               	movlb	2	; () banked
 11920  00E06A  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 11921  00E06C  0100               	movlb	0	; () banked
 11922  00E06E  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 11923  00E070  0102               	movlb	2	; () banked
 11924  00E072  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 11925  00E074  0100               	movlb	0	; () banked
 11926  00E076  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 11927  00E078  0102               	movlb	2	; () banked
 11928  00E07A  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 11929  00E07C  0100               	movlb	0	; () banked
 11930  00E07E  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 11931  00E080  0102               	movlb	2	; () banked
 11932  00E082  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 11933  00E084  0100               	movlb	0	; () banked
 11934  00E086  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 11935  00E088  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 11936  00E08C  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 11937  00E090  0E00               	movlw	0
 11938  00E092  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 11939  00E094  0EFF               	movlw	-1
 11940  00E096  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 11941  00E098  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 11942                           
 11943                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 11944  00E09A  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 11945  00E09E  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 11946  00E0A2  0E00               	movlw	0
 11947  00E0A4  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 11948  00E0A6  0EFF               	movlw	255
 11949  00E0A8  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 11950  00E0AA  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 11951  00E0AC  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 11952  00E0AE  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 11953  00E0B0  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 11954  00E0B2  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 11955  00E0B4  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 11956  00E0B6  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 11957  00E0B8  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 11958  00E0BA  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 11959                           
 11960                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 11961  00E0BC  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 11962  00E0C0  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 11963  00E0C4  0E00               	movlw	0
 11964  00E0C6  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 11965  00E0C8  0EFF               	movlw	255
 11966  00E0CA  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 11967  00E0CC  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 11968  00E0CE  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 11969  00E0D0  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 11970  00E0D2  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 11971  00E0D4  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 11972  00E0D6  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 11973  00E0D8  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 11974  00E0DA  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 11975  00E0DC  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 11979  00E0DE  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 11980  00E0E2  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 11981  00E0E6  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 11982  00E0EA  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 11983  00E0EE  EE23  F01F         	lfsr	2,_calibrationParameters+31
 11984  00E0F2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11985  00E0F6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11986  00E0FA  0E00               	movlw	0
 11987  00E0FC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11988  00E0FE  0EFF               	movlw	-1
 11989  00E100  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11990  00E102  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11991  00E104  EC12  F08D         	call	___lmul	;wreg free
 11992  00E108  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 11993  00E10C  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 11994  00E110  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 11995  00E114  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 11996                           
 11997                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 11998  00E118  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 11999  00E11C  0EFF               	movlw	-1
 12000  00E11E  0100               	movlb	0	; () banked
 12001  00E120  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12002  00E122  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12003  00E124  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12004  00E126  D005               	goto	u15250
 12005  00E128                     u15255:
 12006  00E128  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12007  00E12A  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12008  00E12C  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12009  00E12E  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12010  00E130  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12011  00E132                     u15250:
 12012  00E132  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12013  00E134  D7F9               	goto	u15255
 12014                           
 12015                           ;os.c: 619: tmp += 1;
 12016  00E136  0E01               	movlw	1
 12017  00E138  0100               	movlb	0	; () banked
 12018  00E13A  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12019  00E13C  0E00               	movlw	0
 12020  00E13E  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12021  00E140  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12022  00E142  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;os.c: 620: tmp >>= 1;
 12026  00E144  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12027  00E146  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12028  00E148  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12029  00E14A  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12030  00E14C  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12034  00E14E  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12035  00E152  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12036  00E156  0012               	return	
 12037  00E158                     __end_of_system_calculate_input_current:
 12038                           	opt stack 0
 12039                           tblptru	equ	0xFF8
 12040                           tblptrh	equ	0xFF7
 12041                           tblptrl	equ	0xFF6
 12042                           tablat	equ	0xFF5
 12043                           prodh	equ	0xFF4
 12044                           prodl	equ	0xFF3
 12045                           intcon	equ	0xFF2
 12046                           intcon2	equ	0xFF1
 12047                           intcon3	equ	0xFF0
 12048                           postinc0	equ	0xFEE
 12049                           wreg	equ	0xFE8
 12050                           postdec1	equ	0xFE5
 12051                           plusw1	equ	0xFE3
 12052                           fsr1h	equ	0xFE2
 12053                           fsr1l	equ	0xFE1
 12054                           indf2	equ	0xFDF
 12055                           postinc2	equ	0xFDE
 12056                           postdec2	equ	0xFDD
 12057                           plusw2	equ	0xFDB
 12058                           fsr2h	equ	0xFDA
 12059                           fsr2l	equ	0xFD9
 12060                           status	equ	0xFD8
 12061                           
 12062 ;; *************** function _log_write_to_disk *****************
 12063 ;; Defined at:
 12064 ;;		line 199 in file "log.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;		None
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;  log_entry      32  113[BANK0 ] struct .
 12069 ;;  file_number     1  112[BANK0 ] unsigned char 
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12080 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12082 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12083 ;;Total ram usage:       33 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:   17
 12086 ;; This function calls:
 12087 ;;		_fat_append_to_file
 12088 ;;		_fat_create_file
 12089 ;;		_fat_find_file
 12090 ;;		_log_generate_entry
 12091 ;; This function is called by:
 12092 ;;		_main
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text49
 12097  0110FC                     __ptext49:
 12098                           	opt stack 0
 12099  0110FC                     _log_write_to_disk:
 12100                           	opt stack 13
 12101                           
 12102                           ;log.c: 201: uint8_t file_number;
 12103                           ;log.c: 202: logEntry_t log_entry;
 12104                           ;log.c: 205: log_generate_entry(&log_entry);
 12105                           
 12106                           ;incstack = 0
 12107  0110FC  0ED1               	movlw	low log_write_to_disk@log_entry
 12108  0110FE  0100               	movlb	0	; () banked
 12109  011100  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12110  011102  0E00               	movlw	high log_write_to_disk@log_entry
 12111  011104  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12112  011106  EC26  F055         	call	_log_generate_entry	;wreg free
 12113                           
 12114                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12115  01110A  0EEF               	movlw	low _filename
 12116  01110C  0100               	movlb	0	; () banked
 12117  01110E  6F87               	movwf	fat_find_file@name& (0+255),b
 12118  011110  0E02               	movlw	high _filename
 12119  011112  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12120  011114  0EF8               	movlw	low _extension
 12121  011116  6F89               	movwf	fat_find_file@extension& (0+255),b
 12122  011118  0E02               	movlw	high _extension
 12123  01111A  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12124  01111C  ECAE  F07C         	call	_fat_find_file	;wreg free
 12125  011120  0100               	movlb	0	; () banked
 12126  011122  6FD0               	movwf	log_write_to_disk@file_number& (0+255),b
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;log.c: 209: if(file_number==0xFF)
 12130  011124  29D0               	incf	log_write_to_disk@file_number& (0+255),w,b
 12131  011126  A4D8               	btfss	status,2,c
 12132  011128  D014               	goto	l3298
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;log.c: 210: {
 12136                           ;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12137  01112A  0EEF               	movlw	low _filename
 12138  01112C  6F9B               	movwf	fat_create_file@name& (0+255),b
 12139  01112E  0E02               	movlw	high _filename
 12140  011130  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12141  011132  0EF8               	movlw	low _extension
 12142  011134  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12143  011136  0E02               	movlw	high _extension
 12144  011138  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12145  01113A  0E00               	movlw	0
 12146  01113C  6F9F               	movwf	fat_create_file@size& (0+255),b
 12147  01113E  0E00               	movlw	0
 12148  011140  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12149  011142  0E00               	movlw	0
 12150  011144  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12151  011146  0E00               	movlw	0
 12152  011148  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12153  01114A  EC89  F069         	call	_fat_create_file	;wreg free
 12154  01114E  0100               	movlb	0	; () banked
 12155  011150  6FD0               	movwf	log_write_to_disk@file_number& (0+255),b
 12156  011152                     l3298:
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;log.c: 213: }
 12160                           ;log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entry);
 12161                           
 12162                           ; BSR set to: 0
 12163  011152  0E00               	movlw	0
 12164  011154  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12165  011156  0E20               	movlw	32
 12166  011158  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12167  01115A  0ED1               	movlw	low log_write_to_disk@log_entry
 12168  01115C  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12169  01115E  0E00               	movlw	high log_write_to_disk@log_entry
 12170  011160  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12171  011162  51D0               	movf	log_write_to_disk@file_number& (0+255),w,b
 12172  011164  EC9A  F063         	call	_fat_append_to_file
 12173  011168  0012               	return		;funcret
 12174  01116A                     __end_of_log_write_to_disk:
 12175                           	opt stack 0
 12176                           tblptru	equ	0xFF8
 12177                           tblptrh	equ	0xFF7
 12178                           tblptrl	equ	0xFF6
 12179                           tablat	equ	0xFF5
 12180                           prodh	equ	0xFF4
 12181                           prodl	equ	0xFF3
 12182                           intcon	equ	0xFF2
 12183                           intcon2	equ	0xFF1
 12184                           intcon3	equ	0xFF0
 12185                           postinc0	equ	0xFEE
 12186                           wreg	equ	0xFE8
 12187                           postdec1	equ	0xFE5
 12188                           plusw1	equ	0xFE3
 12189                           fsr1h	equ	0xFE2
 12190                           fsr1l	equ	0xFE1
 12191                           indf2	equ	0xFDF
 12192                           postinc2	equ	0xFDE
 12193                           postdec2	equ	0xFDD
 12194                           plusw2	equ	0xFDB
 12195                           fsr2h	equ	0xFDA
 12196                           fsr2l	equ	0xFD9
 12197                           status	equ	0xFD8
 12198                           
 12199 ;; *************** function _log_generate_entry *****************
 12200 ;; Defined at:
 12201 ;;		line 174 in file "log.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;  log_entry       2   24[BANK0 ] PTR struct .
 12204 ;;		 -> log_write_to_disk@log_entry(32), 
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12220 ;;Total ram usage:        4 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:   13
 12223 ;; This function calls:
 12224 ;;		___aldiv
 12225 ;;		___lldiv
 12226 ;;		__get_checksum
 12227 ;;		__get_dateTime
 12228 ;;		__get_temperature
 12229 ;; This function is called by:
 12230 ;;		_log_write_to_disk
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text50
 12235  00AA4C                     __ptext50:
 12236                           	opt stack 0
 12237  00AA4C                     _log_generate_entry:
 12238                           	opt stack 16
 12239                           
 12240                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 12241                           
 12242                           ;incstack = 0
 12243  00AA4C  ECD3  F06B         	call	__get_dateTime	;wreg free
 12244  00AA50  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 12245  00AA54  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 12246  00AA58  0100               	movlb	0	; () banked
 12247  00AA5A  C064  FFDE         	movff	?__get_dateTime,postinc2
 12248  00AA5E  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 12249  00AA62  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 12250  00AA66  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 12254  00AA6A  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 12255  00AA6E  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 12256  00AA72  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 12257  00AA76  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 12258  00AA7A  C041  F064         	movff	_averageCount,___lldiv@divisor
 12259  00AA7E  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12260  00AA82  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12261  00AA84  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12262  00AA86  EC66  F084         	call	___lldiv	;wreg free
 12263  00AA8A  0100               	movlb	0	; () banked
 12264  00AA8C  EE20 F004          	lfsr	2,4
 12265  00AA90  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12266  00AA92  26D9               	addwf	fsr2l,f,c
 12267  00AA94  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12268  00AA96  22DA               	addwfc	fsr2h,f,c
 12269  00AA98  C060  FFDE         	movff	?___lldiv,postinc2
 12270  00AA9C  C061  FFDD         	movff	?___lldiv+1,postdec2
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 12274  00AAA0  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 12275  00AAA4  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 12276  00AAA8  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 12277  00AAAC  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 12278  00AAB0  C041  F064         	movff	_averageCount,___lldiv@divisor
 12279  00AAB4  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12280  00AAB8  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12281  00AABA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12282  00AABC  EC66  F084         	call	___lldiv	;wreg free
 12283  00AAC0  0100               	movlb	0	; () banked
 12284  00AAC2  EE20 F006          	lfsr	2,6
 12285  00AAC6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12286  00AAC8  26D9               	addwf	fsr2l,f,c
 12287  00AACA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12288  00AACC  22DA               	addwfc	fsr2h,f,c
 12289  00AACE  C060  FFDE         	movff	?___lldiv,postinc2
 12290  00AAD2  C061  FFDD         	movff	?___lldiv+1,postdec2
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 12294  00AAD6  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 12295  00AADA  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 12296  00AADE  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 12297  00AAE2  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 12298  00AAE6  C041  F064         	movff	_averageCount,___lldiv@divisor
 12299  00AAEA  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12300  00AAEE  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12301  00AAF0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12302  00AAF2  EC66  F084         	call	___lldiv	;wreg free
 12303  00AAF6  0100               	movlb	0	; () banked
 12304  00AAF8  EE20 F008          	lfsr	2,8
 12305  00AAFC  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12306  00AAFE  26D9               	addwf	fsr2l,f,c
 12307  00AB00  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12308  00AB02  22DA               	addwfc	fsr2h,f,c
 12309  00AB04  C060  FFDE         	movff	?___lldiv,postinc2
 12310  00AB08  C061  FFDD         	movff	?___lldiv+1,postdec2
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 12314  00AB0C  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 12315  00AB10  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 12316  00AB14  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 12317  00AB18  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 12318  00AB1C  C041  F064         	movff	_averageCount,___lldiv@divisor
 12319  00AB20  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12320  00AB24  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12321  00AB26  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12322  00AB28  EC66  F084         	call	___lldiv	;wreg free
 12323  00AB2C  0100               	movlb	0	; () banked
 12324  00AB2E  EE20 F00A          	lfsr	2,10
 12325  00AB32  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12326  00AB34  26D9               	addwf	fsr2l,f,c
 12327  00AB36  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12328  00AB38  22DA               	addwfc	fsr2h,f,c
 12329  00AB3A  C060  FFDE         	movff	?___lldiv,postinc2
 12330  00AB3E  C061  FFDD         	movff	?___lldiv+1,postdec2
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 12334  00AB42  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 12335  00AB46  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 12336  00AB4A  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 12337  00AB4E  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 12338  00AB52  C041  F064         	movff	_averageCount,___lldiv@divisor
 12339  00AB56  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12340  00AB5A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12341  00AB5C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12342  00AB5E  EC66  F084         	call	___lldiv	;wreg free
 12343  00AB62  0100               	movlb	0	; () banked
 12344  00AB64  EE20 F00C          	lfsr	2,12
 12345  00AB68  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12346  00AB6A  26D9               	addwf	fsr2l,f,c
 12347  00AB6C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12348  00AB6E  22DA               	addwfc	fsr2h,f,c
 12349  00AB70  C060  FFDE         	movff	?___lldiv,postinc2
 12350  00AB74  C061  FFDD         	movff	?___lldiv+1,postdec2
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 12354  00AB78  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 12355  00AB7C  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 12356  00AB80  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 12357  00AB84  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 12358  00AB88  C041  F064         	movff	_averageCount,___lldiv@divisor
 12359  00AB8C  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12360  00AB90  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12361  00AB92  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12362  00AB94  EC66  F084         	call	___lldiv	;wreg free
 12363  00AB98  0100               	movlb	0	; () banked
 12364  00AB9A  EE20 F00E          	lfsr	2,14
 12365  00AB9E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12366  00ABA0  26D9               	addwf	fsr2l,f,c
 12367  00ABA2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12368  00ABA4  22DA               	addwfc	fsr2h,f,c
 12369  00ABA6  C060  FFDE         	movff	?___lldiv,postinc2
 12370  00ABAA  C061  FFDD         	movff	?___lldiv+1,postdec2
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 12374  00ABAE  0EF4               	movlw	244
 12375  00ABB0  0102               	movlb	2	; () banked
 12376  00ABB2  2582               	addwf	_inputCapacitySum& (0+255),w,b
 12377  00ABB4  0100               	movlb	0	; () banked
 12378  00ABB6  6F60               	movwf	___lldiv@dividend& (0+255),b
 12379  00ABB8  0E01               	movlw	1
 12380  00ABBA  0102               	movlb	2	; () banked
 12381  00ABBC  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 12382  00ABBE  0100               	movlb	0	; () banked
 12383  00ABC0  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12384  00ABC2  0E00               	movlw	0
 12385  00ABC4  0102               	movlb	2	; () banked
 12386  00ABC6  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 12387  00ABC8  0100               	movlb	0	; () banked
 12388  00ABCA  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12389  00ABCC  0E00               	movlw	0
 12390  00ABCE  0102               	movlb	2	; () banked
 12391  00ABD0  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 12392  00ABD2  0100               	movlb	0	; () banked
 12393  00ABD4  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12394  00ABD6  0EE8               	movlw	232
 12395  00ABD8  6F64               	movwf	___lldiv@divisor& (0+255),b
 12396  00ABDA  0E03               	movlw	3
 12397  00ABDC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12398  00ABDE  0E00               	movlw	0
 12399  00ABE0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12400  00ABE2  0E00               	movlw	0
 12401  00ABE4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12402  00ABE6  EC66  F084         	call	___lldiv	;wreg free
 12403  00ABEA  0100               	movlb	0	; () banked
 12404  00ABEC  EE20 F010          	lfsr	2,16
 12405  00ABF0  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12406  00ABF2  26D9               	addwf	fsr2l,f,c
 12407  00ABF4  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12408  00ABF6  22DA               	addwfc	fsr2h,f,c
 12409  00ABF8  C060  FFDE         	movff	?___lldiv,postinc2
 12410  00ABFC  C061  FFDD         	movff	?___lldiv+1,postdec2
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 12414  00AC00  0EF4               	movlw	244
 12415  00AC02  0102               	movlb	2	; () banked
 12416  00AC04  257E               	addwf	_outputCapacitySum& (0+255),w,b
 12417  00AC06  0100               	movlb	0	; () banked
 12418  00AC08  6F60               	movwf	___lldiv@dividend& (0+255),b
 12419  00AC0A  0E01               	movlw	1
 12420  00AC0C  0102               	movlb	2	; () banked
 12421  00AC0E  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 12422  00AC10  0100               	movlb	0	; () banked
 12423  00AC12  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12424  00AC14  0E00               	movlw	0
 12425  00AC16  0102               	movlb	2	; () banked
 12426  00AC18  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 12427  00AC1A  0100               	movlb	0	; () banked
 12428  00AC1C  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12429  00AC1E  0E00               	movlw	0
 12430  00AC20  0102               	movlb	2	; () banked
 12431  00AC22  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 12432  00AC24  0100               	movlb	0	; () banked
 12433  00AC26  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12434  00AC28  0EE8               	movlw	232
 12435  00AC2A  6F64               	movwf	___lldiv@divisor& (0+255),b
 12436  00AC2C  0E03               	movlw	3
 12437  00AC2E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12438  00AC30  0E00               	movlw	0
 12439  00AC32  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12440  00AC34  0E00               	movlw	0
 12441  00AC36  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12442  00AC38  EC66  F084         	call	___lldiv	;wreg free
 12443  00AC3C  0100               	movlb	0	; () banked
 12444  00AC3E  EE20 F012          	lfsr	2,18
 12445  00AC42  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12446  00AC44  26D9               	addwf	fsr2l,f,c
 12447  00AC46  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12448  00AC48  22DA               	addwfc	fsr2h,f,c
 12449  00AC4A  C060  FFDE         	movff	?___lldiv,postinc2
 12450  00AC4E  C061  FFDD         	movff	?___lldiv+1,postdec2
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 12454  00AC52  EE20 F014          	lfsr	2,20
 12455  00AC56  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12456  00AC58  26D9               	addwf	fsr2l,f,c
 12457  00AC5A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12458  00AC5C  22DA               	addwfc	fsr2h,f,c
 12459  00AC5E  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 12460  00AC62  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 12461  00AC66  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 12462  00AC6A  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 12463  00AC6E  C041  F064         	movff	_averageCount,___aldiv@divisor
 12464  00AC72  C042  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12465  00AC76  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12466  00AC78  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12467  00AC7A  EC47  F07C         	call	___aldiv	;wreg free
 12468  00AC7E  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12469  00AC82  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12470  00AC86  EC4F  F093         	call	__get_temperature	;wreg free
 12471  00AC8A  6EDF               	movwf	indf2,c
 12472                           
 12473                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 12474  00AC8C  0100               	movlb	0	; () banked
 12475  00AC8E  EE20 F015          	lfsr	2,21
 12476  00AC92  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12477  00AC94  26D9               	addwf	fsr2l,f,c
 12478  00AC96  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12479  00AC98  22DA               	addwfc	fsr2h,f,c
 12480  00AC9A  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 12481  00AC9E  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 12482  00ACA2  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 12483  00ACA6  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 12484  00ACAA  C041  F064         	movff	_averageCount,___aldiv@divisor
 12485  00ACAE  C042  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12486  00ACB2  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12487  00ACB4  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12488  00ACB6  EC47  F07C         	call	___aldiv	;wreg free
 12489  00ACBA  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12490  00ACBE  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12491  00ACC2  EC4F  F093         	call	__get_temperature	;wreg free
 12492  00ACC6  6EDF               	movwf	indf2,c
 12493                           
 12494                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 12495  00ACC8  0100               	movlb	0	; () banked
 12496  00ACCA  EE20 F016          	lfsr	2,22
 12497  00ACCE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12498  00ACD0  26D9               	addwf	fsr2l,f,c
 12499  00ACD2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12500  00ACD4  22DA               	addwfc	fsr2h,f,c
 12501  00ACD6  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 12502  00ACDA  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 12503  00ACDE  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 12504  00ACE2  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 12505  00ACE6  C041  F064         	movff	_averageCount,___aldiv@divisor
 12506  00ACEA  C042  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12507  00ACEE  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12508  00ACF0  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12509  00ACF2  EC47  F07C         	call	___aldiv	;wreg free
 12510  00ACF6  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12511  00ACFA  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12512  00ACFE  EC4F  F093         	call	__get_temperature	;wreg free
 12513  00AD02  6EDF               	movwf	indf2,c
 12514                           
 12515                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 12516  00AD04  0100               	movlb	0	; () banked
 12517  00AD06  EE20 F017          	lfsr	2,23
 12518  00AD0A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12519  00AD0C  26D9               	addwf	fsr2l,f,c
 12520  00AD0E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12521  00AD10  22DA               	addwfc	fsr2h,f,c
 12522  00AD12  90D8               	bcf	status,0,c
 12523  00AD14  0102               	movlb	2	; () banked
 12524  00AD16  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 12525  00AD18  0100               	movlb	0	; () banked
 12526  00AD1A  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12527  00AD1C  0102               	movlb	2	; () banked
 12528  00AD1E  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 12529  00AD20  0100               	movlb	0	; () banked
 12530  00AD22  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12531  00AD24  517A               	movf	??_log_generate_entry& (0+255),w,b
 12532  00AD26  6EDF               	movwf	indf2,c
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 12536  00AD28  EE20 F018          	lfsr	2,24
 12537  00AD2C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12538  00AD2E  26D9               	addwf	fsr2l,f,c
 12539  00AD30  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12540  00AD32  22DA               	addwfc	fsr2h,f,c
 12541  00AD34  90D8               	bcf	status,0,c
 12542  00AD36  0102               	movlb	2	; () banked
 12543  00AD38  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 12544  00AD3A  0100               	movlb	0	; () banked
 12545  00AD3C  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12546  00AD3E  0102               	movlb	2	; () banked
 12547  00AD40  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 12548  00AD42  0100               	movlb	0	; () banked
 12549  00AD44  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12550  00AD46  517A               	movf	??_log_generate_entry& (0+255),w,b
 12551  00AD48  6EDF               	movwf	indf2,c
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;log.c: 190: log_entry->unused[0] = 0x00;
 12555  00AD4A  EE20 F019          	lfsr	2,25
 12556  00AD4E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12557  00AD50  26D9               	addwf	fsr2l,f,c
 12558  00AD52  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12559  00AD54  22DA               	addwfc	fsr2h,f,c
 12560  00AD56  0E00               	movlw	0
 12561  00AD58  6EDF               	movwf	indf2,c
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;log.c: 191: log_entry->unused[1] = 0x00;
 12565  00AD5A  EE20 F01A          	lfsr	2,26
 12566  00AD5E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12567  00AD60  26D9               	addwf	fsr2l,f,c
 12568  00AD62  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12569  00AD64  22DA               	addwfc	fsr2h,f,c
 12570  00AD66  0E00               	movlw	0
 12571  00AD68  6EDF               	movwf	indf2,c
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;log.c: 192: log_entry->unused[2] = 0x00;
 12575  00AD6A  EE20 F01B          	lfsr	2,27
 12576  00AD6E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12577  00AD70  26D9               	addwf	fsr2l,f,c
 12578  00AD72  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12579  00AD74  22DA               	addwfc	fsr2h,f,c
 12580  00AD76  0E00               	movlw	0
 12581  00AD78  6EDF               	movwf	indf2,c
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;log.c: 193: log_entry->unused[3] = 0x00;
 12585  00AD7A  EE20 F01C          	lfsr	2,28
 12586  00AD7E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12587  00AD80  26D9               	addwf	fsr2l,f,c
 12588  00AD82  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12589  00AD84  22DA               	addwfc	fsr2h,f,c
 12590  00AD86  0E00               	movlw	0
 12591  00AD88  6EDF               	movwf	indf2,c
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;log.c: 194: log_entry->unused[4] = 0x00;
 12595  00AD8A  EE20 F01D          	lfsr	2,29
 12596  00AD8E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12597  00AD90  26D9               	addwf	fsr2l,f,c
 12598  00AD92  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12599  00AD94  22DA               	addwfc	fsr2h,f,c
 12600  00AD96  0E00               	movlw	0
 12601  00AD98  6EDF               	movwf	indf2,c
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;log.c: 195: log_entry->status = status;
 12605  00AD9A  EE20 F01E          	lfsr	2,30
 12606  00AD9E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12607  00ADA0  26D9               	addwf	fsr2l,f,c
 12608  00ADA2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12609  00ADA4  22DA               	addwfc	fsr2h,f,c
 12610  00ADA6  C1EC  FFDF         	movff	_status,indf2
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 12614  00ADAA  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 12615  00ADAE  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 12616  00ADB2  EC95  F091         	call	__get_checksum	;wreg free
 12617  00ADB6  0100               	movlb	0	; () banked
 12618  00ADB8  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12619  00ADBA  EE20 F01F          	lfsr	2,31
 12620  00ADBE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12621  00ADC0  26D9               	addwf	fsr2l,f,c
 12622  00ADC2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12623  00ADC4  22DA               	addwfc	fsr2h,f,c
 12624  00ADC6  C07A  FFDF         	movff	??_log_generate_entry,indf2
 12625                           
 12626                           ; BSR set to: 0
 12627  00ADCA  0012               	return		;funcret
 12628  00ADCC                     __end_of_log_generate_entry:
 12629                           	opt stack 0
 12630                           tblptru	equ	0xFF8
 12631                           tblptrh	equ	0xFF7
 12632                           tblptrl	equ	0xFF6
 12633                           tablat	equ	0xFF5
 12634                           prodh	equ	0xFF4
 12635                           prodl	equ	0xFF3
 12636                           intcon	equ	0xFF2
 12637                           intcon2	equ	0xFF1
 12638                           intcon3	equ	0xFF0
 12639                           postinc0	equ	0xFEE
 12640                           wreg	equ	0xFE8
 12641                           postdec1	equ	0xFE5
 12642                           plusw1	equ	0xFE3
 12643                           fsr1h	equ	0xFE2
 12644                           fsr1l	equ	0xFE1
 12645                           indf2	equ	0xFDF
 12646                           postinc2	equ	0xFDE
 12647                           postdec2	equ	0xFDD
 12648                           plusw2	equ	0xFDB
 12649                           fsr2h	equ	0xFDA
 12650                           fsr2l	equ	0xFD9
 12651                           status	equ	0xFD8
 12652                           
 12653 ;; *************** function __get_temperature *****************
 12654 ;; Defined at:
 12655 ;;		line 107 in file "log.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  temperature     2   14[BANK0 ] int 
 12658 ;; Auto vars:     Size  Location     Type
 12659 ;;		None
 12660 ;; Return value:  Size  Location     Type
 12661 ;;                  1    wreg      unsigned char 
 12662 ;; Registers used:
 12663 ;;		wreg, status,2, status,0, cstack
 12664 ;; Tracked objects:
 12665 ;;		On entry : 0/0
 12666 ;;		On exit  : 0/0
 12667 ;;		Unchanged: 0/0
 12668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;Total ram usage:        2 bytes
 12674 ;; Hardware stack levels used:    1
 12675 ;; Hardware stack levels required when called:   11
 12676 ;; This function calls:
 12677 ;;		___awdiv
 12678 ;; This function is called by:
 12679 ;;		_log_generate_entry
 12680 ;; This function uses a non-reentrant model
 12681 ;;
 12682                           
 12683                           	psect	text51
 12684  01269E                     __ptext51:
 12685                           	opt stack 0
 12686  01269E                     __get_temperature:
 12687                           	opt stack 17
 12688                           
 12689                           ;log.c: 109: temperature += 4025;
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;incstack = 0
 12693  01269E  0100               	movlb	0	; () banked
 12694  0126A0  0EB9               	movlw	185
 12695  0126A2  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 12696  0126A4  0E0F               	movlw	15
 12697  0126A6  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;log.c: 110: temperature /= 50;
 12701  0126A8  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 12702  0126AC  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 12703  0126B0  0E00               	movlw	0
 12704  0126B2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 12705  0126B4  0E32               	movlw	50
 12706  0126B6  6F62               	movwf	___awdiv@divisor& (0+255),b
 12707  0126B8  EC9D  F083         	call	___awdiv	;wreg free
 12708  0126BC  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 12709  0126C0  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 12710                           
 12711                           ;log.c: 111: return (uint8_t) temperature;
 12712  0126C4  0100               	movlb	0	; () banked
 12713  0126C6  516E               	movf	__get_temperature@temperature& (0+255),w,b
 12714  0126C8  0012               	return	
 12715  0126CA                     __end_of__get_temperature:
 12716                           	opt stack 0
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           intcon	equ	0xFF2
 12724                           intcon2	equ	0xFF1
 12725                           intcon3	equ	0xFF0
 12726                           postinc0	equ	0xFEE
 12727                           wreg	equ	0xFE8
 12728                           postdec1	equ	0xFE5
 12729                           plusw1	equ	0xFE3
 12730                           fsr1h	equ	0xFE2
 12731                           fsr1l	equ	0xFE1
 12732                           indf2	equ	0xFDF
 12733                           postinc2	equ	0xFDE
 12734                           postdec2	equ	0xFDD
 12735                           plusw2	equ	0xFDB
 12736                           fsr2h	equ	0xFDA
 12737                           fsr2l	equ	0xFD9
 12738                           status	equ	0xFD8
 12739                           
 12740 ;; *************** function ___awdiv *****************
 12741 ;; Defined at:
 12742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;  dividend        2    0[BANK0 ] int 
 12745 ;;  divisor         2    2[BANK0 ] int 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  quotient        2    6[BANK0 ] int 
 12748 ;;  sign            1    5[BANK0 ] unsigned char 
 12749 ;;  counter         1    4[BANK0 ] unsigned char 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  2    0[BANK0 ] int 
 12752 ;; Registers used:
 12753 ;;		wreg, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12762 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12763 ;;Total ram usage:        8 bytes
 12764 ;; Hardware stack levels used:    1
 12765 ;; Hardware stack levels required when called:   10
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		__get_temperature
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773                           	psect	text52
 12774  01073A                     __ptext52:
 12775                           	opt stack 0
 12776  01073A                     ___awdiv:
 12777                           	opt stack 17
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;incstack = 0
 12781  01073A  0E00               	movlw	0
 12782  01073C  0100               	movlb	0	; () banked
 12783  01073E  6F65               	movwf	___awdiv@sign& (0+255),b
 12784                           
 12785                           ; BSR set to: 0
 12786  010740  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12787  010742  D006               	goto	l3467
 12788                           
 12789                           ; BSR set to: 0
 12790  010744  6D62               	negf	___awdiv@divisor& (0+255),b
 12791  010746  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12792  010748  B0D8               	btfsc	status,0,c
 12793  01074A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12794                           
 12795                           ; BSR set to: 0
 12796  01074C  0E01               	movlw	1
 12797  01074E  6F65               	movwf	___awdiv@sign& (0+255),b
 12798  010750                     l3467:
 12799                           
 12800                           ; BSR set to: 0
 12801                           
 12802                           ; BSR set to: 0
 12803  010750  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12804  010752  D006               	goto	l3468
 12805                           
 12806                           ; BSR set to: 0
 12807  010754  6D60               	negf	___awdiv@dividend& (0+255),b
 12808  010756  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12809  010758  B0D8               	btfsc	status,0,c
 12810  01075A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12811                           
 12812                           ; BSR set to: 0
 12813  01075C  0E01               	movlw	1
 12814  01075E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 12815  010760                     l3468:
 12816                           
 12817                           ; BSR set to: 0
 12818                           
 12819                           ; BSR set to: 0
 12820  010760  0E00               	movlw	0
 12821  010762  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 12822  010764  0E00               	movlw	0
 12823  010766  6F66               	movwf	___awdiv@quotient& (0+255),b
 12824                           
 12825                           ; BSR set to: 0
 12826  010768  5162               	movf	___awdiv@divisor& (0+255),w,b
 12827  01076A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12828  01076C  B4D8               	btfsc	status,2,c
 12829  01076E  D01C               	goto	l3475
 12830                           
 12831                           ; BSR set to: 0
 12832  010770  0E01               	movlw	1
 12833  010772  6F64               	movwf	___awdiv@counter& (0+255),b
 12834  010774  D004               	goto	l3470
 12835  010776                     
 12836                           ; BSR set to: 0
 12837                           
 12838                           ; BSR set to: 0
 12839  010776  90D8               	bcf	status,0,c
 12840  010778  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 12841  01077A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12842  01077C  2B64               	incf	___awdiv@counter& (0+255),f,b
 12843  01077E                     l3470:
 12844                           
 12845                           ; BSR set to: 0
 12846                           
 12847                           ; BSR set to: 0
 12848  01077E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12849  010780  D7FA               	goto	l3471
 12850  010782                     u10940:
 12851                           
 12852                           ; BSR set to: 0
 12853                           
 12854                           ; BSR set to: 0
 12855                           
 12856                           ; BSR set to: 0
 12857  010782  90D8               	bcf	status,0,c
 12858  010784  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 12859  010786  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12860                           
 12861                           ; BSR set to: 0
 12862  010788  5162               	movf	___awdiv@divisor& (0+255),w,b
 12863  01078A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 12864  01078C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12865  01078E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12866  010790  A0D8               	btfss	status,0,c
 12867  010792  D005               	goto	l3474
 12868                           
 12869                           ; BSR set to: 0
 12870  010794  5162               	movf	___awdiv@divisor& (0+255),w,b
 12871  010796  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 12872  010798  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12873  01079A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12874                           
 12875                           ; BSR set to: 0
 12876  01079C  8166               	bsf	___awdiv@quotient& (0+255),0,b
 12877  01079E                     l3474:
 12878                           
 12879                           ; BSR set to: 0
 12880                           
 12881                           ; BSR set to: 0
 12882  01079E  90D8               	bcf	status,0,c
 12883  0107A0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12884  0107A2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 12885                           
 12886                           ; BSR set to: 0
 12887  0107A4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 12888  0107A6  D7ED               	goto	u10940
 12889  0107A8                     l3475:
 12890                           
 12891                           ; BSR set to: 0
 12892                           
 12893                           ; BSR set to: 0
 12894                           
 12895                           ; BSR set to: 0
 12896  0107A8  5165               	movf	___awdiv@sign& (0+255),w,b
 12897  0107AA  B4D8               	btfsc	status,2,c
 12898  0107AC  D004               	goto	l3476
 12899                           
 12900                           ; BSR set to: 0
 12901  0107AE  6D66               	negf	___awdiv@quotient& (0+255),b
 12902  0107B0  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12903  0107B2  B0D8               	btfsc	status,0,c
 12904  0107B4  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12905  0107B6                     l3476:
 12906                           
 12907                           ; BSR set to: 0
 12908                           
 12909                           ; BSR set to: 0
 12910  0107B6  C066  F060         	movff	___awdiv@quotient,?___awdiv
 12911  0107BA  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 12912  0107BE  0012               	return	
 12913  0107C0                     __end_of___awdiv:
 12914                           	opt stack 0
 12915                           tblptru	equ	0xFF8
 12916                           tblptrh	equ	0xFF7
 12917                           tblptrl	equ	0xFF6
 12918                           tablat	equ	0xFF5
 12919                           prodh	equ	0xFF4
 12920                           prodl	equ	0xFF3
 12921                           intcon	equ	0xFF2
 12922                           intcon2	equ	0xFF1
 12923                           intcon3	equ	0xFF0
 12924                           postinc0	equ	0xFEE
 12925                           wreg	equ	0xFE8
 12926                           postdec1	equ	0xFE5
 12927                           plusw1	equ	0xFE3
 12928                           fsr1h	equ	0xFE2
 12929                           fsr1l	equ	0xFE1
 12930                           indf2	equ	0xFDF
 12931                           postinc2	equ	0xFDE
 12932                           postdec2	equ	0xFDD
 12933                           plusw2	equ	0xFDB
 12934                           fsr2h	equ	0xFDA
 12935                           fsr2l	equ	0xFD9
 12936                           status	equ	0xFD8
 12937                           
 12938 ;; *************** function __get_dateTime *****************
 12939 ;; Defined at:
 12940 ;;		line 39 in file "log.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;		None
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;  datetime        4   20[BANK0 ] unsigned long 
 12945 ;;  seconds         1   19[BANK0 ] unsigned char 
 12946 ;;  minutes         1   18[BANK0 ] unsigned char 
 12947 ;;  hours           1   17[BANK0 ] unsigned char 
 12948 ;;  day             1   16[BANK0 ] unsigned char 
 12949 ;;  month           1   15[BANK0 ] unsigned char 
 12950 ;;  year            1   14[BANK0 ] unsigned char 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  4    4[BANK0 ] unsigned long 
 12953 ;; Registers used:
 12954 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12960 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12961 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12962 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12963 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12964 ;;Total ram usage:       20 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:   12
 12967 ;; This function calls:
 12968 ;;		_rtcc_get_day_decimal
 12969 ;;		_rtcc_get_hours_decimal
 12970 ;;		_rtcc_get_minutes_decimal
 12971 ;;		_rtcc_get_month_decimal
 12972 ;;		_rtcc_get_seconds_decimal
 12973 ;;		_rtcc_get_year_decimal
 12974 ;; This function is called by:
 12975 ;;		_log_generate_entry
 12976 ;; This function uses a non-reentrant model
 12977 ;;
 12978                           
 12979                           	psect	text53
 12980  00D7A6                     __ptext53:
 12981                           	opt stack 0
 12982  00D7A6                     __get_dateTime:
 12983                           	opt stack 16
 12984                           
 12985                           ;log.c: 41: uint32_t datetime;
 12986                           ;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;incstack = 0
 12990  00D7A6  EC6D  F096         	call	_rtcc_get_year_decimal	;wreg free
 12991  00D7AA  0100               	movlb	0	; () banked
 12992  00D7AC  6F6E               	movwf	__get_dateTime@year& (0+255),b
 12993                           
 12994                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 12995  00D7AE  EC75  F096         	call	_rtcc_get_month_decimal	;wreg free
 12996  00D7B2  0100               	movlb	0	; () banked
 12997  00D7B4  6F6F               	movwf	__get_dateTime@month& (0+255),b
 12998                           
 12999                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13000  00D7B6  EC7D  F096         	call	_rtcc_get_day_decimal	;wreg free
 13001  00D7BA  0100               	movlb	0	; () banked
 13002  00D7BC  6F70               	movwf	__get_dateTime@day& (0+255),b
 13003                           
 13004                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13005  00D7BE  EC65  F096         	call	_rtcc_get_hours_decimal	;wreg free
 13006  00D7C2  0100               	movlb	0	; () banked
 13007  00D7C4  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13008                           
 13009                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13010  00D7C6  EC5D  F096         	call	_rtcc_get_minutes_decimal	;wreg free
 13011  00D7CA  0100               	movlb	0	; () banked
 13012  00D7CC  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13013                           
 13014                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13015  00D7CE  EC8D  F096         	call	_rtcc_get_seconds_decimal	;wreg free
 13016  00D7D2  0100               	movlb	0	; () banked
 13017  00D7D4  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13021  00D7D6  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13022  00D7DA  0E3F               	movlw	63
 13023  00D7DC  1768               	andwf	??__get_dateTime& (0+255),f,b
 13024  00D7DE  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13025  00D7E2  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13026  00D7E4  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13027  00D7E6  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13028  00D7E8  0E1A               	movlw	26
 13029  00D7EA                     u11745:
 13030  00D7EA  90D8               	bcf	status,0,c
 13031  00D7EC  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13032  00D7EE  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13033  00D7F0  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13034  00D7F2  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13035  00D7F4  2EE8               	decfsz	wreg,f,c
 13036  00D7F6  D7F9               	goto	u11745
 13037  00D7F8  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13038  00D7FC  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13039  00D800  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13040  00D804  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13044  00D808  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13045  00D80C  0E0F               	movlw	15
 13046  00D80E  1768               	andwf	??__get_dateTime& (0+255),f,b
 13047  00D810  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13048  00D814  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13049  00D816  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13050  00D818  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13051  00D81A  0E16               	movlw	22
 13052  00D81C                     u11755:
 13053  00D81C  90D8               	bcf	status,0,c
 13054  00D81E  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13055  00D820  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13056  00D822  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13057  00D824  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13058  00D826  2EE8               	decfsz	wreg,f,c
 13059  00D828  D7F9               	goto	u11755
 13060  00D82A  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13061  00D82C  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13062  00D82E  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13063  00D830  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13064  00D832  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13065  00D834  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13066  00D836  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13067  00D838  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13071  00D83A  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13072  00D83E  0E1F               	movlw	31
 13073  00D840  1768               	andwf	??__get_dateTime& (0+255),f,b
 13074  00D842  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13075  00D846  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13076  00D848  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13077  00D84A  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13078  00D84C  0E11               	movlw	17
 13079  00D84E                     u11765:
 13080  00D84E  90D8               	bcf	status,0,c
 13081  00D850  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13082  00D852  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13083  00D854  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13084  00D856  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13085  00D858  2EE8               	decfsz	wreg,f,c
 13086  00D85A  D7F9               	goto	u11765
 13087  00D85C  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13088  00D85E  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13089  00D860  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13090  00D862  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13091  00D864  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13092  00D866  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13093  00D868  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13094  00D86A  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 13098  00D86C  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 13099  00D870  0E1F               	movlw	31
 13100  00D872  1768               	andwf	??__get_dateTime& (0+255),f,b
 13101  00D874  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13102  00D878  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13103  00D87A  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13104  00D87C  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13105  00D87E  0E0C               	movlw	12
 13106  00D880                     u11775:
 13107  00D880  90D8               	bcf	status,0,c
 13108  00D882  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13109  00D884  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13110  00D886  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13111  00D888  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13112  00D88A  2EE8               	decfsz	wreg,f,c
 13113  00D88C  D7F9               	goto	u11775
 13114  00D88E  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13115  00D890  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13116  00D892  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13117  00D894  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13118  00D896  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13119  00D898  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13120  00D89A  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13121  00D89C  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 13125  00D89E  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 13126  00D8A0  0B3F               	andlw	63
 13127  00D8A2  6F68               	movwf	??__get_dateTime& (0+255),b
 13128  00D8A4  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 13129  00D8A6  0E06               	movlw	6
 13130  00D8A8                     u11785:
 13131  00D8A8  90D8               	bcf	status,0,c
 13132  00D8AA  3768               	rlcf	??__get_dateTime& (0+255),f,b
 13133  00D8AC  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13134  00D8AE  2EE8               	decfsz	wreg,f,c
 13135  00D8B0  D7FB               	goto	u11785
 13136  00D8B2  5168               	movf	??__get_dateTime& (0+255),w,b
 13137  00D8B4  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 13138  00D8B6  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13139  00D8B8  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 13140  00D8BA  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13141  00D8BC  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 13142  00D8BE  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13143  00D8C0  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13144  00D8C2  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13145  00D8C4  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13146  00D8C6  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13147  00D8C8  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13148  00D8CA  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 13149  00D8CC  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;log.c: 53: datetime |= (seconds&0b111111);
 13153  00D8CE  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 13154  00D8D2  0E3F               	movlw	63
 13155  00D8D4  1768               	andwf	??__get_dateTime& (0+255),f,b
 13156  00D8D6  5168               	movf	??__get_dateTime& (0+255),w,b
 13157  00D8D8  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;log.c: 54: return datetime;
 13161  00D8DA  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 13162  00D8DE  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 13163  00D8E2  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 13164  00D8E6  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 13165  00D8EA  0012               	return	
 13166  00D8EC                     __end_of__get_dateTime:
 13167                           	opt stack 0
 13168                           tblptru	equ	0xFF8
 13169                           tblptrh	equ	0xFF7
 13170                           tblptrl	equ	0xFF6
 13171                           tablat	equ	0xFF5
 13172                           prodh	equ	0xFF4
 13173                           prodl	equ	0xFF3
 13174                           intcon	equ	0xFF2
 13175                           intcon2	equ	0xFF1
 13176                           intcon3	equ	0xFF0
 13177                           postinc0	equ	0xFEE
 13178                           wreg	equ	0xFE8
 13179                           postdec1	equ	0xFE5
 13180                           plusw1	equ	0xFE3
 13181                           fsr1h	equ	0xFE2
 13182                           fsr1l	equ	0xFE1
 13183                           indf2	equ	0xFDF
 13184                           postinc2	equ	0xFDE
 13185                           postdec2	equ	0xFDD
 13186                           plusw2	equ	0xFDB
 13187                           fsr2h	equ	0xFDA
 13188                           fsr2l	equ	0xFD9
 13189                           status	equ	0xFD8
 13190                           
 13191 ;; *************** function __get_checksum *****************
 13192 ;; Defined at:
 13193 ;;		line 57 in file "log.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;  log_entry       2    0[BANK0 ] PTR struct .
 13196 ;;		 -> log_write_to_disk@log_entry(32), 
 13197 ;; Auto vars:     Size  Location     Type
 13198 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 13199 ;;		 -> log_write_to_disk@log_entry(32), 
 13200 ;;  cntr            1    5[BANK0 ] unsigned char 
 13201 ;;  checksum        1    4[BANK0 ] unsigned char 
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      unsigned char 
 13204 ;; Registers used:
 13205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13212 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13214 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13215 ;;Total ram usage:        6 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:   10
 13218 ;; This function calls:
 13219 ;;		Nothing
 13220 ;; This function is called by:
 13221 ;;		_log_generate_entry
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           	psect	text54
 13226  01232A                     __ptext54:
 13227                           	opt stack 0
 13228  01232A                     __get_checksum:
 13229                           	opt stack 18
 13230                           
 13231                           ;log.c: 59: uint8_t checksum;
 13232                           ;log.c: 60: uint8_t *byte_array;
 13233                           ;log.c: 61: uint8_t cntr;
 13234                           ;log.c: 62: byte_array = (uint8_t*) log_entry;
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;incstack = 0
 13238  01232A  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 13239  01232E  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 13240                           
 13241                           ;log.c: 63: checksum = 0x00;
 13242  012332  0E00               	movlw	0
 13243  012334  0100               	movlb	0	; () banked
 13244  012336  6F64               	movwf	__get_checksum@checksum& (0+255),b
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 13248  012338  0E00               	movlw	0
 13249  01233A  6F65               	movwf	__get_checksum@cntr& (0+255),b
 13250  01233C  0E1E               	movlw	30
 13251  01233E  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 13252  012340  D001               	goto	l3263
 13253  012342  D00C               	goto	u11800
 13254  012344                     l3263:
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;log.c: 65: {
 13258                           ;log.c: 66: checksum ^= byte_array[cntr];
 13259                           
 13260                           ; BSR set to: 0
 13261  012344  5165               	movf	__get_checksum@cntr& (0+255),w,b
 13262  012346  0D01               	mullw	1
 13263  012348  50F3               	movf	prodl,w,c
 13264  01234A  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 13265  01234C  6ED9               	movwf	fsr2l,c
 13266  01234E  50F4               	movf	prodh,w,c
 13267  012350  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 13268  012352  6EDA               	movwf	fsr2h,c
 13269  012354  50DF               	movf	indf2,w,c
 13270  012356  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 13271                           
 13272                           ; BSR set to: 0
 13273  012358  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 13274  01235A  D7F0               	goto	L9
 13275  01235C                     u11800:
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;log.c: 67: }
 13279                           ;log.c: 68: return checksum;
 13280                           
 13281                           ; BSR set to: 0
 13282  01235C  5164               	movf	__get_checksum@checksum& (0+255),w,b
 13283  01235E  0012               	return	
 13284  012360                     __end_of__get_checksum:
 13285                           	opt stack 0
 13286                           tblptru	equ	0xFF8
 13287                           tblptrh	equ	0xFF7
 13288                           tblptrl	equ	0xFF6
 13289                           tablat	equ	0xFF5
 13290                           prodh	equ	0xFF4
 13291                           prodl	equ	0xFF3
 13292                           intcon	equ	0xFF2
 13293                           intcon2	equ	0xFF1
 13294                           intcon3	equ	0xFF0
 13295                           postinc0	equ	0xFEE
 13296                           wreg	equ	0xFE8
 13297                           postdec1	equ	0xFE5
 13298                           plusw1	equ	0xFE3
 13299                           fsr1h	equ	0xFE2
 13300                           fsr1l	equ	0xFE1
 13301                           indf2	equ	0xFDF
 13302                           postinc2	equ	0xFDE
 13303                           postdec2	equ	0xFDD
 13304                           plusw2	equ	0xFDB
 13305                           fsr2h	equ	0xFDA
 13306                           fsr2l	equ	0xFD9
 13307                           status	equ	0xFD8
 13308                           
 13309 ;; *************** function _fat_create_file *****************
 13310 ;; Defined at:
 13311 ;;		line 321 in file "fat16.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  name            2   59[BANK0 ] PTR unsigned char 
 13314 ;;		 -> filename(9), 
 13315 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 13316 ;;		 -> extension(4), 
 13317 ;;  size            4   63[BANK0 ] unsigned long 
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;  root_entry     32   80[BANK0 ] struct .
 13320 ;;  cluster         2   78[BANK0 ] unsigned int 
 13321 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 13322 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 13323 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 13324 ;;  root_slot       1   75[BANK0 ] unsigned char 
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  1    wreg      unsigned char 
 13327 ;; Registers used:
 13328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13334 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13335 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13337 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13338 ;;Total ram usage:       53 bytes
 13339 ;; Hardware stack levels used:    1
 13340 ;; Hardware stack levels required when called:   16
 13341 ;; This function calls:
 13342 ;;		__get_available_root_entry
 13343 ;;		__get_date
 13344 ;;		__get_empty_cluster
 13345 ;;		__get_time
 13346 ;;		__write_fat
 13347 ;;		__write_root
 13348 ;;		_fat_find_file
 13349 ;;		_fat_get_empty_clusters
 13350 ;;		_memcpy
 13351 ;; This function is called by:
 13352 ;;		_log_write_to_disk
 13353 ;; This function uses a non-reentrant model
 13354 ;;
 13355                           
 13356                           	psect	text55
 13357  00D312                     __ptext55:
 13358                           	opt stack 0
 13359  00D312                     _fat_create_file:
 13360                           	opt stack 13
 13361                           
 13362                           ;fat16.c: 323: uint8_t root_slot;
 13363                           ;fat16.c: 324: rootEntry_t root_entry;
 13364                           ;fat16.c: 325: uint16_t cluster;
 13365                           ;fat16.c: 326: uint16_t next_cluster;
 13366                           ;fat16.c: 327: uint16_t number_of_clusters;
 13367                           ;fat16.c: 328: uint16_t cluster_count;
 13368                           ;fat16.c: 332: if(fat_find_file(name, extension) != 0xFF)
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;incstack = 0
 13372  00D312  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 13373  00D316  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 13374  00D31A  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 13375  00D31E  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13376  00D322  ECAE  F07C         	call	_fat_find_file	;wreg free
 13377  00D326  0AFF               	xorlw	255
 13378  00D328  B4D8               	btfsc	status,2,c
 13379  00D32A  D002               	goto	l2997
 13380                           
 13381                           ;fat16.c: 333: {
 13382                           ;fat16.c: 336: return 0xFF;
 13383  00D32C  0EFF               	movlw	255
 13384  00D32E  0012               	return	
 13385  00D330                     l2997:
 13386                           
 13387                           ;fat16.c: 337: }
 13388                           ;fat16.c: 341: root_slot = _get_available_root_entry();
 13389  00D330  ECA7  F093         	call	__get_available_root_entry	;wreg free
 13390  00D334  0100               	movlb	0	; () banked
 13391  00D336  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;fat16.c: 342: if(root_slot == 0xFF)
 13395  00D338  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 13396  00D33A  A4D8               	btfss	status,2,c
 13397  00D33C  D002               	goto	l2999
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;fat16.c: 343: {
 13401                           ;fat16.c: 346: return 0xFE;
 13402  00D33E  0EFE               	movlw	254
 13403                           
 13404                           ; BSR set to: 0
 13405  00D340  0012               	return	
 13406  00D342                     l2999:
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;fat16.c: 347: }
 13410                           ;fat16.c: 350: number_of_clusters = (size>>9) + 1;
 13411                           
 13412                           ; BSR set to: 0
 13413  00D342  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 13414  00D346  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 13415  00D34A  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 13416  00D34E  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 13417  00D352  0E0A               	movlw	10
 13418  00D354  D005               	goto	u14280
 13419  00D356                     u14285:
 13420  00D356  90D8               	bcf	status,0,c
 13421  00D358  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13422  00D35A  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13423  00D35C  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13424  00D35E  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 13425  00D360                     u14280:
 13426  00D360  2EE8               	decfsz	wreg,f,c
 13427  00D362  D7F9               	goto	u14285
 13428  00D364  0E01               	movlw	1
 13429  00D366  25A3               	addwf	??_fat_create_file& (0+255),w,b
 13430  00D368  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 13431  00D36A  0E00               	movlw	0
 13432  00D36C  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 13433  00D36E  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 13437  00D370  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 13438  00D374  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 13439  00D378  ECC3  F082         	call	_fat_get_empty_clusters	;wreg free
 13440  00D37C  0100               	movlb	0	; () banked
 13441  00D37E  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13442  00D380  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 13443  00D382  E104               	bnz	u14290
 13444  00D384  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13445  00D386  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 13446  00D388  B4D8               	btfsc	status,2,c
 13447  00D38A  D002               	goto	l3000
 13448  00D38C                     u14290:
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;fat16.c: 352: {
 13452                           ;fat16.c: 355: return 0xFD;
 13453  00D38C  0EFD               	movlw	253
 13454                           
 13455                           ; BSR set to: 0
 13456  00D38E  0012               	return	
 13457  00D390                     l3000:
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;fat16.c: 356: }
 13461                           ;fat16.c: 359: cluster = _get_empty_cluster(2);
 13462                           
 13463                           ; BSR set to: 0
 13464  00D390  0E00               	movlw	0
 13465  00D392  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13466  00D394  0E02               	movlw	2
 13467  00D396  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13468  00D398  ECA8  F086         	call	__get_empty_cluster	;wreg free
 13469  00D39C  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 13470  00D3A0  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 13471                           
 13472                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 13473  00D3A4  0EB0               	movlw	low fat_create_file@root_entry
 13474  00D3A6  0100               	movlb	0	; () banked
 13475  00D3A8  6F60               	movwf	memcpy@d1& (0+255),b
 13476  00D3AA  0E00               	movlw	high fat_create_file@root_entry
 13477  00D3AC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13478  00D3AE  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 13479  00D3B2  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13480  00D3B6  0E00               	movlw	0
 13481  00D3B8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13482  00D3BA  0E08               	movlw	8
 13483  00D3BC  6F64               	movwf	memcpy@n& (0+255),b
 13484  00D3BE  EC1A  F08B         	call	_memcpy	;wreg free
 13485                           
 13486                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 13487  00D3C2  0EB8               	movlw	low (fat_create_file@root_entry+8)
 13488  00D3C4  0100               	movlb	0	; () banked
 13489  00D3C6  6F60               	movwf	memcpy@d1& (0+255),b
 13490  00D3C8  0E00               	movlw	high (fat_create_file@root_entry+8)
 13491  00D3CA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13492  00D3CC  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 13493  00D3D0  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13494  00D3D4  0E00               	movlw	0
 13495  00D3D6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13496  00D3D8  0E03               	movlw	3
 13497  00D3DA  6F64               	movwf	memcpy@n& (0+255),b
 13498  00D3DC  EC1A  F08B         	call	_memcpy	;wreg free
 13499                           
 13500                           ;fat16.c: 364: root_entry.attributes = 0x00;
 13501  00D3E0  0E00               	movlw	0
 13502  00D3E2  0100               	movlb	0	; () banked
 13503  00D3E4  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 13507  00D3E6  0E00               	movlw	0
 13508  00D3E8  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 13512  00D3EA  0E00               	movlw	0
 13513  00D3EC  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 13517  00D3EE  ECEB  F088         	call	__get_time	;wreg free
 13518  00D3F2  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 13519  00D3F6  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 13520                           
 13521                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 13522  00D3FA  ECBD  F089         	call	__get_date	;wreg free
 13523  00D3FE  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 13524  00D402  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 13525                           
 13526                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 13527  00D406  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13528  00D40A  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13529                           
 13530                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 13531  00D40E  0E00               	movlw	0
 13532  00D410  0100               	movlb	0	; () banked
 13533  00D412  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13534  00D414  0E00               	movlw	0
 13535  00D416  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 13539  00D418  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13540  00D41C  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 13544  00D420  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13545  00D424  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 13549  00D428  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 13550  00D42C  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;fat16.c: 374: root_entry.fileSize = size;
 13554  00D430  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13555  00D434  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13556  00D438  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13557  00D43C  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13558                           
 13559                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 13560  00D440  0EB0               	movlw	low fat_create_file@root_entry
 13561  00D442  6F88               	movwf	__write_root@data& (0+255),b
 13562  00D444  0E00               	movlw	high fat_create_file@root_entry
 13563  00D446  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13564  00D448  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13565  00D44A  EC79  F08B         	call	__write_root
 13566                           
 13567                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 13568  00D44E  0E00               	movlw	0
 13569  00D450  0100               	movlb	0	; () banked
 13570  00D452  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 13571  00D454  0E01               	movlw	1
 13572  00D456  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 13573  00D458  D02F               	goto	l3001
 13574  00D45A                     
 13575                           ; BSR set to: 0
 13576                           ;fat16.c: 383: {
 13577                           ;fat16.c: 385: if(cluster_count==number_of_clusters)
 13578                           
 13579                           ; BSR set to: 0
 13580  00D45A  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13581  00D45C  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 13582  00D45E  E10E               	bnz	l15726
 13583  00D460  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13584  00D462  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13585  00D464  A4D8               	btfss	status,2,c
 13586  00D466  D00A               	goto	l3003
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;fat16.c: 386: {
 13590                           ;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 13591  00D468  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13592  00D46C  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13593  00D470  0EFF               	movlw	255
 13594  00D472  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 13595  00D474  698A               	setf	__write_fat@value& (0+255),b
 13596  00D476  ECBC  F090         	call	__write_fat	;wreg free
 13597                           
 13598                           ;fat16.c: 389: }
 13599  00D47A  D01B               	goto	l3004
 13600  00D47C                     l3003:
 13601  00D47C                     l15726:
 13602                           
 13603                           ;fat16.c: 390: else
 13604                           ;fat16.c: 391: {
 13605                           ;fat16.c: 393: next_cluster = _get_empty_cluster(cluster+1);
 13606  00D47C  0E01               	movlw	1
 13607  00D47E  0100               	movlb	0	; () banked
 13608  00D480  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 13609  00D482  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13610  00D484  0E00               	movlw	0
 13611  00D486  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 13612  00D488  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13613  00D48A  ECA8  F086         	call	__get_empty_cluster	;wreg free
 13614  00D48E  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 13615  00D492  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 13616                           
 13617                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 13618  00D496  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13619  00D49A  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13620  00D49E  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 13621  00D4A2  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 13622  00D4A6  ECBC  F090         	call	__write_fat	;wreg free
 13623                           
 13624                           ;fat16.c: 397: cluster = next_cluster;
 13625  00D4AA  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 13626  00D4AE  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 13627  00D4B2                     l3004:
 13628  00D4B2  0100               	movlb	0	; () banked
 13629  00D4B4  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 13630  00D4B6  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 13631  00D4B8                     l3001:
 13632                           
 13633                           ; BSR set to: 0
 13634                           
 13635                           ; BSR set to: 0
 13636  00D4B8  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 13637  00D4BA  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 13638  00D4BC  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13639  00D4BE  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13640  00D4C0  B0D8               	btfsc	status,0,c
 13641  00D4C2  D7CB               	goto	l3002
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;fat16.c: 398: }
 13645                           ;fat16.c: 399: }
 13646                           ;fat16.c: 400: return root_slot;
 13647                           
 13648                           ; BSR set to: 0
 13649  00D4C4  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13650  00D4C6  0012               	return	
 13651  00D4C8                     __end_of_fat_create_file:
 13652                           	opt stack 0
 13653                           tblptru	equ	0xFF8
 13654                           tblptrh	equ	0xFF7
 13655                           tblptrl	equ	0xFF6
 13656                           tablat	equ	0xFF5
 13657                           prodh	equ	0xFF4
 13658                           prodl	equ	0xFF3
 13659                           intcon	equ	0xFF2
 13660                           intcon2	equ	0xFF1
 13661                           intcon3	equ	0xFF0
 13662                           postinc0	equ	0xFEE
 13663                           wreg	equ	0xFE8
 13664                           postdec1	equ	0xFE5
 13665                           plusw1	equ	0xFE3
 13666                           fsr1h	equ	0xFE2
 13667                           fsr1l	equ	0xFE1
 13668                           indf2	equ	0xFDF
 13669                           postinc2	equ	0xFDE
 13670                           postdec2	equ	0xFDD
 13671                           plusw2	equ	0xFDB
 13672                           fsr2h	equ	0xFDA
 13673                           fsr2l	equ	0xFD9
 13674                           status	equ	0xFD8
 13675                           
 13676 ;; *************** function _fat_get_empty_clusters *****************
 13677 ;; Defined at:
 13678 ;;		line 132 in file "fat16.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;  maximum         2   39[BANK0 ] unsigned int 
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;  cluster         2   49[BANK0 ] unsigned int 
 13683 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 13684 ;;  value           2   45[BANK0 ] unsigned int 
 13685 ;;  offset          2   43[BANK0 ] unsigned int 
 13686 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  2   39[BANK0 ] unsigned int 
 13689 ;; Registers used:
 13690 ;;		wreg, status,2, status,0, cstack
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13697 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13699 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13700 ;;Total ram usage:       12 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:   14
 13703 ;; This function calls:
 13704 ;;		_flash_partial_read
 13705 ;; This function is called by:
 13706 ;;		_fat_create_file
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text56
 13711  010586                     __ptext56:
 13712                           	opt stack 0
 13713  010586                     _fat_get_empty_clusters:
 13714                           	opt stack 14
 13715                           
 13716                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 13717                           
 13718                           ;incstack = 0
 13719  010586  0E00               	movlw	0
 13720  010588  0100               	movlb	0	; () banked
 13721  01058A  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 13722  01058C  0E00               	movlw	0
 13723  01058E  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 13724                           
 13725                           ;fat16.c: 135: uint16_t cluster;
 13726                           ;fat16.c: 136: uint16_t fat_sector;
 13727                           ;fat16.c: 137: uint16_t offset;
 13728                           ;fat16.c: 138: uint16_t value;
 13729                           ;fat16.c: 141: for(cluster=2; cluster<(4074+2); ++cluster)
 13730  010590  0E00               	movlw	0
 13731  010592  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 13732  010594  0E02               	movlw	2
 13733  010596  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 13734  010598  D034               	goto	l13866
 13735  01059A                     
 13736                           ; BSR set to: 0
 13737                           ;fat16.c: 142: {
 13738                           ;fat16.c: 143: fat_sector = cluster>>8;
 13739                           
 13740                           ; BSR set to: 0
 13741  01059A  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 13742  01059C  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 13743  01059E  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;fat16.c: 144: fat_sector += 2;
 13747  0105A0  0E02               	movlw	2
 13748  0105A2  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 13749  0105A4  0E00               	movlw	0
 13750  0105A6  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;fat16.c: 145: offset = cluster & 0xFF;
 13754  0105A8  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 13755  0105AA  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 13756  0105AC  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;fat16.c: 146: offset <<= 1;
 13760  0105AE  90D8               	bcf	status,0,c
 13761  0105B0  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 13762  0105B2  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 13766  0105B4  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 13767  0105B8  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 13768  0105BC  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 13769  0105C0  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 13770  0105C4  0E00               	movlw	0
 13771  0105C6  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 13772  0105C8  0E02               	movlw	2
 13773  0105CA  6F77               	movwf	flash_partial_read@length& (0+255),b
 13774  0105CC  0E8D               	movlw	low fat_get_empty_clusters@value
 13775  0105CE  6F79               	movwf	flash_partial_read@data& (0+255),b
 13776  0105D0  0E00               	movlw	high fat_get_empty_clusters@value
 13777  0105D2  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 13778  0105D4  EC5F  F087         	call	_flash_partial_read	;wreg free
 13779                           
 13780                           ;fat16.c: 148: if(value==0x0000)
 13781  0105D8  0100               	movlb	0	; () banked
 13782  0105DA  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 13783  0105DC  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 13784  0105DE  A4D8               	btfss	status,2,c
 13785  0105E0  D00E               	goto	l2953
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;fat16.c: 149: {
 13789                           ;fat16.c: 150: ++empty_clusters;
 13790  0105E2  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 13791  0105E4  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;fat16.c: 151: if(empty_clusters==maximum)
 13795  0105E6  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 13796  0105E8  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 13797  0105EA  E109               	bnz	l13864
 13798  0105EC  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 13799  0105EE  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 13800  0105F0  A4D8               	btfss	status,2,c
 13801  0105F2  D005               	goto	l2953
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;fat16.c: 152: {
 13805                           ;fat16.c: 153: return empty_clusters;
 13806  0105F4  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 13807  0105F8  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 13808  0105FC  0012               	return	
 13809  0105FE                     l2953:
 13810  0105FE                     l13864:
 13811                           
 13812                           ; BSR set to: 0
 13813  0105FE  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 13814  010600  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 13815  010602                     l13866:
 13816                           
 13817                           ; BSR set to: 0
 13818  010602  0EEC               	movlw	236
 13819  010604  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 13820  010606  0E0F               	movlw	15
 13821  010608  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 13822  01060A  A0D8               	btfss	status,0,c
 13823  01060C  D7C6               	goto	l2950
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;fat16.c: 154: }
 13827                           ;fat16.c: 155: }
 13828                           ;fat16.c: 156: }
 13829                           ;fat16.c: 157: return empty_clusters;
 13830  01060E  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 13831  010612  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 13832                           
 13833                           ; BSR set to: 0
 13834  010616  0012               	return		;funcret
 13835  010618                     __end_of_fat_get_empty_clusters:
 13836                           	opt stack 0
 13837                           tblptru	equ	0xFF8
 13838                           tblptrh	equ	0xFF7
 13839                           tblptrl	equ	0xFF6
 13840                           tablat	equ	0xFF5
 13841                           prodh	equ	0xFF4
 13842                           prodl	equ	0xFF3
 13843                           intcon	equ	0xFF2
 13844                           intcon2	equ	0xFF1
 13845                           intcon3	equ	0xFF0
 13846                           postinc0	equ	0xFEE
 13847                           wreg	equ	0xFE8
 13848                           postdec1	equ	0xFE5
 13849                           plusw1	equ	0xFE3
 13850                           fsr1h	equ	0xFE2
 13851                           fsr1l	equ	0xFE1
 13852                           indf2	equ	0xFDF
 13853                           postinc2	equ	0xFDE
 13854                           postdec2	equ	0xFDD
 13855                           plusw2	equ	0xFDB
 13856                           fsr2h	equ	0xFDA
 13857                           fsr2l	equ	0xFD9
 13858                           status	equ	0xFD8
 13859                           
 13860 ;; *************** function _fat_find_file *****************
 13861 ;; Defined at:
 13862 ;;		line 262 in file "fat16.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;  name            2   39[BANK0 ] PTR unsigned char 
 13865 ;;		 -> filename(9), 
 13866 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 13867 ;;		 -> extension(4), 
 13868 ;; Auto vars:     Size  Location     Type
 13869 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 13870 ;;  offset          2   57[BANK0 ] unsigned int 
 13871 ;;  sector          2   55[BANK0 ] unsigned int 
 13872 ;;  slot            1   54[BANK0 ] unsigned char 
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  1    wreg      unsigned char 
 13875 ;; Registers used:
 13876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13877 ;; Tracked objects:
 13878 ;;		On entry : 0/0
 13879 ;;		On exit  : 0/0
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13883 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13885 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13886 ;;Total ram usage:       20 bytes
 13887 ;; Hardware stack levels used:    1
 13888 ;; Hardware stack levels required when called:   14
 13889 ;; This function calls:
 13890 ;;		_flash_partial_read
 13891 ;;		_strncmp
 13892 ;; This function is called by:
 13893 ;;		_fat_create_file
 13894 ;;		_log_write_to_disk
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           	psect	text57
 13899  00F95C                     __ptext57:
 13900                           	opt stack 0
 13901  00F95C                     _fat_find_file:
 13902                           	opt stack 15
 13903                           
 13904                           ;fat16.c: 264: uint8_t slot;
 13905                           ;fat16.c: 265: uint16_t sector;
 13906                           ;fat16.c: 266: uint16_t offset;
 13907                           ;fat16.c: 267: uint8_t buffer[11];
 13908                           ;fat16.c: 268: slot = 0;
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;incstack = 0
 13912  00F95C  0E00               	movlw	0
 13913  00F95E  0100               	movlb	0	; () banked
 13914  00F960  6F96               	movwf	fat_find_file@slot& (0+255),b
 13915                           
 13916                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 13917  00F962  0E00               	movlw	0
 13918  00F964  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 13919  00F966  0E12               	movlw	18
 13920  00F968  6F97               	movwf	fat_find_file@sector& (0+255),b
 13921  00F96A                     l13902:
 13922                           
 13923                           ; BSR set to: 0
 13924  00F96A  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 13925  00F96C  E159               	bnz	l13944
 13926  00F96E  0E16               	movlw	22
 13927  00F970  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 13928  00F972  B0D8               	btfsc	status,0,c
 13929  00F974  D055               	goto	u11730
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;fat16.c: 270: {
 13933                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 13934                           
 13935                           ; BSR set to: 0
 13936                           
 13937                           ; BSR set to: 0
 13938  00F976  0E00               	movlw	0
 13939  00F978  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 13940  00F97A  0E00               	movlw	0
 13941  00F97C  6F99               	movwf	fat_find_file@offset& (0+255),b
 13942  00F97E                     l13908:
 13943                           
 13944                           ; BSR set to: 0
 13945  00F97E  0E02               	movlw	2
 13946  00F980  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 13947  00F982  B0D8               	btfsc	status,0,c
 13948  00F984  D04A               	goto	u11720
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;fat16.c: 272: {
 13952                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 13953                           
 13954                           ; BSR set to: 0
 13955                           
 13956                           ; BSR set to: 0
 13957  00F986  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 13958  00F98A  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 13959  00F98E  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 13960  00F992  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 13961  00F996  0E00               	movlw	0
 13962  00F998  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 13963  00F99A  0E0B               	movlw	11
 13964  00F99C  6F77               	movwf	flash_partial_read@length& (0+255),b
 13965  00F99E  0E8B               	movlw	low fat_find_file@buffer
 13966  00F9A0  6F79               	movwf	flash_partial_read@data& (0+255),b
 13967  00F9A2  0E00               	movlw	high fat_find_file@buffer
 13968  00F9A4  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 13969  00F9A6  EC5F  F087         	call	_flash_partial_read	;wreg free
 13970                           
 13971                           ;fat16.c: 274: if(buffer[0]==0x00)
 13972  00F9AA  0100               	movlb	0	; () banked
 13973  00F9AC  518B               	movf	fat_find_file@buffer& (0+255),w,b
 13974  00F9AE  A4D8               	btfss	status,2,c
 13975  00F9B0  D002               	goto	l2985
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;fat16.c: 275: {
 13979                           ;fat16.c: 278: return 0xFF;
 13980  00F9B2  0EFF               	movlw	255
 13981                           
 13982                           ; BSR set to: 0
 13983  00F9B4  0012               	return	
 13984  00F9B6                     l2985:
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 13988                           
 13989                           ; BSR set to: 0
 13990  00F9B6  0EE5               	movlw	229
 13991  00F9B8  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 13992  00F9BA  B4D8               	btfsc	status,2,c
 13993  00F9BC  D028               	goto	l2991
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;fat16.c: 286: else
 13997                           ;fat16.c: 287: {
 13998                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 13999                           
 14000                           ; BSR set to: 0
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;fat16.c: 281: {
 14004                           ;fat16.c: 285: }
 14005  00F9BE  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14006  00F9C2  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 14007  00F9C6  0E8B               	movlw	low fat_find_file@buffer
 14008  00F9C8  6F62               	movwf	strncmp@s2& (0+255),b
 14009  00F9CA  0E00               	movlw	high fat_find_file@buffer
 14010  00F9CC  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14011  00F9CE  0E00               	movlw	0
 14012  00F9D0  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14013  00F9D2  0E08               	movlw	8
 14014  00F9D4  6F64               	movwf	strncmp@len& (0+255),b
 14015  00F9D6  ECAC  F085         	call	_strncmp	;wreg free
 14016  00F9DA  0100               	movlb	0	; () banked
 14017  00F9DC  5160               	movf	?_strncmp& (0+255),w,b
 14018  00F9DE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14019  00F9E0  A4D8               	btfss	status,2,c
 14020  00F9E2  D015               	goto	l2991
 14021                           
 14022                           ; BSR set to: 0
 14023                           ;fat16.c: 290: {
 14024                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 14025  00F9E4  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 14026  00F9E8  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 14027  00F9EC  0E93               	movlw	low (fat_find_file@buffer+8)
 14028  00F9EE  6F62               	movwf	strncmp@s2& (0+255),b
 14029  00F9F0  0E00               	movlw	high (fat_find_file@buffer+8)
 14030  00F9F2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14031  00F9F4  0E00               	movlw	0
 14032  00F9F6  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14033  00F9F8  0E03               	movlw	3
 14034  00F9FA  6F64               	movwf	strncmp@len& (0+255),b
 14035  00F9FC  ECAC  F085         	call	_strncmp	;wreg free
 14036  00FA00  0100               	movlb	0	; () banked
 14037  00FA02  5160               	movf	?_strncmp& (0+255),w,b
 14038  00FA04  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14039  00FA06  A4D8               	btfss	status,2,c
 14040  00FA08  D002               	goto	l2991
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;fat16.c: 293: {
 14044                           ;fat16.c: 296: return slot;
 14045  00FA0A  5196               	movf	fat_find_file@slot& (0+255),w,b
 14046                           
 14047                           ; BSR set to: 0
 14048  00FA0C  0012               	return	
 14049  00FA0E                     l2991:
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;fat16.c: 297: }
 14053                           ;fat16.c: 298: }
 14054                           ;fat16.c: 299: }
 14055                           ;fat16.c: 300: ++slot;
 14056                           
 14057                           ; BSR set to: 0
 14058                           
 14059                           ; BSR set to: 0
 14060                           
 14061                           ; BSR set to: 0
 14062                           
 14063                           ; BSR set to: 0
 14064  00FA0E  2B96               	incf	fat_find_file@slot& (0+255),f,b
 14065                           
 14066                           ; BSR set to: 0
 14067  00FA10  0E20               	movlw	32
 14068  00FA12  2799               	addwf	fat_find_file@offset& (0+255),f,b
 14069  00FA14  0E00               	movlw	0
 14070  00FA16  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 14071  00FA18  D7B2               	goto	l13908
 14072  00FA1A                     u11720:
 14073                           
 14074                           ; BSR set to: 0
 14075                           
 14076                           ; BSR set to: 0
 14077  00FA1A  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 14078  00FA1C  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 14079  00FA1E  D7A5               	goto	l13902
 14080  00FA20                     u11730:
 14081  00FA20                     l13944:
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;fat16.c: 301: }
 14085                           ;fat16.c: 302: }
 14086                           ;fat16.c: 303: return 0xFF;
 14087  00FA20  0EFF               	movlw	255
 14088  00FA22  0012               	return	
 14089  00FA24                     __end_of_fat_find_file:
 14090                           	opt stack 0
 14091                           tblptru	equ	0xFF8
 14092                           tblptrh	equ	0xFF7
 14093                           tblptrl	equ	0xFF6
 14094                           tablat	equ	0xFF5
 14095                           prodh	equ	0xFF4
 14096                           prodl	equ	0xFF3
 14097                           intcon	equ	0xFF2
 14098                           intcon2	equ	0xFF1
 14099                           intcon3	equ	0xFF0
 14100                           postinc0	equ	0xFEE
 14101                           wreg	equ	0xFE8
 14102                           postdec1	equ	0xFE5
 14103                           plusw1	equ	0xFE3
 14104                           fsr1h	equ	0xFE2
 14105                           fsr1l	equ	0xFE1
 14106                           indf2	equ	0xFDF
 14107                           postinc2	equ	0xFDE
 14108                           postdec2	equ	0xFDD
 14109                           plusw2	equ	0xFDB
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function _strncmp *****************
 14115 ;; Defined at:
 14116 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 14119 ;;		 -> extension(4), filename(9), 
 14120 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 14121 ;;		 -> fat_find_file@buffer(11), 
 14122 ;;  len             2    4[BANK0 ] unsigned int 
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;		None
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  2    0[BANK0 ] int 
 14127 ;; Registers used:
 14128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14134 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14136 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14137 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14138 ;;Total ram usage:        9 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:   10
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_fat_find_file
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text58
 14149  010B58                     __ptext58:
 14150                           	opt stack 0
 14151  010B58                     _strncmp:
 14152                           	opt stack 18
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;incstack = 0
 14156  010B58  D031               	goto	l3879
 14157  010B5A                     l13112:
 14158  010B5A  C060  FFD9         	movff	strncmp@s1,fsr2l
 14159  010B5E  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14160  010B62  50DF               	movf	indf2,w,c
 14161  010B64  B4D8               	btfsc	status,2,c
 14162  010B66  D00C               	goto	u10810
 14163  010B68  C062  FFD9         	movff	strncmp@s2,fsr2l
 14164  010B6C  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14165  010B70  C060  FFE1         	movff	strncmp@s1,fsr1l
 14166  010B74  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 14167  010B78  50DE               	movf	postinc2,w,c
 14168  010B7A  18E6               	xorwf	postinc1,w,c
 14169  010B7C  B4D8               	btfsc	status,2,c
 14170  010B7E  D019               	goto	l3881
 14171  010B80                     u10810:
 14172  010B80  C062  FFD9         	movff	strncmp@s2,fsr2l
 14173  010B84  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14174  010B88  50DF               	movf	indf2,w,c
 14175  010B8A  0100               	movlb	0	; () banked
 14176  010B8C  6F66               	movwf	??_strncmp& (0+255),b
 14177  010B8E  6B67               	clrf	(??_strncmp+1)& (0+255),b
 14178  010B90  1F66               	comf	??_strncmp& (0+255),f,b
 14179  010B92  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 14180  010B94  4B66               	infsnz	??_strncmp& (0+255),f,b
 14181  010B96  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 14182  010B98  C060  FFD9         	movff	strncmp@s1,fsr2l
 14183  010B9C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14184  010BA0  50DF               	movf	indf2,w,c
 14185  010BA2  6F68               	movwf	(??_strncmp+2)& (0+255),b
 14186  010BA4  5168               	movf	(??_strncmp+2)& (0+255),w,b
 14187  010BA6  2566               	addwf	??_strncmp& (0+255),w,b
 14188  010BA8  6F60               	movwf	?_strncmp& (0+255),b
 14189  010BAA  0E00               	movlw	0
 14190  010BAC  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 14191  010BAE  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14192                           
 14193                           ; BSR set to: 0
 14194  010BB0  0012               	return	
 14195  010BB2                     l3881:
 14196                           
 14197                           ; BSR set to: 0
 14198  010BB2  0100               	movlb	0	; () banked
 14199  010BB4  4B60               	infsnz	strncmp@s1& (0+255),f,b
 14200  010BB6  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 14201  010BB8  4B62               	infsnz	strncmp@s2& (0+255),f,b
 14202  010BBA  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 14203  010BBC                     l3879:
 14204                           
 14205                           ; BSR set to: 0
 14206  010BBC  0100               	movlb	0	; () banked
 14207  010BBE  0764               	decf	strncmp@len& (0+255),f,b
 14208  010BC0  A0D8               	btfss	status,0,c
 14209  010BC2  0765               	decf	(strncmp@len+1)& (0+255),f,b
 14210  010BC4  2964               	incf	strncmp@len& (0+255),w,b
 14211  010BC6  E1C9               	bnz	l13112
 14212  010BC8  2965               	incf	(strncmp@len+1)& (0+255),w,b
 14213  010BCA  A4D8               	btfss	status,2,c
 14214  010BCC  D7C6               	goto	l3880
 14215                           
 14216                           ; BSR set to: 0
 14217                           
 14218                           ; BSR set to: 0
 14219  010BCE  0E00               	movlw	0
 14220  010BD0  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14221  010BD2  0E00               	movlw	0
 14222  010BD4  6F60               	movwf	?_strncmp& (0+255),b
 14223  010BD6  0012               	return	
 14224  010BD8                     __end_of_strncmp:
 14225                           	opt stack 0
 14226                           tblptru	equ	0xFF8
 14227                           tblptrh	equ	0xFF7
 14228                           tblptrl	equ	0xFF6
 14229                           tablat	equ	0xFF5
 14230                           prodh	equ	0xFF4
 14231                           prodl	equ	0xFF3
 14232                           intcon	equ	0xFF2
 14233                           intcon2	equ	0xFF1
 14234                           intcon3	equ	0xFF0
 14235                           postinc0	equ	0xFEE
 14236                           wreg	equ	0xFE8
 14237                           postinc1	equ	0xFE6
 14238                           postdec1	equ	0xFE5
 14239                           plusw1	equ	0xFE3
 14240                           fsr1h	equ	0xFE2
 14241                           fsr1l	equ	0xFE1
 14242                           indf2	equ	0xFDF
 14243                           postinc2	equ	0xFDE
 14244                           postdec2	equ	0xFDD
 14245                           plusw2	equ	0xFDB
 14246                           fsr2h	equ	0xFDA
 14247                           fsr2l	equ	0xFD9
 14248                           status	equ	0xFD8
 14249                           
 14250 ;; *************** function __get_available_root_entry *****************
 14251 ;; Defined at:
 14252 ;;		line 96 in file "fat16.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;		None
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;  file_number     1   46[BANK0 ] unsigned char 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      unsigned char 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2, status,0, cstack
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14270 ;;Total ram usage:        1 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:   15
 14273 ;; This function calls:
 14274 ;;		__root_is_available
 14275 ;; This function is called by:
 14276 ;;		_fat_create_file
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text59
 14281  01274E                     __ptext59:
 14282                           	opt stack 0
 14283  01274E                     __get_available_root_entry:
 14284                           	opt stack 13
 14285                           
 14286                           ;fat16.c: 98: uint8_t file_number;
 14287                           ;fat16.c: 99: for(file_number=0; file_number<64; ++file_number)
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;incstack = 0
 14291  01274E  0E00               	movlw	0
 14292  012750  0100               	movlb	0	; () banked
 14293  012752  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 14294  012754                     l13794:
 14295                           
 14296                           ; BSR set to: 0
 14297  012754  0E3F               	movlw	63
 14298  012756  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14299  012758  D001               	goto	l2938
 14300  01275A  D00C               	goto	u11560
 14301  01275C                     l2938:
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;fat16.c: 100: {
 14305                           ;fat16.c: 101: if(_root_is_available(file_number))
 14306                           
 14307                           ; BSR set to: 0
 14308  01275C  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14309  01275E  EC2C  F086         	call	__root_is_available
 14310  012762  0900               	iorlw	0
 14311  012764  B4D8               	btfsc	status,2,c
 14312  012766  D003               	goto	l2940
 14313                           
 14314                           ;fat16.c: 102: {
 14315                           ;fat16.c: 103: return file_number;
 14316  012768  0100               	movlb	0	; () banked
 14317  01276A  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14318                           
 14319                           ; BSR set to: 0
 14320  01276C  0012               	return	
 14321  01276E                     l2940:
 14322                           
 14323                           ; BSR set to: 0
 14324  01276E  0100               	movlb	0	; () banked
 14325  012770  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14326  012772  D7F0               	goto	l13794
 14327  012774                     u11560:
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;fat16.c: 104: }
 14331                           ;fat16.c: 105: }
 14332                           ;fat16.c: 106: return 0xFF;
 14333                           
 14334                           ; BSR set to: 0
 14335  012774  0EFF               	movlw	255
 14336  012776  0012               	return	
 14337  012778                     __end_of__get_available_root_entry:
 14338                           	opt stack 0
 14339                           tblptru	equ	0xFF8
 14340                           tblptrh	equ	0xFF7
 14341                           tblptrl	equ	0xFF6
 14342                           tablat	equ	0xFF5
 14343                           prodh	equ	0xFF4
 14344                           prodl	equ	0xFF3
 14345                           intcon	equ	0xFF2
 14346                           intcon2	equ	0xFF1
 14347                           intcon3	equ	0xFF0
 14348                           postinc0	equ	0xFEE
 14349                           wreg	equ	0xFE8
 14350                           postinc1	equ	0xFE6
 14351                           postdec1	equ	0xFE5
 14352                           plusw1	equ	0xFE3
 14353                           fsr1h	equ	0xFE2
 14354                           fsr1l	equ	0xFE1
 14355                           indf2	equ	0xFDF
 14356                           postinc2	equ	0xFDE
 14357                           postdec2	equ	0xFDD
 14358                           plusw2	equ	0xFDB
 14359                           fsr2h	equ	0xFDA
 14360                           fsr2l	equ	0xFD9
 14361                           status	equ	0xFD8
 14362                           
 14363 ;; *************** function _fat_append_to_file *****************
 14364 ;; Defined at:
 14365 ;;		line 460 in file "fat16.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  file_number     1    wreg     unsigned char 
 14368 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 14369 ;;  data            2   51[BANK0 ] PTR unsigned char 
 14370 ;;		 -> log_write_to_disk@log_entry(32), 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;  file_number     1   73[BANK0 ] unsigned char 
 14373 ;;  root           32   80[BANK0 ] struct .
 14374 ;;  position        4   76[BANK0 ] unsigned long 
 14375 ;;  file_size       4   63[BANK0 ] unsigned long 
 14376 ;;  length          2   74[BANK0 ] unsigned int 
 14377 ;;  offset          2   71[BANK0 ] unsigned int 
 14378 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 14379 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 14380 ;;  sector          2   61[BANK0 ] unsigned int 
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1    wreg      unsigned char 
 14383 ;; Registers used:
 14384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14391 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14392 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14393 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14394 ;;Total ram usage:       63 bytes
 14395 ;; Hardware stack levels used:    1
 14396 ;; Hardware stack levels required when called:   16
 14397 ;; This function calls:
 14398 ;;		__get_empty_cluster
 14399 ;;		__read_fat
 14400 ;;		__read_root
 14401 ;;		__root_is_available
 14402 ;;		__sector_from_cluster
 14403 ;;		__update_modified_time
 14404 ;;		__write_fat
 14405 ;;		__write_root
 14406 ;;		_flash_partial_write
 14407 ;; This function is called by:
 14408 ;;		_log_write_to_disk
 14409 ;; This function uses a non-reentrant model
 14410 ;;
 14411                           
 14412                           	psect	text60
 14413  00C734                     __ptext60:
 14414                           	opt stack 0
 14415  00C734                     _fat_append_to_file:
 14416                           	opt stack 13
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;incstack = 0
 14420                           ;fat_append_to_file@file_number stored from wreg
 14421  00C734  0100               	movlb	0	; () banked
 14422  00C736  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 14423                           
 14424                           ;fat16.c: 462: rootEntry_t root;
 14425                           ;fat16.c: 463: uint32_t file_size;
 14426                           ;fat16.c: 464: uint16_t fat_cluster;
 14427                           ;fat16.c: 465: uint16_t new_cluster;
 14428                           ;fat16.c: 466: uint32_t position;
 14429                           ;fat16.c: 467: uint16_t offset;
 14430                           ;fat16.c: 468: uint16_t sector;
 14431                           ;fat16.c: 469: uint16_t length;
 14432                           ;fat16.c: 472: if(file_number>=64)
 14433  00C738  0E3F               	movlw	63
 14434  00C73A  0100               	movlb	0	; () banked
 14435  00C73C  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 14436  00C73E  D001               	goto	l3021
 14437  00C740  0012               	return	
 14438  00C742                     l3021:
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;fat16.c: 476: }
 14442                           ;fat16.c: 479: if(_root_is_available(file_number))
 14443                           
 14444                           ; BSR set to: 0
 14445  00C742  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14446  00C744  EC2C  F086         	call	__root_is_available
 14447  00C748  0900               	iorlw	0
 14448  00C74A  A4D8               	btfss	status,2,c
 14449  00C74C  0012               	return	
 14450                           
 14451                           ;fat16.c: 483: }
 14452                           ;fat16.c: 486: _read_root(file_number, &root);
 14453                           
 14454                           ;fat16.c: 480: {
 14455                           ;fat16.c: 482: return 0xFE;
 14456                           ;	Return value of _fat_append_to_file is never used
 14457  00C74E  0EB0               	movlw	low fat_append_to_file@root
 14458  00C750  0100               	movlb	0	; () banked
 14459  00C752  6F87               	movwf	__read_root@data& (0+255),b
 14460  00C754  0E00               	movlw	high fat_append_to_file@root
 14461  00C756  6F88               	movwf	(__read_root@data+1)& (0+255),b
 14462  00C758  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14463  00C75A  ECA7  F08B         	call	__read_root
 14464                           
 14465                           ;fat16.c: 487: file_size = root.fileSize;
 14466  00C75E  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 14467  00C762  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 14468  00C766  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 14469  00C76A  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 14470                           
 14471                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 14472  00C76E  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 14473  00C772  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 14474                           
 14475                           ;fat16.c: 491: position = 0;
 14476  00C776  0E00               	movlw	0
 14477  00C778  0100               	movlb	0	; () banked
 14478  00C77A  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14479  00C77C  0E00               	movlw	0
 14480  00C77E  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14481  00C780  0E00               	movlw	0
 14482  00C782  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14483  00C784  0E00               	movlw	0
 14484  00C786  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14485                           
 14486                           ;fat16.c: 492: while((file_size-position)>512)
 14487  00C788  D013               	goto	l3024
 14488  00C78A                     l15754:
 14489                           
 14490                           ; BSR set to: 0
 14491                           ;fat16.c: 493: {
 14492                           ;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 14493  00C78A  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 14494  00C78E  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 14495  00C792  ECA1  F08F         	call	__read_fat	;wreg free
 14496  00C796  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 14497  00C79A  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 14498                           
 14499                           ;fat16.c: 495: position += 512;
 14500  00C79E  0E00               	movlw	0
 14501  00C7A0  0100               	movlb	0	; () banked
 14502  00C7A2  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14503  00C7A4  0E02               	movlw	2
 14504  00C7A6  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14505  00C7A8  0E00               	movlw	0
 14506  00C7AA  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14507  00C7AC  0E00               	movlw	0
 14508  00C7AE  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14509  00C7B0                     l3024:
 14510                           
 14511                           ; BSR set to: 0
 14512                           
 14513                           ; BSR set to: 0
 14514  00C7B0  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14515  00C7B4  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14516  00C7B8  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 14517  00C7BC  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 14518  00C7C0  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14519  00C7C2  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14520  00C7C4  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 14521  00C7C6  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 14522  00C7C8  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 14523  00C7CA  0E00               	movlw	0
 14524  00C7CC  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 14525  00C7CE  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 14526  00C7D0  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 14527  00C7D2  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14528  00C7D4  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14529  00C7D6  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 14530  00C7D8  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14531  00C7DA  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14532  00C7DC  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 14533  00C7DE  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 14534  00C7E0  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 14535  00C7E2  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 14536  00C7E4  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 14537  00C7E6  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 14538  00C7E8  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 14539  00C7EA  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 14540  00C7EC  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 14541  00C7EE  E1CD               	bnz	l15754
 14542  00C7F0  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 14543  00C7F2  0E02               	movlw	2
 14544  00C7F4  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 14545  00C7F6  B0D8               	btfsc	status,0,c
 14546  00C7F8  D7C8               	goto	l3025
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;fat16.c: 496: }
 14550                           ;fat16.c: 499: offset = file_size - position;
 14551                           
 14552                           ; BSR set to: 0
 14553  00C7FA  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14554  00C7FE  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14555  00C802  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14556  00C804  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14557  00C806  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14558  00C808  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14559  00C80A  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14560  00C80C  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14561  00C80E  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14562  00C810  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14563  00C812  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14564  00C814  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;fat16.c: 502: position = 0;
 14568  00C816  0E00               	movlw	0
 14569  00C818  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14570  00C81A  0E00               	movlw	0
 14571  00C81C  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14572  00C81E  0E00               	movlw	0
 14573  00C820  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14574  00C822  0E00               	movlw	0
 14575  00C824  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14576                           
 14577                           ;fat16.c: 503: while(position < number_of_bytes)
 14578  00C826  D070               	goto	l3027
 14579  00C828                     
 14580                           ; BSR set to: 0
 14581                           ;fat16.c: 504: {
 14582                           ;fat16.c: 506: if(offset==512)
 14583                           
 14584                           ; BSR set to: 0
 14585  00C828  0E02               	movlw	2
 14586  00C82A  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 14587  00C82C  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 14588  00C82E  A4D8               	btfss	status,2,c
 14589  00C830  D027               	goto	l3029
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;fat16.c: 507: {
 14593                           ;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 14594  00C832  0E00               	movlw	0
 14595  00C834  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14596  00C836  0E00               	movlw	0
 14597  00C838  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14598  00C83A  ECA8  F086         	call	__get_empty_cluster	;wreg free
 14599  00C83E  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 14600  00C842  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 14601                           
 14602                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 14603  00C846  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 14604  00C84A  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 14605  00C84E  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 14606  00C852  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 14607  00C856  ECBC  F090         	call	__write_fat	;wreg free
 14608                           
 14609                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 14610  00C85A  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 14611  00C85E  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 14612  00C862  0EFF               	movlw	255
 14613  00C864  0100               	movlb	0	; () banked
 14614  00C866  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 14615  00C868  698A               	setf	__write_fat@value& (0+255),b
 14616  00C86A  ECBC  F090         	call	__write_fat	;wreg free
 14617                           
 14618                           ;fat16.c: 516: fat_cluster = new_cluster;
 14619  00C86E  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 14620  00C872  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 14621                           
 14622                           ;fat16.c: 517: offset = 0;
 14623  00C876  0E00               	movlw	0
 14624  00C878  0100               	movlb	0	; () banked
 14625  00C87A  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14626  00C87C  0E00               	movlw	0
 14627  00C87E  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14628  00C880                     l3029:
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;fat16.c: 518: }
 14632                           ;fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 14633                           
 14634                           ; BSR set to: 0
 14635  00C880  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 14636  00C884  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 14637  00C888  EC85  F096         	call	__sector_from_cluster	;wreg free
 14638  00C88C  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 14639  00C890  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 14640                           
 14641                           ;fat16.c: 524: length = 512 - offset;
 14642  00C894  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 14643  00C898  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 14644  00C89C  0100               	movlb	0	; () banked
 14645  00C89E  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14646  00C8A0  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14647  00C8A2  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14648  00C8A4  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14649  00C8A6  0E00               	movlw	0
 14650  00C8A8  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14651  00C8AA  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 14652  00C8AC  0E02               	movlw	2
 14653  00C8AE  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14654  00C8B0  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;fat16.c: 525: if(length>number_of_bytes)
 14658  00C8B2  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14659  00C8B4  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14660  00C8B6  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14661  00C8B8  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14662  00C8BA  B0D8               	btfsc	status,0,c
 14663  00C8BC  D004               	goto	l3030
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;fat16.c: 526: {
 14667                           ;fat16.c: 527: length = number_of_bytes;
 14668  00C8BE  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 14669  00C8C2  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 14670  00C8C6                     l3030:
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;fat16.c: 528: }
 14674                           ;fat16.c: 531: flash_partial_write(sector, offset, length, &data[position]);
 14675                           
 14676                           ; BSR set to: 0
 14677  00C8C6  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 14678  00C8CA  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 14679  00C8CE  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 14680  00C8D2  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 14681  00C8D6  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 14682  00C8DA  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 14683  00C8DE  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 14684  00C8E0  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 14685  00C8E2  6F85               	movwf	flash_partial_write@data& (0+255),b
 14686  00C8E4  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 14687  00C8E6  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 14688  00C8E8  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 14689  00C8EA  ECB5  F088         	call	_flash_partial_write	;wreg free
 14690                           
 14691                           ;fat16.c: 534: position += length;
 14692  00C8EE  0100               	movlb	0	; () banked
 14693  00C8F0  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14694  00C8F2  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14695  00C8F4  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14696  00C8F6  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14697  00C8F8  0E00               	movlw	0
 14698  00C8FA  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14699  00C8FC  0E00               	movlw	0
 14700  00C8FE  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;fat16.c: 535: offset += length;
 14704  00C900  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14705  00C902  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 14706  00C904  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14707  00C906  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 14708  00C908                     l3027:
 14709                           
 14710                           ; BSR set to: 0
 14711                           
 14712                           ; BSR set to: 0
 14713  00C908  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14714  00C90A  6F95               	movwf	??_fat_append_to_file& (0+255),b
 14715  00C90C  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14716  00C90E  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 14717  00C910  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 14718  00C912  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 14719  00C914  5195               	movf	??_fat_append_to_file& (0+255),w,b
 14720  00C916  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 14721  00C918  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 14722  00C91A  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 14723  00C91C  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 14724  00C91E  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 14725  00C920  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 14726  00C922  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 14727  00C924  A0D8               	btfss	status,0,c
 14728  00C926  D780               	goto	l3028
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;fat16.c: 536: }
 14732                           ;fat16.c: 540: root.fileSize += number_of_bytes;
 14733                           
 14734                           ; BSR set to: 0
 14735  00C928  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14736  00C92A  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 14737  00C92C  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14738  00C92E  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 14739  00C930  0E00               	movlw	0
 14740  00C932  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 14741  00C934  0E00               	movlw	0
 14742  00C936  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 14743                           
 14744                           ; BSR set to: 0
 14745                           ;fat16.c: 541: _update_modified_time(&root);
 14746  00C938  0EB0               	movlw	low fat_append_to_file@root
 14747  00C93A  6F6D               	movwf	__update_modified_time@root& (0+255),b
 14748  00C93C  0E00               	movlw	high fat_append_to_file@root
 14749  00C93E  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 14750  00C940  ECB0  F091         	call	__update_modified_time	;wreg free
 14751                           
 14752                           ;fat16.c: 542: _write_root(file_number, &root);
 14753  00C944  0EB0               	movlw	low fat_append_to_file@root
 14754  00C946  0100               	movlb	0	; () banked
 14755  00C948  6F88               	movwf	__write_root@data& (0+255),b
 14756  00C94A  0E00               	movlw	high fat_append_to_file@root
 14757  00C94C  6F89               	movwf	(__write_root@data+1)& (0+255),b
 14758  00C94E  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14759  00C950  EC79  F08B         	call	__write_root
 14760  00C954  0012               	return	
 14761  00C956                     __end_of_fat_append_to_file:
 14762                           	opt stack 0
 14763                           tblptru	equ	0xFF8
 14764                           tblptrh	equ	0xFF7
 14765                           tblptrl	equ	0xFF6
 14766                           tablat	equ	0xFF5
 14767                           prodh	equ	0xFF4
 14768                           prodl	equ	0xFF3
 14769                           intcon	equ	0xFF2
 14770                           intcon2	equ	0xFF1
 14771                           intcon3	equ	0xFF0
 14772                           postinc0	equ	0xFEE
 14773                           wreg	equ	0xFE8
 14774                           postinc1	equ	0xFE6
 14775                           postdec1	equ	0xFE5
 14776                           plusw1	equ	0xFE3
 14777                           fsr1h	equ	0xFE2
 14778                           fsr1l	equ	0xFE1
 14779                           indf2	equ	0xFDF
 14780                           postinc2	equ	0xFDE
 14781                           postdec2	equ	0xFDD
 14782                           plusw2	equ	0xFDB
 14783                           fsr2h	equ	0xFDA
 14784                           fsr2l	equ	0xFD9
 14785                           status	equ	0xFD8
 14786                           
 14787 ;; *************** function __write_root *****************
 14788 ;; Defined at:
 14789 ;;		line 184 in file "fat16.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  slot            1    wreg     unsigned char 
 14792 ;;  data            2   40[BANK0 ] PTR struct .
 14793 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 14794 ;; Auto vars:     Size  Location     Type
 14795 ;;  slot            1   47[BANK0 ] unsigned char 
 14796 ;;  offset          2   45[BANK0 ] unsigned int 
 14797 ;;  root_sector     2   43[BANK0 ] unsigned int 
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, status,2, status,0, cstack
 14802 ;; Tracked objects:
 14803 ;;		On entry : 0/0
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14808 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14809 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14810 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14811 ;;Total ram usage:        8 bytes
 14812 ;; Hardware stack levels used:    1
 14813 ;; Hardware stack levels required when called:   15
 14814 ;; This function calls:
 14815 ;;		_flash_partial_write
 14816 ;; This function is called by:
 14817 ;;		_fat_create_file
 14818 ;;		_fat_append_to_file
 14819 ;;		_fat_rename_file
 14820 ;; This function uses a non-reentrant model
 14821 ;;
 14822                           
 14823                           	psect	text61
 14824  0116F2                     __ptext61:
 14825                           	opt stack 0
 14826  0116F2                     __write_root:
 14827                           	opt stack 13
 14828                           
 14829                           ;incstack = 0
 14830                           ;__write_root@slot stored from wreg
 14831  0116F2  0100               	movlb	0	; () banked
 14832  0116F4  6F8F               	movwf	__write_root@slot& (0+255),b
 14833                           
 14834                           ;fat16.c: 186: uint16_t root_sector;
 14835                           ;fat16.c: 187: uint16_t offset;
 14836                           ;fat16.c: 188: root_sector = (slot >> 4) + 18;
 14837  0116F6  C08F  F08A         	movff	__write_root@slot,??__write_root
 14838  0116FA  0100               	movlb	0	; () banked
 14839  0116FC  3B8A               	swapf	??__write_root& (0+255),f,b
 14840  0116FE  0E0F               	movlw	15
 14841  011700  178A               	andwf	??__write_root& (0+255),f,b
 14842  011702  0E12               	movlw	18
 14843  011704  258A               	addwf	??__write_root& (0+255),w,b
 14844  011706  6F8B               	movwf	__write_root@root_sector& (0+255),b
 14845  011708  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 14846  01170A  0E00               	movlw	0
 14847  01170C  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 14848                           
 14849                           ;fat16.c: 189: offset = (slot & 0b1111);
 14850  01170E  C08F  F08A         	movff	__write_root@slot,??__write_root
 14851  011712  0E0F               	movlw	15
 14852  011714  178A               	andwf	??__write_root& (0+255),f,b
 14853  011716  518A               	movf	??__write_root& (0+255),w,b
 14854  011718  6F8D               	movwf	__write_root@offset& (0+255),b
 14855  01171A  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 14856                           
 14857                           ;fat16.c: 190: offset <<= 5;
 14858  01171C  0E05               	movlw	5
 14859  01171E                     u11645:
 14860  01171E  90D8               	bcf	status,0,c
 14861  011720  378D               	rlcf	__write_root@offset& (0+255),f,b
 14862  011722  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 14863  011724  2EE8               	decfsz	wreg,f,c
 14864  011726  D7FB               	goto	u11645
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 14868  011728  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 14869  01172C  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 14870  011730  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 14871  011734  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 14872  011738  0E00               	movlw	0
 14873  01173A  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 14874  01173C  0E20               	movlw	32
 14875  01173E  6F83               	movwf	flash_partial_write@length& (0+255),b
 14876  011740  C088  F085         	movff	__write_root@data,flash_partial_write@data
 14877  011744  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 14878  011748  ECB5  F088         	call	_flash_partial_write	;wreg free
 14879  01174C  0012               	return		;funcret
 14880  01174E                     __end_of__write_root:
 14881                           	opt stack 0
 14882                           tblptru	equ	0xFF8
 14883                           tblptrh	equ	0xFF7
 14884                           tblptrl	equ	0xFF6
 14885                           tablat	equ	0xFF5
 14886                           prodh	equ	0xFF4
 14887                           prodl	equ	0xFF3
 14888                           intcon	equ	0xFF2
 14889                           intcon2	equ	0xFF1
 14890                           intcon3	equ	0xFF0
 14891                           postinc0	equ	0xFEE
 14892                           wreg	equ	0xFE8
 14893                           postinc1	equ	0xFE6
 14894                           postdec1	equ	0xFE5
 14895                           plusw1	equ	0xFE3
 14896                           fsr1h	equ	0xFE2
 14897                           fsr1l	equ	0xFE1
 14898                           indf2	equ	0xFDF
 14899                           postinc2	equ	0xFDE
 14900                           postdec2	equ	0xFDD
 14901                           plusw2	equ	0xFDB
 14902                           fsr2h	equ	0xFDA
 14903                           fsr2l	equ	0xFD9
 14904                           status	equ	0xFD8
 14905                           
 14906 ;; *************** function __write_fat *****************
 14907 ;; Defined at:
 14908 ;;		line 160 in file "fat16.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  cluster         2   40[BANK0 ] unsigned int 
 14911 ;;  value           2   42[BANK0 ] unsigned int 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  offset          2   46[BANK0 ] unsigned int 
 14914 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  1    wreg      void 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14925 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14927 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14928 ;;Total ram usage:        8 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:   15
 14931 ;; This function calls:
 14932 ;;		_flash_partial_write
 14933 ;; This function is called by:
 14934 ;;		_fat_create_file
 14935 ;;		_fat_append_to_file
 14936 ;;		_fat_delete_file
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           	psect	text62
 14941  012178                     __ptext62:
 14942                           	opt stack 0
 14943  012178                     __write_fat:
 14944                           	opt stack 13
 14945                           
 14946                           ;fat16.c: 162: uint16_t fat_sector;
 14947                           ;fat16.c: 163: uint16_t offset;
 14948                           ;fat16.c: 164: fat_sector = cluster>>8;
 14949                           
 14950                           ;incstack = 0
 14951  012178  0100               	movlb	0	; () banked
 14952  01217A  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 14953  01217C  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 14954  01217E  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;fat16.c: 165: fat_sector += 2;
 14958  012180  0E02               	movlw	2
 14959  012182  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 14960  012184  0E00               	movlw	0
 14961  012186  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;fat16.c: 166: offset = cluster & 0xFF;
 14965  012188  5188               	movf	__write_fat@cluster& (0+255),w,b
 14966  01218A  6F8E               	movwf	__write_fat@offset& (0+255),b
 14967  01218C  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;fat16.c: 167: offset <<= 1;
 14971  01218E  90D8               	bcf	status,0,c
 14972  012190  378E               	rlcf	__write_fat@offset& (0+255),f,b
 14973  012192  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 14977  012194  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 14978  012198  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 14979  01219C  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 14980  0121A0  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 14981  0121A4  0E00               	movlw	0
 14982  0121A6  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 14983  0121A8  0E02               	movlw	2
 14984  0121AA  6F83               	movwf	flash_partial_write@length& (0+255),b
 14985  0121AC  0E8A               	movlw	low __write_fat@value
 14986  0121AE  6F85               	movwf	flash_partial_write@data& (0+255),b
 14987  0121B0  0E00               	movlw	high __write_fat@value
 14988  0121B2  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 14989  0121B4  ECB5  F088         	call	_flash_partial_write	;wreg free
 14990  0121B8  0012               	return		;funcret
 14991  0121BA                     __end_of__write_fat:
 14992                           	opt stack 0
 14993                           tblptru	equ	0xFF8
 14994                           tblptrh	equ	0xFF7
 14995                           tblptrl	equ	0xFF6
 14996                           tablat	equ	0xFF5
 14997                           prodh	equ	0xFF4
 14998                           prodl	equ	0xFF3
 14999                           intcon	equ	0xFF2
 15000                           intcon2	equ	0xFF1
 15001                           intcon3	equ	0xFF0
 15002                           postinc0	equ	0xFEE
 15003                           wreg	equ	0xFE8
 15004                           postinc1	equ	0xFE6
 15005                           postdec1	equ	0xFE5
 15006                           plusw1	equ	0xFE3
 15007                           fsr1h	equ	0xFE2
 15008                           fsr1l	equ	0xFE1
 15009                           indf2	equ	0xFDF
 15010                           postinc2	equ	0xFDE
 15011                           postdec2	equ	0xFDD
 15012                           plusw2	equ	0xFDB
 15013                           fsr2h	equ	0xFDA
 15014                           fsr2l	equ	0xFD9
 15015                           status	equ	0xFD8
 15016                           
 15017 ;; *************** function _flash_partial_write *****************
 15018 ;; Defined at:
 15019 ;;		line 589 in file "flash.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  page            2   31[BANK0 ] unsigned int 
 15022 ;;  start           2   33[BANK0 ] unsigned int 
 15023 ;;  length          2   35[BANK0 ] unsigned int 
 15024 ;;  data            2   37[BANK0 ] PTR unsigned char 
 15025 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 15026 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;  match           1   39[BANK0 ] enum E8341
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      void 
 15031 ;; Registers used:
 15032 ;;		wreg, status,2, status,0, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15038 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15041 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15042 ;;Total ram usage:        9 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; Hardware stack levels required when called:   14
 15045 ;; This function calls:
 15046 ;;		__flash_compare_page_to_buffer
 15047 ;;		__flash_copy_page_to_buffer
 15048 ;;		__flash_write_page_from_buffer
 15049 ;;		__flash_write_to_buffer
 15050 ;;		_flash_is_busy
 15051 ;; This function is called by:
 15052 ;;		__write_fat
 15053 ;;		__write_root
 15054 ;;		_fat_append_to_file
 15055 ;;		__delete_root
 15056 ;;		__write_file_size
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           	psect	text63
 15061  01116A                     __ptext63:
 15062                           	opt stack 0
 15063  01116A                     _flash_partial_write:
 15064                           	opt stack 13
 15065                           
 15066                           ;flash.c: 591: flashMatchResult_t match;
 15067                           ;flash.c: 594: while(flash_is_busy());
 15068                           
 15069                           ;incstack = 0
 15070  01116A  EC00  F095         	call	_flash_is_busy	;wreg free
 15071  01116E  0900               	iorlw	0
 15072  011170  A4D8               	btfss	status,2,c
 15073  011172  D7FB               	goto	_flash_partial_write
 15074                           
 15075                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 15076  011174  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 15077  011178  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 15078  01117C  0E00               	movlw	0
 15079  01117E  0100               	movlb	0	; () banked
 15080  011180  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 15081  011182  EC31  F08C         	call	__flash_copy_page_to_buffer	;wreg free
 15082                           
 15083                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 15084  011186  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 15085  01118A  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 15086  01118E  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 15087  011192  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 15088  011196  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 15089  01119A  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 15090  01119E  0E00               	movlw	0
 15091  0111A0  0100               	movlb	0	; () banked
 15092  0111A2  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 15093  0111A4  EC3A  F08E         	call	__flash_write_to_buffer	;wreg free
 15094                           
 15095                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 15096  0111A8  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 15097  0111AC  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 15098  0111B0  0E00               	movlw	0
 15099  0111B2  0100               	movlb	0	; () banked
 15100  0111B4  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 15101  0111B6  EC6A  F086         	call	__flash_compare_page_to_buffer	;wreg free
 15102  0111BA  0100               	movlb	0	; () banked
 15103  0111BC  6F87               	movwf	flash_partial_write@match& (0+255),b
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 15107  0111BE  0587               	decf	flash_partial_write@match& (0+255),w,b
 15108  0111C0  A4D8               	btfss	status,2,c
 15109  0111C2  0012               	return	
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;flash.c: 607: {
 15113                           ;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 15114  0111C4  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 15115  0111C8  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 15116  0111CC  0E00               	movlw	0
 15117  0111CE  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 15118  0111D0  ECB8  F08C         	call	__flash_write_page_from_buffer	;wreg free
 15119  0111D4  0012               	return	
 15120  0111D6                     __end_of_flash_partial_write:
 15121                           	opt stack 0
 15122                           tblptru	equ	0xFF8
 15123                           tblptrh	equ	0xFF7
 15124                           tblptrl	equ	0xFF6
 15125                           tablat	equ	0xFF5
 15126                           prodh	equ	0xFF4
 15127                           prodl	equ	0xFF3
 15128                           intcon	equ	0xFF2
 15129                           intcon2	equ	0xFF1
 15130                           intcon3	equ	0xFF0
 15131                           postinc0	equ	0xFEE
 15132                           wreg	equ	0xFE8
 15133                           postinc1	equ	0xFE6
 15134                           postdec1	equ	0xFE5
 15135                           plusw1	equ	0xFE3
 15136                           fsr1h	equ	0xFE2
 15137                           fsr1l	equ	0xFE1
 15138                           indf2	equ	0xFDF
 15139                           postinc2	equ	0xFDE
 15140                           postdec2	equ	0xFDD
 15141                           plusw2	equ	0xFDB
 15142                           fsr2h	equ	0xFDA
 15143                           fsr2l	equ	0xFD9
 15144                           status	equ	0xFD8
 15145                           
 15146 ;; *************** function __flash_copy_page_to_buffer *****************
 15147 ;; Defined at:
 15148 ;;		line 315 in file "flash.c"
 15149 ;; Parameters:    Size  Location     Type
 15150 ;;  page            2   19[BANK0 ] unsigned int 
 15151 ;;  buffer          1   21[BANK0 ] enum E8337
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;  command         4   25[BANK0 ] unsigned char [4]
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  1    wreg      void 
 15156 ;; Registers used:
 15157 ;;		wreg, status,2, status,0, cstack
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/0
 15160 ;;		On exit  : 0/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15163 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15164 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15165 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15166 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15167 ;;Total ram usage:       10 bytes
 15168 ;; Hardware stack levels used:    1
 15169 ;; Hardware stack levels required when called:   13
 15170 ;; This function calls:
 15171 ;;		__flash_spi_tx
 15172 ;;		_flash_is_busy
 15173 ;; This function is called by:
 15174 ;;		_flash_partial_write
 15175 ;; This function uses a non-reentrant model
 15176 ;;
 15177                           
 15178                           	psect	text64
 15179  011862                     __ptext64:
 15180                           	opt stack 0
 15181  011862                     __flash_copy_page_to_buffer:
 15182                           	opt stack 13
 15183                           
 15184                           ;flash.c: 317: uint8_t command[4];
 15185                           ;flash.c: 320: while(flash_is_busy());
 15186                           
 15187                           ;incstack = 0
 15188  011862  EC00  F095         	call	_flash_is_busy	;wreg free
 15189  011866  0900               	iorlw	0
 15190  011868  A4D8               	btfss	status,2,c
 15191  01186A  D7FB               	goto	__flash_copy_page_to_buffer
 15192                           
 15193                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 15194  01186C  0100               	movlb	0	; () banked
 15195  01186E  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15196  011870  A4D8               	btfss	status,2,c
 15197  011872  D002               	goto	l2778
 15198                           
 15199                           ; BSR set to: 0
 15200                           ;flash.c: 324: command[0] = 0x53;
 15201  011874  0E53               	movlw	83
 15202  011876  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15203  011878                     l2778:
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 15207                           
 15208                           ; BSR set to: 0
 15209  011878  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15210  01187A  A4D8               	btfss	status,2,c
 15211  01187C  D002               	goto	l2779
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;flash.c: 326: command[0] = 0x55;
 15215  01187E  0E55               	movlw	85
 15216  011880  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15217  011882                     l2779:
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 15221                           
 15222                           ; BSR set to: 0
 15223  011882  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 15224  011886  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 15225  01188A  0E07               	movlw	7
 15226  01188C  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 15227  01188E                     u10265:
 15228  01188E  90D8               	bcf	status,0,c
 15229  011890  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 15230  011892  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 15231  011894  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 15232  011896  D7FB               	goto	u10265
 15233  011898  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 15234  01189A  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 15238  01189C  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15239  01189E  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15240  0118A0  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 15241                           
 15242                           ;flash.c: 330: command[3] = 0x00;
 15243  0118A2  0E00               	movlw	0
 15244  0118A4  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 15245                           
 15246                           ; BSR set to: 0
 15247                           ;flash.c: 333: _flash_spi_tx(command, 4);
 15248  0118A6  0E79               	movlw	low __flash_copy_page_to_buffer@command
 15249  0118A8  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 15250  0118AA  0E00               	movlw	high __flash_copy_page_to_buffer@command
 15251  0118AC  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 15252  0118AE  0E00               	movlw	0
 15253  0118B0  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 15254  0118B2  0E04               	movlw	4
 15255  0118B4  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 15256  0118B6  ECE5  F08C         	call	__flash_spi_tx	;wreg free
 15257  0118BA  0012               	return		;funcret
 15258  0118BC                     __end_of__flash_copy_page_to_buffer:
 15259                           	opt stack 0
 15260                           tblptru	equ	0xFF8
 15261                           tblptrh	equ	0xFF7
 15262                           tblptrl	equ	0xFF6
 15263                           tablat	equ	0xFF5
 15264                           prodh	equ	0xFF4
 15265                           prodl	equ	0xFF3
 15266                           intcon	equ	0xFF2
 15267                           intcon2	equ	0xFF1
 15268                           intcon3	equ	0xFF0
 15269                           postinc0	equ	0xFEE
 15270                           wreg	equ	0xFE8
 15271                           postinc1	equ	0xFE6
 15272                           postdec1	equ	0xFE5
 15273                           plusw1	equ	0xFE3
 15274                           fsr1h	equ	0xFE2
 15275                           fsr1l	equ	0xFE1
 15276                           indf2	equ	0xFDF
 15277                           postinc2	equ	0xFDE
 15278                           postdec2	equ	0xFDD
 15279                           plusw2	equ	0xFDB
 15280                           fsr2h	equ	0xFDA
 15281                           fsr2l	equ	0xFD9
 15282                           status	equ	0xFD8
 15283                           
 15284 ;; *************** function __update_modified_time *****************
 15285 ;; Defined at:
 15286 ;;		line 55 in file "fat16.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;  root            2   13[BANK0 ] PTR struct .
 15289 ;;		 -> fat_append_to_file@root(32), 
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15304 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15305 ;;Total ram usage:        2 bytes
 15306 ;; Hardware stack levels used:    1
 15307 ;; Hardware stack levels required when called:   13
 15308 ;; This function calls:
 15309 ;;		__get_date
 15310 ;;		__get_time
 15311 ;; This function is called by:
 15312 ;;		_fat_append_to_file
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text65
 15317  012360                     __ptext65:
 15318                           	opt stack 0
 15319  012360                     __update_modified_time:
 15320                           	opt stack 15
 15321                           
 15322                           ;fat16.c: 57: root->modifiedDate = _get_date();
 15323                           
 15324                           ;incstack = 0
 15325  012360  ECBD  F089         	call	__get_date	;wreg free
 15326  012364  0100               	movlb	0	; () banked
 15327  012366  EE20 F018          	lfsr	2,24
 15328  01236A  516D               	movf	__update_modified_time@root& (0+255),w,b
 15329  01236C  26D9               	addwf	fsr2l,f,c
 15330  01236E  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15331  012370  22DA               	addwfc	fsr2h,f,c
 15332  012372  C064  FFDE         	movff	?__get_date,postinc2
 15333  012376  C065  FFDD         	movff	?__get_date+1,postdec2
 15334                           
 15335                           ;fat16.c: 58: root->modifiedTime = _get_time();
 15336  01237A  ECEB  F088         	call	__get_time	;wreg free
 15337  01237E  0100               	movlb	0	; () banked
 15338  012380  EE20 F016          	lfsr	2,22
 15339  012384  516D               	movf	__update_modified_time@root& (0+255),w,b
 15340  012386  26D9               	addwf	fsr2l,f,c
 15341  012388  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15342  01238A  22DA               	addwfc	fsr2h,f,c
 15343  01238C  C064  FFDE         	movff	?__get_time,postinc2
 15344  012390  C065  FFDD         	movff	?__get_time+1,postdec2
 15345                           
 15346                           ; BSR set to: 0
 15347  012394  0012               	return		;funcret
 15348  012396                     __end_of__update_modified_time:
 15349                           	opt stack 0
 15350                           tblptru	equ	0xFF8
 15351                           tblptrh	equ	0xFF7
 15352                           tblptrl	equ	0xFF6
 15353                           tablat	equ	0xFF5
 15354                           prodh	equ	0xFF4
 15355                           prodl	equ	0xFF3
 15356                           intcon	equ	0xFF2
 15357                           intcon2	equ	0xFF1
 15358                           intcon3	equ	0xFF0
 15359                           postinc0	equ	0xFEE
 15360                           wreg	equ	0xFE8
 15361                           postinc1	equ	0xFE6
 15362                           postdec1	equ	0xFE5
 15363                           plusw1	equ	0xFE3
 15364                           fsr1h	equ	0xFE2
 15365                           fsr1l	equ	0xFE1
 15366                           indf2	equ	0xFDF
 15367                           postinc2	equ	0xFDE
 15368                           postdec2	equ	0xFDD
 15369                           plusw2	equ	0xFDB
 15370                           fsr2h	equ	0xFDA
 15371                           fsr2l	equ	0xFD9
 15372                           status	equ	0xFD8
 15373                           
 15374 ;; *************** function __get_time *****************
 15375 ;; Defined at:
 15376 ;;		line 31 in file "fat16.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;		None
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;  time            2   11[BANK0 ] unsigned int 
 15381 ;;  seconds         1   10[BANK0 ] unsigned char 
 15382 ;;  minutes         1    9[BANK0 ] unsigned char 
 15383 ;;  hours           1    8[BANK0 ] unsigned char 
 15384 ;; Return value:  Size  Location     Type
 15385 ;;                  2    4[BANK0 ] unsigned int 
 15386 ;; Registers used:
 15387 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15388 ;; Tracked objects:
 15389 ;;		On entry : 0/0
 15390 ;;		On exit  : 0/0
 15391 ;;		Unchanged: 0/0
 15392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15394 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15396 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15397 ;;Total ram usage:        9 bytes
 15398 ;; Hardware stack levels used:    1
 15399 ;; Hardware stack levels required when called:   12
 15400 ;; This function calls:
 15401 ;;		_rtcc_get_hours_decimal
 15402 ;;		_rtcc_get_minutes_decimal
 15403 ;;		_rtcc_get_seconds_decimal
 15404 ;; This function is called by:
 15405 ;;		__update_modified_time
 15406 ;;		_fat_create_file
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           	psect	text66
 15411  0111D6                     __ptext66:
 15412                           	opt stack 0
 15413  0111D6                     __get_time:
 15414                           	opt stack 16
 15415                           
 15416                           ;fat16.c: 33: uint16_t time;
 15417                           ;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;incstack = 0
 15421  0111D6  EC65  F096         	call	_rtcc_get_hours_decimal	;wreg free
 15422  0111DA  0100               	movlb	0	; () banked
 15423  0111DC  6F68               	movwf	__get_time@hours& (0+255),b
 15424                           
 15425                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 15426  0111DE  EC5D  F096         	call	_rtcc_get_minutes_decimal	;wreg free
 15427  0111E2  0100               	movlb	0	; () banked
 15428  0111E4  6F69               	movwf	__get_time@minutes& (0+255),b
 15429                           
 15430                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 15431  0111E6  EC8D  F096         	call	_rtcc_get_seconds_decimal	;wreg free
 15432  0111EA  0100               	movlb	0	; () banked
 15433  0111EC  6F6A               	movwf	__get_time@seconds& (0+255),b
 15434                           
 15435                           ; BSR set to: 0
 15436                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 15437  0111EE  5168               	movf	__get_time@hours& (0+255),w,b
 15438  0111F0  0B1F               	andlw	31
 15439  0111F2  6F66               	movwf	??__get_time& (0+255),b
 15440  0111F4  6B67               	clrf	(??__get_time+1)& (0+255),b
 15441  0111F6  0E0B               	movlw	11
 15442  0111F8                     u10725:
 15443  0111F8  90D8               	bcf	status,0,c
 15444  0111FA  3766               	rlcf	??__get_time& (0+255),f,b
 15445  0111FC  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15446  0111FE  2EE8               	decfsz	wreg,f,c
 15447  011200  D7FB               	goto	u10725
 15448  011202  C066  F06B         	movff	??__get_time,__get_time@time
 15449  011206  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 15453  01120A  5169               	movf	__get_time@minutes& (0+255),w,b
 15454  01120C  0B3F               	andlw	63
 15455  01120E  6F66               	movwf	??__get_time& (0+255),b
 15456  011210  6B67               	clrf	(??__get_time+1)& (0+255),b
 15457  011212  0E05               	movlw	5
 15458  011214                     u10735:
 15459  011214  90D8               	bcf	status,0,c
 15460  011216  3766               	rlcf	??__get_time& (0+255),f,b
 15461  011218  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15462  01121A  2EE8               	decfsz	wreg,f,c
 15463  01121C  D7FB               	goto	u10735
 15464  01121E  5166               	movf	??__get_time& (0+255),w,b
 15465  011220  136B               	iorwf	__get_time@time& (0+255),f,b
 15466  011222  5167               	movf	(??__get_time+1)& (0+255),w,b
 15467  011224  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 15471  011226  C06A  F066         	movff	__get_time@seconds,??__get_time
 15472  01122A  90D8               	bcf	status,0,c
 15473  01122C  3366               	rrcf	??__get_time& (0+255),f,b
 15474  01122E  0E1F               	movlw	31
 15475  011230  1766               	andwf	??__get_time& (0+255),f,b
 15476  011232  5166               	movf	??__get_time& (0+255),w,b
 15477  011234  136B               	iorwf	__get_time@time& (0+255),f,b
 15478                           
 15479                           ; BSR set to: 0
 15480                           ;fat16.c: 40: return time;
 15481  011236  C06B  F064         	movff	__get_time@time,?__get_time
 15482  01123A  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 15483  01123E  0012               	return	
 15484  011240                     __end_of__get_time:
 15485                           	opt stack 0
 15486                           tblptru	equ	0xFF8
 15487                           tblptrh	equ	0xFF7
 15488                           tblptrl	equ	0xFF6
 15489                           tablat	equ	0xFF5
 15490                           prodh	equ	0xFF4
 15491                           prodl	equ	0xFF3
 15492                           intcon	equ	0xFF2
 15493                           intcon2	equ	0xFF1
 15494                           intcon3	equ	0xFF0
 15495                           postinc0	equ	0xFEE
 15496                           wreg	equ	0xFE8
 15497                           postinc1	equ	0xFE6
 15498                           postdec1	equ	0xFE5
 15499                           plusw1	equ	0xFE3
 15500                           fsr1h	equ	0xFE2
 15501                           fsr1l	equ	0xFE1
 15502                           indf2	equ	0xFDF
 15503                           postinc2	equ	0xFDE
 15504                           postdec2	equ	0xFDD
 15505                           plusw2	equ	0xFDB
 15506                           fsr2h	equ	0xFDA
 15507                           fsr2l	equ	0xFD9
 15508                           status	equ	0xFD8
 15509                           
 15510 ;; *************** function _rtcc_get_minutes_decimal *****************
 15511 ;; Defined at:
 15512 ;;		line 263 in file "rtcc.c"
 15513 ;; Parameters:    Size  Location     Type
 15514 ;;		None
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      unsigned char 
 15519 ;; Registers used:
 15520 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15529 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15530 ;;Total ram usage:        1 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; Hardware stack levels required when called:   11
 15533 ;; This function calls:
 15534 ;;		__rtcc_bdc_to_decimal
 15535 ;;		_rtcc_get_minutes
 15536 ;; This function is called by:
 15537 ;;		__get_time
 15538 ;;		__get_dateTime
 15539 ;; This function uses a non-reentrant model
 15540 ;;
 15541                           
 15542                           	psect	text67
 15543  012CBA                     __ptext67:
 15544                           	opt stack 0
 15545  012CBA                     _rtcc_get_minutes_decimal:
 15546                           	opt stack 16
 15547                           
 15548                           ;rtcc.c: 265: uint8_t bcd_minutes = rtcc_get_minutes();
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;incstack = 0
 15552  012CBA  ECB2  F096         	call	_rtcc_get_minutes	;wreg free
 15553  012CBE  0100               	movlb	0	; () banked
 15554  012CC0  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 15555                           
 15556                           ; BSR set to: 0
 15557                           ;rtcc.c: 266: return _rtcc_bdc_to_decimal(bcd_minutes);
 15558  012CC2  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 15559  012CC4  EC42  F095         	call	__rtcc_bdc_to_decimal
 15560  012CC8  0012               	return	
 15561  012CCA                     __end_of_rtcc_get_minutes_decimal:
 15562                           	opt stack 0
 15563                           tblptru	equ	0xFF8
 15564                           tblptrh	equ	0xFF7
 15565                           tblptrl	equ	0xFF6
 15566                           tablat	equ	0xFF5
 15567                           prodh	equ	0xFF4
 15568                           prodl	equ	0xFF3
 15569                           intcon	equ	0xFF2
 15570                           intcon2	equ	0xFF1
 15571                           intcon3	equ	0xFF0
 15572                           postinc0	equ	0xFEE
 15573                           wreg	equ	0xFE8
 15574                           postinc1	equ	0xFE6
 15575                           postdec1	equ	0xFE5
 15576                           plusw1	equ	0xFE3
 15577                           fsr1h	equ	0xFE2
 15578                           fsr1l	equ	0xFE1
 15579                           indf2	equ	0xFDF
 15580                           postinc2	equ	0xFDE
 15581                           postdec2	equ	0xFDD
 15582                           plusw2	equ	0xFDB
 15583                           fsr2h	equ	0xFDA
 15584                           fsr2l	equ	0xFD9
 15585                           status	equ	0xFD8
 15586                           
 15587 ;; *************** function _rtcc_get_hours_decimal *****************
 15588 ;; Defined at:
 15589 ;;		line 225 in file "rtcc.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;		None
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  1    wreg      unsigned char 
 15596 ;; Registers used:
 15597 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15607 ;;Total ram usage:        1 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; Hardware stack levels required when called:   11
 15610 ;; This function calls:
 15611 ;;		__rtcc_bdc_to_decimal
 15612 ;;		_rtcc_get_hours
 15613 ;; This function is called by:
 15614 ;;		__get_time
 15615 ;;		__get_dateTime
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           	psect	text68
 15620  012CCA                     __ptext68:
 15621                           	opt stack 0
 15622  012CCA                     _rtcc_get_hours_decimal:
 15623                           	opt stack 16
 15624                           
 15625                           ;rtcc.c: 227: uint8_t bcd_hours = rtcc_get_hours();
 15626                           
 15627                           ;incstack = 0
 15628  012CCA  ECB9  F096         	call	_rtcc_get_hours	;wreg free
 15629  012CCE  0100               	movlb	0	; () banked
 15630  012CD0  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;rtcc.c: 228: return _rtcc_bdc_to_decimal(bcd_hours);
 15634  012CD2  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 15635  012CD4  EC42  F095         	call	__rtcc_bdc_to_decimal
 15636  012CD8  0012               	return	
 15637  012CDA                     __end_of_rtcc_get_hours_decimal:
 15638                           	opt stack 0
 15639                           tblptru	equ	0xFF8
 15640                           tblptrh	equ	0xFF7
 15641                           tblptrl	equ	0xFF6
 15642                           tablat	equ	0xFF5
 15643                           prodh	equ	0xFF4
 15644                           prodl	equ	0xFF3
 15645                           intcon	equ	0xFF2
 15646                           intcon2	equ	0xFF1
 15647                           intcon3	equ	0xFF0
 15648                           postinc0	equ	0xFEE
 15649                           wreg	equ	0xFE8
 15650                           postinc1	equ	0xFE6
 15651                           postdec1	equ	0xFE5
 15652                           plusw1	equ	0xFE3
 15653                           fsr1h	equ	0xFE2
 15654                           fsr1l	equ	0xFE1
 15655                           indf2	equ	0xFDF
 15656                           postinc2	equ	0xFDE
 15657                           postdec2	equ	0xFDD
 15658                           plusw2	equ	0xFDB
 15659                           fsr2h	equ	0xFDA
 15660                           fsr2l	equ	0xFD9
 15661                           status	equ	0xFD8
 15662                           
 15663 ;; *************** function __get_date *****************
 15664 ;; Defined at:
 15665 ;;		line 43 in file "fat16.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;		None
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  date            2   11[BANK0 ] unsigned int 
 15670 ;;  day             1   10[BANK0 ] unsigned char 
 15671 ;;  month           1    9[BANK0 ] unsigned char 
 15672 ;;  year            1    8[BANK0 ] unsigned char 
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  2    4[BANK0 ] unsigned int 
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15683 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15685 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15686 ;;Total ram usage:        9 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:   12
 15689 ;; This function calls:
 15690 ;;		_rtcc_get_day_decimal
 15691 ;;		_rtcc_get_month_decimal
 15692 ;;		_rtcc_get_year_decimal
 15693 ;; This function is called by:
 15694 ;;		__update_modified_time
 15695 ;;		_fat_create_file
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text69
 15700  01137A                     __ptext69:
 15701                           	opt stack 0
 15702  01137A                     __get_date:
 15703                           	opt stack 16
 15704                           
 15705                           ;fat16.c: 45: uint16_t date;
 15706                           ;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 15707                           
 15708                           ;incstack = 0
 15709  01137A  EC6D  F096         	call	_rtcc_get_year_decimal	;wreg free
 15710  01137E  0100               	movlb	0	; () banked
 15711  011380  6F68               	movwf	__get_date@year& (0+255),b
 15712                           
 15713                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 15714  011382  EC75  F096         	call	_rtcc_get_month_decimal	;wreg free
 15715  011386  0100               	movlb	0	; () banked
 15716  011388  6F69               	movwf	__get_date@month& (0+255),b
 15717                           
 15718                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 15719  01138A  EC7D  F096         	call	_rtcc_get_day_decimal	;wreg free
 15720  01138E  0100               	movlb	0	; () banked
 15721  011390  6F6A               	movwf	__get_date@day& (0+255),b
 15722                           
 15723                           ; BSR set to: 0
 15724                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 15725  011392  5168               	movf	__get_date@year& (0+255),w,b
 15726  011394  0F14               	addlw	20
 15727  011396  0B7F               	andlw	127
 15728  011398  6F66               	movwf	??__get_date& (0+255),b
 15729  01139A  6B67               	clrf	(??__get_date+1)& (0+255),b
 15730  01139C  0E09               	movlw	9
 15731  01139E                     u10745:
 15732  01139E  90D8               	bcf	status,0,c
 15733  0113A0  3766               	rlcf	??__get_date& (0+255),f,b
 15734  0113A2  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 15735  0113A4  2EE8               	decfsz	wreg,f,c
 15736  0113A6  D7FB               	goto	u10745
 15737  0113A8  C066  F06B         	movff	??__get_date,__get_date@date
 15738  0113AC  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 15742  0113B0  5169               	movf	__get_date@month& (0+255),w,b
 15743  0113B2  0B0F               	andlw	15
 15744  0113B4  6F66               	movwf	??__get_date& (0+255),b
 15745  0113B6  6B67               	clrf	(??__get_date+1)& (0+255),b
 15746  0113B8  0E05               	movlw	5
 15747  0113BA                     u10755:
 15748  0113BA  90D8               	bcf	status,0,c
 15749  0113BC  3766               	rlcf	??__get_date& (0+255),f,b
 15750  0113BE  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 15751  0113C0  2EE8               	decfsz	wreg,f,c
 15752  0113C2  D7FB               	goto	u10755
 15753  0113C4  5166               	movf	??__get_date& (0+255),w,b
 15754  0113C6  136B               	iorwf	__get_date@date& (0+255),f,b
 15755  0113C8  5167               	movf	(??__get_date+1)& (0+255),w,b
 15756  0113CA  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;fat16.c: 51: date |= (day&0b11111);
 15760  0113CC  C06A  F066         	movff	__get_date@day,??__get_date
 15761  0113D0  0E1F               	movlw	31
 15762  0113D2  1766               	andwf	??__get_date& (0+255),f,b
 15763  0113D4  5166               	movf	??__get_date& (0+255),w,b
 15764  0113D6  136B               	iorwf	__get_date@date& (0+255),f,b
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;fat16.c: 52: return date;
 15768  0113D8  C06B  F064         	movff	__get_date@date,?__get_date
 15769  0113DC  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 15770  0113E0  0012               	return	
 15771  0113E2                     __end_of__get_date:
 15772                           	opt stack 0
 15773                           tblptru	equ	0xFF8
 15774                           tblptrh	equ	0xFF7
 15775                           tblptrl	equ	0xFF6
 15776                           tablat	equ	0xFF5
 15777                           prodh	equ	0xFF4
 15778                           prodl	equ	0xFF3
 15779                           intcon	equ	0xFF2
 15780                           intcon2	equ	0xFF1
 15781                           intcon3	equ	0xFF0
 15782                           postinc0	equ	0xFEE
 15783                           wreg	equ	0xFE8
 15784                           postinc1	equ	0xFE6
 15785                           postdec1	equ	0xFE5
 15786                           plusw1	equ	0xFE3
 15787                           fsr1h	equ	0xFE2
 15788                           fsr1l	equ	0xFE1
 15789                           indf2	equ	0xFDF
 15790                           postinc2	equ	0xFDE
 15791                           postdec2	equ	0xFDD
 15792                           plusw2	equ	0xFDB
 15793                           fsr2h	equ	0xFDA
 15794                           fsr2l	equ	0xFD9
 15795                           status	equ	0xFD8
 15796                           
 15797 ;; *************** function _rtcc_get_year_decimal *****************
 15798 ;; Defined at:
 15799 ;;		line 111 in file "rtcc.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;		None
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  1    wreg      unsigned char 
 15806 ;; Registers used:
 15807 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15816 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15817 ;;Total ram usage:        1 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; Hardware stack levels required when called:   11
 15820 ;; This function calls:
 15821 ;;		__rtcc_bdc_to_decimal
 15822 ;;		_rtcc_get_year
 15823 ;; This function is called by:
 15824 ;;		__get_date
 15825 ;;		__get_dateTime
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text70
 15830  012CDA                     __ptext70:
 15831                           	opt stack 0
 15832  012CDA                     _rtcc_get_year_decimal:
 15833                           	opt stack 16
 15834                           
 15835                           ;rtcc.c: 113: uint8_t bcd_year = rtcc_get_year();
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;incstack = 0
 15839  012CDA  EC9D  F096         	call	_rtcc_get_year	;wreg free
 15840  012CDE  0100               	movlb	0	; () banked
 15841  012CE0  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;rtcc.c: 114: return _rtcc_bdc_to_decimal(bcd_year);
 15845  012CE2  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 15846  012CE4  EC42  F095         	call	__rtcc_bdc_to_decimal
 15847  012CE8  0012               	return	
 15848  012CEA                     __end_of_rtcc_get_year_decimal:
 15849                           	opt stack 0
 15850                           tblptru	equ	0xFF8
 15851                           tblptrh	equ	0xFF7
 15852                           tblptrl	equ	0xFF6
 15853                           tablat	equ	0xFF5
 15854                           prodh	equ	0xFF4
 15855                           prodl	equ	0xFF3
 15856                           intcon	equ	0xFF2
 15857                           intcon2	equ	0xFF1
 15858                           intcon3	equ	0xFF0
 15859                           postinc0	equ	0xFEE
 15860                           wreg	equ	0xFE8
 15861                           postinc1	equ	0xFE6
 15862                           postdec1	equ	0xFE5
 15863                           plusw1	equ	0xFE3
 15864                           fsr1h	equ	0xFE2
 15865                           fsr1l	equ	0xFE1
 15866                           indf2	equ	0xFDF
 15867                           postinc2	equ	0xFDE
 15868                           postdec2	equ	0xFDD
 15869                           plusw2	equ	0xFDB
 15870                           fsr2h	equ	0xFDA
 15871                           fsr2l	equ	0xFD9
 15872                           status	equ	0xFD8
 15873                           
 15874 ;; *************** function _rtcc_get_month_decimal *****************
 15875 ;; Defined at:
 15876 ;;		line 149 in file "rtcc.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;		None
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  1    wreg      unsigned char 
 15883 ;; Registers used:
 15884 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15893 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15894 ;;Total ram usage:        1 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:   11
 15897 ;; This function calls:
 15898 ;;		__rtcc_bdc_to_decimal
 15899 ;;		_rtcc_get_month
 15900 ;; This function is called by:
 15901 ;;		__get_date
 15902 ;;		__get_dateTime
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           	psect	text71
 15907  012CEA                     __ptext71:
 15908                           	opt stack 0
 15909  012CEA                     _rtcc_get_month_decimal:
 15910                           	opt stack 16
 15911                           
 15912                           ;rtcc.c: 151: uint8_t bcd_month = rtcc_get_month();
 15913                           
 15914                           ;incstack = 0
 15915  012CEA  ECAB  F096         	call	_rtcc_get_month	;wreg free
 15916  012CEE  0100               	movlb	0	; () banked
 15917  012CF0  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 15918                           
 15919                           ; BSR set to: 0
 15920                           ;rtcc.c: 152: return _rtcc_bdc_to_decimal(bcd_month);
 15921  012CF2  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 15922  012CF4  EC42  F095         	call	__rtcc_bdc_to_decimal
 15923  012CF8  0012               	return	
 15924  012CFA                     __end_of_rtcc_get_month_decimal:
 15925                           	opt stack 0
 15926                           tblptru	equ	0xFF8
 15927                           tblptrh	equ	0xFF7
 15928                           tblptrl	equ	0xFF6
 15929                           tablat	equ	0xFF5
 15930                           prodh	equ	0xFF4
 15931                           prodl	equ	0xFF3
 15932                           intcon	equ	0xFF2
 15933                           intcon2	equ	0xFF1
 15934                           intcon3	equ	0xFF0
 15935                           postinc0	equ	0xFEE
 15936                           wreg	equ	0xFE8
 15937                           postinc1	equ	0xFE6
 15938                           postdec1	equ	0xFE5
 15939                           plusw1	equ	0xFE3
 15940                           fsr1h	equ	0xFE2
 15941                           fsr1l	equ	0xFE1
 15942                           indf2	equ	0xFDF
 15943                           postinc2	equ	0xFDE
 15944                           postdec2	equ	0xFDD
 15945                           plusw2	equ	0xFDB
 15946                           fsr2h	equ	0xFDA
 15947                           fsr2l	equ	0xFD9
 15948                           status	equ	0xFD8
 15949                           
 15950 ;; *************** function _rtcc_get_day_decimal *****************
 15951 ;; Defined at:
 15952 ;;		line 187 in file "rtcc.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;		None
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 15957 ;; Return value:  Size  Location     Type
 15958 ;;                  1    wreg      unsigned char 
 15959 ;; Registers used:
 15960 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15961 ;; Tracked objects:
 15962 ;;		On entry : 0/0
 15963 ;;		On exit  : 0/0
 15964 ;;		Unchanged: 0/0
 15965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15969 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15970 ;;Total ram usage:        1 bytes
 15971 ;; Hardware stack levels used:    1
 15972 ;; Hardware stack levels required when called:   11
 15973 ;; This function calls:
 15974 ;;		__rtcc_bdc_to_decimal
 15975 ;;		_rtcc_get_day
 15976 ;; This function is called by:
 15977 ;;		__get_date
 15978 ;;		__get_dateTime
 15979 ;; This function uses a non-reentrant model
 15980 ;;
 15981                           
 15982                           	psect	text72
 15983  012CFA                     __ptext72:
 15984                           	opt stack 0
 15985  012CFA                     _rtcc_get_day_decimal:
 15986                           	opt stack 16
 15987                           
 15988                           ;rtcc.c: 189: uint8_t bcd_day = rtcc_get_day();
 15989                           
 15990                           ;incstack = 0
 15991  012CFA  ECC0  F096         	call	_rtcc_get_day	;wreg free
 15992  012CFE  0100               	movlb	0	; () banked
 15993  012D00  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 15994                           
 15995                           ; BSR set to: 0
 15996                           ;rtcc.c: 190: return _rtcc_bdc_to_decimal(bcd_day);
 15997  012D02  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 15998  012D04  EC42  F095         	call	__rtcc_bdc_to_decimal
 15999  012D08  0012               	return	
 16000  012D0A                     __end_of_rtcc_get_day_decimal:
 16001                           	opt stack 0
 16002                           tblptru	equ	0xFF8
 16003                           tblptrh	equ	0xFF7
 16004                           tblptrl	equ	0xFF6
 16005                           tablat	equ	0xFF5
 16006                           prodh	equ	0xFF4
 16007                           prodl	equ	0xFF3
 16008                           intcon	equ	0xFF2
 16009                           intcon2	equ	0xFF1
 16010                           intcon3	equ	0xFF0
 16011                           postinc0	equ	0xFEE
 16012                           wreg	equ	0xFE8
 16013                           postinc1	equ	0xFE6
 16014                           postdec1	equ	0xFE5
 16015                           plusw1	equ	0xFE3
 16016                           fsr1h	equ	0xFE2
 16017                           fsr1l	equ	0xFE1
 16018                           indf2	equ	0xFDF
 16019                           postinc2	equ	0xFDE
 16020                           postdec2	equ	0xFDD
 16021                           plusw2	equ	0xFDB
 16022                           fsr2h	equ	0xFDA
 16023                           fsr2l	equ	0xFD9
 16024                           status	equ	0xFD8
 16025                           
 16026 ;; *************** function __sector_from_cluster *****************
 16027 ;; Defined at:
 16028 ;;		line 455 in file "fat16.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16031 ;; Auto vars:     Size  Location     Type
 16032 ;;		None
 16033 ;; Return value:  Size  Location     Type
 16034 ;;                  2    0[BANK0 ] unsigned int 
 16035 ;; Registers used:
 16036 ;;		wreg, status,2, status,0
 16037 ;; Tracked objects:
 16038 ;;		On entry : 0/0
 16039 ;;		On exit  : 0/0
 16040 ;;		Unchanged: 0/0
 16041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16046 ;;Total ram usage:        2 bytes
 16047 ;; Hardware stack levels used:    1
 16048 ;; Hardware stack levels required when called:   10
 16049 ;; This function calls:
 16050 ;;		Nothing
 16051 ;; This function is called by:
 16052 ;;		_fat_append_to_file
 16053 ;;		_fat_read_from_file
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	text73
 16058  012D0A                     __ptext73:
 16059                           	opt stack 0
 16060  012D0A                     __sector_from_cluster:
 16061                           	opt stack 18
 16062                           
 16063                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 16064                           
 16065                           ;incstack = 0
 16066  012D0A  0E14               	movlw	20
 16067  012D0C  0100               	movlb	0	; () banked
 16068  012D0E  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 16069  012D10  6F60               	movwf	?__sector_from_cluster& (0+255),b
 16070  012D12  0E00               	movlw	0
 16071  012D14  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16072  012D16  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 16073  012D18  0012               	return	
 16074  012D1A                     __end_of__sector_from_cluster:
 16075                           	opt stack 0
 16076                           tblptru	equ	0xFF8
 16077                           tblptrh	equ	0xFF7
 16078                           tblptrl	equ	0xFF6
 16079                           tablat	equ	0xFF5
 16080                           prodh	equ	0xFF4
 16081                           prodl	equ	0xFF3
 16082                           intcon	equ	0xFF2
 16083                           intcon2	equ	0xFF1
 16084                           intcon3	equ	0xFF0
 16085                           postinc0	equ	0xFEE
 16086                           wreg	equ	0xFE8
 16087                           postinc1	equ	0xFE6
 16088                           postdec1	equ	0xFE5
 16089                           plusw1	equ	0xFE3
 16090                           fsr1h	equ	0xFE2
 16091                           fsr1l	equ	0xFE1
 16092                           indf2	equ	0xFDF
 16093                           postinc2	equ	0xFDE
 16094                           postdec2	equ	0xFDD
 16095                           plusw2	equ	0xFDB
 16096                           fsr2h	equ	0xFDA
 16097                           fsr2l	equ	0xFD9
 16098                           status	equ	0xFD8
 16099                           
 16100 ;; *************** function __root_is_available *****************
 16101 ;; Defined at:
 16102 ;;		line 61 in file "fat16.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;  file_number     1    wreg     unsigned char 
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;  file_number     1   44[BANK0 ] unsigned char 
 16107 ;;  offset          2   42[BANK0 ] unsigned int 
 16108 ;;  root_sector     2   40[BANK0 ] unsigned int 
 16109 ;;  first_byte      1   45[BANK0 ] unsigned char 
 16110 ;; Return value:  Size  Location     Type
 16111 ;;                  1    wreg      unsigned char 
 16112 ;; Registers used:
 16113 ;;		wreg, status,2, status,0, cstack
 16114 ;; Tracked objects:
 16115 ;;		On entry : 0/0
 16116 ;;		On exit  : 0/0
 16117 ;;		Unchanged: 0/0
 16118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16120 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16122 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16123 ;;Total ram usage:        7 bytes
 16124 ;; Hardware stack levels used:    1
 16125 ;; Hardware stack levels required when called:   14
 16126 ;; This function calls:
 16127 ;;		_flash_partial_read
 16128 ;; This function is called by:
 16129 ;;		__get_available_root_entry
 16130 ;;		_fat_append_to_file
 16131 ;;		_fat_delete_file
 16132 ;; This function uses a non-reentrant model
 16133 ;;
 16134                           
 16135                           	psect	text74
 16136  010C58                     __ptext74:
 16137                           	opt stack 0
 16138  010C58                     __root_is_available:
 16139                           	opt stack 13
 16140                           
 16141                           ; BSR set to: 0
 16142                           ;incstack = 0
 16143                           ;__root_is_available@file_number stored from wreg
 16144  010C58  0100               	movlb	0	; () banked
 16145  010C5A  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 16146                           
 16147                           ;fat16.c: 63: uint16_t root_sector;
 16148                           ;fat16.c: 64: uint16_t offset;
 16149                           ;fat16.c: 65: uint8_t first_byte;
 16150                           ;fat16.c: 69: if(file_number>=64)
 16151  010C5C  0E3F               	movlw	63
 16152  010C5E  0100               	movlb	0	; () banked
 16153  010C60  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 16154  010C62  D002               	goto	l2930
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;fat16.c: 70: {
 16158                           ;fat16.c: 72: return 0;
 16159  010C64  0E00               	movlw	0
 16160                           
 16161                           ; BSR set to: 0
 16162  010C66  0012               	return	
 16163  010C68                     l2930:
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;fat16.c: 73: }
 16167                           ;fat16.c: 76: root_sector = (file_number >> 4) + 18;
 16168                           
 16169                           ; BSR set to: 0
 16170  010C68  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16171  010C6C  3B87               	swapf	??__root_is_available& (0+255),f,b
 16172  010C6E  0E0F               	movlw	15
 16173  010C70  1787               	andwf	??__root_is_available& (0+255),f,b
 16174  010C72  0E12               	movlw	18
 16175  010C74  2587               	addwf	??__root_is_available& (0+255),w,b
 16176  010C76  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 16177  010C78  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 16178  010C7A  0E00               	movlw	0
 16179  010C7C  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 16180                           
 16181                           ;fat16.c: 77: offset = (file_number & 0b1111);
 16182  010C7E  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16183  010C82  0E0F               	movlw	15
 16184  010C84  1787               	andwf	??__root_is_available& (0+255),f,b
 16185  010C86  5187               	movf	??__root_is_available& (0+255),w,b
 16186  010C88  6F8A               	movwf	__root_is_available@offset& (0+255),b
 16187  010C8A  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 16188                           
 16189                           ;fat16.c: 78: offset <<= 5;
 16190  010C8C  0E05               	movlw	5
 16191  010C8E                     u10775:
 16192  010C8E  90D8               	bcf	status,0,c
 16193  010C90  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 16194  010C92  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 16195  010C94  2EE8               	decfsz	wreg,f,c
 16196  010C96  D7FB               	goto	u10775
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 16200  010C98  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 16201  010C9C  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 16202  010CA0  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 16203  010CA4  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 16204  010CA8  0E00               	movlw	0
 16205  010CAA  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16206  010CAC  0E01               	movlw	1
 16207  010CAE  6F77               	movwf	flash_partial_read@length& (0+255),b
 16208  010CB0  0E8D               	movlw	low __root_is_available@first_byte
 16209  010CB2  6F79               	movwf	flash_partial_read@data& (0+255),b
 16210  010CB4  0E00               	movlw	high __root_is_available@first_byte
 16211  010CB6  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16212  010CB8  EC5F  F087         	call	_flash_partial_read	;wreg free
 16213                           
 16214                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 16215  010CBC  0100               	movlb	0	; () banked
 16216  010CBE  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 16217  010CC0  B4D8               	btfsc	status,2,c
 16218  010CC2  D004               	goto	u10790
 16219                           
 16220                           ; BSR set to: 0
 16221  010CC4  0EE5               	movlw	229
 16222  010CC6  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 16223  010CC8  A4D8               	btfss	status,2,c
 16224  010CCA  D002               	goto	l2932
 16225  010CCC                     u10790:
 16226                           
 16227                           ; BSR set to: 0
 16228                           ;fat16.c: 85: {
 16229                           ;fat16.c: 87: return 1;
 16230                           
 16231                           ; BSR set to: 0
 16232  010CCC  0E01               	movlw	1
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;fat16.c: 88: }
 16236                           
 16237                           ; BSR set to: 0
 16238  010CCE  0012               	return	
 16239  010CD0                     l2932:
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;fat16.c: 89: else
 16243                           ;fat16.c: 90: {
 16244                           ;fat16.c: 92: return 0;
 16245                           
 16246                           ; BSR set to: 0
 16247  010CD0  0E00               	movlw	0
 16248                           
 16249                           ; BSR set to: 0
 16250  010CD2  0012               	return	
 16251  010CD4                     __end_of__root_is_available:
 16252                           	opt stack 0
 16253                           tblptru	equ	0xFF8
 16254                           tblptrh	equ	0xFF7
 16255                           tblptrl	equ	0xFF6
 16256                           tablat	equ	0xFF5
 16257                           prodh	equ	0xFF4
 16258                           prodl	equ	0xFF3
 16259                           intcon	equ	0xFF2
 16260                           intcon2	equ	0xFF1
 16261                           intcon3	equ	0xFF0
 16262                           postinc0	equ	0xFEE
 16263                           wreg	equ	0xFE8
 16264                           postinc1	equ	0xFE6
 16265                           postdec1	equ	0xFE5
 16266                           plusw1	equ	0xFE3
 16267                           fsr1h	equ	0xFE2
 16268                           fsr1l	equ	0xFE1
 16269                           indf2	equ	0xFDF
 16270                           postinc2	equ	0xFDE
 16271                           postdec2	equ	0xFDD
 16272                           plusw2	equ	0xFDB
 16273                           fsr2h	equ	0xFDA
 16274                           fsr2l	equ	0xFD9
 16275                           status	equ	0xFD8
 16276                           
 16277 ;; *************** function __read_root *****************
 16278 ;; Defined at:
 16279 ;;		line 194 in file "fat16.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;  slot            1    wreg     unsigned char 
 16282 ;;  data            2   39[BANK0 ] PTR struct .
 16283 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 16284 ;; Auto vars:     Size  Location     Type
 16285 ;;  slot            1   46[BANK0 ] unsigned char 
 16286 ;;  offset          2   44[BANK0 ] unsigned int 
 16287 ;;  root_sector     2   42[BANK0 ] unsigned int 
 16288 ;; Return value:  Size  Location     Type
 16289 ;;                  1    wreg      void 
 16290 ;; Registers used:
 16291 ;;		wreg, status,2, status,0, cstack
 16292 ;; Tracked objects:
 16293 ;;		On entry : 0/0
 16294 ;;		On exit  : 0/0
 16295 ;;		Unchanged: 0/0
 16296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16298 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16300 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16301 ;;Total ram usage:        8 bytes
 16302 ;; Hardware stack levels used:    1
 16303 ;; Hardware stack levels required when called:   14
 16304 ;; This function calls:
 16305 ;;		_flash_partial_read
 16306 ;; This function is called by:
 16307 ;;		_fat_append_to_file
 16308 ;;		_fat_rename_file
 16309 ;;		_fat_read_from_file
 16310 ;; This function uses a non-reentrant model
 16311 ;;
 16312                           
 16313                           	psect	text75
 16314  01174E                     __ptext75:
 16315                           	opt stack 0
 16316  01174E                     __read_root:
 16317                           	opt stack 14
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;incstack = 0
 16321                           ;__read_root@slot stored from wreg
 16322  01174E  0100               	movlb	0	; () banked
 16323  011750  6F8E               	movwf	__read_root@slot& (0+255),b
 16324                           
 16325                           ;fat16.c: 196: uint16_t root_sector;
 16326                           ;fat16.c: 197: uint16_t offset;
 16327                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 16328  011752  C08E  F089         	movff	__read_root@slot,??__read_root
 16329  011756  0100               	movlb	0	; () banked
 16330  011758  3B89               	swapf	??__read_root& (0+255),f,b
 16331  01175A  0E0F               	movlw	15
 16332  01175C  1789               	andwf	??__read_root& (0+255),f,b
 16333  01175E  0E12               	movlw	18
 16334  011760  2589               	addwf	??__read_root& (0+255),w,b
 16335  011762  6F8A               	movwf	__read_root@root_sector& (0+255),b
 16336  011764  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 16337  011766  0E00               	movlw	0
 16338  011768  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 16339                           
 16340                           ;fat16.c: 199: offset = (slot & 0b1111);
 16341  01176A  C08E  F089         	movff	__read_root@slot,??__read_root
 16342  01176E  0E0F               	movlw	15
 16343  011770  1789               	andwf	??__read_root& (0+255),f,b
 16344  011772  5189               	movf	??__read_root& (0+255),w,b
 16345  011774  6F8C               	movwf	__read_root@offset& (0+255),b
 16346  011776  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 16347                           
 16348                           ;fat16.c: 200: offset <<= 5;
 16349  011778  0E05               	movlw	5
 16350  01177A                     u11655:
 16351  01177A  90D8               	bcf	status,0,c
 16352  01177C  378C               	rlcf	__read_root@offset& (0+255),f,b
 16353  01177E  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 16354  011780  2EE8               	decfsz	wreg,f,c
 16355  011782  D7FB               	goto	u11655
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 16359  011784  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 16360  011788  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 16361  01178C  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 16362  011790  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 16363  011794  0E00               	movlw	0
 16364  011796  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16365  011798  0E20               	movlw	32
 16366  01179A  6F77               	movwf	flash_partial_read@length& (0+255),b
 16367  01179C  C087  F079         	movff	__read_root@data,flash_partial_read@data
 16368  0117A0  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 16369  0117A4  EC5F  F087         	call	_flash_partial_read	;wreg free
 16370  0117A8  0012               	return		;funcret
 16371  0117AA                     __end_of__read_root:
 16372                           	opt stack 0
 16373                           tblptru	equ	0xFF8
 16374                           tblptrh	equ	0xFF7
 16375                           tblptrl	equ	0xFF6
 16376                           tablat	equ	0xFF5
 16377                           prodh	equ	0xFF4
 16378                           prodl	equ	0xFF3
 16379                           intcon	equ	0xFF2
 16380                           intcon2	equ	0xFF1
 16381                           intcon3	equ	0xFF0
 16382                           postinc0	equ	0xFEE
 16383                           wreg	equ	0xFE8
 16384                           postinc1	equ	0xFE6
 16385                           postdec1	equ	0xFE5
 16386                           plusw1	equ	0xFE3
 16387                           fsr1h	equ	0xFE2
 16388                           fsr1l	equ	0xFE1
 16389                           indf2	equ	0xFDF
 16390                           postinc2	equ	0xFDE
 16391                           postdec2	equ	0xFDD
 16392                           plusw2	equ	0xFDB
 16393                           fsr2h	equ	0xFDA
 16394                           fsr2l	equ	0xFD9
 16395                           status	equ	0xFD8
 16396                           
 16397 ;; *************** function __read_fat *****************
 16398 ;; Defined at:
 16399 ;;		line 171 in file "fat16.c"
 16400 ;; Parameters:    Size  Location     Type
 16401 ;;  cluster         2   39[BANK0 ] unsigned int 
 16402 ;; Auto vars:     Size  Location     Type
 16403 ;;  value           2   45[BANK0 ] unsigned int 
 16404 ;;  offset          2   43[BANK0 ] unsigned int 
 16405 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16406 ;; Return value:  Size  Location     Type
 16407 ;;                  2   39[BANK0 ] unsigned int 
 16408 ;; Registers used:
 16409 ;;		wreg, status,2, status,0, cstack
 16410 ;; Tracked objects:
 16411 ;;		On entry : 0/0
 16412 ;;		On exit  : 0/0
 16413 ;;		Unchanged: 0/0
 16414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16416 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16419 ;;Total ram usage:        8 bytes
 16420 ;; Hardware stack levels used:    1
 16421 ;; Hardware stack levels required when called:   14
 16422 ;; This function calls:
 16423 ;;		_flash_partial_read
 16424 ;; This function is called by:
 16425 ;;		_fat_append_to_file
 16426 ;;		_fat_delete_file
 16427 ;;		_fat_read_from_file
 16428 ;; This function uses a non-reentrant model
 16429 ;;
 16430                           
 16431                           	psect	text76
 16432  011F42                     __ptext76:
 16433                           	opt stack 0
 16434  011F42                     __read_fat:
 16435                           	opt stack 14
 16436                           
 16437                           ;fat16.c: 173: uint16_t fat_sector;
 16438                           ;fat16.c: 174: uint16_t offset;
 16439                           ;fat16.c: 175: uint16_t value;
 16440                           ;fat16.c: 176: fat_sector = cluster>>8;
 16441                           
 16442                           ;incstack = 0
 16443  011F42  0100               	movlb	0	; () banked
 16444  011F44  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 16445  011F46  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 16446  011F48  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 16447                           
 16448                           ; BSR set to: 0
 16449                           ;fat16.c: 177: fat_sector += 2;
 16450  011F4A  0E02               	movlw	2
 16451  011F4C  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 16452  011F4E  0E00               	movlw	0
 16453  011F50  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;fat16.c: 178: offset = cluster & 0xFF;
 16457  011F52  5187               	movf	__read_fat@cluster& (0+255),w,b
 16458  011F54  6F8B               	movwf	__read_fat@offset& (0+255),b
 16459  011F56  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;fat16.c: 179: offset <<= 1;
 16463  011F58  90D8               	bcf	status,0,c
 16464  011F5A  378B               	rlcf	__read_fat@offset& (0+255),f,b
 16465  011F5C  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 16466                           
 16467                           ; BSR set to: 0
 16468                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 16469  011F5E  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 16470  011F62  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 16471  011F66  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 16472  011F6A  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16473  011F6E  0E00               	movlw	0
 16474  011F70  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16475  011F72  0E02               	movlw	2
 16476  011F74  6F77               	movwf	flash_partial_read@length& (0+255),b
 16477  011F76  0E8D               	movlw	low __read_fat@value
 16478  011F78  6F79               	movwf	flash_partial_read@data& (0+255),b
 16479  011F7A  0E00               	movlw	high __read_fat@value
 16480  011F7C  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16481  011F7E  EC5F  F087         	call	_flash_partial_read	;wreg free
 16482                           
 16483                           ;fat16.c: 181: return value;
 16484  011F82  C08D  F087         	movff	__read_fat@value,?__read_fat
 16485  011F86  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 16486  011F8A  0012               	return	
 16487  011F8C                     __end_of__read_fat:
 16488                           	opt stack 0
 16489                           tblptru	equ	0xFF8
 16490                           tblptrh	equ	0xFF7
 16491                           tblptrl	equ	0xFF6
 16492                           tablat	equ	0xFF5
 16493                           prodh	equ	0xFF4
 16494                           prodl	equ	0xFF3
 16495                           intcon	equ	0xFF2
 16496                           intcon2	equ	0xFF1
 16497                           intcon3	equ	0xFF0
 16498                           postinc0	equ	0xFEE
 16499                           wreg	equ	0xFE8
 16500                           postinc1	equ	0xFE6
 16501                           postdec1	equ	0xFE5
 16502                           plusw1	equ	0xFE3
 16503                           fsr1h	equ	0xFE2
 16504                           fsr1l	equ	0xFE1
 16505                           indf2	equ	0xFDF
 16506                           postinc2	equ	0xFDE
 16507                           postdec2	equ	0xFDD
 16508                           plusw2	equ	0xFDB
 16509                           fsr2h	equ	0xFDA
 16510                           fsr2l	equ	0xFD9
 16511                           status	equ	0xFD8
 16512                           
 16513 ;; *************** function __get_empty_cluster *****************
 16514 ;; Defined at:
 16515 ;;		line 109 in file "fat16.c"
 16516 ;; Parameters:    Size  Location     Type
 16517 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 16518 ;; Auto vars:     Size  Location     Type
 16519 ;;  cluster         2   47[BANK0 ] unsigned int 
 16520 ;;  value           2   45[BANK0 ] unsigned int 
 16521 ;;  offset          2   43[BANK0 ] unsigned int 
 16522 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16523 ;; Return value:  Size  Location     Type
 16524 ;;                  2   39[BANK0 ] unsigned int 
 16525 ;; Registers used:
 16526 ;;		wreg, status,2, status,0, cstack
 16527 ;; Tracked objects:
 16528 ;;		On entry : 0/0
 16529 ;;		On exit  : 0/0
 16530 ;;		Unchanged: 0/0
 16531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16533 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16535 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16536 ;;Total ram usage:       10 bytes
 16537 ;; Hardware stack levels used:    1
 16538 ;; Hardware stack levels required when called:   14
 16539 ;; This function calls:
 16540 ;;		_flash_partial_read
 16541 ;; This function is called by:
 16542 ;;		_fat_create_file
 16543 ;;		_fat_append_to_file
 16544 ;; This function uses a non-reentrant model
 16545 ;;
 16546                           
 16547                           	psect	text77
 16548  010D50                     __ptext77:
 16549                           	opt stack 0
 16550  010D50                     __get_empty_cluster:
 16551                           	opt stack 14
 16552                           
 16553                           ;fat16.c: 111: uint16_t cluster;
 16554                           ;fat16.c: 112: uint16_t fat_sector;
 16555                           ;fat16.c: 113: uint16_t offset;
 16556                           ;fat16.c: 114: uint16_t value;
 16557                           ;fat16.c: 117: for(cluster=first_cluster; cluster<(4074+2); ++cluster)
 16558                           
 16559                           ;incstack = 0
 16560  010D50  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 16561  010D54  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 16562  010D58  0EEC               	movlw	236
 16563  010D5A  0100               	movlb	0	; () banked
 16564  010D5C  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 16565  010D5E  0E0F               	movlw	15
 16566  010D60  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16567  010D62  B0D8               	btfsc	status,0,c
 16568  010D64  D02D               	goto	u11590
 16569                           
 16570                           ; BSR set to: 0
 16571                           ;fat16.c: 118: {
 16572                           ;fat16.c: 119: fat_sector = cluster>>8;
 16573                           
 16574                           ; BSR set to: 0
 16575                           
 16576                           ; BSR set to: 0
 16577  010D66  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16578  010D68  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 16579  010D6A  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 16580                           
 16581                           ; BSR set to: 0
 16582                           ;fat16.c: 120: fat_sector += 2;
 16583  010D6C  0E02               	movlw	2
 16584  010D6E  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 16585  010D70  0E00               	movlw	0
 16586  010D72  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;fat16.c: 121: offset = cluster & 0xFF;
 16590  010D74  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 16591  010D76  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 16592  010D78  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;fat16.c: 122: offset <<= 1;
 16596  010D7A  90D8               	bcf	status,0,c
 16597  010D7C  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 16598  010D7E  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 16599                           
 16600                           ; BSR set to: 0
 16601                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 16602  010D80  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 16603  010D84  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 16604  010D88  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 16605  010D8C  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 16606  010D90  0E00               	movlw	0
 16607  010D92  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16608  010D94  0E02               	movlw	2
 16609  010D96  6F77               	movwf	flash_partial_read@length& (0+255),b
 16610  010D98  0E8D               	movlw	low __get_empty_cluster@value
 16611  010D9A  6F79               	movwf	flash_partial_read@data& (0+255),b
 16612  010D9C  0E00               	movlw	high __get_empty_cluster@value
 16613  010D9E  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16614  010DA0  EC5F  F087         	call	_flash_partial_read	;wreg free
 16615                           
 16616                           ;fat16.c: 124: if(value==0x0000)
 16617  010DA4  0100               	movlb	0	; () banked
 16618  010DA6  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 16619  010DA8  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 16620  010DAA  A4D8               	btfss	status,2,c
 16621  010DAC  D005               	goto	l2946
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;fat16.c: 125: {
 16625                           ;fat16.c: 126: return cluster;
 16626  010DAE  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 16627  010DB2  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 16628  010DB6  0012               	return	
 16629  010DB8                     l2946:
 16630                           
 16631                           ; BSR set to: 0
 16632                           
 16633                           ; BSR set to: 0
 16634  010DB8  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 16635  010DBA  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 16636                           
 16637                           ; BSR set to: 0
 16638  010DBC  0EEC               	movlw	236
 16639  010DBE  D7CE               	goto	L10
 16640  010DC0                     u11590:
 16641                           
 16642                           ; BSR set to: 0
 16643                           ;fat16.c: 127: }
 16644                           ;fat16.c: 128: }
 16645                           ;fat16.c: 129: return 0x0000;
 16646                           
 16647                           ; BSR set to: 0
 16648  010DC0  0E00               	movlw	0
 16649  010DC2  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 16650  010DC4  0E00               	movlw	0
 16651  010DC6  6F87               	movwf	?__get_empty_cluster& (0+255),b
 16652  010DC8  0012               	return	
 16653  010DCA                     __end_of__get_empty_cluster:
 16654                           	opt stack 0
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           intcon2	equ	0xFF1
 16663                           intcon3	equ	0xFF0
 16664                           postinc0	equ	0xFEE
 16665                           wreg	equ	0xFE8
 16666                           postinc1	equ	0xFE6
 16667                           postdec1	equ	0xFE5
 16668                           plusw1	equ	0xFE3
 16669                           fsr1h	equ	0xFE2
 16670                           fsr1l	equ	0xFE1
 16671                           indf2	equ	0xFDF
 16672                           postinc2	equ	0xFDE
 16673                           postdec2	equ	0xFDD
 16674                           plusw2	equ	0xFDB
 16675                           fsr2h	equ	0xFDA
 16676                           fsr2l	equ	0xFD9
 16677                           status	equ	0xFD8
 16678                           
 16679 ;; *************** function _log_get_number_of_samples *****************
 16680 ;; Defined at:
 16681 ;;		line 169 in file "log.c"
 16682 ;; Parameters:    Size  Location     Type
 16683 ;;		None
 16684 ;; Auto vars:     Size  Location     Type
 16685 ;;		None
 16686 ;; Return value:  Size  Location     Type
 16687 ;;                  2    0[BANK0 ] unsigned int 
 16688 ;; Registers used:
 16689 ;;		None
 16690 ;; Tracked objects:
 16691 ;;		On entry : 0/0
 16692 ;;		On exit  : 0/0
 16693 ;;		Unchanged: 0/0
 16694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16699 ;;Total ram usage:        2 bytes
 16700 ;; Hardware stack levels used:    1
 16701 ;; Hardware stack levels required when called:   10
 16702 ;; This function calls:
 16703 ;;		Nothing
 16704 ;; This function is called by:
 16705 ;;		_main
 16706 ;; This function uses a non-reentrant model
 16707 ;;
 16708                           
 16709                           	psect	text78
 16710  012DB2                     __ptext78:
 16711                           	opt stack 0
 16712  012DB2                     _log_get_number_of_samples:
 16713                           	opt stack 20
 16714                           
 16715                           ;log.c: 171: return averageCount;
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;incstack = 0
 16719  012DB2  C041  F060         	movff	_averageCount,?_log_get_number_of_samples
 16720  012DB6  C042  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 16721  012DBA  0012               	return		;funcret
 16722  012DBC                     __end_of_log_get_number_of_samples:
 16723                           	opt stack 0
 16724                           tblptru	equ	0xFF8
 16725                           tblptrh	equ	0xFF7
 16726                           tblptrl	equ	0xFF6
 16727                           tablat	equ	0xFF5
 16728                           prodh	equ	0xFF4
 16729                           prodl	equ	0xFF3
 16730                           intcon	equ	0xFF2
 16731                           intcon2	equ	0xFF1
 16732                           intcon3	equ	0xFF0
 16733                           postinc0	equ	0xFEE
 16734                           wreg	equ	0xFE8
 16735                           postinc1	equ	0xFE6
 16736                           postdec1	equ	0xFE5
 16737                           plusw1	equ	0xFE3
 16738                           fsr1h	equ	0xFE2
 16739                           fsr1l	equ	0xFE1
 16740                           indf2	equ	0xFDF
 16741                           postinc2	equ	0xFDE
 16742                           postdec2	equ	0xFDD
 16743                           plusw2	equ	0xFDB
 16744                           fsr2h	equ	0xFDA
 16745                           fsr2l	equ	0xFD9
 16746                           status	equ	0xFD8
 16747                           
 16748 ;; *************** function _log_collect_data *****************
 16749 ;; Defined at:
 16750 ;;		line 114 in file "log.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;		None
 16753 ;; Auto vars:     Size  Location     Type
 16754 ;;  temp            2   24[BANK0 ] unsigned int 
 16755 ;; Return value:  Size  Location     Type
 16756 ;;                  1    wreg      void 
 16757 ;; Registers used:
 16758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16767 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16768 ;;Total ram usage:        6 bytes
 16769 ;; Hardware stack levels used:    1
 16770 ;; Hardware stack levels required when called:   12
 16771 ;; This function calls:
 16772 ;;		__get_input_power
 16773 ;;		__get_output_power
 16774 ;;		_buck_get_mode
 16775 ;;		_rtcc_get_seconds_decimal
 16776 ;;		_system_output_is_on
 16777 ;; This function is called by:
 16778 ;;		_main
 16779 ;; This function uses a non-reentrant model
 16780 ;;
 16781                           
 16782                           	psect	text79
 16783  00BD64                     __ptext79:
 16784                           	opt stack 0
 16785  00BD64                     _log_collect_data:
 16786                           	opt stack 18
 16787                           
 16788                           ;log.c: 116: uint16_t temp;
 16789                           ;log.c: 119: temp = rtcc_get_seconds_decimal();
 16790                           
 16791                           ;incstack = 0
 16792  00BD64  EC8D  F096         	call	_rtcc_get_seconds_decimal	;wreg free
 16793  00BD68  0100               	movlb	0	; () banked
 16794  00BD6A  6F74               	movwf	??_log_collect_data& (0+255),b
 16795  00BD6C  5174               	movf	??_log_collect_data& (0+255),w,b
 16796  00BD6E  6F78               	movwf	log_collect_data@temp& (0+255),b
 16797  00BD70  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;log.c: 120: if(lastSecond==temp)
 16801  00BD72  0101               	movlb	1	; () banked
 16802  00BD74  51EB               	movf	_lastSecond& (0+255),w,b
 16803  00BD76  0100               	movlb	0	; () banked
 16804  00BD78  6F74               	movwf	??_log_collect_data& (0+255),b
 16805  00BD7A  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 16806  00BD7C  5178               	movf	log_collect_data@temp& (0+255),w,b
 16807  00BD7E  1974               	xorwf	??_log_collect_data& (0+255),w,b
 16808  00BD80  E104               	bnz	l3280
 16809  00BD82  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 16810  00BD84  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 16811  00BD86  B4D8               	btfsc	status,2,c
 16812  00BD88  0012               	return	
 16813  00BD8A                     l3280:
 16814                           
 16815                           ; BSR set to: 0
 16816                           ;log.c: 123: }
 16817                           ;log.c: 126: lastSecond = (uint8_t) temp;
 16818  00BD8A  C078  F1EB         	movff	log_collect_data@temp,_lastSecond
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 16822  00BD8E  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 16823  00BD92  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 16824  00BD96  0E00               	movlw	0
 16825  00BD98  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16826  00BD9A  0EFF               	movlw	255
 16827  00BD9C  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16828  00BD9E  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16829  00BDA0  5174               	movf	??_log_collect_data& (0+255),w,b
 16830  00BDA2  0102               	movlb	2	; () banked
 16831  00BDA4  279A               	addwf	_inputVoltageSum& (0+255),f,b
 16832  00BDA6  0100               	movlb	0	; () banked
 16833  00BDA8  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16834  00BDAA  0102               	movlb	2	; () banked
 16835  00BDAC  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 16836  00BDAE  0100               	movlb	0	; () banked
 16837  00BDB0  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16838  00BDB2  0102               	movlb	2	; () banked
 16839  00BDB4  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 16840  00BDB6  0100               	movlb	0	; () banked
 16841  00BDB8  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16842  00BDBA  0102               	movlb	2	; () banked
 16843  00BDBC  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 16844                           
 16845                           ;log.c: 130: inputCurrentSum += os.input_current;
 16846  00BDBE  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 16847  00BDC2  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 16848  00BDC6  0E00               	movlw	0
 16849  00BDC8  0100               	movlb	0	; () banked
 16850  00BDCA  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16851  00BDCC  0EFF               	movlw	255
 16852  00BDCE  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16853  00BDD0  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16854  00BDD2  5174               	movf	??_log_collect_data& (0+255),w,b
 16855  00BDD4  0102               	movlb	2	; () banked
 16856  00BDD6  2796               	addwf	_inputCurrentSum& (0+255),f,b
 16857  00BDD8  0100               	movlb	0	; () banked
 16858  00BDDA  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16859  00BDDC  0102               	movlb	2	; () banked
 16860  00BDDE  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 16861  00BDE0  0100               	movlb	0	; () banked
 16862  00BDE2  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16863  00BDE4  0102               	movlb	2	; () banked
 16864  00BDE6  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 16865  00BDE8  0100               	movlb	0	; () banked
 16866  00BDEA  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16867  00BDEC  0102               	movlb	2	; () banked
 16868  00BDEE  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 16869                           
 16870                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 16871  00BDF0  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 16872  00BDF4  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 16873  00BDF8  0E00               	movlw	0
 16874  00BDFA  0100               	movlb	0	; () banked
 16875  00BDFC  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16876  00BDFE  0EFF               	movlw	255
 16877  00BE00  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16878  00BE02  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16879  00BE04  5174               	movf	??_log_collect_data& (0+255),w,b
 16880  00BE06  0102               	movlb	2	; () banked
 16881  00BE08  2792               	addwf	_outputVoltageSum& (0+255),f,b
 16882  00BE0A  0100               	movlb	0	; () banked
 16883  00BE0C  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16884  00BE0E  0102               	movlb	2	; () banked
 16885  00BE10  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 16886  00BE12  0100               	movlb	0	; () banked
 16887  00BE14  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16888  00BE16  0102               	movlb	2	; () banked
 16889  00BE18  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 16890  00BE1A  0100               	movlb	0	; () banked
 16891  00BE1C  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16892  00BE1E  0102               	movlb	2	; () banked
 16893  00BE20  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 16894                           
 16895                           ;log.c: 132: outputCurrentSum += os.output_current;
 16896  00BE22  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 16897  00BE26  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 16898  00BE2A  0E00               	movlw	0
 16899  00BE2C  0100               	movlb	0	; () banked
 16900  00BE2E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16901  00BE30  0EFF               	movlw	255
 16902  00BE32  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16903  00BE34  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16904  00BE36  5174               	movf	??_log_collect_data& (0+255),w,b
 16905  00BE38  0102               	movlb	2	; () banked
 16906  00BE3A  278E               	addwf	_outputCurrentSum& (0+255),f,b
 16907  00BE3C  0100               	movlb	0	; () banked
 16908  00BE3E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16909  00BE40  0102               	movlb	2	; () banked
 16910  00BE42  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 16911  00BE44  0100               	movlb	0	; () banked
 16912  00BE46  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16913  00BE48  0102               	movlb	2	; () banked
 16914  00BE4A  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 16915  00BE4C  0100               	movlb	0	; () banked
 16916  00BE4E  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16917  00BE50  0102               	movlb	2	; () banked
 16918  00BE52  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 16919                           
 16920                           ; BSR set to: 2
 16921                           ;log.c: 133: temp = _get_input_power();
 16922  00BE54  ECE9  F084         	call	__get_input_power	;wreg free
 16923  00BE58  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 16924  00BE5C  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 16925                           
 16926                           ;log.c: 134: inputPowerSum += temp>>1;
 16927  00BE60  90D8               	bcf	status,0,c
 16928  00BE62  0100               	movlb	0	; () banked
 16929  00BE64  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 16930  00BE66  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 16931  00BE68  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 16932  00BE6A  6F74               	movwf	??_log_collect_data& (0+255),b
 16933  00BE6C  5174               	movf	??_log_collect_data& (0+255),w,b
 16934  00BE6E  0102               	movlb	2	; () banked
 16935  00BE70  278A               	addwf	_inputPowerSum& (0+255),f,b
 16936  00BE72  0100               	movlb	0	; () banked
 16937  00BE74  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16938  00BE76  0102               	movlb	2	; () banked
 16939  00BE78  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 16940  00BE7A  0E00               	movlw	0
 16941  00BE7C  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 16942  00BE7E  0E00               	movlw	0
 16943  00BE80  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 16944                           
 16945                           ; BSR set to: 2
 16946                           ;log.c: 135: inputCapacitySum += temp;
 16947  00BE82  0100               	movlb	0	; () banked
 16948  00BE84  5178               	movf	log_collect_data@temp& (0+255),w,b
 16949  00BE86  0102               	movlb	2	; () banked
 16950  00BE88  2782               	addwf	_inputCapacitySum& (0+255),f,b
 16951  00BE8A  0100               	movlb	0	; () banked
 16952  00BE8C  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 16953  00BE8E  0102               	movlb	2	; () banked
 16954  00BE90  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 16955  00BE92  0E00               	movlw	0
 16956  00BE94  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 16957  00BE96  0E00               	movlw	0
 16958  00BE98  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 16959                           
 16960                           ; BSR set to: 2
 16961                           ;log.c: 136: temp = _get_output_power();
 16962  00BE9A  ECA8  F084         	call	__get_output_power	;wreg free
 16963  00BE9E  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 16964  00BEA2  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 16965                           
 16966                           ;log.c: 137: outputPowerSum += temp>>1;
 16967  00BEA6  90D8               	bcf	status,0,c
 16968  00BEA8  0100               	movlb	0	; () banked
 16969  00BEAA  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 16970  00BEAC  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 16971  00BEAE  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 16972  00BEB0  6F74               	movwf	??_log_collect_data& (0+255),b
 16973  00BEB2  5174               	movf	??_log_collect_data& (0+255),w,b
 16974  00BEB4  0102               	movlb	2	; () banked
 16975  00BEB6  2786               	addwf	_outputPowerSum& (0+255),f,b
 16976  00BEB8  0100               	movlb	0	; () banked
 16977  00BEBA  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16978  00BEBC  0102               	movlb	2	; () banked
 16979  00BEBE  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 16980  00BEC0  0E00               	movlw	0
 16981  00BEC2  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 16982  00BEC4  0E00               	movlw	0
 16983  00BEC6  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 16984                           
 16985                           ; BSR set to: 2
 16986                           ;log.c: 138: outputCapacitySum += temp;
 16987  00BEC8  0100               	movlb	0	; () banked
 16988  00BECA  5178               	movf	log_collect_data@temp& (0+255),w,b
 16989  00BECC  0102               	movlb	2	; () banked
 16990  00BECE  277E               	addwf	_outputCapacitySum& (0+255),f,b
 16991  00BED0  0100               	movlb	0	; () banked
 16992  00BED2  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 16993  00BED4  0102               	movlb	2	; () banked
 16994  00BED6  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 16995  00BED8  0E00               	movlw	0
 16996  00BEDA  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 16997  00BEDC  0E00               	movlw	0
 16998  00BEDE  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 16999                           
 17000                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 17001  00BEE0  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 17002  00BEE4  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 17003  00BEE8  0E00               	movlw	0
 17004  00BEEA  0100               	movlb	0	; () banked
 17005  00BEEC  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17006  00BEEE  0EFF               	movlw	255
 17007  00BEF0  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17008  00BEF2  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17009  00BEF4  5174               	movf	??_log_collect_data& (0+255),w,b
 17010  00BEF6  0102               	movlb	2	; () banked
 17011  00BEF8  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 17012  00BEFA  0100               	movlb	0	; () banked
 17013  00BEFC  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17014  00BEFE  0102               	movlb	2	; () banked
 17015  00BF00  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 17016  00BF02  0100               	movlb	0	; () banked
 17017  00BF04  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17018  00BF06  0102               	movlb	2	; () banked
 17019  00BF08  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 17020  00BF0A  0100               	movlb	0	; () banked
 17021  00BF0C  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17022  00BF0E  0102               	movlb	2	; () banked
 17023  00BF10  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 17024                           
 17025                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 17026  00BF12  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 17027  00BF16  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 17028  00BF1A  0E00               	movlw	0
 17029  00BF1C  0100               	movlb	0	; () banked
 17030  00BF1E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17031  00BF20  0EFF               	movlw	255
 17032  00BF22  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17033  00BF24  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17034  00BF26  5174               	movf	??_log_collect_data& (0+255),w,b
 17035  00BF28  0102               	movlb	2	; () banked
 17036  00BF2A  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 17037  00BF2C  0100               	movlb	0	; () banked
 17038  00BF2E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17039  00BF30  0102               	movlb	2	; () banked
 17040  00BF32  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 17041  00BF34  0100               	movlb	0	; () banked
 17042  00BF36  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17043  00BF38  0102               	movlb	2	; () banked
 17044  00BF3A  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 17045  00BF3C  0100               	movlb	0	; () banked
 17046  00BF3E  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17047  00BF40  0102               	movlb	2	; () banked
 17048  00BF42  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 17049                           
 17050                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 17051  00BF44  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 17052  00BF48  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 17053  00BF4C  0E00               	movlw	0
 17054  00BF4E  0100               	movlb	0	; () banked
 17055  00BF50  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17056  00BF52  0EFF               	movlw	255
 17057  00BF54  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17058  00BF56  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17059  00BF58  5174               	movf	??_log_collect_data& (0+255),w,b
 17060  00BF5A  0102               	movlb	2	; () banked
 17061  00BF5C  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 17062  00BF5E  0100               	movlb	0	; () banked
 17063  00BF60  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17064  00BF62  0102               	movlb	2	; () banked
 17065  00BF64  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 17066  00BF66  0100               	movlb	0	; () banked
 17067  00BF68  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17068  00BF6A  0102               	movlb	2	; () banked
 17069  00BF6C  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 17070  00BF6E  0100               	movlb	0	; () banked
 17071  00BF70  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17072  00BF72  0102               	movlb	2	; () banked
 17073  00BF74  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 17074                           
 17075                           ; BSR set to: 2
 17076                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 17077  00BF76  EC08  F097         	call	_buck_get_mode	;wreg free
 17078  00BF7A  0100               	movlb	0	; () banked
 17079  00BF7C  6F74               	movwf	??_log_collect_data& (0+255),b
 17080  00BF7E  0E7F               	movlw	127
 17081  00BF80  1774               	andwf	??_log_collect_data& (0+255),f,b
 17082  00BF82  B4D8               	btfsc	status,2,c
 17083  00BF84  D003               	goto	l3282
 17084                           
 17085                           ; BSR set to: 0
 17086                           ;log.c: 143: {
 17087                           ;log.c: 144: ++chargerOnTime;
 17088  00BF86  0102               	movlb	2	; () banked
 17089  00BF88  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 17090  00BF8A  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 17091  00BF8C                     l3282:
 17092                           
 17093                           ;log.c: 145: }
 17094                           ;log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 17095                           
 17096                           ; BSR set to: 2
 17097  00BF8C  0102               	movlb	2	; () banked
 17098  00BF8E  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 17099  00BF90  A4D8               	btfss	status,2,c
 17100  00BF92  D002               	goto	l3283
 17101                           
 17102                           ; BSR set to: 2
 17103                           ;log.c: 147: {
 17104                           ;log.c: 148: ++lowPowerTime;
 17105  00BF94  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 17106  00BF96  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 17107  00BF98                     l3283:
 17108                           
 17109                           ; BSR set to: 2
 17110                           ;log.c: 149: }
 17111                           ;log.c: 150: if(system_output_is_on(OUTPUT_1))
 17112                           
 17113                           ; BSR set to: 2
 17114  00BF98  0E01               	movlw	1
 17115  00BF9A  EC88  F095         	call	_system_output_is_on
 17116  00BF9E  0900               	iorlw	0
 17117  00BFA0  B4D8               	btfsc	status,2,c
 17118  00BFA2  D002               	goto	l3284
 17119                           
 17120                           ;log.c: 151: status |= 0b10000000;
 17121  00BFA4  0101               	movlb	1	; () banked
 17122  00BFA6  8FEC               	bsf	_status& (0+255),7,b
 17123  00BFA8                     l3284:
 17124                           
 17125                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 17126                           
 17127                           ; BSR set to: 1
 17128  00BFA8  0E02               	movlw	2
 17129  00BFAA  EC88  F095         	call	_system_output_is_on
 17130  00BFAE  0900               	iorlw	0
 17131  00BFB0  B4D8               	btfsc	status,2,c
 17132  00BFB2  D002               	goto	l3285
 17133                           
 17134                           ;log.c: 153: status |= 0b01000000;
 17135  00BFB4  0101               	movlb	1	; () banked
 17136  00BFB6  8DEC               	bsf	_status& (0+255),6,b
 17137  00BFB8                     l3285:
 17138                           
 17139                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 17140                           
 17141                           ; BSR set to: 1
 17142  00BFB8  0E04               	movlw	4
 17143  00BFBA  EC88  F095         	call	_system_output_is_on
 17144  00BFBE  0900               	iorlw	0
 17145  00BFC0  B4D8               	btfsc	status,2,c
 17146  00BFC2  D002               	goto	l3286
 17147                           
 17148                           ;log.c: 155: status |= 0b00100000;
 17149  00BFC4  0101               	movlb	1	; () banked
 17150  00BFC6  8BEC               	bsf	_status& (0+255),5,b
 17151  00BFC8                     l3286:
 17152                           
 17153                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 17154                           
 17155                           ; BSR set to: 1
 17156  00BFC8  0E08               	movlw	8
 17157  00BFCA  EC88  F095         	call	_system_output_is_on
 17158  00BFCE  0900               	iorlw	0
 17159  00BFD0  B4D8               	btfsc	status,2,c
 17160  00BFD2  D002               	goto	l3287
 17161                           
 17162                           ;log.c: 157: status |= 0b00010000;
 17163  00BFD4  0101               	movlb	1	; () banked
 17164  00BFD6  89EC               	bsf	_status& (0+255),4,b
 17165  00BFD8                     l3287:
 17166                           
 17167                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 17168                           
 17169                           ; BSR set to: 1
 17170  00BFD8  0E10               	movlw	16
 17171  00BFDA  EC88  F095         	call	_system_output_is_on
 17172  00BFDE  0900               	iorlw	0
 17173  00BFE0  B4D8               	btfsc	status,2,c
 17174  00BFE2  D002               	goto	l3288
 17175                           
 17176                           ;log.c: 159: status |= 0b00001000;
 17177  00BFE4  0101               	movlb	1	; () banked
 17178  00BFE6  87EC               	bsf	_status& (0+255),3,b
 17179  00BFE8                     l3288:
 17180                           
 17181                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 17182                           
 17183                           ; BSR set to: 1
 17184  00BFE8  0E20               	movlw	32
 17185  00BFEA  EC88  F095         	call	_system_output_is_on
 17186  00BFEE  0900               	iorlw	0
 17187  00BFF0  B4D8               	btfsc	status,2,c
 17188  00BFF2  D002               	goto	l3289
 17189                           
 17190                           ;log.c: 161: status |= 0b00000100;
 17191  00BFF4  0101               	movlb	1	; () banked
 17192  00BFF6  85EC               	bsf	_status& (0+255),2,b
 17193  00BFF8                     l3289:
 17194                           
 17195                           ;log.c: 163: status |= 0b00000010;
 17196  00BFF8  0101               	movlb	1	; () banked
 17197  00BFFA  83EC               	bsf	_status& (0+255),1,b
 17198                           
 17199                           ;log.c: 164: ++averageCount;
 17200  00BFFC  4A41               	infsnz	_averageCount,f,c
 17201  00BFFE  2A42               	incf	_averageCount+1,f,c
 17202  00C000  0012               	return		;funcret
 17203  00C002                     __end_of_log_collect_data:
 17204                           	opt stack 0
 17205                           tblptru	equ	0xFF8
 17206                           tblptrh	equ	0xFF7
 17207                           tblptrl	equ	0xFF6
 17208                           tablat	equ	0xFF5
 17209                           prodh	equ	0xFF4
 17210                           prodl	equ	0xFF3
 17211                           intcon	equ	0xFF2
 17212                           intcon2	equ	0xFF1
 17213                           intcon3	equ	0xFF0
 17214                           postinc0	equ	0xFEE
 17215                           wreg	equ	0xFE8
 17216                           postinc1	equ	0xFE6
 17217                           postdec1	equ	0xFE5
 17218                           plusw1	equ	0xFE3
 17219                           fsr1h	equ	0xFE2
 17220                           fsr1l	equ	0xFE1
 17221                           indf2	equ	0xFDF
 17222                           postinc2	equ	0xFDE
 17223                           postdec2	equ	0xFDD
 17224                           plusw2	equ	0xFDB
 17225                           fsr2h	equ	0xFDA
 17226                           fsr2l	equ	0xFD9
 17227                           status	equ	0xFD8
 17228                           
 17229 ;; *************** function _system_output_is_on *****************
 17230 ;; Defined at:
 17231 ;;		line 491 in file "os.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;  output          1    wreg     enum E8135
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;  output          1    0[BANK0 ] enum E8135
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      unsigned char 
 17238 ;; Registers used:
 17239 ;;		wreg, status,2, status,0
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17248 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17249 ;;Total ram usage:        1 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:   10
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		_system_output_toggle
 17256 ;;		_log_collect_data
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260                           	psect	text80
 17261  012B10                     __ptext80:
 17262                           	opt stack 0
 17263  012B10                     _system_output_is_on:
 17264                           	opt stack 17
 17265                           
 17266                           ;incstack = 0
 17267                           ;system_output_is_on@output stored from wreg
 17268  012B10  0100               	movlb	0	; () banked
 17269  012B12  6F60               	movwf	system_output_is_on@output& (0+255),b
 17270                           
 17271                           ;os.c: 493: if(os.outputs&output)
 17272  012B14  0102               	movlb	2	; () banked
 17273  012B16  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 17274  012B18  0100               	movlb	0	; () banked
 17275  012B1A  1560               	andwf	system_output_is_on@output& (0+255),w,b
 17276  012B1C  0900               	iorlw	0
 17277  012B1E  B4D8               	btfsc	status,2,c
 17278  012B20  D002               	goto	l1396
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;os.c: 494: return 1;
 17282  012B22  0E01               	movlw	1
 17283                           
 17284                           ; BSR set to: 0
 17285                           
 17286                           ; BSR set to: 0
 17287  012B24  0012               	return	
 17288  012B26                     l1396:
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;os.c: 495: else
 17292                           ;os.c: 496: return 0;
 17293                           
 17294                           ; BSR set to: 0
 17295  012B26  0E00               	movlw	0
 17296                           
 17297                           ; BSR set to: 0
 17298  012B28  0012               	return	
 17299  012B2A                     __end_of_system_output_is_on:
 17300                           	opt stack 0
 17301                           tblptru	equ	0xFF8
 17302                           tblptrh	equ	0xFF7
 17303                           tblptrl	equ	0xFF6
 17304                           tablat	equ	0xFF5
 17305                           prodh	equ	0xFF4
 17306                           prodl	equ	0xFF3
 17307                           intcon	equ	0xFF2
 17308                           intcon2	equ	0xFF1
 17309                           intcon3	equ	0xFF0
 17310                           postinc0	equ	0xFEE
 17311                           wreg	equ	0xFE8
 17312                           postinc1	equ	0xFE6
 17313                           postdec1	equ	0xFE5
 17314                           plusw1	equ	0xFE3
 17315                           fsr1h	equ	0xFE2
 17316                           fsr1l	equ	0xFE1
 17317                           indf2	equ	0xFDF
 17318                           postinc2	equ	0xFDE
 17319                           postdec2	equ	0xFDD
 17320                           plusw2	equ	0xFDB
 17321                           fsr2h	equ	0xFDA
 17322                           fsr2l	equ	0xFD9
 17323                           status	equ	0xFD8
 17324                           
 17325 ;; *************** function _rtcc_get_seconds_decimal *****************
 17326 ;; Defined at:
 17327 ;;		line 301 in file "rtcc.c"
 17328 ;; Parameters:    Size  Location     Type
 17329 ;;		None
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  1    wreg      unsigned char 
 17334 ;; Registers used:
 17335 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17345 ;;Total ram usage:        1 bytes
 17346 ;; Hardware stack levels used:    1
 17347 ;; Hardware stack levels required when called:   11
 17348 ;; This function calls:
 17349 ;;		__rtcc_bdc_to_decimal
 17350 ;;		_rtcc_get_seconds
 17351 ;; This function is called by:
 17352 ;;		__get_time
 17353 ;;		__get_dateTime
 17354 ;;		_log_start_new
 17355 ;;		_log_collect_data
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359                           	psect	text81
 17360  012D1A                     __ptext81:
 17361                           	opt stack 0
 17362  012D1A                     _rtcc_get_seconds_decimal:
 17363                           	opt stack 17
 17364                           
 17365                           ;rtcc.c: 303: uint8_t bcd_seconds = rtcc_get_seconds();
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;incstack = 0
 17369  012D1A  ECA4  F096         	call	_rtcc_get_seconds	;wreg free
 17370  012D1E  0100               	movlb	0	; () banked
 17371  012D20  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;rtcc.c: 304: return _rtcc_bdc_to_decimal(bcd_seconds);
 17375  012D22  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 17376  012D24  EC42  F095         	call	__rtcc_bdc_to_decimal
 17377  012D28  0012               	return	
 17378  012D2A                     __end_of_rtcc_get_seconds_decimal:
 17379                           	opt stack 0
 17380                           tblptru	equ	0xFF8
 17381                           tblptrh	equ	0xFF7
 17382                           tblptrl	equ	0xFF6
 17383                           tablat	equ	0xFF5
 17384                           prodh	equ	0xFF4
 17385                           prodl	equ	0xFF3
 17386                           intcon	equ	0xFF2
 17387                           intcon2	equ	0xFF1
 17388                           intcon3	equ	0xFF0
 17389                           postinc0	equ	0xFEE
 17390                           wreg	equ	0xFE8
 17391                           postinc1	equ	0xFE6
 17392                           postdec1	equ	0xFE5
 17393                           plusw1	equ	0xFE3
 17394                           fsr1h	equ	0xFE2
 17395                           fsr1l	equ	0xFE1
 17396                           indf2	equ	0xFDF
 17397                           postinc2	equ	0xFDE
 17398                           postdec2	equ	0xFDD
 17399                           plusw2	equ	0xFDB
 17400                           fsr2h	equ	0xFDA
 17401                           fsr2l	equ	0xFD9
 17402                           status	equ	0xFD8
 17403                           
 17404 ;; *************** function __rtcc_bdc_to_decimal *****************
 17405 ;; Defined at:
 17406 ;;		line 7 in file "rtcc.c"
 17407 ;; Parameters:    Size  Location     Type
 17408 ;;  input           1    wreg     unsigned char 
 17409 ;; Auto vars:     Size  Location     Type
 17410 ;;  input           1    2[BANK0 ] unsigned char 
 17411 ;;  ones            1    1[BANK0 ] unsigned char 
 17412 ;;  tens            1    0[BANK0 ] unsigned char 
 17413 ;; Return value:  Size  Location     Type
 17414 ;;                  1    wreg      unsigned char 
 17415 ;; Registers used:
 17416 ;;		wreg, status,2, status,0, prodl, prodh
 17417 ;; Tracked objects:
 17418 ;;		On entry : 0/0
 17419 ;;		On exit  : 0/0
 17420 ;;		Unchanged: 0/0
 17421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17423 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17425 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17426 ;;Total ram usage:        3 bytes
 17427 ;; Hardware stack levels used:    1
 17428 ;; Hardware stack levels required when called:   10
 17429 ;; This function calls:
 17430 ;;		Nothing
 17431 ;; This function is called by:
 17432 ;;		_rtcc_get_year_decimal
 17433 ;;		_rtcc_get_month_decimal
 17434 ;;		_rtcc_get_day_decimal
 17435 ;;		_rtcc_get_hours_decimal
 17436 ;;		_rtcc_get_minutes_decimal
 17437 ;;		_rtcc_get_seconds_decimal
 17438 ;; This function uses a non-reentrant model
 17439 ;;
 17440                           
 17441                           	psect	text82
 17442  012A84                     __ptext82:
 17443                           	opt stack 0
 17444  012A84                     __rtcc_bdc_to_decimal:
 17445                           	opt stack 17
 17446                           
 17447                           ;incstack = 0
 17448                           ;__rtcc_bdc_to_decimal@input stored from wreg
 17449  012A84  0100               	movlb	0	; () banked
 17450  012A86  6F62               	movwf	__rtcc_bdc_to_decimal@input& (0+255),b
 17451                           
 17452                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 17453  012A88  0100               	movlb	0	; () banked
 17454  012A8A  3962               	swapf	__rtcc_bdc_to_decimal@input& (0+255),w,b
 17455  012A8C  0B0F               	andlw	15
 17456  012A8E  0B0F               	andlw	15
 17457  012A90  6F60               	movwf	__rtcc_bdc_to_decimal@tens& (0+255),b
 17458                           
 17459                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 17460  012A92  5162               	movf	__rtcc_bdc_to_decimal@input& (0+255),w,b
 17461  012A94  0B0F               	andlw	15
 17462  012A96  6F61               	movwf	__rtcc_bdc_to_decimal@ones& (0+255),b
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;rtcc.c: 11: return ((10*tens) + ones);
 17466  012A98  5160               	movf	__rtcc_bdc_to_decimal@tens& (0+255),w,b
 17467  012A9A  0D0A               	mullw	10
 17468  012A9C  50F3               	movf	prodl,w,c
 17469  012A9E  2561               	addwf	__rtcc_bdc_to_decimal@ones& (0+255),w,b
 17470  012AA0  0012               	return	
 17471  012AA2                     __end_of__rtcc_bdc_to_decimal:
 17472                           	opt stack 0
 17473                           tblptru	equ	0xFF8
 17474                           tblptrh	equ	0xFF7
 17475                           tblptrl	equ	0xFF6
 17476                           tablat	equ	0xFF5
 17477                           prodh	equ	0xFF4
 17478                           prodl	equ	0xFF3
 17479                           intcon	equ	0xFF2
 17480                           intcon2	equ	0xFF1
 17481                           intcon3	equ	0xFF0
 17482                           postinc0	equ	0xFEE
 17483                           wreg	equ	0xFE8
 17484                           postinc1	equ	0xFE6
 17485                           postdec1	equ	0xFE5
 17486                           plusw1	equ	0xFE3
 17487                           fsr1h	equ	0xFE2
 17488                           fsr1l	equ	0xFE1
 17489                           indf2	equ	0xFDF
 17490                           postinc2	equ	0xFDE
 17491                           postdec2	equ	0xFDD
 17492                           plusw2	equ	0xFDB
 17493                           fsr2h	equ	0xFDA
 17494                           fsr2l	equ	0xFD9
 17495                           status	equ	0xFD8
 17496                           
 17497 ;; *************** function __get_output_power *****************
 17498 ;; Defined at:
 17499 ;;		line 99 in file "log.c"
 17500 ;; Parameters:    Size  Location     Type
 17501 ;;		None
 17502 ;; Auto vars:     Size  Location     Type
 17503 ;;  pwr             4   15[BANK0 ] unsigned long 
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  2   13[BANK0 ] unsigned int 
 17506 ;; Registers used:
 17507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17508 ;; Tracked objects:
 17509 ;;		On entry : 0/0
 17510 ;;		On exit  : 0/0
 17511 ;;		Unchanged: 0/0
 17512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17514 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17517 ;;Total ram usage:        6 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:   11
 17520 ;; This function calls:
 17521 ;;		___lldiv
 17522 ;;		___lmul
 17523 ;; This function is called by:
 17524 ;;		_log_collect_data
 17525 ;; This function uses a non-reentrant model
 17526 ;;
 17527                           
 17528                           	psect	text83
 17529  010950                     __ptext83:
 17530                           	opt stack 0
 17531  010950                     __get_output_power:
 17532                           	opt stack 18
 17533                           
 17534                           ;log.c: 101: uint32_t pwr;
 17535                           ;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) os.output_current);
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;incstack = 0
 17539  010950  EE22  F027         	lfsr	2,_os+39	;volatile
 17540  010954  CFDE F060          	movff	postinc2,___lmul@multiplier
 17541  010958  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17542  01095C  0100               	movlb	0	; () banked
 17543  01095E  0E00               	movlw	0
 17544  010960  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17545  010962  0EFF               	movlw	-1
 17546  010964  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17547  010966  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17548  010968  EE22  F032         	lfsr	2,_os+50	;volatile
 17549  01096C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17550  010970  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17551  010974  0E00               	movlw	0
 17552  010976  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17553  010978  0EFF               	movlw	-1
 17554  01097A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17555  01097C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17556  01097E  EC12  F08D         	call	___lmul	;wreg free
 17557  010982  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 17558  010986  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 17559  01098A  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 17560  01098E  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 17561                           
 17562                           ;log.c: 103: pwr /= 1000;
 17563  010992  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 17564  010996  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 17565  01099A  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 17566  01099E  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 17567  0109A2  0EE8               	movlw	232
 17568  0109A4  0100               	movlb	0	; () banked
 17569  0109A6  6F64               	movwf	___lldiv@divisor& (0+255),b
 17570  0109A8  0E03               	movlw	3
 17571  0109AA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 17572  0109AC  0E00               	movlw	0
 17573  0109AE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 17574  0109B0  0E00               	movlw	0
 17575  0109B2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 17576  0109B4  EC66  F084         	call	___lldiv	;wreg free
 17577  0109B8  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 17578  0109BC  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 17579  0109C0  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 17580  0109C4  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 17581                           
 17582                           ;log.c: 104: return (uint16_t) pwr;
 17583  0109C8  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 17584  0109CC  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 17585  0109D0  0012               	return	
 17586  0109D2                     __end_of__get_output_power:
 17587                           	opt stack 0
 17588                           tblptru	equ	0xFF8
 17589                           tblptrh	equ	0xFF7
 17590                           tblptrl	equ	0xFF6
 17591                           tablat	equ	0xFF5
 17592                           prodh	equ	0xFF4
 17593                           prodl	equ	0xFF3
 17594                           intcon	equ	0xFF2
 17595                           intcon2	equ	0xFF1
 17596                           intcon3	equ	0xFF0
 17597                           postinc0	equ	0xFEE
 17598                           wreg	equ	0xFE8
 17599                           postinc1	equ	0xFE6
 17600                           postdec1	equ	0xFE5
 17601                           plusw1	equ	0xFE3
 17602                           fsr1h	equ	0xFE2
 17603                           fsr1l	equ	0xFE1
 17604                           indf2	equ	0xFDF
 17605                           postinc2	equ	0xFDE
 17606                           postdec2	equ	0xFDD
 17607                           plusw2	equ	0xFDB
 17608                           fsr2h	equ	0xFDA
 17609                           fsr2l	equ	0xFD9
 17610                           status	equ	0xFD8
 17611                           
 17612 ;; *************** function __get_input_power *****************
 17613 ;; Defined at:
 17614 ;;		line 91 in file "log.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;		None
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;  pwr             4   16[BANK0 ] long 
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  2   14[BANK0 ] unsigned int 
 17621 ;; Registers used:
 17622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17629 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17631 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17632 ;;Total ram usage:        6 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:   11
 17635 ;; This function calls:
 17636 ;;		___aldiv
 17637 ;;		___lmul
 17638 ;; This function is called by:
 17639 ;;		_log_collect_data
 17640 ;; This function uses a non-reentrant model
 17641 ;;
 17642                           
 17643                           	psect	text84
 17644  0109D2                     __ptext84:
 17645                           	opt stack 0
 17646  0109D2                     __get_input_power:
 17647                           	opt stack 18
 17648                           
 17649                           ;log.c: 93: int32_t pwr;
 17650                           ;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.input_current);
 17651                           
 17652                           ;incstack = 0
 17653  0109D2  EE22  F012         	lfsr	2,_os+18	;volatile
 17654  0109D6  CFDE F060          	movff	postinc2,___lmul@multiplier
 17655  0109DA  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17656  0109DE  0100               	movlb	0	; () banked
 17657  0109E0  0E00               	movlw	0
 17658  0109E2  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17659  0109E4  0EFF               	movlw	-1
 17660  0109E6  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17661  0109E8  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17662  0109EA  EE22  F01D         	lfsr	2,_os+29	;volatile
 17663  0109EE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17664  0109F2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17665  0109F6  0E00               	movlw	0
 17666  0109F8  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17667  0109FA  0EFF               	movlw	-1
 17668  0109FC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17669  0109FE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17670  010A00  EC12  F08D         	call	___lmul	;wreg free
 17671  010A04  C060  F070         	movff	?___lmul,__get_input_power@pwr
 17672  010A08  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 17673  010A0C  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 17674  010A10  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 17675                           
 17676                           ;log.c: 95: pwr /= 1000;
 17677  010A14  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 17678  010A18  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 17679  010A1C  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 17680  010A20  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 17681  010A24  0EE8               	movlw	232
 17682  010A26  0100               	movlb	0	; () banked
 17683  010A28  6F64               	movwf	___aldiv@divisor& (0+255),b
 17684  010A2A  0E03               	movlw	3
 17685  010A2C  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 17686  010A2E  0E00               	movlw	0
 17687  010A30  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 17688  010A32  0E00               	movlw	0
 17689  010A34  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 17690  010A36  EC47  F07C         	call	___aldiv	;wreg free
 17691  010A3A  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 17692  010A3E  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 17693  010A42  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 17694  010A46  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 17695                           
 17696                           ;log.c: 96: return (uint16_t) pwr;
 17697  010A4A  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 17698  010A4E  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 17699  010A52  0012               	return	
 17700  010A54                     __end_of__get_input_power:
 17701                           	opt stack 0
 17702                           tblptru	equ	0xFF8
 17703                           tblptrh	equ	0xFF7
 17704                           tblptrl	equ	0xFF6
 17705                           tablat	equ	0xFF5
 17706                           prodh	equ	0xFF4
 17707                           prodl	equ	0xFF3
 17708                           intcon	equ	0xFF2
 17709                           intcon2	equ	0xFF1
 17710                           intcon3	equ	0xFF0
 17711                           postinc0	equ	0xFEE
 17712                           wreg	equ	0xFE8
 17713                           postinc1	equ	0xFE6
 17714                           postdec1	equ	0xFE5
 17715                           plusw1	equ	0xFE3
 17716                           fsr1h	equ	0xFE2
 17717                           fsr1l	equ	0xFE1
 17718                           indf2	equ	0xFDF
 17719                           postinc2	equ	0xFDE
 17720                           postdec2	equ	0xFDD
 17721                           plusw2	equ	0xFDB
 17722                           fsr2h	equ	0xFDA
 17723                           fsr2l	equ	0xFD9
 17724                           status	equ	0xFD8
 17725                           
 17726 ;; *************** function _i2c_eeprom_tasks *****************
 17727 ;; Defined at:
 17728 ;;		line 779 in file "i2c.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;		None
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;		None
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  1    wreg      void 
 17735 ;; Registers used:
 17736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17746 ;;Total ram usage:        0 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; Hardware stack levels required when called:   14
 17749 ;; This function calls:
 17750 ;;		__write_calibration
 17751 ;;		_get_next_eeprom_write_task
 17752 ;; This function is called by:
 17753 ;;		_main
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text85
 17758  010FAE                     __ptext85:
 17759                           	opt stack 0
 17760  010FAE                     _i2c_eeprom_tasks:
 17761                           	opt stack 16
 17762                           
 17763                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 17764                           
 17765                           ;incstack = 0
 17766  010FAE  D01C               	goto	l1672
 17767  010FB0                     
 17768                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 17769  010FB0  0E00               	movlw	0
 17770  010FB2  EC2F  F082         	call	__write_calibration
 17771                           
 17772                           ;i2c.c: 787: break;
 17773  010FB6  0012               	return	
 17774  010FB8                     
 17775                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 17776  010FB8  0E01               	movlw	1
 17777  010FBA  EC2F  F082         	call	__write_calibration
 17778                           
 17779                           ;i2c.c: 790: break;
 17780  010FBE  0012               	return	
 17781  010FC0                     
 17782                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 17783  010FC0  0E02               	movlw	2
 17784  010FC2  EC2F  F082         	call	__write_calibration
 17785                           
 17786                           ;i2c.c: 793: break;
 17787  010FC6  0012               	return	
 17788  010FC8                     
 17789                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 17790  010FC8  0E03               	movlw	3
 17791  010FCA  EC2F  F082         	call	__write_calibration
 17792                           
 17793                           ;i2c.c: 796: break;
 17794  010FCE  0012               	return	
 17795  010FD0                     
 17796                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 17797  010FD0  0E04               	movlw	4
 17798  010FD2  EC2F  F082         	call	__write_calibration
 17799                           
 17800                           ;i2c.c: 799: break;
 17801  010FD6  0012               	return	
 17802  010FD8                     
 17803                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 17804  010FD8  0E05               	movlw	5
 17805  010FDA  EC2F  F082         	call	__write_calibration
 17806                           
 17807                           ;i2c.c: 802: break;
 17808  010FDE  0012               	return	
 17809  010FE0                     
 17810                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 17811  010FE0  0E06               	movlw	6
 17812  010FE2  EC2F  F082         	call	__write_calibration
 17813                           
 17814                           ;i2c.c: 806: }
 17815                           
 17816                           ;i2c.c: 805: break;
 17817  010FE6  0012               	return	
 17818  010FE8                     l1672:
 17819  010FE8  EC65  F093         	call	_get_next_eeprom_write_task	;wreg free
 17820                           
 17821                           ; Switch size 1, requested type "space"
 17822                           ; Number of cases is 8, Range of values is 1 to 8
 17823                           ; switch strategies available:
 17824                           ; Name         Instructions Cycles
 17825                           ; simple_byte           25    13 (average)
 17826                           ;	Chosen strategy is simple_byte
 17827  010FEC  0A01               	xorlw	1	; case 1
 17828  010FEE  B4D8               	btfsc	status,2,c
 17829  010FF0  0012               	return	
 17830  010FF2  0A03               	xorlw	3	; case 2
 17831  010FF4  B4D8               	btfsc	status,2,c
 17832  010FF6  D7DC               	goto	l1675
 17833  010FF8  0A01               	xorlw	1	; case 3
 17834  010FFA  B4D8               	btfsc	status,2,c
 17835  010FFC  D7DD               	goto	l1676
 17836  010FFE  0A07               	xorlw	7	; case 4
 17837  011000  B4D8               	btfsc	status,2,c
 17838  011002  D7DE               	goto	l1677
 17839  011004  0A01               	xorlw	1	; case 5
 17840  011006  B4D8               	btfsc	status,2,c
 17841  011008  D7DF               	goto	l1678
 17842  01100A  0A03               	xorlw	3	; case 6
 17843  01100C  B4D8               	btfsc	status,2,c
 17844  01100E  D7E0               	goto	l1679
 17845  011010  0A01               	xorlw	1	; case 7
 17846  011012  B4D8               	btfsc	status,2,c
 17847  011014  D7E1               	goto	l1680
 17848  011016  0A0F               	xorlw	15	; case 8
 17849  011018  A4D8               	btfss	status,2,c
 17850  01101A  0012               	return	
 17851  01101C  D7E1               	goto	l1681
 17852  01101E                     __end_of_i2c_eeprom_tasks:
 17853                           	opt stack 0
 17854                           tblptru	equ	0xFF8
 17855                           tblptrh	equ	0xFF7
 17856                           tblptrl	equ	0xFF6
 17857                           tablat	equ	0xFF5
 17858                           prodh	equ	0xFF4
 17859                           prodl	equ	0xFF3
 17860                           intcon	equ	0xFF2
 17861                           intcon2	equ	0xFF1
 17862                           intcon3	equ	0xFF0
 17863                           postinc0	equ	0xFEE
 17864                           wreg	equ	0xFE8
 17865                           postinc1	equ	0xFE6
 17866                           postdec1	equ	0xFE5
 17867                           plusw1	equ	0xFE3
 17868                           fsr1h	equ	0xFE2
 17869                           fsr1l	equ	0xFE1
 17870                           indf2	equ	0xFDF
 17871                           postinc2	equ	0xFDE
 17872                           postdec2	equ	0xFDD
 17873                           plusw2	equ	0xFDB
 17874                           fsr2h	equ	0xFDA
 17875                           fsr2l	equ	0xFD9
 17876                           status	equ	0xFD8
 17877                           
 17878 ;; *************** function _get_next_eeprom_write_task *****************
 17879 ;; Defined at:
 17880 ;;		line 759 in file "i2c.c"
 17881 ;; Parameters:    Size  Location     Type
 17882 ;;		None
 17883 ;; Auto vars:     Size  Location     Type
 17884 ;;  task            1    0[BANK0 ] enum E8258
 17885 ;; Return value:  Size  Location     Type
 17886 ;;                  1    wreg      enum E8258
 17887 ;; Registers used:
 17888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17898 ;;Total ram usage:        1 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:   10
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_i2c_eeprom_tasks
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text86
 17909  0126CA                     __ptext86:
 17910                           	opt stack 0
 17911  0126CA                     _get_next_eeprom_write_task:
 17912                           	opt stack 19
 17913                           
 17914                           ;i2c.c: 761: eeprom_write_task_t task;
 17915                           ;i2c.c: 762: if (task_list_read_index == task_list_write_index)
 17916                           
 17917                           ;incstack = 0
 17918  0126CA  504F               	movf	_task_list_write_index,w,c
 17919  0126CC  1850               	xorwf	_task_list_read_index,w,c
 17920  0126CE  A4D8               	btfss	status,2,c
 17921  0126D0  D002               	goto	l1667
 17922                           
 17923                           ;i2c.c: 763: {
 17924                           ;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 17925  0126D2  0E00               	movlw	0
 17926                           
 17927                           ;i2c.c: 766: }
 17928  0126D4  0012               	return	
 17929  0126D6                     l1667:
 17930                           
 17931                           ;i2c.c: 767: else
 17932                           ;i2c.c: 768: {
 17933                           ;i2c.c: 770: task = task_list[task_list_read_index];
 17934  0126D6  5050               	movf	_task_list_read_index,w,c
 17935  0126D8  0D01               	mullw	1
 17936  0126DA  0E68               	movlw	low _task_list
 17937  0126DC  24F3               	addwf	prodl,w,c
 17938  0126DE  6ED9               	movwf	fsr2l,c
 17939  0126E0  0E04               	movlw	high _task_list
 17940  0126E2  20F4               	addwfc	prodh,w,c
 17941  0126E4  6EDA               	movwf	fsr2h,c
 17942  0126E6  50DF               	movf	indf2,w,c
 17943  0126E8  0100               	movlb	0	; () banked
 17944  0126EA  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 17945                           
 17946                           ; BSR set to: 0
 17947                           ;i2c.c: 772: ++task_list_read_index;
 17948  0126EC  2A50               	incf	_task_list_read_index,f,c
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 17952  0126EE  0E0F               	movlw	15
 17953  0126F0  1650               	andwf	_task_list_read_index,f,c
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;i2c.c: 775: return task;
 17957  0126F2  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 17958                           
 17959                           ; BSR set to: 0
 17960  0126F4  0012               	return	
 17961  0126F6                     __end_of_get_next_eeprom_write_task:
 17962                           	opt stack 0
 17963                           tblptru	equ	0xFF8
 17964                           tblptrh	equ	0xFF7
 17965                           tblptrl	equ	0xFF6
 17966                           tablat	equ	0xFF5
 17967                           prodh	equ	0xFF4
 17968                           prodl	equ	0xFF3
 17969                           intcon	equ	0xFF2
 17970                           intcon2	equ	0xFF1
 17971                           intcon3	equ	0xFF0
 17972                           postinc0	equ	0xFEE
 17973                           wreg	equ	0xFE8
 17974                           postinc1	equ	0xFE6
 17975                           postdec1	equ	0xFE5
 17976                           plusw1	equ	0xFE3
 17977                           fsr1h	equ	0xFE2
 17978                           fsr1l	equ	0xFE1
 17979                           indf2	equ	0xFDF
 17980                           postinc2	equ	0xFDE
 17981                           postdec2	equ	0xFDD
 17982                           plusw2	equ	0xFDB
 17983                           fsr2h	equ	0xFDA
 17984                           fsr2l	equ	0xFD9
 17985                           status	equ	0xFD8
 17986                           
 17987 ;; *************** function __write_calibration *****************
 17988 ;; Defined at:
 17989 ;;		line 715 in file "i2c.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;  index           1    wreg     enum E8148
 17992 ;; Auto vars:     Size  Location     Type
 17993 ;;  index           1   59[BANK0 ] enum E8148
 17994 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 17995 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 17996 ;;		 -> calibrationParameters(84), 
 17997 ;;  addr            2   55[BANK0 ] unsigned int 
 17998 ;;  cntr            1   60[BANK0 ] unsigned char 
 17999 ;; Return value:  Size  Location     Type
 18000 ;;                  1    wreg      void 
 18001 ;; Registers used:
 18002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18003 ;; Tracked objects:
 18004 ;;		On entry : 0/0
 18005 ;;		On exit  : 0/0
 18006 ;;		Unchanged: 0/0
 18007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18009 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18011 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18012 ;;Total ram usage:       24 bytes
 18013 ;; Hardware stack levels used:    1
 18014 ;; Hardware stack levels required when called:   13
 18015 ;; This function calls:
 18016 ;;		_i2c_eeprom_write
 18017 ;; This function is called by:
 18018 ;;		_i2c_eeprom_tasks
 18019 ;; This function uses a non-reentrant model
 18020 ;;
 18021                           
 18022                           	psect	text87
 18023  01045E                     __ptext87:
 18024                           	opt stack 0
 18025  01045E                     __write_calibration:
 18026                           	opt stack 16
 18027                           
 18028                           ;incstack = 0
 18029                           ;__write_calibration@index stored from wreg
 18030  01045E  0100               	movlb	0	; () banked
 18031  010460  6F9B               	movwf	__write_calibration@index& (0+255),b
 18032                           
 18033                           ;i2c.c: 717: uint8_t buffer[16];
 18034                           ;i2c.c: 718: uint8_t *ptr;
 18035                           ;i2c.c: 719: uint8_t cntr;
 18036                           ;i2c.c: 720: uint16_t addr;
 18037                           ;i2c.c: 721: buffer[0] = 0x77;
 18038  010462  0E77               	movlw	119
 18039  010464  0100               	movlb	0	; () banked
 18040  010466  6F87               	movwf	__write_calibration@buffer& (0+255),b
 18041                           
 18042                           ;i2c.c: 722: buffer[1] = 0x55;
 18043  010468  0E55               	movlw	85
 18044  01046A  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 18045                           
 18046                           ;i2c.c: 723: buffer[2] = 0x33;
 18047  01046C  0E33               	movlw	51
 18048  01046E  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 18052  010470  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 18056  010474  519B               	movf	__write_calibration@index& (0+255),w,b
 18057  010476  0D0C               	mullw	12
 18058  010478  0E00               	movlw	low _calibrationParameters
 18059  01047A  24F3               	addwf	prodl,w,c
 18060  01047C  6F99               	movwf	__write_calibration@ptr& (0+255),b
 18061  01047E  0E03               	movlw	high _calibrationParameters
 18062  010480  20F4               	addwfc	prodh,w,c
 18063  010482  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 18067  010484  0E04               	movlw	4
 18068  010486  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 18069  010488                     l14768:
 18070                           
 18071                           ; BSR set to: 0
 18072  010488  0E0F               	movlw	15
 18073  01048A  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 18074  01048C  D001               	goto	l1652
 18075  01048E  D012               	goto	u12500
 18076  010490                     l1652:
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;i2c.c: 727: {
 18080                           ;i2c.c: 728: buffer[cntr] = *ptr;
 18081                           
 18082                           ; BSR set to: 0
 18083  010490  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 18084  010494  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 18085  010498  519C               	movf	__write_calibration@cntr& (0+255),w,b
 18086  01049A  0D01               	mullw	1
 18087  01049C  0E87               	movlw	low __write_calibration@buffer
 18088  01049E  24F3               	addwf	prodl,w,c
 18089  0104A0  6EE1               	movwf	fsr1l,c
 18090  0104A2  0E00               	movlw	high __write_calibration@buffer
 18091  0104A4  20F4               	addwfc	prodh,w,c
 18092  0104A6  6EE2               	movwf	fsr1h,c
 18093  0104A8  CFDF FFE7          	movff	indf2,indf1
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;i2c.c: 729: ++ptr;
 18097  0104AC  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 18098  0104AE  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 18099                           
 18100                           ; BSR set to: 0
 18101  0104B0  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 18102  0104B2  D7EA               	goto	l14768
 18103  0104B4                     u12500:
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;i2c.c: 730: }
 18107                           ;i2c.c: 731: addr = 0x0100 + (index<<4);
 18108                           
 18109                           ; BSR set to: 0
 18110  0104B4  519B               	movf	__write_calibration@index& (0+255),w,b
 18111  0104B6  6F85               	movwf	??__write_calibration& (0+255),b
 18112  0104B8  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 18113  0104BA  3B85               	swapf	??__write_calibration& (0+255),f,b
 18114  0104BC  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 18115  0104BE  0EF0               	movlw	240
 18116  0104C0  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 18117  0104C2  5185               	movf	??__write_calibration& (0+255),w,b
 18118  0104C4  0B0F               	andlw	15
 18119  0104C6  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 18120  0104C8  0EF0               	movlw	240
 18121  0104CA  1785               	andwf	??__write_calibration& (0+255),f,b
 18122  0104CC  0E00               	movlw	0
 18123  0104CE  2585               	addwf	??__write_calibration& (0+255),w,b
 18124  0104D0  6F97               	movwf	__write_calibration@addr& (0+255),b
 18125  0104D2  0E01               	movlw	1
 18126  0104D4  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 18127  0104D6  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 18131  0104D8  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 18132  0104DC  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 18133  0104E0  0E87               	movlw	low __write_calibration@buffer
 18134  0104E2  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 18135  0104E4  0E00               	movlw	high __write_calibration@buffer
 18136  0104E6  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 18137  0104E8  0E10               	movlw	16
 18138  0104EA  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 18139  0104EC  EC6B  F085         	call	_i2c_eeprom_write	;wreg free
 18140  0104F0  0012               	return		;funcret
 18141  0104F2                     __end_of__write_calibration:
 18142                           	opt stack 0
 18143                           tblptru	equ	0xFF8
 18144                           tblptrh	equ	0xFF7
 18145                           tblptrl	equ	0xFF6
 18146                           tablat	equ	0xFF5
 18147                           prodh	equ	0xFF4
 18148                           prodl	equ	0xFF3
 18149                           intcon	equ	0xFF2
 18150                           intcon2	equ	0xFF1
 18151                           intcon3	equ	0xFF0
 18152                           postinc0	equ	0xFEE
 18153                           wreg	equ	0xFE8
 18154                           indf1	equ	0xFE7
 18155                           postinc1	equ	0xFE6
 18156                           postdec1	equ	0xFE5
 18157                           plusw1	equ	0xFE3
 18158                           fsr1h	equ	0xFE2
 18159                           fsr1l	equ	0xFE1
 18160                           indf2	equ	0xFDF
 18161                           postinc2	equ	0xFDE
 18162                           postdec2	equ	0xFDD
 18163                           plusw2	equ	0xFDB
 18164                           fsr2h	equ	0xFDA
 18165                           fsr2l	equ	0xFD9
 18166                           status	equ	0xFD8
 18167                           
 18168 ;; *************** function _i2c_adc_start *****************
 18169 ;; Defined at:
 18170 ;;		line 467 in file "i2c.c"
 18171 ;; Parameters:    Size  Location     Type
 18172 ;;  channel         1    wreg     enum E8230
 18173 ;;  resolution      1   10[BANK0 ] enum E8236
 18174 ;;  gain            1   11[BANK0 ] enum E8242
 18175 ;; Auto vars:     Size  Location     Type
 18176 ;;  channel         1   12[BANK0 ] enum E8230
 18177 ;;  configuratio    1   13[BANK0 ] unsigned char 
 18178 ;; Return value:  Size  Location     Type
 18179 ;;                  1    wreg      void 
 18180 ;; Registers used:
 18181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18190 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18191 ;;Total ram usage:        4 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:   12
 18194 ;; This function calls:
 18195 ;;		__i2c_write
 18196 ;;		_i2c_set_frequency
 18197 ;; This function is called by:
 18198 ;;		_main
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           	psect	text88
 18203  0122F0                     __ptext88:
 18204                           	opt stack 0
 18205  0122F0                     _i2c_adc_start:
 18206                           	opt stack 18
 18207                           
 18208                           ;incstack = 0
 18209                           ;i2c_adc_start@channel stored from wreg
 18210  0122F0  0100               	movlb	0	; () banked
 18211  0122F2  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 18212                           
 18213                           ;i2c.c: 469: uint8_t configuration_byte;
 18214                           ;i2c.c: 470: configuration_byte = 0b10000000;
 18215  0122F4  0E80               	movlw	128
 18216  0122F6  0100               	movlb	0	; () banked
 18217  0122F8  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 18218                           
 18219                           ; BSR set to: 0
 18220                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 18221  0122FA  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 18222  0122FC  46E8               	rlncf	wreg,f,c
 18223  0122FE  0BE0               	andlw	224
 18224  012300  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 18228  012302  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 18229  012304  46E8               	rlncf	wreg,f,c
 18230  012306  0BFC               	andlw	252
 18231  012308  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18232                           
 18233                           ; BSR set to: 0
 18234                           ;i2c.c: 473: configuration_byte |= gain;
 18235  01230A  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 18236  01230C  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18240  01230E  0E02               	movlw	2
 18241  012310  EC0F  F088         	call	_i2c_set_frequency
 18242                           
 18243                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 18244  012314  0E6D               	movlw	low i2c_adc_start@configuration_byte
 18245  012316  0100               	movlb	0	; () banked
 18246  012318  6F65               	movwf	__i2c_write@data& (0+255),b
 18247  01231A  0E00               	movlw	high i2c_adc_start@configuration_byte
 18248  01231C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 18249  01231E  0E01               	movlw	1
 18250  012320  6F67               	movwf	__i2c_write@length& (0+255),b
 18251  012322  0ED0               	movlw	208
 18252  012324  ECB4  F08E         	call	__i2c_write
 18253  012328  0012               	return		;funcret
 18254  01232A                     __end_of_i2c_adc_start:
 18255                           	opt stack 0
 18256                           tblptru	equ	0xFF8
 18257                           tblptrh	equ	0xFF7
 18258                           tblptrl	equ	0xFF6
 18259                           tablat	equ	0xFF5
 18260                           prodh	equ	0xFF4
 18261                           prodl	equ	0xFF3
 18262                           intcon	equ	0xFF2
 18263                           intcon2	equ	0xFF1
 18264                           intcon3	equ	0xFF0
 18265                           postinc0	equ	0xFEE
 18266                           wreg	equ	0xFE8
 18267                           indf1	equ	0xFE7
 18268                           postinc1	equ	0xFE6
 18269                           postdec1	equ	0xFE5
 18270                           plusw1	equ	0xFE3
 18271                           fsr1h	equ	0xFE2
 18272                           fsr1l	equ	0xFE1
 18273                           indf2	equ	0xFDF
 18274                           postinc2	equ	0xFDE
 18275                           postdec2	equ	0xFDD
 18276                           plusw2	equ	0xFDB
 18277                           fsr2h	equ	0xFDA
 18278                           fsr2l	equ	0xFD9
 18279                           status	equ	0xFD8
 18280                           
 18281 ;; *************** function _i2c_adc_read *****************
 18282 ;; Defined at:
 18283 ;;		line 481 in file "i2c.c"
 18284 ;; Parameters:    Size  Location     Type
 18285 ;;		None
 18286 ;; Auto vars:     Size  Location     Type
 18287 ;;  result          2    8[BANK0 ] int 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  2    5[BANK0 ] int 
 18290 ;; Registers used:
 18291 ;;		wreg, status,2, status,0, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18300 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18301 ;;Total ram usage:        5 bytes
 18302 ;; Hardware stack levels used:    1
 18303 ;; Hardware stack levels required when called:   11
 18304 ;; This function calls:
 18305 ;;		__i2c_acknowledge
 18306 ;;		__i2c_get
 18307 ;;		__i2c_not_acknowledge
 18308 ;;		__i2c_send
 18309 ;;		__i2c_start
 18310 ;;		__i2c_stop
 18311 ;;		__i2c_wait_idle
 18312 ;;		_i2c_set_frequency
 18313 ;; This function is called by:
 18314 ;;		_main
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           	psect	text89
 18319  011C22                     __ptext89:
 18320                           	opt stack 0
 18321  011C22                     _i2c_adc_read:
 18322                           	opt stack 19
 18323                           
 18324                           ;i2c.c: 483: int16_t result;
 18325                           ;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18326                           
 18327                           ;incstack = 0
 18328  011C22  0E02               	movlw	2
 18329  011C24  EC0F  F088         	call	_i2c_set_frequency
 18330                           
 18331                           ;i2c.c: 488: _i2c_wait_idle();
 18332  011C28  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18333                           
 18334                           ;i2c.c: 489: _i2c_start();
 18335  011C2C  ECFB  F096         	call	__i2c_start	;wreg free
 18336                           
 18337                           ;i2c.c: 490: _i2c_wait_idle();
 18338  011C30  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18339                           
 18340                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 18341  011C34  0ED1               	movlw	209
 18342  011C36  ECF2  F096         	call	__i2c_send
 18343                           
 18344                           ;i2c.c: 492: _i2c_wait_idle();
 18345  011C3A  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18346                           
 18347                           ;i2c.c: 493: result = _i2c_get();
 18348  011C3E  ECE3  F096         	call	__i2c_get	;wreg free
 18349  011C42  0100               	movlb	0	; () banked
 18350  011C44  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18351  011C46  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18352  011C48  6F68               	movwf	i2c_adc_read@result& (0+255),b
 18353  011C4A  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;i2c.c: 494: result <<= 8;
 18357  011C4C  5168               	movf	i2c_adc_read@result& (0+255),w,b
 18358  011C4E  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 18359  011C50  6B68               	clrf	i2c_adc_read@result& (0+255),b
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;i2c.c: 495: _i2c_acknowledge();
 18363  011C52  ECE8  F096         	call	__i2c_acknowledge	;wreg free
 18364                           
 18365                           ;i2c.c: 496: result |= _i2c_get();
 18366  011C56  ECE3  F096         	call	__i2c_get	;wreg free
 18367  011C5A  0100               	movlb	0	; () banked
 18368  011C5C  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18369  011C5E  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18370  011C60  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 18371                           
 18372                           ; BSR set to: 0
 18373                           ;i2c.c: 497: _i2c_not_acknowledge();
 18374  011C62  ECDE  F096         	call	__i2c_not_acknowledge	;wreg free
 18375                           
 18376                           ;i2c.c: 498: _i2c_stop();
 18377  011C66  ECF7  F096         	call	__i2c_stop	;wreg free
 18378                           
 18379                           ;i2c.c: 500: return result;
 18380  011C6A  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 18381  011C6E  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 18382  011C72  0012               	return	
 18383  011C74                     __end_of_i2c_adc_read:
 18384                           	opt stack 0
 18385                           tblptru	equ	0xFF8
 18386                           tblptrh	equ	0xFF7
 18387                           tblptrl	equ	0xFF6
 18388                           tablat	equ	0xFF5
 18389                           prodh	equ	0xFF4
 18390                           prodl	equ	0xFF3
 18391                           intcon	equ	0xFF2
 18392                           intcon2	equ	0xFF1
 18393                           intcon3	equ	0xFF0
 18394                           postinc0	equ	0xFEE
 18395                           wreg	equ	0xFE8
 18396                           indf1	equ	0xFE7
 18397                           postinc1	equ	0xFE6
 18398                           postdec1	equ	0xFE5
 18399                           plusw1	equ	0xFE3
 18400                           fsr1h	equ	0xFE2
 18401                           fsr1l	equ	0xFE1
 18402                           indf2	equ	0xFDF
 18403                           postinc2	equ	0xFDE
 18404                           postdec2	equ	0xFDD
 18405                           plusw2	equ	0xFDB
 18406                           fsr2h	equ	0xFDA
 18407                           fsr2l	equ	0xFD9
 18408                           status	equ	0xFD8
 18409                           
 18410 ;; *************** function __i2c_not_acknowledge *****************
 18411 ;; Defined at:
 18412 ;;		line 87 in file "i2c.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;		None
 18415 ;; Auto vars:     Size  Location     Type
 18416 ;;		None
 18417 ;; Return value:  Size  Location     Type
 18418 ;;                  1    wreg      void 
 18419 ;; Registers used:
 18420 ;;		None
 18421 ;; Tracked objects:
 18422 ;;		On entry : 0/0
 18423 ;;		On exit  : 0/0
 18424 ;;		Unchanged: 0/0
 18425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18430 ;;Total ram usage:        0 bytes
 18431 ;; Hardware stack levels used:    1
 18432 ;; Hardware stack levels required when called:   10
 18433 ;; This function calls:
 18434 ;;		Nothing
 18435 ;; This function is called by:
 18436 ;;		__i2c_read
 18437 ;;		_i2c_adc_read
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           	psect	text90
 18442  012DBC                     __ptext90:
 18443                           	opt stack 0
 18444  012DBC                     __i2c_not_acknowledge:
 18445                           	opt stack 15
 18446                           
 18447                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 18448                           
 18449                           ;incstack = 0
 18450  012DBC  8AC5               	bsf	4037,5,c	;volatile
 18451                           
 18452                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 18453  012DBE  88C5               	bsf	4037,4,c	;volatile
 18454  012DC0  A8C5               	btfss	4037,4,c	;volatile
 18455  012DC2  0012               	return	
 18456  012DC4  D7FD               	goto	l1522
 18457  012DC6                     __end_of__i2c_not_acknowledge:
 18458                           	opt stack 0
 18459                           tblptru	equ	0xFF8
 18460                           tblptrh	equ	0xFF7
 18461                           tblptrl	equ	0xFF6
 18462                           tablat	equ	0xFF5
 18463                           prodh	equ	0xFF4
 18464                           prodl	equ	0xFF3
 18465                           intcon	equ	0xFF2
 18466                           intcon2	equ	0xFF1
 18467                           intcon3	equ	0xFF0
 18468                           postinc0	equ	0xFEE
 18469                           wreg	equ	0xFE8
 18470                           indf1	equ	0xFE7
 18471                           postinc1	equ	0xFE6
 18472                           postdec1	equ	0xFE5
 18473                           plusw1	equ	0xFE3
 18474                           fsr1h	equ	0xFE2
 18475                           fsr1l	equ	0xFE1
 18476                           indf2	equ	0xFDF
 18477                           postinc2	equ	0xFDE
 18478                           postdec2	equ	0xFDD
 18479                           plusw2	equ	0xFDB
 18480                           fsr2h	equ	0xFDA
 18481                           fsr2l	equ	0xFD9
 18482                           status	equ	0xFD8
 18483                           
 18484 ;; *************** function __i2c_get *****************
 18485 ;; Defined at:
 18486 ;;		line 64 in file "i2c.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;		None
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;		None
 18491 ;; Return value:  Size  Location     Type
 18492 ;;                  1    wreg      unsigned char 
 18493 ;; Registers used:
 18494 ;;		wreg, status,2
 18495 ;; Tracked objects:
 18496 ;;		On entry : 0/0
 18497 ;;		On exit  : 0/0
 18498 ;;		Unchanged: 0/0
 18499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18504 ;;Total ram usage:        0 bytes
 18505 ;; Hardware stack levels used:    1
 18506 ;; Hardware stack levels required when called:   10
 18507 ;; This function calls:
 18508 ;;		Nothing
 18509 ;; This function is called by:
 18510 ;;		__i2c_read
 18511 ;;		_i2c_adc_read
 18512 ;; This function uses a non-reentrant model
 18513 ;;
 18514                           
 18515                           	psect	text91
 18516  012DC6                     __ptext91:
 18517                           	opt stack 0
 18518  012DC6                     __i2c_get:
 18519                           	opt stack 15
 18520                           
 18521                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 18522                           
 18523                           ;incstack = 0
 18524  012DC6  86C5               	bsf	4037,3,c	;volatile
 18525  012DC8  B6C5               	btfsc	4037,3,c	;volatile
 18526  012DCA  D7FE               	goto	l1504
 18527                           
 18528                           ;i2c.c: 68: return SSP1BUF;
 18529  012DCC  50C9               	movf	4041,w,c	;volatile
 18530  012DCE  0012               	return	
 18531  012DD0                     __end_of__i2c_get:
 18532                           	opt stack 0
 18533                           tblptru	equ	0xFF8
 18534                           tblptrh	equ	0xFF7
 18535                           tblptrl	equ	0xFF6
 18536                           tablat	equ	0xFF5
 18537                           prodh	equ	0xFF4
 18538                           prodl	equ	0xFF3
 18539                           intcon	equ	0xFF2
 18540                           intcon2	equ	0xFF1
 18541                           intcon3	equ	0xFF0
 18542                           postinc0	equ	0xFEE
 18543                           wreg	equ	0xFE8
 18544                           indf1	equ	0xFE7
 18545                           postinc1	equ	0xFE6
 18546                           postdec1	equ	0xFE5
 18547                           plusw1	equ	0xFE3
 18548                           fsr1h	equ	0xFE2
 18549                           fsr1l	equ	0xFE1
 18550                           indf2	equ	0xFDF
 18551                           postinc2	equ	0xFDE
 18552                           postdec2	equ	0xFDD
 18553                           plusw2	equ	0xFDB
 18554                           fsr2h	equ	0xFDA
 18555                           fsr2l	equ	0xFD9
 18556                           status	equ	0xFD8
 18557                           
 18558 ;; *************** function __i2c_acknowledge *****************
 18559 ;; Defined at:
 18560 ;;		line 79 in file "i2c.c"
 18561 ;; Parameters:    Size  Location     Type
 18562 ;;		None
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;		None
 18565 ;; Return value:  Size  Location     Type
 18566 ;;                  1    wreg      void 
 18567 ;; Registers used:
 18568 ;;		None
 18569 ;; Tracked objects:
 18570 ;;		On entry : 0/0
 18571 ;;		On exit  : 0/0
 18572 ;;		Unchanged: 0/0
 18573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18578 ;;Total ram usage:        0 bytes
 18579 ;; Hardware stack levels used:    1
 18580 ;; Hardware stack levels required when called:   10
 18581 ;; This function calls:
 18582 ;;		Nothing
 18583 ;; This function is called by:
 18584 ;;		__i2c_read
 18585 ;;		_i2c_adc_read
 18586 ;; This function uses a non-reentrant model
 18587 ;;
 18588                           
 18589                           	psect	text92
 18590  012DD0                     __ptext92:
 18591                           	opt stack 0
 18592  012DD0                     __i2c_acknowledge:
 18593                           	opt stack 15
 18594                           
 18595                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 18596                           
 18597                           ;incstack = 0
 18598  012DD0  9AC5               	bcf	4037,5,c	;volatile
 18599                           
 18600                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 18601  012DD2  88C5               	bsf	4037,4,c	;volatile
 18602  012DD4  A8C5               	btfss	4037,4,c	;volatile
 18603  012DD6  0012               	return	
 18604  012DD8  D7FD               	goto	l1516
 18605  012DDA                     __end_of__i2c_acknowledge:
 18606                           	opt stack 0
 18607                           tblptru	equ	0xFF8
 18608                           tblptrh	equ	0xFF7
 18609                           tblptrl	equ	0xFF6
 18610                           tablat	equ	0xFF5
 18611                           prodh	equ	0xFF4
 18612                           prodl	equ	0xFF3
 18613                           intcon	equ	0xFF2
 18614                           intcon2	equ	0xFF1
 18615                           intcon3	equ	0xFF0
 18616                           postinc0	equ	0xFEE
 18617                           wreg	equ	0xFE8
 18618                           indf1	equ	0xFE7
 18619                           postinc1	equ	0xFE6
 18620                           postdec1	equ	0xFE5
 18621                           plusw1	equ	0xFE3
 18622                           fsr1h	equ	0xFE2
 18623                           fsr1l	equ	0xFE1
 18624                           indf2	equ	0xFDF
 18625                           postinc2	equ	0xFDE
 18626                           postdec2	equ	0xFDD
 18627                           plusw2	equ	0xFDB
 18628                           fsr2h	equ	0xFDA
 18629                           fsr2l	equ	0xFD9
 18630                           status	equ	0xFD8
 18631                           
 18632 ;; *************** function _display_update *****************
 18633 ;; Defined at:
 18634 ;;		line 174 in file "display.c"
 18635 ;; Parameters:    Size  Location     Type
 18636 ;;		None
 18637 ;; Auto vars:     Size  Location     Type
 18638 ;;		None
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  1    wreg      void 
 18641 ;; Registers used:
 18642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18643 ;; Tracked objects:
 18644 ;;		On entry : 0/0
 18645 ;;		On exit  : 0/0
 18646 ;;		Unchanged: 0/0
 18647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;Total ram usage:        0 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:   14
 18655 ;; This function calls:
 18656 ;;		_i2c_display_cursor
 18657 ;;		_i2c_display_write_fixed
 18658 ;; This function is called by:
 18659 ;;		_main
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text93
 18664  010DCA                     __ptext93:
 18665                           	opt stack 0
 18666  010DCA                     _display_update:
 18667                           	opt stack 16
 18668                           
 18669                           ;display.c: 176: i2c_display_cursor(0, 0);
 18670                           
 18671                           ;incstack = 0
 18672  010DCA  0E00               	movlw	0
 18673  010DCC  0100               	movlb	0	; () banked
 18674  010DCE  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18675  010DD0  0E00               	movlw	0
 18676  010DD2  ECBC  F093         	call	_i2c_display_cursor
 18677                           
 18678                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 18679  010DD6  0E54               	movlw	low _display_content
 18680  010DD8  0100               	movlb	0	; () banked
 18681  010DDA  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18682  010DDC  0E03               	movlw	high _display_content
 18683  010DDE  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18684  010DE0  0E14               	movlw	20
 18685  010DE2  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18686  010DE4  EC5E  F08C         	call	_i2c_display_write_fixed	;wreg free
 18687                           
 18688                           ;display.c: 178: i2c_display_cursor(1, 0);
 18689  010DE8  0E00               	movlw	0
 18690  010DEA  0100               	movlb	0	; () banked
 18691  010DEC  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18692  010DEE  0E01               	movlw	1
 18693  010DF0  ECBC  F093         	call	_i2c_display_cursor
 18694                           
 18695                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 18696  010DF4  0E68               	movlw	low (_display_content+20)
 18697  010DF6  0100               	movlb	0	; () banked
 18698  010DF8  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18699  010DFA  0E03               	movlw	high (_display_content+20)
 18700  010DFC  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18701  010DFE  0E14               	movlw	20
 18702  010E00  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18703  010E02  EC5E  F08C         	call	_i2c_display_write_fixed	;wreg free
 18704                           
 18705                           ;display.c: 180: i2c_display_cursor(2, 0);
 18706  010E06  0E00               	movlw	0
 18707  010E08  0100               	movlb	0	; () banked
 18708  010E0A  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18709  010E0C  0E02               	movlw	2
 18710  010E0E  ECBC  F093         	call	_i2c_display_cursor
 18711                           
 18712                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 18713  010E12  0E7C               	movlw	low (_display_content+40)
 18714  010E14  0100               	movlb	0	; () banked
 18715  010E16  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18716  010E18  0E03               	movlw	high (_display_content+40)
 18717  010E1A  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18718  010E1C  0E14               	movlw	20
 18719  010E1E  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18720  010E20  EC5E  F08C         	call	_i2c_display_write_fixed	;wreg free
 18721                           
 18722                           ;display.c: 182: i2c_display_cursor(3, 0);
 18723  010E24  0E00               	movlw	0
 18724  010E26  0100               	movlb	0	; () banked
 18725  010E28  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18726  010E2A  0E03               	movlw	3
 18727  010E2C  ECBC  F093         	call	_i2c_display_cursor
 18728                           
 18729                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 18730  010E30  0E90               	movlw	low (_display_content+60)
 18731  010E32  0100               	movlb	0	; () banked
 18732  010E34  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18733  010E36  0E03               	movlw	high (_display_content+60)
 18734  010E38  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18735  010E3A  0E14               	movlw	20
 18736  010E3C  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18737  010E3E  EC5E  F08C         	call	_i2c_display_write_fixed	;wreg free
 18738  010E42  0012               	return		;funcret
 18739  010E44                     __end_of_display_update:
 18740                           	opt stack 0
 18741                           tblptru	equ	0xFF8
 18742                           tblptrh	equ	0xFF7
 18743                           tblptrl	equ	0xFF6
 18744                           tablat	equ	0xFF5
 18745                           prodh	equ	0xFF4
 18746                           prodl	equ	0xFF3
 18747                           intcon	equ	0xFF2
 18748                           intcon2	equ	0xFF1
 18749                           intcon3	equ	0xFF0
 18750                           postinc0	equ	0xFEE
 18751                           wreg	equ	0xFE8
 18752                           indf1	equ	0xFE7
 18753                           postinc1	equ	0xFE6
 18754                           postdec1	equ	0xFE5
 18755                           plusw1	equ	0xFE3
 18756                           fsr1h	equ	0xFE2
 18757                           fsr1l	equ	0xFE1
 18758                           indf2	equ	0xFDF
 18759                           postinc2	equ	0xFDE
 18760                           postdec2	equ	0xFDD
 18761                           plusw2	equ	0xFDB
 18762                           fsr2h	equ	0xFDA
 18763                           fsr2l	equ	0xFD9
 18764                           status	equ	0xFD8
 18765                           
 18766 ;; *************** function _i2c_display_write_fixed *****************
 18767 ;; Defined at:
 18768 ;;		line 364 in file "i2c.c"
 18769 ;; Parameters:    Size  Location     Type
 18770 ;;  data            2    5[BANK0 ] PTR unsigned char 
 18771 ;;		 -> display_content(80), 
 18772 ;;  length          1    7[BANK0 ] unsigned char 
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;  pos             1    8[BANK0 ] unsigned char 
 18775 ;; Return value:  Size  Location     Type
 18776 ;;                  1    wreg      void 
 18777 ;; Registers used:
 18778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18779 ;; Tracked objects:
 18780 ;;		On entry : 0/0
 18781 ;;		On exit  : 0/0
 18782 ;;		Unchanged: 0/0
 18783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18784 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18788 ;;Total ram usage:        4 bytes
 18789 ;; Hardware stack levels used:    1
 18790 ;; Hardware stack levels required when called:   11
 18791 ;; This function calls:
 18792 ;;		__i2c_send
 18793 ;;		__i2c_start
 18794 ;;		__i2c_stop
 18795 ;;		__i2c_wait_idle
 18796 ;;		_i2c_set_frequency
 18797 ;; This function is called by:
 18798 ;;		_display_update
 18799 ;; This function uses a non-reentrant model
 18800 ;;
 18801                           
 18802                           	psect	text94
 18803  0118BC                     __ptext94:
 18804                           	opt stack 0
 18805  0118BC                     _i2c_display_write_fixed:
 18806                           	opt stack 18
 18807                           
 18808                           ;i2c.c: 366: uint8_t pos;
 18809                           ;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 18810                           
 18811                           ;incstack = 0
 18812  0118BC  0E00               	movlw	0
 18813  0118BE  EC0F  F088         	call	_i2c_set_frequency
 18814                           
 18815                           ;i2c.c: 371: _i2c_wait_idle();
 18816  0118C2  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18817                           
 18818                           ;i2c.c: 372: _i2c_start();
 18819  0118C6  ECFB  F096         	call	__i2c_start	;wreg free
 18820                           
 18821                           ;i2c.c: 373: _i2c_wait_idle();
 18822  0118CA  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18823                           
 18824                           ;i2c.c: 374: _i2c_send(0b01111000);
 18825  0118CE  0E78               	movlw	120
 18826  0118D0  ECF2  F096         	call	__i2c_send
 18827                           
 18828                           ;i2c.c: 375: _i2c_wait_idle();
 18829  0118D4  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18830                           
 18831                           ;i2c.c: 376: _i2c_send(0b01000000);
 18832  0118D8  0E40               	movlw	64
 18833  0118DA  ECF2  F096         	call	__i2c_send
 18834                           
 18835                           ;i2c.c: 377: _i2c_wait_idle();
 18836  0118DE  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18837                           
 18838                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 18839  0118E2  0E00               	movlw	0
 18840  0118E4  0100               	movlb	0	; () banked
 18841  0118E6  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 18842  0118E8  D00F               	goto	l1585
 18843  0118EA                     
 18844                           ; BSR set to: 0
 18845                           ;i2c.c: 381: {
 18846                           ;i2c.c: 382: _i2c_send(data[pos]);
 18847                           
 18848                           ; BSR set to: 0
 18849  0118EA  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 18850  0118EC  0D01               	mullw	1
 18851  0118EE  50F3               	movf	prodl,w,c
 18852  0118F0  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 18853  0118F2  6ED9               	movwf	fsr2l,c
 18854  0118F4  50F4               	movf	prodh,w,c
 18855  0118F6  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 18856  0118F8  6EDA               	movwf	fsr2h,c
 18857  0118FA  50DF               	movf	indf2,w,c
 18858  0118FC  ECF2  F096         	call	__i2c_send
 18859                           
 18860                           ;i2c.c: 383: _i2c_wait_idle();
 18861  011900  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 18862  011904  0100               	movlb	0	; () banked
 18863  011906  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 18864  011908                     l1585:
 18865                           
 18866                           ; BSR set to: 0
 18867                           
 18868                           ; BSR set to: 0
 18869  011908  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 18870  01190A  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 18871  01190C  A0D8               	btfss	status,0,c
 18872  01190E  D7ED               	goto	l1586
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;i2c.c: 384: }
 18876                           ;i2c.c: 386: _i2c_stop();
 18877                           
 18878                           ; BSR set to: 0
 18879  011910  ECF7  F096         	call	__i2c_stop	;wreg free
 18880  011914  0012               	return		;funcret
 18881  011916                     __end_of_i2c_display_write_fixed:
 18882                           	opt stack 0
 18883                           tblptru	equ	0xFF8
 18884                           tblptrh	equ	0xFF7
 18885                           tblptrl	equ	0xFF6
 18886                           tablat	equ	0xFF5
 18887                           prodh	equ	0xFF4
 18888                           prodl	equ	0xFF3
 18889                           intcon	equ	0xFF2
 18890                           intcon2	equ	0xFF1
 18891                           intcon3	equ	0xFF0
 18892                           postinc0	equ	0xFEE
 18893                           wreg	equ	0xFE8
 18894                           indf1	equ	0xFE7
 18895                           postinc1	equ	0xFE6
 18896                           postdec1	equ	0xFE5
 18897                           plusw1	equ	0xFE3
 18898                           fsr1h	equ	0xFE2
 18899                           fsr1l	equ	0xFE1
 18900                           indf2	equ	0xFDF
 18901                           postinc2	equ	0xFDE
 18902                           postdec2	equ	0xFDD
 18903                           plusw2	equ	0xFDB
 18904                           fsr2h	equ	0xFDA
 18905                           fsr2l	equ	0xFD9
 18906                           status	equ	0xFD8
 18907                           
 18908 ;; *************** function _i2c_display_cursor *****************
 18909 ;; Defined at:
 18910 ;;		line 324 in file "i2c.c"
 18911 ;; Parameters:    Size  Location     Type
 18912 ;;  line            1    wreg     unsigned char 
 18913 ;;  position        1   13[BANK0 ] unsigned char 
 18914 ;; Auto vars:     Size  Location     Type
 18915 ;;  line            1   14[BANK0 ] unsigned char 
 18916 ;;  address         1   15[BANK0 ] unsigned char 
 18917 ;; Return value:  Size  Location     Type
 18918 ;;                  1    wreg      void 
 18919 ;; Registers used:
 18920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18921 ;; Tracked objects:
 18922 ;;		On entry : 0/0
 18923 ;;		On exit  : 0/0
 18924 ;;		Unchanged: 0/0
 18925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18929 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18930 ;;Total ram usage:        3 bytes
 18931 ;; Hardware stack levels used:    1
 18932 ;; Hardware stack levels required when called:   13
 18933 ;; This function calls:
 18934 ;;		__ic2_display_set_address
 18935 ;;		_i2c_set_frequency
 18936 ;; This function is called by:
 18937 ;;		_display_update
 18938 ;; This function uses a non-reentrant model
 18939 ;;
 18940                           
 18941                           	psect	text95
 18942  012778                     __ptext95:
 18943                           	opt stack 0
 18944  012778                     _i2c_display_cursor:
 18945                           	opt stack 16
 18946                           
 18947                           ;incstack = 0
 18948                           ;i2c_display_cursor@line stored from wreg
 18949  012778  0100               	movlb	0	; () banked
 18950  01277A  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 18951                           
 18952                           ;i2c.c: 326: uint8_t address;
 18953                           ;i2c.c: 329: line &= 0b11;
 18954  01277C  0E03               	movlw	3
 18955  01277E  0100               	movlb	0	; () banked
 18956  012780  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 18957                           
 18958                           ;i2c.c: 330: address = line<<5;
 18959  012782  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 18960  012784  46E8               	rlncf	wreg,f,c
 18961  012786  0BE0               	andlw	224
 18962  012788  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 18963                           
 18964                           ;i2c.c: 331: position &= 0b11111;
 18965  01278A  0E1F               	movlw	31
 18966  01278C  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 18967                           
 18968                           ;i2c.c: 332: address |= position;
 18969  01278E  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 18970  012790  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 18971                           
 18972                           ; BSR set to: 0
 18973                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 18974  012792  0E00               	movlw	0
 18975  012794  EC0F  F088         	call	_i2c_set_frequency
 18976                           
 18977                           ;i2c.c: 338: _ic2_display_set_address(address);
 18978  012798  0100               	movlb	0	; () banked
 18979  01279A  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 18980  01279C  EC7B  F093         	call	__ic2_display_set_address
 18981  0127A0  0012               	return		;funcret
 18982  0127A2                     __end_of_i2c_display_cursor:
 18983                           	opt stack 0
 18984                           tblptru	equ	0xFF8
 18985                           tblptrh	equ	0xFF7
 18986                           tblptrl	equ	0xFF6
 18987                           tablat	equ	0xFF5
 18988                           prodh	equ	0xFF4
 18989                           prodl	equ	0xFF3
 18990                           intcon	equ	0xFF2
 18991                           intcon2	equ	0xFF1
 18992                           intcon3	equ	0xFF0
 18993                           postinc0	equ	0xFEE
 18994                           wreg	equ	0xFE8
 18995                           indf1	equ	0xFE7
 18996                           postinc1	equ	0xFE6
 18997                           postdec1	equ	0xFE5
 18998                           plusw1	equ	0xFE3
 18999                           fsr1h	equ	0xFE2
 19000                           fsr1l	equ	0xFE1
 19001                           indf2	equ	0xFDF
 19002                           postinc2	equ	0xFDE
 19003                           postdec2	equ	0xFDD
 19004                           plusw2	equ	0xFDB
 19005                           fsr2h	equ	0xFDA
 19006                           fsr2l	equ	0xFD9
 19007                           status	equ	0xFD8
 19008                           
 19009 ;; *************** function __ic2_display_set_address *****************
 19010 ;; Defined at:
 19011 ;;		line 311 in file "i2c.c"
 19012 ;; Parameters:    Size  Location     Type
 19013 ;;  address         1    wreg     unsigned char 
 19014 ;; Auto vars:     Size  Location     Type
 19015 ;;  address         1   10[BANK0 ] unsigned char 
 19016 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 19017 ;; Return value:  Size  Location     Type
 19018 ;;                  1    wreg      void 
 19019 ;; Registers used:
 19020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19029 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19030 ;;Total ram usage:        3 bytes
 19031 ;; Hardware stack levels used:    1
 19032 ;; Hardware stack levels required when called:   12
 19033 ;; This function calls:
 19034 ;;		__i2c_write
 19035 ;;		_i2c_set_frequency
 19036 ;; This function is called by:
 19037 ;;		_i2c_display_cursor
 19038 ;; This function uses a non-reentrant model
 19039 ;;
 19040                           
 19041                           	psect	text96
 19042  0126F6                     __ptext96:
 19043                           	opt stack 0
 19044  0126F6                     __ic2_display_set_address:
 19045                           	opt stack 16
 19046                           
 19047                           ;incstack = 0
 19048                           ;__ic2_display_set_address@address stored from wreg
 19049  0126F6  0100               	movlb	0	; () banked
 19050  0126F8  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 19051                           
 19052                           ;i2c.c: 313: uint8_t data_array[2];
 19053                           ;i2c.c: 314: data_array[0] = 0b00000000;
 19054  0126FA  0E00               	movlw	0
 19055  0126FC  0100               	movlb	0	; () banked
 19056  0126FE  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 19060  012700  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 19061  012702  0980               	iorlw	128
 19062  012704  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 19063                           
 19064                           ; BSR set to: 0
 19065                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19066  012706  0E00               	movlw	0
 19067  012708  EC0F  F088         	call	_i2c_set_frequency
 19068                           
 19069                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 19070  01270C  0E6B               	movlw	low __ic2_display_set_address@data_array
 19071  01270E  0100               	movlb	0	; () banked
 19072  012710  6F65               	movwf	__i2c_write@data& (0+255),b
 19073  012712  0E00               	movlw	high __ic2_display_set_address@data_array
 19074  012714  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19075  012716  0E02               	movlw	2
 19076  012718  6F67               	movwf	__i2c_write@length& (0+255),b
 19077  01271A  0E78               	movlw	120
 19078  01271C  ECB4  F08E         	call	__i2c_write
 19079  012720  0012               	return		;funcret
 19080  012722                     __end_of__ic2_display_set_address:
 19081                           	opt stack 0
 19082                           tblptru	equ	0xFF8
 19083                           tblptrh	equ	0xFF7
 19084                           tblptrl	equ	0xFF6
 19085                           tablat	equ	0xFF5
 19086                           prodh	equ	0xFF4
 19087                           prodl	equ	0xFF3
 19088                           intcon	equ	0xFF2
 19089                           intcon2	equ	0xFF1
 19090                           intcon3	equ	0xFF0
 19091                           postinc0	equ	0xFEE
 19092                           wreg	equ	0xFE8
 19093                           indf1	equ	0xFE7
 19094                           postinc1	equ	0xFE6
 19095                           postdec1	equ	0xFE5
 19096                           plusw1	equ	0xFE3
 19097                           fsr1h	equ	0xFE2
 19098                           fsr1l	equ	0xFE1
 19099                           indf2	equ	0xFDF
 19100                           postinc2	equ	0xFDE
 19101                           postdec2	equ	0xFDD
 19102                           plusw2	equ	0xFDB
 19103                           fsr2h	equ	0xFDA
 19104                           fsr2l	equ	0xFD9
 19105                           status	equ	0xFD8
 19106                           
 19107 ;; *************** function _display_prepare *****************
 19108 ;; Defined at:
 19109 ;;		line 108 in file "display.c"
 19110 ;; Parameters:    Size  Location     Type
 19111 ;;  mode            1    wreg     unsigned char 
 19112 ;; Auto vars:     Size  Location     Type
 19113 ;;  mode            1  116[BANK0 ] unsigned char 
 19114 ;; Return value:  Size  Location     Type
 19115 ;;                  1    wreg      void 
 19116 ;; Registers used:
 19117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19118 ;; Tracked objects:
 19119 ;;		On entry : 0/0
 19120 ;;		On exit  : 0/0
 19121 ;;		Unchanged: 0/0
 19122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19126 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19127 ;;Total ram usage:        3 bytes
 19128 ;; Hardware stack levels used:    1
 19129 ;; Hardware stack levels required when called:   15
 19130 ;; This function calls:
 19131 ;;		__display_charger
 19132 ;;		__display_clear
 19133 ;;		__display_efficiency
 19134 ;;		__display_inout
 19135 ;;		__display_outputs
 19136 ;;		__display_temperature
 19137 ;;		__display_time
 19138 ;;		__display_usb
 19139 ;; This function is called by:
 19140 ;;		_main
 19141 ;; This function uses a non-reentrant model
 19142 ;;
 19143                           
 19144                           	psect	text97
 19145  010A54                     __ptext97:
 19146                           	opt stack 0
 19147  010A54                     _display_prepare:
 19148                           	opt stack 15
 19149                           
 19150                           ;incstack = 0
 19151                           ;display_prepare@mode stored from wreg
 19152  010A54  0100               	movlb	0	; () banked
 19153  010A56  6FD4               	movwf	display_prepare@mode& (0+255),b
 19154                           
 19155                           ;display.c: 110: _display_clear();
 19156  010A58  ECC6  F08F         	call	__display_clear	;wreg free
 19157                           
 19158                           ;display.c: 112: switch(mode&0xF0)
 19159  010A5C  D01C               	goto	l1935
 19160  010A5E                     
 19161                           ;display.c: 115: _display_inout();
 19162  010A5E  ECBF  F066         	call	__display_inout	;wreg free
 19163                           
 19164                           ;display.c: 116: break;
 19165  010A62  0012               	return	
 19166  010A64                     
 19167                           ;display.c: 118: _display_time(mode);
 19168  010A64  0100               	movlb	0	; () banked
 19169  010A66  51D4               	movf	display_prepare@mode& (0+255),w,b
 19170  010A68  EC43  F04A         	call	__display_time
 19171                           
 19172                           ;display.c: 119: break;
 19173  010A6C  0012               	return	
 19174  010A6E                     
 19175                           ;display.c: 121: _display_usb();
 19176  010A6E  EC64  F06A         	call	__display_usb	;wreg free
 19177                           
 19178                           ;display.c: 122: break;
 19179  010A72  0012               	return	
 19180  010A74                     
 19181                           ;display.c: 124: _display_outputs(mode);
 19182  010A74  0100               	movlb	0	; () banked
 19183  010A76  51D4               	movf	display_prepare@mode& (0+255),w,b
 19184  010A78  ECAB  F064         	call	__display_outputs
 19185                           
 19186                           ;display.c: 125: break;
 19187  010A7C  0012               	return	
 19188  010A7E                     
 19189                           ;display.c: 127: _display_charger();
 19190  010A7E  ECC3  F05B         	call	__display_charger	;wreg free
 19191                           
 19192                           ;display.c: 128: break;
 19193  010A82  0012               	return	
 19194  010A84                     
 19195                           ;display.c: 130: _display_efficiency();
 19196  010A84  EC98  F058         	call	__display_efficiency	;wreg free
 19197                           
 19198                           ;display.c: 131: break;
 19199  010A88  0012               	return	
 19200  010A8A                     
 19201                           ;display.c: 133: _display_temperature();
 19202  010A8A  ECA5  F068         	call	__display_temperature	;wreg free
 19203                           
 19204                           ;display.c: 134: break;
 19205  010A8E  0012               	return	
 19206  010A90                     
 19207                           ;display.c: 136: _display_inout();
 19208  010A90  ECBF  F066         	call	__display_inout	;wreg free
 19209                           
 19210                           ;display.c: 137: }
 19211  010A94  0012               	return	
 19212  010A96                     l1935:
 19213  010A96  0100               	movlb	0	; () banked
 19214  010A98  51D4               	movf	display_prepare@mode& (0+255),w,b
 19215  010A9A  0BF0               	andlw	240
 19216  010A9C  6FD2               	movwf	??_display_prepare& (0+255),b
 19217  010A9E  6BD3               	clrf	(??_display_prepare+1)& (0+255),b
 19218                           
 19219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19220                           ; Switch size 1, requested type "space"
 19221                           ; Number of cases is 1, Range of values is 0 to 0
 19222                           ; switch strategies available:
 19223                           ; Name         Instructions Cycles
 19224                           ; simple_byte            4     3 (average)
 19225                           ;	Chosen strategy is simple_byte
 19226  010AA0  51D3               	movf	(??_display_prepare+1)& (0+255),w,b
 19227  010AA2  0A00               	xorlw	0	; case 0
 19228  010AA4  A4D8               	btfss	status,2,c
 19229  010AA6  D7F4               	goto	l1944
 19230                           
 19231                           ; BSR set to: 0
 19232                           ; Switch size 1, requested type "space"
 19233                           ; Number of cases is 7, Range of values is 0 to 96
 19234                           ; switch strategies available:
 19235                           ; Name         Instructions Cycles
 19236                           ; simple_byte           22    12 (average)
 19237                           ;	Chosen strategy is simple_byte
 19238  010AA8  51D2               	movf	??_display_prepare& (0+255),w,b
 19239  010AAA  0A00               	xorlw	0	; case 0
 19240  010AAC  B4D8               	btfsc	status,2,c
 19241  010AAE  D7D7               	goto	l1936
 19242  010AB0  0A10               	xorlw	16	; case 16
 19243  010AB2  B4D8               	btfsc	status,2,c
 19244  010AB4  D7D7               	goto	l1938
 19245  010AB6  0A30               	xorlw	48	; case 32
 19246  010AB8  B4D8               	btfsc	status,2,c
 19247  010ABA  D7D9               	goto	l1939
 19248  010ABC  0A10               	xorlw	16	; case 48
 19249  010ABE  B4D8               	btfsc	status,2,c
 19250  010AC0  D7D9               	goto	l1940
 19251  010AC2  0A70               	xorlw	112	; case 64
 19252  010AC4  B4D8               	btfsc	status,2,c
 19253  010AC6  D7DB               	goto	l1941
 19254  010AC8  0A10               	xorlw	16	; case 80
 19255  010ACA  B4D8               	btfsc	status,2,c
 19256  010ACC  D7DB               	goto	l1942
 19257  010ACE  0A30               	xorlw	48	; case 96
 19258  010AD0  B4D8               	btfsc	status,2,c
 19259  010AD2  D7DB               	goto	l1943
 19260  010AD4  D7DD               	goto	l1944
 19261  010AD6                     __end_of_display_prepare:
 19262                           	opt stack 0
 19263                           tblptru	equ	0xFF8
 19264                           tblptrh	equ	0xFF7
 19265                           tblptrl	equ	0xFF6
 19266                           tablat	equ	0xFF5
 19267                           prodh	equ	0xFF4
 19268                           prodl	equ	0xFF3
 19269                           intcon	equ	0xFF2
 19270                           intcon2	equ	0xFF1
 19271                           intcon3	equ	0xFF0
 19272                           postinc0	equ	0xFEE
 19273                           wreg	equ	0xFE8
 19274                           indf1	equ	0xFE7
 19275                           postinc1	equ	0xFE6
 19276                           postdec1	equ	0xFE5
 19277                           plusw1	equ	0xFE3
 19278                           fsr1h	equ	0xFE2
 19279                           fsr1l	equ	0xFE1
 19280                           indf2	equ	0xFDF
 19281                           postinc2	equ	0xFDE
 19282                           postdec2	equ	0xFDD
 19283                           plusw2	equ	0xFDB
 19284                           fsr2h	equ	0xFDA
 19285                           fsr2l	equ	0xFD9
 19286                           status	equ	0xFD8
 19287                           
 19288 ;; *************** function __display_usb *****************
 19289 ;; Defined at:
 19290 ;;		line 303 in file "display.c"
 19291 ;; Parameters:    Size  Location     Type
 19292 ;;		None
 19293 ;; Auto vars:     Size  Location     Type
 19294 ;;  header         20    0[BANK0 ] const unsigned char [20]
 19295 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 19296 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 19297 ;;  low            16   37[BANK0 ] const unsigned char [16]
 19298 ;;  cntr            1   69[BANK0 ] unsigned char 
 19299 ;; Return value:  Size  Location     Type
 19300 ;;                  1    wreg      void 
 19301 ;; Registers used:
 19302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19303 ;; Tracked objects:
 19304 ;;		On entry : 0/0
 19305 ;;		On exit  : 0/0
 19306 ;;		Unchanged: 0/0
 19307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19309 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19311 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19312 ;;Total ram usage:       70 bytes
 19313 ;; Hardware stack levels used:    1
 19314 ;; Hardware stack levels required when called:   10
 19315 ;; This function calls:
 19316 ;;		Nothing
 19317 ;; This function is called by:
 19318 ;;		_display_prepare
 19319 ;; This function uses a non-reentrant model
 19320 ;;
 19321                           
 19322                           	psect	text98
 19323  00D4C8                     __ptext98:
 19324                           	opt stack 0
 19325  00D4C8                     __display_usb:
 19326                           	opt stack 19
 19327                           
 19328                           ;display.c: 305: uint8_t cntr;
 19329                           ;display.c: 306: const char header[] = "USB Charger Outputs";
 19330                           
 19331                           ;incstack = 0
 19332  00D4C8  0E27               	movlw	low __display_usb@F8718
 19333  00D4CA  6EF6               	movwf	tblptrl,c
 19334  00D4CC                     	if	1	;There is more than 1 active tblptr byte
 19335  00D4CC  0E91               	movlw	high __display_usb@F8718
 19336  00D4CE  6EF7               	movwf	tblptrh,c
 19337  00D4D0                     	endif
 19338  00D4D0                     	if	1	;There are 3 active tblptr bytes
 19339  00D4D0  0E00               	movlw	low (__display_usb@F8718 shr (0+16))
 19340  00D4D2  6EF8               	movwf	tblptru,c
 19341  00D4D4                     	endif
 19342  00D4D4  EE20  F060         	lfsr	2,__display_usb@header
 19343  00D4D8  0E13               	movlw	19
 19344  00D4DA                     u13440:
 19345  00D4DA  0009               	tblrd		*+
 19346  00D4DC  CFF5 FFDE          	movff	tablat,postinc2
 19347  00D4E0  06E8               	decf	wreg,f,c
 19348  00D4E2  E2FB               	bc	u13440
 19349                           
 19350                           ;display.c: 307: const char low[] = "Battery too low";
 19351  00D4E4  0E4B               	movlw	low __display_usb@F8720
 19352  00D4E6  6EF6               	movwf	tblptrl,c
 19353  00D4E8                     	if	1	;There is more than 1 active tblptr byte
 19354  00D4E8  0E92               	movlw	high __display_usb@F8720
 19355  00D4EA  6EF7               	movwf	tblptrh,c
 19356  00D4EC                     	endif
 19357  00D4EC                     	if	1	;There are 3 active tblptr bytes
 19358  00D4EC  0E00               	movlw	low (__display_usb@F8720 shr (0+16))
 19359  00D4EE  6EF8               	movwf	tblptru,c
 19360  00D4F0                     	endif
 19361  00D4F0  EE20  F085         	lfsr	2,__display_usb@low
 19362  00D4F4  0E0F               	movlw	15
 19363  00D4F6                     u13450:
 19364  00D4F6  0009               	tblrd		*+
 19365  00D4F8  CFF5 FFDE          	movff	tablat,postinc2
 19366  00D4FC  06E8               	decf	wreg,f,c
 19367  00D4FE  E2FB               	bc	u13450
 19368                           
 19369                           ;display.c: 308: const char usb_on[] = "USB charging on";
 19370  00D500  0E3B               	movlw	low __display_usb@F8722
 19371  00D502  6EF6               	movwf	tblptrl,c
 19372  00D504                     	if	1	;There is more than 1 active tblptr byte
 19373  00D504  0E92               	movlw	high __display_usb@F8722
 19374  00D506  6EF7               	movwf	tblptrh,c
 19375  00D508                     	endif
 19376  00D508                     	if	1	;There are 3 active tblptr bytes
 19377  00D508  0E00               	movlw	low (__display_usb@F8722 shr (0+16))
 19378  00D50A  6EF8               	movwf	tblptru,c
 19379  00D50C                     	endif
 19380  00D50C  EE20  F095         	lfsr	2,__display_usb@usb_on
 19381  00D510  0E0F               	movlw	15
 19382  00D512                     u13460:
 19383  00D512  0009               	tblrd		*+
 19384  00D514  CFF5 FFDE          	movff	tablat,postinc2
 19385  00D518  06E8               	decf	wreg,f,c
 19386  00D51A  E2FB               	bc	u13460
 19387                           
 19388                           ;display.c: 309: const char usb_off[] = "USB charging off";
 19389  00D51C  0E0A               	movlw	low __display_usb@F8724
 19390  00D51E  6EF6               	movwf	tblptrl,c
 19391  00D520                     	if	1	;There is more than 1 active tblptr byte
 19392  00D520  0E92               	movlw	high __display_usb@F8724
 19393  00D522  6EF7               	movwf	tblptrh,c
 19394  00D524                     	endif
 19395  00D524                     	if	1	;There are 3 active tblptr bytes
 19396  00D524  0E00               	movlw	low (__display_usb@F8724 shr (0+16))
 19397  00D526  6EF8               	movwf	tblptru,c
 19398  00D528                     	endif
 19399  00D528  EE20  F074         	lfsr	2,__display_usb@usb_off
 19400  00D52C  0E10               	movlw	16
 19401  00D52E                     u13470:
 19402  00D52E  0009               	tblrd		*+
 19403  00D530  CFF5 FFDE          	movff	tablat,postinc2
 19404  00D534  06E8               	decf	wreg,f,c
 19405  00D536  E2FB               	bc	u13470
 19406                           
 19407                           ;display.c: 312: cntr = 0;
 19408  00D538  0E00               	movlw	0
 19409  00D53A  0100               	movlb	0	; () banked
 19410  00D53C  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19411                           
 19412                           ;display.c: 313: while(header[cntr])
 19413  00D53E  D013               	goto	l2067
 19414  00D540                     
 19415                           ; BSR set to: 0
 19416                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 19417                           
 19418                           ; BSR set to: 0
 19419  00D540  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19420  00D542  0D01               	mullw	1
 19421  00D544  0E60               	movlw	low __display_usb@header
 19422  00D546  24F3               	addwf	prodl,w,c
 19423  00D548  6ED9               	movwf	fsr2l,c
 19424  00D54A  0E00               	movlw	high __display_usb@header
 19425  00D54C  20F4               	addwfc	prodh,w,c
 19426  00D54E  6EDA               	movwf	fsr2h,c
 19427  00D550  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19428  00D552  0D01               	mullw	1
 19429  00D554  0E54               	movlw	low _display_content
 19430  00D556  24F3               	addwf	prodl,w,c
 19431  00D558  6EE1               	movwf	fsr1l,c
 19432  00D55A  0E03               	movlw	high _display_content
 19433  00D55C  20F4               	addwfc	prodh,w,c
 19434  00D55E  6EE2               	movwf	fsr1h,c
 19435  00D560  CFDF FFE7          	movff	indf2,indf1
 19436                           
 19437                           ; BSR set to: 0
 19438  00D564  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19439  00D566                     l2067:
 19440                           
 19441                           ; BSR set to: 0
 19442                           
 19443                           ; BSR set to: 0
 19444  00D566  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19445  00D568  0D01               	mullw	1
 19446  00D56A  0E60               	movlw	low __display_usb@header
 19447  00D56C  24F3               	addwf	prodl,w,c
 19448  00D56E  6ED9               	movwf	fsr2l,c
 19449  00D570  0E00               	movlw	high __display_usb@header
 19450  00D572  20F4               	addwfc	prodh,w,c
 19451  00D574  6EDA               	movwf	fsr2h,c
 19452  00D576  50DF               	movf	indf2,w,c
 19453  00D578  A4D8               	btfss	status,2,c
 19454  00D57A  D7E2               	goto	l2068
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;display.c: 316: if(os.output_voltage<12000)
 19458                           
 19459                           ; BSR set to: 0
 19460  00D57C  0102               	movlb	2	; () banked
 19461  00D57E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 19462  00D580  D006               	goto	u13490
 19463  00D582  0EE0               	movlw	224
 19464  00D584  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 19465  00D586  0E2E               	movlw	46
 19466  00D588  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 19467  00D58A  B0D8               	btfsc	status,0,c
 19468  00D58C  D022               	goto	u13500
 19469  00D58E                     u13490:
 19470                           
 19471                           ; BSR set to: 2
 19472                           ;display.c: 317: {
 19473                           ;display.c: 318: cntr = 0;
 19474  00D58E  0E00               	movlw	0
 19475  00D590  0100               	movlb	0	; () banked
 19476  00D592  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19477                           
 19478                           ;display.c: 319: while(low[cntr])
 19479  00D594  D013               	goto	l2071
 19480  00D596                     
 19481                           ; BSR set to: 0
 19482                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 19483                           
 19484                           ; BSR set to: 0
 19485  00D596  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19486  00D598  0D01               	mullw	1
 19487  00D59A  0E85               	movlw	low __display_usb@low
 19488  00D59C  24F3               	addwf	prodl,w,c
 19489  00D59E  6ED9               	movwf	fsr2l,c
 19490  00D5A0  0E00               	movlw	high __display_usb@low
 19491  00D5A2  20F4               	addwfc	prodh,w,c
 19492  00D5A4  6EDA               	movwf	fsr2h,c
 19493  00D5A6  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19494  00D5A8  0D01               	mullw	1
 19495  00D5AA  0E7C               	movlw	low (_display_content+40)
 19496  00D5AC  24F3               	addwf	prodl,w,c
 19497  00D5AE  6EE1               	movwf	fsr1l,c
 19498  00D5B0  0E03               	movlw	high (_display_content+40)
 19499  00D5B2  20F4               	addwfc	prodh,w,c
 19500  00D5B4  6EE2               	movwf	fsr1h,c
 19501  00D5B6  CFDF FFE7          	movff	indf2,indf1
 19502                           
 19503                           ; BSR set to: 0
 19504  00D5BA  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19505  00D5BC                     l2071:
 19506                           
 19507                           ; BSR set to: 0
 19508                           
 19509                           ; BSR set to: 0
 19510  00D5BC  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19511  00D5BE  0D01               	mullw	1
 19512  00D5C0  0E85               	movlw	low __display_usb@low
 19513  00D5C2  24F3               	addwf	prodl,w,c
 19514  00D5C4  6ED9               	movwf	fsr2l,c
 19515  00D5C6  0E00               	movlw	high __display_usb@low
 19516  00D5C8  20F4               	addwfc	prodh,w,c
 19517  00D5CA  6EDA               	movwf	fsr2h,c
 19518  00D5CC  50DF               	movf	indf2,w,c
 19519  00D5CE  A4D8               	btfss	status,2,c
 19520  00D5D0  D7E2               	goto	l2072
 19521  00D5D2                     u13500:
 19522                           
 19523                           ;display.c: 321: }
 19524                           ;display.c: 323: cntr = 0;
 19525                           
 19526                           ; BSR set to: 0
 19527                           
 19528                           ; BSR set to: 0
 19529  00D5D2  0E00               	movlw	0
 19530  00D5D4  0100               	movlb	0	; () banked
 19531  00D5D6  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;display.c: 324: if(LATDbits.LD3)
 19535  00D5D8  B68C               	btfsc	3980,3,c	;volatile
 19536  00D5DA  D014               	goto	l2075
 19537  00D5DC  D032               	goto	l2079
 19538  00D5DE                     
 19539                           ; BSR set to: 0
 19540                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 19541                           
 19542                           ; BSR set to: 0
 19543  00D5DE  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19544  00D5E0  0D01               	mullw	1
 19545  00D5E2  0E95               	movlw	low __display_usb@usb_on
 19546  00D5E4  24F3               	addwf	prodl,w,c
 19547  00D5E6  6ED9               	movwf	fsr2l,c
 19548  00D5E8  0E00               	movlw	high __display_usb@usb_on
 19549  00D5EA  20F4               	addwfc	prodh,w,c
 19550  00D5EC  6EDA               	movwf	fsr2h,c
 19551  00D5EE  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19552  00D5F0  0D01               	mullw	1
 19553  00D5F2  0E90               	movlw	low (_display_content+60)
 19554  00D5F4  24F3               	addwf	prodl,w,c
 19555  00D5F6  6EE1               	movwf	fsr1l,c
 19556  00D5F8  0E03               	movlw	high (_display_content+60)
 19557  00D5FA  20F4               	addwfc	prodh,w,c
 19558  00D5FC  6EE2               	movwf	fsr1h,c
 19559  00D5FE  CFDF FFE7          	movff	indf2,indf1
 19560                           
 19561                           ; BSR set to: 0
 19562  00D602  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19563  00D604                     l2075:
 19564                           
 19565                           ; BSR set to: 0
 19566                           
 19567                           ; BSR set to: 0
 19568  00D604  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19569  00D606  0D01               	mullw	1
 19570  00D608  0E95               	movlw	low __display_usb@usb_on
 19571  00D60A  24F3               	addwf	prodl,w,c
 19572  00D60C  6ED9               	movwf	fsr2l,c
 19573  00D60E  0E00               	movlw	high __display_usb@usb_on
 19574  00D610  20F4               	addwfc	prodh,w,c
 19575  00D612  6EDA               	movwf	fsr2h,c
 19576  00D614  50DF               	movf	indf2,w,c
 19577  00D616  B4D8               	btfsc	status,2,c
 19578  00D618  0012               	return	
 19579  00D61A  D7E1               	goto	l2076
 19580  00D61C                     
 19581                           ; BSR set to: 0
 19582                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 19583                           
 19584                           ; BSR set to: 0
 19585  00D61C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19586  00D61E  0D01               	mullw	1
 19587  00D620  0E74               	movlw	low __display_usb@usb_off
 19588  00D622  24F3               	addwf	prodl,w,c
 19589  00D624  6ED9               	movwf	fsr2l,c
 19590  00D626  0E00               	movlw	high __display_usb@usb_off
 19591  00D628  20F4               	addwfc	prodh,w,c
 19592  00D62A  6EDA               	movwf	fsr2h,c
 19593  00D62C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19594  00D62E  0D01               	mullw	1
 19595  00D630  0E90               	movlw	low (_display_content+60)
 19596  00D632  24F3               	addwf	prodl,w,c
 19597  00D634  6EE1               	movwf	fsr1l,c
 19598  00D636  0E03               	movlw	high (_display_content+60)
 19599  00D638  20F4               	addwfc	prodh,w,c
 19600  00D63A  6EE2               	movwf	fsr1h,c
 19601  00D63C  CFDF FFE7          	movff	indf2,indf1
 19602                           
 19603                           ; BSR set to: 0
 19604  00D640  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19605  00D642                     l2079:
 19606                           
 19607                           ; BSR set to: 0
 19608                           
 19609                           ; BSR set to: 0
 19610  00D642  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19611  00D644  0D01               	mullw	1
 19612  00D646  0E74               	movlw	low __display_usb@usb_off
 19613  00D648  24F3               	addwf	prodl,w,c
 19614  00D64A  6ED9               	movwf	fsr2l,c
 19615  00D64C  0E00               	movlw	high __display_usb@usb_off
 19616  00D64E  20F4               	addwfc	prodh,w,c
 19617  00D650  6EDA               	movwf	fsr2h,c
 19618  00D652  50DF               	movf	indf2,w,c
 19619  00D654  B4D8               	btfsc	status,2,c
 19620  00D656  0012               	return	
 19621  00D658  D7E1               	goto	l2080
 19622  00D65A                     __end_of__display_usb:
 19623                           	opt stack 0
 19624                           tblptru	equ	0xFF8
 19625                           tblptrh	equ	0xFF7
 19626                           tblptrl	equ	0xFF6
 19627                           tablat	equ	0xFF5
 19628                           prodh	equ	0xFF4
 19629                           prodl	equ	0xFF3
 19630                           intcon	equ	0xFF2
 19631                           intcon2	equ	0xFF1
 19632                           intcon3	equ	0xFF0
 19633                           postinc0	equ	0xFEE
 19634                           wreg	equ	0xFE8
 19635                           indf1	equ	0xFE7
 19636                           postinc1	equ	0xFE6
 19637                           postdec1	equ	0xFE5
 19638                           plusw1	equ	0xFE3
 19639                           fsr1h	equ	0xFE2
 19640                           fsr1l	equ	0xFE1
 19641                           indf2	equ	0xFDF
 19642                           postinc2	equ	0xFDE
 19643                           postdec2	equ	0xFDD
 19644                           plusw2	equ	0xFDB
 19645                           fsr2h	equ	0xFDA
 19646                           fsr2l	equ	0xFD9
 19647                           status	equ	0xFD8
 19648                           
 19649 ;; *************** function __display_time *****************
 19650 ;; Defined at:
 19651 ;;		line 186 in file "display.c"
 19652 ;; Parameters:    Size  Location     Type
 19653 ;;  mode            1    wreg     unsigned char 
 19654 ;; Auto vars:     Size  Location     Type
 19655 ;;  mode            1  203[BANK1 ] unsigned char 
 19656 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 19657 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 19658 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 19659 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 19660 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 19661 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 19662 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 19663 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 19664 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 19665 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 19666 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 19667 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 19668 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 19669 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 19670 ;;  cntr            1  210[BANK1 ] unsigned char 
 19671 ;;  seconds         1  209[BANK1 ] unsigned char 
 19672 ;;  minutes         1  208[BANK1 ] unsigned char 
 19673 ;;  hours           1  207[BANK1 ] unsigned char 
 19674 ;;  day             1  206[BANK1 ] unsigned char 
 19675 ;;  month           1  205[BANK1 ] unsigned char 
 19676 ;;  year            1  204[BANK1 ] unsigned char 
 19677 ;; Return value:  Size  Location     Type
 19678 ;;                  1    wreg      void 
 19679 ;; Registers used:
 19680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19681 ;; Tracked objects:
 19682 ;;		On entry : 0/0
 19683 ;;		On exit  : 0/0
 19684 ;;		Unchanged: 0/0
 19685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19687 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19689 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19690 ;;Total ram usage:      211 bytes
 19691 ;; Hardware stack levels used:    1
 19692 ;; Hardware stack levels required when called:   11
 19693 ;; This function calls:
 19694 ;;		_rtcc_get_day
 19695 ;;		_rtcc_get_hours
 19696 ;;		_rtcc_get_minutes
 19697 ;;		_rtcc_get_month
 19698 ;;		_rtcc_get_seconds
 19699 ;;		_rtcc_get_year
 19700 ;; This function is called by:
 19701 ;;		_display_prepare
 19702 ;; This function uses a non-reentrant model
 19703 ;;
 19704                           
 19705                           	psect	text99
 19706  009486                     __ptext99:
 19707                           	opt stack 0
 19708  009486                     __display_time:
 19709                           	opt stack 18
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;incstack = 0
 19713                           ;__display_time@mode stored from wreg
 19714  009486  0101               	movlb	1	; () banked
 19715  009488  6FCB               	movwf	__display_time@mode& (0+255),b
 19716                           
 19717                           ;display.c: 188: const char tad[] = "Time and Date";
 19718  00948A  0E97               	movlw	low __display_time@F8681
 19719  00948C  6EF6               	movwf	tblptrl,c
 19720  00948E                     	if	1	;There is more than 1 active tblptr byte
 19721  00948E  0E92               	movlw	high __display_time@F8681
 19722  009490  6EF7               	movwf	tblptrh,c
 19723  009492                     	endif
 19724  009492                     	if	1	;There are 3 active tblptr bytes
 19725  009492  0E00               	movlw	low (__display_time@F8681 shr (0+16))
 19726  009494  6EF8               	movwf	tblptru,c
 19727  009496                     	endif
 19728  009496  EE21  F080         	lfsr	2,__display_time@tad
 19729  00949A  0E0D               	movlw	13
 19730  00949C                     u13160:
 19731  00949C  0009               	tblrd		*+
 19732  00949E  CFF5 FFDE          	movff	tablat,postinc2
 19733  0094A2  06E8               	decf	wreg,f,c
 19734  0094A4  E2FB               	bc	u13160
 19735                           
 19736                           ;display.c: 189: const char setyear[] = "Set year";
 19737  0094A6  0E0E               	movlw	low __display_time@F8683
 19738  0094A8  6EF6               	movwf	tblptrl,c
 19739  0094AA                     	if	1	;There is more than 1 active tblptr byte
 19740  0094AA  0E93               	movlw	high __display_time@F8683
 19741  0094AC  6EF7               	movwf	tblptrh,c
 19742  0094AE                     	endif
 19743  0094AE                     	if	1	;There are 3 active tblptr bytes
 19744  0094AE  0E00               	movlw	low (__display_time@F8683 shr (0+16))
 19745  0094B0  6EF8               	movwf	tblptru,c
 19746  0094B2                     	endif
 19747  0094B2  EE21  F0BA         	lfsr	2,__display_time@setyear
 19748  0094B6  0E08               	movlw	8
 19749  0094B8                     u13170:
 19750  0094B8  0009               	tblrd		*+
 19751  0094BA  CFF5 FFDE          	movff	tablat,postinc2
 19752  0094BE  06E8               	decf	wreg,f,c
 19753  0094C0  E2FB               	bc	u13170
 19754                           
 19755                           ;display.c: 190: const char setmonth[] = "Set month";
 19756  0094C2  0E04               	movlw	low __display_time@F8685
 19757  0094C4  6EF6               	movwf	tblptrl,c
 19758  0094C6                     	if	1	;There is more than 1 active tblptr byte
 19759  0094C6  0E93               	movlw	high __display_time@F8685
 19760  0094C8  6EF7               	movwf	tblptrh,c
 19761  0094CA                     	endif
 19762  0094CA                     	if	1	;There are 3 active tblptr bytes
 19763  0094CA  0E00               	movlw	low (__display_time@F8685 shr (0+16))
 19764  0094CC  6EF8               	movwf	tblptru,c
 19765  0094CE                     	endif
 19766  0094CE  EE21  F0A6         	lfsr	2,__display_time@setmonth
 19767  0094D2  0E09               	movlw	9
 19768  0094D4                     u13180:
 19769  0094D4  0009               	tblrd		*+
 19770  0094D6  CFF5 FFDE          	movff	tablat,postinc2
 19771  0094DA  06E8               	decf	wreg,f,c
 19772  0094DC  E2FB               	bc	u13180
 19773                           
 19774                           ;display.c: 191: const char setday[] = "Set day";
 19775  0094DE  0E1F               	movlw	low __display_time@F8687
 19776  0094E0  6EF6               	movwf	tblptrl,c
 19777  0094E2                     	if	1	;There is more than 1 active tblptr byte
 19778  0094E2  0E93               	movlw	high __display_time@F8687
 19779  0094E4  6EF7               	movwf	tblptrh,c
 19780  0094E6                     	endif
 19781  0094E6                     	if	1	;There are 3 active tblptr bytes
 19782  0094E6  0E00               	movlw	low (__display_time@F8687 shr (0+16))
 19783  0094E8  6EF8               	movwf	tblptru,c
 19784  0094EA                     	endif
 19785  0094EA  EE21  F0C3         	lfsr	2,__display_time@setday
 19786  0094EE  0E07               	movlw	7
 19787  0094F0                     u13190:
 19788  0094F0  0009               	tblrd		*+
 19789  0094F2  CFF5 FFDE          	movff	tablat,postinc2
 19790  0094F6  06E8               	decf	wreg,f,c
 19791  0094F8  E2FB               	bc	u13190
 19792                           
 19793                           ;display.c: 192: const char sethours[] = "Set hours";
 19794  0094FA  0EFA               	movlw	low __display_time@F8689
 19795  0094FC  6EF6               	movwf	tblptrl,c
 19796  0094FE                     	if	1	;There is more than 1 active tblptr byte
 19797  0094FE  0E92               	movlw	high __display_time@F8689
 19798  009500  6EF7               	movwf	tblptrh,c
 19799  009502                     	endif
 19800  009502                     	if	1	;There are 3 active tblptr bytes
 19801  009502  0E00               	movlw	low (__display_time@F8689 shr (0+16))
 19802  009504  6EF8               	movwf	tblptru,c
 19803  009506                     	endif
 19804  009506  EE21  F0B0         	lfsr	2,__display_time@sethours
 19805  00950A  0E09               	movlw	9
 19806  00950C                     u13200:
 19807  00950C  0009               	tblrd		*+
 19808  00950E  CFF5 FFDE          	movff	tablat,postinc2
 19809  009512  06E8               	decf	wreg,f,c
 19810  009514  E2FB               	bc	u13200
 19811                           
 19812                           ;display.c: 193: const char setminutes[] = "Set minutes";
 19813  009516  0EE3               	movlw	low __display_time@F8691
 19814  009518  6EF6               	movwf	tblptrl,c
 19815  00951A                     	if	1	;There is more than 1 active tblptr byte
 19816  00951A  0E92               	movlw	high __display_time@F8691
 19817  00951C  6EF7               	movwf	tblptrh,c
 19818  00951E                     	endif
 19819  00951E                     	if	1	;There are 3 active tblptr bytes
 19820  00951E  0E00               	movlw	low (__display_time@F8691 shr (0+16))
 19821  009520  6EF8               	movwf	tblptru,c
 19822  009522                     	endif
 19823  009522  EE21  F08E         	lfsr	2,__display_time@setminutes
 19824  009526  0E0B               	movlw	11
 19825  009528                     u13210:
 19826  009528  0009               	tblrd		*+
 19827  00952A  CFF5 FFDE          	movff	tablat,postinc2
 19828  00952E  06E8               	decf	wreg,f,c
 19829  009530  E2FB               	bc	u13210
 19830                           
 19831                           ;display.c: 194: const char setseconds[] = "Set seconds";
 19832  009532  0ED7               	movlw	low __display_time@F8693
 19833  009534  6EF6               	movwf	tblptrl,c
 19834  009536                     	if	1	;There is more than 1 active tblptr byte
 19835  009536  0E92               	movlw	high __display_time@F8693
 19836  009538  6EF7               	movwf	tblptrh,c
 19837  00953A                     	endif
 19838  00953A                     	if	1	;There are 3 active tblptr bytes
 19839  00953A  0E00               	movlw	low (__display_time@F8693 shr (0+16))
 19840  00953C  6EF8               	movwf	tblptru,c
 19841  00953E                     	endif
 19842  00953E  EE21  F09A         	lfsr	2,__display_time@setseconds
 19843  009542  0E0B               	movlw	11
 19844  009544                     u13220:
 19845  009544  0009               	tblrd		*+
 19846  009546  CFF5 FFDE          	movff	tablat,postinc2
 19847  00954A  06E8               	decf	wreg,f,c
 19848  00954C  E2FB               	bc	u13220
 19849                           
 19850                           ;display.c: 195: const char pts[] = "->Press to set time";
 19851  00954E  0E63               	movlw	low __display_time@F8695
 19852  009550  6EF6               	movwf	tblptrl,c
 19853  009552                     	if	1	;There is more than 1 active tblptr byte
 19854  009552  0E91               	movlw	high __display_time@F8695
 19855  009554  6EF7               	movwf	tblptrh,c
 19856  009556                     	endif
 19857  009556                     	if	1	;There are 3 active tblptr bytes
 19858  009556  0E00               	movlw	low (__display_time@F8695 shr (0+16))
 19859  009558  6EF8               	movwf	tblptru,c
 19860  00955A                     	endif
 19861  00955A  EE21  F000         	lfsr	2,__display_time@pts
 19862  00955E  0E13               	movlw	19
 19863  009560                     u13230:
 19864  009560  0009               	tblrd		*+
 19865  009562  CFF5 FFDE          	movff	tablat,postinc2
 19866  009566  06E8               	decf	wreg,f,c
 19867  009568  E2FB               	bc	u13230
 19868                           
 19869                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 19870  00956A  0ED4               	movlw	low __display_time@F8697
 19871  00956C  6EF6               	movwf	tblptrl,c
 19872  00956E                     	if	1	;There is more than 1 active tblptr byte
 19873  00956E  0E91               	movlw	high __display_time@F8697
 19874  009570  6EF7               	movwf	tblptrh,c
 19875  009572                     	endif
 19876  009572                     	if	1	;There are 3 active tblptr bytes
 19877  009572  0E00               	movlw	low (__display_time@F8697 shr (0+16))
 19878  009574  6EF8               	movwf	tblptru,c
 19879  009576                     	endif
 19880  009576  EE21  F03C         	lfsr	2,__display_time@pressmonth
 19881  00957A  0E11               	movlw	17
 19882  00957C                     u13240:
 19883  00957C  0009               	tblrd		*+
 19884  00957E  CFF5 FFDE          	movff	tablat,postinc2
 19885  009582  06E8               	decf	wreg,f,c
 19886  009584  E2FB               	bc	u13240
 19887                           
 19888                           ;display.c: 197: const char pressday[] = "->Press for day";
 19889  009586  0E6B               	movlw	low __display_time@F8699
 19890  009588  6EF6               	movwf	tblptrl,c
 19891  00958A                     	if	1	;There is more than 1 active tblptr byte
 19892  00958A  0E92               	movlw	high __display_time@F8699
 19893  00958C  6EF7               	movwf	tblptrh,c
 19894  00958E                     	endif
 19895  00958E                     	if	1	;There are 3 active tblptr bytes
 19896  00958E  0E00               	movlw	low (__display_time@F8699 shr (0+16))
 19897  009590  6EF8               	movwf	tblptru,c
 19898  009592                     	endif
 19899  009592  EE21  F060         	lfsr	2,__display_time@pressday
 19900  009596  0E0F               	movlw	15
 19901  009598                     u13250:
 19902  009598  0009               	tblrd		*+
 19903  00959A  CFF5 FFDE          	movff	tablat,postinc2
 19904  00959E  06E8               	decf	wreg,f,c
 19905  0095A0  E2FB               	bc	u13250
 19906                           
 19907                           ;display.c: 198: const char presshours[] = "->Press for hours";
 19908  0095A2  0EC2               	movlw	low __display_time@F8701
 19909  0095A4  6EF6               	movwf	tblptrl,c
 19910  0095A6                     	if	1	;There is more than 1 active tblptr byte
 19911  0095A6  0E91               	movlw	high __display_time@F8701
 19912  0095A8  6EF7               	movwf	tblptrh,c
 19913  0095AA                     	endif
 19914  0095AA                     	if	1	;There are 3 active tblptr bytes
 19915  0095AA  0E00               	movlw	low (__display_time@F8701 shr (0+16))
 19916  0095AC  6EF8               	movwf	tblptru,c
 19917  0095AE                     	endif
 19918  0095AE  EE21  F04E         	lfsr	2,__display_time@presshours
 19919  0095B2  0E11               	movlw	17
 19920  0095B4                     u13260:
 19921  0095B4  0009               	tblrd		*+
 19922  0095B6  CFF5 FFDE          	movff	tablat,postinc2
 19923  0095BA  06E8               	decf	wreg,f,c
 19924  0095BC  E2FB               	bc	u13260
 19925                           
 19926                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 19927  0095BE  0E4F               	movlw	low __display_time@F8703
 19928  0095C0  6EF6               	movwf	tblptrl,c
 19929  0095C2                     	if	1	;There is more than 1 active tblptr byte
 19930  0095C2  0E91               	movlw	high __display_time@F8703
 19931  0095C4  6EF7               	movwf	tblptrh,c
 19932  0095C6                     	endif
 19933  0095C6                     	if	1	;There are 3 active tblptr bytes
 19934  0095C6  0E00               	movlw	low (__display_time@F8703 shr (0+16))
 19935  0095C8  6EF8               	movwf	tblptru,c
 19936  0095CA                     	endif
 19937  0095CA  EE21  F014         	lfsr	2,__display_time@pressminutes
 19938  0095CE  0E13               	movlw	19
 19939  0095D0                     u13270:
 19940  0095D0  0009               	tblrd		*+
 19941  0095D2  CFF5 FFDE          	movff	tablat,postinc2
 19942  0095D6  06E8               	decf	wreg,f,c
 19943  0095D8  E2FB               	bc	u13270
 19944                           
 19945                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 19946  0095DA  0E3B               	movlw	low __display_time@F8705
 19947  0095DC  6EF6               	movwf	tblptrl,c
 19948  0095DE                     	if	1	;There is more than 1 active tblptr byte
 19949  0095DE  0E91               	movlw	high __display_time@F8705
 19950  0095E0  6EF7               	movwf	tblptrh,c
 19951  0095E2                     	endif
 19952  0095E2                     	if	1	;There are 3 active tblptr bytes
 19953  0095E2  0E00               	movlw	low (__display_time@F8705 shr (0+16))
 19954  0095E4  6EF8               	movwf	tblptru,c
 19955  0095E6                     	endif
 19956  0095E6  EE21  F028         	lfsr	2,__display_time@pressseconds
 19957  0095EA  0E13               	movlw	19
 19958  0095EC                     u13280:
 19959  0095EC  0009               	tblrd		*+
 19960  0095EE  CFF5 FFDE          	movff	tablat,postinc2
 19961  0095F2  06E8               	decf	wreg,f,c
 19962  0095F4  E2FB               	bc	u13280
 19963                           
 19964                           ;display.c: 201: const char presssave[] = "->Press to save";
 19965  0095F6  0E5B               	movlw	low __display_time@F8707
 19966  0095F8  6EF6               	movwf	tblptrl,c
 19967  0095FA                     	if	1	;There is more than 1 active tblptr byte
 19968  0095FA  0E92               	movlw	high __display_time@F8707
 19969  0095FC  6EF7               	movwf	tblptrh,c
 19970  0095FE                     	endif
 19971  0095FE                     	if	1	;There are 3 active tblptr bytes
 19972  0095FE  0E00               	movlw	low (__display_time@F8707 shr (0+16))
 19973  009600  6EF8               	movwf	tblptru,c
 19974  009602                     	endif
 19975  009602  EE21  F070         	lfsr	2,__display_time@presssave
 19976  009606  0E0F               	movlw	15
 19977  009608                     u13290:
 19978  009608  0009               	tblrd		*+
 19979  00960A  CFF5 FFDE          	movff	tablat,postinc2
 19980  00960E  06E8               	decf	wreg,f,c
 19981  009610  E2FB               	bc	u13290
 19982                           
 19983                           ;display.c: 203: uint8_t cntr;
 19984                           ;display.c: 204: uint8_t year = rtcc_get_year();
 19985  009612  EC9D  F096         	call	_rtcc_get_year	;wreg free
 19986  009616  0101               	movlb	1	; () banked
 19987  009618  6FCC               	movwf	__display_time@year& (0+255),b
 19988                           
 19989                           ; BSR set to: 1
 19990                           ;display.c: 205: uint8_t month = rtcc_get_month();
 19991  00961A  ECAB  F096         	call	_rtcc_get_month	;wreg free
 19992  00961E  0101               	movlb	1	; () banked
 19993  009620  6FCD               	movwf	__display_time@month& (0+255),b
 19994                           
 19995                           ; BSR set to: 1
 19996                           ;display.c: 206: uint8_t day = rtcc_get_day();
 19997  009622  ECC0  F096         	call	_rtcc_get_day	;wreg free
 19998  009626  0101               	movlb	1	; () banked
 19999  009628  6FCE               	movwf	__display_time@day& (0+255),b
 20000                           
 20001                           ; BSR set to: 1
 20002                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 20003  00962A  ECB9  F096         	call	_rtcc_get_hours	;wreg free
 20004  00962E  0101               	movlb	1	; () banked
 20005  009630  6FCF               	movwf	__display_time@hours& (0+255),b
 20006                           
 20007                           ; BSR set to: 1
 20008                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 20009  009632  ECB2  F096         	call	_rtcc_get_minutes	;wreg free
 20010  009636  0101               	movlb	1	; () banked
 20011  009638  6FD0               	movwf	__display_time@minutes& (0+255),b
 20012                           
 20013                           ; BSR set to: 1
 20014                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 20015  00963A  ECA4  F096         	call	_rtcc_get_seconds	;wreg free
 20016  00963E  0101               	movlb	1	; () banked
 20017  009640  6FD1               	movwf	__display_time@seconds& (0+255),b
 20018                           
 20019                           ;display.c: 211: switch(mode)
 20020  009642  D1D5               	goto	l2005
 20021  009644                     
 20022                           ; BSR set to: 1
 20023                           ;display.c: 214: cntr = 0;
 20024                           
 20025                           ; BSR set to: 1
 20026  009644  0E00               	movlw	0
 20027  009646  6FD2               	movwf	__display_time@cntr& (0+255),b
 20028                           
 20029                           ;display.c: 215: while(tad[cntr])
 20030  009648  D013               	goto	l2007
 20031  00964A                     
 20032                           ; BSR set to: 1
 20033                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 20034                           
 20035                           ; BSR set to: 1
 20036  00964A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20037  00964C  0D01               	mullw	1
 20038  00964E  0E80               	movlw	low __display_time@tad
 20039  009650  24F3               	addwf	prodl,w,c
 20040  009652  6ED9               	movwf	fsr2l,c
 20041  009654  0E01               	movlw	high __display_time@tad
 20042  009656  20F4               	addwfc	prodh,w,c
 20043  009658  6EDA               	movwf	fsr2h,c
 20044  00965A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20045  00965C  0D01               	mullw	1
 20046  00965E  0E54               	movlw	low _display_content
 20047  009660  24F3               	addwf	prodl,w,c
 20048  009662  6EE1               	movwf	fsr1l,c
 20049  009664  0E03               	movlw	high _display_content
 20050  009666  20F4               	addwfc	prodh,w,c
 20051  009668  6EE2               	movwf	fsr1h,c
 20052  00966A  CFDF FFE7          	movff	indf2,indf1
 20053                           
 20054                           ; BSR set to: 1
 20055  00966E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20056  009670                     l2007:
 20057                           
 20058                           ; BSR set to: 1
 20059                           
 20060                           ; BSR set to: 1
 20061  009670  51D2               	movf	__display_time@cntr& (0+255),w,b
 20062  009672  0D01               	mullw	1
 20063  009674  0E80               	movlw	low __display_time@tad
 20064  009676  24F3               	addwf	prodl,w,c
 20065  009678  6ED9               	movwf	fsr2l,c
 20066  00967A  0E01               	movlw	high __display_time@tad
 20067  00967C  20F4               	addwfc	prodh,w,c
 20068  00967E  6EDA               	movwf	fsr2h,c
 20069  009680  50DF               	movf	indf2,w,c
 20070  009682  A4D8               	btfss	status,2,c
 20071  009684  D7E2               	goto	l2008
 20072                           
 20073                           ; BSR set to: 1
 20074                           ;display.c: 217: cntr = 0;
 20075                           
 20076                           ; BSR set to: 1
 20077  009686  0E00               	movlw	0
 20078  009688  6FD2               	movwf	__display_time@cntr& (0+255),b
 20079                           
 20080                           ;display.c: 218: while(pts[cntr])
 20081  00968A  D013               	goto	l2010
 20082  00968C                     
 20083                           ; BSR set to: 1
 20084                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 20085                           
 20086                           ; BSR set to: 1
 20087  00968C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20088  00968E  0D01               	mullw	1
 20089  009690  0E00               	movlw	low __display_time@pts
 20090  009692  24F3               	addwf	prodl,w,c
 20091  009694  6ED9               	movwf	fsr2l,c
 20092  009696  0E01               	movlw	high __display_time@pts
 20093  009698  20F4               	addwfc	prodh,w,c
 20094  00969A  6EDA               	movwf	fsr2h,c
 20095  00969C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20096  00969E  0D01               	mullw	1
 20097  0096A0  0E90               	movlw	low (_display_content+60)
 20098  0096A2  24F3               	addwf	prodl,w,c
 20099  0096A4  6EE1               	movwf	fsr1l,c
 20100  0096A6  0E03               	movlw	high (_display_content+60)
 20101  0096A8  20F4               	addwfc	prodh,w,c
 20102  0096AA  6EE2               	movwf	fsr1h,c
 20103  0096AC  CFDF FFE7          	movff	indf2,indf1
 20104                           
 20105                           ; BSR set to: 1
 20106  0096B0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20107  0096B2                     l2010:
 20108                           
 20109                           ; BSR set to: 1
 20110                           
 20111                           ; BSR set to: 1
 20112  0096B2  51D2               	movf	__display_time@cntr& (0+255),w,b
 20113  0096B4  0D01               	mullw	1
 20114  0096B6  0E00               	movlw	low __display_time@pts
 20115  0096B8  24F3               	addwf	prodl,w,c
 20116  0096BA  6ED9               	movwf	fsr2l,c
 20117  0096BC  0E01               	movlw	high __display_time@pts
 20118  0096BE  20F4               	addwfc	prodh,w,c
 20119  0096C0  6EDA               	movwf	fsr2h,c
 20120  0096C2  50DF               	movf	indf2,w,c
 20121  0096C4  B4D8               	btfsc	status,2,c
 20122  0096C6  D1A9               	goto	l2013
 20123  0096C8  D7E1               	goto	l2011
 20124  0096CA                     
 20125                           ; BSR set to: 1
 20126                           ;display.c: 223: cntr = 0;
 20127                           
 20128                           ; BSR set to: 1
 20129  0096CA  0E00               	movlw	0
 20130  0096CC  6FD2               	movwf	__display_time@cntr& (0+255),b
 20131                           
 20132                           ;display.c: 224: while(setyear[cntr])
 20133  0096CE  D013               	goto	l2015
 20134  0096D0                     
 20135                           ; BSR set to: 1
 20136                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 20137                           
 20138                           ; BSR set to: 1
 20139  0096D0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20140  0096D2  0D01               	mullw	1
 20141  0096D4  0EBA               	movlw	low __display_time@setyear
 20142  0096D6  24F3               	addwf	prodl,w,c
 20143  0096D8  6ED9               	movwf	fsr2l,c
 20144  0096DA  0E01               	movlw	high __display_time@setyear
 20145  0096DC  20F4               	addwfc	prodh,w,c
 20146  0096DE  6EDA               	movwf	fsr2h,c
 20147  0096E0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20148  0096E2  0D01               	mullw	1
 20149  0096E4  0E54               	movlw	low _display_content
 20150  0096E6  24F3               	addwf	prodl,w,c
 20151  0096E8  6EE1               	movwf	fsr1l,c
 20152  0096EA  0E03               	movlw	high _display_content
 20153  0096EC  20F4               	addwfc	prodh,w,c
 20154  0096EE  6EE2               	movwf	fsr1h,c
 20155  0096F0  CFDF FFE7          	movff	indf2,indf1
 20156                           
 20157                           ; BSR set to: 1
 20158  0096F4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20159  0096F6                     l2015:
 20160                           
 20161                           ; BSR set to: 1
 20162                           
 20163                           ; BSR set to: 1
 20164  0096F6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20165  0096F8  0D01               	mullw	1
 20166  0096FA  0EBA               	movlw	low __display_time@setyear
 20167  0096FC  24F3               	addwf	prodl,w,c
 20168  0096FE  6ED9               	movwf	fsr2l,c
 20169  009700  0E01               	movlw	high __display_time@setyear
 20170  009702  20F4               	addwfc	prodh,w,c
 20171  009704  6EDA               	movwf	fsr2h,c
 20172  009706  50DF               	movf	indf2,w,c
 20173  009708  A4D8               	btfss	status,2,c
 20174  00970A  D7E2               	goto	l2016
 20175                           
 20176                           ; BSR set to: 1
 20177                           ;display.c: 226: cntr = 0;
 20178                           
 20179                           ; BSR set to: 1
 20180  00970C  0E00               	movlw	0
 20181  00970E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20182                           
 20183                           ;display.c: 227: while(pressmonth[cntr])
 20184  009710  D013               	goto	l2018
 20185  009712                     
 20186                           ; BSR set to: 1
 20187                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 20188                           
 20189                           ; BSR set to: 1
 20190  009712  51D2               	movf	__display_time@cntr& (0+255),w,b
 20191  009714  0D01               	mullw	1
 20192  009716  0E3C               	movlw	low __display_time@pressmonth
 20193  009718  24F3               	addwf	prodl,w,c
 20194  00971A  6ED9               	movwf	fsr2l,c
 20195  00971C  0E01               	movlw	high __display_time@pressmonth
 20196  00971E  20F4               	addwfc	prodh,w,c
 20197  009720  6EDA               	movwf	fsr2h,c
 20198  009722  51D2               	movf	__display_time@cntr& (0+255),w,b
 20199  009724  0D01               	mullw	1
 20200  009726  0E90               	movlw	low (_display_content+60)
 20201  009728  24F3               	addwf	prodl,w,c
 20202  00972A  6EE1               	movwf	fsr1l,c
 20203  00972C  0E03               	movlw	high (_display_content+60)
 20204  00972E  20F4               	addwfc	prodh,w,c
 20205  009730  6EE2               	movwf	fsr1h,c
 20206  009732  CFDF FFE7          	movff	indf2,indf1
 20207                           
 20208                           ; BSR set to: 1
 20209  009736  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20210  009738                     l2018:
 20211                           
 20212                           ; BSR set to: 1
 20213                           
 20214                           ; BSR set to: 1
 20215  009738  51D2               	movf	__display_time@cntr& (0+255),w,b
 20216  00973A  0D01               	mullw	1
 20217  00973C  0E3C               	movlw	low __display_time@pressmonth
 20218  00973E  24F3               	addwf	prodl,w,c
 20219  009740  6ED9               	movwf	fsr2l,c
 20220  009742  0E01               	movlw	high __display_time@pressmonth
 20221  009744  20F4               	addwfc	prodh,w,c
 20222  009746  6EDA               	movwf	fsr2h,c
 20223  009748  50DF               	movf	indf2,w,c
 20224  00974A  B4D8               	btfsc	status,2,c
 20225  00974C  D166               	goto	l2013
 20226  00974E  D7E1               	goto	l2019
 20227  009750                     
 20228                           ; BSR set to: 1
 20229                           ;display.c: 232: cntr = 0;
 20230                           
 20231                           ; BSR set to: 1
 20232  009750  0E00               	movlw	0
 20233  009752  6FD2               	movwf	__display_time@cntr& (0+255),b
 20234                           
 20235                           ;display.c: 233: while(setmonth[cntr])
 20236  009754  D013               	goto	l2022
 20237  009756                     
 20238                           ; BSR set to: 1
 20239                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 20240                           
 20241                           ; BSR set to: 1
 20242  009756  51D2               	movf	__display_time@cntr& (0+255),w,b
 20243  009758  0D01               	mullw	1
 20244  00975A  0EA6               	movlw	low __display_time@setmonth
 20245  00975C  24F3               	addwf	prodl,w,c
 20246  00975E  6ED9               	movwf	fsr2l,c
 20247  009760  0E01               	movlw	high __display_time@setmonth
 20248  009762  20F4               	addwfc	prodh,w,c
 20249  009764  6EDA               	movwf	fsr2h,c
 20250  009766  51D2               	movf	__display_time@cntr& (0+255),w,b
 20251  009768  0D01               	mullw	1
 20252  00976A  0E54               	movlw	low _display_content
 20253  00976C  24F3               	addwf	prodl,w,c
 20254  00976E  6EE1               	movwf	fsr1l,c
 20255  009770  0E03               	movlw	high _display_content
 20256  009772  20F4               	addwfc	prodh,w,c
 20257  009774  6EE2               	movwf	fsr1h,c
 20258  009776  CFDF FFE7          	movff	indf2,indf1
 20259                           
 20260                           ; BSR set to: 1
 20261  00977A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20262  00977C                     l2022:
 20263                           
 20264                           ; BSR set to: 1
 20265                           
 20266                           ; BSR set to: 1
 20267  00977C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20268  00977E  0D01               	mullw	1
 20269  009780  0EA6               	movlw	low __display_time@setmonth
 20270  009782  24F3               	addwf	prodl,w,c
 20271  009784  6ED9               	movwf	fsr2l,c
 20272  009786  0E01               	movlw	high __display_time@setmonth
 20273  009788  20F4               	addwfc	prodh,w,c
 20274  00978A  6EDA               	movwf	fsr2h,c
 20275  00978C  50DF               	movf	indf2,w,c
 20276  00978E  A4D8               	btfss	status,2,c
 20277  009790  D7E2               	goto	l2023
 20278                           
 20279                           ; BSR set to: 1
 20280                           ;display.c: 235: cntr = 0;
 20281                           
 20282                           ; BSR set to: 1
 20283  009792  0E00               	movlw	0
 20284  009794  6FD2               	movwf	__display_time@cntr& (0+255),b
 20285                           
 20286                           ;display.c: 236: while(pressday[cntr])
 20287  009796  D013               	goto	l2025
 20288  009798                     
 20289                           ; BSR set to: 1
 20290                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 20291                           
 20292                           ; BSR set to: 1
 20293  009798  51D2               	movf	__display_time@cntr& (0+255),w,b
 20294  00979A  0D01               	mullw	1
 20295  00979C  0E60               	movlw	low __display_time@pressday
 20296  00979E  24F3               	addwf	prodl,w,c
 20297  0097A0  6ED9               	movwf	fsr2l,c
 20298  0097A2  0E01               	movlw	high __display_time@pressday
 20299  0097A4  20F4               	addwfc	prodh,w,c
 20300  0097A6  6EDA               	movwf	fsr2h,c
 20301  0097A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20302  0097AA  0D01               	mullw	1
 20303  0097AC  0E90               	movlw	low (_display_content+60)
 20304  0097AE  24F3               	addwf	prodl,w,c
 20305  0097B0  6EE1               	movwf	fsr1l,c
 20306  0097B2  0E03               	movlw	high (_display_content+60)
 20307  0097B4  20F4               	addwfc	prodh,w,c
 20308  0097B6  6EE2               	movwf	fsr1h,c
 20309  0097B8  CFDF FFE7          	movff	indf2,indf1
 20310                           
 20311                           ; BSR set to: 1
 20312  0097BC  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20313  0097BE                     l2025:
 20314                           
 20315                           ; BSR set to: 1
 20316                           
 20317                           ; BSR set to: 1
 20318  0097BE  51D2               	movf	__display_time@cntr& (0+255),w,b
 20319  0097C0  0D01               	mullw	1
 20320  0097C2  0E60               	movlw	low __display_time@pressday
 20321  0097C4  24F3               	addwf	prodl,w,c
 20322  0097C6  6ED9               	movwf	fsr2l,c
 20323  0097C8  0E01               	movlw	high __display_time@pressday
 20324  0097CA  20F4               	addwfc	prodh,w,c
 20325  0097CC  6EDA               	movwf	fsr2h,c
 20326  0097CE  50DF               	movf	indf2,w,c
 20327  0097D0  B4D8               	btfsc	status,2,c
 20328  0097D2  D123               	goto	l2013
 20329  0097D4  D7E1               	goto	l2026
 20330  0097D6                     
 20331                           ; BSR set to: 1
 20332                           ;display.c: 241: cntr = 0;
 20333                           
 20334                           ; BSR set to: 1
 20335  0097D6  0E00               	movlw	0
 20336  0097D8  6FD2               	movwf	__display_time@cntr& (0+255),b
 20337                           
 20338                           ;display.c: 242: while(setday[cntr])
 20339  0097DA  D013               	goto	l2029
 20340  0097DC                     
 20341                           ; BSR set to: 1
 20342                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 20343                           
 20344                           ; BSR set to: 1
 20345  0097DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20346  0097DE  0D01               	mullw	1
 20347  0097E0  0EC3               	movlw	low __display_time@setday
 20348  0097E2  24F3               	addwf	prodl,w,c
 20349  0097E4  6ED9               	movwf	fsr2l,c
 20350  0097E6  0E01               	movlw	high __display_time@setday
 20351  0097E8  20F4               	addwfc	prodh,w,c
 20352  0097EA  6EDA               	movwf	fsr2h,c
 20353  0097EC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20354  0097EE  0D01               	mullw	1
 20355  0097F0  0E54               	movlw	low _display_content
 20356  0097F2  24F3               	addwf	prodl,w,c
 20357  0097F4  6EE1               	movwf	fsr1l,c
 20358  0097F6  0E03               	movlw	high _display_content
 20359  0097F8  20F4               	addwfc	prodh,w,c
 20360  0097FA  6EE2               	movwf	fsr1h,c
 20361  0097FC  CFDF FFE7          	movff	indf2,indf1
 20362                           
 20363                           ; BSR set to: 1
 20364  009800  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20365  009802                     l2029:
 20366                           
 20367                           ; BSR set to: 1
 20368                           
 20369                           ; BSR set to: 1
 20370  009802  51D2               	movf	__display_time@cntr& (0+255),w,b
 20371  009804  0D01               	mullw	1
 20372  009806  0EC3               	movlw	low __display_time@setday
 20373  009808  24F3               	addwf	prodl,w,c
 20374  00980A  6ED9               	movwf	fsr2l,c
 20375  00980C  0E01               	movlw	high __display_time@setday
 20376  00980E  20F4               	addwfc	prodh,w,c
 20377  009810  6EDA               	movwf	fsr2h,c
 20378  009812  50DF               	movf	indf2,w,c
 20379  009814  A4D8               	btfss	status,2,c
 20380  009816  D7E2               	goto	l2030
 20381                           
 20382                           ; BSR set to: 1
 20383                           ;display.c: 244: cntr = 0;
 20384                           
 20385                           ; BSR set to: 1
 20386  009818  0E00               	movlw	0
 20387  00981A  6FD2               	movwf	__display_time@cntr& (0+255),b
 20388                           
 20389                           ;display.c: 245: while(presshours[cntr])
 20390  00981C  D013               	goto	l2032
 20391  00981E                     
 20392                           ; BSR set to: 1
 20393                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 20394                           
 20395                           ; BSR set to: 1
 20396  00981E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20397  009820  0D01               	mullw	1
 20398  009822  0E4E               	movlw	low __display_time@presshours
 20399  009824  24F3               	addwf	prodl,w,c
 20400  009826  6ED9               	movwf	fsr2l,c
 20401  009828  0E01               	movlw	high __display_time@presshours
 20402  00982A  20F4               	addwfc	prodh,w,c
 20403  00982C  6EDA               	movwf	fsr2h,c
 20404  00982E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20405  009830  0D01               	mullw	1
 20406  009832  0E90               	movlw	low (_display_content+60)
 20407  009834  24F3               	addwf	prodl,w,c
 20408  009836  6EE1               	movwf	fsr1l,c
 20409  009838  0E03               	movlw	high (_display_content+60)
 20410  00983A  20F4               	addwfc	prodh,w,c
 20411  00983C  6EE2               	movwf	fsr1h,c
 20412  00983E  CFDF FFE7          	movff	indf2,indf1
 20413                           
 20414                           ; BSR set to: 1
 20415  009842  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20416  009844                     l2032:
 20417                           
 20418                           ; BSR set to: 1
 20419                           
 20420                           ; BSR set to: 1
 20421  009844  51D2               	movf	__display_time@cntr& (0+255),w,b
 20422  009846  0D01               	mullw	1
 20423  009848  0E4E               	movlw	low __display_time@presshours
 20424  00984A  24F3               	addwf	prodl,w,c
 20425  00984C  6ED9               	movwf	fsr2l,c
 20426  00984E  0E01               	movlw	high __display_time@presshours
 20427  009850  20F4               	addwfc	prodh,w,c
 20428  009852  6EDA               	movwf	fsr2h,c
 20429  009854  50DF               	movf	indf2,w,c
 20430  009856  B4D8               	btfsc	status,2,c
 20431  009858  D0E0               	goto	l2013
 20432  00985A  D7E1               	goto	l2033
 20433  00985C                     
 20434                           ; BSR set to: 1
 20435                           ;display.c: 250: cntr = 0;
 20436                           
 20437                           ; BSR set to: 1
 20438  00985C  0E00               	movlw	0
 20439  00985E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20440                           
 20441                           ;display.c: 251: while(sethours[cntr])
 20442  009860  D013               	goto	l2036
 20443  009862                     
 20444                           ; BSR set to: 1
 20445                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 20446                           
 20447                           ; BSR set to: 1
 20448  009862  51D2               	movf	__display_time@cntr& (0+255),w,b
 20449  009864  0D01               	mullw	1
 20450  009866  0EB0               	movlw	low __display_time@sethours
 20451  009868  24F3               	addwf	prodl,w,c
 20452  00986A  6ED9               	movwf	fsr2l,c
 20453  00986C  0E01               	movlw	high __display_time@sethours
 20454  00986E  20F4               	addwfc	prodh,w,c
 20455  009870  6EDA               	movwf	fsr2h,c
 20456  009872  51D2               	movf	__display_time@cntr& (0+255),w,b
 20457  009874  0D01               	mullw	1
 20458  009876  0E54               	movlw	low _display_content
 20459  009878  24F3               	addwf	prodl,w,c
 20460  00987A  6EE1               	movwf	fsr1l,c
 20461  00987C  0E03               	movlw	high _display_content
 20462  00987E  20F4               	addwfc	prodh,w,c
 20463  009880  6EE2               	movwf	fsr1h,c
 20464  009882  CFDF FFE7          	movff	indf2,indf1
 20465                           
 20466                           ; BSR set to: 1
 20467  009886  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20468  009888                     l2036:
 20469                           
 20470                           ; BSR set to: 1
 20471                           
 20472                           ; BSR set to: 1
 20473  009888  51D2               	movf	__display_time@cntr& (0+255),w,b
 20474  00988A  0D01               	mullw	1
 20475  00988C  0EB0               	movlw	low __display_time@sethours
 20476  00988E  24F3               	addwf	prodl,w,c
 20477  009890  6ED9               	movwf	fsr2l,c
 20478  009892  0E01               	movlw	high __display_time@sethours
 20479  009894  20F4               	addwfc	prodh,w,c
 20480  009896  6EDA               	movwf	fsr2h,c
 20481  009898  50DF               	movf	indf2,w,c
 20482  00989A  A4D8               	btfss	status,2,c
 20483  00989C  D7E2               	goto	l2037
 20484                           
 20485                           ; BSR set to: 1
 20486                           ;display.c: 253: cntr = 0;
 20487                           
 20488                           ; BSR set to: 1
 20489  00989E  0E00               	movlw	0
 20490  0098A0  6FD2               	movwf	__display_time@cntr& (0+255),b
 20491                           
 20492                           ;display.c: 254: while(pressminutes[cntr])
 20493  0098A2  D013               	goto	l2039
 20494  0098A4                     
 20495                           ; BSR set to: 1
 20496                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 20497                           
 20498                           ; BSR set to: 1
 20499  0098A4  51D2               	movf	__display_time@cntr& (0+255),w,b
 20500  0098A6  0D01               	mullw	1
 20501  0098A8  0E14               	movlw	low __display_time@pressminutes
 20502  0098AA  24F3               	addwf	prodl,w,c
 20503  0098AC  6ED9               	movwf	fsr2l,c
 20504  0098AE  0E01               	movlw	high __display_time@pressminutes
 20505  0098B0  20F4               	addwfc	prodh,w,c
 20506  0098B2  6EDA               	movwf	fsr2h,c
 20507  0098B4  51D2               	movf	__display_time@cntr& (0+255),w,b
 20508  0098B6  0D01               	mullw	1
 20509  0098B8  0E90               	movlw	low (_display_content+60)
 20510  0098BA  24F3               	addwf	prodl,w,c
 20511  0098BC  6EE1               	movwf	fsr1l,c
 20512  0098BE  0E03               	movlw	high (_display_content+60)
 20513  0098C0  20F4               	addwfc	prodh,w,c
 20514  0098C2  6EE2               	movwf	fsr1h,c
 20515  0098C4  CFDF FFE7          	movff	indf2,indf1
 20516                           
 20517                           ; BSR set to: 1
 20518  0098C8  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20519  0098CA                     l2039:
 20520                           
 20521                           ; BSR set to: 1
 20522                           
 20523                           ; BSR set to: 1
 20524  0098CA  51D2               	movf	__display_time@cntr& (0+255),w,b
 20525  0098CC  0D01               	mullw	1
 20526  0098CE  0E14               	movlw	low __display_time@pressminutes
 20527  0098D0  24F3               	addwf	prodl,w,c
 20528  0098D2  6ED9               	movwf	fsr2l,c
 20529  0098D4  0E01               	movlw	high __display_time@pressminutes
 20530  0098D6  20F4               	addwfc	prodh,w,c
 20531  0098D8  6EDA               	movwf	fsr2h,c
 20532  0098DA  50DF               	movf	indf2,w,c
 20533  0098DC  B4D8               	btfsc	status,2,c
 20534  0098DE  D09D               	goto	l2013
 20535  0098E0  D7E1               	goto	l2040
 20536  0098E2                     
 20537                           ; BSR set to: 1
 20538                           ;display.c: 259: cntr = 0;
 20539                           
 20540                           ; BSR set to: 1
 20541  0098E2  0E00               	movlw	0
 20542  0098E4  6FD2               	movwf	__display_time@cntr& (0+255),b
 20543                           
 20544                           ;display.c: 260: while(setminutes[cntr])
 20545  0098E6  D013               	goto	l2043
 20546  0098E8                     
 20547                           ; BSR set to: 1
 20548                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 20549                           
 20550                           ; BSR set to: 1
 20551  0098E8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20552  0098EA  0D01               	mullw	1
 20553  0098EC  0E8E               	movlw	low __display_time@setminutes
 20554  0098EE  24F3               	addwf	prodl,w,c
 20555  0098F0  6ED9               	movwf	fsr2l,c
 20556  0098F2  0E01               	movlw	high __display_time@setminutes
 20557  0098F4  20F4               	addwfc	prodh,w,c
 20558  0098F6  6EDA               	movwf	fsr2h,c
 20559  0098F8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20560  0098FA  0D01               	mullw	1
 20561  0098FC  0E54               	movlw	low _display_content
 20562  0098FE  24F3               	addwf	prodl,w,c
 20563  009900  6EE1               	movwf	fsr1l,c
 20564  009902  0E03               	movlw	high _display_content
 20565  009904  20F4               	addwfc	prodh,w,c
 20566  009906  6EE2               	movwf	fsr1h,c
 20567  009908  CFDF FFE7          	movff	indf2,indf1
 20568                           
 20569                           ; BSR set to: 1
 20570  00990C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20571  00990E                     l2043:
 20572                           
 20573                           ; BSR set to: 1
 20574                           
 20575                           ; BSR set to: 1
 20576  00990E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20577  009910  0D01               	mullw	1
 20578  009912  0E8E               	movlw	low __display_time@setminutes
 20579  009914  24F3               	addwf	prodl,w,c
 20580  009916  6ED9               	movwf	fsr2l,c
 20581  009918  0E01               	movlw	high __display_time@setminutes
 20582  00991A  20F4               	addwfc	prodh,w,c
 20583  00991C  6EDA               	movwf	fsr2h,c
 20584  00991E  50DF               	movf	indf2,w,c
 20585  009920  A4D8               	btfss	status,2,c
 20586  009922  D7E2               	goto	l2044
 20587                           
 20588                           ; BSR set to: 1
 20589                           ;display.c: 262: cntr = 0;
 20590                           
 20591                           ; BSR set to: 1
 20592  009924  0E00               	movlw	0
 20593  009926  6FD2               	movwf	__display_time@cntr& (0+255),b
 20594                           
 20595                           ;display.c: 263: while(pressseconds[cntr])
 20596  009928  D013               	goto	l2046
 20597  00992A                     
 20598                           ; BSR set to: 1
 20599                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 20600                           
 20601                           ; BSR set to: 1
 20602  00992A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20603  00992C  0D01               	mullw	1
 20604  00992E  0E28               	movlw	low __display_time@pressseconds
 20605  009930  24F3               	addwf	prodl,w,c
 20606  009932  6ED9               	movwf	fsr2l,c
 20607  009934  0E01               	movlw	high __display_time@pressseconds
 20608  009936  20F4               	addwfc	prodh,w,c
 20609  009938  6EDA               	movwf	fsr2h,c
 20610  00993A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20611  00993C  0D01               	mullw	1
 20612  00993E  0E90               	movlw	low (_display_content+60)
 20613  009940  24F3               	addwf	prodl,w,c
 20614  009942  6EE1               	movwf	fsr1l,c
 20615  009944  0E03               	movlw	high (_display_content+60)
 20616  009946  20F4               	addwfc	prodh,w,c
 20617  009948  6EE2               	movwf	fsr1h,c
 20618  00994A  CFDF FFE7          	movff	indf2,indf1
 20619                           
 20620                           ; BSR set to: 1
 20621  00994E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20622  009950                     l2046:
 20623                           
 20624                           ; BSR set to: 1
 20625                           
 20626                           ; BSR set to: 1
 20627  009950  51D2               	movf	__display_time@cntr& (0+255),w,b
 20628  009952  0D01               	mullw	1
 20629  009954  0E28               	movlw	low __display_time@pressseconds
 20630  009956  24F3               	addwf	prodl,w,c
 20631  009958  6ED9               	movwf	fsr2l,c
 20632  00995A  0E01               	movlw	high __display_time@pressseconds
 20633  00995C  20F4               	addwfc	prodh,w,c
 20634  00995E  6EDA               	movwf	fsr2h,c
 20635  009960  50DF               	movf	indf2,w,c
 20636  009962  B4D8               	btfsc	status,2,c
 20637  009964  D05A               	goto	l2013
 20638  009966  D7E1               	goto	l2047
 20639  009968                     
 20640                           ; BSR set to: 1
 20641                           ;display.c: 268: cntr = 0;
 20642                           
 20643                           ; BSR set to: 1
 20644  009968  0E00               	movlw	0
 20645  00996A  6FD2               	movwf	__display_time@cntr& (0+255),b
 20646                           
 20647                           ;display.c: 269: while(setseconds[cntr])
 20648  00996C  D013               	goto	l2050
 20649  00996E                     
 20650                           ; BSR set to: 1
 20651                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 20652                           
 20653                           ; BSR set to: 1
 20654  00996E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20655  009970  0D01               	mullw	1
 20656  009972  0E9A               	movlw	low __display_time@setseconds
 20657  009974  24F3               	addwf	prodl,w,c
 20658  009976  6ED9               	movwf	fsr2l,c
 20659  009978  0E01               	movlw	high __display_time@setseconds
 20660  00997A  20F4               	addwfc	prodh,w,c
 20661  00997C  6EDA               	movwf	fsr2h,c
 20662  00997E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20663  009980  0D01               	mullw	1
 20664  009982  0E54               	movlw	low _display_content
 20665  009984  24F3               	addwf	prodl,w,c
 20666  009986  6EE1               	movwf	fsr1l,c
 20667  009988  0E03               	movlw	high _display_content
 20668  00998A  20F4               	addwfc	prodh,w,c
 20669  00998C  6EE2               	movwf	fsr1h,c
 20670  00998E  CFDF FFE7          	movff	indf2,indf1
 20671                           
 20672                           ; BSR set to: 1
 20673  009992  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20674  009994                     l2050:
 20675                           
 20676                           ; BSR set to: 1
 20677                           
 20678                           ; BSR set to: 1
 20679  009994  51D2               	movf	__display_time@cntr& (0+255),w,b
 20680  009996  0D01               	mullw	1
 20681  009998  0E9A               	movlw	low __display_time@setseconds
 20682  00999A  24F3               	addwf	prodl,w,c
 20683  00999C  6ED9               	movwf	fsr2l,c
 20684  00999E  0E01               	movlw	high __display_time@setseconds
 20685  0099A0  20F4               	addwfc	prodh,w,c
 20686  0099A2  6EDA               	movwf	fsr2h,c
 20687  0099A4  50DF               	movf	indf2,w,c
 20688  0099A6  A4D8               	btfss	status,2,c
 20689  0099A8  D7E2               	goto	l2051
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;display.c: 271: cntr = 0;
 20693                           
 20694                           ; BSR set to: 1
 20695  0099AA  0E00               	movlw	0
 20696  0099AC  6FD2               	movwf	__display_time@cntr& (0+255),b
 20697                           
 20698                           ;display.c: 272: while(presssave[cntr])
 20699  0099AE  D013               	goto	l2053
 20700  0099B0                     
 20701                           ; BSR set to: 1
 20702                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 20703                           
 20704                           ; BSR set to: 1
 20705  0099B0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20706  0099B2  0D01               	mullw	1
 20707  0099B4  0E70               	movlw	low __display_time@presssave
 20708  0099B6  24F3               	addwf	prodl,w,c
 20709  0099B8  6ED9               	movwf	fsr2l,c
 20710  0099BA  0E01               	movlw	high __display_time@presssave
 20711  0099BC  20F4               	addwfc	prodh,w,c
 20712  0099BE  6EDA               	movwf	fsr2h,c
 20713  0099C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20714  0099C2  0D01               	mullw	1
 20715  0099C4  0E90               	movlw	low (_display_content+60)
 20716  0099C6  24F3               	addwf	prodl,w,c
 20717  0099C8  6EE1               	movwf	fsr1l,c
 20718  0099CA  0E03               	movlw	high (_display_content+60)
 20719  0099CC  20F4               	addwfc	prodh,w,c
 20720  0099CE  6EE2               	movwf	fsr1h,c
 20721  0099D0  CFDF FFE7          	movff	indf2,indf1
 20722                           
 20723                           ; BSR set to: 1
 20724  0099D4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20725  0099D6                     l2053:
 20726                           
 20727                           ; BSR set to: 1
 20728                           
 20729                           ; BSR set to: 1
 20730  0099D6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20731  0099D8  0D01               	mullw	1
 20732  0099DA  0E70               	movlw	low __display_time@presssave
 20733  0099DC  24F3               	addwf	prodl,w,c
 20734  0099DE  6ED9               	movwf	fsr2l,c
 20735  0099E0  0E01               	movlw	high __display_time@presssave
 20736  0099E2  20F4               	addwfc	prodh,w,c
 20737  0099E4  6EDA               	movwf	fsr2h,c
 20738  0099E6  50DF               	movf	indf2,w,c
 20739  0099E8  B4D8               	btfsc	status,2,c
 20740  0099EA  D017               	goto	l2013
 20741  0099EC  D7E1               	goto	l2054
 20742  0099EE                     l2005:
 20743                           
 20744                           ; BSR set to: 1
 20745                           
 20746                           ; BSR set to: 1
 20747  0099EE  51CB               	movf	__display_time@mode& (0+255),w,b
 20748                           
 20749                           ; Switch size 1, requested type "space"
 20750                           ; Number of cases is 7, Range of values is 16 to 22
 20751                           ; switch strategies available:
 20752                           ; Name         Instructions Cycles
 20753                           ; simple_byte           22    12 (average)
 20754                           ;	Chosen strategy is simple_byte
 20755  0099F0  0A10               	xorlw	16	; case 16
 20756  0099F2  B4D8               	btfsc	status,2,c
 20757  0099F4  D627               	goto	l2006
 20758  0099F6  0A01               	xorlw	1	; case 17
 20759  0099F8  B4D8               	btfsc	status,2,c
 20760  0099FA  D667               	goto	l2014
 20761  0099FC  0A03               	xorlw	3	; case 18
 20762  0099FE  B4D8               	btfsc	status,2,c
 20763  009A00  D6A7               	goto	l2021
 20764  009A02  0A01               	xorlw	1	; case 19
 20765  009A04  B4D8               	btfsc	status,2,c
 20766  009A06  D6E7               	goto	l2028
 20767  009A08  0A07               	xorlw	7	; case 20
 20768  009A0A  B4D8               	btfsc	status,2,c
 20769  009A0C  D727               	goto	l2035
 20770  009A0E  0A01               	xorlw	1	; case 21
 20771  009A10  B4D8               	btfsc	status,2,c
 20772  009A12  D767               	goto	l2042
 20773  009A14  0A03               	xorlw	3	; case 22
 20774  009A16  B4D8               	btfsc	status,2,c
 20775  009A18  D7A7               	goto	l2049
 20776  009A1A                     l2013:
 20777                           
 20778                           ; BSR set to: 1
 20779                           ;display.c: 278: display_content[1][0] = '2';
 20780                           
 20781                           ; BSR set to: 1
 20782  009A1A  0E32               	movlw	50
 20783  009A1C  0103               	movlb	3	; () banked
 20784  009A1E  6F68               	movwf	(_display_content+20)& (0+255),b
 20785                           
 20786                           ;display.c: 279: display_content[1][1] = '0';
 20787  009A20  0E30               	movlw	48
 20788  009A22  6F69               	movwf	(_display_content+21)& (0+255),b
 20789                           
 20790                           ; BSR set to: 3
 20791                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 20792  009A24  0101               	movlb	1	; () banked
 20793  009A26  39CC               	swapf	__display_time@year& (0+255),w,b
 20794  009A28  0B0F               	andlw	15
 20795  009A2A  0F30               	addlw	48
 20796  009A2C  0103               	movlb	3	; () banked
 20797  009A2E  6F6A               	movwf	(_display_content+22)& (0+255),b
 20798                           
 20799                           ; BSR set to: 3
 20800                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 20801  009A30  0101               	movlb	1	; () banked
 20802  009A32  51CC               	movf	__display_time@year& (0+255),w,b
 20803  009A34  0B0F               	andlw	15
 20804  009A36  0F30               	addlw	48
 20805  009A38  0103               	movlb	3	; () banked
 20806  009A3A  6F6B               	movwf	(_display_content+23)& (0+255),b
 20807                           
 20808                           ;display.c: 283: display_content[1][4] = '-';
 20809  009A3C  0E2D               	movlw	45
 20810  009A3E  6F6C               	movwf	(_display_content+24)& (0+255),b
 20811                           
 20812                           ; BSR set to: 3
 20813                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 20814  009A40  0101               	movlb	1	; () banked
 20815  009A42  39CD               	swapf	__display_time@month& (0+255),w,b
 20816  009A44  0B0F               	andlw	15
 20817  009A46  0F30               	addlw	48
 20818  009A48  0103               	movlb	3	; () banked
 20819  009A4A  6F6D               	movwf	(_display_content+25)& (0+255),b
 20820                           
 20821                           ; BSR set to: 3
 20822                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 20823  009A4C  0101               	movlb	1	; () banked
 20824  009A4E  51CD               	movf	__display_time@month& (0+255),w,b
 20825  009A50  0B0F               	andlw	15
 20826  009A52  0F30               	addlw	48
 20827  009A54  0103               	movlb	3	; () banked
 20828  009A56  6F6E               	movwf	(_display_content+26)& (0+255),b
 20829                           
 20830                           ;display.c: 287: display_content[1][7] = '-';
 20831  009A58  0E2D               	movlw	45
 20832  009A5A  6F6F               	movwf	(_display_content+27)& (0+255),b
 20833                           
 20834                           ; BSR set to: 3
 20835                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 20836  009A5C  0101               	movlb	1	; () banked
 20837  009A5E  39CE               	swapf	__display_time@day& (0+255),w,b
 20838  009A60  0B0F               	andlw	15
 20839  009A62  0F30               	addlw	48
 20840  009A64  0103               	movlb	3	; () banked
 20841  009A66  6F70               	movwf	(_display_content+28)& (0+255),b
 20842                           
 20843                           ; BSR set to: 3
 20844                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 20845  009A68  0101               	movlb	1	; () banked
 20846  009A6A  51CE               	movf	__display_time@day& (0+255),w,b
 20847  009A6C  0B0F               	andlw	15
 20848  009A6E  0F30               	addlw	48
 20849  009A70  0103               	movlb	3	; () banked
 20850  009A72  6F71               	movwf	(_display_content+29)& (0+255),b
 20851                           
 20852                           ; BSR set to: 3
 20853                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 20854  009A74  0101               	movlb	1	; () banked
 20855  009A76  39CF               	swapf	__display_time@hours& (0+255),w,b
 20856  009A78  0B0F               	andlw	15
 20857  009A7A  0F30               	addlw	48
 20858  009A7C  0103               	movlb	3	; () banked
 20859  009A7E  6F7C               	movwf	(_display_content+40)& (0+255),b
 20860                           
 20861                           ; BSR set to: 3
 20862                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 20863  009A80  0101               	movlb	1	; () banked
 20864  009A82  51CF               	movf	__display_time@hours& (0+255),w,b
 20865  009A84  0B0F               	andlw	15
 20866  009A86  0F30               	addlw	48
 20867  009A88  0103               	movlb	3	; () banked
 20868  009A8A  6F7D               	movwf	(_display_content+41)& (0+255),b
 20869                           
 20870                           ;display.c: 294: display_content[2][2] = ':';
 20871  009A8C  0E3A               	movlw	58
 20872  009A8E  6F7E               	movwf	(_display_content+42)& (0+255),b
 20873                           
 20874                           ; BSR set to: 3
 20875                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 20876  009A90  0101               	movlb	1	; () banked
 20877  009A92  39D0               	swapf	__display_time@minutes& (0+255),w,b
 20878  009A94  0B0F               	andlw	15
 20879  009A96  0F30               	addlw	48
 20880  009A98  0103               	movlb	3	; () banked
 20881  009A9A  6F7F               	movwf	(_display_content+43)& (0+255),b
 20882                           
 20883                           ; BSR set to: 3
 20884                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 20885  009A9C  0101               	movlb	1	; () banked
 20886  009A9E  51D0               	movf	__display_time@minutes& (0+255),w,b
 20887  009AA0  0B0F               	andlw	15
 20888  009AA2  0F30               	addlw	48
 20889  009AA4  0103               	movlb	3	; () banked
 20890  009AA6  6F80               	movwf	(_display_content+44)& (0+255),b
 20891                           
 20892                           ;display.c: 298: display_content[2][5] = ':';
 20893  009AA8  0E3A               	movlw	58
 20894  009AAA  6F81               	movwf	(_display_content+45)& (0+255),b
 20895                           
 20896                           ; BSR set to: 3
 20897                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 20898  009AAC  0101               	movlb	1	; () banked
 20899  009AAE  39D1               	swapf	__display_time@seconds& (0+255),w,b
 20900  009AB0  0B0F               	andlw	15
 20901  009AB2  0F30               	addlw	48
 20902  009AB4  0103               	movlb	3	; () banked
 20903  009AB6  6F82               	movwf	(_display_content+46)& (0+255),b
 20904                           
 20905                           ; BSR set to: 3
 20906                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 20907  009AB8  0101               	movlb	1	; () banked
 20908  009ABA  51D1               	movf	__display_time@seconds& (0+255),w,b
 20909  009ABC  0B0F               	andlw	15
 20910  009ABE  0F30               	addlw	48
 20911  009AC0  0103               	movlb	3	; () banked
 20912  009AC2  6F83               	movwf	(_display_content+47)& (0+255),b
 20913                           
 20914                           ; BSR set to: 3
 20915  009AC4  0012               	return		;funcret
 20916  009AC6                     __end_of__display_time:
 20917                           	opt stack 0
 20918                           tblptru	equ	0xFF8
 20919                           tblptrh	equ	0xFF7
 20920                           tblptrl	equ	0xFF6
 20921                           tablat	equ	0xFF5
 20922                           prodh	equ	0xFF4
 20923                           prodl	equ	0xFF3
 20924                           intcon	equ	0xFF2
 20925                           intcon2	equ	0xFF1
 20926                           intcon3	equ	0xFF0
 20927                           postinc0	equ	0xFEE
 20928                           wreg	equ	0xFE8
 20929                           indf1	equ	0xFE7
 20930                           postinc1	equ	0xFE6
 20931                           postdec1	equ	0xFE5
 20932                           plusw1	equ	0xFE3
 20933                           fsr1h	equ	0xFE2
 20934                           fsr1l	equ	0xFE1
 20935                           indf2	equ	0xFDF
 20936                           postinc2	equ	0xFDE
 20937                           postdec2	equ	0xFDD
 20938                           plusw2	equ	0xFDB
 20939                           fsr2h	equ	0xFDA
 20940                           fsr2l	equ	0xFD9
 20941                           status	equ	0xFD8
 20942                           
 20943 ;; *************** function __display_temperature *****************
 20944 ;; Defined at:
 20945 ;;		line 513 in file "display.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;		None
 20948 ;; Auto vars:     Size  Location     Type
 20949 ;;  header         20   48[BANK0 ] const unsigned char [20]
 20950 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 20951 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 20952 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 20953 ;;  cntr            1  103[BANK0 ] unsigned char 
 20954 ;; Return value:  Size  Location     Type
 20955 ;;                  1    wreg      void 
 20956 ;; Registers used:
 20957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20958 ;; Tracked objects:
 20959 ;;		On entry : 0/0
 20960 ;;		On exit  : 0/0
 20961 ;;		Unchanged: 0/0
 20962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20964 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20966 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20967 ;;Total ram usage:       56 bytes
 20968 ;; Hardware stack levels used:    1
 20969 ;; Hardware stack levels required when called:   14
 20970 ;; This function calls:
 20971 ;;		__display_itoa
 20972 ;; This function is called by:
 20973 ;;		_display_prepare
 20974 ;; This function uses a non-reentrant model
 20975 ;;
 20976                           
 20977                           	psect	text100
 20978  00D14A                     __ptext100:
 20979                           	opt stack 0
 20980  00D14A                     __display_temperature:
 20981                           	opt stack 15
 20982                           
 20983                           ;display.c: 515: uint8_t cntr;
 20984                           ;display.c: 516: const char header[] = "Temperature Monitor";
 20985                           
 20986                           ; BSR set to: 3
 20987                           ;incstack = 0
 20988  00D14A  0EFF               	movlw	low __display_temperature@F8779
 20989  00D14C  6EF6               	movwf	tblptrl,c
 20990  00D14E                     	if	1	;There is more than 1 active tblptr byte
 20991  00D14E  0E90               	movlw	high __display_temperature@F8779
 20992  00D150  6EF7               	movwf	tblptrh,c
 20993  00D152                     	endif
 20994  00D152                     	if	1	;There are 3 active tblptr bytes
 20995  00D152  0E00               	movlw	low (__display_temperature@F8779 shr (0+16))
 20996  00D154  6EF8               	movwf	tblptru,c
 20997  00D156                     	endif
 20998  00D156  EE20  F090         	lfsr	2,__display_temperature@header
 20999  00D15A  0E13               	movlw	19
 21000  00D15C                     u13900:
 21001  00D15C  0009               	tblrd		*+
 21002  00D15E  CFF5 FFDE          	movff	tablat,postinc2
 21003  00D162  06E8               	decf	wreg,f,c
 21004  00D164  E2FB               	bc	u13900
 21005                           
 21006                           ;display.c: 517: const char internal[] = "On-board: ";
 21007  00D166  0EEF               	movlw	low __display_temperature@F8781
 21008  00D168  6EF6               	movwf	tblptrl,c
 21009  00D16A                     	if	1	;There is more than 1 active tblptr byte
 21010  00D16A  0E92               	movlw	high __display_temperature@F8781
 21011  00D16C  6EF7               	movwf	tblptrh,c
 21012  00D16E                     	endif
 21013  00D16E                     	if	1	;There are 3 active tblptr bytes
 21014  00D16E  0E00               	movlw	low (__display_temperature@F8781 shr (0+16))
 21015  00D170  6EF8               	movwf	tblptru,c
 21016  00D172                     	endif
 21017  00D172  EE20  F0BC         	lfsr	2,__display_temperature@internal
 21018  00D176  0E0A               	movlw	10
 21019  00D178                     u13910:
 21020  00D178  0009               	tblrd		*+
 21021  00D17A  CFF5 FFDE          	movff	tablat,postinc2
 21022  00D17E  06E8               	decf	wreg,f,c
 21023  00D180  E2FB               	bc	u13910
 21024                           
 21025                           ;display.c: 518: const char external1[] = "External 1:";
 21026  00D182  0EBF               	movlw	low __display_temperature@F8783
 21027  00D184  6EF6               	movwf	tblptrl,c
 21028  00D186                     	if	1	;There is more than 1 active tblptr byte
 21029  00D186  0E92               	movlw	high __display_temperature@F8783
 21030  00D188  6EF7               	movwf	tblptrh,c
 21031  00D18A                     	endif
 21032  00D18A                     	if	1	;There are 3 active tblptr bytes
 21033  00D18A  0E00               	movlw	low (__display_temperature@F8783 shr (0+16))
 21034  00D18C  6EF8               	movwf	tblptru,c
 21035  00D18E                     	endif
 21036  00D18E  EE20  F0A4         	lfsr	2,__display_temperature@external1
 21037  00D192  0E0B               	movlw	11
 21038  00D194                     u13920:
 21039  00D194  0009               	tblrd		*+
 21040  00D196  CFF5 FFDE          	movff	tablat,postinc2
 21041  00D19A  06E8               	decf	wreg,f,c
 21042  00D19C  E2FB               	bc	u13920
 21043                           
 21044                           ;display.c: 519: const char external2[] = "External 2:";
 21045  00D19E  0EB3               	movlw	low __display_temperature@F8785
 21046  00D1A0  6EF6               	movwf	tblptrl,c
 21047  00D1A2                     	if	1	;There is more than 1 active tblptr byte
 21048  00D1A2  0E92               	movlw	high __display_temperature@F8785
 21049  00D1A4  6EF7               	movwf	tblptrh,c
 21050  00D1A6                     	endif
 21051  00D1A6                     	if	1	;There are 3 active tblptr bytes
 21052  00D1A6  0E00               	movlw	low (__display_temperature@F8785 shr (0+16))
 21053  00D1A8  6EF8               	movwf	tblptru,c
 21054  00D1AA                     	endif
 21055  00D1AA  EE20  F0B0         	lfsr	2,__display_temperature@external2
 21056  00D1AE  0E0B               	movlw	11
 21057  00D1B0                     u13930:
 21058  00D1B0  0009               	tblrd		*+
 21059  00D1B2  CFF5 FFDE          	movff	tablat,postinc2
 21060  00D1B6  06E8               	decf	wreg,f,c
 21061  00D1B8  E2FB               	bc	u13930
 21062                           
 21063                           ;display.c: 521: cntr = 0;
 21064  00D1BA  0E00               	movlw	0
 21065  00D1BC  0100               	movlb	0	; () banked
 21066  00D1BE  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21067                           
 21068                           ;display.c: 522: while(header[cntr])
 21069  00D1C0  D013               	goto	l2197
 21070  00D1C2                     
 21071                           ; BSR set to: 0
 21072                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 21073                           
 21074                           ; BSR set to: 0
 21075  00D1C2  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21076  00D1C4  0D01               	mullw	1
 21077  00D1C6  0E90               	movlw	low __display_temperature@header
 21078  00D1C8  24F3               	addwf	prodl,w,c
 21079  00D1CA  6ED9               	movwf	fsr2l,c
 21080  00D1CC  0E00               	movlw	high __display_temperature@header
 21081  00D1CE  20F4               	addwfc	prodh,w,c
 21082  00D1D0  6EDA               	movwf	fsr2h,c
 21083  00D1D2  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21084  00D1D4  0D01               	mullw	1
 21085  00D1D6  0E54               	movlw	low _display_content
 21086  00D1D8  24F3               	addwf	prodl,w,c
 21087  00D1DA  6EE1               	movwf	fsr1l,c
 21088  00D1DC  0E03               	movlw	high _display_content
 21089  00D1DE  20F4               	addwfc	prodh,w,c
 21090  00D1E0  6EE2               	movwf	fsr1h,c
 21091  00D1E2  CFDF FFE7          	movff	indf2,indf1
 21092                           
 21093                           ; BSR set to: 0
 21094  00D1E6  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21095  00D1E8                     l2197:
 21096                           
 21097                           ; BSR set to: 0
 21098                           
 21099                           ; BSR set to: 0
 21100  00D1E8  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21101  00D1EA  0D01               	mullw	1
 21102  00D1EC  0E90               	movlw	low __display_temperature@header
 21103  00D1EE  24F3               	addwf	prodl,w,c
 21104  00D1F0  6ED9               	movwf	fsr2l,c
 21105  00D1F2  0E00               	movlw	high __display_temperature@header
 21106  00D1F4  20F4               	addwfc	prodh,w,c
 21107  00D1F6  6EDA               	movwf	fsr2h,c
 21108  00D1F8  50DF               	movf	indf2,w,c
 21109  00D1FA  A4D8               	btfss	status,2,c
 21110  00D1FC  D7E2               	goto	l2198
 21111                           
 21112                           ; BSR set to: 0
 21113                           ;display.c: 525: cntr = 0;
 21114                           
 21115                           ; BSR set to: 0
 21116  00D1FE  0E00               	movlw	0
 21117  00D200  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21118                           
 21119                           ;display.c: 526: while(internal[cntr])
 21120  00D202  D013               	goto	l2200
 21121  00D204                     
 21122                           ; BSR set to: 0
 21123                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 21124                           
 21125                           ; BSR set to: 0
 21126  00D204  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21127  00D206  0D01               	mullw	1
 21128  00D208  0EBC               	movlw	low __display_temperature@internal
 21129  00D20A  24F3               	addwf	prodl,w,c
 21130  00D20C  6ED9               	movwf	fsr2l,c
 21131  00D20E  0E00               	movlw	high __display_temperature@internal
 21132  00D210  20F4               	addwfc	prodh,w,c
 21133  00D212  6EDA               	movwf	fsr2h,c
 21134  00D214  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21135  00D216  0D01               	mullw	1
 21136  00D218  0E68               	movlw	low (_display_content+20)
 21137  00D21A  24F3               	addwf	prodl,w,c
 21138  00D21C  6EE1               	movwf	fsr1l,c
 21139  00D21E  0E03               	movlw	high (_display_content+20)
 21140  00D220  20F4               	addwfc	prodh,w,c
 21141  00D222  6EE2               	movwf	fsr1h,c
 21142  00D224  CFDF FFE7          	movff	indf2,indf1
 21143                           
 21144                           ; BSR set to: 0
 21145  00D228  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21146  00D22A                     l2200:
 21147                           
 21148                           ; BSR set to: 0
 21149                           
 21150                           ; BSR set to: 0
 21151  00D22A  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21152  00D22C  0D01               	mullw	1
 21153  00D22E  0EBC               	movlw	low __display_temperature@internal
 21154  00D230  24F3               	addwf	prodl,w,c
 21155  00D232  6ED9               	movwf	fsr2l,c
 21156  00D234  0E00               	movlw	high __display_temperature@internal
 21157  00D236  20F4               	addwfc	prodh,w,c
 21158  00D238  6EDA               	movwf	fsr2h,c
 21159  00D23A  50DF               	movf	indf2,w,c
 21160  00D23C  A4D8               	btfss	status,2,c
 21161  00D23E  D7E2               	goto	l2201
 21162                           
 21163                           ; BSR set to: 0
 21164                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 21165                           
 21166                           ; BSR set to: 0
 21167  00D240  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 21168  00D244  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 21169  00D248  0E02               	movlw	2
 21170  00D24A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21171  00D24C  0E74               	movlw	low (_display_content+32)
 21172  00D24E  6F7B               	movwf	__display_itoa@text& (0+255),b
 21173  00D250  0E03               	movlw	high (_display_content+32)
 21174  00D252  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21175  00D254  ECBC  F065         	call	__display_itoa	;wreg free
 21176                           
 21177                           ;display.c: 531: cntr = 0;
 21178  00D258  0E00               	movlw	0
 21179  00D25A  0100               	movlb	0	; () banked
 21180  00D25C  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21181                           
 21182                           ;display.c: 532: while(external1[cntr])
 21183  00D25E  D013               	goto	l2203
 21184  00D260                     
 21185                           ; BSR set to: 0
 21186                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 21187                           
 21188                           ; BSR set to: 0
 21189  00D260  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21190  00D262  0D01               	mullw	1
 21191  00D264  0EA4               	movlw	low __display_temperature@external1
 21192  00D266  24F3               	addwf	prodl,w,c
 21193  00D268  6ED9               	movwf	fsr2l,c
 21194  00D26A  0E00               	movlw	high __display_temperature@external1
 21195  00D26C  20F4               	addwfc	prodh,w,c
 21196  00D26E  6EDA               	movwf	fsr2h,c
 21197  00D270  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21198  00D272  0D01               	mullw	1
 21199  00D274  0E7C               	movlw	low (_display_content+40)
 21200  00D276  24F3               	addwf	prodl,w,c
 21201  00D278  6EE1               	movwf	fsr1l,c
 21202  00D27A  0E03               	movlw	high (_display_content+40)
 21203  00D27C  20F4               	addwfc	prodh,w,c
 21204  00D27E  6EE2               	movwf	fsr1h,c
 21205  00D280  CFDF FFE7          	movff	indf2,indf1
 21206                           
 21207                           ; BSR set to: 0
 21208  00D284  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21209  00D286                     l2203:
 21210                           
 21211                           ; BSR set to: 0
 21212                           
 21213                           ; BSR set to: 0
 21214  00D286  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21215  00D288  0D01               	mullw	1
 21216  00D28A  0EA4               	movlw	low __display_temperature@external1
 21217  00D28C  24F3               	addwf	prodl,w,c
 21218  00D28E  6ED9               	movwf	fsr2l,c
 21219  00D290  0E00               	movlw	high __display_temperature@external1
 21220  00D292  20F4               	addwfc	prodh,w,c
 21221  00D294  6EDA               	movwf	fsr2h,c
 21222  00D296  50DF               	movf	indf2,w,c
 21223  00D298  A4D8               	btfss	status,2,c
 21224  00D29A  D7E2               	goto	l2204
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 21228                           
 21229                           ; BSR set to: 0
 21230  00D29C  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 21231  00D2A0  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 21232  00D2A4  0E02               	movlw	2
 21233  00D2A6  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21234  00D2A8  0E88               	movlw	low (_display_content+52)
 21235  00D2AA  6F7B               	movwf	__display_itoa@text& (0+255),b
 21236  00D2AC  0E03               	movlw	high (_display_content+52)
 21237  00D2AE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21238  00D2B0  ECBC  F065         	call	__display_itoa	;wreg free
 21239                           
 21240                           ;display.c: 537: cntr = 0;
 21241  00D2B4  0E00               	movlw	0
 21242  00D2B6  0100               	movlb	0	; () banked
 21243  00D2B8  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21244                           
 21245                           ;display.c: 538: while(external2[cntr])
 21246  00D2BA  D013               	goto	l2206
 21247  00D2BC                     
 21248                           ; BSR set to: 0
 21249                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 21250                           
 21251                           ; BSR set to: 0
 21252  00D2BC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21253  00D2BE  0D01               	mullw	1
 21254  00D2C0  0EB0               	movlw	low __display_temperature@external2
 21255  00D2C2  24F3               	addwf	prodl,w,c
 21256  00D2C4  6ED9               	movwf	fsr2l,c
 21257  00D2C6  0E00               	movlw	high __display_temperature@external2
 21258  00D2C8  20F4               	addwfc	prodh,w,c
 21259  00D2CA  6EDA               	movwf	fsr2h,c
 21260  00D2CC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21261  00D2CE  0D01               	mullw	1
 21262  00D2D0  0E90               	movlw	low (_display_content+60)
 21263  00D2D2  24F3               	addwf	prodl,w,c
 21264  00D2D4  6EE1               	movwf	fsr1l,c
 21265  00D2D6  0E03               	movlw	high (_display_content+60)
 21266  00D2D8  20F4               	addwfc	prodh,w,c
 21267  00D2DA  6EE2               	movwf	fsr1h,c
 21268  00D2DC  CFDF FFE7          	movff	indf2,indf1
 21269                           
 21270                           ; BSR set to: 0
 21271  00D2E0  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21272  00D2E2                     l2206:
 21273                           
 21274                           ; BSR set to: 0
 21275                           
 21276                           ; BSR set to: 0
 21277  00D2E2  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21278  00D2E4  0D01               	mullw	1
 21279  00D2E6  0EB0               	movlw	low __display_temperature@external2
 21280  00D2E8  24F3               	addwf	prodl,w,c
 21281  00D2EA  6ED9               	movwf	fsr2l,c
 21282  00D2EC  0E00               	movlw	high __display_temperature@external2
 21283  00D2EE  20F4               	addwfc	prodh,w,c
 21284  00D2F0  6EDA               	movwf	fsr2h,c
 21285  00D2F2  50DF               	movf	indf2,w,c
 21286  00D2F4  A4D8               	btfss	status,2,c
 21287  00D2F6  D7E2               	goto	l2207
 21288                           
 21289                           ; BSR set to: 0
 21290                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 21291                           
 21292                           ; BSR set to: 0
 21293  00D2F8  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 21294  00D2FC  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 21295  00D300  0E02               	movlw	2
 21296  00D302  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21297  00D304  0E9C               	movlw	low (_display_content+72)
 21298  00D306  6F7B               	movwf	__display_itoa@text& (0+255),b
 21299  00D308  0E03               	movlw	high (_display_content+72)
 21300  00D30A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21301  00D30C  ECBC  F065         	call	__display_itoa	;wreg free
 21302  00D310  0012               	return		;funcret
 21303  00D312                     __end_of__display_temperature:
 21304                           	opt stack 0
 21305                           tblptru	equ	0xFF8
 21306                           tblptrh	equ	0xFF7
 21307                           tblptrl	equ	0xFF6
 21308                           tablat	equ	0xFF5
 21309                           prodh	equ	0xFF4
 21310                           prodl	equ	0xFF3
 21311                           intcon	equ	0xFF2
 21312                           intcon2	equ	0xFF1
 21313                           intcon3	equ	0xFF0
 21314                           postinc0	equ	0xFEE
 21315                           wreg	equ	0xFE8
 21316                           indf1	equ	0xFE7
 21317                           postinc1	equ	0xFE6
 21318                           postdec1	equ	0xFE5
 21319                           plusw1	equ	0xFE3
 21320                           fsr1h	equ	0xFE2
 21321                           fsr1l	equ	0xFE1
 21322                           indf2	equ	0xFDF
 21323                           postinc2	equ	0xFDE
 21324                           postdec2	equ	0xFDD
 21325                           plusw2	equ	0xFDB
 21326                           fsr2h	equ	0xFDA
 21327                           fsr2l	equ	0xFD9
 21328                           status	equ	0xFD8
 21329                           
 21330 ;; *************** function __display_outputs *****************
 21331 ;; Defined at:
 21332 ;;		line 336 in file "display.c"
 21333 ;; Parameters:    Size  Location     Type
 21334 ;;  mode            1    wreg     unsigned char 
 21335 ;; Auto vars:     Size  Location     Type
 21336 ;;  mode            1   72[BANK0 ] unsigned char 
 21337 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 21338 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 21339 ;;  low            16   42[BANK0 ] const unsigned char [16]
 21340 ;;  header         14   58[BANK0 ] const unsigned char [14]
 21341 ;;  cntr            1   73[BANK0 ] unsigned char 
 21342 ;; Return value:  Size  Location     Type
 21343 ;;                  1    wreg      void 
 21344 ;; Registers used:
 21345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21346 ;; Tracked objects:
 21347 ;;		On entry : 0/0
 21348 ;;		On exit  : 0/0
 21349 ;;		Unchanged: 0/0
 21350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21352 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21354 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21355 ;;Total ram usage:       74 bytes
 21356 ;; Hardware stack levels used:    1
 21357 ;; Hardware stack levels required when called:   10
 21358 ;; This function calls:
 21359 ;;		Nothing
 21360 ;; This function is called by:
 21361 ;;		_display_prepare
 21362 ;; This function uses a non-reentrant model
 21363 ;;
 21364                           
 21365                           	psect	text101
 21366  00C956                     __ptext101:
 21367                           	opt stack 0
 21368  00C956                     __display_outputs:
 21369                           	opt stack 19
 21370                           
 21371                           ;incstack = 0
 21372                           ;__display_outputs@mode stored from wreg
 21373  00C956  0100               	movlb	0	; () banked
 21374  00C958  6FA8               	movwf	__display_outputs@mode& (0+255),b
 21375                           
 21376                           ;display.c: 338: uint8_t cntr;
 21377                           ;display.c: 339: const char header[] = "Power Outputs";
 21378  00C95A  0E89               	movlw	low __display_outputs@F8728
 21379  00C95C  6EF6               	movwf	tblptrl,c
 21380  00C95E                     	if	1	;There is more than 1 active tblptr byte
 21381  00C95E  0E92               	movlw	high __display_outputs@F8728
 21382  00C960  6EF7               	movwf	tblptrh,c
 21383  00C962                     	endif
 21384  00C962                     	if	1	;There are 3 active tblptr bytes
 21385  00C962  0E00               	movlw	low (__display_outputs@F8728 shr (0+16))
 21386  00C964  6EF8               	movwf	tblptru,c
 21387  00C966                     	endif
 21388  00C966  EE20  F09A         	lfsr	2,__display_outputs@header
 21389  00C96A  0E0D               	movlw	13
 21390  00C96C                     u13540:
 21391  00C96C  0009               	tblrd		*+
 21392  00C96E  CFF5 FFDE          	movff	tablat,postinc2
 21393  00C972  06E8               	decf	wreg,f,c
 21394  00C974  E2FB               	bc	u13540
 21395                           
 21396                           ;display.c: 340: const char low[] = "Battery too low";
 21397  00C976  0E2B               	movlw	low __display_outputs@F8730
 21398  00C978  6EF6               	movwf	tblptrl,c
 21399  00C97A                     	if	1	;There is more than 1 active tblptr byte
 21400  00C97A  0E92               	movlw	high __display_outputs@F8730
 21401  00C97C  6EF7               	movwf	tblptrh,c
 21402  00C97E                     	endif
 21403  00C97E                     	if	1	;There are 3 active tblptr bytes
 21404  00C97E  0E00               	movlw	low (__display_outputs@F8730 shr (0+16))
 21405  00C980  6EF8               	movwf	tblptru,c
 21406  00C982                     	endif
 21407  00C982  EE20  F08A         	lfsr	2,__display_outputs@low
 21408  00C986  0E0F               	movlw	15
 21409  00C988                     u13550:
 21410  00C988  0009               	tblrd		*+
 21411  00C98A  CFF5 FFDE          	movff	tablat,postinc2
 21412  00C98E  06E8               	decf	wreg,f,c
 21413  00C990  E2FB               	bc	u13550
 21414                           
 21415                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 21416  00C992  0EEA               	movlw	low __display_outputs@F8732
 21417  00C994  6EF6               	movwf	tblptrl,c
 21418  00C996                     	if	1	;There is more than 1 active tblptr byte
 21419  00C996  0E90               	movlw	high __display_outputs@F8732
 21420  00C998  6EF7               	movwf	tblptrh,c
 21421  00C99A                     	endif
 21422  00C99A                     	if	1	;There are 3 active tblptr bytes
 21423  00C99A  0E00               	movlw	low (__display_outputs@F8732 shr (0+16))
 21424  00C99C  6EF8               	movwf	tblptru,c
 21425  00C99E                     	endif
 21426  00C99E  EE20  F060         	lfsr	2,__display_outputs@line3
 21427  00C9A2  0E14               	movlw	20
 21428  00C9A4                     u13560:
 21429  00C9A4  0009               	tblrd		*+
 21430  00C9A6  CFF5 FFDE          	movff	tablat,postinc2
 21431  00C9AA  06E8               	decf	wreg,f,c
 21432  00C9AC  E2FB               	bc	u13560
 21433                           
 21434                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 21435  00C9AE  0ED5               	movlw	low __display_outputs@F8734
 21436  00C9B0  6EF6               	movwf	tblptrl,c
 21437  00C9B2                     	if	1	;There is more than 1 active tblptr byte
 21438  00C9B2  0E90               	movlw	high __display_outputs@F8734
 21439  00C9B4  6EF7               	movwf	tblptrh,c
 21440  00C9B6                     	endif
 21441  00C9B6                     	if	1	;There are 3 active tblptr bytes
 21442  00C9B6  0E00               	movlw	low (__display_outputs@F8734 shr (0+16))
 21443  00C9B8  6EF8               	movwf	tblptru,c
 21444  00C9BA                     	endif
 21445  00C9BA  EE20  F075         	lfsr	2,__display_outputs@line4
 21446  00C9BE  0E14               	movlw	20
 21447  00C9C0                     u13570:
 21448  00C9C0  0009               	tblrd		*+
 21449  00C9C2  CFF5 FFDE          	movff	tablat,postinc2
 21450  00C9C6  06E8               	decf	wreg,f,c
 21451  00C9C8  E2FB               	bc	u13570
 21452                           
 21453                           ;display.c: 344: cntr = 0;
 21454  00C9CA  0E00               	movlw	0
 21455  00C9CC  0100               	movlb	0	; () banked
 21456  00C9CE  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21457                           
 21458                           ;display.c: 345: while(header[cntr])
 21459  00C9D0  D013               	goto	l2093
 21460  00C9D2                     
 21461                           ; BSR set to: 0
 21462                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 21463                           
 21464                           ; BSR set to: 0
 21465  00C9D2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21466  00C9D4  0D01               	mullw	1
 21467  00C9D6  0E9A               	movlw	low __display_outputs@header
 21468  00C9D8  24F3               	addwf	prodl,w,c
 21469  00C9DA  6ED9               	movwf	fsr2l,c
 21470  00C9DC  0E00               	movlw	high __display_outputs@header
 21471  00C9DE  20F4               	addwfc	prodh,w,c
 21472  00C9E0  6EDA               	movwf	fsr2h,c
 21473  00C9E2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21474  00C9E4  0D01               	mullw	1
 21475  00C9E6  0E54               	movlw	low _display_content
 21476  00C9E8  24F3               	addwf	prodl,w,c
 21477  00C9EA  6EE1               	movwf	fsr1l,c
 21478  00C9EC  0E03               	movlw	high _display_content
 21479  00C9EE  20F4               	addwfc	prodh,w,c
 21480  00C9F0  6EE2               	movwf	fsr1h,c
 21481  00C9F2  CFDF FFE7          	movff	indf2,indf1
 21482                           
 21483                           ; BSR set to: 0
 21484  00C9F6  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21485  00C9F8                     l2093:
 21486                           
 21487                           ; BSR set to: 0
 21488                           
 21489                           ; BSR set to: 0
 21490  00C9F8  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21491  00C9FA  0D01               	mullw	1
 21492  00C9FC  0E9A               	movlw	low __display_outputs@header
 21493  00C9FE  24F3               	addwf	prodl,w,c
 21494  00CA00  6ED9               	movwf	fsr2l,c
 21495  00CA02  0E00               	movlw	high __display_outputs@header
 21496  00CA04  20F4               	addwfc	prodh,w,c
 21497  00CA06  6EDA               	movwf	fsr2h,c
 21498  00CA08  50DF               	movf	indf2,w,c
 21499  00CA0A  A4D8               	btfss	status,2,c
 21500  00CA0C  D7E2               	goto	l2094
 21501                           
 21502                           ; BSR set to: 0
 21503                           ;display.c: 348: if(os.output_voltage<-1)
 21504                           
 21505                           ; BSR set to: 0
 21506  00CA0E  0102               	movlb	2	; () banked
 21507  00CA10  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 21508  00CA12  D027               	goto	u13600
 21509  00CA14  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 21510  00CA16  0EFF               	movlw	255
 21511  00CA18  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 21512  00CA1A  B0D8               	btfsc	status,0,c
 21513  00CA1C  D022               	goto	u13600
 21514                           
 21515                           ; BSR set to: 2
 21516                           ;display.c: 349: {
 21517                           ;display.c: 350: cntr = 0;
 21518  00CA1E  0E00               	movlw	0
 21519  00CA20  0100               	movlb	0	; () banked
 21520  00CA22  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21521                           
 21522                           ;display.c: 351: while(low[cntr])
 21523  00CA24  D013               	goto	l2097
 21524  00CA26                     
 21525                           ; BSR set to: 0
 21526                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 21527                           
 21528                           ; BSR set to: 0
 21529  00CA26  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21530  00CA28  0D01               	mullw	1
 21531  00CA2A  0E8A               	movlw	low __display_outputs@low
 21532  00CA2C  24F3               	addwf	prodl,w,c
 21533  00CA2E  6ED9               	movwf	fsr2l,c
 21534  00CA30  0E00               	movlw	high __display_outputs@low
 21535  00CA32  20F4               	addwfc	prodh,w,c
 21536  00CA34  6EDA               	movwf	fsr2h,c
 21537  00CA36  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21538  00CA38  0D01               	mullw	1
 21539  00CA3A  0E68               	movlw	low (_display_content+20)
 21540  00CA3C  24F3               	addwf	prodl,w,c
 21541  00CA3E  6EE1               	movwf	fsr1l,c
 21542  00CA40  0E03               	movlw	high (_display_content+20)
 21543  00CA42  20F4               	addwfc	prodh,w,c
 21544  00CA44  6EE2               	movwf	fsr1h,c
 21545  00CA46  CFDF FFE7          	movff	indf2,indf1
 21546                           
 21547                           ; BSR set to: 0
 21548  00CA4A  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21549  00CA4C                     l2097:
 21550                           
 21551                           ; BSR set to: 0
 21552                           
 21553                           ; BSR set to: 0
 21554  00CA4C  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21555  00CA4E  0D01               	mullw	1
 21556  00CA50  0E8A               	movlw	low __display_outputs@low
 21557  00CA52  24F3               	addwf	prodl,w,c
 21558  00CA54  6ED9               	movwf	fsr2l,c
 21559  00CA56  0E00               	movlw	high __display_outputs@low
 21560  00CA58  20F4               	addwfc	prodh,w,c
 21561  00CA5A  6EDA               	movwf	fsr2h,c
 21562  00CA5C  50DF               	movf	indf2,w,c
 21563  00CA5E  A4D8               	btfss	status,2,c
 21564  00CA60  D7E2               	goto	l2098
 21565  00CA62                     u13600:
 21566                           
 21567                           ;display.c: 353: }
 21568                           ;display.c: 355: cntr = 0;
 21569                           
 21570                           ; BSR set to: 0
 21571                           
 21572                           ; BSR set to: 0
 21573  00CA62  0E00               	movlw	0
 21574  00CA64  0100               	movlb	0	; () banked
 21575  00CA66  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21576                           
 21577                           ;display.c: 356: while(line3[cntr])
 21578  00CA68  D013               	goto	l2100
 21579  00CA6A                     
 21580                           ; BSR set to: 0
 21581                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 21582                           
 21583                           ; BSR set to: 0
 21584  00CA6A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21585  00CA6C  0D01               	mullw	1
 21586  00CA6E  0E60               	movlw	low __display_outputs@line3
 21587  00CA70  24F3               	addwf	prodl,w,c
 21588  00CA72  6ED9               	movwf	fsr2l,c
 21589  00CA74  0E00               	movlw	high __display_outputs@line3
 21590  00CA76  20F4               	addwfc	prodh,w,c
 21591  00CA78  6EDA               	movwf	fsr2h,c
 21592  00CA7A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21593  00CA7C  0D01               	mullw	1
 21594  00CA7E  0E7C               	movlw	low (_display_content+40)
 21595  00CA80  24F3               	addwf	prodl,w,c
 21596  00CA82  6EE1               	movwf	fsr1l,c
 21597  00CA84  0E03               	movlw	high (_display_content+40)
 21598  00CA86  20F4               	addwfc	prodh,w,c
 21599  00CA88  6EE2               	movwf	fsr1h,c
 21600  00CA8A  CFDF FFE7          	movff	indf2,indf1
 21601                           
 21602                           ; BSR set to: 0
 21603  00CA8E  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21604  00CA90                     l2100:
 21605                           
 21606                           ; BSR set to: 0
 21607                           
 21608                           ; BSR set to: 0
 21609  00CA90  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21610  00CA92  0D01               	mullw	1
 21611  00CA94  0E60               	movlw	low __display_outputs@line3
 21612  00CA96  24F3               	addwf	prodl,w,c
 21613  00CA98  6ED9               	movwf	fsr2l,c
 21614  00CA9A  0E00               	movlw	high __display_outputs@line3
 21615  00CA9C  20F4               	addwfc	prodh,w,c
 21616  00CA9E  6EDA               	movwf	fsr2h,c
 21617  00CAA0  50DF               	movf	indf2,w,c
 21618  00CAA2  A4D8               	btfss	status,2,c
 21619  00CAA4  D7E2               	goto	l2101
 21620                           
 21621                           ; BSR set to: 0
 21622                           ;display.c: 359: cntr = 0;
 21623                           
 21624                           ; BSR set to: 0
 21625  00CAA6  0E00               	movlw	0
 21626  00CAA8  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21627                           
 21628                           ;display.c: 360: while(line4[cntr])
 21629  00CAAA  D013               	goto	l2103
 21630  00CAAC                     
 21631                           ; BSR set to: 0
 21632                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 21633                           
 21634                           ; BSR set to: 0
 21635  00CAAC  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21636  00CAAE  0D01               	mullw	1
 21637  00CAB0  0E75               	movlw	low __display_outputs@line4
 21638  00CAB2  24F3               	addwf	prodl,w,c
 21639  00CAB4  6ED9               	movwf	fsr2l,c
 21640  00CAB6  0E00               	movlw	high __display_outputs@line4
 21641  00CAB8  20F4               	addwfc	prodh,w,c
 21642  00CABA  6EDA               	movwf	fsr2h,c
 21643  00CABC  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21644  00CABE  0D01               	mullw	1
 21645  00CAC0  0E90               	movlw	low (_display_content+60)
 21646  00CAC2  24F3               	addwf	prodl,w,c
 21647  00CAC4  6EE1               	movwf	fsr1l,c
 21648  00CAC6  0E03               	movlw	high (_display_content+60)
 21649  00CAC8  20F4               	addwfc	prodh,w,c
 21650  00CACA  6EE2               	movwf	fsr1h,c
 21651  00CACC  CFDF FFE7          	movff	indf2,indf1
 21652                           
 21653                           ; BSR set to: 0
 21654  00CAD0  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21655  00CAD2                     l2103:
 21656                           
 21657                           ; BSR set to: 0
 21658                           
 21659                           ; BSR set to: 0
 21660  00CAD2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21661  00CAD4  0D01               	mullw	1
 21662  00CAD6  0E75               	movlw	low __display_outputs@line4
 21663  00CAD8  24F3               	addwf	prodl,w,c
 21664  00CADA  6ED9               	movwf	fsr2l,c
 21665  00CADC  0E00               	movlw	high __display_outputs@line4
 21666  00CADE  20F4               	addwfc	prodh,w,c
 21667  00CAE0  6EDA               	movwf	fsr2h,c
 21668  00CAE2  50DF               	movf	indf2,w,c
 21669  00CAE4  A4D8               	btfss	status,2,c
 21670  00CAE6  D7E2               	goto	l2104
 21671                           
 21672                           ; BSR set to: 0
 21673                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 21674  00CAE8  0102               	movlb	2	; () banked
 21675  00CAEA  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 21676  00CAEC  D005               	goto	l2106
 21677                           
 21678                           ; BSR set to: 2
 21679                           ;display.c: 364: {
 21680                           ;display.c: 365: display_content[2][8] = 'n';
 21681  00CAEE  0E6E               	movlw	110
 21682  00CAF0  0103               	movlb	3	; () banked
 21683  00CAF2  6F84               	movwf	(_display_content+48)& (0+255),b
 21684                           
 21685                           ;display.c: 366: display_content[2][9] = ' ';
 21686  00CAF4  0E20               	movlw	32
 21687  00CAF6  6F85               	movwf	(_display_content+49)& (0+255),b
 21688  00CAF8                     l2106:
 21689                           
 21690                           ;display.c: 367: }
 21691                           ;display.c: 368: if(os.outputs & OUTPUT_2)
 21692                           
 21693                           ; BSR set to: 3
 21694  00CAF8  0102               	movlb	2	; () banked
 21695  00CAFA  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 21696  00CAFC  D005               	goto	l2107
 21697                           
 21698                           ; BSR set to: 2
 21699                           ;display.c: 369: {
 21700                           ;display.c: 370: display_content[2][18] = 'n';
 21701  00CAFE  0E6E               	movlw	110
 21702  00CB00  0103               	movlb	3	; () banked
 21703  00CB02  6F8E               	movwf	(_display_content+58)& (0+255),b
 21704                           
 21705                           ;display.c: 371: display_content[2][19] = ' ';
 21706  00CB04  0E20               	movlw	32
 21707  00CB06  6F8F               	movwf	(_display_content+59)& (0+255),b
 21708  00CB08                     l2107:
 21709                           
 21710                           ;display.c: 372: }
 21711                           ;display.c: 373: if(os.outputs & OUTPUT_3)
 21712                           
 21713                           ; BSR set to: 3
 21714  00CB08  0102               	movlb	2	; () banked
 21715  00CB0A  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 21716  00CB0C  D005               	goto	l2108
 21717                           
 21718                           ; BSR set to: 2
 21719                           ;display.c: 374: {
 21720                           ;display.c: 375: display_content[3][8] = 'n';
 21721  00CB0E  0E6E               	movlw	110
 21722  00CB10  0103               	movlb	3	; () banked
 21723  00CB12  6F98               	movwf	(_display_content+68)& (0+255),b
 21724                           
 21725                           ;display.c: 376: display_content[3][9] = ' ';
 21726  00CB14  0E20               	movlw	32
 21727  00CB16  6F99               	movwf	(_display_content+69)& (0+255),b
 21728  00CB18                     l2108:
 21729                           
 21730                           ;display.c: 377: }
 21731                           ;display.c: 378: if(os.outputs & OUTPUT_4)
 21732                           
 21733                           ; BSR set to: 3
 21734  00CB18  0102               	movlb	2	; () banked
 21735  00CB1A  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 21736  00CB1C  D01E               	goto	l2110
 21737                           
 21738                           ; BSR set to: 2
 21739                           ;display.c: 379: {
 21740                           ;display.c: 380: display_content[3][18] = 'n';
 21741  00CB1E  0E6E               	movlw	110
 21742  00CB20  0103               	movlb	3	; () banked
 21743  00CB22  6FA2               	movwf	(_display_content+78)& (0+255),b
 21744                           
 21745                           ;display.c: 381: display_content[3][19] = ' ';
 21746  00CB24  0E20               	movlw	32
 21747  00CB26  6FA3               	movwf	(_display_content+79)& (0+255),b
 21748                           
 21749                           ; BSR set to: 3
 21750                           ;display.c: 382: }
 21751                           ;display.c: 384: switch(mode)
 21752  00CB28  D018               	goto	l2110
 21753  00CB2A                     
 21754                           ;display.c: 387: display_content[2][0] = '-';
 21755                           
 21756                           ; BSR set to: 3
 21757  00CB2A  0E2D               	movlw	45
 21758  00CB2C  0103               	movlb	3	; () banked
 21759  00CB2E  6F7C               	movwf	(_display_content+40)& (0+255),b
 21760                           
 21761                           ;display.c: 388: display_content[2][1] = '>';
 21762  00CB30  0E3E               	movlw	62
 21763  00CB32  6F7D               	movwf	(_display_content+41)& (0+255),b
 21764                           
 21765                           ;display.c: 389: break;
 21766  00CB34  0012               	return	
 21767  00CB36                     
 21768                           ;display.c: 391: display_content[2][10] = '-';
 21769                           
 21770                           ; BSR set to: 3
 21771  00CB36  0E2D               	movlw	45
 21772  00CB38  0103               	movlb	3	; () banked
 21773  00CB3A  6F86               	movwf	(_display_content+50)& (0+255),b
 21774                           
 21775                           ;display.c: 392: display_content[2][11] = '>';
 21776  00CB3C  0E3E               	movlw	62
 21777  00CB3E  6F87               	movwf	(_display_content+51)& (0+255),b
 21778                           
 21779                           ;display.c: 393: break;
 21780  00CB40  0012               	return	
 21781  00CB42                     
 21782                           ;display.c: 395: display_content[3][0] = '-';
 21783                           
 21784                           ; BSR set to: 3
 21785  00CB42  0E2D               	movlw	45
 21786  00CB44  0103               	movlb	3	; () banked
 21787  00CB46  6F90               	movwf	(_display_content+60)& (0+255),b
 21788                           
 21789                           ;display.c: 396: display_content[3][1] = '>';
 21790  00CB48  0E3E               	movlw	62
 21791  00CB4A  6F91               	movwf	(_display_content+61)& (0+255),b
 21792                           
 21793                           ;display.c: 397: break;
 21794  00CB4C  0012               	return	
 21795  00CB4E                     
 21796                           ;display.c: 399: display_content[3][10] = '-';
 21797                           
 21798                           ; BSR set to: 3
 21799  00CB4E  0E2D               	movlw	45
 21800  00CB50  0103               	movlb	3	; () banked
 21801  00CB52  6F9A               	movwf	(_display_content+70)& (0+255),b
 21802                           
 21803                           ;display.c: 400: display_content[3][11] = '>';
 21804  00CB54  0E3E               	movlw	62
 21805  00CB56  6F9B               	movwf	(_display_content+71)& (0+255),b
 21806                           
 21807                           ; BSR set to: 3
 21808                           ;display.c: 402: }
 21809                           
 21810                           ;display.c: 401: break;
 21811  00CB58  0012               	return	
 21812  00CB5A                     l2110:
 21813                           
 21814                           ; BSR set to: 3
 21815  00CB5A  0100               	movlb	0	; () banked
 21816  00CB5C  51A8               	movf	__display_outputs@mode& (0+255),w,b
 21817                           
 21818                           ; Switch size 1, requested type "space"
 21819                           ; Number of cases is 4, Range of values is 49 to 52
 21820                           ; switch strategies available:
 21821                           ; Name         Instructions Cycles
 21822                           ; simple_byte           13     7 (average)
 21823                           ;	Chosen strategy is simple_byte
 21824  00CB5E  0A31               	xorlw	49	; case 49
 21825  00CB60  B4D8               	btfsc	status,2,c
 21826  00CB62  D7E3               	goto	l2111
 21827  00CB64  0A03               	xorlw	3	; case 50
 21828  00CB66  B4D8               	btfsc	status,2,c
 21829  00CB68  D7E6               	goto	l2113
 21830  00CB6A  0A01               	xorlw	1	; case 51
 21831  00CB6C  B4D8               	btfsc	status,2,c
 21832  00CB6E  D7E9               	goto	l2114
 21833  00CB70  0A07               	xorlw	7	; case 52
 21834  00CB72  A4D8               	btfss	status,2,c
 21835  00CB74  0012               	return	
 21836  00CB76  D7EB               	goto	l2115
 21837  00CB78                     __end_of__display_outputs:
 21838                           	opt stack 0
 21839                           tblptru	equ	0xFF8
 21840                           tblptrh	equ	0xFF7
 21841                           tblptrl	equ	0xFF6
 21842                           tablat	equ	0xFF5
 21843                           prodh	equ	0xFF4
 21844                           prodl	equ	0xFF3
 21845                           intcon	equ	0xFF2
 21846                           intcon2	equ	0xFF1
 21847                           intcon3	equ	0xFF0
 21848                           postinc0	equ	0xFEE
 21849                           wreg	equ	0xFE8
 21850                           indf1	equ	0xFE7
 21851                           postinc1	equ	0xFE6
 21852                           postdec1	equ	0xFE5
 21853                           plusw1	equ	0xFE3
 21854                           fsr1h	equ	0xFE2
 21855                           fsr1l	equ	0xFE1
 21856                           indf2	equ	0xFDF
 21857                           postinc2	equ	0xFDE
 21858                           postdec2	equ	0xFDD
 21859                           plusw2	equ	0xFDB
 21860                           fsr2h	equ	0xFDA
 21861                           fsr2l	equ	0xFD9
 21862                           status	equ	0xFD8
 21863                           
 21864 ;; *************** function __display_inout *****************
 21865 ;; Defined at:
 21866 ;;		line 141 in file "display.c"
 21867 ;; Parameters:    Size  Location     Type
 21868 ;;		None
 21869 ;; Auto vars:     Size  Location     Type
 21870 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 21871 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 21872 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 21873 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 21874 ;;  cntr            1  101[BANK0 ] unsigned char 
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  1    wreg      void 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21879 ;; Tracked objects:
 21880 ;;		On entry : 0/0
 21881 ;;		On exit  : 0/0
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21885 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21887 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21888 ;;Total ram usage:       54 bytes
 21889 ;; Hardware stack levels used:    1
 21890 ;; Hardware stack levels required when called:   14
 21891 ;; This function calls:
 21892 ;;		__display_itoa
 21893 ;;		_buck_get_mode
 21894 ;; This function is called by:
 21895 ;;		_display_prepare
 21896 ;; This function uses a non-reentrant model
 21897 ;;
 21898                           
 21899                           	psect	text102
 21900  00CD7E                     __ptext102:
 21901                           	opt stack 0
 21902  00CD7E                     __display_inout:
 21903                           	opt stack 15
 21904                           
 21905                           ;display.c: 143: uint8_t cntr;
 21906                           ;display.c: 144: const char line1[] = "Voltage & Current";
 21907                           
 21908                           ;incstack = 0
 21909  00CD7E  0EF8               	movlw	low __display_inout@F8671
 21910  00CD80  6EF6               	movwf	tblptrl,c
 21911  00CD82                     	if	1	;There is more than 1 active tblptr byte
 21912  00CD82  0E91               	movlw	high __display_inout@F8671
 21913  00CD84  6EF7               	movwf	tblptrh,c
 21914  00CD86                     	endif
 21915  00CD86                     	if	1	;There are 3 active tblptr bytes
 21916  00CD86  0E00               	movlw	low (__display_inout@F8671 shr (0+16))
 21917  00CD88  6EF8               	movwf	tblptru,c
 21918  00CD8A                     	endif
 21919  00CD8A  EE20  F090         	lfsr	2,__display_inout@line1
 21920  00CD8E  0E11               	movlw	17
 21921  00CD90                     u13080:
 21922  00CD90  0009               	tblrd		*+
 21923  00CD92  CFF5 FFDE          	movff	tablat,postinc2
 21924  00CD96  06E8               	decf	wreg,f,c
 21925  00CD98  E2FB               	bc	u13080
 21926                           
 21927                           ;display.c: 145: const char line2[] = "   Input   Output";
 21928  00CD9A  0EE6               	movlw	low __display_inout@F8673
 21929  00CD9C  6EF6               	movwf	tblptrl,c
 21930  00CD9E                     	if	1	;There is more than 1 active tblptr byte
 21931  00CD9E  0E91               	movlw	high __display_inout@F8673
 21932  00CDA0  6EF7               	movwf	tblptrh,c
 21933  00CDA2                     	endif
 21934  00CDA2                     	if	1	;There are 3 active tblptr bytes
 21935  00CDA2  0E00               	movlw	low (__display_inout@F8673 shr (0+16))
 21936  00CDA4  6EF8               	movwf	tblptru,c
 21937  00CDA6                     	endif
 21938  00CDA6  EE20  F0A2         	lfsr	2,__display_inout@line2
 21939  00CDAA  0E11               	movlw	17
 21940  00CDAC                     u13090:
 21941  00CDAC  0009               	tblrd		*+
 21942  00CDAE  CFF5 FFDE          	movff	tablat,postinc2
 21943  00CDB2  06E8               	decf	wreg,f,c
 21944  00CDB4  E2FB               	bc	u13090
 21945                           
 21946                           ;display.c: 146: const char line3[] = "V:";
 21947  00CDB6  0E36               	movlw	low __display_inout@F8675
 21948  00CDB8  6EF6               	movwf	tblptrl,c
 21949  00CDBA                     	if	1	;There is more than 1 active tblptr byte
 21950  00CDBA  0E93               	movlw	high __display_inout@F8675
 21951  00CDBC  6EF7               	movwf	tblptrh,c
 21952  00CDBE                     	endif
 21953  00CDBE                     	if	1	;There are 3 active tblptr bytes
 21954  00CDBE  0E00               	movlw	low (__display_inout@F8675 shr (0+16))
 21955  00CDC0  6EF8               	movwf	tblptru,c
 21956  00CDC2                     	endif
 21957  00CDC2  0009               	tblrd		*+
 21958  00CDC4  CFF5 F0C2          	movff	tablat,__display_inout@line3
 21959  00CDC8  0009               	tblrd		*+
 21960  00CDCA  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 21961  00CDCE  000A               	tblrd		*-
 21962  00CDD0  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 21963                           
 21964                           ;display.c: 147: const char line4[] = "A: --      --";
 21965  00CDD4  0EA5               	movlw	low __display_inout@F8677
 21966  00CDD6  6EF6               	movwf	tblptrl,c
 21967  00CDD8                     	if	1	;There is more than 1 active tblptr byte
 21968  00CDD8  0E92               	movlw	high __display_inout@F8677
 21969  00CDDA  6EF7               	movwf	tblptrh,c
 21970  00CDDC                     	endif
 21971  00CDDC                     	if	1	;There are 3 active tblptr bytes
 21972  00CDDC  0E00               	movlw	low (__display_inout@F8677 shr (0+16))
 21973  00CDDE  6EF8               	movwf	tblptru,c
 21974  00CDE0                     	endif
 21975  00CDE0  EE20  F0B4         	lfsr	2,__display_inout@line4
 21976  00CDE4  0E0D               	movlw	13
 21977  00CDE6                     u13100:
 21978  00CDE6  0009               	tblrd		*+
 21979  00CDE8  CFF5 FFDE          	movff	tablat,postinc2
 21980  00CDEC  06E8               	decf	wreg,f,c
 21981  00CDEE  E2FB               	bc	u13100
 21982                           
 21983                           ;display.c: 149: cntr = 0;
 21984  00CDF0  0E00               	movlw	0
 21985  00CDF2  0100               	movlb	0	; () banked
 21986  00CDF4  6FC5               	movwf	__display_inout@cntr& (0+255),b
 21987                           
 21988                           ;display.c: 150: while(line1[cntr])
 21989  00CDF6  D013               	goto	l1956
 21990  00CDF8                     
 21991                           ; BSR set to: 0
 21992                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 21993                           
 21994                           ; BSR set to: 0
 21995  00CDF8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 21996  00CDFA  0D01               	mullw	1
 21997  00CDFC  0E90               	movlw	low __display_inout@line1
 21998  00CDFE  24F3               	addwf	prodl,w,c
 21999  00CE00  6ED9               	movwf	fsr2l,c
 22000  00CE02  0E00               	movlw	high __display_inout@line1
 22001  00CE04  20F4               	addwfc	prodh,w,c
 22002  00CE06  6EDA               	movwf	fsr2h,c
 22003  00CE08  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22004  00CE0A  0D01               	mullw	1
 22005  00CE0C  0E54               	movlw	low _display_content
 22006  00CE0E  24F3               	addwf	prodl,w,c
 22007  00CE10  6EE1               	movwf	fsr1l,c
 22008  00CE12  0E03               	movlw	high _display_content
 22009  00CE14  20F4               	addwfc	prodh,w,c
 22010  00CE16  6EE2               	movwf	fsr1h,c
 22011  00CE18  CFDF FFE7          	movff	indf2,indf1
 22012                           
 22013                           ; BSR set to: 0
 22014  00CE1C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22015  00CE1E                     l1956:
 22016                           
 22017                           ; BSR set to: 0
 22018                           
 22019                           ; BSR set to: 0
 22020  00CE1E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22021  00CE20  0D01               	mullw	1
 22022  00CE22  0E90               	movlw	low __display_inout@line1
 22023  00CE24  24F3               	addwf	prodl,w,c
 22024  00CE26  6ED9               	movwf	fsr2l,c
 22025  00CE28  0E00               	movlw	high __display_inout@line1
 22026  00CE2A  20F4               	addwfc	prodh,w,c
 22027  00CE2C  6EDA               	movwf	fsr2h,c
 22028  00CE2E  50DF               	movf	indf2,w,c
 22029  00CE30  A4D8               	btfss	status,2,c
 22030  00CE32  D7E2               	goto	l1957
 22031                           
 22032                           ; BSR set to: 0
 22033                           ;display.c: 153: cntr = 0;
 22034                           
 22035                           ; BSR set to: 0
 22036  00CE34  0E00               	movlw	0
 22037  00CE36  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22038                           
 22039                           ;display.c: 154: while(line2[cntr])
 22040  00CE38  D013               	goto	l1959
 22041  00CE3A                     
 22042                           ; BSR set to: 0
 22043                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 22044                           
 22045                           ; BSR set to: 0
 22046  00CE3A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22047  00CE3C  0D01               	mullw	1
 22048  00CE3E  0EA2               	movlw	low __display_inout@line2
 22049  00CE40  24F3               	addwf	prodl,w,c
 22050  00CE42  6ED9               	movwf	fsr2l,c
 22051  00CE44  0E00               	movlw	high __display_inout@line2
 22052  00CE46  20F4               	addwfc	prodh,w,c
 22053  00CE48  6EDA               	movwf	fsr2h,c
 22054  00CE4A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22055  00CE4C  0D01               	mullw	1
 22056  00CE4E  0E68               	movlw	low (_display_content+20)
 22057  00CE50  24F3               	addwf	prodl,w,c
 22058  00CE52  6EE1               	movwf	fsr1l,c
 22059  00CE54  0E03               	movlw	high (_display_content+20)
 22060  00CE56  20F4               	addwfc	prodh,w,c
 22061  00CE58  6EE2               	movwf	fsr1h,c
 22062  00CE5A  CFDF FFE7          	movff	indf2,indf1
 22063                           
 22064                           ; BSR set to: 0
 22065  00CE5E  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22066  00CE60                     l1959:
 22067                           
 22068                           ; BSR set to: 0
 22069                           
 22070                           ; BSR set to: 0
 22071  00CE60  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22072  00CE62  0D01               	mullw	1
 22073  00CE64  0EA2               	movlw	low __display_inout@line2
 22074  00CE66  24F3               	addwf	prodl,w,c
 22075  00CE68  6ED9               	movwf	fsr2l,c
 22076  00CE6A  0E00               	movlw	high __display_inout@line2
 22077  00CE6C  20F4               	addwfc	prodh,w,c
 22078  00CE6E  6EDA               	movwf	fsr2h,c
 22079  00CE70  50DF               	movf	indf2,w,c
 22080  00CE72  A4D8               	btfss	status,2,c
 22081  00CE74  D7E2               	goto	l1960
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;display.c: 157: cntr = 0;
 22085                           
 22086                           ; BSR set to: 0
 22087  00CE76  0E00               	movlw	0
 22088  00CE78  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22089                           
 22090                           ;display.c: 158: while(line3[cntr])
 22091  00CE7A  D013               	goto	l1962
 22092  00CE7C                     
 22093                           ; BSR set to: 0
 22094                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 22095                           
 22096                           ; BSR set to: 0
 22097  00CE7C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22098  00CE7E  0D01               	mullw	1
 22099  00CE80  0EC2               	movlw	low __display_inout@line3
 22100  00CE82  24F3               	addwf	prodl,w,c
 22101  00CE84  6ED9               	movwf	fsr2l,c
 22102  00CE86  0E00               	movlw	high __display_inout@line3
 22103  00CE88  20F4               	addwfc	prodh,w,c
 22104  00CE8A  6EDA               	movwf	fsr2h,c
 22105  00CE8C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22106  00CE8E  0D01               	mullw	1
 22107  00CE90  0E7C               	movlw	low (_display_content+40)
 22108  00CE92  24F3               	addwf	prodl,w,c
 22109  00CE94  6EE1               	movwf	fsr1l,c
 22110  00CE96  0E03               	movlw	high (_display_content+40)
 22111  00CE98  20F4               	addwfc	prodh,w,c
 22112  00CE9A  6EE2               	movwf	fsr1h,c
 22113  00CE9C  CFDF FFE7          	movff	indf2,indf1
 22114                           
 22115                           ; BSR set to: 0
 22116  00CEA0  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22117  00CEA2                     l1962:
 22118                           
 22119                           ; BSR set to: 0
 22120                           
 22121                           ; BSR set to: 0
 22122  00CEA2  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22123  00CEA4  0D01               	mullw	1
 22124  00CEA6  0EC2               	movlw	low __display_inout@line3
 22125  00CEA8  24F3               	addwf	prodl,w,c
 22126  00CEAA  6ED9               	movwf	fsr2l,c
 22127  00CEAC  0E00               	movlw	high __display_inout@line3
 22128  00CEAE  20F4               	addwfc	prodh,w,c
 22129  00CEB0  6EDA               	movwf	fsr2h,c
 22130  00CEB2  50DF               	movf	indf2,w,c
 22131  00CEB4  A4D8               	btfss	status,2,c
 22132  00CEB6  D7E2               	goto	l1963
 22133                           
 22134                           ; BSR set to: 0
 22135                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 22136                           
 22137                           ; BSR set to: 0
 22138  00CEB8  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 22139  00CEBC  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 22140  00CEC0  0E03               	movlw	3
 22141  00CEC2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22142  00CEC4  0E7F               	movlw	low (_display_content+43)
 22143  00CEC6  6F7B               	movwf	__display_itoa@text& (0+255),b
 22144  00CEC8  0E03               	movlw	high (_display_content+43)
 22145  00CECA  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22146  00CECC  ECBC  F065         	call	__display_itoa	;wreg free
 22147                           
 22148                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 22149  00CED0  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 22150  00CED4  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 22151  00CED8  0E03               	movlw	3
 22152  00CEDA  0100               	movlb	0	; () banked
 22153  00CEDC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22154  00CEDE  0E87               	movlw	low (_display_content+51)
 22155  00CEE0  6F7B               	movwf	__display_itoa@text& (0+255),b
 22156  00CEE2  0E03               	movlw	high (_display_content+51)
 22157  00CEE4  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22158  00CEE6  ECBC  F065         	call	__display_itoa	;wreg free
 22159                           
 22160                           ;display.c: 163: cntr = 0;
 22161  00CEEA  0E00               	movlw	0
 22162  00CEEC  0100               	movlb	0	; () banked
 22163  00CEEE  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22164                           
 22165                           ;display.c: 164: while(line4[cntr])
 22166  00CEF0  D013               	goto	l1965
 22167  00CEF2                     
 22168                           ; BSR set to: 0
 22169                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 22170                           
 22171                           ; BSR set to: 0
 22172  00CEF2  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22173  00CEF4  0D01               	mullw	1
 22174  00CEF6  0EB4               	movlw	low __display_inout@line4
 22175  00CEF8  24F3               	addwf	prodl,w,c
 22176  00CEFA  6ED9               	movwf	fsr2l,c
 22177  00CEFC  0E00               	movlw	high __display_inout@line4
 22178  00CEFE  20F4               	addwfc	prodh,w,c
 22179  00CF00  6EDA               	movwf	fsr2h,c
 22180  00CF02  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22181  00CF04  0D01               	mullw	1
 22182  00CF06  0E90               	movlw	low (_display_content+60)
 22183  00CF08  24F3               	addwf	prodl,w,c
 22184  00CF0A  6EE1               	movwf	fsr1l,c
 22185  00CF0C  0E03               	movlw	high (_display_content+60)
 22186  00CF0E  20F4               	addwfc	prodh,w,c
 22187  00CF10  6EE2               	movwf	fsr1h,c
 22188  00CF12  CFDF FFE7          	movff	indf2,indf1
 22189                           
 22190                           ; BSR set to: 0
 22191  00CF16  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22192  00CF18                     l1965:
 22193                           
 22194                           ; BSR set to: 0
 22195                           
 22196                           ; BSR set to: 0
 22197  00CF18  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22198  00CF1A  0D01               	mullw	1
 22199  00CF1C  0EB4               	movlw	low __display_inout@line4
 22200  00CF1E  24F3               	addwf	prodl,w,c
 22201  00CF20  6ED9               	movwf	fsr2l,c
 22202  00CF22  0E00               	movlw	high __display_inout@line4
 22203  00CF24  20F4               	addwfc	prodh,w,c
 22204  00CF26  6EDA               	movwf	fsr2h,c
 22205  00CF28  50DF               	movf	indf2,w,c
 22206  00CF2A  A4D8               	btfss	status,2,c
 22207  00CF2C  D7E2               	goto	l1966
 22208                           
 22209                           ;display.c: 167: {
 22210                           ;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3][3]);
 22211                           
 22212                           ; BSR set to: 0
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 22216  00CF2E  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 22217  00CF32  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 22218  00CF36  0E03               	movlw	3
 22219  00CF38  0100               	movlb	0	; () banked
 22220  00CF3A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22221  00CF3C  0E93               	movlw	low (_display_content+63)
 22222  00CF3E  6F7B               	movwf	__display_itoa@text& (0+255),b
 22223  00CF40  0E03               	movlw	high (_display_content+63)
 22224  00CF42  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22225  00CF44  ECBC  F065         	call	__display_itoa	;wreg free
 22226                           
 22227                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 22228  00CF48  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 22229  00CF4C  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 22230  00CF50  0E03               	movlw	3
 22231  00CF52  0100               	movlb	0	; () banked
 22232  00CF54  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22233  00CF56  0E9B               	movlw	low (_display_content+71)
 22234  00CF58  6F7B               	movwf	__display_itoa@text& (0+255),b
 22235  00CF5A  0E03               	movlw	high (_display_content+71)
 22236  00CF5C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22237  00CF5E  ECBC  F065         	call	__display_itoa	;wreg free
 22238  00CF62  0012               	return	
 22239  00CF64                     __end_of__display_inout:
 22240                           	opt stack 0
 22241                           tblptru	equ	0xFF8
 22242                           tblptrh	equ	0xFF7
 22243                           tblptrl	equ	0xFF6
 22244                           tablat	equ	0xFF5
 22245                           prodh	equ	0xFF4
 22246                           prodl	equ	0xFF3
 22247                           intcon	equ	0xFF2
 22248                           intcon2	equ	0xFF1
 22249                           intcon3	equ	0xFF0
 22250                           postinc0	equ	0xFEE
 22251                           wreg	equ	0xFE8
 22252                           indf1	equ	0xFE7
 22253                           postinc1	equ	0xFE6
 22254                           postdec1	equ	0xFE5
 22255                           plusw1	equ	0xFE3
 22256                           fsr1h	equ	0xFE2
 22257                           fsr1l	equ	0xFE1
 22258                           indf2	equ	0xFDF
 22259                           postinc2	equ	0xFDE
 22260                           postdec2	equ	0xFDD
 22261                           plusw2	equ	0xFDB
 22262                           fsr2h	equ	0xFDA
 22263                           fsr2l	equ	0xFD9
 22264                           status	equ	0xFD8
 22265                           
 22266 ;; *************** function __display_efficiency *****************
 22267 ;; Defined at:
 22268 ;;		line 475 in file "display.c"
 22269 ;; Parameters:    Size  Location     Type
 22270 ;;		None
 22271 ;; Auto vars:     Size  Location     Type
 22272 ;;  source         19   69[BANK0 ] const unsigned char [19]
 22273 ;;  header         19   50[BANK0 ] const unsigned char [19]
 22274 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 22275 ;;  battery         4  109[BANK0 ] long 
 22276 ;;  panel           4  105[BANK0 ] long 
 22277 ;;  efficiency      3  102[BANK0 ] float 
 22278 ;;  cntr            1  113[BANK0 ] unsigned char 
 22279 ;; Return value:  Size  Location     Type
 22280 ;;                  1    wreg      void 
 22281 ;; Registers used:
 22282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22283 ;; Tracked objects:
 22284 ;;		On entry : 0/0
 22285 ;;		On exit  : 0/0
 22286 ;;		Unchanged: 0/0
 22287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22289 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22291 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22292 ;;Total ram usage:       66 bytes
 22293 ;; Hardware stack levels used:    1
 22294 ;; Hardware stack levels required when called:   14
 22295 ;; This function calls:
 22296 ;;		___aldiv
 22297 ;;		___altoft
 22298 ;;		___fttol
 22299 ;;		___lmul
 22300 ;;		__display_itoa
 22301 ;; This function is called by:
 22302 ;;		_display_prepare
 22303 ;; This function uses a non-reentrant model
 22304 ;;
 22305                           
 22306                           	psect	text103
 22307  00B130                     __ptext103:
 22308                           	opt stack 0
 22309  00B130                     __display_efficiency:
 22310                           	opt stack 15
 22311                           
 22312                           ;display.c: 477: uint8_t cntr;
 22313                           ;display.c: 478: const char header[] = "Charger Efficiency";
 22314                           
 22315                           ;incstack = 0
 22316  00B130  0E8A               	movlw	low __display_efficiency@F8759
 22317  00B132  6EF6               	movwf	tblptrl,c
 22318  00B134                     	if	1	;There is more than 1 active tblptr byte
 22319  00B134  0E91               	movlw	high __display_efficiency@F8759
 22320  00B136  6EF7               	movwf	tblptrh,c
 22321  00B138                     	endif
 22322  00B138                     	if	1	;There are 3 active tblptr bytes
 22323  00B138  0E00               	movlw	low (__display_efficiency@F8759 shr (0+16))
 22324  00B13A  6EF8               	movwf	tblptru,c
 22325  00B13C                     	endif
 22326  00B13C  EE20  F092         	lfsr	2,__display_efficiency@header
 22327  00B140  0E12               	movlw	18
 22328  00B142                     u13840:
 22329  00B142  0009               	tblrd		*+
 22330  00B144  CFF5 FFDE          	movff	tablat,postinc2
 22331  00B148  06E8               	decf	wreg,f,c
 22332  00B14A  E2FB               	bc	u13840
 22333                           
 22334                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 22335  00B14C  0E77               	movlw	low __display_efficiency@F8761
 22336  00B14E  6EF6               	movwf	tblptrl,c
 22337  00B150                     	if	1	;There is more than 1 active tblptr byte
 22338  00B150  0E91               	movlw	high __display_efficiency@F8761
 22339  00B152  6EF7               	movwf	tblptrh,c
 22340  00B154                     	endif
 22341  00B154                     	if	1	;There are 3 active tblptr bytes
 22342  00B154  0E00               	movlw	low (__display_efficiency@F8761 shr (0+16))
 22343  00B156  6EF8               	movwf	tblptru,c
 22344  00B158                     	endif
 22345  00B158  EE20  F0A5         	lfsr	2,__display_efficiency@source
 22346  00B15C  0E12               	movlw	18
 22347  00B15E                     u13850:
 22348  00B15E  0009               	tblrd		*+
 22349  00B160  CFF5 FFDE          	movff	tablat,postinc2
 22350  00B164  06E8               	decf	wreg,f,c
 22351  00B166  E2FB               	bc	u13850
 22352                           
 22353                           ;display.c: 480: const char footer[] = "E:         L:";
 22354  00B168  0E7B               	movlw	low __display_efficiency@F8763
 22355  00B16A  6EF6               	movwf	tblptrl,c
 22356  00B16C                     	if	1	;There is more than 1 active tblptr byte
 22357  00B16C  0E92               	movlw	high __display_efficiency@F8763
 22358  00B16E  6EF7               	movwf	tblptrh,c
 22359  00B170                     	endif
 22360  00B170                     	if	1	;There are 3 active tblptr bytes
 22361  00B170  0E00               	movlw	low (__display_efficiency@F8763 shr (0+16))
 22362  00B172  6EF8               	movwf	tblptru,c
 22363  00B174                     	endif
 22364  00B174  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 22365  00B178  0E0D               	movlw	13
 22366  00B17A                     u13860:
 22367  00B17A  0009               	tblrd		*+
 22368  00B17C  CFF5 FFDE          	movff	tablat,postinc2
 22369  00B180  06E8               	decf	wreg,f,c
 22370  00B182  E2FB               	bc	u13860
 22371                           
 22372                           ;display.c: 481: int32_t panel;
 22373                           ;display.c: 482: int32_t battery = (int32_t) os.output_voltage * (int32_t) os.output_cur
      +                          rent;
 22374  00B184  EE22  F027         	lfsr	2,_os+39	;volatile
 22375  00B188  CFDE F060          	movff	postinc2,___lmul@multiplier
 22376  00B18C  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 22377  00B190  0100               	movlb	0	; () banked
 22378  00B192  0E00               	movlw	0
 22379  00B194  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22380  00B196  0EFF               	movlw	-1
 22381  00B198  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 22382  00B19A  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 22383  00B19C  EE22  F032         	lfsr	2,_os+50	;volatile
 22384  00B1A0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22385  00B1A4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22386  00B1A8  0E00               	movlw	0
 22387  00B1AA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22388  00B1AC  0EFF               	movlw	-1
 22389  00B1AE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22390  00B1B0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22391  00B1B2  EC12  F08D         	call	___lmul	;wreg free
 22392  00B1B6  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 22393  00B1BA  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 22394  00B1BE  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 22395  00B1C2  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 22396                           
 22397                           ;display.c: 483: float efficiency;
 22398                           ;display.c: 485: panel = (int32_t) os.input_voltage;
 22399  00B1C6  EE22  F012         	lfsr	2,_os+18	;volatile
 22400  00B1CA  CFDE F0C9          	movff	postinc2,__display_efficiency@panel
 22401  00B1CE  CFDD F0CA          	movff	postdec2,__display_efficiency@panel+1
 22402  00B1D2  0100               	movlb	0	; () banked
 22403  00B1D4  0E00               	movlw	0
 22404  00B1D6  BFCA               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 22405  00B1D8  0EFF               	movlw	-1
 22406  00B1DA  6FCB               	movwf	(__display_efficiency@panel+2)& (0+255),b
 22407  00B1DC  6FCC               	movwf	(__display_efficiency@panel+3)& (0+255),b
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;display.c: 486: panel *= (int32_t) os.input_current;
 22411  00B1DE  C0C9  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 22412  00B1E2  C0CA  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 22413  00B1E6  C0CB  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 22414  00B1EA  C0CC  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 22415  00B1EE  EE22  F01D         	lfsr	2,_os+29	;volatile
 22416  00B1F2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22417  00B1F6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22418  00B1FA  0E00               	movlw	0
 22419  00B1FC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22420  00B1FE  0EFF               	movlw	-1
 22421  00B200  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22422  00B202  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22423  00B204  EC12  F08D         	call	___lmul	;wreg free
 22424  00B208  C060  F0C9         	movff	?___lmul,__display_efficiency@panel
 22425  00B20C  C061  F0CA         	movff	?___lmul+1,__display_efficiency@panel+1
 22426  00B210  C062  F0CB         	movff	?___lmul+2,__display_efficiency@panel+2
 22427  00B214  C063  F0CC         	movff	?___lmul+3,__display_efficiency@panel+3
 22428                           
 22429                           ;display.c: 487: panel /= 1000;
 22430  00B218  C0C9  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 22431  00B21C  C0CA  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 22432  00B220  C0CB  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 22433  00B224  C0CC  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 22434  00B228  0EE8               	movlw	232
 22435  00B22A  0100               	movlb	0	; () banked
 22436  00B22C  6F64               	movwf	___aldiv@divisor& (0+255),b
 22437  00B22E  0E03               	movlw	3
 22438  00B230  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22439  00B232  0E00               	movlw	0
 22440  00B234  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22441  00B236  0E00               	movlw	0
 22442  00B238  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22443  00B23A  EC47  F07C         	call	___aldiv	;wreg free
 22444  00B23E  C060  F0C9         	movff	?___aldiv,__display_efficiency@panel
 22445  00B242  C061  F0CA         	movff	?___aldiv+1,__display_efficiency@panel+1
 22446  00B246  C062  F0CB         	movff	?___aldiv+2,__display_efficiency@panel+2
 22447  00B24A  C063  F0CC         	movff	?___aldiv+3,__display_efficiency@panel+3
 22448                           
 22449                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 22450  00B24E  EE22  F027         	lfsr	2,_os+39	;volatile
 22451  00B252  CFDE F0CD          	movff	postinc2,__display_efficiency@battery
 22452  00B256  CFDD F0CE          	movff	postdec2,__display_efficiency@battery+1
 22453  00B25A  0100               	movlb	0	; () banked
 22454  00B25C  0E00               	movlw	0
 22455  00B25E  BFCE               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 22456  00B260  0EFF               	movlw	-1
 22457  00B262  6FCF               	movwf	(__display_efficiency@battery+2)& (0+255),b
 22458  00B264  6FD0               	movwf	(__display_efficiency@battery+3)& (0+255),b
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;display.c: 490: battery *= os.output_current;
 22462  00B266  C0CD  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 22463  00B26A  C0CE  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 22464  00B26E  C0CF  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 22465  00B272  C0D0  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 22466  00B276  EE22  F032         	lfsr	2,_os+50	;volatile
 22467  00B27A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22468  00B27E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22469  00B282  0E00               	movlw	0
 22470  00B284  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22471  00B286  0EFF               	movlw	-1
 22472  00B288  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22473  00B28A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22474  00B28C  EC12  F08D         	call	___lmul	;wreg free
 22475  00B290  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 22476  00B294  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 22477  00B298  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 22478  00B29C  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 22479                           
 22480                           ;display.c: 491: efficiency = battery / panel;
 22481  00B2A0  C0C9  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 22482  00B2A4  C0CA  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 22483  00B2A8  C0CB  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 22484  00B2AC  C0CC  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 22485  00B2B0  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22486  00B2B4  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22487  00B2B8  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22488  00B2BC  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22489  00B2C0  EC47  F07C         	call	___aldiv	;wreg free
 22490  00B2C4  C060  F06E         	movff	?___aldiv,___altoft@c
 22491  00B2C8  C061  F06F         	movff	?___aldiv+1,___altoft@c+1
 22492  00B2CC  C062  F070         	movff	?___aldiv+2,___altoft@c+2
 22493  00B2D0  C063  F071         	movff	?___aldiv+3,___altoft@c+3
 22494  00B2D4  EC22  F087         	call	___altoft	;wreg free
 22495  00B2D8  C06E  F0C6         	movff	?___altoft,__display_efficiency@efficiency
 22496  00B2DC  C06F  F0C7         	movff	?___altoft+1,__display_efficiency@efficiency+1
 22497  00B2E0  C070  F0C8         	movff	?___altoft+2,__display_efficiency@efficiency+2
 22498                           
 22499                           ;display.c: 492: battery /= 1000;
 22500  00B2E4  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22501  00B2E8  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22502  00B2EC  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22503  00B2F0  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22504  00B2F4  0EE8               	movlw	232
 22505  00B2F6  0100               	movlb	0	; () banked
 22506  00B2F8  6F64               	movwf	___aldiv@divisor& (0+255),b
 22507  00B2FA  0E03               	movlw	3
 22508  00B2FC  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22509  00B2FE  0E00               	movlw	0
 22510  00B300  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22511  00B302  0E00               	movlw	0
 22512  00B304  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22513  00B306  EC47  F07C         	call	___aldiv	;wreg free
 22514  00B30A  C060  F0CD         	movff	?___aldiv,__display_efficiency@battery
 22515  00B30E  C061  F0CE         	movff	?___aldiv+1,__display_efficiency@battery+1
 22516  00B312  C062  F0CF         	movff	?___aldiv+2,__display_efficiency@battery+2
 22517  00B316  C063  F0D0         	movff	?___aldiv+3,__display_efficiency@battery+3
 22518                           
 22519                           ;display.c: 494: cntr = 0;
 22520  00B31A  0E00               	movlw	0
 22521  00B31C  0100               	movlb	0	; () banked
 22522  00B31E  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22523                           
 22524                           ;display.c: 495: while(header[cntr])
 22525  00B320  D013               	goto	l2177
 22526  00B322                     
 22527                           ; BSR set to: 0
 22528                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 22529                           
 22530                           ; BSR set to: 0
 22531  00B322  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22532  00B324  0D01               	mullw	1
 22533  00B326  0E92               	movlw	low __display_efficiency@header
 22534  00B328  24F3               	addwf	prodl,w,c
 22535  00B32A  6ED9               	movwf	fsr2l,c
 22536  00B32C  0E00               	movlw	high __display_efficiency@header
 22537  00B32E  20F4               	addwfc	prodh,w,c
 22538  00B330  6EDA               	movwf	fsr2h,c
 22539  00B332  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22540  00B334  0D01               	mullw	1
 22541  00B336  0E54               	movlw	low _display_content
 22542  00B338  24F3               	addwf	prodl,w,c
 22543  00B33A  6EE1               	movwf	fsr1l,c
 22544  00B33C  0E03               	movlw	high _display_content
 22545  00B33E  20F4               	addwfc	prodh,w,c
 22546  00B340  6EE2               	movwf	fsr1h,c
 22547  00B342  CFDF FFE7          	movff	indf2,indf1
 22548                           
 22549                           ; BSR set to: 0
 22550  00B346  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22551  00B348                     l2177:
 22552                           
 22553                           ; BSR set to: 0
 22554                           
 22555                           ; BSR set to: 0
 22556  00B348  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22557  00B34A  0D01               	mullw	1
 22558  00B34C  0E92               	movlw	low __display_efficiency@header
 22559  00B34E  24F3               	addwf	prodl,w,c
 22560  00B350  6ED9               	movwf	fsr2l,c
 22561  00B352  0E00               	movlw	high __display_efficiency@header
 22562  00B354  20F4               	addwfc	prodh,w,c
 22563  00B356  6EDA               	movwf	fsr2h,c
 22564  00B358  50DF               	movf	indf2,w,c
 22565  00B35A  A4D8               	btfss	status,2,c
 22566  00B35C  D7E2               	goto	l2178
 22567                           
 22568                           ; BSR set to: 0
 22569                           ;display.c: 498: cntr = 0;
 22570                           
 22571                           ; BSR set to: 0
 22572  00B35E  0E00               	movlw	0
 22573  00B360  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22574                           
 22575                           ;display.c: 499: while(source[cntr])
 22576  00B362  D013               	goto	l2180
 22577  00B364                     
 22578                           ; BSR set to: 0
 22579                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 22580                           
 22581                           ; BSR set to: 0
 22582  00B364  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22583  00B366  0D01               	mullw	1
 22584  00B368  0EA5               	movlw	low __display_efficiency@source
 22585  00B36A  24F3               	addwf	prodl,w,c
 22586  00B36C  6ED9               	movwf	fsr2l,c
 22587  00B36E  0E00               	movlw	high __display_efficiency@source
 22588  00B370  20F4               	addwfc	prodh,w,c
 22589  00B372  6EDA               	movwf	fsr2h,c
 22590  00B374  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22591  00B376  0D01               	mullw	1
 22592  00B378  0E68               	movlw	low (_display_content+20)
 22593  00B37A  24F3               	addwf	prodl,w,c
 22594  00B37C  6EE1               	movwf	fsr1l,c
 22595  00B37E  0E03               	movlw	high (_display_content+20)
 22596  00B380  20F4               	addwfc	prodh,w,c
 22597  00B382  6EE2               	movwf	fsr1h,c
 22598  00B384  CFDF FFE7          	movff	indf2,indf1
 22599                           
 22600                           ; BSR set to: 0
 22601  00B388  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22602  00B38A                     l2180:
 22603                           
 22604                           ; BSR set to: 0
 22605                           
 22606                           ; BSR set to: 0
 22607  00B38A  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22608  00B38C  0D01               	mullw	1
 22609  00B38E  0EA5               	movlw	low __display_efficiency@source
 22610  00B390  24F3               	addwf	prodl,w,c
 22611  00B392  6ED9               	movwf	fsr2l,c
 22612  00B394  0E00               	movlw	high __display_efficiency@source
 22613  00B396  20F4               	addwfc	prodh,w,c
 22614  00B398  6EDA               	movwf	fsr2h,c
 22615  00B39A  50DF               	movf	indf2,w,c
 22616  00B39C  A4D8               	btfss	status,2,c
 22617  00B39E  D7E2               	goto	l2181
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 22621                           
 22622                           ; BSR set to: 0
 22623  00B3A0  C0C9  F078         	movff	__display_efficiency@panel,__display_itoa@value
 22624  00B3A4  C0CA  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 22625  00B3A8  0E03               	movlw	3
 22626  00B3AA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22627  00B3AC  0E7C               	movlw	low (_display_content+40)
 22628  00B3AE  6F7B               	movwf	__display_itoa@text& (0+255),b
 22629  00B3B0  0E03               	movlw	high (_display_content+40)
 22630  00B3B2  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22631  00B3B4  ECBC  F065         	call	__display_itoa	;wreg free
 22632                           
 22633                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 22634  00B3B8  C0CD  F078         	movff	__display_efficiency@battery,__display_itoa@value
 22635  00B3BC  C0CE  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 22636  00B3C0  0E03               	movlw	3
 22637  00B3C2  0100               	movlb	0	; () banked
 22638  00B3C4  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22639  00B3C6  0E86               	movlw	low (_display_content+50)
 22640  00B3C8  6F7B               	movwf	__display_itoa@text& (0+255),b
 22641  00B3CA  0E03               	movlw	high (_display_content+50)
 22642  00B3CC  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22643  00B3CE  ECBC  F065         	call	__display_itoa	;wreg free
 22644                           
 22645                           ;display.c: 505: cntr = 0;
 22646  00B3D2  0E00               	movlw	0
 22647  00B3D4  0100               	movlb	0	; () banked
 22648  00B3D6  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22649                           
 22650                           ;display.c: 506: while(footer[cntr])
 22651  00B3D8  D013               	goto	l2183
 22652  00B3DA                     
 22653                           ; BSR set to: 0
 22654                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 22655                           
 22656                           ; BSR set to: 0
 22657  00B3DA  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22658  00B3DC  0D01               	mullw	1
 22659  00B3DE  0EB8               	movlw	low __display_efficiency@footer
 22660  00B3E0  24F3               	addwf	prodl,w,c
 22661  00B3E2  6ED9               	movwf	fsr2l,c
 22662  00B3E4  0E00               	movlw	high __display_efficiency@footer
 22663  00B3E6  20F4               	addwfc	prodh,w,c
 22664  00B3E8  6EDA               	movwf	fsr2h,c
 22665  00B3EA  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22666  00B3EC  0D01               	mullw	1
 22667  00B3EE  0E90               	movlw	low (_display_content+60)
 22668  00B3F0  24F3               	addwf	prodl,w,c
 22669  00B3F2  6EE1               	movwf	fsr1l,c
 22670  00B3F4  0E03               	movlw	high (_display_content+60)
 22671  00B3F6  20F4               	addwfc	prodh,w,c
 22672  00B3F8  6EE2               	movwf	fsr1h,c
 22673  00B3FA  CFDF FFE7          	movff	indf2,indf1
 22674                           
 22675                           ; BSR set to: 0
 22676  00B3FE  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22677  00B400                     l2183:
 22678                           
 22679                           ; BSR set to: 0
 22680                           
 22681                           ; BSR set to: 0
 22682  00B400  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22683  00B402  0D01               	mullw	1
 22684  00B404  0EB8               	movlw	low __display_efficiency@footer
 22685  00B406  24F3               	addwf	prodl,w,c
 22686  00B408  6ED9               	movwf	fsr2l,c
 22687  00B40A  0E00               	movlw	high __display_efficiency@footer
 22688  00B40C  20F4               	addwfc	prodh,w,c
 22689  00B40E  6EDA               	movwf	fsr2h,c
 22690  00B410  50DF               	movf	indf2,w,c
 22691  00B412  A4D8               	btfss	status,2,c
 22692  00B414  D7E2               	goto	l2184
 22693                           
 22694                           ; BSR set to: 0
 22695                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 22696                           
 22697                           ; BSR set to: 0
 22698  00B416  C0C6  F060         	movff	__display_efficiency@efficiency,___fttol@f1
 22699  00B41A  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fttol@f1+1
 22700  00B41E  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fttol@f1+2
 22701  00B422  EC66  F076         	call	___fttol	;wreg free
 22702  00B426  C060  F078         	movff	?___fttol,__display_itoa@value
 22703  00B42A  C061  F079         	movff	?___fttol+1,__display_itoa@value+1
 22704  00B42E  0E01               	movlw	1
 22705  00B430  0100               	movlb	0	; () banked
 22706  00B432  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22707  00B434  0E93               	movlw	low (_display_content+63)
 22708  00B436  6F7B               	movwf	__display_itoa@text& (0+255),b
 22709  00B438  0E03               	movlw	high (_display_content+63)
 22710  00B43A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22711  00B43C  ECBC  F065         	call	__display_itoa	;wreg free
 22712                           
 22713                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 22714  00B440  C0CD  F090         	movff	__display_efficiency@battery,??__display_efficiency
 22715  00B444  C0CE  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 22716  00B448  0100               	movlb	0	; () banked
 22717  00B44A  1F90               	comf	??__display_efficiency& (0+255),f,b
 22718  00B44C  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 22719  00B44E  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 22720  00B450  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 22721  00B452  51C9               	movf	__display_efficiency@panel& (0+255),w,b
 22722  00B454  2590               	addwf	??__display_efficiency& (0+255),w,b
 22723  00B456  6F78               	movwf	__display_itoa@value& (0+255),b
 22724  00B458  51CA               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 22725  00B45A  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 22726  00B45C  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 22727  00B45E  0E03               	movlw	3
 22728  00B460  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22729  00B462  0E9E               	movlw	low (_display_content+74)
 22730  00B464  6F7B               	movwf	__display_itoa@text& (0+255),b
 22731  00B466  0E03               	movlw	high (_display_content+74)
 22732  00B468  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22733  00B46A  ECBC  F065         	call	__display_itoa	;wreg free
 22734  00B46E  0012               	return		;funcret
 22735  00B470                     __end_of__display_efficiency:
 22736                           	opt stack 0
 22737                           tblptru	equ	0xFF8
 22738                           tblptrh	equ	0xFF7
 22739                           tblptrl	equ	0xFF6
 22740                           tablat	equ	0xFF5
 22741                           prodh	equ	0xFF4
 22742                           prodl	equ	0xFF3
 22743                           intcon	equ	0xFF2
 22744                           intcon2	equ	0xFF1
 22745                           intcon3	equ	0xFF0
 22746                           postinc0	equ	0xFEE
 22747                           wreg	equ	0xFE8
 22748                           indf1	equ	0xFE7
 22749                           postinc1	equ	0xFE6
 22750                           postdec1	equ	0xFE5
 22751                           plusw1	equ	0xFE3
 22752                           fsr1h	equ	0xFE2
 22753                           fsr1l	equ	0xFE1
 22754                           indf2	equ	0xFDF
 22755                           postinc2	equ	0xFDE
 22756                           postdec2	equ	0xFDD
 22757                           plusw2	equ	0xFDB
 22758                           fsr2h	equ	0xFDA
 22759                           fsr2l	equ	0xFD9
 22760                           status	equ	0xFD8
 22761                           
 22762 ;; *************** function ___fttol *****************
 22763 ;; Defined at:
 22764 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 22765 ;; Parameters:    Size  Location     Type
 22766 ;;  f1              3    0[BANK0 ] float 
 22767 ;; Auto vars:     Size  Location     Type
 22768 ;;  lval            4   10[BANK0 ] unsigned long 
 22769 ;;  exp1            1   14[BANK0 ] unsigned char 
 22770 ;;  sign1           1    9[BANK0 ] unsigned char 
 22771 ;; Return value:  Size  Location     Type
 22772 ;;                  4    0[BANK0 ] long 
 22773 ;; Registers used:
 22774 ;;		wreg, status,2, status,0
 22775 ;; Tracked objects:
 22776 ;;		On entry : 0/0
 22777 ;;		On exit  : 0/0
 22778 ;;		Unchanged: 0/0
 22779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22780 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22781 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22782 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22783 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22784 ;;Total ram usage:       15 bytes
 22785 ;; Hardware stack levels used:    1
 22786 ;; Hardware stack levels required when called:   10
 22787 ;; This function calls:
 22788 ;;		Nothing
 22789 ;; This function is called by:
 22790 ;;		__display_efficiency
 22791 ;; This function uses a non-reentrant model
 22792 ;;
 22793                           
 22794                           	psect	text104
 22795  00ECCC                     __ptext104:
 22796                           	opt stack 0
 22797  00ECCC                     ___fttol:
 22798                           	opt stack 18
 22799                           
 22800                           ;incstack = 0
 22801  00ECCC  C062  F064         	movff	___fttol@f1+2,??___fttol
 22802  00ECD0  0100               	movlb	0	; () banked
 22803  00ECD2  6B65               	clrf	(??___fttol+1)& (0+255),b
 22804  00ECD4  6B66               	clrf	(??___fttol+2)& (0+255),b
 22805  00ECD6  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
 22806  00ECD8  3764               	rlcf	??___fttol& (0+255),f,b
 22807  00ECDA  E301               	bnc	u11911
 22808  00ECDC  8165               	bsf	(??___fttol+1)& (0+255),0,b
 22809  00ECDE                     u11911:
 22810  00ECDE  5164               	movf	??___fttol& (0+255),w,b
 22811  00ECE0  6F6E               	movwf	___fttol@exp1& (0+255),b
 22812  00ECE2  516E               	movf	___fttol@exp1& (0+255),w,b
 22813  00ECE4  A4D8               	btfss	status,2,c
 22814  00ECE6  D009               	goto	l3614
 22815                           
 22816                           ; BSR set to: 0
 22817  00ECE8  0E00               	movlw	0
 22818  00ECEA  6F60               	movwf	?___fttol& (0+255),b
 22819  00ECEC  0E00               	movlw	0
 22820  00ECEE  6F61               	movwf	(?___fttol+1)& (0+255),b
 22821  00ECF0  0E00               	movlw	0
 22822  00ECF2  6F62               	movwf	(?___fttol+2)& (0+255),b
 22823  00ECF4  0E00               	movlw	0
 22824  00ECF6  6F63               	movwf	(?___fttol+3)& (0+255),b
 22825                           
 22826                           ; BSR set to: 0
 22827  00ECF8  0012               	return	
 22828  00ECFA                     l3614:
 22829                           
 22830                           ; BSR set to: 0
 22831                           
 22832                           ; BSR set to: 0
 22833  00ECFA  0E17               	movlw	23
 22834  00ECFC  6F64               	movwf	??___fttol& (0+255),b
 22835  00ECFE  C060  F065         	movff	___fttol@f1,??___fttol+1
 22836  00ED02  C061  F066         	movff	___fttol@f1+1,??___fttol+2
 22837  00ED06  C062  F067         	movff	___fttol@f1+2,??___fttol+3
 22838  00ED0A  2964               	incf	??___fttol& (0+255),w,b
 22839  00ED0C  6F68               	movwf	(??___fttol+4)& (0+255),b
 22840  00ED0E  D004               	goto	u11930
 22841  00ED10                     u11935:
 22842  00ED10  90D8               	bcf	status,0,c
 22843  00ED12  3367               	rrcf	(??___fttol+3)& (0+255),f,b
 22844  00ED14  3366               	rrcf	(??___fttol+2)& (0+255),f,b
 22845  00ED16  3365               	rrcf	(??___fttol+1)& (0+255),f,b
 22846  00ED18                     u11930:
 22847  00ED18  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
 22848  00ED1A  D7FA               	goto	u11935
 22849  00ED1C  0100               	movlb	0	; () banked
 22850  00ED1E  5165               	movf	(??___fttol+1)& (0+255),w,b
 22851  00ED20  6F69               	movwf	___fttol@sign1& (0+255),b
 22852                           
 22853                           ; BSR set to: 0
 22854  00ED22  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
 22855                           
 22856                           ; BSR set to: 0
 22857  00ED24  0EFF               	movlw	255
 22858  00ED26  1760               	andwf	___fttol@f1& (0+255),f,b
 22859  00ED28  0EFF               	movlw	255
 22860  00ED2A  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
 22861  00ED2C  0E00               	movlw	0
 22862  00ED2E  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
 22863                           
 22864                           ; BSR set to: 0
 22865  00ED30  5160               	movf	___fttol@f1& (0+255),w,b
 22866  00ED32  6F6A               	movwf	___fttol@lval& (0+255),b
 22867  00ED34  5161               	movf	(___fttol@f1+1)& (0+255),w,b
 22868  00ED36  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
 22869  00ED38  5162               	movf	(___fttol@f1+2)& (0+255),w,b
 22870  00ED3A  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
 22871  00ED3C  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
 22872                           
 22873                           ; BSR set to: 0
 22874  00ED3E  0E8E               	movlw	142
 22875  00ED40  5F6E               	subwf	___fttol@exp1& (0+255),f,b
 22876                           
 22877                           ; BSR set to: 0
 22878  00ED42  AF6E               	btfss	___fttol@exp1& (0+255),7,b
 22879  00ED44  D016               	goto	l3616
 22880                           
 22881                           ; BSR set to: 0
 22882  00ED46  516E               	movf	___fttol@exp1& (0+255),w,b
 22883  00ED48  0A80               	xorlw	128
 22884  00ED4A  0F8F               	addlw	143
 22885  00ED4C  B0D8               	btfsc	status,0,c
 22886  00ED4E  D009               	goto	l3617
 22887                           
 22888                           ; BSR set to: 0
 22889  00ED50  0E00               	movlw	0
 22890  00ED52  6F60               	movwf	?___fttol& (0+255),b
 22891  00ED54  0E00               	movlw	0
 22892  00ED56  6F61               	movwf	(?___fttol+1)& (0+255),b
 22893  00ED58  0E00               	movlw	0
 22894  00ED5A  6F62               	movwf	(?___fttol+2)& (0+255),b
 22895  00ED5C  0E00               	movlw	0
 22896  00ED5E  6F63               	movwf	(?___fttol+3)& (0+255),b
 22897                           
 22898                           ; BSR set to: 0
 22899  00ED60  0012               	return	
 22900  00ED62                     l3617:
 22901                           
 22902                           ; BSR set to: 0
 22903                           
 22904                           ; BSR set to: 0
 22905                           
 22906                           ; BSR set to: 0
 22907  00ED62  90D8               	bcf	status,0,c
 22908  00ED64  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 22909  00ED66  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 22910  00ED68  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 22911  00ED6A  336A               	rrcf	___fttol@lval& (0+255),f,b
 22912                           
 22913                           ; BSR set to: 0
 22914  00ED6C  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
 22915  00ED6E  D7F9               	goto	l3617
 22916                           
 22917                           ; BSR set to: 0
 22918  00ED70  D015               	goto	u11970
 22919  00ED72                     l3616:
 22920                           
 22921                           ; BSR set to: 0
 22922                           
 22923                           ; BSR set to: 0
 22924  00ED72  0E17               	movlw	23
 22925  00ED74  656E               	cpfsgt	___fttol@exp1& (0+255),b
 22926  00ED76  D00F               	goto	l3622
 22927                           
 22928                           ; BSR set to: 0
 22929  00ED78  0E00               	movlw	0
 22930  00ED7A  6F60               	movwf	?___fttol& (0+255),b
 22931  00ED7C  0E00               	movlw	0
 22932  00ED7E  6F61               	movwf	(?___fttol+1)& (0+255),b
 22933  00ED80  0E00               	movlw	0
 22934  00ED82  6F62               	movwf	(?___fttol+2)& (0+255),b
 22935  00ED84  0E00               	movlw	0
 22936  00ED86  6F63               	movwf	(?___fttol+3)& (0+255),b
 22937                           
 22938                           ; BSR set to: 0
 22939  00ED88  0012               	return	
 22940  00ED8A                     
 22941                           ; BSR set to: 0
 22942                           
 22943                           ; BSR set to: 0
 22944  00ED8A  90D8               	bcf	status,0,c
 22945  00ED8C  376A               	rlcf	___fttol@lval& (0+255),f,b
 22946  00ED8E  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 22947  00ED90  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 22948  00ED92  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 22949  00ED94  076E               	decf	___fttol@exp1& (0+255),f,b
 22950  00ED96                     l3622:
 22951                           
 22952                           ; BSR set to: 0
 22953                           
 22954                           ; BSR set to: 0
 22955  00ED96  516E               	movf	___fttol@exp1& (0+255),w,b
 22956  00ED98  A4D8               	btfss	status,2,c
 22957  00ED9A  D7F7               	goto	l3623
 22958  00ED9C                     u11970:
 22959                           
 22960                           ; BSR set to: 0
 22961                           
 22962                           ; BSR set to: 0
 22963                           
 22964                           ; BSR set to: 0
 22965  00ED9C  5169               	movf	___fttol@sign1& (0+255),w,b
 22966  00ED9E  B4D8               	btfsc	status,2,c
 22967  00EDA0  D008               	goto	l3625
 22968                           
 22969                           ; BSR set to: 0
 22970  00EDA2  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
 22971  00EDA4  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
 22972  00EDA6  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
 22973  00EDA8  6D6A               	negf	___fttol@lval& (0+255),b
 22974  00EDAA  0E00               	movlw	0
 22975  00EDAC  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 22976  00EDAE  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 22977  00EDB0  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 22978  00EDB2                     l3625:
 22979                           
 22980                           ; BSR set to: 0
 22981                           
 22982                           ; BSR set to: 0
 22983  00EDB2  C06A  F060         	movff	___fttol@lval,?___fttol
 22984  00EDB6  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 22985  00EDBA  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 22986  00EDBE  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 22987  00EDC2  0012               	return	
 22988  00EDC4                     __end_of___fttol:
 22989                           	opt stack 0
 22990                           tblptru	equ	0xFF8
 22991                           tblptrh	equ	0xFF7
 22992                           tblptrl	equ	0xFF6
 22993                           tablat	equ	0xFF5
 22994                           prodh	equ	0xFF4
 22995                           prodl	equ	0xFF3
 22996                           intcon	equ	0xFF2
 22997                           intcon2	equ	0xFF1
 22998                           intcon3	equ	0xFF0
 22999                           postinc0	equ	0xFEE
 23000                           wreg	equ	0xFE8
 23001                           indf1	equ	0xFE7
 23002                           postinc1	equ	0xFE6
 23003                           postdec1	equ	0xFE5
 23004                           plusw1	equ	0xFE3
 23005                           fsr1h	equ	0xFE2
 23006                           fsr1l	equ	0xFE1
 23007                           indf2	equ	0xFDF
 23008                           postinc2	equ	0xFDE
 23009                           postdec2	equ	0xFDD
 23010                           plusw2	equ	0xFDB
 23011                           fsr2h	equ	0xFDA
 23012                           fsr2l	equ	0xFD9
 23013                           status	equ	0xFD8
 23014                           
 23015 ;; *************** function ___altoft *****************
 23016 ;; Defined at:
 23017 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\altoft.c"
 23018 ;; Parameters:    Size  Location     Type
 23019 ;;  c               4   14[BANK0 ] long 
 23020 ;; Auto vars:     Size  Location     Type
 23021 ;;  sign            1   23[BANK0 ] unsigned char 
 23022 ;;  exp             1   22[BANK0 ] unsigned char 
 23023 ;; Return value:  Size  Location     Type
 23024 ;;                  3   14[BANK0 ] float 
 23025 ;; Registers used:
 23026 ;;		wreg, status,2, status,0, cstack
 23027 ;; Tracked objects:
 23028 ;;		On entry : 0/0
 23029 ;;		On exit  : 0/0
 23030 ;;		Unchanged: 0/0
 23031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23035 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23036 ;;Total ram usage:       10 bytes
 23037 ;; Hardware stack levels used:    1
 23038 ;; Hardware stack levels required when called:   11
 23039 ;; This function calls:
 23040 ;;		___ftpack
 23041 ;; This function is called by:
 23042 ;;		__display_efficiency
 23043 ;; This function uses a non-reentrant model
 23044 ;;
 23045                           
 23046                           	psect	text105
 23047  010E44                     __ptext105:
 23048                           	opt stack 0
 23049  010E44                     ___altoft:
 23050                           	opt stack 17
 23051                           
 23052                           ; BSR set to: 0
 23053                           ;incstack = 0
 23054  010E44  0E00               	movlw	0
 23055  010E46  0100               	movlb	0	; () banked
 23056  010E48  6F77               	movwf	___altoft@sign& (0+255),b
 23057  010E4A  0E8E               	movlw	142
 23058  010E4C  6F76               	movwf	___altoft@exp& (0+255),b
 23059                           
 23060                           ; BSR set to: 0
 23061  010E4E  AF71               	btfss	(___altoft@c+3)& (0+255),7,b
 23062  010E50  D011               	goto	l3384
 23063                           
 23064                           ; BSR set to: 0
 23065  010E52  1F71               	comf	(___altoft@c+3)& (0+255),f,b
 23066  010E54  1F70               	comf	(___altoft@c+2)& (0+255),f,b
 23067  010E56  1F6F               	comf	(___altoft@c+1)& (0+255),f,b
 23068  010E58  6D6E               	negf	___altoft@c& (0+255),b
 23069  010E5A  0E00               	movlw	0
 23070  010E5C  236F               	addwfc	(___altoft@c+1)& (0+255),f,b
 23071  010E5E  2370               	addwfc	(___altoft@c+2)& (0+255),f,b
 23072  010E60  2371               	addwfc	(___altoft@c+3)& (0+255),f,b
 23073                           
 23074                           ; BSR set to: 0
 23075  010E62  0E01               	movlw	1
 23076  010E64  6F77               	movwf	___altoft@sign& (0+255),b
 23077                           
 23078                           ; BSR set to: 0
 23079  010E66  D006               	goto	l3384
 23080  010E68                     
 23081                           ; BSR set to: 0
 23082                           
 23083                           ; BSR set to: 0
 23084  010E68  90D8               	bcf	status,0,c
 23085  010E6A  3371               	rrcf	(___altoft@c+3)& (0+255),f,b
 23086  010E6C  3370               	rrcf	(___altoft@c+2)& (0+255),f,b
 23087  010E6E  336F               	rrcf	(___altoft@c+1)& (0+255),f,b
 23088  010E70  336E               	rrcf	___altoft@c& (0+255),f,b
 23089  010E72  2B76               	incf	___altoft@exp& (0+255),f,b
 23090  010E74                     l3384:
 23091                           
 23092                           ; BSR set to: 0
 23093                           
 23094                           ; BSR set to: 0
 23095  010E74  0E00               	movlw	0
 23096  010E76  156E               	andwf	___altoft@c& (0+255),w,b
 23097  010E78  6F72               	movwf	??___altoft& (0+255),b
 23098  010E7A  0E00               	movlw	0
 23099  010E7C  156F               	andwf	(___altoft@c+1)& (0+255),w,b
 23100  010E7E  6F73               	movwf	(??___altoft+1)& (0+255),b
 23101  010E80  0E00               	movlw	0
 23102  010E82  1570               	andwf	(___altoft@c+2)& (0+255),w,b
 23103  010E84  6F74               	movwf	(??___altoft+2)& (0+255),b
 23104  010E86  0EFF               	movlw	255
 23105  010E88  1571               	andwf	(___altoft@c+3)& (0+255),w,b
 23106  010E8A  6F75               	movwf	(??___altoft+3)& (0+255),b
 23107  010E8C  5172               	movf	??___altoft& (0+255),w,b
 23108  010E8E  1173               	iorwf	(??___altoft+1)& (0+255),w,b
 23109  010E90  1174               	iorwf	(??___altoft+2)& (0+255),w,b
 23110  010E92  1175               	iorwf	(??___altoft+3)& (0+255),w,b
 23111  010E94  A4D8               	btfss	status,2,c
 23112  010E96  D7E8               	goto	l3385
 23113                           
 23114                           ; BSR set to: 0
 23115                           
 23116                           ; BSR set to: 0
 23117  010E98  C06E  F060         	movff	___altoft@c,___ftpack@arg
 23118  010E9C  C06F  F061         	movff	___altoft@c+1,___ftpack@arg+1
 23119  010EA0  C070  F062         	movff	___altoft@c+2,___ftpack@arg+2
 23120  010EA4  C076  F063         	movff	___altoft@exp,___ftpack@exp
 23121  010EA8  C077  F064         	movff	___altoft@sign,___ftpack@sign
 23122  010EAC  ECB1  F07F         	call	___ftpack	;wreg free
 23123  010EB0  C060  F06E         	movff	?___ftpack,?___altoft
 23124  010EB4  C061  F06F         	movff	?___ftpack+1,?___altoft+1
 23125  010EB8  C062  F070         	movff	?___ftpack+2,?___altoft+2
 23126  010EBC  0012               	return	
 23127  010EBE                     __end_of___altoft:
 23128                           	opt stack 0
 23129                           tblptru	equ	0xFF8
 23130                           tblptrh	equ	0xFF7
 23131                           tblptrl	equ	0xFF6
 23132                           tablat	equ	0xFF5
 23133                           prodh	equ	0xFF4
 23134                           prodl	equ	0xFF3
 23135                           intcon	equ	0xFF2
 23136                           intcon2	equ	0xFF1
 23137                           intcon3	equ	0xFF0
 23138                           postinc0	equ	0xFEE
 23139                           wreg	equ	0xFE8
 23140                           indf1	equ	0xFE7
 23141                           postinc1	equ	0xFE6
 23142                           postdec1	equ	0xFE5
 23143                           plusw1	equ	0xFE3
 23144                           fsr1h	equ	0xFE2
 23145                           fsr1l	equ	0xFE1
 23146                           indf2	equ	0xFDF
 23147                           postinc2	equ	0xFDE
 23148                           postdec2	equ	0xFDD
 23149                           plusw2	equ	0xFDB
 23150                           fsr2h	equ	0xFDA
 23151                           fsr2l	equ	0xFD9
 23152                           status	equ	0xFD8
 23153                           
 23154 ;; *************** function ___ftpack *****************
 23155 ;; Defined at:
 23156 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 23157 ;; Parameters:    Size  Location     Type
 23158 ;;  arg             3    0[BANK0 ] unsigned um
 23159 ;;  exp             1    3[BANK0 ] unsigned char 
 23160 ;;  sign            1    4[BANK0 ] unsigned char 
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;		None
 23163 ;; Return value:  Size  Location     Type
 23164 ;;                  3    0[BANK0 ] float 
 23165 ;; Registers used:
 23166 ;;		wreg, status,2, status,0
 23167 ;; Tracked objects:
 23168 ;;		On entry : 0/0
 23169 ;;		On exit  : 0/0
 23170 ;;		Unchanged: 0/0
 23171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23172 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23174 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23175 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23176 ;;Total ram usage:        8 bytes
 23177 ;; Hardware stack levels used:    1
 23178 ;; Hardware stack levels required when called:   10
 23179 ;; This function calls:
 23180 ;;		Nothing
 23181 ;; This function is called by:
 23182 ;;		___altoft
 23183 ;; This function uses a non-reentrant model
 23184 ;;
 23185                           
 23186                           	psect	text106
 23187  00FF62                     __ptext106:
 23188                           	opt stack 0
 23189  00FF62                     ___ftpack:
 23190                           	opt stack 17
 23191                           
 23192                           ;incstack = 0
 23193  00FF62  0100               	movlb	0	; () banked
 23194  00FF64  5163               	movf	___ftpack@exp& (0+255),w,b
 23195  00FF66  B4D8               	btfsc	status,2,c
 23196  00FF68  D005               	goto	u10840
 23197                           
 23198                           ; BSR set to: 0
 23199  00FF6A  5160               	movf	___ftpack@arg& (0+255),w,b
 23200  00FF6C  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 23201  00FF6E  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 23202  00FF70  A4D8               	btfss	status,2,c
 23203  00FF72  D00C               	goto	l3514
 23204  00FF74                     u10840:
 23205                           
 23206                           ; BSR set to: 0
 23207                           
 23208                           ; BSR set to: 0
 23209  00FF74  0E00               	movlw	0
 23210  00FF76  6F60               	movwf	?___ftpack& (0+255),b
 23211  00FF78  0E00               	movlw	0
 23212  00FF7A  6F61               	movwf	(?___ftpack+1)& (0+255),b
 23213  00FF7C  0E00               	movlw	0
 23214  00FF7E  6F62               	movwf	(?___ftpack+2)& (0+255),b
 23215                           
 23216                           ; BSR set to: 0
 23217  00FF80  0012               	return	
 23218  00FF82                     
 23219                           ; BSR set to: 0
 23220                           
 23221                           ; BSR set to: 0
 23222  00FF82  2B63               	incf	___ftpack@exp& (0+255),f,b
 23223  00FF84  90D8               	bcf	status,0,c
 23224  00FF86  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23225  00FF88  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23226  00FF8A  3360               	rrcf	___ftpack@arg& (0+255),f,b
 23227  00FF8C                     l3514:
 23228                           
 23229                           ; BSR set to: 0
 23230                           
 23231                           ; BSR set to: 0
 23232  00FF8C  0E00               	movlw	0
 23233  00FF8E  1560               	andwf	___ftpack@arg& (0+255),w,b
 23234  00FF90  6F65               	movwf	??___ftpack& (0+255),b
 23235  00FF92  0E00               	movlw	0
 23236  00FF94  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23237  00FF96  6F66               	movwf	(??___ftpack+1)& (0+255),b
 23238  00FF98  0EFE               	movlw	254
 23239  00FF9A  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23240  00FF9C  6F67               	movwf	(??___ftpack+2)& (0+255),b
 23241  00FF9E  5165               	movf	??___ftpack& (0+255),w,b
 23242  00FFA0  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 23243  00FFA2  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 23244  00FFA4  B4D8               	btfsc	status,2,c
 23245  00FFA6  D00C               	goto	l3517
 23246  00FFA8  D7EC               	goto	l3515
 23247  00FFAA                     
 23248                           ; BSR set to: 0
 23249                           
 23250                           ; BSR set to: 0
 23251  00FFAA  2B63               	incf	___ftpack@exp& (0+255),f,b
 23252                           
 23253                           ; BSR set to: 0
 23254  00FFAC  0E01               	movlw	1
 23255  00FFAE  2760               	addwf	___ftpack@arg& (0+255),f,b
 23256  00FFB0  0E00               	movlw	0
 23257  00FFB2  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 23258  00FFB4  0E00               	movlw	0
 23259  00FFB6  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 23260  00FFB8  90D8               	bcf	status,0,c
 23261  00FFBA  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23262  00FFBC  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23263  00FFBE  3360               	rrcf	___ftpack@arg& (0+255),f,b
 23264  00FFC0                     l3517:
 23265                           
 23266                           ; BSR set to: 0
 23267                           
 23268                           ; BSR set to: 0
 23269  00FFC0  0E00               	movlw	0
 23270  00FFC2  1560               	andwf	___ftpack@arg& (0+255),w,b
 23271  00FFC4  6F65               	movwf	??___ftpack& (0+255),b
 23272  00FFC6  0E00               	movlw	0
 23273  00FFC8  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23274  00FFCA  6F66               	movwf	(??___ftpack+1)& (0+255),b
 23275  00FFCC  0EFF               	movlw	255
 23276  00FFCE  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23277  00FFD0  6F67               	movwf	(??___ftpack+2)& (0+255),b
 23278  00FFD2  5165               	movf	??___ftpack& (0+255),w,b
 23279  00FFD4  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 23280  00FFD6  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 23281  00FFD8  B4D8               	btfsc	status,2,c
 23282  00FFDA  D006               	goto	l3520
 23283  00FFDC  D7E6               	goto	l3518
 23284  00FFDE                     
 23285                           ; BSR set to: 0
 23286                           
 23287                           ; BSR set to: 0
 23288  00FFDE  0763               	decf	___ftpack@exp& (0+255),f,b
 23289  00FFE0  90D8               	bcf	status,0,c
 23290  00FFE2  3760               	rlcf	___ftpack@arg& (0+255),f,b
 23291  00FFE4  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 23292  00FFE6  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 23293  00FFE8                     l3520:
 23294                           
 23295                           ; BSR set to: 0
 23296                           
 23297                           ; BSR set to: 0
 23298  00FFE8  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 23299  00FFEA  D003               	goto	u10880
 23300                           
 23301                           ; BSR set to: 0
 23302  00FFEC  0E02               	movlw	2
 23303  00FFEE  6163               	cpfslt	___ftpack@exp& (0+255),b
 23304  00FFF0  D7F6               	goto	l3521
 23305  00FFF2                     u10880:
 23306                           
 23307                           ; BSR set to: 0
 23308                           
 23309                           ; BSR set to: 0
 23310  00FFF2  A163               	btfss	___ftpack@exp& (0+255),0,b
 23311                           
 23312                           ; BSR set to: 0
 23313  00FFF4  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 23314                           
 23315                           ; BSR set to: 0
 23316                           
 23317                           ; BSR set to: 0
 23318  00FFF6  90D8               	bcf	status,0,c
 23319  00FFF8  3363               	rrcf	___ftpack@exp& (0+255),f,b
 23320  00FFFA  5163               	movf	___ftpack@exp& (0+255),w,b
 23321  00FFFC  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 23322                           
 23323                           ; BSR set to: 0
 23324  00FFFE  5164               	movf	___ftpack@sign& (0+255),w,b
 23325  010000  A4D8               	btfss	status,2,c
 23326                           
 23327                           ; BSR set to: 0
 23328  010002  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 23329                           
 23330                           ; BSR set to: 0
 23331                           
 23332                           ; BSR set to: 0
 23333  010004  C060  F060         	movff	___ftpack@arg,?___ftpack
 23334  010008  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 23335  01000C  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 23336  010010  0012               	return	
 23337  010012                     __end_of___ftpack:
 23338                           	opt stack 0
 23339                           tblptru	equ	0xFF8
 23340                           tblptrh	equ	0xFF7
 23341                           tblptrl	equ	0xFF6
 23342                           tablat	equ	0xFF5
 23343                           prodh	equ	0xFF4
 23344                           prodl	equ	0xFF3
 23345                           intcon	equ	0xFF2
 23346                           intcon2	equ	0xFF1
 23347                           intcon3	equ	0xFF0
 23348                           postinc0	equ	0xFEE
 23349                           wreg	equ	0xFE8
 23350                           indf1	equ	0xFE7
 23351                           postinc1	equ	0xFE6
 23352                           postdec1	equ	0xFE5
 23353                           plusw1	equ	0xFE3
 23354                           fsr1h	equ	0xFE2
 23355                           fsr1l	equ	0xFE1
 23356                           indf2	equ	0xFDF
 23357                           postinc2	equ	0xFDE
 23358                           postdec2	equ	0xFDD
 23359                           plusw2	equ	0xFDB
 23360                           fsr2h	equ	0xFDA
 23361                           fsr2l	equ	0xFD9
 23362                           status	equ	0xFD8
 23363                           
 23364 ;; *************** function ___aldiv *****************
 23365 ;; Defined at:
 23366 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
 23367 ;; Parameters:    Size  Location     Type
 23368 ;;  dividend        4    0[BANK0 ] long 
 23369 ;;  divisor         4    4[BANK0 ] long 
 23370 ;; Auto vars:     Size  Location     Type
 23371 ;;  quotient        4   10[BANK0 ] long 
 23372 ;;  sign            1    9[BANK0 ] unsigned char 
 23373 ;;  counter         1    8[BANK0 ] unsigned char 
 23374 ;; Return value:  Size  Location     Type
 23375 ;;                  4    0[BANK0 ] long 
 23376 ;; Registers used:
 23377 ;;		wreg, status,2, status,0
 23378 ;; Tracked objects:
 23379 ;;		On entry : 0/0
 23380 ;;		On exit  : 0/0
 23381 ;;		Unchanged: 0/0
 23382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23383 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23384 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23386 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23387 ;;Total ram usage:       14 bytes
 23388 ;; Hardware stack levels used:    1
 23389 ;; Hardware stack levels required when called:   10
 23390 ;; This function calls:
 23391 ;;		Nothing
 23392 ;; This function is called by:
 23393 ;;		__display_efficiency
 23394 ;;		__get_input_power
 23395 ;;		_log_generate_entry
 23396 ;; This function uses a non-reentrant model
 23397 ;;
 23398                           
 23399                           	psect	text107
 23400  00F88E                     __ptext107:
 23401                           	opt stack 0
 23402  00F88E                     ___aldiv:
 23403                           	opt stack 18
 23404                           
 23405                           ; BSR set to: 0
 23406                           ;incstack = 0
 23407  00F88E  0E00               	movlw	0
 23408  00F890  0100               	movlb	0	; () banked
 23409  00F892  6F69               	movwf	___aldiv@sign& (0+255),b
 23410                           
 23411                           ; BSR set to: 0
 23412  00F894  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23413  00F896  D00A               	goto	l3355
 23414                           
 23415                           ; BSR set to: 0
 23416  00F898  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 23417  00F89A  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 23418  00F89C  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 23419  00F89E  6D64               	negf	___aldiv@divisor& (0+255),b
 23420  00F8A0  0E00               	movlw	0
 23421  00F8A2  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 23422  00F8A4  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 23423  00F8A6  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 23424                           
 23425                           ; BSR set to: 0
 23426  00F8A8  0E01               	movlw	1
 23427  00F8AA  6F69               	movwf	___aldiv@sign& (0+255),b
 23428  00F8AC                     l3355:
 23429                           
 23430                           ; BSR set to: 0
 23431                           
 23432                           ; BSR set to: 0
 23433  00F8AC  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 23434  00F8AE  D00A               	goto	l3356
 23435                           
 23436                           ; BSR set to: 0
 23437  00F8B0  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 23438  00F8B2  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 23439  00F8B4  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 23440  00F8B6  6D60               	negf	___aldiv@dividend& (0+255),b
 23441  00F8B8  0E00               	movlw	0
 23442  00F8BA  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 23443  00F8BC  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 23444  00F8BE  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 23445                           
 23446                           ; BSR set to: 0
 23447  00F8C0  0E01               	movlw	1
 23448  00F8C2  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 23449  00F8C4                     l3356:
 23450                           
 23451                           ; BSR set to: 0
 23452                           
 23453                           ; BSR set to: 0
 23454  00F8C4  0E00               	movlw	0
 23455  00F8C6  6F6A               	movwf	___aldiv@quotient& (0+255),b
 23456  00F8C8  0E00               	movlw	0
 23457  00F8CA  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 23458  00F8CC  0E00               	movlw	0
 23459  00F8CE  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 23460  00F8D0  0E00               	movlw	0
 23461  00F8D2  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 23462                           
 23463                           ; BSR set to: 0
 23464  00F8D4  5164               	movf	___aldiv@divisor& (0+255),w,b
 23465  00F8D6  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 23466  00F8D8  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 23467  00F8DA  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 23468  00F8DC  B4D8               	btfsc	status,2,c
 23469  00F8DE  D02A               	goto	l3363
 23470                           
 23471                           ; BSR set to: 0
 23472  00F8E0  0E01               	movlw	1
 23473  00F8E2  6F68               	movwf	___aldiv@counter& (0+255),b
 23474  00F8E4  D006               	goto	l3358
 23475  00F8E6                     
 23476                           ; BSR set to: 0
 23477                           
 23478                           ; BSR set to: 0
 23479  00F8E6  90D8               	bcf	status,0,c
 23480  00F8E8  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 23481  00F8EA  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 23482  00F8EC  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 23483  00F8EE  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 23484  00F8F0  2B68               	incf	___aldiv@counter& (0+255),f,b
 23485  00F8F2                     l3358:
 23486                           
 23487                           ; BSR set to: 0
 23488                           
 23489                           ; BSR set to: 0
 23490  00F8F2  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23491  00F8F4  D7F8               	goto	l3359
 23492  00F8F6                     u11860:
 23493                           
 23494                           ; BSR set to: 0
 23495                           
 23496                           ; BSR set to: 0
 23497                           
 23498                           ; BSR set to: 0
 23499  00F8F6  90D8               	bcf	status,0,c
 23500  00F8F8  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 23501  00F8FA  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 23502  00F8FC  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 23503  00F8FE  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 23504                           
 23505                           ; BSR set to: 0
 23506  00F900  5164               	movf	___aldiv@divisor& (0+255),w,b
 23507  00F902  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 23508  00F904  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23509  00F906  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 23510  00F908  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23511  00F90A  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 23512  00F90C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23513  00F90E  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 23514  00F910  A0D8               	btfss	status,0,c
 23515  00F912  D009               	goto	l3362
 23516                           
 23517                           ; BSR set to: 0
 23518  00F914  5164               	movf	___aldiv@divisor& (0+255),w,b
 23519  00F916  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 23520  00F918  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23521  00F91A  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 23522  00F91C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23523  00F91E  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 23524  00F920  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23525  00F922  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 23526                           
 23527                           ; BSR set to: 0
 23528  00F924  816A               	bsf	___aldiv@quotient& (0+255),0,b
 23529  00F926                     l3362:
 23530                           
 23531                           ; BSR set to: 0
 23532                           
 23533                           ; BSR set to: 0
 23534  00F926  90D8               	bcf	status,0,c
 23535  00F928  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 23536  00F92A  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 23537  00F92C  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 23538  00F92E  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 23539                           
 23540                           ; BSR set to: 0
 23541  00F930  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 23542  00F932  D7E1               	goto	u11860
 23543  00F934                     l3363:
 23544                           
 23545                           ; BSR set to: 0
 23546                           
 23547                           ; BSR set to: 0
 23548                           
 23549                           ; BSR set to: 0
 23550  00F934  5169               	movf	___aldiv@sign& (0+255),w,b
 23551  00F936  B4D8               	btfsc	status,2,c
 23552  00F938  D008               	goto	l3364
 23553                           
 23554                           ; BSR set to: 0
 23555  00F93A  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 23556  00F93C  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 23557  00F93E  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 23558  00F940  6D6A               	negf	___aldiv@quotient& (0+255),b
 23559  00F942  0E00               	movlw	0
 23560  00F944  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 23561  00F946  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 23562  00F948  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 23563  00F94A                     l3364:
 23564                           
 23565                           ; BSR set to: 0
 23566                           
 23567                           ; BSR set to: 0
 23568  00F94A  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 23569  00F94E  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 23570  00F952  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 23571  00F956  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 23572  00F95A  0012               	return	
 23573  00F95C                     __end_of___aldiv:
 23574                           	opt stack 0
 23575                           tblptru	equ	0xFF8
 23576                           tblptrh	equ	0xFF7
 23577                           tblptrl	equ	0xFF6
 23578                           tablat	equ	0xFF5
 23579                           prodh	equ	0xFF4
 23580                           prodl	equ	0xFF3
 23581                           intcon	equ	0xFF2
 23582                           intcon2	equ	0xFF1
 23583                           intcon3	equ	0xFF0
 23584                           postinc0	equ	0xFEE
 23585                           wreg	equ	0xFE8
 23586                           indf1	equ	0xFE7
 23587                           postinc1	equ	0xFE6
 23588                           postdec1	equ	0xFE5
 23589                           plusw1	equ	0xFE3
 23590                           fsr1h	equ	0xFE2
 23591                           fsr1l	equ	0xFE1
 23592                           indf2	equ	0xFDF
 23593                           postinc2	equ	0xFDE
 23594                           postdec2	equ	0xFDD
 23595                           plusw2	equ	0xFDB
 23596                           fsr2h	equ	0xFDA
 23597                           fsr2l	equ	0xFD9
 23598                           status	equ	0xFD8
 23599                           
 23600 ;; *************** function __display_clear *****************
 23601 ;; Defined at:
 23602 ;;		line 28 in file "display.c"
 23603 ;; Parameters:    Size  Location     Type
 23604 ;;		None
 23605 ;; Auto vars:     Size  Location     Type
 23606 ;;  col             1    3[BANK0 ] unsigned char 
 23607 ;;  row             1    2[BANK0 ] unsigned char 
 23608 ;; Return value:  Size  Location     Type
 23609 ;;                  1    wreg      void 
 23610 ;; Registers used:
 23611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23612 ;; Tracked objects:
 23613 ;;		On entry : 0/0
 23614 ;;		On exit  : 0/0
 23615 ;;		Unchanged: 0/0
 23616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23618 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23621 ;;Total ram usage:        4 bytes
 23622 ;; Hardware stack levels used:    1
 23623 ;; Hardware stack levels required when called:   10
 23624 ;; This function calls:
 23625 ;;		Nothing
 23626 ;; This function is called by:
 23627 ;;		_display_prepare
 23628 ;; This function uses a non-reentrant model
 23629 ;;
 23630                           
 23631                           	psect	text108
 23632  011F8C                     __ptext108:
 23633                           	opt stack 0
 23634  011F8C                     __display_clear:
 23635                           	opt stack 19
 23636                           
 23637                           ;display.c: 30: uint8_t row;
 23638                           ;display.c: 31: uint8_t col;
 23639                           ;display.c: 32: for(row=0;row<4;++row)
 23640                           
 23641                           ; BSR set to: 0
 23642                           ;incstack = 0
 23643  011F8C  0E00               	movlw	0
 23644  011F8E  0100               	movlb	0	; () banked
 23645  011F90  6F62               	movwf	__display_clear@row& (0+255),b
 23646  011F92                     l15032:
 23647                           
 23648                           ; BSR set to: 0
 23649  011F92  0E03               	movlw	3
 23650  011F94  6562               	cpfsgt	__display_clear@row& (0+255),b
 23651  011F96  D001               	goto	l1906
 23652  011F98  0012               	return	
 23653  011F9A                     l1906:
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;display.c: 33: {
 23657                           ;display.c: 34: for(col=0;col<20;++col)
 23658                           
 23659                           ; BSR set to: 0
 23660  011F9A  0E00               	movlw	0
 23661  011F9C  6F63               	movwf	__display_clear@col& (0+255),b
 23662  011F9E                     l15038:
 23663                           
 23664                           ; BSR set to: 0
 23665  011F9E  0E13               	movlw	19
 23666  011FA0  6563               	cpfsgt	__display_clear@col& (0+255),b
 23667  011FA2  D001               	goto	l1908
 23668  011FA4  D016               	goto	u13060
 23669  011FA6                     l1908:
 23670                           
 23671                           ; BSR set to: 0
 23672                           ;display.c: 35: {
 23673                           ;display.c: 36: display_content[row][col] = ' ';
 23674                           
 23675                           ; BSR set to: 0
 23676  011FA6  5162               	movf	__display_clear@row& (0+255),w,b
 23677  011FA8  0D14               	mullw	20
 23678  011FAA  0E54               	movlw	low _display_content
 23679  011FAC  6F60               	movwf	??__display_clear& (0+255),b
 23680  011FAE  0E03               	movlw	high _display_content
 23681  011FB0  6F61               	movwf	(??__display_clear+1)& (0+255),b
 23682  011FB2  50F3               	movf	prodl,w,c
 23683  011FB4  2760               	addwf	??__display_clear& (0+255),f,b
 23684  011FB6  50F4               	movf	prodh,w,c
 23685  011FB8  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 23686  011FBA  5163               	movf	__display_clear@col& (0+255),w,b
 23687  011FBC  0D01               	mullw	1
 23688  011FBE  50F3               	movf	prodl,w,c
 23689  011FC0  2560               	addwf	??__display_clear& (0+255),w,b
 23690  011FC2  6ED9               	movwf	fsr2l,c
 23691  011FC4  50F4               	movf	prodh,w,c
 23692  011FC6  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 23693  011FC8  6EDA               	movwf	fsr2h,c
 23694  011FCA  0E20               	movlw	32
 23695  011FCC  6EDF               	movwf	indf2,c
 23696                           
 23697                           ; BSR set to: 0
 23698  011FCE  2B63               	incf	__display_clear@col& (0+255),f,b
 23699  011FD0  D7E6               	goto	l15038
 23700  011FD2                     u13060:
 23701                           
 23702                           ; BSR set to: 0
 23703                           
 23704                           ; BSR set to: 0
 23705  011FD2  2B62               	incf	__display_clear@row& (0+255),f,b
 23706  011FD4  D7DE               	goto	l15032
 23707  011FD6                     __end_of__display_clear:
 23708                           	opt stack 0
 23709                           tblptru	equ	0xFF8
 23710                           tblptrh	equ	0xFF7
 23711                           tblptrl	equ	0xFF6
 23712                           tablat	equ	0xFF5
 23713                           prodh	equ	0xFF4
 23714                           prodl	equ	0xFF3
 23715                           intcon	equ	0xFF2
 23716                           intcon2	equ	0xFF1
 23717                           intcon3	equ	0xFF0
 23718                           postinc0	equ	0xFEE
 23719                           wreg	equ	0xFE8
 23720                           indf1	equ	0xFE7
 23721                           postinc1	equ	0xFE6
 23722                           postdec1	equ	0xFE5
 23723                           plusw1	equ	0xFE3
 23724                           fsr1h	equ	0xFE2
 23725                           fsr1l	equ	0xFE1
 23726                           indf2	equ	0xFDF
 23727                           postinc2	equ	0xFDE
 23728                           postdec2	equ	0xFDD
 23729                           plusw2	equ	0xFDB
 23730                           fsr2h	equ	0xFDA
 23731                           fsr2l	equ	0xFD9
 23732                           status	equ	0xFD8
 23733                           
 23734 ;; *************** function __display_charger *****************
 23735 ;; Defined at:
 23736 ;;		line 405 in file "display.c"
 23737 ;; Parameters:    Size  Location     Type
 23738 ;;		None
 23739 ;; Auto vars:     Size  Location     Type
 23740 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 23741 ;;  header         21   15[BANK1 ] const unsigned char [21]
 23742 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 23743 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 23744 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 23745 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 23746 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 23747 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 23748 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 23749 ;;  cntr            1  142[BANK1 ] unsigned char 
 23750 ;; Return value:  Size  Location     Type
 23751 ;;                  1    wreg      void 
 23752 ;; Registers used:
 23753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23754 ;; Tracked objects:
 23755 ;;		On entry : 0/0
 23756 ;;		On exit  : 0/0
 23757 ;;		Unchanged: 0/0
 23758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23760 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23762 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23763 ;;Total ram usage:      144 bytes
 23764 ;; Hardware stack levels used:    1
 23765 ;; Hardware stack levels required when called:   14
 23766 ;; This function calls:
 23767 ;;		__display_itoa
 23768 ;;		_buck_get_dutycycle
 23769 ;;		_buck_get_mode
 23770 ;; This function is called by:
 23771 ;;		_display_prepare
 23772 ;; This function uses a non-reentrant model
 23773 ;;
 23774                           
 23775                           	psect	text109
 23776  00B786                     __ptext109:
 23777                           	opt stack 0
 23778  00B786                     __display_charger:
 23779                           	opt stack 15
 23780                           
 23781                           ;display.c: 407: uint8_t cntr;
 23782                           ;display.c: 408: const char header[] = "MPPT Charger Details";
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;incstack = 0
 23786  00B786  0EC0               	movlw	low __display_charger@F8738
 23787  00B788  6EF6               	movwf	tblptrl,c
 23788  00B78A                     	if	1	;There is more than 1 active tblptr byte
 23789  00B78A  0E90               	movlw	high __display_charger@F8738
 23790  00B78C  6EF7               	movwf	tblptrh,c
 23791  00B78E                     	endif
 23792  00B78E                     	if	1	;There are 3 active tblptr bytes
 23793  00B78E  0E00               	movlw	low (__display_charger@F8738 shr (0+16))
 23794  00B790  6EF8               	movwf	tblptru,c
 23795  00B792                     	endif
 23796  00B792  EE21  F00F         	lfsr	2,__display_charger@header
 23797  00B796  0E14               	movlw	20
 23798  00B798                     u13670:
 23799  00B798  0009               	tblrd		*+
 23800  00B79A  CFF5 FFDE          	movff	tablat,postinc2
 23801  00B79E  06E8               	decf	wreg,f,c
 23802  00B7A0  E2FB               	bc	u13670
 23803                           
 23804                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 23805  00B7A2  0EB0               	movlw	low __display_charger@F8740
 23806  00B7A4  6EF6               	movwf	tblptrl,c
 23807  00B7A6                     	if	1	;There is more than 1 active tblptr byte
 23808  00B7A6  0E91               	movlw	high __display_charger@F8740
 23809  00B7A8  6EF7               	movwf	tblptrh,c
 23810  00B7AA                     	endif
 23811  00B7AA                     	if	1	;There are 3 active tblptr bytes
 23812  00B7AA  0E00               	movlw	low (__display_charger@F8740 shr (0+16))
 23813  00B7AC  6EF8               	movwf	tblptru,c
 23814  00B7AE                     	endif
 23815  00B7AE  EE21  F060         	lfsr	2,__display_charger@supply_on
 23816  00B7B2  0E11               	movlw	17
 23817  00B7B4                     u13680:
 23818  00B7B4  0009               	tblrd		*+
 23819  00B7B6  CFF5 FFDE          	movff	tablat,postinc2
 23820  00B7BA  06E8               	decf	wreg,f,c
 23821  00B7BC  E2FB               	bc	u13680
 23822                           
 23823                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 23824  00B7BE  0E9D               	movlw	low __display_charger@F8742
 23825  00B7C0  6EF6               	movwf	tblptrl,c
 23826  00B7C2                     	if	1	;There is more than 1 active tblptr byte
 23827  00B7C2  0E91               	movlw	high __display_charger@F8742
 23828  00B7C4  6EF7               	movwf	tblptrh,c
 23829  00B7C6                     	endif
 23830  00B7C6                     	if	1	;There are 3 active tblptr bytes
 23831  00B7C6  0E00               	movlw	low (__display_charger@F8742 shr (0+16))
 23832  00B7C8  6EF8               	movwf	tblptru,c
 23833  00B7CA                     	endif
 23834  00B7CA  EE21  F04D         	lfsr	2,__display_charger@supply_off
 23835  00B7CE  0E12               	movlw	18
 23836  00B7D0                     u13690:
 23837  00B7D0  0009               	tblrd		*+
 23838  00B7D2  CFF5 FFDE          	movff	tablat,postinc2
 23839  00B7D6  06E8               	decf	wreg,f,c
 23840  00B7D8  E2FB               	bc	u13690
 23841                           
 23842                           ;display.c: 411: const char fan_on[] = "Fan on";
 23843  00B7DA  0E2F               	movlw	low __display_charger@F8744
 23844  00B7DC  6EF6               	movwf	tblptrl,c
 23845  00B7DE                     	if	1	;There is more than 1 active tblptr byte
 23846  00B7DE  0E93               	movlw	high __display_charger@F8744
 23847  00B7E0  6EF7               	movwf	tblptrh,c
 23848  00B7E2                     	endif
 23849  00B7E2                     	if	1	;There are 3 active tblptr bytes
 23850  00B7E2  0E00               	movlw	low (__display_charger@F8744 shr (0+16))
 23851  00B7E4  6EF8               	movwf	tblptru,c
 23852  00B7E6                     	endif
 23853  00B7E6  EE21  F008         	lfsr	2,__display_charger@fan_on
 23854  00B7EA  0E06               	movlw	6
 23855  00B7EC                     u13700:
 23856  00B7EC  0009               	tblrd		*+
 23857  00B7EE  CFF5 FFDE          	movff	tablat,postinc2
 23858  00B7F2  06E8               	decf	wreg,f,c
 23859  00B7F4  E2FB               	bc	u13700
 23860                           
 23861                           ;display.c: 412: const char fan_off[] = "Fan off";
 23862  00B7F6  0E17               	movlw	low __display_charger@F8746
 23863  00B7F8  6EF6               	movwf	tblptrl,c
 23864  00B7FA                     	if	1	;There is more than 1 active tblptr byte
 23865  00B7FA  0E93               	movlw	high __display_charger@F8746
 23866  00B7FC  6EF7               	movwf	tblptrh,c
 23867  00B7FE                     	endif
 23868  00B7FE                     	if	1	;There are 3 active tblptr bytes
 23869  00B7FE  0E00               	movlw	low (__display_charger@F8746 shr (0+16))
 23870  00B800  6EF8               	movwf	tblptru,c
 23871  00B802                     	endif
 23872  00B802  EE21  F000         	lfsr	2,__display_charger@fan_off
 23873  00B806  0E07               	movlw	7
 23874  00B808                     u13710:
 23875  00B808  0009               	tblrd		*+
 23876  00B80A  CFF5 FFDE          	movff	tablat,postinc2
 23877  00B80E  06E8               	decf	wreg,f,c
 23878  00B810  E2FB               	bc	u13710
 23879                           
 23880                           ;display.c: 414: const char charger_off[] = "Charger off";
 23881  00B812  0ECB               	movlw	low __display_charger@F8748
 23882  00B814  6EF6               	movwf	tblptrl,c
 23883  00B816                     	if	1	;There is more than 1 active tblptr byte
 23884  00B816  0E92               	movlw	high __display_charger@F8748
 23885  00B818  6EF7               	movwf	tblptrh,c
 23886  00B81A                     	endif
 23887  00B81A                     	if	1	;There are 3 active tblptr bytes
 23888  00B81A  0E00               	movlw	low (__display_charger@F8748 shr (0+16))
 23889  00B81C  6EF8               	movwf	tblptru,c
 23890  00B81E                     	endif
 23891  00B81E  EE21  F082         	lfsr	2,__display_charger@charger_off
 23892  00B822  0E0B               	movlw	11
 23893  00B824                     u13720:
 23894  00B824  0009               	tblrd		*+
 23895  00B826  CFF5 FFDE          	movff	tablat,postinc2
 23896  00B82A  06E8               	decf	wreg,f,c
 23897  00B82C  E2FB               	bc	u13720
 23898                           
 23899                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 23900  00B82E  0E1B               	movlw	low __display_charger@F8750
 23901  00B830  6EF6               	movwf	tblptrl,c
 23902  00B832                     	if	1	;There is more than 1 active tblptr byte
 23903  00B832  0E92               	movlw	high __display_charger@F8750
 23904  00B834  6EF7               	movwf	tblptrh,c
 23905  00B836                     	endif
 23906  00B836                     	if	1	;There are 3 active tblptr bytes
 23907  00B836  0E00               	movlw	low (__display_charger@F8750 shr (0+16))
 23908  00B838  6EF8               	movwf	tblptru,c
 23909  00B83A                     	endif
 23910  00B83A  EE21  F072         	lfsr	2,__display_charger@charger_startup
 23911  00B83E  0E0F               	movlw	15
 23912  00B840                     u13730:
 23913  00B840  0009               	tblrd		*+
 23914  00B842  CFF5 FFDE          	movff	tablat,postinc2
 23915  00B846  06E8               	decf	wreg,f,c
 23916  00B848  E2FB               	bc	u13730
 23917                           
 23918                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 23919  00B84A  0EAB               	movlw	low __display_charger@F8752
 23920  00B84C  6EF6               	movwf	tblptrl,c
 23921  00B84E                     	if	1	;There is more than 1 active tblptr byte
 23922  00B84E  0E90               	movlw	high __display_charger@F8752
 23923  00B850  6EF7               	movwf	tblptrh,c
 23924  00B852                     	endif
 23925  00B852                     	if	1	;There are 3 active tblptr bytes
 23926  00B852  0E00               	movlw	low (__display_charger@F8752 shr (0+16))
 23927  00B854  6EF8               	movwf	tblptru,c
 23928  00B856                     	endif
 23929  00B856  EE21  F024         	lfsr	2,__display_charger@charger_async
 23930  00B85A  0E14               	movlw	20
 23931  00B85C                     u13740:
 23932  00B85C  0009               	tblrd		*+
 23933  00B85E  CFF5 FFDE          	movff	tablat,postinc2
 23934  00B862  06E8               	decf	wreg,f,c
 23935  00B864  E2FB               	bc	u13740
 23936                           
 23937                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 23938  00B866  0E13               	movlw	low __display_charger@F8754
 23939  00B868  6EF6               	movwf	tblptrl,c
 23940  00B86A                     	if	1	;There is more than 1 active tblptr byte
 23941  00B86A  0E91               	movlw	high __display_charger@F8754
 23942  00B86C  6EF7               	movwf	tblptrh,c
 23943  00B86E                     	endif
 23944  00B86E                     	if	1	;There are 3 active tblptr bytes
 23945  00B86E  0E00               	movlw	low (__display_charger@F8754 shr (0+16))
 23946  00B870  6EF8               	movwf	tblptru,c
 23947  00B872                     	endif
 23948  00B872  EE21  F039         	lfsr	2,__display_charger@charger_sync
 23949  00B876  0E13               	movlw	19
 23950  00B878                     u13750:
 23951  00B878  0009               	tblrd		*+
 23952  00B87A  CFF5 FFDE          	movff	tablat,postinc2
 23953  00B87E  06E8               	decf	wreg,f,c
 23954  00B880  E2FB               	bc	u13750
 23955                           
 23956                           ;display.c: 419: cntr = 0;
 23957  00B882  0E00               	movlw	0
 23958  00B884  0101               	movlb	1	; () banked
 23959  00B886  6F8E               	movwf	__display_charger@cntr& (0+255),b
 23960                           
 23961                           ;display.c: 420: while(header[cntr])
 23962  00B888  D013               	goto	l2137
 23963  00B88A                     
 23964                           ; BSR set to: 1
 23965                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 23966                           
 23967                           ; BSR set to: 1
 23968  00B88A  518E               	movf	__display_charger@cntr& (0+255),w,b
 23969  00B88C  0D01               	mullw	1
 23970  00B88E  0E0F               	movlw	low __display_charger@header
 23971  00B890  24F3               	addwf	prodl,w,c
 23972  00B892  6ED9               	movwf	fsr2l,c
 23973  00B894  0E01               	movlw	high __display_charger@header
 23974  00B896  20F4               	addwfc	prodh,w,c
 23975  00B898  6EDA               	movwf	fsr2h,c
 23976  00B89A  518E               	movf	__display_charger@cntr& (0+255),w,b
 23977  00B89C  0D01               	mullw	1
 23978  00B89E  0E54               	movlw	low _display_content
 23979  00B8A0  24F3               	addwf	prodl,w,c
 23980  00B8A2  6EE1               	movwf	fsr1l,c
 23981  00B8A4  0E03               	movlw	high _display_content
 23982  00B8A6  20F4               	addwfc	prodh,w,c
 23983  00B8A8  6EE2               	movwf	fsr1h,c
 23984  00B8AA  CFDF FFE7          	movff	indf2,indf1
 23985                           
 23986                           ; BSR set to: 1
 23987  00B8AE  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 23988  00B8B0                     l2137:
 23989                           
 23990                           ; BSR set to: 1
 23991                           
 23992                           ; BSR set to: 1
 23993  00B8B0  518E               	movf	__display_charger@cntr& (0+255),w,b
 23994  00B8B2  0D01               	mullw	1
 23995  00B8B4  0E0F               	movlw	low __display_charger@header
 23996  00B8B6  24F3               	addwf	prodl,w,c
 23997  00B8B8  6ED9               	movwf	fsr2l,c
 23998  00B8BA  0E01               	movlw	high __display_charger@header
 23999  00B8BC  20F4               	addwfc	prodh,w,c
 24000  00B8BE  6EDA               	movwf	fsr2h,c
 24001  00B8C0  50DF               	movf	indf2,w,c
 24002  00B8C2  A4D8               	btfss	status,2,c
 24003  00B8C4  D7E2               	goto	l2138
 24004                           
 24005                           ; BSR set to: 1
 24006                           ;display.c: 423: cntr = 0;
 24007                           
 24008                           ; BSR set to: 1
 24009  00B8C6  0E00               	movlw	0
 24010  00B8C8  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24011                           
 24012                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 24013  00B8CA  D014               	goto	l2143
 24014  00B8CC                     
 24015                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 24016  00B8CC  0101               	movlb	1	; () banked
 24017  00B8CE  518E               	movf	__display_charger@cntr& (0+255),w,b
 24018  00B8D0  0D01               	mullw	1
 24019  00B8D2  0E60               	movlw	low __display_charger@supply_on
 24020  00B8D4  24F3               	addwf	prodl,w,c
 24021  00B8D6  6ED9               	movwf	fsr2l,c
 24022  00B8D8  0E01               	movlw	high __display_charger@supply_on
 24023  00B8DA  20F4               	addwfc	prodh,w,c
 24024  00B8DC  6EDA               	movwf	fsr2h,c
 24025  00B8DE  518E               	movf	__display_charger@cntr& (0+255),w,b
 24026  00B8E0  0D01               	mullw	1
 24027  00B8E2  0E68               	movlw	low (_display_content+20)
 24028  00B8E4  24F3               	addwf	prodl,w,c
 24029  00B8E6  6EE1               	movwf	fsr1l,c
 24030  00B8E8  0E03               	movlw	high (_display_content+20)
 24031  00B8EA  20F4               	addwfc	prodh,w,c
 24032  00B8EC  6EE2               	movwf	fsr1h,c
 24033  00B8EE  CFDF FFE7          	movff	indf2,indf1
 24034                           
 24035                           ; BSR set to: 1
 24036  00B8F2  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24037  00B8F4                     l2143:
 24038                           
 24039                           ; BSR set to: 1
 24040  00B8F4  0101               	movlb	1	; () banked
 24041  00B8F6  518E               	movf	__display_charger@cntr& (0+255),w,b
 24042  00B8F8  0D01               	mullw	1
 24043  00B8FA  0E60               	movlw	low __display_charger@supply_on
 24044  00B8FC  24F3               	addwf	prodl,w,c
 24045  00B8FE  6ED9               	movwf	fsr2l,c
 24046  00B900  0E01               	movlw	high __display_charger@supply_on
 24047  00B902  20F4               	addwfc	prodh,w,c
 24048  00B904  6EDA               	movwf	fsr2h,c
 24049  00B906  50DF               	movf	indf2,w,c
 24050  00B908  B4D8               	btfsc	status,2,c
 24051  00B90A  D020               	goto	u13790
 24052  00B90C  D7DF               	goto	l2144
 24053  00B90E                     
 24054                           ; BSR set to: 1
 24055                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 24056                           
 24057                           ; BSR set to: 1
 24058  00B90E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24059  00B910  0D01               	mullw	1
 24060  00B912  0E4D               	movlw	low __display_charger@supply_off
 24061  00B914  24F3               	addwf	prodl,w,c
 24062  00B916  6ED9               	movwf	fsr2l,c
 24063  00B918  0E01               	movlw	high __display_charger@supply_off
 24064  00B91A  20F4               	addwfc	prodh,w,c
 24065  00B91C  6EDA               	movwf	fsr2h,c
 24066  00B91E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24067  00B920  0D01               	mullw	1
 24068  00B922  0E68               	movlw	low (_display_content+20)
 24069  00B924  24F3               	addwf	prodl,w,c
 24070  00B926  6EE1               	movwf	fsr1l,c
 24071  00B928  0E03               	movlw	high (_display_content+20)
 24072  00B92A  20F4               	addwfc	prodh,w,c
 24073  00B92C  6EE2               	movwf	fsr1h,c
 24074  00B92E  CFDF FFE7          	movff	indf2,indf1
 24075                           
 24076                           ; BSR set to: 1
 24077  00B932  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24078                           
 24079                           ; BSR set to: 1
 24080  00B934  0101               	movlb	1	; () banked
 24081  00B936  518E               	movf	__display_charger@cntr& (0+255),w,b
 24082  00B938  0D01               	mullw	1
 24083  00B93A  0E4D               	movlw	low __display_charger@supply_off
 24084  00B93C  24F3               	addwf	prodl,w,c
 24085  00B93E  6ED9               	movwf	fsr2l,c
 24086  00B940  0E01               	movlw	high __display_charger@supply_off
 24087  00B942  20F4               	addwfc	prodh,w,c
 24088  00B944  6EDA               	movwf	fsr2h,c
 24089  00B946  50DF               	movf	indf2,w,c
 24090  00B948  A4D8               	btfss	status,2,c
 24091  00B94A  D7E1               	goto	l2148
 24092  00B94C                     u13790:
 24093                           
 24094                           ; BSR set to: 1
 24095                           ;display.c: 433: }
 24096                           ;display.c: 435: cntr = 0;
 24097                           
 24098                           ; BSR set to: 1
 24099                           
 24100                           ; BSR set to: 1
 24101  00B94C  0E00               	movlw	0
 24102  00B94E  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24103                           
 24104                           ;display.c: 436: switch(buck_get_mode())
 24105  00B950  D080               	goto	l2150
 24106  00B952                     
 24107                           ; BSR set to: 1
 24108                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 24109                           
 24110                           ; BSR set to: 1
 24111  00B952  518E               	movf	__display_charger@cntr& (0+255),w,b
 24112  00B954  0D01               	mullw	1
 24113  00B956  0E82               	movlw	low __display_charger@charger_off
 24114  00B958  24F3               	addwf	prodl,w,c
 24115  00B95A  6ED9               	movwf	fsr2l,c
 24116  00B95C  0E01               	movlw	high __display_charger@charger_off
 24117  00B95E  20F4               	addwfc	prodh,w,c
 24118  00B960  6EDA               	movwf	fsr2h,c
 24119  00B962  518E               	movf	__display_charger@cntr& (0+255),w,b
 24120  00B964  0D01               	mullw	1
 24121  00B966  0E7C               	movlw	low (_display_content+40)
 24122  00B968  24F3               	addwf	prodl,w,c
 24123  00B96A  6EE1               	movwf	fsr1l,c
 24124  00B96C  0E03               	movlw	high (_display_content+40)
 24125  00B96E  20F4               	addwfc	prodh,w,c
 24126  00B970  6EE2               	movwf	fsr1h,c
 24127  00B972  CFDF FFE7          	movff	indf2,indf1
 24128                           
 24129                           ; BSR set to: 1
 24130  00B976  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24131  00B978                     
 24132                           ; BSR set to: 1
 24133  00B978  0101               	movlb	1	; () banked
 24134  00B97A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24135  00B97C  0D01               	mullw	1
 24136  00B97E  0E82               	movlw	low __display_charger@charger_off
 24137  00B980  24F3               	addwf	prodl,w,c
 24138  00B982  6ED9               	movwf	fsr2l,c
 24139  00B984  0E01               	movlw	high __display_charger@charger_off
 24140  00B986  20F4               	addwfc	prodh,w,c
 24141  00B988  6EDA               	movwf	fsr2h,c
 24142  00B98A  50DF               	movf	indf2,w,c
 24143  00B98C  B4D8               	btfsc	status,2,c
 24144  00B98E  D06F               	goto	l2155
 24145  00B990  D7E0               	goto	l2153
 24146  00B992                     
 24147                           ; BSR set to: 1
 24148                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 24149                           
 24150                           ; BSR set to: 1
 24151  00B992  518E               	movf	__display_charger@cntr& (0+255),w,b
 24152  00B994  0D01               	mullw	1
 24153  00B996  0E72               	movlw	low __display_charger@charger_startup
 24154  00B998  24F3               	addwf	prodl,w,c
 24155  00B99A  6ED9               	movwf	fsr2l,c
 24156  00B99C  0E01               	movlw	high __display_charger@charger_startup
 24157  00B99E  20F4               	addwfc	prodh,w,c
 24158  00B9A0  6EDA               	movwf	fsr2h,c
 24159  00B9A2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24160  00B9A4  0D01               	mullw	1
 24161  00B9A6  0E7C               	movlw	low (_display_content+40)
 24162  00B9A8  24F3               	addwf	prodl,w,c
 24163  00B9AA  6EE1               	movwf	fsr1l,c
 24164  00B9AC  0E03               	movlw	high (_display_content+40)
 24165  00B9AE  20F4               	addwfc	prodh,w,c
 24166  00B9B0  6EE2               	movwf	fsr1h,c
 24167  00B9B2  CFDF FFE7          	movff	indf2,indf1
 24168                           
 24169                           ; BSR set to: 1
 24170  00B9B6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24171  00B9B8                     
 24172                           ; BSR set to: 1
 24173  00B9B8  0101               	movlb	1	; () banked
 24174  00B9BA  518E               	movf	__display_charger@cntr& (0+255),w,b
 24175  00B9BC  0D01               	mullw	1
 24176  00B9BE  0E72               	movlw	low __display_charger@charger_startup
 24177  00B9C0  24F3               	addwf	prodl,w,c
 24178  00B9C2  6ED9               	movwf	fsr2l,c
 24179  00B9C4  0E01               	movlw	high __display_charger@charger_startup
 24180  00B9C6  20F4               	addwfc	prodh,w,c
 24181  00B9C8  6EDA               	movwf	fsr2h,c
 24182  00B9CA  50DF               	movf	indf2,w,c
 24183  00B9CC  B4D8               	btfsc	status,2,c
 24184  00B9CE  D04F               	goto	l2155
 24185  00B9D0  D7E0               	goto	l2158
 24186  00B9D2                     
 24187                           ; BSR set to: 1
 24188                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 24189                           
 24190                           ; BSR set to: 1
 24191  00B9D2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24192  00B9D4  0D01               	mullw	1
 24193  00B9D6  0E24               	movlw	low __display_charger@charger_async
 24194  00B9D8  24F3               	addwf	prodl,w,c
 24195  00B9DA  6ED9               	movwf	fsr2l,c
 24196  00B9DC  0E01               	movlw	high __display_charger@charger_async
 24197  00B9DE  20F4               	addwfc	prodh,w,c
 24198  00B9E0  6EDA               	movwf	fsr2h,c
 24199  00B9E2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24200  00B9E4  0D01               	mullw	1
 24201  00B9E6  0E7C               	movlw	low (_display_content+40)
 24202  00B9E8  24F3               	addwf	prodl,w,c
 24203  00B9EA  6EE1               	movwf	fsr1l,c
 24204  00B9EC  0E03               	movlw	high (_display_content+40)
 24205  00B9EE  20F4               	addwfc	prodh,w,c
 24206  00B9F0  6EE2               	movwf	fsr1h,c
 24207  00B9F2  CFDF FFE7          	movff	indf2,indf1
 24208                           
 24209                           ; BSR set to: 1
 24210  00B9F6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24211  00B9F8                     
 24212                           ; BSR set to: 1
 24213  00B9F8  0101               	movlb	1	; () banked
 24214  00B9FA  518E               	movf	__display_charger@cntr& (0+255),w,b
 24215  00B9FC  0D01               	mullw	1
 24216  00B9FE  0E24               	movlw	low __display_charger@charger_async
 24217  00BA00  24F3               	addwf	prodl,w,c
 24218  00BA02  6ED9               	movwf	fsr2l,c
 24219  00BA04  0E01               	movlw	high __display_charger@charger_async
 24220  00BA06  20F4               	addwfc	prodh,w,c
 24221  00BA08  6EDA               	movwf	fsr2h,c
 24222  00BA0A  50DF               	movf	indf2,w,c
 24223  00BA0C  B4D8               	btfsc	status,2,c
 24224  00BA0E  D02F               	goto	l2155
 24225  00BA10  D7E0               	goto	l2162
 24226  00BA12                     
 24227                           ; BSR set to: 1
 24228                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 24229                           
 24230                           ; BSR set to: 1
 24231  00BA12  518E               	movf	__display_charger@cntr& (0+255),w,b
 24232  00BA14  0D01               	mullw	1
 24233  00BA16  0E39               	movlw	low __display_charger@charger_sync
 24234  00BA18  24F3               	addwf	prodl,w,c
 24235  00BA1A  6ED9               	movwf	fsr2l,c
 24236  00BA1C  0E01               	movlw	high __display_charger@charger_sync
 24237  00BA1E  20F4               	addwfc	prodh,w,c
 24238  00BA20  6EDA               	movwf	fsr2h,c
 24239  00BA22  518E               	movf	__display_charger@cntr& (0+255),w,b
 24240  00BA24  0D01               	mullw	1
 24241  00BA26  0E7C               	movlw	low (_display_content+40)
 24242  00BA28  24F3               	addwf	prodl,w,c
 24243  00BA2A  6EE1               	movwf	fsr1l,c
 24244  00BA2C  0E03               	movlw	high (_display_content+40)
 24245  00BA2E  20F4               	addwfc	prodh,w,c
 24246  00BA30  6EE2               	movwf	fsr1h,c
 24247  00BA32  CFDF FFE7          	movff	indf2,indf1
 24248                           
 24249                           ; BSR set to: 1
 24250  00BA36  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24251  00BA38                     
 24252                           ; BSR set to: 1
 24253  00BA38  0101               	movlb	1	; () banked
 24254  00BA3A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24255  00BA3C  0D01               	mullw	1
 24256  00BA3E  0E39               	movlw	low __display_charger@charger_sync
 24257  00BA40  24F3               	addwf	prodl,w,c
 24258  00BA42  6ED9               	movwf	fsr2l,c
 24259  00BA44  0E01               	movlw	high __display_charger@charger_sync
 24260  00BA46  20F4               	addwfc	prodh,w,c
 24261  00BA48  6EDA               	movwf	fsr2h,c
 24262  00BA4A  50DF               	movf	indf2,w,c
 24263  00BA4C  B4D8               	btfsc	status,2,c
 24264  00BA4E  D00F               	goto	l2155
 24265  00BA50  D7E0               	goto	l2166
 24266  00BA52                     l2150:
 24267                           
 24268                           ; BSR set to: 1
 24269                           
 24270                           ; BSR set to: 1
 24271  00BA52  EC08  F097         	call	_buck_get_mode	;wreg free
 24272                           
 24273                           ; Switch size 1, requested type "space"
 24274                           ; Number of cases is 4, Range of values is 0 to 3
 24275                           ; switch strategies available:
 24276                           ; Name         Instructions Cycles
 24277                           ; simple_byte           13     7 (average)
 24278                           ;	Chosen strategy is simple_byte
 24279  00BA56  0A00               	xorlw	0	; case 0
 24280  00BA58  B4D8               	btfsc	status,2,c
 24281  00BA5A  D78E               	goto	l2152
 24282  00BA5C  0A01               	xorlw	1	; case 1
 24283  00BA5E  B4D8               	btfsc	status,2,c
 24284  00BA60  D7AB               	goto	l2157
 24285  00BA62  0A03               	xorlw	3	; case 2
 24286  00BA64  B4D8               	btfsc	status,2,c
 24287  00BA66  D7C8               	goto	l2161
 24288  00BA68  0A01               	xorlw	1	; case 3
 24289  00BA6A  B4D8               	btfsc	status,2,c
 24290  00BA6C  D7E5               	goto	l2165
 24291  00BA6E                     l2155:
 24292                           
 24293                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 24294  00BA6E  EC0B  F097         	call	_buck_get_dutycycle	;wreg free
 24295  00BA72  0100               	movlb	0	; () banked
 24296  00BA74  6F90               	movwf	??__display_charger& (0+255),b
 24297  00BA76  5190               	movf	??__display_charger& (0+255),w,b
 24298  00BA78  6F78               	movwf	__display_itoa@value& (0+255),b
 24299  00BA7A  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 24300  00BA7C  0E00               	movlw	0
 24301  00BA7E  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24302  00BA80  0E90               	movlw	low (_display_content+60)
 24303  00BA82  6F7B               	movwf	__display_itoa@text& (0+255),b
 24304  00BA84  0E03               	movlw	high (_display_content+60)
 24305  00BA86  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24306  00BA88  ECBC  F065         	call	__display_itoa	;wreg free
 24307  00BA8C  0012               	return		;funcret
 24308  00BA8E                     __end_of__display_charger:
 24309                           	opt stack 0
 24310                           tblptru	equ	0xFF8
 24311                           tblptrh	equ	0xFF7
 24312                           tblptrl	equ	0xFF6
 24313                           tablat	equ	0xFF5
 24314                           prodh	equ	0xFF4
 24315                           prodl	equ	0xFF3
 24316                           intcon	equ	0xFF2
 24317                           intcon2	equ	0xFF1
 24318                           intcon3	equ	0xFF0
 24319                           postinc0	equ	0xFEE
 24320                           wreg	equ	0xFE8
 24321                           indf1	equ	0xFE7
 24322                           postinc1	equ	0xFE6
 24323                           postdec1	equ	0xFE5
 24324                           plusw1	equ	0xFE3
 24325                           fsr1h	equ	0xFE2
 24326                           fsr1l	equ	0xFE1
 24327                           indf2	equ	0xFDF
 24328                           postinc2	equ	0xFDE
 24329                           postdec2	equ	0xFDD
 24330                           plusw2	equ	0xFDB
 24331                           fsr2h	equ	0xFDA
 24332                           fsr2l	equ	0xFD9
 24333                           status	equ	0xFD8
 24334                           
 24335 ;; *************** function __display_itoa *****************
 24336 ;; Defined at:
 24337 ;;		line 41 in file "display.c"
 24338 ;; Parameters:    Size  Location     Type
 24339 ;;  value           2   24[BANK0 ] int 
 24340 ;;  decimals        1   26[BANK0 ] unsigned char 
 24341 ;;  text            2   27[BANK0 ] PTR unsigned char 
 24342 ;;		 -> display_content(80), 
 24343 ;; Auto vars:     Size  Location     Type
 24344 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 24345 ;;  pos             1   47[BANK0 ] unsigned char 
 24346 ;;  missing         1   46[BANK0 ] char 
 24347 ;;  len             1   45[BANK0 ] unsigned char 
 24348 ;; Return value:  Size  Location     Type
 24349 ;;                  1    wreg      void 
 24350 ;; Registers used:
 24351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24352 ;; Tracked objects:
 24353 ;;		On entry : 0/0
 24354 ;;		On exit  : 0/0
 24355 ;;		Unchanged: 0/0
 24356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24357 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24358 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24359 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24360 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24361 ;;Total ram usage:       24 bytes
 24362 ;; Hardware stack levels used:    1
 24363 ;; Hardware stack levels required when called:   13
 24364 ;; This function calls:
 24365 ;;		_itoa
 24366 ;;		_strlen
 24367 ;; This function is called by:
 24368 ;;		__display_inout
 24369 ;;		__display_charger
 24370 ;;		__display_efficiency
 24371 ;;		__display_temperature
 24372 ;; This function uses a non-reentrant model
 24373 ;;
 24374                           
 24375                           	psect	text110
 24376  00CB78                     __ptext110:
 24377                           	opt stack 0
 24378  00CB78                     __display_itoa:
 24379                           	opt stack 15
 24380                           
 24381                           ;display.c: 43: uint8_t pos;
 24382                           ;display.c: 44: uint8_t len;
 24383                           ;display.c: 45: int8_t missing;
 24384                           ;display.c: 46: char tmp[10];
 24385                           ;display.c: 47: itoa(tmp, value, 10);
 24386                           
 24387                           ;incstack = 0
 24388  00CB78  0E83               	movlw	low __display_itoa@tmp
 24389  00CB7A  0100               	movlb	0	; () banked
 24390  00CB7C  6F70               	movwf	itoa@buf& (0+255),b
 24391  00CB7E  0E00               	movlw	high __display_itoa@tmp
 24392  00CB80  6F71               	movwf	(itoa@buf+1)& (0+255),b
 24393  00CB82  C078  F072         	movff	__display_itoa@value,itoa@val
 24394  00CB86  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 24395  00CB8A  0E00               	movlw	0
 24396  00CB8C  6F75               	movwf	(itoa@base+1)& (0+255),b
 24397  00CB8E  0E0A               	movlw	10
 24398  00CB90  6F74               	movwf	itoa@base& (0+255),b
 24399  00CB92  EC35  F090         	call	_itoa	;wreg free
 24400                           
 24401                           ;display.c: 48: len = strlen(tmp);
 24402  00CB96  0E83               	movlw	low __display_itoa@tmp
 24403  00CB98  0100               	movlb	0	; () banked
 24404  00CB9A  6F60               	movwf	strlen@s& (0+255),b
 24405  00CB9C  0E00               	movlw	high __display_itoa@tmp
 24406  00CB9E  6F61               	movwf	(strlen@s+1)& (0+255),b
 24407  00CBA0  EC1C  F091         	call	_strlen	;wreg free
 24408  00CBA4  0100               	movlb	0	; () banked
 24409  00CBA6  5160               	movf	?_strlen& (0+255),w,b
 24410  00CBA8  6F8D               	movwf	__display_itoa@len& (0+255),b
 24411                           
 24412                           ; BSR set to: 0
 24413                           ;display.c: 50: if(value<0)
 24414  00CBAA  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 24415  00CBAC  D054               	goto	l1913
 24416                           
 24417                           ; BSR set to: 0
 24418                           ;display.c: 51: {
 24419                           ;display.c: 52: missing = decimals + 2 - len;
 24420  00CBAE  518D               	movf	__display_itoa@len& (0+255),w,b
 24421  00CBB0  0800               	sublw	0
 24422  00CBB2  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24423  00CBB4  0F02               	addlw	2
 24424  00CBB6  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24425                           
 24426                           ;display.c: 53: if(missing>0)
 24427  00CBB8  518E               	movf	__display_itoa@missing& (0+255),w,b
 24428  00CBBA  0A80               	xorlw	128
 24429  00CBBC  0F7F               	addlw	-129
 24430  00CBBE  A0D8               	btfss	status,0,c
 24431  00CBC0  D090               	goto	l1920
 24432                           
 24433                           ; BSR set to: 0
 24434                           ;display.c: 54: {
 24435                           ;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 24436  00CBC2  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24437  00CBC6                     l13624:
 24438                           
 24439                           ; BSR set to: 0
 24440  00CBC6  298F               	incf	__display_itoa@pos& (0+255),w,b
 24441  00CBC8  B4D8               	btfsc	status,2,c
 24442  00CBCA  D042               	goto	u11320
 24443                           
 24444                           ; BSR set to: 0
 24445                           ;display.c: 56: {
 24446                           ;display.c: 57: if(pos>=missing)
 24447                           
 24448                           ; BSR set to: 0
 24449                           
 24450                           ; BSR set to: 0
 24451  00CBCC  518F               	movf	__display_itoa@pos& (0+255),w,b
 24452  00CBCE  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24453  00CBD0  D004               	goto	u11310
 24454  00CBD2  0AFF               	xorlw	255
 24455  00CBD4  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24456  00CBD6  B0D8               	btfsc	status,0,c
 24457  00CBD8  D02A               	goto	l1917
 24458  00CBDA                     u11310:
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;display.c: 58: {
 24462                           ;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 24463  00CBDA  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24464  00CBDE  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24465  00CBE0  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24466  00CBE2  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24467  00CBE4  1F7D               	comf	??__display_itoa& (0+255),f,b
 24468  00CBE6  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24469  00CBE8  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24470  00CBEA  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24471  00CBEC  518F               	movf	__display_itoa@pos& (0+255),w,b
 24472  00CBEE  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24473  00CBF0  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24474  00CBF2  517D               	movf	??__display_itoa& (0+255),w,b
 24475  00CBF4  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24476  00CBF6  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24477  00CBF8  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24478  00CBFA  0E01               	movlw	1
 24479  00CBFC  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24480  00CBFE  0E00               	movlw	0
 24481  00CC00  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24482  00CC02  0E83               	movlw	low __display_itoa@tmp
 24483  00CC04  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24484  00CC06  6ED9               	movwf	fsr2l,c
 24485  00CC08  0E00               	movlw	high __display_itoa@tmp
 24486  00CC0A  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24487  00CC0C  6EDA               	movwf	fsr2h,c
 24488  00CC0E  518F               	movf	__display_itoa@pos& (0+255),w,b
 24489  00CC10  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 24490  00CC12  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 24491  00CC14  0E01               	movlw	1
 24492  00CC16  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 24493  00CC18  0E00               	movlw	0
 24494  00CC1A  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 24495  00CC1C  0E83               	movlw	low __display_itoa@tmp
 24496  00CC1E  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 24497  00CC20  6EE1               	movwf	fsr1l,c
 24498  00CC22  0E00               	movlw	high __display_itoa@tmp
 24499  00CC24  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 24500  00CC26  6EE2               	movwf	fsr1h,c
 24501  00CC28  CFDF FFE7          	movff	indf2,indf1
 24502                           
 24503                           ;display.c: 60: }
 24504  00CC2C  D00F               	goto	l1918
 24505  00CC2E                     l1917:
 24506                           
 24507                           ; BSR set to: 0
 24508                           ;display.c: 61: else
 24509                           ;display.c: 62: {
 24510                           ;display.c: 63: tmp[pos+1] = '0';
 24511                           
 24512                           ; BSR set to: 0
 24513  00CC2E  518F               	movf	__display_itoa@pos& (0+255),w,b
 24514  00CC30  6F7D               	movwf	??__display_itoa& (0+255),b
 24515  00CC32  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24516  00CC34  0E01               	movlw	1
 24517  00CC36  277D               	addwf	??__display_itoa& (0+255),f,b
 24518  00CC38  0E00               	movlw	0
 24519  00CC3A  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24520  00CC3C  0E83               	movlw	low __display_itoa@tmp
 24521  00CC3E  257D               	addwf	??__display_itoa& (0+255),w,b
 24522  00CC40  6ED9               	movwf	fsr2l,c
 24523  00CC42  0E00               	movlw	high __display_itoa@tmp
 24524  00CC44  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 24525  00CC46  6EDA               	movwf	fsr2h,c
 24526  00CC48  0E30               	movlw	48
 24527  00CC4A  6EDF               	movwf	indf2,c
 24528  00CC4C                     l1918:
 24529                           
 24530                           ; BSR set to: 0
 24531                           
 24532                           ; BSR set to: 0
 24533  00CC4C  078F               	decf	__display_itoa@pos& (0+255),f,b
 24534  00CC4E  D7BB               	goto	l13624
 24535  00CC50                     u11320:
 24536                           
 24537                           ; BSR set to: 0
 24538                           ;display.c: 64: }
 24539                           ;display.c: 65: }
 24540                           ;display.c: 66: len = decimals + 2;
 24541                           
 24542                           ; BSR set to: 0
 24543  00CC50  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24544  00CC52  0F02               	addlw	2
 24545  00CC54  D045               	goto	L11
 24546  00CC56                     l1913:
 24547                           
 24548                           ; BSR set to: 0
 24549                           ;display.c: 69: else
 24550                           ;display.c: 70: {
 24551                           ;display.c: 71: missing = decimals + 1 - len;
 24552                           
 24553                           ; BSR set to: 0
 24554  00CC56  518D               	movf	__display_itoa@len& (0+255),w,b
 24555  00CC58  0800               	sublw	0
 24556  00CC5A  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24557  00CC5C  6F7D               	movwf	??__display_itoa& (0+255),b
 24558  00CC5E  297D               	incf	??__display_itoa& (0+255),w,b
 24559  00CC60  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24560                           
 24561                           ;display.c: 72: if(missing>0)
 24562  00CC62  518E               	movf	__display_itoa@missing& (0+255),w,b
 24563  00CC64  0A80               	xorlw	128
 24564  00CC66  0F7F               	addlw	-129
 24565  00CC68  A0D8               	btfss	status,0,c
 24566  00CC6A  D03B               	goto	l1920
 24567                           
 24568                           ; BSR set to: 0
 24569                           ;display.c: 73: {
 24570                           ;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 24571  00CC6C  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24572  00CC70                     l13644:
 24573                           
 24574                           ; BSR set to: 0
 24575  00CC70  298F               	incf	__display_itoa@pos& (0+255),w,b
 24576  00CC72  B4D8               	btfsc	status,2,c
 24577  00CC74  D034               	goto	u11360
 24578                           
 24579                           ; BSR set to: 0
 24580                           ;display.c: 75: {
 24581                           ;display.c: 76: if(pos>=missing)
 24582                           
 24583                           ; BSR set to: 0
 24584                           
 24585                           ; BSR set to: 0
 24586  00CC76  518F               	movf	__display_itoa@pos& (0+255),w,b
 24587  00CC78  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24588  00CC7A  D004               	goto	u11350
 24589  00CC7C  0AFF               	xorlw	255
 24590  00CC7E  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24591  00CC80  B0D8               	btfsc	status,0,c
 24592  00CC82  D021               	goto	l1923
 24593  00CC84                     u11350:
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;display.c: 77: {
 24597                           ;display.c: 78: tmp[pos] = tmp[pos-missing];
 24598  00CC84  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24599  00CC88  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24600  00CC8A  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24601  00CC8C  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24602  00CC8E  1F7D               	comf	??__display_itoa& (0+255),f,b
 24603  00CC90  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24604  00CC92  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24605  00CC94  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24606  00CC96  518F               	movf	__display_itoa@pos& (0+255),w,b
 24607  00CC98  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24608  00CC9A  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24609  00CC9C  517D               	movf	??__display_itoa& (0+255),w,b
 24610  00CC9E  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24611  00CCA0  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24612  00CCA2  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24613  00CCA4  0E83               	movlw	low __display_itoa@tmp
 24614  00CCA6  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24615  00CCA8  6ED9               	movwf	fsr2l,c
 24616  00CCAA  0E00               	movlw	high __display_itoa@tmp
 24617  00CCAC  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24618  00CCAE  6EDA               	movwf	fsr2h,c
 24619  00CCB0  518F               	movf	__display_itoa@pos& (0+255),w,b
 24620  00CCB2  0D01               	mullw	1
 24621  00CCB4  0E83               	movlw	low __display_itoa@tmp
 24622  00CCB6  24F3               	addwf	prodl,w,c
 24623  00CCB8  6EE1               	movwf	fsr1l,c
 24624  00CCBA  0E00               	movlw	high __display_itoa@tmp
 24625  00CCBC  20F4               	addwfc	prodh,w,c
 24626  00CCBE  6EE2               	movwf	fsr1h,c
 24627  00CCC0  CFDF FFE7          	movff	indf2,indf1
 24628                           
 24629                           ;display.c: 79: }
 24630  00CCC4  D00A               	goto	l1924
 24631  00CCC6                     l1923:
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;display.c: 80: else
 24635                           ;display.c: 81: {
 24636                           ;display.c: 82: tmp[pos] = '0';
 24637                           
 24638                           ; BSR set to: 0
 24639  00CCC6  518F               	movf	__display_itoa@pos& (0+255),w,b
 24640  00CCC8  0D01               	mullw	1
 24641  00CCCA  0E83               	movlw	low __display_itoa@tmp
 24642  00CCCC  24F3               	addwf	prodl,w,c
 24643  00CCCE  6ED9               	movwf	fsr2l,c
 24644  00CCD0  0E00               	movlw	high __display_itoa@tmp
 24645  00CCD2  20F4               	addwfc	prodh,w,c
 24646  00CCD4  6EDA               	movwf	fsr2h,c
 24647  00CCD6  0E30               	movlw	48
 24648  00CCD8  6EDF               	movwf	indf2,c
 24649  00CCDA                     l1924:
 24650                           
 24651                           ; BSR set to: 0
 24652                           
 24653                           ; BSR set to: 0
 24654  00CCDA  078F               	decf	__display_itoa@pos& (0+255),f,b
 24655  00CCDC  D7C9               	goto	l13644
 24656  00CCDE                     u11360:
 24657                           
 24658                           ; BSR set to: 0
 24659                           ;display.c: 83: }
 24660                           ;display.c: 84: }
 24661                           ;display.c: 85: len = decimals + 1;
 24662                           
 24663                           ; BSR set to: 0
 24664  00CCDE  297A               	incf	__display_itoa@decimals& (0+255),w,b
 24665  00CCE0                     L11:
 24666  00CCE0  6F8D               	movwf	__display_itoa@len& (0+255),b
 24667  00CCE2                     l1920:
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;display.c: 86: }
 24671                           ;display.c: 87: }
 24672                           ;display.c: 89: decimals = len - decimals - 1;
 24673                           
 24674                           ; BSR set to: 0
 24675  00CCE2  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24676  00CCE4  0800               	sublw	0
 24677  00CCE6  258D               	addwf	__display_itoa@len& (0+255),w,b
 24678  00CCE8  6F7D               	movwf	??__display_itoa& (0+255),b
 24679  00CCEA  057D               	decf	??__display_itoa& (0+255),w,b
 24680  00CCEC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;display.c: 91: for(pos=0;pos<len;++pos)
 24684  00CCEE  0E00               	movlw	0
 24685  00CCF0  6F8F               	movwf	__display_itoa@pos& (0+255),b
 24686  00CCF2  D023               	goto	l1925
 24687  00CCF4                     
 24688                           ; BSR set to: 0
 24689                           ;display.c: 92: {
 24690                           ;display.c: 93: text[pos] = tmp[pos];
 24691                           
 24692                           ; BSR set to: 0
 24693  00CCF4  518F               	movf	__display_itoa@pos& (0+255),w,b
 24694  00CCF6  0D01               	mullw	1
 24695  00CCF8  0E83               	movlw	low __display_itoa@tmp
 24696  00CCFA  24F3               	addwf	prodl,w,c
 24697  00CCFC  6ED9               	movwf	fsr2l,c
 24698  00CCFE  0E00               	movlw	high __display_itoa@tmp
 24699  00CD00  20F4               	addwfc	prodh,w,c
 24700  00CD02  6EDA               	movwf	fsr2h,c
 24701  00CD04  518F               	movf	__display_itoa@pos& (0+255),w,b
 24702  00CD06  0D01               	mullw	1
 24703  00CD08  50F3               	movf	prodl,w,c
 24704  00CD0A  257B               	addwf	__display_itoa@text& (0+255),w,b
 24705  00CD0C  6EE1               	movwf	fsr1l,c
 24706  00CD0E  50F4               	movf	prodh,w,c
 24707  00CD10  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24708  00CD12  6EE2               	movwf	fsr1h,c
 24709  00CD14  CFDF FFE7          	movff	indf2,indf1
 24710                           
 24711                           ; BSR set to: 0
 24712                           ;display.c: 94: if(pos==decimals)
 24713  00CD18  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24714  00CD1A  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 24715  00CD1C  A4D8               	btfss	status,2,c
 24716  00CD1E  D00C               	goto	l1927
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;display.c: 95: {
 24720                           ;display.c: 97: ++pos;
 24721  00CD20  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24722                           
 24723                           ; BSR set to: 0
 24724                           ;display.c: 98: text[pos] = '.';
 24725  00CD22  518F               	movf	__display_itoa@pos& (0+255),w,b
 24726  00CD24  0D01               	mullw	1
 24727  00CD26  50F3               	movf	prodl,w,c
 24728  00CD28  257B               	addwf	__display_itoa@text& (0+255),w,b
 24729  00CD2A  6ED9               	movwf	fsr2l,c
 24730  00CD2C  50F4               	movf	prodh,w,c
 24731  00CD2E  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24732  00CD30  6EDA               	movwf	fsr2h,c
 24733  00CD32  0E2E               	movlw	46
 24734  00CD34  6EDF               	movwf	indf2,c
 24735                           
 24736                           ;display.c: 99: break;
 24737  00CD36  D01E               	goto	l1929
 24738  00CD38                     l1927:
 24739                           
 24740                           ; BSR set to: 0
 24741                           
 24742                           ; BSR set to: 0
 24743  00CD38  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24744  00CD3A                     l1925:
 24745                           
 24746                           ; BSR set to: 0
 24747                           
 24748                           ; BSR set to: 0
 24749  00CD3A  518D               	movf	__display_itoa@len& (0+255),w,b
 24750  00CD3C  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 24751  00CD3E  B0D8               	btfsc	status,0,c
 24752  00CD40  D019               	goto	l1929
 24753  00CD42  D7D8               	goto	l1926
 24754  00CD44                     
 24755                           ; BSR set to: 0
 24756                           ;display.c: 103: {
 24757                           ;display.c: 104: text[pos+1] = tmp[pos];
 24758                           
 24759                           ; BSR set to: 0
 24760  00CD44  518F               	movf	__display_itoa@pos& (0+255),w,b
 24761  00CD46  0D01               	mullw	1
 24762  00CD48  0E83               	movlw	low __display_itoa@tmp
 24763  00CD4A  24F3               	addwf	prodl,w,c
 24764  00CD4C  6ED9               	movwf	fsr2l,c
 24765  00CD4E  0E00               	movlw	high __display_itoa@tmp
 24766  00CD50  20F4               	addwfc	prodh,w,c
 24767  00CD52  6EDA               	movwf	fsr2h,c
 24768  00CD54  518F               	movf	__display_itoa@pos& (0+255),w,b
 24769  00CD56  6F7D               	movwf	??__display_itoa& (0+255),b
 24770  00CD58  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24771  00CD5A  0E01               	movlw	1
 24772  00CD5C  277D               	addwf	??__display_itoa& (0+255),f,b
 24773  00CD5E  0E00               	movlw	0
 24774  00CD60  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24775  00CD62  517D               	movf	??__display_itoa& (0+255),w,b
 24776  00CD64  257B               	addwf	__display_itoa@text& (0+255),w,b
 24777  00CD66  6EE1               	movwf	fsr1l,c
 24778  00CD68  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24779  00CD6A  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24780  00CD6C  6EE2               	movwf	fsr1h,c
 24781  00CD6E  CFDF FFE7          	movff	indf2,indf1
 24782                           
 24783                           ; BSR set to: 0
 24784  00CD72  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24785  00CD74                     l1929:
 24786                           
 24787                           ; BSR set to: 0
 24788                           
 24789                           ; BSR set to: 0
 24790  00CD74  518D               	movf	__display_itoa@len& (0+255),w,b
 24791  00CD76  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 24792  00CD78  B0D8               	btfsc	status,0,c
 24793  00CD7A  0012               	return	
 24794  00CD7C  D7E3               	goto	l1930
 24795  00CD7E                     __end_of__display_itoa:
 24796                           	opt stack 0
 24797                           tblptru	equ	0xFF8
 24798                           tblptrh	equ	0xFF7
 24799                           tblptrl	equ	0xFF6
 24800                           tablat	equ	0xFF5
 24801                           prodh	equ	0xFF4
 24802                           prodl	equ	0xFF3
 24803                           intcon	equ	0xFF2
 24804                           intcon2	equ	0xFF1
 24805                           intcon3	equ	0xFF0
 24806                           postinc0	equ	0xFEE
 24807                           wreg	equ	0xFE8
 24808                           indf1	equ	0xFE7
 24809                           postinc1	equ	0xFE6
 24810                           postdec1	equ	0xFE5
 24811                           plusw1	equ	0xFE3
 24812                           fsr1h	equ	0xFE2
 24813                           fsr1l	equ	0xFE1
 24814                           indf2	equ	0xFDF
 24815                           postinc2	equ	0xFDE
 24816                           postdec2	equ	0xFDD
 24817                           plusw2	equ	0xFDB
 24818                           fsr2h	equ	0xFDA
 24819                           fsr2l	equ	0xFD9
 24820                           status	equ	0xFD8
 24821                           
 24822 ;; *************** function _strlen *****************
 24823 ;; Defined at:
 24824 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 24827 ;;		 -> _display_itoa@tmp(10), 
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 24830 ;;		 -> _display_itoa@tmp(10), 
 24831 ;; Return value:  Size  Location     Type
 24832 ;;                  2    0[BANK0 ] unsigned int 
 24833 ;; Registers used:
 24834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24835 ;; Tracked objects:
 24836 ;;		On entry : 0/0
 24837 ;;		On exit  : 0/0
 24838 ;;		Unchanged: 0/0
 24839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24843 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24844 ;;Total ram usage:        6 bytes
 24845 ;; Hardware stack levels used:    1
 24846 ;; Hardware stack levels required when called:   10
 24847 ;; This function calls:
 24848 ;;		Nothing
 24849 ;; This function is called by:
 24850 ;;		__display_itoa
 24851 ;; This function uses a non-reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text111
 24855  012238                     __ptext111:
 24856                           	opt stack 0
 24857  012238                     _strlen:
 24858                           	opt stack 17
 24859                           
 24860                           ; BSR set to: 0
 24861                           ;incstack = 0
 24862  012238  C060  F064         	movff	strlen@s,strlen@cp
 24863  01223C  C061  F065         	movff	strlen@s+1,strlen@cp+1
 24864  012240  D003               	goto	l3873
 24865  012242  0100               	movlb	0	; () banked
 24866  012244  4B64               	infsnz	strlen@cp& (0+255),f,b
 24867  012246  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 24868  012248                     l3873:
 24869                           
 24870                           ; BSR set to: 0
 24871  012248  C064  FFD9         	movff	strlen@cp,fsr2l
 24872  01224C  C065  FFDA         	movff	strlen@cp+1,fsr2h
 24873  012250  50DF               	movf	indf2,w,c
 24874  012252  A4D8               	btfss	status,2,c
 24875  012254  D7F6               	goto	l3874
 24876  012256  C060  F062         	movff	strlen@s,??_strlen
 24877  01225A  C061  F063         	movff	strlen@s+1,??_strlen+1
 24878  01225E  0100               	movlb	0	; () banked
 24879  012260  1F62               	comf	??_strlen& (0+255),f,b
 24880  012262  1F63               	comf	(??_strlen+1)& (0+255),f,b
 24881  012264  4B62               	infsnz	??_strlen& (0+255),f,b
 24882  012266  2B63               	incf	(??_strlen+1)& (0+255),f,b
 24883  012268  5164               	movf	strlen@cp& (0+255),w,b
 24884  01226A  2562               	addwf	??_strlen& (0+255),w,b
 24885  01226C  6F60               	movwf	?_strlen& (0+255),b
 24886  01226E  5165               	movf	(strlen@cp+1)& (0+255),w,b
 24887  012270  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 24888  012272  6F61               	movwf	(?_strlen+1)& (0+255),b
 24889  012274  0012               	return	
 24890  012276                     __end_of_strlen:
 24891                           	opt stack 0
 24892                           tblptru	equ	0xFF8
 24893                           tblptrh	equ	0xFF7
 24894                           tblptrl	equ	0xFF6
 24895                           tablat	equ	0xFF5
 24896                           prodh	equ	0xFF4
 24897                           prodl	equ	0xFF3
 24898                           intcon	equ	0xFF2
 24899                           intcon2	equ	0xFF1
 24900                           intcon3	equ	0xFF0
 24901                           postinc0	equ	0xFEE
 24902                           wreg	equ	0xFE8
 24903                           indf1	equ	0xFE7
 24904                           postinc1	equ	0xFE6
 24905                           postdec1	equ	0xFE5
 24906                           plusw1	equ	0xFE3
 24907                           fsr1h	equ	0xFE2
 24908                           fsr1l	equ	0xFE1
 24909                           indf2	equ	0xFDF
 24910                           postinc2	equ	0xFDE
 24911                           postdec2	equ	0xFDD
 24912                           plusw2	equ	0xFDB
 24913                           fsr2h	equ	0xFDA
 24914                           fsr2l	equ	0xFD9
 24915                           status	equ	0xFD8
 24916                           
 24917 ;; *************** function _itoa *****************
 24918 ;; Defined at:
 24919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\itoa.c"
 24920 ;; Parameters:    Size  Location     Type
 24921 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 24922 ;;		 -> _display_itoa@tmp(10), 
 24923 ;;  val             2   18[BANK0 ] int 
 24924 ;;  base            2   20[BANK0 ] int 
 24925 ;; Auto vars:     Size  Location     Type
 24926 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 24927 ;;		 -> _display_itoa@tmp(10), 
 24928 ;; Return value:  Size  Location     Type
 24929 ;;                  2   16[BANK0 ] PTR unsigned char 
 24930 ;; Registers used:
 24931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24932 ;; Tracked objects:
 24933 ;;		On entry : 0/0
 24934 ;;		On exit  : 0/0
 24935 ;;		Unchanged: 0/0
 24936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24937 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24940 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24941 ;;Total ram usage:        8 bytes
 24942 ;; Hardware stack levels used:    1
 24943 ;; Hardware stack levels required when called:   12
 24944 ;; This function calls:
 24945 ;;		_utoa
 24946 ;; This function is called by:
 24947 ;;		__display_itoa
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text112
 24952  01206A                     __ptext112:
 24953                           	opt stack 0
 24954  01206A                     _itoa:
 24955                           	opt stack 15
 24956                           
 24957                           ; BSR set to: 0
 24958                           ;incstack = 0
 24959  01206A  C070  F076         	movff	itoa@buf,itoa@cp
 24960  01206E  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 24961  012072  0100               	movlb	0	; () banked
 24962  012074  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 24963  012076  D00C               	goto	l3630
 24964                           
 24965                           ; BSR set to: 0
 24966  012078  C070  FFD9         	movff	itoa@buf,fsr2l
 24967  01207C  C071  FFDA         	movff	itoa@buf+1,fsr2h
 24968  012080  0E2D               	movlw	45
 24969  012082  6EDF               	movwf	indf2,c
 24970                           
 24971                           ; BSR set to: 0
 24972  012084  4B70               	infsnz	itoa@buf& (0+255),f,b
 24973  012086  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 24974                           
 24975                           ; BSR set to: 0
 24976  012088  6D72               	negf	itoa@val& (0+255),b
 24977  01208A  1F73               	comf	(itoa@val+1)& (0+255),f,b
 24978  01208C  B0D8               	btfsc	status,0,c
 24979  01208E  2B73               	incf	(itoa@val+1)& (0+255),f,b
 24980  012090                     l3630:
 24981                           
 24982                           ; BSR set to: 0
 24983                           
 24984                           ; BSR set to: 0
 24985  012090  C070  F067         	movff	itoa@buf,utoa@buf
 24986  012094  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 24987  012098  C072  F069         	movff	itoa@val,utoa@val
 24988  01209C  C073  F06A         	movff	itoa@val+1,utoa@val+1
 24989  0120A0  C074  F06B         	movff	itoa@base,utoa@base
 24990  0120A4  C075  F06C         	movff	itoa@base+1,utoa@base+1
 24991  0120A8  EC09  F080         	call	_utoa	;wreg free
 24992  0120AC  0012               	return	
 24993  0120AE                     __end_of_itoa:
 24994                           	opt stack 0
 24995                           tblptru	equ	0xFF8
 24996                           tblptrh	equ	0xFF7
 24997                           tblptrl	equ	0xFF6
 24998                           tablat	equ	0xFF5
 24999                           prodh	equ	0xFF4
 25000                           prodl	equ	0xFF3
 25001                           intcon	equ	0xFF2
 25002                           intcon2	equ	0xFF1
 25003                           intcon3	equ	0xFF0
 25004                           postinc0	equ	0xFEE
 25005                           wreg	equ	0xFE8
 25006                           indf1	equ	0xFE7
 25007                           postinc1	equ	0xFE6
 25008                           postdec1	equ	0xFE5
 25009                           plusw1	equ	0xFE3
 25010                           fsr1h	equ	0xFE2
 25011                           fsr1l	equ	0xFE1
 25012                           indf2	equ	0xFDF
 25013                           postinc2	equ	0xFDE
 25014                           postdec2	equ	0xFDD
 25015                           plusw2	equ	0xFDB
 25016                           fsr2h	equ	0xFDA
 25017                           fsr2l	equ	0xFD9
 25018                           status	equ	0xFD8
 25019                           
 25020 ;; *************** function _utoa *****************
 25021 ;; Defined at:
 25022 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\itoa.c"
 25023 ;; Parameters:    Size  Location     Type
 25024 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 25025 ;;		 -> _display_itoa@tmp(10), 
 25026 ;;  val             2    9[BANK0 ] unsigned int 
 25027 ;;  base            2   11[BANK0 ] int 
 25028 ;; Auto vars:     Size  Location     Type
 25029 ;;  v               2   13[BANK0 ] unsigned int 
 25030 ;;  c               1   15[BANK0 ] unsigned char 
 25031 ;; Return value:  Size  Location     Type
 25032 ;;                  2    7[BANK0 ] PTR unsigned char 
 25033 ;; Registers used:
 25034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25035 ;; Tracked objects:
 25036 ;;		On entry : 0/0
 25037 ;;		On exit  : 0/0
 25038 ;;		Unchanged: 0/0
 25039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25040 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25041 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25043 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25044 ;;Total ram usage:        9 bytes
 25045 ;; Hardware stack levels used:    1
 25046 ;; Hardware stack levels required when called:   11
 25047 ;; This function calls:
 25048 ;;		___lwdiv
 25049 ;;		___lwmod
 25050 ;; This function is called by:
 25051 ;;		_itoa
 25052 ;; This function uses a non-reentrant model
 25053 ;;
 25054                           
 25055                           	psect	text113
 25056  010012                     __ptext113:
 25057                           	opt stack 0
 25058  010012                     _utoa:
 25059                           	opt stack 15
 25060                           
 25061                           ;incstack = 0
 25062  010012  C069  F06D         	movff	utoa@val,utoa@v
 25063  010016  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 25064  01001A  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 25065  01001E  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 25066  010022  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25067  010026  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25068  01002A  EC94  F08D         	call	___lwdiv	;wreg free
 25069  01002E  C060  F06D         	movff	?___lwdiv,utoa@v
 25070  010032  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 25071  010036  0100               	movlb	0	; () banked
 25072  010038  4B67               	infsnz	utoa@buf& (0+255),f,b
 25073  01003A  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25074                           
 25075                           ; BSR set to: 0
 25076  01003C  516D               	movf	utoa@v& (0+255),w,b
 25077  01003E  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 25078  010040  A4D8               	btfss	status,2,c
 25079  010042  D7EB               	goto	l3634
 25080                           
 25081                           ; BSR set to: 0
 25082                           
 25083                           ; BSR set to: 0
 25084  010044  C067  FFD9         	movff	utoa@buf,fsr2l
 25085  010048  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25086  01004C  0E00               	movlw	0
 25087  01004E  6EDF               	movwf	indf2,c
 25088                           
 25089                           ; BSR set to: 0
 25090  010050  0767               	decf	utoa@buf& (0+255),f,b
 25091  010052  A0D8               	btfss	status,0,c
 25092  010054  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25093  010056                     
 25094                           ; BSR set to: 0
 25095                           
 25096                           ; BSR set to: 0
 25097  010056  C069  F060         	movff	utoa@val,___lwmod@dividend
 25098  01005A  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 25099  01005E  C06B  F062         	movff	utoa@base,___lwmod@divisor
 25100  010062  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 25101  010066  EC57  F090         	call	___lwmod	;wreg free
 25102  01006A  0100               	movlb	0	; () banked
 25103  01006C  5160               	movf	?___lwmod& (0+255),w,b
 25104  01006E  6F6F               	movwf	utoa@c& (0+255),b
 25105                           
 25106                           ; BSR set to: 0
 25107  010070  C069  F060         	movff	utoa@val,___lwdiv@dividend
 25108  010074  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 25109  010078  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25110  01007C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25111  010080  EC94  F08D         	call	___lwdiv	;wreg free
 25112  010084  C060  F069         	movff	?___lwdiv,utoa@val
 25113  010088  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 25114  01008C  0E09               	movlw	9
 25115  01008E  0100               	movlb	0	; () banked
 25116  010090  656F               	cpfsgt	utoa@c& (0+255),b
 25117  010092  D002               	goto	l3637
 25118                           
 25119                           ; BSR set to: 0
 25120  010094  0E07               	movlw	7
 25121  010096  276F               	addwf	utoa@c& (0+255),f,b
 25122  010098                     l3637:
 25123                           
 25124                           ; BSR set to: 0
 25125  010098  0E30               	movlw	48
 25126  01009A  276F               	addwf	utoa@c& (0+255),f,b
 25127                           
 25128                           ; BSR set to: 0
 25129  01009C  C067  FFD9         	movff	utoa@buf,fsr2l
 25130  0100A0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25131  0100A4  C06F  FFDF         	movff	utoa@c,indf2
 25132                           
 25133                           ; BSR set to: 0
 25134  0100A8  0767               	decf	utoa@buf& (0+255),f,b
 25135  0100AA  A0D8               	btfss	status,0,c
 25136  0100AC  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25137                           
 25138                           ; BSR set to: 0
 25139  0100AE  5169               	movf	utoa@val& (0+255),w,b
 25140  0100B0  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 25141  0100B2  A4D8               	btfss	status,2,c
 25142  0100B4  D7D0               	goto	l3636
 25143                           
 25144                           ; BSR set to: 0
 25145                           ;	Return value of _utoa is never used
 25146                           
 25147                           ; BSR set to: 0
 25148  0100B6  4B67               	infsnz	utoa@buf& (0+255),f,b
 25149  0100B8  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25150  0100BA  0012               	return	
 25151  0100BC                     __end_of_utoa:
 25152                           	opt stack 0
 25153                           tblptru	equ	0xFF8
 25154                           tblptrh	equ	0xFF7
 25155                           tblptrl	equ	0xFF6
 25156                           tablat	equ	0xFF5
 25157                           prodh	equ	0xFF4
 25158                           prodl	equ	0xFF3
 25159                           intcon	equ	0xFF2
 25160                           intcon2	equ	0xFF1
 25161                           intcon3	equ	0xFF0
 25162                           postinc0	equ	0xFEE
 25163                           wreg	equ	0xFE8
 25164                           indf1	equ	0xFE7
 25165                           postinc1	equ	0xFE6
 25166                           postdec1	equ	0xFE5
 25167                           plusw1	equ	0xFE3
 25168                           fsr1h	equ	0xFE2
 25169                           fsr1l	equ	0xFE1
 25170                           indf2	equ	0xFDF
 25171                           postinc2	equ	0xFDE
 25172                           postdec2	equ	0xFDD
 25173                           plusw2	equ	0xFDB
 25174                           fsr2h	equ	0xFDA
 25175                           fsr2l	equ	0xFD9
 25176                           status	equ	0xFD8
 25177                           
 25178 ;; *************** function ___lwmod *****************
 25179 ;; Defined at:
 25180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 25181 ;; Parameters:    Size  Location     Type
 25182 ;;  dividend        2    0[BANK0 ] unsigned int 
 25183 ;;  divisor         2    2[BANK0 ] unsigned int 
 25184 ;; Auto vars:     Size  Location     Type
 25185 ;;  counter         1    4[BANK0 ] unsigned char 
 25186 ;; Return value:  Size  Location     Type
 25187 ;;                  2    0[BANK0 ] unsigned int 
 25188 ;; Registers used:
 25189 ;;		wreg, status,2, status,0
 25190 ;; Tracked objects:
 25191 ;;		On entry : 0/0
 25192 ;;		On exit  : 0/0
 25193 ;;		Unchanged: 0/0
 25194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25198 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25199 ;;Total ram usage:        5 bytes
 25200 ;; Hardware stack levels used:    1
 25201 ;; Hardware stack levels required when called:   10
 25202 ;; This function calls:
 25203 ;;		Nothing
 25204 ;; This function is called by:
 25205 ;;		_utoa
 25206 ;; This function uses a non-reentrant model
 25207 ;;
 25208                           
 25209                           	psect	text114
 25210  0120AE                     __ptext114:
 25211                           	opt stack 0
 25212  0120AE                     ___lwmod:
 25213                           	opt stack 15
 25214                           
 25215                           ; BSR set to: 0
 25216                           ;incstack = 0
 25217  0120AE  0100               	movlb	0	; () banked
 25218  0120B0  5162               	movf	___lwmod@divisor& (0+255),w,b
 25219  0120B2  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 25220  0120B4  B4D8               	btfsc	status,2,c
 25221  0120B6  D018               	goto	l3732
 25222                           
 25223                           ; BSR set to: 0
 25224  0120B8  0E01               	movlw	1
 25225  0120BA  6F64               	movwf	___lwmod@counter& (0+255),b
 25226  0120BC  D004               	goto	l3727
 25227  0120BE                     
 25228                           ; BSR set to: 0
 25229                           
 25230                           ; BSR set to: 0
 25231  0120BE  90D8               	bcf	status,0,c
 25232  0120C0  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 25233  0120C2  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 25234  0120C4  2B64               	incf	___lwmod@counter& (0+255),f,b
 25235  0120C6                     l3727:
 25236                           
 25237                           ; BSR set to: 0
 25238                           
 25239                           ; BSR set to: 0
 25240  0120C6  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 25241  0120C8  D7FA               	goto	l3728
 25242  0120CA                     u9500:
 25243                           
 25244                           ; BSR set to: 0
 25245                           
 25246                           ; BSR set to: 0
 25247                           
 25248                           ; BSR set to: 0
 25249  0120CA  5162               	movf	___lwmod@divisor& (0+255),w,b
 25250  0120CC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 25251  0120CE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25252  0120D0  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 25253  0120D2  A0D8               	btfss	status,0,c
 25254  0120D4  D004               	goto	l3731
 25255                           
 25256                           ; BSR set to: 0
 25257  0120D6  5162               	movf	___lwmod@divisor& (0+255),w,b
 25258  0120D8  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 25259  0120DA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25260  0120DC  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 25261  0120DE                     l3731:
 25262                           
 25263                           ; BSR set to: 0
 25264                           
 25265                           ; BSR set to: 0
 25266  0120DE  90D8               	bcf	status,0,c
 25267  0120E0  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 25268  0120E2  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 25269                           
 25270                           ; BSR set to: 0
 25271  0120E4  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 25272  0120E6  D7F1               	goto	u9500
 25273  0120E8                     l3732:
 25274                           
 25275                           ; BSR set to: 0
 25276                           
 25277                           ; BSR set to: 0
 25278  0120E8  C060  F060         	movff	___lwmod@dividend,?___lwmod
 25279  0120EC  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 25280                           
 25281                           ; BSR set to: 0
 25282  0120F0  0012               	return		;funcret
 25283  0120F2                     __end_of___lwmod:
 25284                           	opt stack 0
 25285                           tblptru	equ	0xFF8
 25286                           tblptrh	equ	0xFF7
 25287                           tblptrl	equ	0xFF6
 25288                           tablat	equ	0xFF5
 25289                           prodh	equ	0xFF4
 25290                           prodl	equ	0xFF3
 25291                           intcon	equ	0xFF2
 25292                           intcon2	equ	0xFF1
 25293                           intcon3	equ	0xFF0
 25294                           postinc0	equ	0xFEE
 25295                           wreg	equ	0xFE8
 25296                           indf1	equ	0xFE7
 25297                           postinc1	equ	0xFE6
 25298                           postdec1	equ	0xFE5
 25299                           plusw1	equ	0xFE3
 25300                           fsr1h	equ	0xFE2
 25301                           fsr1l	equ	0xFE1
 25302                           indf2	equ	0xFDF
 25303                           postinc2	equ	0xFDE
 25304                           postdec2	equ	0xFDD
 25305                           plusw2	equ	0xFDB
 25306                           fsr2h	equ	0xFDA
 25307                           fsr2l	equ	0xFD9
 25308                           status	equ	0xFD8
 25309                           
 25310 ;; *************** function ___lwdiv *****************
 25311 ;; Defined at:
 25312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 25313 ;; Parameters:    Size  Location     Type
 25314 ;;  dividend        2    0[BANK0 ] unsigned int 
 25315 ;;  divisor         2    2[BANK0 ] unsigned int 
 25316 ;; Auto vars:     Size  Location     Type
 25317 ;;  quotient        2    4[BANK0 ] unsigned int 
 25318 ;;  counter         1    6[BANK0 ] unsigned char 
 25319 ;; Return value:  Size  Location     Type
 25320 ;;                  2    0[BANK0 ] unsigned int 
 25321 ;; Registers used:
 25322 ;;		wreg, status,2, status,0
 25323 ;; Tracked objects:
 25324 ;;		On entry : 0/0
 25325 ;;		On exit  : 0/0
 25326 ;;		Unchanged: 0/0
 25327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25329 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25331 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25332 ;;Total ram usage:        7 bytes
 25333 ;; Hardware stack levels used:    1
 25334 ;; Hardware stack levels required when called:   10
 25335 ;; This function calls:
 25336 ;;		Nothing
 25337 ;; This function is called by:
 25338 ;;		_utoa
 25339 ;; This function uses a non-reentrant model
 25340 ;;
 25341                           
 25342                           	psect	text115
 25343  011B28                     __ptext115:
 25344                           	opt stack 0
 25345  011B28                     ___lwdiv:
 25346                           	opt stack 15
 25347                           
 25348                           ; BSR set to: 0
 25349                           ;incstack = 0
 25350  011B28  0E00               	movlw	0
 25351  011B2A  0100               	movlb	0	; () banked
 25352  011B2C  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 25353  011B2E  0E00               	movlw	0
 25354  011B30  6F64               	movwf	___lwdiv@quotient& (0+255),b
 25355                           
 25356                           ; BSR set to: 0
 25357  011B32  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25358  011B34  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 25359  011B36  B4D8               	btfsc	status,2,c
 25360  011B38  D01C               	goto	l3722
 25361                           
 25362                           ; BSR set to: 0
 25363  011B3A  0E01               	movlw	1
 25364  011B3C  6F66               	movwf	___lwdiv@counter& (0+255),b
 25365  011B3E  D004               	goto	l3717
 25366  011B40                     
 25367                           ; BSR set to: 0
 25368                           
 25369                           ; BSR set to: 0
 25370  011B40  90D8               	bcf	status,0,c
 25371  011B42  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 25372  011B44  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 25373  011B46  2B66               	incf	___lwdiv@counter& (0+255),f,b
 25374  011B48                     l3717:
 25375                           
 25376                           ; BSR set to: 0
 25377                           
 25378                           ; BSR set to: 0
 25379  011B48  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 25380  011B4A  D7FA               	goto	l3718
 25381  011B4C                     u9470:
 25382                           
 25383                           ; BSR set to: 0
 25384                           
 25385                           ; BSR set to: 0
 25386                           
 25387                           ; BSR set to: 0
 25388  011B4C  90D8               	bcf	status,0,c
 25389  011B4E  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 25390  011B50  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 25391                           
 25392                           ; BSR set to: 0
 25393  011B52  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25394  011B54  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 25395  011B56  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25396  011B58  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 25397  011B5A  A0D8               	btfss	status,0,c
 25398  011B5C  D005               	goto	l3721
 25399                           
 25400                           ; BSR set to: 0
 25401  011B5E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25402  011B60  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 25403  011B62  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25404  011B64  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 25405                           
 25406                           ; BSR set to: 0
 25407  011B66  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 25408  011B68                     l3721:
 25409                           
 25410                           ; BSR set to: 0
 25411                           
 25412                           ; BSR set to: 0
 25413  011B68  90D8               	bcf	status,0,c
 25414  011B6A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 25415  011B6C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 25416                           
 25417                           ; BSR set to: 0
 25418  011B6E  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 25419  011B70  D7ED               	goto	u9470
 25420  011B72                     l3722:
 25421                           
 25422                           ; BSR set to: 0
 25423                           
 25424                           ; BSR set to: 0
 25425  011B72  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 25426  011B76  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25427                           
 25428                           ; BSR set to: 0
 25429  011B7A  0012               	return		;funcret
 25430  011B7C                     __end_of___lwdiv:
 25431                           	opt stack 0
 25432                           tblptru	equ	0xFF8
 25433                           tblptrh	equ	0xFF7
 25434                           tblptrl	equ	0xFF6
 25435                           tablat	equ	0xFF5
 25436                           prodh	equ	0xFF4
 25437                           prodl	equ	0xFF3
 25438                           intcon	equ	0xFF2
 25439                           intcon2	equ	0xFF1
 25440                           intcon3	equ	0xFF0
 25441                           postinc0	equ	0xFEE
 25442                           wreg	equ	0xFE8
 25443                           indf1	equ	0xFE7
 25444                           postinc1	equ	0xFE6
 25445                           postdec1	equ	0xFE5
 25446                           plusw1	equ	0xFE3
 25447                           fsr1h	equ	0xFE2
 25448                           fsr1l	equ	0xFE1
 25449                           indf2	equ	0xFDF
 25450                           postinc2	equ	0xFDE
 25451                           postdec2	equ	0xFDD
 25452                           plusw2	equ	0xFDB
 25453                           fsr2h	equ	0xFDA
 25454                           fsr2l	equ	0xFD9
 25455                           status	equ	0xFD8
 25456                           
 25457 ;; *************** function _buck_operate *****************
 25458 ;; Defined at:
 25459 ;;		line 550 in file "buck.c"
 25460 ;; Parameters:    Size  Location     Type
 25461 ;;		None
 25462 ;; Auto vars:     Size  Location     Type
 25463 ;;		None
 25464 ;; Return value:  Size  Location     Type
 25465 ;;                  1    wreg      void 
 25466 ;; Registers used:
 25467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25468 ;; Tracked objects:
 25469 ;;		On entry : 0/0
 25470 ;;		On exit  : 0/0
 25471 ;;		Unchanged: 0/0
 25472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25477 ;;Total ram usage:        0 bytes
 25478 ;; Hardware stack levels used:    1
 25479 ;; Hardware stack levels required when called:   14
 25480 ;; This function calls:
 25481 ;;		__buck_operate_local
 25482 ;;		__buck_operate_remote
 25483 ;; This function is called by:
 25484 ;;		_main
 25485 ;; This function uses a non-reentrant model
 25486 ;;
 25487                           
 25488                           	psect	text116
 25489  0117AA                     __ptext116:
 25490                           	opt stack 0
 25491  0117AA                     _buck_operate:
 25492                           	opt stack 16
 25493                           
 25494                           ;buck.c: 553: if(buck_remote_enable)
 25495                           
 25496                           ; BSR set to: 0
 25497                           ;incstack = 0
 25498  0117AA  0101               	movlb	1	; () banked
 25499  0117AC  51ED               	movf	_buck_remote_enable& (0+255),w,b
 25500  0117AE  B4D8               	btfsc	status,2,c
 25501  0117B0  D021               	goto	l2585
 25502                           
 25503                           ; BSR set to: 1
 25504                           ;buck.c: 554: {
 25505                           ;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 25506  0117B2  0E80               	movlw	128
 25507  0117B4  0100               	movlb	0	; () banked
 25508  0117B6  61FF               	cpfslt	_buck_status& (0+255),b
 25509  0117B8  D01A               	goto	l2586
 25510  0117BA  D00B               	goto	l2587
 25511  0117BC                     
 25512                           ; BSR set to: 0
 25513                           ;buck.c: 563: buck_remote_on = 0;
 25514                           
 25515                           ; BSR set to: 0
 25516  0117BC  0E00               	movlw	0
 25517  0117BE  D001               	goto	L12
 25518  0117C0                     
 25519                           ; BSR set to: 0
 25520                           ;buck.c: 567: buck_remote_on = 1;
 25521                           
 25522                           ; BSR set to: 0
 25523  0117C0  0E01               	movlw	1
 25524  0117C2                     L12:
 25525  0117C2  6E4E               	movwf	_buck_remote_on,c
 25526                           
 25527                           ;buck.c: 568: buck_remote_synchronous = 0;
 25528  0117C4  0E00               	movlw	0
 25529  0117C6  D003               	goto	L13
 25530  0117C8                     
 25531                           ; BSR set to: 0
 25532                           ;buck.c: 571: buck_remote_on = 1;
 25533                           
 25534                           ; BSR set to: 0
 25535  0117C8  0E01               	movlw	1
 25536  0117CA  6E4E               	movwf	_buck_remote_on,c
 25537                           
 25538                           ;buck.c: 572: buck_remote_synchronous = 1;
 25539  0117CC  0E01               	movlw	1
 25540  0117CE                     L13:
 25541  0117CE  6E4D               	movwf	_buck_remote_synchronous,c
 25542                           
 25543                           ; BSR set to: 0
 25544                           ;buck.c: 574: }
 25545                           
 25546                           ;buck.c: 573: break;
 25547  0117D0  D00A               	goto	l2589
 25548  0117D2                     l2587:
 25549                           
 25550                           ; BSR set to: 0
 25551                           
 25552                           ; BSR set to: 0
 25553  0117D2  51FF               	movf	_buck_status& (0+255),w,b
 25554                           
 25555                           ; Switch size 1, requested type "space"
 25556                           ; Number of cases is 3, Range of values is 0 to 3
 25557                           ; switch strategies available:
 25558                           ; Name         Instructions Cycles
 25559                           ; simple_byte           10     6 (average)
 25560                           ;	Chosen strategy is simple_byte
 25561  0117D4  0A00               	xorlw	0	; case 0
 25562  0117D6  B4D8               	btfsc	status,2,c
 25563  0117D8  D7F1               	goto	l2588
 25564  0117DA  0A02               	xorlw	2	; case 2
 25565  0117DC  B4D8               	btfsc	status,2,c
 25566  0117DE  D7F0               	goto	l2590
 25567  0117E0  0A01               	xorlw	1	; case 3
 25568  0117E2  B4D8               	btfsc	status,2,c
 25569  0117E4  D7F1               	goto	l2591
 25570  0117E6                     l2589:
 25571                           
 25572                           ; BSR set to: 0
 25573                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 25574  0117E6  C0FE  F0FD         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25575                           
 25576                           ; BSR set to: 0
 25577                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 25578  0117EA  0E80               	movlw	128
 25579  0117EC  27FF               	addwf	_buck_status& (0+255),f,b
 25580  0117EE                     l2586:
 25581                           
 25582                           ; BSR set to: 0
 25583                           ;buck.c: 577: }
 25584                           ;buck.c: 578: _buck_operate_remote();
 25585                           
 25586                           ; BSR set to: 0
 25587  0117EE  ECD9  F077         	call	__buck_operate_remote	;wreg free
 25588                           
 25589                           ;buck.c: 579: }
 25590  0117F2  0012               	return	
 25591  0117F4                     l2585:
 25592                           
 25593                           ;buck.c: 580: else
 25594                           ;buck.c: 581: {
 25595                           ;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 25596  0117F4  0E7F               	movlw	127
 25597  0117F6  0100               	movlb	0	; () banked
 25598  0117F8  65FF               	cpfsgt	_buck_status& (0+255),b
 25599  0117FA  D002               	goto	l2593
 25600                           
 25601                           ; BSR set to: 0
 25602                           ;buck.c: 583: {
 25603                           ;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 25604  0117FC  0E80               	movlw	128
 25605  0117FE  5FFF               	subwf	_buck_status& (0+255),f,b
 25606  011800                     l2593:
 25607                           
 25608                           ; BSR set to: 0
 25609                           ;buck.c: 587: }
 25610                           ;buck.c: 588: _buck_operate_local();
 25611                           
 25612                           ; BSR set to: 0
 25613  011800  EC63  F04D         	call	__buck_operate_local	;wreg free
 25614  011804  0012               	return	
 25615  011806                     __end_of_buck_operate:
 25616                           	opt stack 0
 25617                           tblptru	equ	0xFF8
 25618                           tblptrh	equ	0xFF7
 25619                           tblptrl	equ	0xFF6
 25620                           tablat	equ	0xFF5
 25621                           prodh	equ	0xFF4
 25622                           prodl	equ	0xFF3
 25623                           intcon	equ	0xFF2
 25624                           intcon2	equ	0xFF1
 25625                           intcon3	equ	0xFF0
 25626                           postinc0	equ	0xFEE
 25627                           wreg	equ	0xFE8
 25628                           indf1	equ	0xFE7
 25629                           postinc1	equ	0xFE6
 25630                           postdec1	equ	0xFE5
 25631                           plusw1	equ	0xFE3
 25632                           fsr1h	equ	0xFE2
 25633                           fsr1l	equ	0xFE1
 25634                           indf2	equ	0xFDF
 25635                           postinc2	equ	0xFDE
 25636                           postdec2	equ	0xFDD
 25637                           plusw2	equ	0xFDB
 25638                           fsr2h	equ	0xFDA
 25639                           fsr2l	equ	0xFD9
 25640                           status	equ	0xFD8
 25641                           
 25642 ;; *************** function __buck_operate_remote *****************
 25643 ;; Defined at:
 25644 ;;		line 453 in file "buck.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;		None
 25647 ;; Auto vars:     Size  Location     Type
 25648 ;;		None
 25649 ;; Return value:  Size  Location     Type
 25650 ;;                  1    wreg      void 
 25651 ;; Registers used:
 25652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25653 ;; Tracked objects:
 25654 ;;		On entry : 0/0
 25655 ;;		On exit  : 0/0
 25656 ;;		Unchanged: 0/0
 25657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25661 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25662 ;;Total ram usage:        1 bytes
 25663 ;; Hardware stack levels used:    1
 25664 ;; Hardware stack levels required when called:   13
 25665 ;; This function calls:
 25666 ;;		__buck_initial_dutycycle
 25667 ;;		__buck_prepare
 25668 ;;		__buck_set_dutycycle
 25669 ;;		__buck_set_sync_async
 25670 ;;		__buck_start
 25671 ;;		__buck_stop
 25672 ;; This function is called by:
 25673 ;;		_buck_operate
 25674 ;; This function uses a non-reentrant model
 25675 ;;
 25676                           
 25677                           	psect	text117
 25678  00EFB2                     __ptext117:
 25679                           	opt stack 0
 25680  00EFB2                     __buck_operate_remote:
 25681                           	opt stack 16
 25682                           
 25683                           ;buck.c: 455: switch(buck_status)
 25684                           
 25685                           ;incstack = 0
 25686  00EFB2  D06A               	goto	l2557
 25687  00EFB4                     
 25688                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 25689  00EFB4  0102               	movlb	2	; () banked
 25690  00EFB6  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 25691  00EFB8  0B30               	andlw	48
 25692  00EFBA  0A30               	xorlw	48
 25693  00EFBC  A4D8               	btfss	status,2,c
 25694  00EFBE  0012               	return	
 25695                           
 25696                           ; BSR set to: 2
 25697                           ;buck.c: 459: {
 25698                           ;buck.c: 460: if(buck_remote_on)
 25699  00EFC0  504E               	movf	_buck_remote_on,w,c
 25700  00EFC2  B4D8               	btfsc	status,2,c
 25701  00EFC4  0012               	return	
 25702                           
 25703                           ; BSR set to: 2
 25704                           ;buck.c: 461: {
 25705                           ;buck.c: 464: _buck_prepare();
 25706  00EFC6  ECF1  F089         	call	__buck_prepare	;wreg free
 25707                           
 25708                           ;buck.c: 465: }
 25709                           ;buck.c: 466: }
 25710                           ;buck.c: 467: break;
 25711  00EFCA  0012               	return	
 25712  00EFCC                     
 25713                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 25714  00EFCC  0102               	movlb	2	; () banked
 25715  00EFCE  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 25716  00EFD0  0B30               	andlw	48
 25717  00EFD2  0A30               	xorlw	48
 25718  00EFD4  A4D8               	btfss	status,2,c
 25719  00EFD6  0012               	return	
 25720                           
 25721                           ; BSR set to: 2
 25722                           ;buck.c: 471: {
 25723                           ;buck.c: 473: if(buck_remote_synchronous)
 25724  00EFD8  504D               	movf	_buck_remote_synchronous,w,c
 25725  00EFDA  B4D8               	btfsc	status,2,c
 25726  00EFDC  D00C               	goto	l2564
 25727                           
 25728                           ; BSR set to: 2
 25729                           ;buck.c: 474: {
 25730                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 25731  00EFDE  ECFB  F07E         	call	__buck_initial_dutycycle	;wreg free
 25732  00EFE2  0100               	movlb	0	; () banked
 25733  00EFE4  6F76               	movwf	__buck_operate_remote$8730& (0+255),b
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;buck.c: 474: {
 25737                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 25738  00EFE6  C076  F072         	movff	__buck_operate_remote$8730,__buck_start@dutycycle
 25739  00EFEA  0E01               	movlw	1
 25740  00EFEC  EC75  F07D         	call	__buck_start
 25741                           
 25742                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 25743  00EFF0  C0FE  F0FD         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25744                           
 25745                           ;buck.c: 478: }
 25746  00EFF4  0012               	return	
 25747  00EFF6                     l2564:
 25748                           
 25749                           ;buck.c: 479: else
 25750                           ;buck.c: 480: {
 25751                           ;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 25752  00EFF6  0E28               	movlw	40
 25753  00EFF8  0100               	movlb	0	; () banked
 25754  00EFFA  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 25755  00EFFC  0E00               	movlw	0
 25756  00EFFE  EC75  F07D         	call	__buck_start
 25757                           
 25758                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 25759  00F002  C0FE  F0FD         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25760                           
 25761                           ;buck.c: 484: }
 25762                           ;buck.c: 485: }
 25763                           ;buck.c: 486: break;
 25764  00F006  0012               	return	
 25765  00F008                     
 25766                           ;buck.c: 490: if(!buck_remote_on)
 25767  00F008  504E               	movf	_buck_remote_on,w,c
 25768  00F00A  A4D8               	btfss	status,2,c
 25769  00F00C  D003               	goto	l2567
 25770                           
 25771                           ;buck.c: 491: {
 25772                           ;buck.c: 493: _buck_stop();
 25773  00F00E  ECF4  F092         	call	__buck_stop	;wreg free
 25774                           
 25775                           ;buck.c: 494: }
 25776  00F012  0012               	return	
 25777  00F014                     l2567:
 25778                           
 25779                           ;buck.c: 496: else if(buck_remote_synchronous)
 25780  00F014  504D               	movf	_buck_remote_synchronous,w,c
 25781  00F016  B4D8               	btfsc	status,2,c
 25782  00F018  D00A               	goto	l2569
 25783                           
 25784                           ;buck.c: 497: {
 25785                           ;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 25786  00F01A  ECFB  F07E         	call	__buck_initial_dutycycle	;wreg free
 25787  00F01E  0100               	movlb	0	; () banked
 25788  00F020  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 25789                           
 25790                           ; BSR set to: 0
 25791                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 25792  00F022  C0FD  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 25793  00F026  0E01               	movlw	1
 25794  00F028  EC9C  F087         	call	__buck_set_sync_async
 25795                           
 25796                           ;buck.c: 502: }
 25797  00F02C  0012               	return	
 25798  00F02E                     l2569:
 25799                           
 25800                           ;buck.c: 503: else
 25801                           ;buck.c: 504: {
 25802                           ;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 25803  00F02E  0100               	movlb	0	; () banked
 25804  00F030  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 25805  00F032  19FE               	xorwf	_buck_dutycycle& (0+255),w,b
 25806  00F034  B4D8               	btfsc	status,2,c
 25807  00F036  0012               	return	
 25808                           
 25809                           ; BSR set to: 0
 25810                           ;buck.c: 507: {
 25811                           ;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 25812  00F038  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 25813  00F03A  EC20  F089         	call	__buck_set_dutycycle
 25814                           
 25815                           ;buck.c: 509: }
 25816                           ;buck.c: 510: }
 25817                           ;buck.c: 511: break;
 25818  00F03E  0012               	return	
 25819  00F040                     
 25820                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 25821  00F040  0100               	movlb	0	; () banked
 25822  00F042  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 25823  00F044  EC20  F089         	call	__buck_set_dutycycle
 25824                           
 25825                           ;buck.c: 515: if(!buck_remote_on)
 25826  00F048  504E               	movf	_buck_remote_on,w,c
 25827  00F04A  A4D8               	btfss	status,2,c
 25828  00F04C  D003               	goto	l2573
 25829                           
 25830                           ;buck.c: 516: {
 25831                           ;buck.c: 518: _buck_stop();
 25832  00F04E  ECF4  F092         	call	__buck_stop	;wreg free
 25833                           
 25834                           ;buck.c: 519: }
 25835  00F052  0012               	return	
 25836  00F054                     l2573:
 25837                           
 25838                           ;buck.c: 521: else if(!buck_remote_synchronous)
 25839  00F054  504D               	movf	_buck_remote_synchronous,w,c
 25840  00F056  A4D8               	btfss	status,2,c
 25841  00F058  D00B               	goto	l2575
 25842                           
 25843                           ;buck.c: 522: {
 25844                           ;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 25845  00F05A  ECFB  F07E         	call	__buck_initial_dutycycle	;wreg free
 25846  00F05E  0FFB               	addlw	251
 25847  00F060  0100               	movlb	0	; () banked
 25848  00F062  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 25849                           
 25850                           ; BSR set to: 0
 25851                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 25852  00F064  C0FD  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 25853  00F068  0E00               	movlw	0
 25854  00F06A  EC9C  F087         	call	__buck_set_sync_async
 25855                           
 25856                           ;buck.c: 526: }
 25857  00F06E  0012               	return	
 25858  00F070                     l2575:
 25859                           
 25860                           ;buck.c: 527: else
 25861                           ;buck.c: 528: {
 25862                           ;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 25863  00F070  0100               	movlb	0	; () banked
 25864  00F072  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 25865  00F074  19FE               	xorwf	_buck_dutycycle& (0+255),w,b
 25866  00F076  B4D8               	btfsc	status,2,c
 25867  00F078  0012               	return	
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;buck.c: 531: {
 25871                           ;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 25872  00F07A  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 25873  00F07C  EC20  F089         	call	__buck_set_dutycycle
 25874                           
 25875                           ;buck.c: 533: }
 25876                           ;buck.c: 534: }
 25877                           ;buck.c: 535: break;
 25878  00F080  0012               	return	
 25879  00F082                     
 25880                           ;buck.c: 539: _buck_stop();
 25881  00F082  ECF4  F092         	call	__buck_stop	;wreg free
 25882                           
 25883                           ;buck.c: 540: }
 25884  00F086  0012               	return	
 25885  00F088                     l2557:
 25886  00F088  0100               	movlb	0	; () banked
 25887  00F08A  51FF               	movf	_buck_status& (0+255),w,b
 25888                           
 25889                           ; Switch size 1, requested type "space"
 25890                           ; Number of cases is 4, Range of values is 128 to 131
 25891                           ; switch strategies available:
 25892                           ; Name         Instructions Cycles
 25893                           ; simple_byte           13     7 (average)
 25894                           ;	Chosen strategy is simple_byte
 25895  00F08C  0A80               	xorlw	128	; case 128
 25896  00F08E  B4D8               	btfsc	status,2,c
 25897  00F090  D791               	goto	l2558
 25898  00F092  0A01               	xorlw	1	; case 129
 25899  00F094  B4D8               	btfsc	status,2,c
 25900  00F096  D79A               	goto	l2562
 25901  00F098  0A03               	xorlw	3	; case 130
 25902  00F09A  B4D8               	btfsc	status,2,c
 25903  00F09C  D7B5               	goto	l2566
 25904  00F09E  0A01               	xorlw	1	; case 131
 25905  00F0A0  B4D8               	btfsc	status,2,c
 25906  00F0A2  D7CE               	goto	l2572
 25907  00F0A4  D7EE               	goto	l2578
 25908  00F0A6                     __end_of__buck_operate_remote:
 25909                           	opt stack 0
 25910                           tblptru	equ	0xFF8
 25911                           tblptrh	equ	0xFF7
 25912                           tblptrl	equ	0xFF6
 25913                           tablat	equ	0xFF5
 25914                           prodh	equ	0xFF4
 25915                           prodl	equ	0xFF3
 25916                           intcon	equ	0xFF2
 25917                           intcon2	equ	0xFF1
 25918                           intcon3	equ	0xFF0
 25919                           postinc0	equ	0xFEE
 25920                           wreg	equ	0xFE8
 25921                           indf1	equ	0xFE7
 25922                           postinc1	equ	0xFE6
 25923                           postdec1	equ	0xFE5
 25924                           plusw1	equ	0xFE3
 25925                           fsr1h	equ	0xFE2
 25926                           fsr1l	equ	0xFE1
 25927                           indf2	equ	0xFDF
 25928                           postinc2	equ	0xFDE
 25929                           postdec2	equ	0xFDD
 25930                           plusw2	equ	0xFDB
 25931                           fsr2h	equ	0xFDA
 25932                           fsr2l	equ	0xFD9
 25933                           status	equ	0xFD8
 25934                           
 25935 ;; *************** function __buck_prepare *****************
 25936 ;; Defined at:
 25937 ;;		line 125 in file "buck.c"
 25938 ;; Parameters:    Size  Location     Type
 25939 ;;		None
 25940 ;; Auto vars:     Size  Location     Type
 25941 ;;  cntr            1    0[BANK0 ] unsigned char 
 25942 ;; Return value:  Size  Location     Type
 25943 ;;                  1    wreg      void 
 25944 ;; Registers used:
 25945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25946 ;; Tracked objects:
 25947 ;;		On entry : 0/0
 25948 ;;		On exit  : 0/0
 25949 ;;		Unchanged: 0/0
 25950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25955 ;;Total ram usage:        1 bytes
 25956 ;; Hardware stack levels used:    1
 25957 ;; Hardware stack levels required when called:   10
 25958 ;; This function calls:
 25959 ;;		Nothing
 25960 ;; This function is called by:
 25961 ;;		__buck_operate_remote
 25962 ;; This function uses a non-reentrant model
 25963 ;;
 25964                           
 25965                           	psect	text118
 25966  0113E2                     __ptext118:
 25967                           	opt stack 0
 25968  0113E2                     __buck_prepare:
 25969                           	opt stack 18
 25970                           
 25971                           ;buck.c: 127: uint8_t cntr;
 25972                           ;buck.c: 128: LATBbits.LB1 = 1;
 25973                           
 25974                           ;incstack = 0
 25975  0113E2  828A               	bsf	3978,1,c	;volatile
 25976                           
 25977                           ;buck.c: 129: if(buck_status<0x80)
 25978  0113E4  0E80               	movlw	128
 25979  0113E6  0100               	movlb	0	; () banked
 25980  0113E8  61FF               	cpfslt	_buck_status& (0+255),b
 25981  0113EA  D002               	goto	l2475
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 25985  0113EC  0E01               	movlw	1
 25986  0113EE  D001               	goto	L14
 25987  0113F0                     l2475:
 25988                           
 25989                           ; BSR set to: 0
 25990                           ;buck.c: 131: else
 25991                           ;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 25992                           
 25993                           ; BSR set to: 0
 25994  0113F0  0E81               	movlw	129
 25995  0113F2                     L14:
 25996  0113F2  6FFF               	movwf	_buck_status& (0+255),b
 25997                           
 25998                           ; BSR set to: 0
 25999                           ;buck.c: 134: os.input_current = 0;
 26000  0113F4  0E00               	movlw	0
 26001  0113F6  0102               	movlb	2	; () banked
 26002  0113F8  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 26003  0113FA  0E00               	movlw	0
 26004  0113FC  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 26005                           
 26006                           ;buck.c: 135: os.output_current = 0;
 26007  0113FE  0E00               	movlw	0
 26008  011400  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 26009  011402  0E00               	movlw	0
 26010  011404  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 26011                           
 26012                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 26013  011406  0E00               	movlw	0
 26014  011408  0100               	movlb	0	; () banked
 26015  01140A  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 26016  01140C                     l13712:
 26017                           
 26018                           ; BSR set to: 0
 26019  01140C  0E03               	movlw	3
 26020  01140E  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 26021  011410  D001               	goto	l2477
 26022  011412  0012               	return	
 26023  011414                     l2477:
 26024                           
 26025                           ; BSR set to: 0
 26026                           ;buck.c: 137: {
 26027                           ;buck.c: 138: os.input_current_adc[cntr] = 0;
 26028                           
 26029                           ; BSR set to: 0
 26030  011414  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 26031  011416  0D02               	mullw	2
 26032  011418  0E14               	movlw	low (_os+20)
 26033  01141A  24F3               	addwf	prodl,w,c
 26034  01141C  6ED9               	movwf	fsr2l,c
 26035  01141E  0E02               	movlw	high (_os+20)
 26036  011420  20F4               	addwfc	prodh,w,c
 26037  011422  6EDA               	movwf	fsr2h,c
 26038  011424  0E00               	movlw	0
 26039  011426  6EDE               	movwf	postinc2,c
 26040  011428  0E00               	movlw	0
 26041  01142A  6EDD               	movwf	postdec2,c
 26042                           
 26043                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 26044  01142C  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 26045  01142E  0D02               	mullw	2
 26046  011430  0E29               	movlw	low (_os+41)
 26047  011432  24F3               	addwf	prodl,w,c
 26048  011434  6ED9               	movwf	fsr2l,c
 26049  011436  0E02               	movlw	high (_os+41)
 26050  011438  20F4               	addwfc	prodh,w,c
 26051  01143A  6EDA               	movwf	fsr2h,c
 26052  01143C  0E00               	movlw	0
 26053  01143E  6EDE               	movwf	postinc2,c
 26054  011440  0E00               	movlw	0
 26055  011442  6EDD               	movwf	postdec2,c
 26056                           
 26057                           ; BSR set to: 0
 26058  011444  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 26059  011446  D7E2               	goto	l13712
 26060  011448                     __end_of__buck_prepare:
 26061                           	opt stack 0
 26062                           tblptru	equ	0xFF8
 26063                           tblptrh	equ	0xFF7
 26064                           tblptrl	equ	0xFF6
 26065                           tablat	equ	0xFF5
 26066                           prodh	equ	0xFF4
 26067                           prodl	equ	0xFF3
 26068                           intcon	equ	0xFF2
 26069                           intcon2	equ	0xFF1
 26070                           intcon3	equ	0xFF0
 26071                           postinc0	equ	0xFEE
 26072                           wreg	equ	0xFE8
 26073                           indf1	equ	0xFE7
 26074                           postinc1	equ	0xFE6
 26075                           postdec1	equ	0xFE5
 26076                           plusw1	equ	0xFE3
 26077                           fsr1h	equ	0xFE2
 26078                           fsr1l	equ	0xFE1
 26079                           indf2	equ	0xFDF
 26080                           postinc2	equ	0xFDE
 26081                           postdec2	equ	0xFDD
 26082                           plusw2	equ	0xFDB
 26083                           fsr2h	equ	0xFDA
 26084                           fsr2l	equ	0xFD9
 26085                           status	equ	0xFD8
 26086                           
 26087 ;; *************** function __buck_operate_local *****************
 26088 ;; Defined at:
 26089 ;;		line 308 in file "buck.c"
 26090 ;; Parameters:    Size  Location     Type
 26091 ;;		None
 26092 ;; Auto vars:     Size  Location     Type
 26093 ;;  cntr            1   29[BANK0 ] unsigned char 
 26094 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 26095 ;; Return value:  Size  Location     Type
 26096 ;;                  1    wreg      void 
 26097 ;; Registers used:
 26098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26099 ;; Tracked objects:
 26100 ;;		On entry : 0/0
 26101 ;;		On exit  : 0/0
 26102 ;;		Unchanged: 0/0
 26103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26105 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26106 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26107 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26108 ;;Total ram usage:        8 bytes
 26109 ;; Hardware stack levels used:    1
 26110 ;; Hardware stack levels required when called:   13
 26111 ;; This function calls:
 26112 ;;		___lmul
 26113 ;;		__buck_initial_dutycycle
 26114 ;;		__buck_set_dutycycle
 26115 ;;		__buck_set_sync_async
 26116 ;;		__buck_start
 26117 ;;		__buck_stop
 26118 ;; This function is called by:
 26119 ;;		_buck_operate
 26120 ;; This function uses a non-reentrant model
 26121 ;;
 26122                           
 26123                           	psect	text119
 26124  009AC6                     __ptext119:
 26125                           	opt stack 0
 26126  009AC6                     __buck_operate_local:
 26127                           	opt stack 16
 26128                           
 26129                           ;buck.c: 310: uint8_t cntr;
 26130                           ;buck.c: 311: uint8_t tmp_dutycycle;
 26131                           ;buck.c: 313: switch(buck_status)
 26132                           
 26133                           ; BSR set to: 0
 26134                           ;incstack = 0
 26135  009AC6  D22B               	goto	l2520
 26136  009AC8                     
 26137                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 26138  009AC8  0102               	movlb	2	; () banked
 26139  009ACA  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26140  009ACC  0B30               	andlw	48
 26141  009ACE  0A30               	xorlw	48
 26142  009AD0  A4D8               	btfss	status,2,c
 26143  009AD2  0012               	return	
 26144                           
 26145                           ; BSR set to: 2
 26146                           ;buck.c: 317: {
 26147                           ;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 26148  009AD4  0E0C               	movlw	12
 26149  009AD6  0100               	movlb	0	; () banked
 26150  009AD8  6F76               	movwf	??__buck_operate_local& (0+255),b
 26151  009ADA  0EFE               	movlw	254
 26152  009ADC  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 26153  009ADE  EE22  F012         	lfsr	2,_os+18	;volatile
 26154  009AE2  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 26155  009AE6  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 26156  009AEA  5176               	movf	??__buck_operate_local& (0+255),w,b
 26157  009AEC  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 26158  009AEE  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 26159  009AF0  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 26160  009AF2  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 26161  009AF4  0102               	movlb	2	; () banked
 26162  009AF6  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 26163  009AF8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26164  009AFA  0A80               	xorlw	128
 26165  009AFC  0100               	movlb	0	; () banked
 26166  009AFE  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 26167  009B00  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 26168  009B02  0A80               	xorlw	128
 26169  009B04  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 26170  009B06  B0D8               	btfsc	status,0,c
 26171  009B08  0012               	return	
 26172                           
 26173                           ; BSR set to: 0
 26174                           ;buck.c: 319: {
 26175                           ;buck.c: 320: LATBbits.LB1 = 1;
 26176  009B0A  828A               	bsf	3978,1,c	;volatile
 26177                           
 26178                           ; BSR set to: 0
 26179                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 26180  009B0C  0E01               	movlw	1
 26181  009B0E  6FFF               	movwf	_buck_status& (0+255),b
 26182                           
 26183                           ;buck.c: 323: os.input_current = 0;
 26184  009B10  0E00               	movlw	0
 26185  009B12  0102               	movlb	2	; () banked
 26186  009B14  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 26187  009B16  0E00               	movlw	0
 26188  009B18  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 26189                           
 26190                           ;buck.c: 324: os.output_current = 0;
 26191  009B1A  0E00               	movlw	0
 26192  009B1C  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 26193  009B1E  0E00               	movlw	0
 26194  009B20  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 26195                           
 26196                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 26197  009B22  0E00               	movlw	0
 26198  009B24  0100               	movlb	0	; () banked
 26199  009B26  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26200  009B28                     l15506:
 26201                           
 26202                           ; BSR set to: 0
 26203  009B28  0E03               	movlw	3
 26204  009B2A  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26205  009B2C  D001               	goto	l2524
 26206  009B2E  0012               	return	
 26207  009B30                     l2524:
 26208                           
 26209                           ; BSR set to: 0
 26210                           ;buck.c: 326: {
 26211                           ;buck.c: 327: os.input_current_adc[cntr] = 0;
 26212                           
 26213                           ; BSR set to: 0
 26214  009B30  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26215  009B32  0D02               	mullw	2
 26216  009B34  0E14               	movlw	low (_os+20)
 26217  009B36  24F3               	addwf	prodl,w,c
 26218  009B38  6ED9               	movwf	fsr2l,c
 26219  009B3A  0E02               	movlw	high (_os+20)
 26220  009B3C  20F4               	addwfc	prodh,w,c
 26221  009B3E  6EDA               	movwf	fsr2h,c
 26222  009B40  0E00               	movlw	0
 26223  009B42  6EDE               	movwf	postinc2,c
 26224  009B44  0E00               	movlw	0
 26225  009B46  6EDD               	movwf	postdec2,c
 26226                           
 26227                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 26228  009B48  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26229  009B4A  0D02               	mullw	2
 26230  009B4C  0E29               	movlw	low (_os+41)
 26231  009B4E  24F3               	addwf	prodl,w,c
 26232  009B50  6ED9               	movwf	fsr2l,c
 26233  009B52  0E02               	movlw	high (_os+41)
 26234  009B54  20F4               	addwfc	prodh,w,c
 26235  009B56  6EDA               	movwf	fsr2h,c
 26236  009B58  0E00               	movlw	0
 26237  009B5A  6EDE               	movwf	postinc2,c
 26238  009B5C  0E00               	movlw	0
 26239  009B5E  6EDD               	movwf	postdec2,c
 26240                           
 26241                           ; BSR set to: 0
 26242  009B60  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26243  009B62  D7E2               	goto	l15506
 26244  009B64                     
 26245                           ; BSR set to: 0
 26246                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 26247                           
 26248                           ; BSR set to: 0
 26249  009B64  0102               	movlb	2	; () banked
 26250  009B66  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26251  009B68  0B30               	andlw	48
 26252  009B6A  0A30               	xorlw	48
 26253  009B6C  A4D8               	btfss	status,2,c
 26254  009B6E  0012               	return	
 26255                           
 26256                           ; BSR set to: 2
 26257                           ;buck.c: 336: {
 26258                           ;buck.c: 338: os.input_current_calibration = 0;
 26259  009B70  0E00               	movlw	0
 26260  009B72  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 26261                           
 26262                           ;buck.c: 339: os.output_current_calibration = 0;
 26263  009B74  0E00               	movlw	0
 26264  009B76  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 26265                           
 26266                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 26267  009B78  0E00               	movlw	0
 26268  009B7A  0100               	movlb	0	; () banked
 26269  009B7C  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26270  009B7E                     l15520:
 26271                           
 26272                           ; BSR set to: 0
 26273  009B7E  0E03               	movlw	3
 26274  009B80  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26275  009B82  D001               	goto	l2529
 26276  009B84  D01A               	goto	u14040
 26277  009B86                     l2529:
 26278                           
 26279                           ; BSR set to: 0
 26280                           ;buck.c: 341: {
 26281                           ;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 26282                           
 26283                           ; BSR set to: 0
 26284  009B86  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26285  009B88  0D02               	mullw	2
 26286  009B8A  0E14               	movlw	low (_os+20)
 26287  009B8C  24F3               	addwf	prodl,w,c
 26288  009B8E  6ED9               	movwf	fsr2l,c
 26289  009B90  0E02               	movlw	high (_os+20)
 26290  009B92  20F4               	addwfc	prodh,w,c
 26291  009B94  6EDA               	movwf	fsr2h,c
 26292  009B96  50DF               	movf	indf2,w,c
 26293  009B98  0102               	movlb	2	; () banked
 26294  009B9A  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 26295                           
 26296                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 26297  009B9C  0100               	movlb	0	; () banked
 26298  009B9E  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26299  009BA0  0D02               	mullw	2
 26300  009BA2  0E29               	movlw	low (_os+41)
 26301  009BA4  24F3               	addwf	prodl,w,c
 26302  009BA6  6ED9               	movwf	fsr2l,c
 26303  009BA8  0E02               	movlw	high (_os+41)
 26304  009BAA  20F4               	addwfc	prodh,w,c
 26305  009BAC  6EDA               	movwf	fsr2h,c
 26306  009BAE  50DF               	movf	indf2,w,c
 26307  009BB0  0102               	movlb	2	; () banked
 26308  009BB2  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 26309                           
 26310                           ; BSR set to: 2
 26311  009BB4  0100               	movlb	0	; () banked
 26312  009BB6  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26313  009BB8  D7E2               	goto	l15520
 26314  009BBA                     u14040:
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;buck.c: 344: }
 26318                           ;buck.c: 346: buck_dutycycle_last_step = 1;
 26319                           
 26320                           ; BSR set to: 0
 26321  009BBA  0E01               	movlw	1
 26322  009BBC  0101               	movlb	1	; () banked
 26323  009BBE  6FEE               	movwf	_buck_dutycycle_last_step& (0+255),b
 26324                           
 26325                           ; BSR set to: 1
 26326                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26327  009BC0  ECFB  F07E         	call	__buck_initial_dutycycle	;wreg free
 26328  009BC4  0100               	movlb	0	; () banked
 26329  009BC6  6F7B               	movwf	__buck_operate_local$8729& (0+255),b
 26330                           
 26331                           ; BSR set to: 0
 26332                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26333  009BC8  C07B  F072         	movff	__buck_operate_local$8729,__buck_start@dutycycle
 26334  009BCC  0E00               	movlw	0
 26335  009BCE  EC75  F07D         	call	__buck_start
 26336                           
 26337                           ;buck.c: 349: }
 26338                           ;buck.c: 350: break;
 26339  009BD2  0012               	return	
 26340  009BD4                     l2531:
 26341                           
 26342                           ; BSR set to: 0
 26343                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 26344  009BD4  0102               	movlb	2	; () banked
 26345  009BD6  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26346  009BD8  0012               	return	
 26347                           
 26348                           ; BSR set to: 2
 26349                           ;buck.c: 354: {
 26350                           ;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 26351  009BDA  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26352  009BDC  5DED               	subwf	_battery_voltage_maximum& (0+255),w,b
 26353  009BDE  51EE               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26354  009BE0  0A80               	xorlw	128
 26355  009BE2  0100               	movlb	0	; () banked
 26356  009BE4  6F76               	movwf	??__buck_operate_local& (0+255),b
 26357  009BE6  0102               	movlb	2	; () banked
 26358  009BE8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26359  009BEA  0A80               	xorlw	128
 26360  009BEC  0100               	movlb	0	; () banked
 26361  009BEE  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26362  009BF0  B0D8               	btfsc	status,0,c
 26363  009BF2  D006               	goto	l2533
 26364                           
 26365                           ; BSR set to: 0
 26366                           ;buck.c: 357: {
 26367                           ;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26368  009BF4  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26369  009BF6  EC20  F089         	call	__buck_set_dutycycle
 26370                           
 26371                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 26372  009BFA  0101               	movlb	1	; () banked
 26373  009BFC  69EE               	setf	_buck_dutycycle_last_step& (0+255),b
 26374                           
 26375                           ;buck.c: 360: }
 26376  009BFE  0012               	return	
 26377  009C00                     l2533:
 26378                           
 26379                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 26380                           
 26381                           ; BSR set to: 1
 26382  009C00  0102               	movlb	2	; () banked
 26383  009C02  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26384  009C04  D013               	goto	u14080
 26385  009C06  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26386  009C08  E104               	bnz	u14070
 26387  009C0A  0E05               	movlw	5
 26388  009C0C  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26389  009C0E  A0D8               	btfss	status,0,c
 26390  009C10  D00D               	goto	u14080
 26391  009C12                     u14070:
 26392                           
 26393                           ; BSR set to: 2
 26394  009C12  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26395  009C14  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26396  009C16  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26397  009C18  0A80               	xorlw	128
 26398  009C1A  0100               	movlb	0	; () banked
 26399  009C1C  6F76               	movwf	??__buck_operate_local& (0+255),b
 26400  009C1E  0102               	movlb	2	; () banked
 26401  009C20  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26402  009C22  0A80               	xorlw	128
 26403  009C24  0100               	movlb	0	; () banked
 26404  009C26  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26405  009C28  B0D8               	btfsc	status,0,c
 26406  009C2A  D006               	goto	l2535
 26407  009C2C                     u14080:
 26408                           
 26409                           ;buck.c: 363: {
 26410                           ;buck.c: 364: _buck_stop();
 26411                           
 26412                           ; BSR set to: 0
 26413  009C2C  ECF4  F092         	call	__buck_stop	;wreg free
 26414                           
 26415                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 26416  009C30  0E00               	movlw	0
 26417  009C32  0100               	movlb	0	; () banked
 26418  009C34  6FFF               	movwf	_buck_status& (0+255),b
 26419                           
 26420                           ;buck.c: 366: }
 26421  009C36  0012               	return	
 26422  009C38                     l2535:
 26423                           
 26424                           ; BSR set to: 0
 26425                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 26426                           
 26427                           ; BSR set to: 0
 26428  009C38  EE22  F027         	lfsr	2,_os+39	;volatile
 26429  009C3C  CFDE F076          	movff	postinc2,??__buck_operate_local
 26430  009C40  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 26431  009C44  1F76               	comf	??__buck_operate_local& (0+255),f,b
 26432  009C46  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 26433  009C48  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 26434  009C4A  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 26435  009C4C  0102               	movlb	2	; () banked
 26436  009C4E  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 26437  009C50  0100               	movlb	0	; () banked
 26438  009C52  2776               	addwf	??__buck_operate_local& (0+255),f,b
 26439  009C54  0102               	movlb	2	; () banked
 26440  009C56  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26441  009C58  0100               	movlb	0	; () banked
 26442  009C5A  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 26443  009C5C  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 26444  009C5E  D006               	goto	u14090
 26445  009C60  0EE8               	movlw	232
 26446  009C62  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 26447  009C64  0E03               	movlw	3
 26448  009C66  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 26449  009C68  B0D8               	btfsc	status,0,c
 26450  009C6A  D006               	goto	l2539
 26451  009C6C                     u14090:
 26452                           
 26453                           ; BSR set to: 0
 26454                           ;buck.c: 369: {
 26455                           ;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26456  009C6C  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26457  009C6E  EC20  F089         	call	__buck_set_dutycycle
 26458                           
 26459                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 26460  009C72  0101               	movlb	1	; () banked
 26461  009C74  69EE               	setf	_buck_dutycycle_last_step& (0+255),b
 26462                           
 26463                           ;buck.c: 372: }
 26464  009C76  0012               	return	
 26465  009C78                     l2539:
 26466                           
 26467                           ;buck.c: 374: else if (os.input_current>600)
 26468                           
 26469                           ; BSR set to: 1
 26470  009C78  0102               	movlb	2	; () banked
 26471  009C7A  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26472  009C7C  D011               	goto	l2541
 26473  009C7E  0E59               	movlw	89
 26474  009C80  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26475  009C82  0E02               	movlw	2
 26476  009C84  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 26477  009C86  A0D8               	btfss	status,0,c
 26478  009C88  D00B               	goto	l2541
 26479                           
 26480                           ; BSR set to: 2
 26481                           ;buck.c: 375: {
 26482                           ;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 26483  009C8A  ECFB  F07E         	call	__buck_initial_dutycycle	;wreg free
 26484  009C8E  0F05               	addlw	5
 26485  009C90  0100               	movlb	0	; () banked
 26486  009C92  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26487                           
 26488                           ; BSR set to: 0
 26489                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 26490  009C94  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26491  009C98  0E01               	movlw	1
 26492  009C9A  EC9C  F087         	call	__buck_set_sync_async
 26493                           
 26494                           ;buck.c: 380: }
 26495  009C9E  0012               	return	
 26496  009CA0                     l2541:
 26497                           
 26498                           ;buck.c: 382: else
 26499                           ;buck.c: 383: {
 26500                           ;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000);
 26501  009CA0  0102               	movlb	2	; () banked
 26502  009CA2  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26503  009CA4  0B30               	andlw	48
 26504  009CA6  6E4C               	movwf	_idx,c
 26505                           
 26506                           ;buck.c: 386: idx >>= 4;
 26507  009CA8  3A4C               	swapf	_idx,f,c
 26508  009CAA  0E0F               	movlw	15
 26509  009CAC  164C               	andwf	_idx,f,c
 26510                           
 26511                           ; BSR set to: 2
 26512                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 26513  009CAE  504C               	movf	_idx,w,c
 26514  009CB0  0D02               	mullw	2
 26515  009CB2  0E0A               	movlw	low (_os+10)
 26516  009CB4  24F3               	addwf	prodl,w,c
 26517  009CB6  6ED9               	movwf	fsr2l,c
 26518  009CB8  0E02               	movlw	high (_os+10)
 26519  009CBA  20F4               	addwfc	prodh,w,c
 26520  009CBC  6EDA               	movwf	fsr2h,c
 26521  009CBE  CFDE F29E          	movff	postinc2,_now
 26522  009CC2  CFDD F29F          	movff	postdec2,_now+1
 26523  009CC6  0E00               	movlw	0
 26524  009CC8  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26525  009CCA  0EFF               	movlw	-1
 26526  009CCC  6FA0               	movwf	(_now+2)& (0+255),b
 26527  009CCE  6FA1               	movwf	(_now+3)& (0+255),b
 26528                           
 26529                           ; BSR set to: 2
 26530                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 26531  009CD0  C29E  F060         	movff	_now,___lmul@multiplier
 26532  009CD4  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26533  009CD8  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26534  009CDC  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26535  009CE0  504C               	movf	_idx,w,c
 26536  009CE2  0D02               	mullw	2
 26537  009CE4  0E14               	movlw	low (_os+20)
 26538  009CE6  24F3               	addwf	prodl,w,c
 26539  009CE8  6ED9               	movwf	fsr2l,c
 26540  009CEA  0E02               	movlw	high (_os+20)
 26541  009CEC  20F4               	addwfc	prodh,w,c
 26542  009CEE  6EDA               	movwf	fsr2h,c
 26543  009CF0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26544  009CF4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26545  009CF8  0100               	movlb	0	; () banked
 26546  009CFA  0E00               	movlw	0
 26547  009CFC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26548  009CFE  0EFF               	movlw	-1
 26549  009D00  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26550  009D02  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26551  009D04  EC12  F08D         	call	___lmul	;wreg free
 26552  009D08  C060  F29E         	movff	?___lmul,_now
 26553  009D0C  C061  F29F         	movff	?___lmul+1,_now+1
 26554  009D10  C062  F2A0         	movff	?___lmul+2,_now+2
 26555  009D14  C063  F2A1         	movff	?___lmul+3,_now+3
 26556                           
 26557                           ;buck.c: 390: idx += 2;
 26558  009D18  0E02               	movlw	2
 26559  009D1A  264C               	addwf	_idx,f,c
 26560                           
 26561                           ;buck.c: 391: idx &= 0b11;
 26562  009D1C  0E03               	movlw	3
 26563  009D1E  164C               	andwf	_idx,f,c
 26564                           
 26565                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 26566  009D20  504C               	movf	_idx,w,c
 26567  009D22  0D02               	mullw	2
 26568  009D24  0E0A               	movlw	low (_os+10)
 26569  009D26  24F3               	addwf	prodl,w,c
 26570  009D28  6ED9               	movwf	fsr2l,c
 26571  009D2A  0E02               	movlw	high (_os+10)
 26572  009D2C  20F4               	addwfc	prodh,w,c
 26573  009D2E  6EDA               	movwf	fsr2h,c
 26574  009D30  CFDE F2A2          	movff	postinc2,_last
 26575  009D34  CFDD F2A3          	movff	postdec2,_last+1
 26576  009D38  0102               	movlb	2	; () banked
 26577  009D3A  0E00               	movlw	0
 26578  009D3C  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26579  009D3E  0EFF               	movlw	-1
 26580  009D40  6FA4               	movwf	(_last+2)& (0+255),b
 26581  009D42  6FA5               	movwf	(_last+3)& (0+255),b
 26582                           
 26583                           ; BSR set to: 2
 26584                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 26585  009D44  C2A2  F060         	movff	_last,___lmul@multiplier
 26586  009D48  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26587  009D4C  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26588  009D50  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26589  009D54  504C               	movf	_idx,w,c
 26590  009D56  0D02               	mullw	2
 26591  009D58  0E14               	movlw	low (_os+20)
 26592  009D5A  24F3               	addwf	prodl,w,c
 26593  009D5C  6ED9               	movwf	fsr2l,c
 26594  009D5E  0E02               	movlw	high (_os+20)
 26595  009D60  20F4               	addwfc	prodh,w,c
 26596  009D62  6EDA               	movwf	fsr2h,c
 26597  009D64  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26598  009D68  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26599  009D6C  0100               	movlb	0	; () banked
 26600  009D6E  0E00               	movlw	0
 26601  009D70  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26602  009D72  0EFF               	movlw	-1
 26603  009D74  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26604  009D76  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26605  009D78  EC12  F08D         	call	___lmul	;wreg free
 26606  009D7C  C060  F2A2         	movff	?___lmul,_last
 26607  009D80  C061  F2A3         	movff	?___lmul+1,_last+1
 26608  009D84  C062  F2A4         	movff	?___lmul+2,_last+2
 26609  009D88  C063  F2A5         	movff	?___lmul+3,_last+3
 26610                           
 26611                           ;buck.c: 395: if(os.input_voltage>15185)
 26612  009D8C  0102               	movlb	2	; () banked
 26613  009D8E  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 26614  009D90  D00B               	goto	l2543
 26615  009D92  0E52               	movlw	82
 26616  009D94  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26617  009D96  0E3B               	movlw	59
 26618  009D98  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 26619  009D9A  A0D8               	btfss	status,0,c
 26620  009D9C  D005               	goto	l2543
 26621                           
 26622                           ; BSR set to: 2
 26623                           ;buck.c: 396: {
 26624                           ;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 26625  009D9E  0100               	movlb	0	; () banked
 26626  009DA0  29FE               	incf	_buck_dutycycle& (0+255),w,b
 26627  009DA2  EC20  F089         	call	__buck_set_dutycycle
 26628                           
 26629                           ;buck.c: 398: }
 26630  009DA6  0012               	return	
 26631  009DA8                     l2543:
 26632                           
 26633                           ;buck.c: 399: else
 26634                           ;buck.c: 400: {
 26635                           ;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 26636  009DA8  0100               	movlb	0	; () banked
 26637  009DAA  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26638  009DAC  EC20  F089         	call	__buck_set_dutycycle
 26639                           
 26640                           ;buck.c: 402: }
 26641                           ;buck.c: 403: }
 26642                           ;buck.c: 404: }
 26643                           ;buck.c: 405: break;
 26644  009DB0  0012               	return	
 26645  009DB2                     l2545:
 26646                           
 26647                           ; BSR set to: 0
 26648                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 26649  009DB2  0102               	movlb	2	; () banked
 26650  009DB4  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26651  009DB6  0012               	return	
 26652                           
 26653                           ; BSR set to: 2
 26654                           ;buck.c: 409: {
 26655                           ;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 26656  009DB8  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26657  009DBA  5DED               	subwf	_battery_voltage_maximum& (0+255),w,b
 26658  009DBC  51EE               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26659  009DBE  0A80               	xorlw	128
 26660  009DC0  0100               	movlb	0	; () banked
 26661  009DC2  6F76               	movwf	??__buck_operate_local& (0+255),b
 26662  009DC4  0102               	movlb	2	; () banked
 26663  009DC6  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26664  009DC8  0A80               	xorlw	128
 26665  009DCA  0100               	movlb	0	; () banked
 26666  009DCC  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26667  009DCE  B0D8               	btfsc	status,0,c
 26668  009DD0  D006               	goto	l2547
 26669                           
 26670                           ; BSR set to: 0
 26671                           ;buck.c: 412: {
 26672                           ;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 26673  009DD2  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26674  009DD4  EC20  F089         	call	__buck_set_dutycycle
 26675                           
 26676                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 26677  009DD8  0101               	movlb	1	; () banked
 26678  009DDA  69EE               	setf	_buck_dutycycle_last_step& (0+255),b
 26679                           
 26680                           ;buck.c: 415: }
 26681  009DDC  0012               	return	
 26682  009DDE                     l2547:
 26683                           
 26684                           ;buck.c: 417: else if (os.input_current<200)
 26685                           
 26686                           ; BSR set to: 1
 26687  009DDE  0102               	movlb	2	; () banked
 26688  009DE0  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26689  009DE2  D006               	goto	u14140
 26690  009DE4  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26691  009DE6  E10E               	bnz	l15592
 26692  009DE8  0EC8               	movlw	200
 26693  009DEA  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26694  009DEC  B0D8               	btfsc	status,0,c
 26695  009DEE  D00A               	goto	l2549
 26696  009DF0                     u14140:
 26697                           
 26698                           ; BSR set to: 2
 26699                           ;buck.c: 418: {
 26700                           ;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 26701  009DF0  0100               	movlb	0	; () banked
 26702  009DF2  51FE               	movf	_buck_dutycycle& (0+255),w,b
 26703  009DF4  0FFB               	addlw	251
 26704  009DF6  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26705                           
 26706                           ; BSR set to: 0
 26707                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 26708  009DF8  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26709  009DFC  0E00               	movlw	0
 26710  009DFE  EC9C  F087         	call	__buck_set_sync_async
 26711                           
 26712                           ;buck.c: 421: }
 26713  009E02  0012               	return	
 26714  009E04                     l2549:
 26715  009E04                     l15592:
 26716                           
 26717                           ;buck.c: 423: else
 26718                           ;buck.c: 424: {
 26719                           ;buck.c: 426: idx = os.timeSlot & 0b00110000;
 26720  009E04  0102               	movlb	2	; () banked
 26721  009E06  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26722  009E08  0B30               	andlw	48
 26723  009E0A  6E4C               	movwf	_idx,c
 26724                           
 26725                           ;buck.c: 427: idx >>= 4;
 26726  009E0C  3A4C               	swapf	_idx,f,c
 26727  009E0E  0E0F               	movlw	15
 26728  009E10  164C               	andwf	_idx,f,c
 26729                           
 26730                           ; BSR set to: 2
 26731                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 26732  009E12  504C               	movf	_idx,w,c
 26733  009E14  0D02               	mullw	2
 26734  009E16  0E0A               	movlw	low (_os+10)
 26735  009E18  24F3               	addwf	prodl,w,c
 26736  009E1A  6ED9               	movwf	fsr2l,c
 26737  009E1C  0E02               	movlw	high (_os+10)
 26738  009E1E  20F4               	addwfc	prodh,w,c
 26739  009E20  6EDA               	movwf	fsr2h,c
 26740  009E22  CFDE F29E          	movff	postinc2,_now
 26741  009E26  CFDD F29F          	movff	postdec2,_now+1
 26742  009E2A  0E00               	movlw	0
 26743  009E2C  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26744  009E2E  0EFF               	movlw	-1
 26745  009E30  6FA0               	movwf	(_now+2)& (0+255),b
 26746  009E32  6FA1               	movwf	(_now+3)& (0+255),b
 26747                           
 26748                           ; BSR set to: 2
 26749                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 26750  009E34  C29E  F060         	movff	_now,___lmul@multiplier
 26751  009E38  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26752  009E3C  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26753  009E40  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26754  009E44  504C               	movf	_idx,w,c
 26755  009E46  0D02               	mullw	2
 26756  009E48  0E14               	movlw	low (_os+20)
 26757  009E4A  24F3               	addwf	prodl,w,c
 26758  009E4C  6ED9               	movwf	fsr2l,c
 26759  009E4E  0E02               	movlw	high (_os+20)
 26760  009E50  20F4               	addwfc	prodh,w,c
 26761  009E52  6EDA               	movwf	fsr2h,c
 26762  009E54  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26763  009E58  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26764  009E5C  0100               	movlb	0	; () banked
 26765  009E5E  0E00               	movlw	0
 26766  009E60  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26767  009E62  0EFF               	movlw	-1
 26768  009E64  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26769  009E66  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26770  009E68  EC12  F08D         	call	___lmul	;wreg free
 26771  009E6C  C060  F29E         	movff	?___lmul,_now
 26772  009E70  C061  F29F         	movff	?___lmul+1,_now+1
 26773  009E74  C062  F2A0         	movff	?___lmul+2,_now+2
 26774  009E78  C063  F2A1         	movff	?___lmul+3,_now+3
 26775                           
 26776                           ;buck.c: 431: idx += 2;
 26777  009E7C  0E02               	movlw	2
 26778  009E7E  264C               	addwf	_idx,f,c
 26779                           
 26780                           ;buck.c: 432: idx &= 0b11;
 26781  009E80  0E03               	movlw	3
 26782  009E82  164C               	andwf	_idx,f,c
 26783                           
 26784                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 26785  009E84  504C               	movf	_idx,w,c
 26786  009E86  0D02               	mullw	2
 26787  009E88  0E0A               	movlw	low (_os+10)
 26788  009E8A  24F3               	addwf	prodl,w,c
 26789  009E8C  6ED9               	movwf	fsr2l,c
 26790  009E8E  0E02               	movlw	high (_os+10)
 26791  009E90  20F4               	addwfc	prodh,w,c
 26792  009E92  6EDA               	movwf	fsr2h,c
 26793  009E94  CFDE F2A2          	movff	postinc2,_last
 26794  009E98  CFDD F2A3          	movff	postdec2,_last+1
 26795  009E9C  0102               	movlb	2	; () banked
 26796  009E9E  0E00               	movlw	0
 26797  009EA0  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26798  009EA2  0EFF               	movlw	-1
 26799  009EA4  6FA4               	movwf	(_last+2)& (0+255),b
 26800  009EA6  6FA5               	movwf	(_last+3)& (0+255),b
 26801                           
 26802                           ; BSR set to: 2
 26803                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 26804  009EA8  C2A2  F060         	movff	_last,___lmul@multiplier
 26805  009EAC  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26806  009EB0  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26807  009EB4  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26808  009EB8  504C               	movf	_idx,w,c
 26809  009EBA  0D02               	mullw	2
 26810  009EBC  0E14               	movlw	low (_os+20)
 26811  009EBE  24F3               	addwf	prodl,w,c
 26812  009EC0  6ED9               	movwf	fsr2l,c
 26813  009EC2  0E02               	movlw	high (_os+20)
 26814  009EC4  20F4               	addwfc	prodh,w,c
 26815  009EC6  6EDA               	movwf	fsr2h,c
 26816  009EC8  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26817  009ECC  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26818  009ED0  0100               	movlb	0	; () banked
 26819  009ED2  0E00               	movlw	0
 26820  009ED4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26821  009ED6  0EFF               	movlw	-1
 26822  009ED8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26823  009EDA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26824  009EDC  EC12  F08D         	call	___lmul	;wreg free
 26825  009EE0  C060  F2A2         	movff	?___lmul,_last
 26826  009EE4  C061  F2A3         	movff	?___lmul+1,_last+1
 26827  009EE8  C062  F2A4         	movff	?___lmul+2,_last+2
 26828  009EEC  C063  F2A5         	movff	?___lmul+3,_last+3
 26829                           
 26830                           ;buck.c: 436: if(os.input_voltage>15185)
 26831  009EF0  0102               	movlb	2	; () banked
 26832  009EF2  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 26833  009EF4  D00B               	goto	l2551
 26834  009EF6  0E52               	movlw	82
 26835  009EF8  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26836  009EFA  0E3B               	movlw	59
 26837  009EFC  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 26838  009EFE  A0D8               	btfss	status,0,c
 26839  009F00  D005               	goto	l2551
 26840                           
 26841                           ; BSR set to: 2
 26842                           ;buck.c: 437: {
 26843                           ;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 26844  009F02  0100               	movlb	0	; () banked
 26845  009F04  29FE               	incf	_buck_dutycycle& (0+255),w,b
 26846  009F06  EC20  F089         	call	__buck_set_dutycycle
 26847                           
 26848                           ;buck.c: 439: }
 26849  009F0A  0012               	return	
 26850  009F0C                     l2551:
 26851                           
 26852                           ;buck.c: 440: else
 26853                           ;buck.c: 441: {
 26854                           ;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 26855  009F0C  0100               	movlb	0	; () banked
 26856  009F0E  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26857  009F10  EC20  F089         	call	__buck_set_dutycycle
 26858                           
 26859                           ;buck.c: 443: }
 26860                           ;buck.c: 444: }
 26861                           ;buck.c: 445: }
 26862                           ;buck.c: 446: break;
 26863  009F14  0012               	return	
 26864  009F16                     
 26865                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 26866  009F16  0E00               	movlw	0
 26867  009F18  0100               	movlb	0	; () banked
 26868  009F1A  6FFF               	movwf	_buck_status& (0+255),b
 26869                           
 26870                           ;buck.c: 450: }
 26871  009F1C  0012               	return	
 26872  009F1E                     l2520:
 26873                           
 26874                           ; BSR set to: 0
 26875  009F1E  0100               	movlb	0	; () banked
 26876  009F20  51FF               	movf	_buck_status& (0+255),w,b
 26877                           
 26878                           ; Switch size 1, requested type "space"
 26879                           ; Number of cases is 4, Range of values is 0 to 3
 26880                           ; switch strategies available:
 26881                           ; Name         Instructions Cycles
 26882                           ; simple_byte           13     7 (average)
 26883                           ;	Chosen strategy is simple_byte
 26884  009F22  0A00               	xorlw	0	; case 0
 26885  009F24  B4D8               	btfsc	status,2,c
 26886  009F26  D5D0               	goto	l2521
 26887  009F28  0A01               	xorlw	1	; case 1
 26888  009F2A  B4D8               	btfsc	status,2,c
 26889  009F2C  D61B               	goto	l2527
 26890  009F2E  0A03               	xorlw	3	; case 2
 26891  009F30  B4D8               	btfsc	status,2,c
 26892  009F32  D650               	goto	l2531
 26893  009F34  0A01               	xorlw	1	; case 3
 26894  009F36  B4D8               	btfsc	status,2,c
 26895  009F38  D73C               	goto	l2545
 26896  009F3A  D7ED               	goto	l2553
 26897  009F3C                     __end_of__buck_operate_local:
 26898                           	opt stack 0
 26899                           tblptru	equ	0xFF8
 26900                           tblptrh	equ	0xFF7
 26901                           tblptrl	equ	0xFF6
 26902                           tablat	equ	0xFF5
 26903                           prodh	equ	0xFF4
 26904                           prodl	equ	0xFF3
 26905                           intcon	equ	0xFF2
 26906                           intcon2	equ	0xFF1
 26907                           intcon3	equ	0xFF0
 26908                           postinc0	equ	0xFEE
 26909                           wreg	equ	0xFE8
 26910                           indf1	equ	0xFE7
 26911                           postinc1	equ	0xFE6
 26912                           postdec1	equ	0xFE5
 26913                           plusw1	equ	0xFE3
 26914                           fsr1h	equ	0xFE2
 26915                           fsr1l	equ	0xFE1
 26916                           indf2	equ	0xFDF
 26917                           postinc2	equ	0xFDE
 26918                           postdec2	equ	0xFDD
 26919                           plusw2	equ	0xFDB
 26920                           fsr2h	equ	0xFDA
 26921                           fsr2l	equ	0xFD9
 26922                           status	equ	0xFD8
 26923                           
 26924 ;; *************** function __buck_stop *****************
 26925 ;; Defined at:
 26926 ;;		line 283 in file "buck.c"
 26927 ;; Parameters:    Size  Location     Type
 26928 ;;		None
 26929 ;; Auto vars:     Size  Location     Type
 26930 ;;		None
 26931 ;; Return value:  Size  Location     Type
 26932 ;;                  1    wreg      void 
 26933 ;; Registers used:
 26934 ;;		wreg, status,2, status,0
 26935 ;; Tracked objects:
 26936 ;;		On entry : 0/0
 26937 ;;		On exit  : 0/0
 26938 ;;		Unchanged: 0/0
 26939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26944 ;;Total ram usage:        0 bytes
 26945 ;; Hardware stack levels used:    1
 26946 ;; Hardware stack levels required when called:   10
 26947 ;; This function calls:
 26948 ;;		Nothing
 26949 ;; This function is called by:
 26950 ;;		__buck_operate_local
 26951 ;;		__buck_operate_remote
 26952 ;; This function uses a non-reentrant model
 26953 ;;
 26954                           
 26955                           	psect	text120
 26956  0125E8                     __ptext120:
 26957                           	opt stack 0
 26958  0125E8                     __buck_stop:
 26959                           	opt stack 18
 26960                           
 26961                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 26962                           
 26963                           ;incstack = 0
 26964  0125E8  96CA               	bcf	4042,3,c	;volatile
 26965  0125EA  98CA               	bcf	4042,4,c	;volatile
 26966  0125EC  9ACA               	bcf	4042,5,c	;volatile
 26967  0125EE  9CCA               	bcf	4042,6,c	;volatile
 26968                           
 26969                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 26970  0125F0  929E               	bcf	3998,1,c	;volatile
 26971  0125F2  A29E               	btfss	3998,1,c	;volatile
 26972  0125F4  D7FE               	goto	l2513
 26973                           
 26974                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 26975  0125F6  90BA               	bcf	4026,0,c	;volatile
 26976  0125F8  92BA               	bcf	4026,1,c	;volatile
 26977  0125FA  94BA               	bcf	4026,2,c	;volatile
 26978  0125FC  96BA               	bcf	4026,3,c	;volatile
 26979                           
 26980                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 26981  0125FE  94CA               	bcf	4042,2,c	;volatile
 26982                           
 26983                           ;buck.c: 295: LATBbits.LB1 = 0;
 26984  012600  928A               	bcf	3978,1,c	;volatile
 26985                           
 26986                           ;buck.c: 297: if(buck_status<0x80)
 26987  012602  0E80               	movlw	128
 26988  012604  0100               	movlb	0	; () banked
 26989  012606  61FF               	cpfslt	_buck_status& (0+255),b
 26990  012608  D003               	goto	l2515
 26991                           
 26992                           ; BSR set to: 0
 26993                           ;buck.c: 298: {
 26994                           ;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 26995  01260A  0E00               	movlw	0
 26996  01260C  6FFF               	movwf	_buck_status& (0+255),b
 26997                           
 26998                           ;buck.c: 300: }
 26999  01260E  0012               	return	
 27000  012610                     l2515:
 27001                           
 27002                           ; BSR set to: 0
 27003                           ;buck.c: 301: else
 27004                           ;buck.c: 302: {
 27005                           ;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 27006                           
 27007                           ; BSR set to: 0
 27008  012610  0E80               	movlw	128
 27009  012612  6FFF               	movwf	_buck_status& (0+255),b
 27010  012614  0012               	return	
 27011  012616                     __end_of__buck_stop:
 27012                           	opt stack 0
 27013                           tblptru	equ	0xFF8
 27014                           tblptrh	equ	0xFF7
 27015                           tblptrl	equ	0xFF6
 27016                           tablat	equ	0xFF5
 27017                           prodh	equ	0xFF4
 27018                           prodl	equ	0xFF3
 27019                           intcon	equ	0xFF2
 27020                           intcon2	equ	0xFF1
 27021                           intcon3	equ	0xFF0
 27022                           postinc0	equ	0xFEE
 27023                           wreg	equ	0xFE8
 27024                           indf1	equ	0xFE7
 27025                           postinc1	equ	0xFE6
 27026                           postdec1	equ	0xFE5
 27027                           plusw1	equ	0xFE3
 27028                           fsr1h	equ	0xFE2
 27029                           fsr1l	equ	0xFE1
 27030                           indf2	equ	0xFDF
 27031                           postinc2	equ	0xFDE
 27032                           postdec2	equ	0xFDD
 27033                           plusw2	equ	0xFDB
 27034                           fsr2h	equ	0xFDA
 27035                           fsr2l	equ	0xFD9
 27036                           status	equ	0xFD8
 27037                           
 27038 ;; *************** function __buck_start *****************
 27039 ;; Defined at:
 27040 ;;		line 143 in file "buck.c"
 27041 ;; Parameters:    Size  Location     Type
 27042 ;;  mode            1    wreg     enum E8115
 27043 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 27044 ;; Auto vars:     Size  Location     Type
 27045 ;;  mode            1   19[BANK0 ] enum E8115
 27046 ;;  cntr            1   21[BANK0 ] unsigned char 
 27047 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 27048 ;; Return value:  Size  Location     Type
 27049 ;;                  1    wreg      void 
 27050 ;; Registers used:
 27051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27052 ;; Tracked objects:
 27053 ;;		On entry : 0/0
 27054 ;;		On exit  : 0/0
 27055 ;;		Unchanged: 0/0
 27056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27057 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27058 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27060 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27061 ;;Total ram usage:        4 bytes
 27062 ;; Hardware stack levels used:    1
 27063 ;; Hardware stack levels required when called:   12
 27064 ;; This function calls:
 27065 ;;		__buck_initial_dutycycle
 27066 ;;		__buck_set_dutycycle
 27067 ;;		__buck_set_sync_async
 27068 ;; This function is called by:
 27069 ;;		__buck_operate_local
 27070 ;;		__buck_operate_remote
 27071 ;; This function uses a non-reentrant model
 27072 ;;
 27073                           
 27074                           	psect	text121
 27075  00FAEA                     __ptext121:
 27076                           	opt stack 0
 27077  00FAEA                     __buck_start:
 27078                           	opt stack 16
 27079                           
 27080                           ; BSR set to: 0
 27081                           ;incstack = 0
 27082                           ;__buck_start@mode stored from wreg
 27083  00FAEA  0100               	movlb	0	; () banked
 27084  00FAEC  6F73               	movwf	__buck_start@mode& (0+255),b
 27085                           
 27086                           ;buck.c: 145: uint8_t startup_dutycycle;
 27087                           ;buck.c: 146: uint8_t cntr;
 27088                           ;buck.c: 149: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0
      +                          ;
 27089  00FAEE  0E00               	movlw	0
 27090  00FAF0  0103               	movlb	3	; () banked
 27091  00FAF2  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 27092  00FAF4  0E00               	movlw	0
 27093  00FAF6  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 27094                           
 27095                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 27096  00FAF8  0E00               	movlw	0
 27097  00FAFA  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 27098  00FAFC  0E00               	movlw	0
 27099  00FAFE  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 27100                           
 27101                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 27102  00FB00  0E00               	movlw	0
 27103  00FB02  0100               	movlb	0	; () banked
 27104  00FB04  6F75               	movwf	__buck_start@cntr& (0+255),b
 27105  00FB06                     l13724:
 27106                           
 27107                           ; BSR set to: 0
 27108  00FB06  0E03               	movlw	3
 27109  00FB08  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 27110  00FB0A  D001               	goto	l2482
 27111  00FB0C  D01E               	goto	u11440
 27112  00FB0E                     l2482:
 27113                           
 27114                           ; BSR set to: 0
 27115                           ;buck.c: 154: {
 27116                           ;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration -= 
      +                          os.input_current_adc[cntr];
 27117                           
 27118                           ; BSR set to: 0
 27119  00FB0E  5175               	movf	__buck_start@cntr& (0+255),w,b
 27120  00FB10  0D02               	mullw	2
 27121  00FB12  0E14               	movlw	low (_os+20)
 27122  00FB14  24F3               	addwf	prodl,w,c
 27123  00FB16  6ED9               	movwf	fsr2l,c
 27124  00FB18  0E02               	movlw	high (_os+20)
 27125  00FB1A  20F4               	addwfc	prodh,w,c
 27126  00FB1C  6EDA               	movwf	fsr2h,c
 27127  00FB1E  50DE               	movf	postinc2,w,c
 27128  00FB20  0103               	movlb	3	; () banked
 27129  00FB22  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 27130  00FB24  50DD               	movf	postdec2,w,c
 27131  00FB26  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 27132                           
 27133                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 27134  00FB28  0100               	movlb	0	; () banked
 27135  00FB2A  5175               	movf	__buck_start@cntr& (0+255),w,b
 27136  00FB2C  0D02               	mullw	2
 27137  00FB2E  0E29               	movlw	low (_os+41)
 27138  00FB30  24F3               	addwf	prodl,w,c
 27139  00FB32  6ED9               	movwf	fsr2l,c
 27140  00FB34  0E02               	movlw	high (_os+41)
 27141  00FB36  20F4               	addwfc	prodh,w,c
 27142  00FB38  6EDA               	movwf	fsr2h,c
 27143  00FB3A  50DE               	movf	postinc2,w,c
 27144  00FB3C  0103               	movlb	3	; () banked
 27145  00FB3E  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 27146  00FB40  50DD               	movf	postdec2,w,c
 27147  00FB42  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 27148                           
 27149                           ; BSR set to: 3
 27150  00FB44  0100               	movlb	0	; () banked
 27151  00FB46  2B75               	incf	__buck_start@cntr& (0+255),f,b
 27152  00FB48  D7DE               	goto	l13724
 27153  00FB4A                     u11440:
 27154                           
 27155                           ; BSR set to: 0
 27156                           ;buck.c: 159: }
 27157                           ;buck.c: 163: PR2 = 63;
 27158                           
 27159                           ; BSR set to: 0
 27160  00FB4A  0E3F               	movlw	63
 27161  00FB4C  6ECB               	movwf	4043,c	;volatile
 27162                           
 27163                           ;buck.c: 165: TMR2 = 0x00;
 27164  00FB4E  0E00               	movlw	0
 27165  00FB50  6ECC               	movwf	4044,c	;volatile
 27166                           
 27167                           ; BSR set to: 0
 27168                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 27169  00FB52  86CA               	bsf	4042,3,c	;volatile
 27170  00FB54  88CA               	bsf	4042,4,c	;volatile
 27171  00FB56  8ACA               	bsf	4042,5,c	;volatile
 27172  00FB58  8CCA               	bsf	4042,6,c	;volatile
 27173                           
 27174                           ; BSR set to: 0
 27175                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 27176  00FB5A  929E               	bcf	3998,1,c	;volatile
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;buck.c: 172: if(buck_status<0x80)
 27180  00FB5C  0E80               	movlw	128
 27181  00FB5E  61FF               	cpfslt	_buck_status& (0+255),b
 27182  00FB60  D002               	goto	l2484
 27183                           
 27184                           ; BSR set to: 0
 27185                           ;buck.c: 173: {
 27186                           ;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27187  00FB62  0E03               	movlw	3
 27188  00FB64  D001               	goto	L15
 27189  00FB66                     l2484:
 27190                           
 27191                           ; BSR set to: 0
 27192                           ;buck.c: 176: else
 27193                           ;buck.c: 177: {
 27194                           ;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 27195                           
 27196                           ; BSR set to: 0
 27197  00FB66  0E83               	movlw	131
 27198  00FB68                     L15:
 27199  00FB68  6FFF               	movwf	_buck_status& (0+255),b
 27200                           
 27201                           ; BSR set to: 0
 27202                           ;buck.c: 179: }
 27203                           ;buck.c: 182: CCP1CON = 0x00;
 27204  00FB6A  0E00               	movlw	0
 27205  00FB6C  6EBA               	movwf	4026,c	;volatile
 27206                           
 27207                           ; BSR set to: 0
 27208                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 27209  00FB6E  ECFB  F07E         	call	__buck_initial_dutycycle	;wreg free
 27210  00FB72  0100               	movlb	0	; () banked
 27211  00FB74  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 27215  00FB76  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27216  00FB78  EC20  F089         	call	__buck_set_dutycycle
 27217                           
 27218                           ;buck.c: 188: INTCONbits.GIE = 0;
 27219  00FB7C  9EF2               	bcf	intcon,7,c	;volatile
 27220                           
 27221                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 27222  00FB7E  84CA               	bsf	4042,2,c	;volatile
 27223                           
 27224                           ;buck.c: 192: CCP1CON |= 0b00001100;
 27225  00FB80  0E0C               	movlw	12
 27226  00FB82  12BA               	iorwf	4026,f,c	;volatile
 27227                           
 27228                           ;buck.c: 194: CCP1CON |= 0b10000000;
 27229  00FB84  8EBA               	bsf	4026,7,c	;volatile
 27230                           
 27231                           ;buck.c: 196: INTCONbits.GIE = 1;
 27232  00FB86  8EF2               	bsf	intcon,7,c	;volatile
 27233  00FB88  A29E               	btfss	3998,1,c	;volatile
 27234  00FB8A  D7FE               	goto	l2487
 27235                           
 27236                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 27237  00FB8C  0100               	movlb	0	; () banked
 27238  00FB8E  0573               	decf	__buck_start@mode& (0+255),w,b
 27239  00FB90  A4D8               	btfss	status,2,c
 27240  00FB92  D008               	goto	l2489
 27241                           
 27242                           ; BSR set to: 0
 27243                           ;buck.c: 203: {
 27244                           ;buck.c: 205: if(dutycycle!=startup_dutycycle)
 27245  00FB94  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27246  00FB96  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 27247  00FB98  B4D8               	btfsc	status,2,c
 27248  00FB9A  0012               	return	
 27249                           
 27250                           ; BSR set to: 0
 27251                           ;buck.c: 206: {
 27252                           ;buck.c: 207: _buck_set_dutycycle(dutycycle);
 27253  00FB9C  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 27254  00FB9E  EC20  F089         	call	__buck_set_dutycycle
 27255                           
 27256                           ;buck.c: 208: }
 27257                           ;buck.c: 209: }
 27258  00FBA2  0012               	return	
 27259  00FBA4                     l2489:
 27260                           
 27261                           ;buck.c: 210: else
 27262                           ;buck.c: 211: {
 27263                           ;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, dutycycle);
 27264  00FBA4  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 27265  00FBA8  0E00               	movlw	0
 27266  00FBAA  EC9C  F087         	call	__buck_set_sync_async
 27267  00FBAE  0012               	return	
 27268  00FBB0                     __end_of__buck_start:
 27269                           	opt stack 0
 27270                           tblptru	equ	0xFF8
 27271                           tblptrh	equ	0xFF7
 27272                           tblptrl	equ	0xFF6
 27273                           tablat	equ	0xFF5
 27274                           prodh	equ	0xFF4
 27275                           prodl	equ	0xFF3
 27276                           intcon	equ	0xFF2
 27277                           intcon2	equ	0xFF1
 27278                           intcon3	equ	0xFF0
 27279                           postinc0	equ	0xFEE
 27280                           wreg	equ	0xFE8
 27281                           indf1	equ	0xFE7
 27282                           postinc1	equ	0xFE6
 27283                           postdec1	equ	0xFE5
 27284                           plusw1	equ	0xFE3
 27285                           fsr1h	equ	0xFE2
 27286                           fsr1l	equ	0xFE1
 27287                           indf2	equ	0xFDF
 27288                           postinc2	equ	0xFDE
 27289                           postdec2	equ	0xFDD
 27290                           plusw2	equ	0xFDB
 27291                           fsr2h	equ	0xFDA
 27292                           fsr2l	equ	0xFD9
 27293                           status	equ	0xFD8
 27294                           
 27295 ;; *************** function __buck_set_sync_async *****************
 27296 ;; Defined at:
 27297 ;;		line 217 in file "buck.c"
 27298 ;; Parameters:    Size  Location     Type
 27299 ;;  mode            1    wreg     enum E8115
 27300 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 27301 ;; Auto vars:     Size  Location     Type
 27302 ;;  mode            1    3[BANK0 ] enum E8115
 27303 ;; Return value:  Size  Location     Type
 27304 ;;                  1    wreg      void 
 27305 ;; Registers used:
 27306 ;;		wreg, status,2, status,0, cstack
 27307 ;; Tracked objects:
 27308 ;;		On entry : 0/0
 27309 ;;		On exit  : 0/0
 27310 ;;		Unchanged: 0/0
 27311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27312 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27316 ;;Total ram usage:        2 bytes
 27317 ;; Hardware stack levels used:    1
 27318 ;; Hardware stack levels required when called:   11
 27319 ;; This function calls:
 27320 ;;		__buck_set_dutycycle
 27321 ;; This function is called by:
 27322 ;;		__buck_start
 27323 ;;		__buck_operate_local
 27324 ;;		__buck_operate_remote
 27325 ;; This function uses a non-reentrant model
 27326 ;;
 27327                           
 27328                           	psect	text122
 27329  010F38                     __ptext122:
 27330                           	opt stack 0
 27331  010F38                     __buck_set_sync_async:
 27332                           	opt stack 16
 27333                           
 27334                           ;incstack = 0
 27335                           ;__buck_set_sync_async@mode stored from wreg
 27336  010F38  0100               	movlb	0	; () banked
 27337  010F3A  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 27338                           
 27339                           ;buck.c: 219: switch(mode)
 27340  010F3C  D02F               	goto	l2495
 27341  010F3E                     l2496:
 27342                           
 27343                           ; BSR set to: 0
 27344                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 27345  010F3E  96CA               	bcf	4042,3,c	;volatile
 27346  010F40  98CA               	bcf	4042,4,c	;volatile
 27347  010F42  9ACA               	bcf	4042,5,c	;volatile
 27348  010F44  9CCA               	bcf	4042,6,c	;volatile
 27349                           
 27350                           ;buck.c: 228: INTCONbits.GIE = 0;
 27351  010F46  9EF2               	bcf	intcon,7,c	;volatile
 27352                           
 27353                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 27354  010F48  929E               	bcf	3998,1,c	;volatile
 27355  010F4A                     
 27356                           ; BSR set to: 0
 27357  010F4A  A29E               	btfss	3998,1,c	;volatile
 27358  010F4C  D7FE               	goto	l2498
 27359                           
 27360                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 27361  010F4E  9EBA               	bcf	4026,7,c	;volatile
 27362                           
 27363                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 27364  010F50  9CBA               	bcf	4026,6,c	;volatile
 27365                           
 27366                           ;buck.c: 237: if(buck_status<0x80)
 27367  010F52  0E80               	movlw	128
 27368  010F54  0100               	movlb	0	; () banked
 27369  010F56  61FF               	cpfslt	_buck_status& (0+255),b
 27370  010F58  D002               	goto	l2500
 27371                           
 27372                           ; BSR set to: 0
 27373                           ;buck.c: 238: {
 27374                           ;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 27375  010F5A  0E02               	movlw	2
 27376  010F5C  D001               	goto	L16
 27377  010F5E                     l2500:
 27378                           
 27379                           ; BSR set to: 0
 27380                           ;buck.c: 241: else
 27381                           ;buck.c: 242: {
 27382                           ;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRONOUS;
 27383                           
 27384                           ; BSR set to: 0
 27385  010F5E  0E82               	movlw	130
 27386  010F60                     L16:
 27387  010F60  6FFF               	movwf	_buck_status& (0+255),b
 27388                           
 27389                           ; BSR set to: 0
 27390                           ;buck.c: 244: }
 27391                           ;buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 27392                           
 27393                           ; BSR set to: 0
 27394  010F62  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27395  010F64  EC20  F089         	call	__buck_set_dutycycle
 27396                           
 27397                           ;buck.c: 248: INTCONbits.GIE = 1;
 27398  010F68  8EF2               	bsf	intcon,7,c	;volatile
 27399                           
 27400                           ;buck.c: 249: break;
 27401  010F6A  0012               	return	
 27402  010F6C                     
 27403                           ;buck.c: 255: if(buck_status<0x80)
 27404  010F6C  0E80               	movlw	128
 27405  010F6E  0100               	movlb	0	; () banked
 27406  010F70  61FF               	cpfslt	_buck_status& (0+255),b
 27407  010F72  D002               	goto	l2504
 27408                           
 27409                           ; BSR set to: 0
 27410                           ;buck.c: 256: {
 27411                           ;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27412  010F74  0E03               	movlw	3
 27413  010F76  D001               	goto	L17
 27414  010F78                     l2504:
 27415                           
 27416                           ; BSR set to: 0
 27417                           ;buck.c: 259: else
 27418                           ;buck.c: 260: {
 27419                           ;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 27420                           
 27421                           ; BSR set to: 0
 27422  010F78  0E83               	movlw	131
 27423  010F7A                     L17:
 27424  010F7A  6FFF               	movwf	_buck_status& (0+255),b
 27425                           
 27426                           ; BSR set to: 0
 27427                           ;buck.c: 262: }
 27428                           ;buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 27429                           
 27430                           ; BSR set to: 0
 27431  010F7C  96CA               	bcf	4042,3,c	;volatile
 27432  010F7E  98CA               	bcf	4042,4,c	;volatile
 27433  010F80  9ACA               	bcf	4042,5,c	;volatile
 27434  010F82  9CCA               	bcf	4042,6,c	;volatile
 27435                           
 27436                           ; BSR set to: 0
 27437                           ;buck.c: 267: INTCONbits.GIE = 0;
 27438  010F84  9EF2               	bcf	intcon,7,c	;volatile
 27439                           
 27440                           ; BSR set to: 0
 27441                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 27442  010F86  929E               	bcf	3998,1,c	;volatile
 27443  010F88                     
 27444                           ; BSR set to: 0
 27445  010F88  A29E               	btfss	3998,1,c	;volatile
 27446  010F8A  D7FE               	goto	l2507
 27447                           
 27448                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 27449  010F8C  0100               	movlb	0	; () banked
 27450  010F8E  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27451  010F90  EC20  F089         	call	__buck_set_dutycycle
 27452                           
 27453                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 27454  010F94  8EBA               	bsf	4026,7,c	;volatile
 27455                           
 27456                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 27457  010F96  9CBA               	bcf	4026,6,c	;volatile
 27458                           
 27459                           ;buck.c: 278: INTCONbits.GIE = 1;
 27460  010F98  8EF2               	bsf	intcon,7,c	;volatile
 27461                           
 27462                           ;buck.c: 280: }
 27463                           
 27464                           ;buck.c: 279: break;
 27465  010F9A  0012               	return	
 27466  010F9C                     l2495:
 27467  010F9C  0100               	movlb	0	; () banked
 27468  010F9E  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 27469                           
 27470                           ; Switch size 1, requested type "space"
 27471                           ; Number of cases is 2, Range of values is 0 to 1
 27472                           ; switch strategies available:
 27473                           ; Name         Instructions Cycles
 27474                           ; simple_byte            7     4 (average)
 27475                           ;	Chosen strategy is simple_byte
 27476  010FA0  0A00               	xorlw	0	; case 0
 27477  010FA2  B4D8               	btfsc	status,2,c
 27478  010FA4  D7CC               	goto	l2496
 27479  010FA6  0A01               	xorlw	1	; case 1
 27480  010FA8  A4D8               	btfss	status,2,c
 27481  010FAA  0012               	return	
 27482  010FAC  D7DF               	goto	l2503
 27483  010FAE                     __end_of__buck_set_sync_async:
 27484                           	opt stack 0
 27485                           tblptru	equ	0xFF8
 27486                           tblptrh	equ	0xFF7
 27487                           tblptrl	equ	0xFF6
 27488                           tablat	equ	0xFF5
 27489                           prodh	equ	0xFF4
 27490                           prodl	equ	0xFF3
 27491                           intcon	equ	0xFF2
 27492                           intcon2	equ	0xFF1
 27493                           intcon3	equ	0xFF0
 27494                           postinc0	equ	0xFEE
 27495                           wreg	equ	0xFE8
 27496                           indf1	equ	0xFE7
 27497                           postinc1	equ	0xFE6
 27498                           postdec1	equ	0xFE5
 27499                           plusw1	equ	0xFE3
 27500                           fsr1h	equ	0xFE2
 27501                           fsr1l	equ	0xFE1
 27502                           indf2	equ	0xFDF
 27503                           postinc2	equ	0xFDE
 27504                           postdec2	equ	0xFDD
 27505                           plusw2	equ	0xFDB
 27506                           fsr2h	equ	0xFDA
 27507                           fsr2l	equ	0xFD9
 27508                           status	equ	0xFD8
 27509                           
 27510 ;; *************** function __buck_set_dutycycle *****************
 27511 ;; Defined at:
 27512 ;;		line 98 in file "buck.c"
 27513 ;; Parameters:    Size  Location     Type
 27514 ;;  dutyCycle       1    wreg     unsigned char 
 27515 ;; Auto vars:     Size  Location     Type
 27516 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 27517 ;; Return value:  Size  Location     Type
 27518 ;;                  1    wreg      void 
 27519 ;; Registers used:
 27520 ;;		wreg, status,2, status,0
 27521 ;; Tracked objects:
 27522 ;;		On entry : 0/0
 27523 ;;		On exit  : 0/0
 27524 ;;		Unchanged: 0/0
 27525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27530 ;;Total ram usage:        2 bytes
 27531 ;; Hardware stack levels used:    1
 27532 ;; Hardware stack levels required when called:   10
 27533 ;; This function calls:
 27534 ;;		Nothing
 27535 ;; This function is called by:
 27536 ;;		__buck_start
 27537 ;;		__buck_set_sync_async
 27538 ;;		__buck_operate_local
 27539 ;;		__buck_operate_remote
 27540 ;; This function uses a non-reentrant model
 27541 ;;
 27542                           
 27543                           	psect	text123
 27544  011240                     __ptext123:
 27545                           	opt stack 0
 27546  011240                     __buck_set_dutycycle:
 27547                           	opt stack 16
 27548                           
 27549                           ;incstack = 0
 27550                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 27551  011240  0100               	movlb	0	; () banked
 27552  011242  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27553                           
 27554                           ;buck.c: 101: if(dutyCycle>242)
 27555  011244  0EF2               	movlw	242
 27556  011246  0100               	movlb	0	; () banked
 27557  011248  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27558  01124A  D002               	goto	l2463
 27559                           
 27560                           ; BSR set to: 0
 27561                           ;buck.c: 102: dutyCycle = 242;
 27562  01124C  0EF2               	movlw	242
 27563  01124E  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27564  011250                     l2463:
 27565                           
 27566                           ; BSR set to: 0
 27567                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 27568                           
 27569                           ; BSR set to: 0
 27570  011250  0E03               	movlw	3
 27571  011252  19FF               	xorwf	_buck_status& (0+255),w,b
 27572  011254  B4D8               	btfsc	status,2,c
 27573  011256  D004               	goto	u10180
 27574                           
 27575                           ; BSR set to: 0
 27576  011258  0E83               	movlw	131
 27577  01125A  19FF               	xorwf	_buck_status& (0+255),w,b
 27578  01125C  A4D8               	btfss	status,2,c
 27579  01125E  D005               	goto	l2467
 27580  011260                     u10180:
 27581                           
 27582                           ; BSR set to: 0
 27583                           ;buck.c: 104: {
 27584                           ;buck.c: 105: if(dutyCycle<150)
 27585                           
 27586                           ; BSR set to: 0
 27587  011260  0E96               	movlw	150
 27588  011262  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27589  011264  D002               	goto	l2467
 27590                           
 27591                           ; BSR set to: 0
 27592                           ;buck.c: 106: dutyCycle = 150;
 27593  011266  0E96               	movlw	150
 27594  011268  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27595  01126A                     l2467:
 27596                           
 27597                           ; BSR set to: 0
 27598                           ;buck.c: 107: }
 27599                           ;buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BUCK_STATUS_REMOT
      +                          E_ASYNCHRONOUS)
 27600                           
 27601                           ; BSR set to: 0
 27602                           
 27603                           ; BSR set to: 0
 27604  01126A  0E02               	movlw	2
 27605  01126C  19FF               	xorwf	_buck_status& (0+255),w,b
 27606  01126E  B4D8               	btfsc	status,2,c
 27607  011270  D004               	goto	u10210
 27608                           
 27609                           ; BSR set to: 0
 27610  011272  0E82               	movlw	130
 27611  011274  19FF               	xorwf	_buck_status& (0+255),w,b
 27612  011276  A4D8               	btfss	status,2,c
 27613  011278  D005               	goto	l2471
 27614  01127A                     u10210:
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;buck.c: 109: {
 27618                           ;buck.c: 110: if(dutyCycle<40)
 27619                           
 27620                           ; BSR set to: 0
 27621  01127A  0E28               	movlw	40
 27622  01127C  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27623  01127E  D002               	goto	l2471
 27624                           
 27625                           ; BSR set to: 0
 27626                           ;buck.c: 111: dutyCycle = 40;
 27627  011280  0E28               	movlw	40
 27628  011282  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27629  011284                     l2471:
 27630                           
 27631                           ; BSR set to: 0
 27632                           ;buck.c: 112: }
 27633                           ;buck.c: 114: buck_dutycycle = dutyCycle;
 27634                           
 27635                           ; BSR set to: 0
 27636                           
 27637                           ; BSR set to: 0
 27638  011284  C061  F0FE         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 27639                           
 27640                           ; BSR set to: 0
 27641                           ;buck.c: 116: INTCONbits.GIE = 0;
 27642  011288  9EF2               	bcf	intcon,7,c	;volatile
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 27646  01128A  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 27647  01128E  0E03               	movlw	3
 27648  011290  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 27649  011292  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 27650  011294  50BA               	movf	4026,w,c	;volatile
 27651  011296  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 27652  011298  0BCF               	andlw	-49
 27653  01129A  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 27654  01129C  6EBA               	movwf	4026,c	;volatile
 27655                           
 27656                           ; BSR set to: 0
 27657                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 27658  01129E  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 27659  0112A0  42E8               	rrncf	wreg,f,c
 27660  0112A2  0B3F               	andlw	63
 27661  0112A4  6EBB               	movwf	4027,c	;volatile
 27662                           
 27663                           ; BSR set to: 0
 27664                           ;buck.c: 122: INTCONbits.GIE = 1;
 27665  0112A6  8EF2               	bsf	intcon,7,c	;volatile
 27666                           
 27667                           ; BSR set to: 0
 27668  0112A8  0012               	return		;funcret
 27669  0112AA                     __end_of__buck_set_dutycycle:
 27670                           	opt stack 0
 27671                           tblptru	equ	0xFF8
 27672                           tblptrh	equ	0xFF7
 27673                           tblptrl	equ	0xFF6
 27674                           tablat	equ	0xFF5
 27675                           prodh	equ	0xFF4
 27676                           prodl	equ	0xFF3
 27677                           intcon	equ	0xFF2
 27678                           intcon2	equ	0xFF1
 27679                           intcon3	equ	0xFF0
 27680                           postinc0	equ	0xFEE
 27681                           wreg	equ	0xFE8
 27682                           indf1	equ	0xFE7
 27683                           postinc1	equ	0xFE6
 27684                           postdec1	equ	0xFE5
 27685                           plusw1	equ	0xFE3
 27686                           fsr1h	equ	0xFE2
 27687                           fsr1l	equ	0xFE1
 27688                           indf2	equ	0xFDF
 27689                           postinc2	equ	0xFDE
 27690                           postdec2	equ	0xFDD
 27691                           plusw2	equ	0xFDB
 27692                           fsr2h	equ	0xFDA
 27693                           fsr2l	equ	0xFD9
 27694                           status	equ	0xFD8
 27695                           
 27696 ;; *************** function __buck_initial_dutycycle *****************
 27697 ;; Defined at:
 27698 ;;		line 81 in file "buck.c"
 27699 ;; Parameters:    Size  Location     Type
 27700 ;;		None
 27701 ;; Auto vars:     Size  Location     Type
 27702 ;;  dc              4   14[BANK0 ] unsigned long 
 27703 ;; Return value:  Size  Location     Type
 27704 ;;                  1    wreg      unsigned char 
 27705 ;; Registers used:
 27706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27707 ;; Tracked objects:
 27708 ;;		On entry : 0/0
 27709 ;;		On exit  : 0/0
 27710 ;;		Unchanged: 0/0
 27711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27713 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27714 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27715 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27716 ;;Total ram usage:        5 bytes
 27717 ;; Hardware stack levels used:    1
 27718 ;; Hardware stack levels required when called:   11
 27719 ;; This function calls:
 27720 ;;		___lldiv
 27721 ;; This function is called by:
 27722 ;;		__buck_start
 27723 ;;		__buck_operate_local
 27724 ;;		__buck_operate_remote
 27725 ;; This function uses a non-reentrant model
 27726 ;;
 27727                           
 27728                           	psect	text124
 27729  00FDF6                     __ptext124:
 27730                           	opt stack 0
 27731  00FDF6                     __buck_initial_dutycycle:
 27732                           	opt stack 16
 27733                           
 27734                           ;buck.c: 83: uint32_t dc;
 27735                           ;buck.c: 85: if(os.input_voltage<os.output_voltage)
 27736                           
 27737                           ; BSR set to: 0
 27738                           ;incstack = 0
 27739  00FDF6  0102               	movlb	2	; () banked
 27740  00FDF8  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27741  00FDFA  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27742  00FDFC  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27743  00FDFE  0A80               	xorlw	128
 27744  00FE00  0100               	movlb	0	; () banked
 27745  00FE02  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 27746  00FE04  0102               	movlb	2	; () banked
 27747  00FE06  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27748  00FE08  0A80               	xorlw	128
 27749  00FE0A  0100               	movlb	0	; () banked
 27750  00FE0C  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 27751  00FE0E  B0D8               	btfsc	status,0,c
 27752  00FE10  D002               	goto	l2457
 27753                           
 27754                           ; BSR set to: 0
 27755                           ;buck.c: 86: return 242;
 27756  00FE12  0EF2               	movlw	242
 27757                           
 27758                           ; BSR set to: 0
 27759  00FE14  0012               	return	
 27760  00FE16                     l2457:
 27761                           
 27762                           ; BSR set to: 0
 27763                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 27764                           
 27765                           ; BSR set to: 0
 27766  00FE16  EE22  F027         	lfsr	2,_os+39	;volatile
 27767  00FE1A  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 27768  00FE1E  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 27769  00FE22  0E00               	movlw	0
 27770  00FE24  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 27771  00FE26  0EFF               	movlw	-1
 27772  00FE28  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27773  00FE2A  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27774                           
 27775                           ; BSR set to: 0
 27776                           ;buck.c: 88: dc <<= 8;
 27777  00FE2C  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 27778  00FE30  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 27779  00FE34  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 27780  00FE38  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 27781                           
 27782                           ; BSR set to: 0
 27783                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 27784  00FE3A  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 27785  00FE3E  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 27786  00FE42  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 27787  00FE46  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 27788  00FE4A  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 27789  00FE4E  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 27790  00FE52  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 27791  00FE54  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 27792  00FE56  EC66  F084         	call	___lldiv	;wreg free
 27793  00FE5A  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 27794  00FE5E  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 27795  00FE62  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 27796  00FE66  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 27797                           
 27798                           ;buck.c: 91: if(dc>242)
 27799  00FE6A  0100               	movlb	0	; () banked
 27800  00FE6C  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 27801  00FE6E  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 27802  00FE70  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 27803  00FE72  E104               	bnz	u10640
 27804  00FE74  0EF3               	movlw	243
 27805  00FE76  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 27806  00FE78  A0D8               	btfss	status,0,c
 27807  00FE7A  D008               	goto	l2459
 27808  00FE7C                     u10640:
 27809                           
 27810                           ; BSR set to: 0
 27811                           ;buck.c: 92: dc = 242;
 27812  00FE7C  0EF2               	movlw	242
 27813  00FE7E  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 27814  00FE80  0E00               	movlw	0
 27815  00FE82  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 27816  00FE84  0E00               	movlw	0
 27817  00FE86  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27818  00FE88  0E00               	movlw	0
 27819  00FE8A  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27820  00FE8C                     l2459:
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;buck.c: 93: if(dc<150)
 27824                           
 27825                           ; BSR set to: 0
 27826  00FE8C  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 27827  00FE8E  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 27828  00FE90  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 27829  00FE92  E10C               	bnz	l2460
 27830  00FE94  0E96               	movlw	150
 27831  00FE96  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 27832  00FE98  B0D8               	btfsc	status,0,c
 27833  00FE9A  D008               	goto	l2460
 27834                           
 27835                           ; BSR set to: 0
 27836                           ;buck.c: 94: dc = 150;
 27837  00FE9C  0E96               	movlw	150
 27838  00FE9E  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 27839  00FEA0  0E00               	movlw	0
 27840  00FEA2  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 27841  00FEA4  0E00               	movlw	0
 27842  00FEA6  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27843  00FEA8  0E00               	movlw	0
 27844  00FEAA  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27845  00FEAC                     l2460:
 27846                           
 27847                           ; BSR set to: 0
 27848                           ;buck.c: 95: return (uint8_t) dc;
 27849  00FEAC  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 27850  00FEAE  0012               	return	
 27851  00FEB0                     __end_of__buck_initial_dutycycle:
 27852                           	opt stack 0
 27853                           tblptru	equ	0xFF8
 27854                           tblptrh	equ	0xFF7
 27855                           tblptrl	equ	0xFF6
 27856                           tablat	equ	0xFF5
 27857                           prodh	equ	0xFF4
 27858                           prodl	equ	0xFF3
 27859                           intcon	equ	0xFF2
 27860                           intcon2	equ	0xFF1
 27861                           intcon3	equ	0xFF0
 27862                           postinc0	equ	0xFEE
 27863                           wreg	equ	0xFE8
 27864                           indf1	equ	0xFE7
 27865                           postinc1	equ	0xFE6
 27866                           postdec1	equ	0xFE5
 27867                           plusw1	equ	0xFE3
 27868                           fsr1h	equ	0xFE2
 27869                           fsr1l	equ	0xFE1
 27870                           indf2	equ	0xFDF
 27871                           postinc2	equ	0xFDE
 27872                           postdec2	equ	0xFDD
 27873                           plusw2	equ	0xFDB
 27874                           fsr2h	equ	0xFDA
 27875                           fsr2l	equ	0xFD9
 27876                           status	equ	0xFD8
 27877                           
 27878 ;; *************** function ___lldiv *****************
 27879 ;; Defined at:
 27880 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 27881 ;; Parameters:    Size  Location     Type
 27882 ;;  dividend        4    0[BANK0 ] unsigned long 
 27883 ;;  divisor         4    4[BANK0 ] unsigned long 
 27884 ;; Auto vars:     Size  Location     Type
 27885 ;;  quotient        4    8[BANK0 ] unsigned long 
 27886 ;;  counter         1   12[BANK0 ] unsigned char 
 27887 ;; Return value:  Size  Location     Type
 27888 ;;                  4    0[BANK0 ] unsigned long 
 27889 ;; Registers used:
 27890 ;;		wreg, status,2, status,0
 27891 ;; Tracked objects:
 27892 ;;		On entry : 0/0
 27893 ;;		On exit  : 0/0
 27894 ;;		Unchanged: 0/0
 27895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27896 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27897 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27899 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27900 ;;Total ram usage:       13 bytes
 27901 ;; Hardware stack levels used:    1
 27902 ;; Hardware stack levels required when called:   10
 27903 ;; This function calls:
 27904 ;;		Nothing
 27905 ;; This function is called by:
 27906 ;;		__buck_initial_dutycycle
 27907 ;;		__get_output_power
 27908 ;;		_log_generate_entry
 27909 ;; This function uses a non-reentrant model
 27910 ;;
 27911                           
 27912                           	psect	text125
 27913  0108CC                     __ptext125:
 27914                           	opt stack 0
 27915  0108CC                     ___lldiv:
 27916                           	opt stack 18
 27917                           
 27918                           ; BSR set to: 0
 27919                           ;incstack = 0
 27920  0108CC  0E00               	movlw	0
 27921  0108CE  0100               	movlb	0	; () banked
 27922  0108D0  6F68               	movwf	___lldiv@quotient& (0+255),b
 27923  0108D2  0E00               	movlw	0
 27924  0108D4  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 27925  0108D6  0E00               	movlw	0
 27926  0108D8  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 27927  0108DA  0E00               	movlw	0
 27928  0108DC  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 27929                           
 27930                           ; BSR set to: 0
 27931  0108DE  5164               	movf	___lldiv@divisor& (0+255),w,b
 27932  0108E0  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 27933  0108E2  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 27934  0108E4  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 27935  0108E6  B4D8               	btfsc	status,2,c
 27936  0108E8  D02A               	goto	l3669
 27937                           
 27938                           ; BSR set to: 0
 27939  0108EA  0E01               	movlw	1
 27940  0108EC  6F6C               	movwf	___lldiv@counter& (0+255),b
 27941  0108EE  D006               	goto	l3664
 27942  0108F0                     
 27943                           ; BSR set to: 0
 27944                           
 27945                           ; BSR set to: 0
 27946  0108F0  90D8               	bcf	status,0,c
 27947  0108F2  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 27948  0108F4  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 27949  0108F6  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 27950  0108F8  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 27951  0108FA  2B6C               	incf	___lldiv@counter& (0+255),f,b
 27952  0108FC                     l3664:
 27953                           
 27954                           ; BSR set to: 0
 27955                           
 27956                           ; BSR set to: 0
 27957  0108FC  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 27958  0108FE  D7F8               	goto	l3665
 27959  010900                     u10310:
 27960                           
 27961                           ; BSR set to: 0
 27962                           
 27963                           ; BSR set to: 0
 27964                           
 27965                           ; BSR set to: 0
 27966  010900  90D8               	bcf	status,0,c
 27967  010902  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 27968  010904  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 27969  010906  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 27970  010908  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 27971                           
 27972                           ; BSR set to: 0
 27973  01090A  5164               	movf	___lldiv@divisor& (0+255),w,b
 27974  01090C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 27975  01090E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27976  010910  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 27977  010912  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27978  010914  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 27979  010916  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27980  010918  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 27981  01091A  A0D8               	btfss	status,0,c
 27982  01091C  D009               	goto	l3668
 27983                           
 27984                           ; BSR set to: 0
 27985  01091E  5164               	movf	___lldiv@divisor& (0+255),w,b
 27986  010920  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 27987  010922  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27988  010924  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 27989  010926  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27990  010928  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 27991  01092A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27992  01092C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 27993                           
 27994                           ; BSR set to: 0
 27995  01092E  8168               	bsf	___lldiv@quotient& (0+255),0,b
 27996  010930                     l3668:
 27997                           
 27998                           ; BSR set to: 0
 27999                           
 28000                           ; BSR set to: 0
 28001  010930  90D8               	bcf	status,0,c
 28002  010932  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28003  010934  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28004  010936  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28005  010938  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 28006                           
 28007                           ; BSR set to: 0
 28008  01093A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 28009  01093C  D7E1               	goto	u10310
 28010  01093E                     l3669:
 28011                           
 28012                           ; BSR set to: 0
 28013                           
 28014                           ; BSR set to: 0
 28015  01093E  C068  F060         	movff	___lldiv@quotient,?___lldiv
 28016  010942  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 28017  010946  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 28018  01094A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 28019                           
 28020                           ; BSR set to: 0
 28021  01094E  0012               	return		;funcret
 28022  010950                     __end_of___lldiv:
 28023                           	opt stack 0
 28024                           tblptru	equ	0xFF8
 28025                           tblptrh	equ	0xFF7
 28026                           tblptrl	equ	0xFF6
 28027                           tablat	equ	0xFF5
 28028                           prodh	equ	0xFF4
 28029                           prodl	equ	0xFF3
 28030                           intcon	equ	0xFF2
 28031                           intcon2	equ	0xFF1
 28032                           intcon3	equ	0xFF0
 28033                           postinc0	equ	0xFEE
 28034                           wreg	equ	0xFE8
 28035                           indf1	equ	0xFE7
 28036                           postinc1	equ	0xFE6
 28037                           postdec1	equ	0xFE5
 28038                           plusw1	equ	0xFE3
 28039                           fsr1h	equ	0xFE2
 28040                           fsr1l	equ	0xFE1
 28041                           indf2	equ	0xFDF
 28042                           postinc2	equ	0xFDE
 28043                           postdec2	equ	0xFDD
 28044                           plusw2	equ	0xFDB
 28045                           fsr2h	equ	0xFDA
 28046                           fsr2l	equ	0xFD9
 28047                           status	equ	0xFD8
 28048                           
 28049 ;; *************** function _adc_read *****************
 28050 ;; Defined at:
 28051 ;;		line 30 in file "adc.c"
 28052 ;; Parameters:    Size  Location     Type
 28053 ;;  channel         1    wreg     enum E8227
 28054 ;; Auto vars:     Size  Location     Type
 28055 ;;  channel         1    2[BANK0 ] enum E8227
 28056 ;;  adc_value       2    3[BANK0 ] unsigned int 
 28057 ;; Return value:  Size  Location     Type
 28058 ;;                  2    0[BANK0 ] unsigned int 
 28059 ;; Registers used:
 28060 ;;		wreg, status,2, status,0
 28061 ;; Tracked objects:
 28062 ;;		On entry : 0/0
 28063 ;;		On exit  : 0/0
 28064 ;;		Unchanged: 0/0
 28065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28067 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28069 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28070 ;;Total ram usage:        5 bytes
 28071 ;; Hardware stack levels used:    1
 28072 ;; Hardware stack levels required when called:   10
 28073 ;; This function calls:
 28074 ;;		Nothing
 28075 ;; This function is called by:
 28076 ;;		_main
 28077 ;; This function uses a non-reentrant model
 28078 ;;
 28079                           
 28080                           	psect	text126
 28081  0107C0                     __ptext126:
 28082                           	opt stack 0
 28083  0107C0                     _adc_read:
 28084                           	opt stack 20
 28085                           
 28086                           ; BSR set to: 0
 28087                           ;incstack = 0
 28088                           ;adc_read@channel stored from wreg
 28089  0107C0  0100               	movlb	0	; () banked
 28090  0107C2  6F62               	movwf	adc_read@channel& (0+255),b
 28091                           
 28092                           ;adc.c: 32: uint16_t adc_value;
 28093                           ;adc.c: 34: switch(channel)
 28094  0107C4  D010               	goto	l2664
 28095  0107C6                     
 28096                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 28097  0107C6  50C2               	movf	4034,w,c	;volatile
 28098  0107C8  0BC3               	andlw	-61
 28099  0107CA  0930               	iorlw	48
 28100  0107CC  D007               	goto	L19
 28101  0107CE                     
 28102                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 28103  0107CE  50C2               	movf	4034,w,c	;volatile
 28104  0107D0  0BC3               	andlw	-61
 28105  0107D2  0904               	iorlw	4
 28106  0107D4  D003               	goto	L19
 28107  0107D6                     
 28108                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 28109  0107D6  50C2               	movf	4034,w,c	;volatile
 28110  0107D8  0BC3               	andlw	-61
 28111  0107DA  0908               	iorlw	8
 28112  0107DC                     L19:
 28113  0107DC  6EC2               	movwf	4034,c	;volatile
 28114                           
 28115                           ;adc.c: 44: break;
 28116  0107DE  D017               	goto	l2671
 28117  0107E0                     l2669:
 28118                           
 28119                           ; BSR set to: 0
 28120                           ;adc.c: 46: return 0xFFFF;
 28121  0107E0  6960               	setf	?_adc_read& (0+255),b
 28122  0107E2  6961               	setf	(?_adc_read+1)& (0+255),b
 28123  0107E4  0012               	return	
 28124  0107E6                     l2664:
 28125                           
 28126                           ; BSR set to: 0
 28127  0107E6  0100               	movlb	0	; () banked
 28128  0107E8  5162               	movf	adc_read@channel& (0+255),w,b
 28129                           
 28130                           ; Switch size 1, requested type "space"
 28131                           ; Number of cases is 3, Range of values is 0 to 2
 28132                           ; switch strategies available:
 28133                           ; Name         Instructions Cycles
 28134                           ; simple_byte           10     6 (average)
 28135                           ;	Chosen strategy is simple_byte
 28136  0107EA  0A00               	xorlw	0	; case 0
 28137  0107EC  B4D8               	btfsc	status,2,c
 28138  0107EE  D7EB               	goto	l2665
 28139  0107F0  0A01               	xorlw	1	; case 1
 28140  0107F2  B4D8               	btfsc	status,2,c
 28141  0107F4  D7EC               	goto	l2667
 28142  0107F6  0A03               	xorlw	3	; case 2
 28143  0107F8  B4D8               	btfsc	status,2,c
 28144  0107FA  D7ED               	goto	l2668
 28145  0107FC  D7F1               	goto	l2669
 28146  0107FE                     
 28147                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 28148                           
 28149                           ; BSR set to: 0
 28150  0107FE  0E0A               	movlw	10
 28151  010800                     u15997:
 28152  010800  2EE8               	decfsz	wreg,f,c
 28153  010802  D7FE               	bra	u15997
 28154                           
 28155                           ;adc.c: 54: break;
 28156  010804  D00C               	goto	l2673
 28157  010806                     
 28158                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 28159  010806  0E3C               	movlw	60
 28160  010808                     u16007:
 28161  010808  2EE8               	decfsz	wreg,f,c
 28162  01080A  D7FE               	bra	u16007
 28163                           
 28164                           ;adc.c: 58: }
 28165                           
 28166                           ;adc.c: 57: break;
 28167  01080C  D008               	goto	l2673
 28168  01080E                     l2671:
 28169  01080E  0102               	movlb	2	; () banked
 28170  010810  5100               	movf	_os& (0+255),w,b	;volatile
 28171                           
 28172                           ; Switch size 1, requested type "space"
 28173                           ; Number of cases is 2, Range of values is 1 to 2
 28174                           ; switch strategies available:
 28175                           ; Name         Instructions Cycles
 28176                           ; simple_byte            7     4 (average)
 28177                           ;	Chosen strategy is simple_byte
 28178  010812  0A01               	xorlw	1	; case 1
 28179  010814  B4D8               	btfsc	status,2,c
 28180  010816  D7F3               	goto	l2672
 28181  010818  0A03               	xorlw	3	; case 2
 28182  01081A  B4D8               	btfsc	status,2,c
 28183  01081C  D7F4               	goto	l2674
 28184  01081E                     l2673:
 28185                           
 28186                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 28187  01081E  82C2               	bsf	4034,1,c	;volatile
 28188  010820  B2C2               	btfsc	4034,1,c	;volatile
 28189  010822  D7FE               	goto	l2676
 28190                           
 28191                           ;adc.c: 67: adc_value = ADRESH;
 28192  010824  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 28193  010828  0100               	movlb	0	; () banked
 28194  01082A  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 28195                           
 28196                           ; BSR set to: 0
 28197                           ;adc.c: 68: adc_value <<= 2;
 28198  01082C  90D8               	bcf	status,0,c
 28199  01082E  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28200  010830  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28201  010832  90D8               	bcf	status,0,c
 28202  010834  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28203  010836  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;adc.c: 69: adc_value |= ADRESL;
 28207  010838  50C3               	movf	4035,w,c	;volatile
 28208  01083A  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 28209                           
 28210                           ; BSR set to: 0
 28211                           ;adc.c: 71: return adc_value;
 28212  01083C  C063  F060         	movff	adc_read@adc_value,?_adc_read
 28213  010840  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 28214  010844  0012               	return	
 28215  010846                     __end_of_adc_read:
 28216                           	opt stack 0
 28217                           tblptru	equ	0xFF8
 28218                           tblptrh	equ	0xFF7
 28219                           tblptrl	equ	0xFF6
 28220                           tablat	equ	0xFF5
 28221                           prodh	equ	0xFF4
 28222                           prodl	equ	0xFF3
 28223                           intcon	equ	0xFF2
 28224                           intcon2	equ	0xFF1
 28225                           intcon3	equ	0xFF0
 28226                           postinc0	equ	0xFEE
 28227                           wreg	equ	0xFE8
 28228                           indf1	equ	0xFE7
 28229                           postinc1	equ	0xFE6
 28230                           postdec1	equ	0xFE5
 28231                           plusw1	equ	0xFE3
 28232                           fsr1h	equ	0xFE2
 28233                           fsr1l	equ	0xFE1
 28234                           indf2	equ	0xFDF
 28235                           postinc2	equ	0xFDE
 28236                           postdec2	equ	0xFDD
 28237                           plusw2	equ	0xFDB
 28238                           fsr2h	equ	0xFDA
 28239                           fsr2l	equ	0xFD9
 28240                           status	equ	0xFD8
 28241                           
 28242 ;; *************** function _adc_calibrate *****************
 28243 ;; Defined at:
 28244 ;;		line 20 in file "adc.c"
 28245 ;; Parameters:    Size  Location     Type
 28246 ;;		None
 28247 ;; Auto vars:     Size  Location     Type
 28248 ;;		None
 28249 ;; Return value:  Size  Location     Type
 28250 ;;                  1    wreg      void 
 28251 ;; Registers used:
 28252 ;;		None
 28253 ;; Tracked objects:
 28254 ;;		On entry : 0/0
 28255 ;;		On exit  : 0/0
 28256 ;;		Unchanged: 0/0
 28257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28262 ;;Total ram usage:        0 bytes
 28263 ;; Hardware stack levels used:    1
 28264 ;; Hardware stack levels required when called:   10
 28265 ;; This function calls:
 28266 ;;		Nothing
 28267 ;; This function is called by:
 28268 ;;		_main
 28269 ;; This function uses a non-reentrant model
 28270 ;;
 28271                           
 28272                           	psect	text127
 28273  012D9A                     __ptext127:
 28274                           	opt stack 0
 28275  012D9A                     _adc_calibrate:
 28276                           	opt stack 20
 28277                           
 28278                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;incstack = 0
 28282  012D9A  8CC1               	bsf	4033,6,c	;volatile
 28283                           
 28284                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 28285  012D9C  82C2               	bsf	4034,1,c	;volatile
 28286  012D9E  B2C2               	btfsc	4034,1,c	;volatile
 28287  012DA0  D7FE               	goto	l2659
 28288                           
 28289                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 28290  012DA2  9CC1               	bcf	4033,6,c	;volatile
 28291  012DA4  0012               	return		;funcret
 28292  012DA6                     __end_of_adc_calibrate:
 28293                           	opt stack 0
 28294                           tblptru	equ	0xFF8
 28295                           tblptrh	equ	0xFF7
 28296                           tblptrl	equ	0xFF6
 28297                           tablat	equ	0xFF5
 28298                           prodh	equ	0xFF4
 28299                           prodl	equ	0xFF3
 28300                           intcon	equ	0xFF2
 28301                           intcon2	equ	0xFF1
 28302                           intcon3	equ	0xFF0
 28303                           postinc0	equ	0xFEE
 28304                           wreg	equ	0xFE8
 28305                           indf1	equ	0xFE7
 28306                           postinc1	equ	0xFE6
 28307                           postdec1	equ	0xFE5
 28308                           plusw1	equ	0xFE3
 28309                           fsr1h	equ	0xFE2
 28310                           fsr1l	equ	0xFE1
 28311                           indf2	equ	0xFDF
 28312                           postinc2	equ	0xFDE
 28313                           postdec2	equ	0xFDD
 28314                           plusw2	equ	0xFDB
 28315                           fsr2h	equ	0xFDA
 28316                           fsr2l	equ	0xFD9
 28317                           status	equ	0xFD8
 28318                           
 28319 ;; *************** function _adc_calculate_temperature *****************
 28320 ;; Defined at:
 28321 ;;		line 74 in file "adc.c"
 28322 ;; Parameters:    Size  Location     Type
 28323 ;;  adc_value       2   12[BANK0 ] unsigned int 
 28324 ;;  calibration     1   14[BANK0 ] enum E8148
 28325 ;; Auto vars:     Size  Location     Type
 28326 ;;  tmp             4   21[BANK0 ] long 
 28327 ;; Return value:  Size  Location     Type
 28328 ;;                  2   12[BANK0 ] int 
 28329 ;; Registers used:
 28330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28331 ;; Tracked objects:
 28332 ;;		On entry : 0/0
 28333 ;;		On exit  : 0/0
 28334 ;;		Unchanged: 0/0
 28335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28336 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28338 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28339 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28340 ;;Total ram usage:       13 bytes
 28341 ;; Hardware stack levels used:    1
 28342 ;; Hardware stack levels required when called:   11
 28343 ;; This function calls:
 28344 ;;		___lmul
 28345 ;; This function is called by:
 28346 ;;		_main
 28347 ;; This function uses a non-reentrant model
 28348 ;;
 28349                           
 28350                           	psect	text128
 28351  00EEBC                     __ptext128:
 28352                           	opt stack 0
 28353  00EEBC                     _adc_calculate_temperature:
 28354                           	opt stack 19
 28355                           
 28356                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 28357                           
 28358                           ;incstack = 0
 28359  00EEBC  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 28360  00EEC0  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 28361  00EEC4  0100               	movlb	0	; () banked
 28362  00EEC6  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 28363  00EEC8  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 28364                           
 28365                           ; BSR set to: 0
 28366                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 28367  00EECA  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28368  00EECC  0D0C               	mullw	12
 28369  00EECE  0E05               	movlw	5
 28370  00EED0  26F3               	addwf	prodl,f,c
 28371  00EED2  0E00               	movlw	0
 28372  00EED4  22F4               	addwfc	prodh,f,c
 28373  00EED6  0E00               	movlw	low _calibrationParameters
 28374  00EED8  24F3               	addwf	prodl,w,c
 28375  00EEDA  6ED9               	movwf	fsr2l,c
 28376  00EEDC  0E03               	movlw	high _calibrationParameters
 28377  00EEDE  20F4               	addwfc	prodh,w,c
 28378  00EEE0  6EDA               	movwf	fsr2h,c
 28379  00EEE2  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 28380  00EEE6  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 28381  00EEEA  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 28382  00EEEE  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 28383  00EEF2  0E00               	movlw	0
 28384  00EEF4  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 28385  00EEF6  0EFF               	movlw	255
 28386  00EEF8  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 28387  00EEFA  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 28388  00EEFC  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 28389  00EEFE  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28390  00EF00  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 28391  00EF02  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28392  00EF04  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 28393  00EF06  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28394  00EF08  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 28395  00EF0A  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28396                           
 28397                           ; BSR set to: 0
 28398                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 28399  00EF0C  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 28400  00EF10  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 28401  00EF14  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 28402  00EF18  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 28403  00EF1C  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28404  00EF1E  0D0C               	mullw	12
 28405  00EF20  0E07               	movlw	7
 28406  00EF22  26F3               	addwf	prodl,f,c
 28407  00EF24  0E00               	movlw	0
 28408  00EF26  22F4               	addwfc	prodh,f,c
 28409  00EF28  0E00               	movlw	low _calibrationParameters
 28410  00EF2A  24F3               	addwf	prodl,w,c
 28411  00EF2C  6ED9               	movwf	fsr2l,c
 28412  00EF2E  0E03               	movlw	high _calibrationParameters
 28413  00EF30  20F4               	addwfc	prodh,w,c
 28414  00EF32  6EDA               	movwf	fsr2h,c
 28415  00EF34  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28416  00EF38  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28417  00EF3C  0E00               	movlw	0
 28418  00EF3E  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28419  00EF40  0EFF               	movlw	-1
 28420  00EF42  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28421  00EF44  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28422  00EF46  EC12  F08D         	call	___lmul	;wreg free
 28423  00EF4A  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 28424  00EF4E  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 28425  00EF52  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 28426  00EF56  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 28427                           
 28428                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 28429  00EF5A  0100               	movlb	0	; () banked
 28430  00EF5C  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28431  00EF5E  0D0C               	mullw	12
 28432  00EF60  0E09               	movlw	9
 28433  00EF62  26F3               	addwf	prodl,f,c
 28434  00EF64  0E00               	movlw	0
 28435  00EF66  22F4               	addwfc	prodh,f,c
 28436  00EF68  0E00               	movlw	low _calibrationParameters
 28437  00EF6A  24F3               	addwf	prodl,w,c
 28438  00EF6C  6ED9               	movwf	fsr2l,c
 28439  00EF6E  0E03               	movlw	high _calibrationParameters
 28440  00EF70  20F4               	addwfc	prodh,w,c
 28441  00EF72  6EDA               	movwf	fsr2h,c
 28442  00EF74  50DF               	movf	indf2,w,c
 28443  00EF76  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 28444  00EF78  0EFF               	movlw	-1
 28445  00EF7A  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 28446  00EF7C  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 28447  00EF7E  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 28448  00EF80  D005               	goto	u15290
 28449  00EF82                     u15295:
 28450  00EF82  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28451  00EF84  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28452  00EF86  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28453  00EF88  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28454  00EF8A  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28455  00EF8C                     u15290:
 28456  00EF8C  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 28457  00EF8E  D7F9               	goto	u15295
 28458                           
 28459                           ;adc.c: 80: tmp += 1;
 28460  00EF90  0E01               	movlw	1
 28461  00EF92  0100               	movlb	0	; () banked
 28462  00EF94  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28463  00EF96  0E00               	movlw	0
 28464  00EF98  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28465  00EF9A  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28466  00EF9C  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28467                           
 28468                           ; BSR set to: 0
 28469                           ;adc.c: 81: tmp >>= 1;
 28470  00EF9E  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28471  00EFA0  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28472  00EFA2  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28473  00EFA4  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28474  00EFA6  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;adc.c: 82: return (int16_t) tmp;
 28478  00EFA8  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 28479  00EFAC  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 28480  00EFB0  0012               	return	
 28481  00EFB2                     __end_of_adc_calculate_temperature:
 28482                           	opt stack 0
 28483                           tblptru	equ	0xFF8
 28484                           tblptrh	equ	0xFF7
 28485                           tblptrl	equ	0xFF6
 28486                           tablat	equ	0xFF5
 28487                           prodh	equ	0xFF4
 28488                           prodl	equ	0xFF3
 28489                           intcon	equ	0xFF2
 28490                           intcon2	equ	0xFF1
 28491                           intcon3	equ	0xFF0
 28492                           postinc0	equ	0xFEE
 28493                           wreg	equ	0xFE8
 28494                           indf1	equ	0xFE7
 28495                           postinc1	equ	0xFE6
 28496                           postdec1	equ	0xFE5
 28497                           plusw1	equ	0xFE3
 28498                           fsr1h	equ	0xFE2
 28499                           fsr1l	equ	0xFE1
 28500                           indf2	equ	0xFDF
 28501                           postinc2	equ	0xFDE
 28502                           postdec2	equ	0xFDD
 28503                           plusw2	equ	0xFDB
 28504                           fsr2h	equ	0xFDA
 28505                           fsr2l	equ	0xFD9
 28506                           status	equ	0xFD8
 28507                           
 28508 ;; *************** function ___lmul *****************
 28509 ;; Defined at:
 28510 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
 28511 ;; Parameters:    Size  Location     Type
 28512 ;;  multiplier      4    0[BANK0 ] unsigned long 
 28513 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 28514 ;; Auto vars:     Size  Location     Type
 28515 ;;  product         4    8[BANK0 ] unsigned long 
 28516 ;; Return value:  Size  Location     Type
 28517 ;;                  4    0[BANK0 ] unsigned long 
 28518 ;; Registers used:
 28519 ;;		wreg, status,2, status,0
 28520 ;; Tracked objects:
 28521 ;;		On entry : 0/0
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28525 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28526 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28528 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28529 ;;Total ram usage:       12 bytes
 28530 ;; Hardware stack levels used:    1
 28531 ;; Hardware stack levels required when called:   10
 28532 ;; This function calls:
 28533 ;;		Nothing
 28534 ;; This function is called by:
 28535 ;;		_system_calculate_input_voltage
 28536 ;;		_system_calculate_output_voltage
 28537 ;;		_system_calculate_input_current
 28538 ;;		_system_calculate_output_current
 28539 ;;		__display_efficiency
 28540 ;;		__buck_operate_local
 28541 ;;		_adc_calculate_temperature
 28542 ;;		__get_input_power
 28543 ;;		__get_output_power
 28544 ;; This function uses a non-reentrant model
 28545 ;;
 28546                           
 28547                           	psect	text129
 28548  011A24                     __ptext129:
 28549                           	opt stack 0
 28550  011A24                     ___lmul:
 28551                           	opt stack 19
 28552                           
 28553                           ; BSR set to: 0
 28554                           ;incstack = 0
 28555  011A24  0E00               	movlw	0
 28556  011A26  0100               	movlb	0	; () banked
 28557  011A28  6F68               	movwf	___lmul@product& (0+255),b
 28558  011A2A  0E00               	movlw	0
 28559  011A2C  6F69               	movwf	(___lmul@product+1)& (0+255),b
 28560  011A2E  0E00               	movlw	0
 28561  011A30  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 28562  011A32  0E00               	movlw	0
 28563  011A34  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 28564  011A36                     
 28565                           ; BSR set to: 0
 28566                           
 28567                           ; BSR set to: 0
 28568  011A36  A160               	btfss	___lmul@multiplier& (0+255),0,b
 28569  011A38  D008               	goto	l3312
 28570                           
 28571                           ; BSR set to: 0
 28572  011A3A  5164               	movf	___lmul@multiplicand& (0+255),w,b
 28573  011A3C  2768               	addwf	___lmul@product& (0+255),f,b
 28574  011A3E  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28575  011A40  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 28576  011A42  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28577  011A44  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 28578  011A46  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28579  011A48  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 28580  011A4A                     l3312:
 28581                           
 28582                           ; BSR set to: 0
 28583                           
 28584                           ; BSR set to: 0
 28585  011A4A  90D8               	bcf	status,0,c
 28586  011A4C  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 28587  011A4E  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28588  011A50  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28589  011A52  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28590                           
 28591                           ; BSR set to: 0
 28592  011A54  90D8               	bcf	status,0,c
 28593  011A56  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28594  011A58  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28595  011A5A  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28596  011A5C  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 28597  011A5E  5160               	movf	___lmul@multiplier& (0+255),w,b
 28598  011A60  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28599  011A62  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28600  011A64  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28601  011A66  A4D8               	btfss	status,2,c
 28602  011A68  D7E6               	goto	l3311
 28603                           
 28604                           ; BSR set to: 0
 28605  011A6A  C068  F060         	movff	___lmul@product,?___lmul
 28606  011A6E  C069  F061         	movff	___lmul@product+1,?___lmul+1
 28607  011A72  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 28608  011A76  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 28609                           
 28610                           ; BSR set to: 0
 28611  011A7A  0012               	return		;funcret
 28612  011A7C                     __end_of___lmul:
 28613                           	opt stack 0
 28614                           tblptru	equ	0xFF8
 28615                           tblptrh	equ	0xFF7
 28616                           tblptrl	equ	0xFF6
 28617                           tablat	equ	0xFF5
 28618                           prodh	equ	0xFF4
 28619                           prodl	equ	0xFF3
 28620                           intcon	equ	0xFF2
 28621                           intcon2	equ	0xFF1
 28622                           intcon3	equ	0xFF0
 28623                           postinc0	equ	0xFEE
 28624                           wreg	equ	0xFE8
 28625                           indf1	equ	0xFE7
 28626                           postinc1	equ	0xFE6
 28627                           postdec1	equ	0xFE5
 28628                           plusw1	equ	0xFE3
 28629                           fsr1h	equ	0xFE2
 28630                           fsr1l	equ	0xFE1
 28631                           indf2	equ	0xFDF
 28632                           postinc2	equ	0xFDE
 28633                           postdec2	equ	0xFDD
 28634                           plusw2	equ	0xFDB
 28635                           fsr2h	equ	0xFDA
 28636                           fsr2l	equ	0xFD9
 28637                           status	equ	0xFD8
 28638                           
 28639 ;; *************** function _USBDeviceInit *****************
 28640 ;; Defined at:
 28641 ;;		line 277 in file "usb_device.c"
 28642 ;; Parameters:    Size  Location     Type
 28643 ;;		None
 28644 ;; Auto vars:     Size  Location     Type
 28645 ;;  i               1    8[BANK0 ] unsigned char 
 28646 ;; Return value:  Size  Location     Type
 28647 ;;                  1    wreg      void 
 28648 ;; Registers used:
 28649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28650 ;; Tracked objects:
 28651 ;;		On entry : 0/0
 28652 ;;		On exit  : 0/0
 28653 ;;		Unchanged: 0/0
 28654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28658 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28659 ;;Total ram usage:        1 bytes
 28660 ;; Hardware stack levels used:    1
 28661 ;; Hardware stack levels required when called:   11
 28662 ;; This function calls:
 28663 ;;		_memset
 28664 ;; This function is called by:
 28665 ;;		_main
 28666 ;; This function uses a non-reentrant model
 28667 ;;
 28668                           
 28669                           	psect	text130
 28670  00D65A                     __ptext130:
 28671                           	opt stack 0
 28672  00D65A                     _USBDeviceInit:
 28673                           	opt stack 19
 28674                           
 28675                           ;usb_device.c: 279: uint8_t i;
 28676                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 28677                           
 28678                           ; BSR set to: 0
 28679                           ;incstack = 0
 28680  00D65A  98A0               	bcf	4000,4,c	;volatile
 28681                           
 28682                           ;usb_device.c: 285: ;
 28683                           ;usb_device.c: 288: {UEIR = 0;};
 28684  00D65C  0E00               	movlw	0
 28685  00D65E  6E63               	movwf	3939,c	;volatile
 28686                           
 28687                           ;usb_device.c: 291: {UIR = 0;};
 28688  00D660  0E00               	movlw	0
 28689  00D662  6E62               	movwf	3938,c	;volatile
 28690                           
 28691                           ;usb_device.c: 294: UEP0 = 0;
 28692  00D664  0E00               	movlw	0
 28693  00D666  010F               	movlb	15	; () banked
 28694  00D668  6F26               	movwf	38,b	;volatile
 28695                           
 28696                           ; BSR set to: 15
 28697                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 28698  00D66A  0E27               	movlw	39
 28699  00D66C  0100               	movlb	0	; () banked
 28700  00D66E  6F60               	movwf	memset@p1& (0+255),b
 28701  00D670  0E0F               	movlw	15
 28702  00D672  6F61               	movwf	(memset@p1+1)& (0+255),b
 28703  00D674  0E00               	movlw	0
 28704  00D676  6F63               	movwf	(memset@c+1)& (0+255),b
 28705  00D678  0E00               	movlw	0
 28706  00D67A  6F62               	movwf	memset@c& (0+255),b
 28707  00D67C  0E00               	movlw	0
 28708  00D67E  6F65               	movwf	(memset@n+1)& (0+255),b
 28709  00D680  0E02               	movlw	2
 28710  00D682  6F64               	movwf	memset@n& (0+255),b
 28711  00D684  EC7F  F092         	call	_memset	;wreg free
 28712                           
 28713                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 28714  00D688  0E16               	movlw	22
 28715  00D68A  010F               	movlb	15	; () banked
 28716  00D68C  6F39               	movwf	57,b	;volatile
 28717                           
 28718                           ; BSR set to: 15
 28719  00D68E  0E9F               	movlw	159
 28720  00D690  6F37               	movwf	55,b	;volatile
 28721                           
 28722                           ; BSR set to: 15
 28723  00D692  0E7B               	movlw	123
 28724  00D694  6F36               	movwf	54,b	;volatile
 28725                           
 28726                           ; BSR set to: 15
 28727                           ;usb_device.c: 301: ;
 28728                           ;usb_device.c: 304: ;
 28729                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 28730  00D696  0E00               	movlw	0
 28731  00D698  0100               	movlb	0	; () banked
 28732  00D69A  6F68               	movwf	USBDeviceInit@i& (0+255),b
 28733  00D69C                     l15940:
 28734                           
 28735                           ; BSR set to: 0
 28736  00D69C  0E0B               	movlw	11
 28737  00D69E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 28738  00D6A0  D001               	goto	l147
 28739  00D6A2  D00E               	goto	u14440
 28740  00D6A4                     l147:
 28741                           
 28742                           ; BSR set to: 0
 28743                           ;usb_device.c: 308: {
 28744                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 28745                           
 28746                           ; BSR set to: 0
 28747  00D6A4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28748  00D6A6  0D04               	mullw	4
 28749  00D6A8  0E00               	movlw	0
 28750  00D6AA  24F3               	addwf	prodl,w,c
 28751  00D6AC  6ED9               	movwf	fsr2l,c
 28752  00D6AE  0E0D               	movlw	13
 28753  00D6B0  20F4               	addwfc	prodh,w,c
 28754  00D6B2  6EDA               	movwf	fsr2h,c
 28755  00D6B4  6ADE               	clrf	postinc2,c
 28756  00D6B6  6ADE               	clrf	postinc2,c
 28757  00D6B8  6ADE               	clrf	postinc2,c
 28758  00D6BA  6ADD               	clrf	postdec2,c
 28759                           
 28760                           ; BSR set to: 0
 28761  00D6BC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 28762  00D6BE  D7EE               	goto	l15940
 28763  00D6C0                     u14440:
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;usb_device.c: 310: }
 28767                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 28768  00D6C0  8C65               	bsf	3941,6,c	;volatile
 28769                           
 28770                           ; BSR set to: 0
 28771                           ;usb_device.c: 316: UADDR = 0x00;
 28772  00D6C2  0E00               	movlw	0
 28773  00D6C4  010F               	movlb	15	; () banked
 28774  00D6C6  6F38               	movwf	56,b	;volatile
 28775                           
 28776                           ; BSR set to: 15
 28777                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 28778  00D6C8  9865               	bcf	3941,4,c	;volatile
 28779                           
 28780                           ; BSR set to: 15
 28781                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 28782  00D6CA  9C65               	bcf	3941,6,c	;volatile
 28783  00D6CC                     
 28784                           ;usb_device.c: 326: {
 28785                           ;usb_device.c: 327: (UIR &= 0xF7);
 28786                           
 28787                           ; BSR set to: 15
 28788  00D6CC  9662               	bcf	3938,3,c	;volatile
 28789                           
 28790                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 28791  00D6CE  0E00               	movlw	0
 28792  00D6D0  0100               	movlb	0	; () banked
 28793  00D6D2  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28794                           
 28795                           ; BSR set to: 0
 28796                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 28797  00D6D4  0E00               	movlw	0
 28798  00D6D6  6E35               	movwf	_outPipes+3,c	;volatile
 28799                           
 28800                           ; BSR set to: 0
 28801                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 28802  00D6D8  0E00               	movlw	0
 28803  00D6DA  6E37               	movwf	_outPipes+5,c	;volatile
 28804  00D6DC  0E00               	movlw	0
 28805  00D6DE  6E36               	movwf	_outPipes+4,c	;volatile
 28806                           
 28807                           ; BSR set to: 0
 28808                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 28809  00D6E0  B662               	btfsc	3938,3,c	;volatile
 28810  00D6E2  D7F4               	goto	l149
 28811                           
 28812                           ; BSR set to: 0
 28813                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 28814                           
 28815                           ; BSR set to: 0
 28816  00D6E4  0E01               	movlw	1
 28817  00D6E6  0101               	movlb	1	; () banked
 28818  00D6E8  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 28819                           
 28820                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 28821  00D6EA  0E01               	movlw	1
 28822  00D6EC  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 28823                           
 28824                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 28825  00D6EE  0E00               	movlw	0
 28826  00D6F0  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 28827                           
 28828                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 28829  00D6F2  0E00               	movlw	0
 28830  00D6F4  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28831                           
 28832                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 28833  00D6F6  0E00               	movlw	0
 28834  00D6F8  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 28835                           
 28836                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 28837  00D6FA  0E00               	movlw	0
 28838  00D6FC  0100               	movlb	0	; () banked
 28839  00D6FE  6F68               	movwf	USBDeviceInit@i& (0+255),b
 28840  00D700                     l15968:
 28841                           
 28842                           ; BSR set to: 0
 28843  00D700  0E02               	movlw	2
 28844  00D702  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 28845  00D704  D001               	goto	l151
 28846  00D706  D02E               	goto	u14470
 28847  00D708                     l151:
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;usb_device.c: 346: {
 28851                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 28852                           
 28853                           ; BSR set to: 0
 28854  00D708  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28855  00D70A  0D02               	mullw	2
 28856  00D70C  0E3B               	movlw	low _pBDTEntryIn
 28857  00D70E  24F3               	addwf	prodl,w,c
 28858  00D710  6ED9               	movwf	fsr2l,c
 28859  00D712  0E00               	movlw	high _pBDTEntryIn
 28860  00D714  20F4               	addwfc	prodh,w,c
 28861  00D716  6EDA               	movwf	fsr2h,c
 28862  00D718  0E00               	movlw	0
 28863  00D71A  6EDE               	movwf	postinc2,c
 28864  00D71C  0E00               	movlw	0
 28865  00D71E  6EDD               	movwf	postdec2,c
 28866                           
 28867                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 28868  00D720  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28869  00D722  0D02               	mullw	2
 28870  00D724  0ED3               	movlw	low _pBDTEntryOut
 28871  00D726  24F3               	addwf	prodl,w,c
 28872  00D728  6ED9               	movwf	fsr2l,c
 28873  00D72A  0E01               	movlw	high _pBDTEntryOut
 28874  00D72C  20F4               	addwfc	prodh,w,c
 28875  00D72E  6EDA               	movwf	fsr2h,c
 28876  00D730  0E00               	movlw	0
 28877  00D732  6EDE               	movwf	postinc2,c
 28878  00D734  0E00               	movlw	0
 28879  00D736  6EDD               	movwf	postdec2,c
 28880                           
 28881                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 28882  00D738  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28883  00D73A  0D01               	mullw	1
 28884  00D73C  0EE4               	movlw	low _ep_data_in
 28885  00D73E  24F3               	addwf	prodl,w,c
 28886  00D740  6ED9               	movwf	fsr2l,c
 28887  00D742  0E01               	movlw	high _ep_data_in
 28888  00D744  20F4               	addwfc	prodh,w,c
 28889  00D746  6EDA               	movwf	fsr2h,c
 28890  00D748  0E00               	movlw	0
 28891  00D74A  6EDF               	movwf	indf2,c
 28892                           
 28893                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 28894  00D74C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28895  00D74E  0D01               	mullw	1
 28896  00D750  0EE1               	movlw	low _ep_data_out
 28897  00D752  24F3               	addwf	prodl,w,c
 28898  00D754  6ED9               	movwf	fsr2l,c
 28899  00D756  0E01               	movlw	high _ep_data_out
 28900  00D758  20F4               	addwfc	prodh,w,c
 28901  00D75A  6EDA               	movwf	fsr2h,c
 28902  00D75C  0E00               	movlw	0
 28903  00D75E  6EDF               	movwf	indf2,c
 28904                           
 28905                           ; BSR set to: 0
 28906  00D760  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 28907  00D762  D7CE               	goto	l15968
 28908  00D764                     u14470:
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;usb_device.c: 351: }
 28912                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28913                           
 28914                           ; BSR set to: 0
 28915  00D764  0E08               	movlw	8
 28916  00D766  6E3B               	movwf	_pBDTEntryIn,c
 28917  00D768  0E0D               	movlw	13
 28918  00D76A  6E3C               	movwf	_pBDTEntryIn+1,c
 28919                           
 28920                           ; BSR set to: 0
 28921                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 28922  00D76C  0E16               	movlw	22
 28923  00D76E  010F               	movlb	15	; () banked
 28924  00D770  6F26               	movwf	38,b	;volatile
 28925                           
 28926                           ; BSR set to: 15
 28927                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 28928  00D772  0E0D               	movlw	13
 28929  00D774  010D               	movlb	13	; () banked
 28930  00D776  6F03               	movwf	3,b	;volatile
 28931  00D778  0E30               	movlw	48
 28932  00D77A  6F02               	movwf	2,b	;volatile
 28933                           
 28934                           ; BSR set to: 13
 28935                           ;usb_device.c: 359: BDT[0].CNT = 8;
 28936  00D77C  0E08               	movlw	8
 28937  00D77E  6F01               	movwf	1,b	;volatile
 28938                           
 28939                           ; BSR set to: 13
 28940                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 28941  00D780  0E04               	movlw	4
 28942  00D782  6F00               	movwf	0,b	;volatile
 28943                           
 28944                           ; BSR set to: 13
 28945                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 28946  00D784  8F00               	bsf	0,7,b	;volatile
 28947                           
 28948                           ; BSR set to: 13
 28949                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 28950  00D786  0E00               	movlw	0
 28951  00D788  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 28952                           
 28953                           ; BSR set to: 13
 28954                           ;usb_device.c: 366: USB1msTickCount = 0;
 28955  00D78A  0E00               	movlw	0
 28956  00D78C  0101               	movlb	1	; () banked
 28957  00D78E  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 28958  00D790  0E00               	movlw	0
 28959  00D792  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 28960  00D794  0E00               	movlw	0
 28961  00D796  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 28962  00D798  0E00               	movlw	0
 28963  00D79A  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 28964                           
 28965                           ; BSR set to: 1
 28966                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 28967  00D79C  0E00               	movlw	0
 28968  00D79E  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 28969                           
 28970                           ; BSR set to: 1
 28971                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 28972  00D7A0  0E00               	movlw	0
 28973  00D7A2  6E5C               	movwf	_USBDeviceState,c	;volatile
 28974                           
 28975                           ; BSR set to: 1
 28976  00D7A4  0012               	return		;funcret
 28977  00D7A6                     __end_of_USBDeviceInit:
 28978                           	opt stack 0
 28979                           tblptru	equ	0xFF8
 28980                           tblptrh	equ	0xFF7
 28981                           tblptrl	equ	0xFF6
 28982                           tablat	equ	0xFF5
 28983                           prodh	equ	0xFF4
 28984                           prodl	equ	0xFF3
 28985                           intcon	equ	0xFF2
 28986                           intcon2	equ	0xFF1
 28987                           intcon3	equ	0xFF0
 28988                           postinc0	equ	0xFEE
 28989                           wreg	equ	0xFE8
 28990                           indf1	equ	0xFE7
 28991                           postinc1	equ	0xFE6
 28992                           postdec1	equ	0xFE5
 28993                           plusw1	equ	0xFE3
 28994                           fsr1h	equ	0xFE2
 28995                           fsr1l	equ	0xFE1
 28996                           indf2	equ	0xFDF
 28997                           postinc2	equ	0xFDE
 28998                           postdec2	equ	0xFDD
 28999                           plusw2	equ	0xFDB
 29000                           fsr2h	equ	0xFDA
 29001                           fsr2l	equ	0xFD9
 29002                           status	equ	0xFD8
 29003                           
 29004 ;; *************** function _memset *****************
 29005 ;; Defined at:
 29006 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 29007 ;; Parameters:    Size  Location     Type
 29008 ;;  p1              2    0[BANK0 ] PTR void 
 29009 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 29010 ;;  c               2    2[BANK0 ] int 
 29011 ;;  n               2    4[BANK0 ] unsigned int 
 29012 ;; Auto vars:     Size  Location     Type
 29013 ;;  p               2    6[BANK0 ] PTR unsigned char 
 29014 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 29015 ;; Return value:  Size  Location     Type
 29016 ;;                  2    0[BANK0 ] PTR void 
 29017 ;; Registers used:
 29018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29019 ;; Tracked objects:
 29020 ;;		On entry : 0/0
 29021 ;;		On exit  : 0/0
 29022 ;;		Unchanged: 0/0
 29023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29024 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29027 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29028 ;;Total ram usage:        8 bytes
 29029 ;; Hardware stack levels used:    1
 29030 ;; Hardware stack levels required when called:   10
 29031 ;; This function calls:
 29032 ;;		Nothing
 29033 ;; This function is called by:
 29034 ;;		_USBDeviceInit
 29035 ;; This function uses a non-reentrant model
 29036 ;;
 29037                           
 29038                           	psect	text131
 29039  0124FE                     __ptext131:
 29040                           	opt stack 0
 29041  0124FE                     _memset:
 29042                           	opt stack 19
 29043                           
 29044                           ; BSR set to: 1
 29045                           ;incstack = 0
 29046  0124FE  C060  F066         	movff	memset@p1,memset@p
 29047  012502  C061  F067         	movff	memset@p1+1,memset@p+1
 29048  012506  D009               	goto	l3747
 29049  012508                     l14126:
 29050  012508  C066  FFD9         	movff	memset@p,fsr2l
 29051  01250C  C067  FFDA         	movff	memset@p+1,fsr2h
 29052  012510  C062  FFDF         	movff	memset@c,indf2
 29053  012514  0100               	movlb	0	; () banked
 29054  012516  4B66               	infsnz	memset@p& (0+255),f,b
 29055  012518  2B67               	incf	(memset@p+1)& (0+255),f,b
 29056  01251A                     l3747:
 29057                           
 29058                           ; BSR set to: 0
 29059  01251A  0100               	movlb	0	; () banked
 29060  01251C  0764               	decf	memset@n& (0+255),f,b
 29061  01251E  A0D8               	btfss	status,0,c
 29062  012520  0765               	decf	(memset@n+1)& (0+255),f,b
 29063  012522  2964               	incf	memset@n& (0+255),w,b
 29064  012524  E1F1               	bnz	l14126
 29065  012526  2965               	incf	(memset@n+1)& (0+255),w,b
 29066  012528  B4D8               	btfsc	status,2,c
 29067  01252A  0012               	return	
 29068  01252C  D7ED               	goto	l3748
 29069  01252E                     __end_of_memset:
 29070                           	opt stack 0
 29071                           tblptru	equ	0xFF8
 29072                           tblptrh	equ	0xFF7
 29073                           tblptrl	equ	0xFF6
 29074                           tablat	equ	0xFF5
 29075                           prodh	equ	0xFF4
 29076                           prodl	equ	0xFF3
 29077                           intcon	equ	0xFF2
 29078                           intcon2	equ	0xFF1
 29079                           intcon3	equ	0xFF0
 29080                           postinc0	equ	0xFEE
 29081                           wreg	equ	0xFE8
 29082                           indf1	equ	0xFE7
 29083                           postinc1	equ	0xFE6
 29084                           postdec1	equ	0xFE5
 29085                           plusw1	equ	0xFE3
 29086                           fsr1h	equ	0xFE2
 29087                           fsr1l	equ	0xFE1
 29088                           indf2	equ	0xFDF
 29089                           postinc2	equ	0xFDE
 29090                           postdec2	equ	0xFDD
 29091                           plusw2	equ	0xFDB
 29092                           fsr2h	equ	0xFDA
 29093                           fsr2l	equ	0xFD9
 29094                           status	equ	0xFD8
 29095                           
 29096 ;; *************** function _USBDeviceAttach *****************
 29097 ;; Defined at:
 29098 ;;		line 1354 in file "usb_device.c"
 29099 ;; Parameters:    Size  Location     Type
 29100 ;;		None
 29101 ;; Auto vars:     Size  Location     Type
 29102 ;;		None
 29103 ;; Return value:  Size  Location     Type
 29104 ;;                  1    wreg      void 
 29105 ;; Registers used:
 29106 ;;		wreg, status,2
 29107 ;; Tracked objects:
 29108 ;;		On entry : 0/0
 29109 ;;		On exit  : 0/0
 29110 ;;		Unchanged: 0/0
 29111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29116 ;;Total ram usage:        0 bytes
 29117 ;; Hardware stack levels used:    1
 29118 ;; Hardware stack levels required when called:   10
 29119 ;; This function calls:
 29120 ;;		Nothing
 29121 ;; This function is called by:
 29122 ;;		_main
 29123 ;; This function uses a non-reentrant model
 29124 ;;
 29125                           
 29126                           	psect	text132
 29127  01249C                     __ptext132:
 29128                           	opt stack 0
 29129  01249C                     _USBDeviceAttach:
 29130                           	opt stack 20
 29131                           
 29132                           ;usb_device.c: 1358: {
 29133                           ;usb_device.c: 1359: if(1 == 1)
 29134                           
 29135                           ; BSR set to: 0
 29136                           ;incstack = 0
 29137  01249C  505C               	movf	_USBDeviceState,w,c	;volatile
 29138  01249E  A4D8               	btfss	status,2,c
 29139  0124A0  0012               	return	
 29140                           
 29141                           ;usb_device.c: 1360: {
 29142                           ;usb_device.c: 1362: UCON = 0;
 29143  0124A2  0E00               	movlw	0
 29144  0124A4  6E65               	movwf	3941,c	;volatile
 29145                           
 29146                           ;usb_device.c: 1365: UIE = 0;
 29147  0124A6  0E00               	movlw	0
 29148  0124A8  010F               	movlb	15	; () banked
 29149  0124AA  6F36               	movwf	54,b	;volatile
 29150                           
 29151                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 29152  0124AC  0E16               	movlw	22
 29153  0124AE  6F39               	movwf	57,b	;volatile
 29154  0124B0  0E9F               	movlw	159
 29155  0124B2  6F37               	movwf	55,b	;volatile
 29156  0124B4  0E7B               	movlw	123
 29157  0124B6  6F36               	movwf	54,b	;volatile
 29158                           
 29159                           ; BSR set to: 15
 29160                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 29161  0124B8  8ED0               	bsf	4048,7,c	;volatile
 29162                           
 29163                           ; BSR set to: 15
 29164  0124BA  88A2               	bsf	4002,4,c	;volatile
 29165                           
 29166                           ; BSR set to: 15
 29167  0124BC  88A0               	bsf	4000,4,c	;volatile
 29168                           
 29169                           ; BSR set to: 15
 29170  0124BE  8EF2               	bsf	intcon,7,c	;volatile
 29171                           
 29172                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 29173  0124C0  D001               	goto	l208
 29174  0124C2                     l209:
 29175  0124C2  8665               	bsf	3941,3,c	;volatile
 29176  0124C4                     l208:
 29177  0124C4  A665               	btfss	3941,3,c	;volatile
 29178  0124C6  D7FD               	goto	l209
 29179                           
 29180                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 29181  0124C8  0E01               	movlw	1
 29182  0124CA  6E5C               	movwf	_USBDeviceState,c	;volatile
 29183  0124CC  0012               	return	
 29184  0124CE                     __end_of_USBDeviceAttach:
 29185                           	opt stack 0
 29186                           tblptru	equ	0xFF8
 29187                           tblptrh	equ	0xFF7
 29188                           tblptrl	equ	0xFF6
 29189                           tablat	equ	0xFF5
 29190                           prodh	equ	0xFF4
 29191                           prodl	equ	0xFF3
 29192                           intcon	equ	0xFF2
 29193                           intcon2	equ	0xFF1
 29194                           intcon3	equ	0xFF0
 29195                           postinc0	equ	0xFEE
 29196                           wreg	equ	0xFE8
 29197                           indf1	equ	0xFE7
 29198                           postinc1	equ	0xFE6
 29199                           postdec1	equ	0xFE5
 29200                           plusw1	equ	0xFE3
 29201                           fsr1h	equ	0xFE2
 29202                           fsr1l	equ	0xFE1
 29203                           indf2	equ	0xFDF
 29204                           postinc2	equ	0xFDE
 29205                           postdec2	equ	0xFDD
 29206                           plusw2	equ	0xFDB
 29207                           fsr2h	equ	0xFDA
 29208                           fsr2l	equ	0xFD9
 29209                           status	equ	0xFD8
 29210                           
 29211 ;; *************** function _SYSTEM_Initialize *****************
 29212 ;; Defined at:
 29213 ;;		line 146 in file "system.c"
 29214 ;; Parameters:    Size  Location     Type
 29215 ;;  state           1    wreg     enum E8234
 29216 ;; Auto vars:     Size  Location     Type
 29217 ;;  state           1    4[BANK0 ] enum E8234
 29218 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 29219 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 29220 ;; Return value:  Size  Location     Type
 29221 ;;                  1    wreg      void 
 29222 ;; Registers used:
 29223 ;;		wreg, status,2, status,0
 29224 ;; Tracked objects:
 29225 ;;		On entry : 0/0
 29226 ;;		On exit  : 0/0
 29227 ;;		Unchanged: 0/0
 29228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29232 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29233 ;;Total ram usage:        5 bytes
 29234 ;; Hardware stack levels used:    1
 29235 ;; Hardware stack levels required when called:   10
 29236 ;; This function calls:
 29237 ;;		Nothing
 29238 ;; This function is called by:
 29239 ;;		_main
 29240 ;; This function uses a non-reentrant model
 29241 ;;
 29242                           
 29243                           	psect	text133
 29244  011916                     __ptext133:
 29245                           	opt stack 0
 29246  011916                     _SYSTEM_Initialize:
 29247                           	opt stack 20
 29248                           
 29249                           ;incstack = 0
 29250                           ;SYSTEM_Initialize@state stored from wreg
 29251  011916  0100               	movlb	0	; () banked
 29252  011918  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 29253                           
 29254                           ;system.c: 148: switch(state)
 29255  01191A  D01E               	goto	l949
 29256  01191C                     
 29257                           ;system.c: 157: {
 29258                           ;system.c: 158: unsigned int pll_startup_counter = 600;
 29259  01191C  0E02               	movlw	2
 29260  01191E  0100               	movlb	0	; () banked
 29261  011920  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 29262  011922  0E58               	movlw	88
 29263  011924  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 29264                           
 29265                           ; BSR set to: 0
 29266                           ;system.c: 159: OSCTUNEbits.PLLEN = 1;
 29267  011926  8C9B               	bsf	3995,6,c	;volatile
 29268  011928                     l16120:
 29269                           
 29270                           ; BSR set to: 0
 29271  011928  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 29272  01192A  A0D8               	btfss	status,0,c
 29273  01192C  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 29274  01192E  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 29275  011930  E1FB               	bnz	l16120
 29276  011932  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 29277  011934  B4D8               	btfsc	status,2,c
 29278  011936  0012               	return	
 29279  011938  D7F7               	goto	l952
 29280  01193A                     
 29281                           ; BSR set to: 0
 29282                           ;system.c: 185: OSCCON = 0x70;
 29283                           
 29284                           ; BSR set to: 0
 29285  01193A  0E70               	movlw	112
 29286  01193C  6ED3               	movwf	4051,c	;volatile
 29287                           
 29288                           ;system.c: 191: {
 29289                           ;system.c: 192: unsigned int pll_startup_counter = 800;
 29290  01193E  0E03               	movlw	3
 29291  011940  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),b
 29292  011942  0E20               	movlw	32
 29293  011944  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),b
 29294  011946                     l16124:
 29295                           
 29296                           ; BSR set to: 0
 29297  011946  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),f,b
 29298  011948  A0D8               	btfss	status,0,c
 29299  01194A  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),f,b
 29300  01194C  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),w,b
 29301  01194E  E1FB               	bnz	l16124
 29302  011950  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),w,b
 29303  011952  B4D8               	btfsc	status,2,c
 29304  011954  0012               	return	
 29305  011956  D7F7               	goto	l958
 29306  011958                     l949:
 29307                           
 29308                           ; BSR set to: 0
 29309  011958  0100               	movlb	0	; () banked
 29310  01195A  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 29311                           
 29312                           ; Switch size 1, requested type "space"
 29313                           ; Number of cases is 3, Range of values is 0 to 2
 29314                           ; switch strategies available:
 29315                           ; Name         Instructions Cycles
 29316                           ; simple_byte           10     6 (average)
 29317                           ;	Chosen strategy is simple_byte
 29318  01195C  0A00               	xorlw	0	; case 0
 29319  01195E  B4D8               	btfsc	status,2,c
 29320  011960  D7DD               	goto	l950
 29321  011962  0A01               	xorlw	1	; case 1
 29322  011964  B4D8               	btfsc	status,2,c
 29323  011966  0012               	return	
 29324  011968  0A03               	xorlw	3	; case 2
 29325  01196A  A4D8               	btfss	status,2,c
 29326  01196C  0012               	return	
 29327  01196E  D7E5               	goto	l956
 29328  011970                     __end_of_SYSTEM_Initialize:
 29329                           	opt stack 0
 29330                           tblptru	equ	0xFF8
 29331                           tblptrh	equ	0xFF7
 29332                           tblptrl	equ	0xFF6
 29333                           tablat	equ	0xFF5
 29334                           prodh	equ	0xFF4
 29335                           prodl	equ	0xFF3
 29336                           intcon	equ	0xFF2
 29337                           intcon2	equ	0xFF1
 29338                           intcon3	equ	0xFF0
 29339                           postinc0	equ	0xFEE
 29340                           wreg	equ	0xFE8
 29341                           indf1	equ	0xFE7
 29342                           postinc1	equ	0xFE6
 29343                           postdec1	equ	0xFE5
 29344                           plusw1	equ	0xFE3
 29345                           fsr1h	equ	0xFE2
 29346                           fsr1l	equ	0xFE1
 29347                           indf2	equ	0xFDF
 29348                           postinc2	equ	0xFDE
 29349                           postdec2	equ	0xFDD
 29350                           plusw2	equ	0xFDB
 29351                           fsr2h	equ	0xFDA
 29352                           fsr2l	equ	0xFD9
 29353                           status	equ	0xFD8
 29354                           
 29355 ;; *************** function _APP_DeviceMSDTasks *****************
 29356 ;; Defined at:
 29357 ;;		line 110 in file "app_device_msd.c"
 29358 ;; Parameters:    Size  Location     Type
 29359 ;;		None
 29360 ;; Auto vars:     Size  Location     Type
 29361 ;;		None
 29362 ;; Return value:  Size  Location     Type
 29363 ;;                  1    wreg      void 
 29364 ;; Registers used:
 29365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29366 ;; Tracked objects:
 29367 ;;		On entry : 0/0
 29368 ;;		On exit  : 0/0
 29369 ;;		Unchanged: 0/0
 29370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29375 ;;Total ram usage:        0 bytes
 29376 ;; Hardware stack levels used:    1
 29377 ;; Hardware stack levels required when called:   21
 29378 ;; This function calls:
 29379 ;;		_MSDTasks
 29380 ;; This function is called by:
 29381 ;;		_main
 29382 ;; This function uses a non-reentrant model
 29383 ;;
 29384                           
 29385                           	psect	text134
 29386  012C88                     __ptext134:
 29387                           	opt stack 0
 29388  012C88                     _APP_DeviceMSDTasks:
 29389                           	opt stack 9
 29390                           
 29391                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 29392                           
 29393                           ; BSR set to: 0
 29394                           ;incstack = 0
 29395  012C88  0E20               	movlw	32
 29396  012C8A  605C               	cpfslt	_USBDeviceState,c	;volatile
 29397  012C8C  D001               	goto	l1233
 29398  012C8E  0012               	return	
 29399  012C90                     l1233:
 29400                           
 29401                           ;app_device_msd.c: 118: }
 29402                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 29403  012C90  B265               	btfsc	3941,1,c	;volatile
 29404  012C92  0012               	return	
 29405                           
 29406                           ;app_device_msd.c: 127: }
 29407                           ;app_device_msd.c: 129: MSDTasks();
 29408                           
 29409                           ;app_device_msd.c: 125: {
 29410                           ;app_device_msd.c: 126: return;
 29411  012C94  EC6F  F062         	call	_MSDTasks	;wreg free
 29412  012C98  0012               	return		;funcret
 29413  012C9A                     __end_of_APP_DeviceMSDTasks:
 29414                           	opt stack 0
 29415                           tblptru	equ	0xFF8
 29416                           tblptrh	equ	0xFF7
 29417                           tblptrl	equ	0xFF6
 29418                           tablat	equ	0xFF5
 29419                           prodh	equ	0xFF4
 29420                           prodl	equ	0xFF3
 29421                           intcon	equ	0xFF2
 29422                           intcon2	equ	0xFF1
 29423                           intcon3	equ	0xFF0
 29424                           postinc0	equ	0xFEE
 29425                           wreg	equ	0xFE8
 29426                           indf1	equ	0xFE7
 29427                           postinc1	equ	0xFE6
 29428                           postdec1	equ	0xFE5
 29429                           plusw1	equ	0xFE3
 29430                           fsr1h	equ	0xFE2
 29431                           fsr1l	equ	0xFE1
 29432                           indf2	equ	0xFDF
 29433                           postinc2	equ	0xFDE
 29434                           postdec2	equ	0xFDD
 29435                           plusw2	equ	0xFDB
 29436                           fsr2h	equ	0xFDA
 29437                           fsr2l	equ	0xFD9
 29438                           status	equ	0xFD8
 29439                           
 29440 ;; *************** function _MSDTasks *****************
 29441 ;; Defined at:
 29442 ;;		line 335 in file "usb_device_msd.c"
 29443 ;; Parameters:    Size  Location     Type
 29444 ;;		None
 29445 ;; Auto vars:     Size  Location     Type
 29446 ;;  i               1   81[BANK0 ] unsigned char 
 29447 ;; Return value:  Size  Location     Type
 29448 ;;                  1    wreg      unsigned char 
 29449 ;; Registers used:
 29450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29451 ;; Tracked objects:
 29452 ;;		On entry : 0/0
 29453 ;;		On exit  : 0/0
 29454 ;;		Unchanged: 0/0
 29455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29457 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29460 ;;Total ram usage:        6 bytes
 29461 ;; Hardware stack levels used:    1
 29462 ;; Hardware stack levels required when called:   20
 29463 ;; This function calls:
 29464 ;;		_MSDProcessCommand
 29465 ;;		_USBStallEndpoint
 29466 ;;		_USBTransferOnePacket
 29467 ;; This function is called by:
 29468 ;;		_APP_DeviceMSDTasks
 29469 ;; This function uses a non-reentrant model
 29470 ;;
 29471                           
 29472                           	psect	text135
 29473  00C4DE                     __ptext135:
 29474                           	opt stack 0
 29475  00C4DE                     _MSDTasks:
 29476                           	opt stack 9
 29477                           
 29478                           ;usb_device_msd.c: 337: uint8_t i;
 29479                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 29480                           
 29481                           ;incstack = 0
 29482  00C4DE  0E20               	movlw	32
 29483  00C4E0  185C               	xorwf	_USBDeviceState,w,c	;volatile
 29484  00C4E2  A4D8               	btfss	status,2,c
 29485  00C4E4  0012               	return	
 29486                           
 29487                           ;usb_device_msd.c: 345: }
 29488                           ;usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 29489                           
 29490                           ;usb_device_msd.c: 343: {
 29491                           ;usb_device_msd.c: 344: return 0x00;
 29492                           ;	Return value of _MSDTasks is never used
 29493  00C4E6  98A0               	bcf	4000,4,c	;volatile
 29494                           
 29495                           ;usb_device_msd.c: 357: switch(MSD_State)
 29496  00C4E8  D115               	goto	l574
 29497  00C4EA                     
 29498                           ;usb_device_msd.c: 360: {
 29499                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 29500  00C4EA  5047               	movf	_USBMSDOutHandle,w,c
 29501  00C4EC  1048               	iorwf	_USBMSDOutHandle+1,w,c
 29502  00C4EE  B4D8               	btfsc	status,2,c
 29503  00C4F0  D006               	goto	u12130
 29504  00C4F2  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29505  00C4F6  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29506  00C4FA  BEDF               	btfsc	indf2,7,c
 29507  00C4FC  D119               	goto	l590
 29508  00C4FE                     u12130:
 29509                           
 29510                           ;usb_device_msd.c: 363: {
 29511                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 29512  00C4FE  0E00               	movlw	0
 29513  00C500  0100               	movlb	0	; () banked
 29514  00C502  6FB1               	movwf	MSDTasks@i& (0+255),b
 29515  00C504                     l14212:
 29516                           
 29517                           ; BSR set to: 0
 29518  00C504  0E1E               	movlw	30
 29519  00C506  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 29520  00C508  D001               	goto	l579
 29521  00C50A  D014               	goto	u12150
 29522  00C50C                     l579:
 29523                           
 29524                           ; BSR set to: 0
 29525                           ;usb_device_msd.c: 372: {
 29526                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 29527                           
 29528                           ; BSR set to: 0
 29529  00C50C  51B1               	movf	MSDTasks@i& (0+255),w,b
 29530  00C50E  0D01               	mullw	1
 29531  00C510  0E40               	movlw	64
 29532  00C512  24F3               	addwf	prodl,w,c
 29533  00C514  6ED9               	movwf	fsr2l,c
 29534  00C516  0E0D               	movlw	13
 29535  00C518  20F4               	addwfc	prodh,w,c
 29536  00C51A  6EDA               	movwf	fsr2h,c
 29537  00C51C  51B1               	movf	MSDTasks@i& (0+255),w,b
 29538  00C51E  0D01               	mullw	1
 29539  00C520  0E41               	movlw	low _gblCBW
 29540  00C522  24F3               	addwf	prodl,w,c
 29541  00C524  6EE1               	movwf	fsr1l,c
 29542  00C526  0E02               	movlw	high _gblCBW
 29543  00C528  20F4               	addwfc	prodh,w,c
 29544  00C52A  6EE2               	movwf	fsr1h,c
 29545  00C52C  CFDF FFE7          	movff	indf2,indf1
 29546                           
 29547                           ; BSR set to: 0
 29548  00C530  2BB1               	incf	MSDTasks@i& (0+255),f,b
 29549  00C532  D7E8               	goto	l14212
 29550  00C534                     u12150:
 29551                           
 29552                           ; BSR set to: 0
 29553                           ;usb_device_msd.c: 374: }
 29554                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 29555                           
 29556                           ; BSR set to: 0
 29557  00C534  EE20 F001          	lfsr	2,1
 29558  00C538  5047               	movf	_USBMSDOutHandle,w,c
 29559  00C53A  26D9               	addwf	fsr2l,f,c
 29560  00C53C  5048               	movf	_USBMSDOutHandle+1,w,c
 29561  00C53E  22DA               	addwfc	fsr2h,f,c
 29562  00C540  0E1F               	movlw	31
 29563  00C542  18DE               	xorwf	postinc2,w,c
 29564  00C544  A4D8               	btfss	status,2,c
 29565  00C546  D072               	goto	l581
 29566                           
 29567                           ; BSR set to: 0
 29568  00C548  0E55               	movlw	85
 29569  00C54A  0102               	movlb	2	; () banked
 29570  00C54C  1941               	xorwf	_gblCBW& (0+255),w,b
 29571  00C54E  E16E               	bnz	l581
 29572  00C550  0E53               	movlw	83
 29573  00C552  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 29574  00C554  E16B               	bnz	l581
 29575  00C556  0E42               	movlw	66
 29576  00C558  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 29577  00C55A  E168               	bnz	l14262
 29578  00C55C  0E43               	movlw	67
 29579  00C55E  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 29580  00C560  A4D8               	btfss	status,2,c
 29581  00C562  D064               	goto	l581
 29582                           
 29583                           ; BSR set to: 2
 29584                           ;usb_device_msd.c: 378: {
 29585                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 29586  00C564  0E01               	movlw	1
 29587  00C566  0101               	movlb	1	; () banked
 29588  00C568  6FF1               	movwf	_MSDCBWValid& (0+255),b
 29589                           
 29590                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 29591                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 29592                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 29593                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 29594  00C56A  0102               	movlb	2	; () banked
 29595  00C56C  514E               	movf	(_gblCBW+13)& (0+255),w,b
 29596  00C56E  A4D8               	btfss	status,2,c
 29597  00C570  D050               	goto	l582
 29598                           
 29599                           ; BSR set to: 2
 29600  00C572  0E11               	movlw	17
 29601  00C574  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 29602  00C576  D04D               	goto	l582
 29603                           
 29604                           ; BSR set to: 2
 29605  00C578  514F               	movf	(_gblCBW+14)& (0+255),w,b
 29606  00C57A  B4D8               	btfsc	status,2,c
 29607  00C57C  D04A               	goto	l582
 29608                           
 29609                           ; BSR set to: 2
 29610  00C57E  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 29611  00C582  0E3F               	movlw	63
 29612  00C584  0100               	movlb	0	; () banked
 29613  00C586  17AC               	andwf	??_MSDTasks& (0+255),f,b
 29614  00C588  A4D8               	btfss	status,2,c
 29615  00C58A  D043               	goto	l582
 29616                           
 29617                           ; BSR set to: 0
 29618                           ;usb_device_msd.c: 388: {
 29619                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 29620  00C58C  0E55               	movlw	85
 29621  00C58E  010D               	movlb	13	; () banked
 29622  00C590  6F80               	movwf	128,b	;volatile
 29623  00C592  0E53               	movlw	83
 29624  00C594  6F81               	movwf	129,b	;volatile
 29625  00C596  0E42               	movlw	66
 29626  00C598  6F82               	movwf	130,b	;volatile
 29627  00C59A  0E53               	movlw	83
 29628  00C59C  6F83               	movwf	131,b	;volatile
 29629                           
 29630                           ; BSR set to: 13
 29631                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 29632  00C59E  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 29633  00C5A2  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 29634  00C5A6  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 29635  00C5AA  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 29636                           
 29637                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 29638  00C5AE  0E00               	movlw	0
 29639  00C5B0  6F88               	movwf	136,b	;volatile
 29640  00C5B2  0E00               	movlw	0
 29641  00C5B4  6F89               	movwf	137,b	;volatile
 29642  00C5B6  0E00               	movlw	0
 29643  00C5B8  6F8A               	movwf	138,b	;volatile
 29644  00C5BA  0E00               	movlw	0
 29645  00C5BC  6F8B               	movwf	139,b	;volatile
 29646                           
 29647                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 29648  00C5BE  0E00               	movlw	0
 29649  00C5C0  6F8C               	movwf	140,b	;volatile
 29650                           
 29651                           ; BSR set to: 13
 29652                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 29653  00C5C2  6853               	setf	_MSDCommandState,c
 29654                           
 29655                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 29656  00C5C4  0E00               	movlw	0
 29657  00C5C6  0101               	movlb	1	; () banked
 29658  00C5C8  6FF5               	movwf	_MSDReadState& (0+255),b
 29659                           
 29660                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 29661  00C5CA  0E00               	movlw	0
 29662  00C5CC  6E52               	movwf	_MSDWriteState,c
 29663                           
 29664                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 29665  00C5CE  0E00               	movlw	0
 29666  00C5D0  6FF4               	movwf	_MSDRetryAttempt& (0+255),b
 29667                           
 29668                           ; BSR set to: 1
 29669                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 29670  00C5D2  0E03               	movlw	3
 29671  00C5D4  0102               	movlb	2	; () banked
 29672  00C5D6  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 29673  00C5D8  B4D8               	btfsc	status,2,c
 29674  00C5DA  D008               	goto	l583
 29675                           
 29676                           ; BSR set to: 2
 29677                           ;usb_device_msd.c: 421: {
 29678                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 29679  00C5DC  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 29680  00C5DE  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 29681  00C5E0  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 29682  00C5E2  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 29683                           
 29684                           ; BSR set to: 2
 29685                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 29686  00C5E4  0E00               	movlw	0
 29687  00C5E6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 29688                           
 29689                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 29690  00C5E8  0E00               	movlw	0
 29691  00C5EA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 29692  00C5EC                     l583:
 29693                           
 29694                           ; BSR set to: 2
 29695                           ;usb_device_msd.c: 425: }
 29696                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 29697                           
 29698                           ; BSR set to: 2
 29699  00C5EC  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 29700  00C5EE  D002               	goto	l584
 29701                           
 29702                           ; BSR set to: 2
 29703                           ;usb_device_msd.c: 432: {
 29704                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 29705  00C5F0  0E01               	movlw	1
 29706  00C5F2  D001               	goto	L21
 29707  00C5F4                     l584:
 29708                           
 29709                           ; BSR set to: 2
 29710                           ;usb_device_msd.c: 435: else
 29711                           ;usb_device_msd.c: 436: {
 29712                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 29713                           
 29714                           ; BSR set to: 2
 29715  00C5F4  0E02               	movlw	2
 29716  00C5F6                     L21:
 29717  00C5F6  6E54               	movwf	_MSD_State,c
 29718                           
 29719                           ; BSR set to: 2
 29720                           ;usb_device_msd.c: 438: }
 29721                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 29722                           
 29723                           ; BSR set to: 2
 29724  00C5F8  5149               	movf	(_gblCBW+8)& (0+255),w,b
 29725  00C5FA  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 29726  00C5FC  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 29727  00C5FE  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 29728  00C600  B4D8               	btfsc	status,2,c
 29729  00C602  D002               	goto	l586
 29730                           
 29731                           ; BSR set to: 2
 29732                           ;usb_device_msd.c: 443: {
 29733                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 29734  00C604  0E00               	movlw	0
 29735  00C606  D001               	goto	L22
 29736  00C608                     l586:
 29737                           
 29738                           ; BSR set to: 2
 29739                           ;usb_device_msd.c: 446: else
 29740                           ;usb_device_msd.c: 447: {
 29741                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 29742                           
 29743                           ; BSR set to: 2
 29744  00C608  0E01               	movlw	1
 29745  00C60A                     L22:
 29746  00C60A  6E51               	movwf	_MSDHostNoData,c
 29747                           
 29748                           ; BSR set to: 2
 29749                           ;usb_device_msd.c: 449: }
 29750                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 29751                           
 29752                           ; BSR set to: 2
 29753  00C60C  C250  F053         	movff	_gblCBW+15,_MSDCommandState
 29754                           
 29755                           ;usb_device_msd.c: 454: }
 29756  00C610  D08F               	goto	l590
 29757  00C612                     l582:
 29758                           
 29759                           ;usb_device_msd.c: 455: else
 29760                           ;usb_device_msd.c: 456: {
 29761                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 29762                           
 29763                           ; BSR set to: 2
 29764  00C612  0E01               	movlw	1
 29765  00C614  0100               	movlb	0	; () banked
 29766  00C616  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29767  00C618  0E02               	movlw	2
 29768  00C61A  ECD6  F072         	call	_USBStallEndpoint
 29769                           
 29770                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 29771  00C61E  0E00               	movlw	0
 29772  00C620  0100               	movlb	0	; () banked
 29773  00C622  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29774  00C624  0E02               	movlw	2
 29775  00C626  ECD6  F072         	call	_USBStallEndpoint
 29776                           
 29777                           ;usb_device_msd.c: 462: }
 29778                           ;usb_device_msd.c: 463: }
 29779  00C62A  D082               	goto	l590
 29780  00C62C                     l581:
 29781  00C62C                     l14262:
 29782                           
 29783                           ;usb_device_msd.c: 464: else
 29784                           ;usb_device_msd.c: 465: {
 29785                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 29786  00C62C  0E01               	movlw	1
 29787  00C62E  0100               	movlb	0	; () banked
 29788  00C630  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29789  00C632  0E02               	movlw	2
 29790  00C634  ECD6  F072         	call	_USBStallEndpoint
 29791                           
 29792                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 29793  00C638  0E00               	movlw	0
 29794  00C63A  0100               	movlb	0	; () banked
 29795  00C63C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29796  00C63E  0E02               	movlw	2
 29797  00C640  ECD6  F072         	call	_USBStallEndpoint
 29798                           
 29799                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 29800  00C644  0E00               	movlw	0
 29801  00C646  0101               	movlb	1	; () banked
 29802  00C648  6FF1               	movwf	_MSDCBWValid& (0+255),b
 29803                           
 29804                           ; BSR set to: 1
 29805                           ;usb_device_msd.c: 474: }
 29806                           ;usb_device_msd.c: 475: }
 29807                           ;usb_device_msd.c: 476: break;
 29808                           
 29809                           ; BSR set to: 1
 29810  00C64A  D072               	goto	l590
 29811  00C64C                     
 29812                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 29813                           
 29814                           ; BSR set to: 1
 29815  00C64C  EC5B  F06E         	call	_MSDProcessCommand	;wreg free
 29816  00C650  0AFF               	xorlw	255
 29817  00C652  A4D8               	btfss	status,2,c
 29818  00C654  D06D               	goto	l590
 29819  00C656  D011               	goto	l595
 29820  00C658                     
 29821                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 29822  00C658  EC5B  F06E         	call	_MSDProcessCommand	;wreg free
 29823  00C65C  0AFF               	xorlw	255
 29824  00C65E  A4D8               	btfss	status,2,c
 29825  00C660  D067               	goto	l590
 29826                           
 29827                           ;usb_device_msd.c: 487: {
 29828                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 29829  00C662  010D               	movlb	13	; () banked
 29830  00C664  518C               	movf	140,w,b	;volatile
 29831  00C666  A4D8               	btfss	status,2,c
 29832  00C668  D008               	goto	l595
 29833                           
 29834                           ; BSR set to: 13
 29835  00C66A  5188               	movf	136,w,b	;volatile
 29836  00C66C  1189               	iorwf	137,w,b	;volatile
 29837  00C66E  118A               	iorwf	138,w,b	;volatile
 29838  00C670  118B               	iorwf	139,w,b	;volatile
 29839  00C672  B4D8               	btfsc	status,2,c
 29840  00C674  D002               	goto	l595
 29841                           
 29842                           ; BSR set to: 13
 29843                           ;usb_device_msd.c: 490: {
 29844                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 29845  00C676  0E02               	movlw	2
 29846  00C678  6F8C               	movwf	140,b	;volatile
 29847  00C67A                     l595:
 29848                           
 29849                           ; BSR set to: 13
 29850                           ;usb_device_msd.c: 492: }
 29851                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 29852  00C67A  0E03               	movlw	3
 29853  00C67C  D03D               	goto	L20
 29854  00C67E                     
 29855                           ; BSR set to: 13
 29856  00C67E  C03F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2694
 29857  00C682  C040  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2694+1
 29858  00C686  0100               	movlb	0	; () banked
 29859  00C688  51AD               	movf	_MSDTasks$2694& (0+255),w,b
 29860  00C68A  11AE               	iorwf	(_MSDTasks$2694+1)& (0+255),w,b
 29861  00C68C  B4D8               	btfsc	status,2,c
 29862  00C68E  D00A               	goto	l597
 29863                           
 29864                           ; BSR set to: 0
 29865  00C690  C03F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2695
 29866  00C694  C040  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2695+1
 29867                           
 29868                           ; BSR set to: 0
 29869                           
 29870                           ; BSR set to: 0
 29871                           
 29872                           ; BSR set to: 0
 29873                           
 29874                           ; BSR set to: 0
 29875  00C698  C0AF  FFD9         	movff	_MSDTasks$2695,fsr2l
 29876  00C69C  C0B0  FFDA         	movff	_MSDTasks$2695+1,fsr2h
 29877  00C6A0  BEDF               	btfsc	indf2,7,c
 29878  00C6A2  D046               	goto	l590
 29879  00C6A4                     l597:
 29880                           
 29881                           ; BSR set to: 0
 29882                           ;usb_device_msd.c: 502: }
 29883                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 29884                           
 29885                           ; BSR set to: 0
 29886  00C6A4  0E01               	movlw	1
 29887  00C6A6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29888  00C6A8  0E80               	movlw	128
 29889  00C6AA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29890  00C6AC  0E0D               	movlw	13
 29891  00C6AE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29892  00C6B0  0E0D               	movlw	13
 29893  00C6B2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29894  00C6B4  0E02               	movlw	2
 29895  00C6B6  ECDF  F073         	call	_USBTransferOnePacket
 29896  00C6BA  C060  F045         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 29897  00C6BE  C061  F046         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 29898                           
 29899                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 29900  00C6C2  5047               	movf	_USBMSDOutHandle,w,c
 29901  00C6C4  1048               	iorwf	_USBMSDOutHandle+1,w,c
 29902  00C6C6  B4D8               	btfsc	status,2,c
 29903  00C6C8  D006               	goto	u12320
 29904  00C6CA  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29905  00C6CE  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29906  00C6D2  BEDF               	btfsc	indf2,7,c
 29907  00C6D4  D010               	goto	l606
 29908  00C6D6                     u12320:
 29909                           
 29910                           ;usb_device_msd.c: 509: {
 29911                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 29912  00C6D6  0E00               	movlw	0
 29913  00C6D8  0100               	movlb	0	; () banked
 29914  00C6DA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29915  00C6DC  0E40               	movlw	64
 29916  00C6DE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29917  00C6E0  0E0D               	movlw	13
 29918  00C6E2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29919  00C6E4  0E40               	movlw	64
 29920  00C6E6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29921  00C6E8  0E02               	movlw	2
 29922  00C6EA  ECDF  F073         	call	_USBTransferOnePacket
 29923  00C6EE  C060  F047         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 29924  00C6F2  C061  F048         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 29925  00C6F6                     l606:
 29926                           
 29927                           ;usb_device_msd.c: 511: }
 29928                           ;usb_device_msd.c: 512: MSD_State=0x00;
 29929  00C6F6  0E00               	movlw	0
 29930  00C6F8                     L20:
 29931  00C6F8  6E54               	movwf	_MSD_State,c
 29932                           
 29933                           ;usb_device_msd.c: 513: break;
 29934  00C6FA  D01A               	goto	l590
 29935  00C6FC                     
 29936                           ;usb_device_msd.c: 518: MSD_State=0x00;
 29937  00C6FC  0E00               	movlw	0
 29938  00C6FE  6E54               	movwf	_MSD_State,c
 29939                           
 29940                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 29941  00C700  0E02               	movlw	2
 29942  00C702  010D               	movlb	13	; () banked
 29943  00C704  6F8C               	movwf	140,b	;volatile
 29944                           
 29945                           ; BSR set to: 13
 29946                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 29947  00C706  0E00               	movlw	0
 29948  00C708  0100               	movlb	0	; () banked
 29949  00C70A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29950  00C70C  0E02               	movlw	2
 29951  00C70E  ECD6  F072         	call	_USBStallEndpoint
 29952                           
 29953                           ;usb_device_msd.c: 521: }
 29954  00C712  D00E               	goto	l590
 29955  00C714                     l574:
 29956  00C714  5054               	movf	_MSD_State,w,c
 29957                           
 29958                           ; Switch size 1, requested type "space"
 29959                           ; Number of cases is 4, Range of values is 0 to 3
 29960                           ; switch strategies available:
 29961                           ; Name         Instructions Cycles
 29962                           ; simple_byte           13     7 (average)
 29963                           ;	Chosen strategy is simple_byte
 29964  00C716  0A00               	xorlw	0	; case 0
 29965  00C718  B4D8               	btfsc	status,2,c
 29966  00C71A  D6E7               	goto	l575
 29967  00C71C  0A01               	xorlw	1	; case 1
 29968  00C71E  B4D8               	btfsc	status,2,c
 29969  00C720  D795               	goto	l591
 29970  00C722  0A03               	xorlw	3	; case 2
 29971  00C724  B4D8               	btfsc	status,2,c
 29972  00C726  D798               	goto	l593
 29973  00C728  0A01               	xorlw	1	; case 3
 29974  00C72A  B4D8               	btfsc	status,2,c
 29975  00C72C  D7A8               	goto	l596
 29976  00C72E  D7E6               	goto	l609
 29977  00C730                     l590:
 29978                           
 29979                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 29980  00C730  88A0               	bsf	4000,4,c	;volatile
 29981                           
 29982                           ;usb_device_msd.c: 526: return MSD_State;
 29983                           ;	Return value of _MSDTasks is never used
 29984  00C732  0012               	return		;funcret
 29985  00C734                     __end_of_MSDTasks:
 29986                           	opt stack 0
 29987                           tblptru	equ	0xFF8
 29988                           tblptrh	equ	0xFF7
 29989                           tblptrl	equ	0xFF6
 29990                           tablat	equ	0xFF5
 29991                           prodh	equ	0xFF4
 29992                           prodl	equ	0xFF3
 29993                           intcon	equ	0xFF2
 29994                           intcon2	equ	0xFF1
 29995                           intcon3	equ	0xFF0
 29996                           postinc0	equ	0xFEE
 29997                           wreg	equ	0xFE8
 29998                           indf1	equ	0xFE7
 29999                           postinc1	equ	0xFE6
 30000                           postdec1	equ	0xFE5
 30001                           plusw1	equ	0xFE3
 30002                           fsr1h	equ	0xFE2
 30003                           fsr1l	equ	0xFE1
 30004                           indf2	equ	0xFDF
 30005                           postinc2	equ	0xFDE
 30006                           postdec2	equ	0xFDD
 30007                           plusw2	equ	0xFDB
 30008                           fsr2h	equ	0xFDA
 30009                           fsr2l	equ	0xFD9
 30010                           status	equ	0xFD8
 30011                           
 30012 ;; *************** function _MSDProcessCommand *****************
 30013 ;; Defined at:
 30014 ;;		line 553 in file "usb_device_msd.c"
 30015 ;; Parameters:    Size  Location     Type
 30016 ;;		None
 30017 ;; Auto vars:     Size  Location     Type
 30018 ;;		None
 30019 ;; Return value:  Size  Location     Type
 30020 ;;                  1    wreg      unsigned char 
 30021 ;; Registers used:
 30022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30023 ;; Tracked objects:
 30024 ;;		On entry : 0/0
 30025 ;;		On exit  : 0/0
 30026 ;;		Unchanged: 0/0
 30027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30030 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30031 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30032 ;;Total ram usage:        5 bytes
 30033 ;; Hardware stack levels used:    1
 30034 ;; Hardware stack levels required when called:   19
 30035 ;; This function calls:
 30036 ;;		_ExternalFlash_MediaDetect
 30037 ;;		_ExternalFlash_MediaInitialize
 30038 ;;		_MSDProcessCommandMediaAbsent
 30039 ;;		_MSDProcessCommandMediaPresent
 30040 ;; This function is called by:
 30041 ;;		_MSDTasks
 30042 ;; This function uses a non-reentrant model
 30043 ;;
 30044                           
 30045                           	psect	text136
 30046  00DCB6                     __ptext136:
 30047                           	opt stack 0
 30048  00DCB6                     _MSDProcessCommand:
 30049                           	opt stack 9
 30050                           
 30051                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 30052                           
 30053                           ;incstack = 0
 30054  00DCB6  C2D4  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 30055  00DCBA  C2D5  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 30056  00DCBE  EE22  F0C8         	lfsr	2,_LUN+9
 30057  00DCC2  D801               	call	u11058
 30058  00DCC4  D00A               	goto	u11059
 30059  00DCC6                     u11058:
 30060  00DCC6  0005               	push	
 30061  00DCC8  6EFA               	movwf	pclath,c
 30062  00DCCA  50DE               	movf	postinc2,w,c
 30063  00DCCC  6EFD               	movwf	tosl,c
 30064  00DCCE  50DE               	movf	postinc2,w,c
 30065  00DCD0  6EFE               	movwf	tosh,c
 30066  00DCD2  50DE               	movf	postinc2,w,c
 30067  00DCD4  6EFF               	movwf	tosu,c
 30068  00DCD6  50FA               	movf	pclath,w,c
 30069  00DCD8  0012               	return		;indir
 30070  00DCDA                     u11059:
 30071  00DCDA  0900               	iorlw	0
 30072  00DCDC  B4D8               	btfsc	status,2,c
 30073  00DCDE  D00C               	goto	u11070
 30074  00DCE0  0102               	movlb	2	; () banked
 30075  00DCE2  514E               	movf	(_gblCBW+13)& (0+255),w,b
 30076  00DCE4  0D01               	mullw	1
 30077  00DCE6  0EF2               	movlw	low _SoftDetach
 30078  00DCE8  24F3               	addwf	prodl,w,c
 30079  00DCEA  6ED9               	movwf	fsr2l,c
 30080  00DCEC  0E01               	movlw	high _SoftDetach
 30081  00DCEE  20F4               	addwfc	prodh,w,c
 30082  00DCF0  6EDA               	movwf	fsr2h,c
 30083  00DCF2  04DE               	decf	postinc2,w,c
 30084  00DCF4  A4D8               	btfss	status,2,c
 30085  00DCF6  D01D               	goto	l612
 30086  00DCF8                     u11070:
 30087                           
 30088                           ;usb_device_msd.c: 558: {
 30089                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 30090                           
 30091                           ; BSR set to: 2
 30092  00DCF8  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30093  00DCFC  0E01               	movlw	1
 30094  00DCFE  0100               	movlb	0	; () banked
 30095  00DD00  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30096  00DD02  0E00               	movlw	0
 30097  00DD04  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30098  00DD06  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30099  00DD08  D003               	goto	u11084
 30100  00DD0A                     u11085:
 30101  00DD0A  90D8               	bcf	status,0,c
 30102  00DD0C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30103  00DD0E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30104  00DD10                     u11084:
 30105  00DD10  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30106  00DD12  D7FB               	goto	u11085
 30107  00DD14  0100               	movlb	0	; () banked
 30108  00DD16  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 30109  00DD18  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 30110  00DD1A  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 30111  00DD1C  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 30112  00DD1E  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 30113  00DD20  0102               	movlb	2	; () banked
 30114  00DD22  17B6               	andwf	_gblMediaPresent& (0+255),f,b
 30115  00DD24  0100               	movlb	0	; () banked
 30116  00DD26  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 30117  00DD28  0102               	movlb	2	; () banked
 30118  00DD2A  17B7               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 30119                           
 30120                           ; BSR set to: 2
 30121                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 30122  00DD2C  EC4A  F08B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 30123                           
 30124                           ;usb_device_msd.c: 563: }
 30125  00DD30  D058               	goto	l619
 30126  00DD32                     l612:
 30127                           
 30128                           ;usb_device_msd.c: 564: else
 30129                           ;usb_device_msd.c: 565: {
 30130                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 30131  00DD32  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30132  00DD36  0E01               	movlw	1
 30133  00DD38  0100               	movlb	0	; () banked
 30134  00DD3A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30135  00DD3C  0E00               	movlw	0
 30136  00DD3E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30137  00DD40  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30138  00DD42  D003               	goto	u11094
 30139  00DD44                     u11095:
 30140  00DD44  90D8               	bcf	status,0,c
 30141  00DD46  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30142  00DD48  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30143  00DD4A                     u11094:
 30144  00DD4A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30145  00DD4C  D7FB               	goto	u11095
 30146  00DD4E  0102               	movlb	2	; () banked
 30147  00DD50  51B6               	movf	_gblMediaPresent& (0+255),w,b
 30148  00DD52  0100               	movlb	0	; () banked
 30149  00DD54  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 30150  00DD56  0102               	movlb	2	; () banked
 30151  00DD58  51B7               	movf	(_gblMediaPresent+1)& (0+255),w,b
 30152  00DD5A  0100               	movlb	0	; () banked
 30153  00DD5C  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 30154  00DD5E  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 30155  00DD60  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 30156  00DD62  A4D8               	btfss	status,2,c
 30157  00DD64  D03C               	goto	l616
 30158                           
 30159                           ; BSR set to: 0
 30160                           ;usb_device_msd.c: 568: {
 30161                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 30162  00DD66  C2D4  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 30163  00DD6A  C2D5  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 30164  00DD6E  D801               	call	u11118
 30165  00DD70  D00B               	goto	u11119
 30166  00DD72                     u11118:
 30167  00DD72  0005               	push	
 30168  00DD74  6EFA               	movwf	pclath,c
 30169  00DD76  0102               	movlb	2	; () banked
 30170  00DD78  51BF               	movf	_LUN& (0+255),w,b
 30171  00DD7A  6EFD               	movwf	tosl,c
 30172  00DD7C  51C0               	movf	(_LUN+1)& (0+255),w,b
 30173  00DD7E  6EFE               	movwf	tosh,c
 30174  00DD80  51C1               	movf	(_LUN+2)& (0+255),w,b
 30175  00DD82  6EFF               	movwf	tosu,c
 30176  00DD84  50FA               	movf	pclath,w,c
 30177  00DD86  0012               	return		;indir
 30178  00DD88                     u11119:
 30179  00DD88  0100               	movlb	0	; () banked
 30180  00DD8A  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 30181  00DD8C  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 30182  00DD8E  B4D8               	btfsc	status,2,c
 30183  00DD90  D023               	goto	l617
 30184                           
 30185                           ; BSR set to: 0
 30186                           ;usb_device_msd.c: 571: {
 30187                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 30188  00DD92  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30189  00DD96  0E01               	movlw	1
 30190  00DD98  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30191  00DD9A  0E00               	movlw	0
 30192  00DD9C  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30193  00DD9E  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30194  00DDA0  D003               	goto	u11134
 30195  00DDA2                     u11135:
 30196  00DDA2  90D8               	bcf	status,0,c
 30197  00DDA4  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30198  00DDA6  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30199  00DDA8                     u11134:
 30200  00DDA8  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30201  00DDAA  D7FB               	goto	u11135
 30202  00DDAC  0100               	movlb	0	; () banked
 30203  00DDAE  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 30204  00DDB0  0102               	movlb	2	; () banked
 30205  00DDB2  13B6               	iorwf	_gblMediaPresent& (0+255),f,b
 30206  00DDB4  0100               	movlb	0	; () banked
 30207  00DDB6  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 30208  00DDB8  0102               	movlb	2	; () banked
 30209  00DDBA  13B7               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 30210                           
 30211                           ; BSR set to: 2
 30212                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 30213  00DDBC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30214  00DDBE  0BF0               	andlw	-16
 30215  00DDC0  0906               	iorlw	6
 30216  00DDC2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30217                           
 30218                           ; BSR set to: 2
 30219                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 30220  00DDC4  0E28               	movlw	40
 30221  00DDC6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30222                           
 30223                           ; BSR set to: 2
 30224                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 30225  00DDC8  0E00               	movlw	0
 30226  00DDCA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30227                           
 30228                           ; BSR set to: 2
 30229                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 30230  00DDCC  0E01               	movlw	1
 30231  00DDCE  010D               	movlb	13	; () banked
 30232  00DDD0  6F8C               	movwf	140,b	;volatile
 30233                           
 30234                           ; BSR set to: 13
 30235                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 30236  00DDD2  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30237                           
 30238                           ;usb_device_msd.c: 589: }
 30239  00DDD6  D005               	goto	l619
 30240  00DDD8                     l617:
 30241                           
 30242                           ;usb_device_msd.c: 590: else
 30243                           ;usb_device_msd.c: 591: {
 30244                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 30245  00DDD8  EC4A  F08B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 30246                           
 30247                           ;usb_device_msd.c: 594: }
 30248                           ;usb_device_msd.c: 595: }
 30249  00DDDC  D002               	goto	l619
 30250  00DDDE                     l616:
 30251                           
 30252                           ;usb_device_msd.c: 596: else
 30253                           ;usb_device_msd.c: 597: {
 30254                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 30255  00DDDE  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30256  00DDE2                     l619:
 30257                           
 30258                           ;usb_device_msd.c: 601: }
 30259                           ;usb_device_msd.c: 602: }
 30260                           ;usb_device_msd.c: 604: return MSDCommandState;
 30261  00DDE2  5053               	movf	_MSDCommandState,w,c
 30262  00DDE4  0012               	return	
 30263  00DDE6                     __end_of_MSDProcessCommand:
 30264                           	opt stack 0
 30265                           tosu	equ	0xFFF
 30266                           tosh	equ	0xFFE
 30267                           tosl	equ	0xFFD
 30268                           pclath	equ	0xFFA
 30269                           tblptru	equ	0xFF8
 30270                           tblptrh	equ	0xFF7
 30271                           tblptrl	equ	0xFF6
 30272                           tablat	equ	0xFF5
 30273                           prodh	equ	0xFF4
 30274                           prodl	equ	0xFF3
 30275                           intcon	equ	0xFF2
 30276                           intcon2	equ	0xFF1
 30277                           intcon3	equ	0xFF0
 30278                           postinc0	equ	0xFEE
 30279                           wreg	equ	0xFE8
 30280                           indf1	equ	0xFE7
 30281                           postinc1	equ	0xFE6
 30282                           postdec1	equ	0xFE5
 30283                           plusw1	equ	0xFE3
 30284                           fsr1h	equ	0xFE2
 30285                           fsr1l	equ	0xFE1
 30286                           indf2	equ	0xFDF
 30287                           postinc2	equ	0xFDE
 30288                           postdec2	equ	0xFDD
 30289                           plusw2	equ	0xFDB
 30290                           fsr2h	equ	0xFDA
 30291                           fsr2l	equ	0xFD9
 30292                           status	equ	0xFD8
 30293                           
 30294 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 30295 ;; Defined at:
 30296 ;;		line 635 in file "usb_device_msd.c"
 30297 ;; Parameters:    Size  Location     Type
 30298 ;;		None
 30299 ;; Auto vars:     Size  Location     Type
 30300 ;;		None
 30301 ;; Return value:  Size  Location     Type
 30302 ;;                  1    wreg      void 
 30303 ;; Registers used:
 30304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30305 ;; Tracked objects:
 30306 ;;		On entry : 0/0
 30307 ;;		On exit  : 0/0
 30308 ;;		Unchanged: 0/0
 30309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30314 ;;Total ram usage:        0 bytes
 30315 ;; Hardware stack levels used:    1
 30316 ;; Hardware stack levels required when called:   18
 30317 ;; This function calls:
 30318 ;;		_MSDErrorHandler
 30319 ;;		_MSDProcessCommandMediaPresent
 30320 ;;		_ResetSenseData
 30321 ;; This function is called by:
 30322 ;;		_MSDProcessCommand
 30323 ;; This function uses a non-reentrant model
 30324 ;;
 30325                           
 30326                           	psect	text137
 30327  011694                     __ptext137:
 30328                           	opt stack 0
 30329  011694                     _MSDProcessCommandMediaAbsent:
 30330                           	opt stack 9
 30331                           
 30332                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 30333                           
 30334                           ;incstack = 0
 30335  011694  D01D               	goto	l623
 30336  011696                     
 30337                           ;usb_device_msd.c: 646: ResetSenseData();
 30338  011696  EC56  F08A         	call	_ResetSenseData	;wreg free
 30339                           
 30340                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 30341  01169A  0102               	movlb	2	; () banked
 30342  01169C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30343  01169E  0BF0               	andlw	-16
 30344  0116A0  0902               	iorlw	2
 30345  0116A2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30346                           
 30347                           ; BSR set to: 2
 30348                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 30349  0116A4  0E3A               	movlw	58
 30350  0116A6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30351                           
 30352                           ; BSR set to: 2
 30353                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 30354  0116A8  0E00               	movlw	0
 30355  0116AA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30356                           
 30357                           ; BSR set to: 2
 30358                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 30359  0116AC  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30360                           
 30361                           ;usb_device_msd.c: 655: break;
 30362  0116B0  0012               	return	
 30363  0116B2                     
 30364                           ;usb_device_msd.c: 658: case 0x00:
 30365                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 30366  0116B2  0E01               	movlw	1
 30367  0116B4  010D               	movlb	13	; () banked
 30368  0116B6  6F8C               	movwf	140,b	;volatile
 30369                           
 30370                           ; BSR set to: 13
 30371                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 30372  0116B8  6853               	setf	_MSDCommandState,c
 30373                           
 30374                           ;usb_device_msd.c: 665: break;
 30375  0116BA  0012               	return	
 30376  0116BC                     
 30377                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 30378                           
 30379                           ; BSR set to: 13
 30380  0116BC  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30381                           
 30382                           ;usb_device_msd.c: 671: break;
 30383  0116C0  0012               	return	
 30384  0116C2                     
 30385                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 30386  0116C2  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30387                           
 30388                           ;usb_device_msd.c: 677: break;
 30389  0116C6  0012               	return	
 30390  0116C8                     
 30391                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 30392  0116C8  0E7F               	movlw	127
 30393  0116CA  EC3B  F071         	call	_MSDErrorHandler
 30394                           
 30395                           ;usb_device_msd.c: 685: }
 30396                           
 30397                           ;usb_device_msd.c: 684: break;
 30398  0116CE  0012               	return	
 30399  0116D0                     l623:
 30400  0116D0  5053               	movf	_MSDCommandState,w,c
 30401                           
 30402                           ; Switch size 1, requested type "space"
 30403                           ; Number of cases is 5, Range of values is 0 to 253
 30404                           ; switch strategies available:
 30405                           ; Name         Instructions Cycles
 30406                           ; simple_byte           16     9 (average)
 30407                           ;	Chosen strategy is simple_byte
 30408  0116D2  0A00               	xorlw	0	; case 0
 30409  0116D4  B4D8               	btfsc	status,2,c
 30410  0116D6  D7ED               	goto	l626
 30411  0116D8  0A03               	xorlw	3	; case 3
 30412  0116DA  B4D8               	btfsc	status,2,c
 30413  0116DC  D7DC               	goto	l624
 30414  0116DE  0A11               	xorlw	17	; case 18
 30415  0116E0  B4D8               	btfsc	status,2,c
 30416  0116E2  D7EC               	goto	l628
 30417  0116E4  0A0C               	xorlw	12	; case 30
 30418  0116E6  B4D8               	btfsc	status,2,c
 30419  0116E8  D7E4               	goto	l626
 30420  0116EA  0AE3               	xorlw	227	; case 253
 30421  0116EC  B4D8               	btfsc	status,2,c
 30422  0116EE  D7E9               	goto	l629
 30423  0116F0  D7EB               	goto	l630
 30424  0116F2                     __end_of_MSDProcessCommandMediaAbsent:
 30425                           	opt stack 0
 30426                           tosu	equ	0xFFF
 30427                           tosh	equ	0xFFE
 30428                           tosl	equ	0xFFD
 30429                           pclath	equ	0xFFA
 30430                           tblptru	equ	0xFF8
 30431                           tblptrh	equ	0xFF7
 30432                           tblptrl	equ	0xFF6
 30433                           tablat	equ	0xFF5
 30434                           prodh	equ	0xFF4
 30435                           prodl	equ	0xFF3
 30436                           intcon	equ	0xFF2
 30437                           intcon2	equ	0xFF1
 30438                           intcon3	equ	0xFF0
 30439                           postinc0	equ	0xFEE
 30440                           wreg	equ	0xFE8
 30441                           indf1	equ	0xFE7
 30442                           postinc1	equ	0xFE6
 30443                           postdec1	equ	0xFE5
 30444                           plusw1	equ	0xFE3
 30445                           fsr1h	equ	0xFE2
 30446                           fsr1l	equ	0xFE1
 30447                           indf2	equ	0xFDF
 30448                           postinc2	equ	0xFDE
 30449                           postdec2	equ	0xFDD
 30450                           plusw2	equ	0xFDB
 30451                           fsr2h	equ	0xFDA
 30452                           fsr2l	equ	0xFD9
 30453                           status	equ	0xFD8
 30454                           
 30455 ;; *************** function _MSDProcessCommandMediaPresent *****************
 30456 ;; Defined at:
 30457 ;;		line 712 in file "usb_device_msd.c"
 30458 ;; Parameters:    Size  Location     Type
 30459 ;;		None
 30460 ;; Auto vars:     Size  Location     Type
 30461 ;;  capacity        4   66[BANK0 ] struct .
 30462 ;;  sectorSize      4   62[BANK0 ] struct .
 30463 ;;  i               1   70[BANK0 ] unsigned char 
 30464 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 30465 ;; Return value:  Size  Location     Type
 30466 ;;                  1    wreg      void 
 30467 ;; Registers used:
 30468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30469 ;; Tracked objects:
 30470 ;;		On entry : 0/0
 30471 ;;		On exit  : 0/0
 30472 ;;		Unchanged: 0/0
 30473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30475 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30477 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30478 ;;Total ram usage:       14 bytes
 30479 ;; Hardware stack levels used:    1
 30480 ;; Hardware stack levels required when called:   17
 30481 ;; This function calls:
 30482 ;;		_ExternalFlash_CapacityRead
 30483 ;;		_ExternalFlash_SectorSizeRead
 30484 ;;		_ExternalFlash_WriteProtectStateGet
 30485 ;;		_MSDCheckForErrorCases
 30486 ;;		_MSDComputeDeviceInAndResidue
 30487 ;;		_MSDErrorHandler
 30488 ;;		_MSDReadHandler
 30489 ;;		_MSDWriteHandler
 30490 ;;		_ResetSenseData
 30491 ;;		_USBTransferOnePacket
 30492 ;;		_memcpy
 30493 ;; This function is called by:
 30494 ;;		_MSDProcessCommand
 30495 ;;		_MSDProcessCommandMediaAbsent
 30496 ;; This function uses a non-reentrant model
 30497 ;;
 30498                           
 30499                           	psect	text138
 30500  00A2FE                     __ptext138:
 30501                           	opt stack 0
 30502  00A2FE                     _MSDProcessCommandMediaPresent:
 30503                           	opt stack 10
 30504                           
 30505                           ;usb_device_msd.c: 714: uint8_t i;
 30506                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 30507                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 30508                           
 30509                           ;incstack = 0
 30510  00A2FE  D1B8               	goto	l634
 30511  00A300                     
 30512                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 30513  00A300  ECB2  F067         	call	_MSDReadHandler	;wreg free
 30514  00A304  0900               	iorlw	0
 30515  00A306  A4D8               	btfss	status,2,c
 30516  00A308  0012               	return	
 30517                           
 30518                           ;usb_device_msd.c: 726: {
 30519                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 30520  00A30A  6853               	setf	_MSDCommandState,c
 30521                           
 30522                           ;usb_device_msd.c: 728: }
 30523                           ;usb_device_msd.c: 729: break;
 30524  00A30C  0012               	return	
 30525  00A30E                     
 30526                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 30527  00A30E  EC47  F05D         	call	_MSDWriteHandler	;wreg free
 30528  00A312  0900               	iorlw	0
 30529  00A314  A4D8               	btfss	status,2,c
 30530  00A316  0012               	return	
 30531                           
 30532                           ;usb_device_msd.c: 737: {
 30533                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 30534  00A318  6853               	setf	_MSDCommandState,c
 30535                           
 30536                           ;usb_device_msd.c: 739: }
 30537                           ;usb_device_msd.c: 740: break;
 30538  00A31A  0012               	return	
 30539  00A31C                     
 30540                           ;usb_device_msd.c: 743: {
 30541                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 30542  00A31C  0451               	decf	_MSDHostNoData,w,c
 30543  00A31E  A4D8               	btfss	status,2,c
 30544  00A320  D002               	goto	l641
 30545                           
 30546                           ;usb_device_msd.c: 749: {
 30547                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 30548  00A322  6853               	setf	_MSDCommandState,c
 30549                           
 30550                           ;usb_device_msd.c: 751: break;
 30551  00A324  0012               	return	
 30552  00A326                     l641:
 30553                           
 30554                           ;usb_device_msd.c: 752: }
 30555                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 30556  00A326  C253  F044         	movff	_gblCBW+18,_TransferLength+1
 30557                           
 30558                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 30559  00A32A  C254  F043         	movff	_gblCBW+19,_TransferLength
 30560                           
 30561                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 30562  00A32E  C043  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 30563  00A332  C044  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 30564  00A336  0100               	movlb	0	; () banked
 30565  00A338  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30566  00A33A  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30567  00A33C  ECE2  F076         	call	_MSDCheckForErrorCases	;wreg free
 30568  00A340  0900               	iorlw	0
 30569  00A342  A4D8               	btfss	status,2,c
 30570  00A344  0012               	return	
 30571                           
 30572                           ;usb_device_msd.c: 762: }
 30573                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 30574                           
 30575                           ;usb_device_msd.c: 760: {
 30576                           ;usb_device_msd.c: 761: break;
 30577  00A346  0E00               	movlw	0
 30578  00A348  0100               	movlb	0	; () banked
 30579  00A34A  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30580  00A34C  0E24               	movlw	36
 30581  00A34E  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30582  00A350  EC58  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30583                           
 30584                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 30585  00A354  0E00               	movlw	0
 30586  00A356  0100               	movlb	0	; () banked
 30587  00A358  6F60               	movwf	memcpy@d1& (0+255),b
 30588  00A35A  0E06               	movlw	6
 30589  00A35C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30590  00A35E  0EDD               	movlw	low _inq_resp
 30591  00A360  6F62               	movwf	memcpy@s1& (0+255),b
 30592  00A362  0E93               	movlw	high _inq_resp
 30593  00A364  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30594  00A366  0E00               	movlw	0
 30595  00A368  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30596  00A36A  0E24               	movlw	36
 30597  00A36C  6F64               	movwf	memcpy@n& (0+255),b
 30598  00A36E  EC1A  F08B         	call	_memcpy	;wreg free
 30599                           
 30600                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 30601  00A372  0EFD               	movlw	253
 30602  00A374  6E53               	movwf	_MSDCommandState,c
 30603                           
 30604                           ;usb_device_msd.c: 773: break;
 30605  00A376  0012               	return	
 30606  00A378                     
 30607                           ;usb_device_msd.c: 776: {
 30608                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 30609                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 30610                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 30611  00A378  C2D4  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 30612  00A37C  C2D5  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 30613  00A380  EE22  F0C2         	lfsr	2,_LUN+3
 30614  00A384  D801               	call	u9958
 30615  00A386  D00A               	goto	u9959
 30616  00A388                     u9958:
 30617  00A388  0005               	push	
 30618  00A38A  6EFA               	movwf	pclath,c
 30619  00A38C  50DE               	movf	postinc2,w,c
 30620  00A38E  6EFD               	movwf	tosl,c
 30621  00A390  50DE               	movf	postinc2,w,c
 30622  00A392  6EFE               	movwf	tosh,c
 30623  00A394  50DE               	movf	postinc2,w,c
 30624  00A396  6EFF               	movwf	tosu,c
 30625  00A398  50FA               	movf	pclath,w,c
 30626  00A39A  0012               	return		;indir
 30627  00A39C                     u9959:
 30628  00A39C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 30629  00A3A0  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 30630  00A3A4  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 30631  00A3A8  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 30632                           
 30633                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 30634  00A3AC  C2D4  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 30635  00A3B0  C2D5  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 30636  00A3B4  EE22  F0C5         	lfsr	2,_LUN+6
 30637  00A3B8  D801               	call	u9968
 30638  00A3BA  D00A               	goto	u9969
 30639  00A3BC                     u9968:
 30640  00A3BC  0005               	push	
 30641  00A3BE  6EFA               	movwf	pclath,c
 30642  00A3C0  50DE               	movf	postinc2,w,c
 30643  00A3C2  6EFD               	movwf	tosl,c
 30644  00A3C4  50DE               	movf	postinc2,w,c
 30645  00A3C6  6EFE               	movwf	tosh,c
 30646  00A3C8  50DE               	movf	postinc2,w,c
 30647  00A3CA  6EFF               	movwf	tosu,c
 30648  00A3CC  50FA               	movf	pclath,w,c
 30649  00A3CE  0012               	return		;indir
 30650  00A3D0                     u9969:
 30651  00A3D0  0100               	movlb	0	; () banked
 30652  00A3D2  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 30653  00A3D6  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 30654  00A3DA  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 30655  00A3DC  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 30656                           
 30657                           ; BSR set to: 0
 30658                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 30659  00A3DE  EE26 F000          	lfsr	2,1536
 30660  00A3E2  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 30661                           
 30662                           ; BSR set to: 0
 30663                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 30664  00A3E6  EE26 F001          	lfsr	2,1537	;volatile
 30665  00A3EA  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 30666                           
 30667                           ; BSR set to: 0
 30668                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 30669  00A3EE  EE26 F002          	lfsr	2,1538	;volatile
 30670  00A3F2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 30671                           
 30672                           ; BSR set to: 0
 30673                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 30674  00A3F6  EE26 F003          	lfsr	2,1539	;volatile
 30675  00A3FA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 30676                           
 30677                           ; BSR set to: 0
 30678                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 30679  00A3FE  EE26 F004          	lfsr	2,1540	;volatile
 30680  00A402  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 30681                           
 30682                           ; BSR set to: 0
 30683                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 30684  00A406  EE26 F005          	lfsr	2,1541	;volatile
 30685  00A40A  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 30686                           
 30687                           ; BSR set to: 0
 30688                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 30689  00A40E  EE26 F006          	lfsr	2,1542	;volatile
 30690  00A412  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 30691                           
 30692                           ; BSR set to: 0
 30693                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 30694  00A416  EE26 F007          	lfsr	2,1543	;volatile
 30695  00A41A  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 30696                           
 30697                           ; BSR set to: 0
 30698                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 30699  00A41E  0E00               	movlw	0
 30700  00A420  6E44               	movwf	_TransferLength+1,c
 30701  00A422  0E08               	movlw	8
 30702  00A424  6E43               	movwf	_TransferLength,c
 30703                           
 30704                           ; BSR set to: 0
 30705                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 30706  00A426  0E00               	movlw	0
 30707  00A428  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30708  00A42A  0E08               	movlw	8
 30709  00A42C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30710  00A42E  EC58  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30711                           
 30712                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 30713  00A432  0EFD               	movlw	253
 30714  00A434  6E53               	movwf	_MSDCommandState,c
 30715                           
 30716                           ;usb_device_msd.c: 802: break;
 30717  00A436  0012               	return	
 30718  00A438                     
 30719                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 30720  00A438  0451               	decf	_MSDHostNoData,w,c
 30721  00A43A  A4D8               	btfss	status,2,c
 30722  00A43C  D002               	goto	l645
 30723                           
 30724                           ;usb_device_msd.c: 812: {
 30725                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 30726  00A43E  6853               	setf	_MSDCommandState,c
 30727                           
 30728                           ;usb_device_msd.c: 814: break;
 30729  00A440  0012               	return	
 30730  00A442                     l645:
 30731                           
 30732                           ;usb_device_msd.c: 815: }
 30733                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 30734  00A442  0E00               	movlw	0
 30735  00A444  6E44               	movwf	_TransferLength+1,c
 30736  00A446  0E12               	movlw	18
 30737  00A448  6E43               	movwf	_TransferLength,c
 30738                           
 30739                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 30740  00A44A  0E00               	movlw	0
 30741  00A44C  0100               	movlb	0	; () banked
 30742  00A44E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30743  00A450  0E12               	movlw	18
 30744  00A452  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30745  00A454  EC58  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30746                           
 30747                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 30748  00A458  0E00               	movlw	0
 30749  00A45A  0100               	movlb	0	; () banked
 30750  00A45C  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 30751  00A45E                     l12318:
 30752                           
 30753                           ; BSR set to: 0
 30754  00A45E  0E11               	movlw	17
 30755  00A460  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 30756  00A462  D001               	goto	l646
 30757  00A464  D014               	goto	u9990
 30758  00A466                     l646:
 30759                           
 30760                           ; BSR set to: 0
 30761                           ;usb_device_msd.c: 823: {
 30762                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 30763                           
 30764                           ; BSR set to: 0
 30765  00A466  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30766  00A468  0D01               	mullw	1
 30767  00A46A  0E60               	movlw	low _gblSenseData
 30768  00A46C  24F3               	addwf	prodl,w,c
 30769  00A46E  6ED9               	movwf	fsr2l,c
 30770  00A470  0E02               	movlw	high _gblSenseData
 30771  00A472  20F4               	addwfc	prodh,w,c
 30772  00A474  6EDA               	movwf	fsr2h,c
 30773  00A476  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30774  00A478  0D01               	mullw	1
 30775  00A47A  0E00               	movlw	0
 30776  00A47C  24F3               	addwf	prodl,w,c
 30777  00A47E  6EE1               	movwf	fsr1l,c
 30778  00A480  0E06               	movlw	6
 30779  00A482  20F4               	addwfc	prodh,w,c
 30780  00A484  6EE2               	movwf	fsr1h,c
 30781  00A486  CFDF FFE7          	movff	indf2,indf1
 30782                           
 30783                           ; BSR set to: 0
 30784  00A48A  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 30785  00A48C  D7E8               	goto	l12318
 30786  00A48E                     u9990:
 30787                           
 30788                           ; BSR set to: 0
 30789                           ;usb_device_msd.c: 825: }
 30790                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 30791                           
 30792                           ; BSR set to: 0
 30793  00A48E  0EFD               	movlw	253
 30794  00A490  6E53               	movwf	_MSDCommandState,c
 30795                           
 30796                           ;usb_device_msd.c: 827: break;
 30797  00A492  0012               	return	
 30798  00A494                     l648:
 30799                           
 30800                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 30801  00A494  0E03               	movlw	3
 30802  00A496  CFE8 F600          	movff	wreg,1536
 30803                           
 30804                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 30805  00A49A  0E00               	movlw	0
 30806  00A49C  CFE8 F601          	movff	wreg,1537	;volatile
 30807                           
 30808                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 30809  00A4A0  C2D4  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 30810  00A4A4  C2D5  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 30811  00A4A8  EE22  F0CE         	lfsr	2,_LUN+15
 30812  00A4AC  D801               	call	u10008
 30813  00A4AE  D00A               	goto	u10009
 30814  00A4B0                     u10008:
 30815  00A4B0  0005               	push	
 30816  00A4B2  6EFA               	movwf	pclath,c
 30817  00A4B4  50DE               	movf	postinc2,w,c
 30818  00A4B6  6EFD               	movwf	tosl,c
 30819  00A4B8  50DE               	movf	postinc2,w,c
 30820  00A4BA  6EFE               	movwf	tosh,c
 30821  00A4BC  50DE               	movf	postinc2,w,c
 30822  00A4BE  6EFF               	movwf	tosu,c
 30823  00A4C0  50FA               	movf	pclath,w,c
 30824  00A4C2  0012               	return		;indir
 30825  00A4C4                     u10009:
 30826  00A4C4  0900               	iorlw	0
 30827  00A4C6  A4D8               	btfss	status,2,c
 30828  00A4C8  D005               	goto	l650
 30829  00A4CA  0E00               	movlw	0
 30830  00A4CC  0100               	movlb	0	; () banked
 30831  00A4CE  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 30832  00A4D0  0E00               	movlw	0
 30833  00A4D2  D004               	goto	L23
 30834  00A4D4                     l650:
 30835                           
 30836                           ; BSR set to: 0
 30837  00A4D4  0E00               	movlw	0
 30838  00A4D6  0100               	movlb	0	; () banked
 30839  00A4D8  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 30840  00A4DA  0E80               	movlw	128
 30841  00A4DC                     L23:
 30842  00A4DC  6F9B               	movwf	_MSDProcessCommandMediaPresent$2712& (0+255),b
 30843                           
 30844                           ; BSR set to: 0
 30845                           
 30846                           ; BSR set to: 0
 30847  00A4DE  EE26 F002          	lfsr	2,1538	;volatile
 30848  00A4E2  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2712,indf2
 30849                           
 30850                           ; BSR set to: 0
 30851                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 30852  00A4E6  0E00               	movlw	0
 30853  00A4E8  CFE8 F603          	movff	wreg,1539	;volatile
 30854                           
 30855                           ; BSR set to: 0
 30856                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 30857  00A4EC  0E00               	movlw	0
 30858  00A4EE  6E44               	movwf	_TransferLength+1,c
 30859  00A4F0  0E04               	movlw	4
 30860  00A4F2  6E43               	movwf	_TransferLength,c
 30861                           
 30862                           ; BSR set to: 0
 30863                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 30864  00A4F4  0E00               	movlw	0
 30865  00A4F6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30866  00A4F8  0E04               	movlw	4
 30867  00A4FA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30868  00A4FC  EC58  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30869                           
 30870                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 30871  00A500  0EFD               	movlw	253
 30872  00A502  6E53               	movwf	_MSDCommandState,c
 30873                           
 30874                           ;usb_device_msd.c: 839: break;
 30875  00A504  0012               	return	
 30876  00A506                     
 30877                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 30878  00A506  0102               	movlb	2	; () banked
 30879  00A508  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30880  00A50A  0BF0               	andlw	-16
 30881  00A50C  0905               	iorlw	5
 30882  00A50E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30883                           
 30884                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 30885  00A510  0E20               	movlw	32
 30886  00A512  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30887                           
 30888                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 30889  00A514  0E00               	movlw	0
 30890  00A516  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30891                           
 30892                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 30893  00A518  0E01               	movlw	1
 30894  00A51A  010D               	movlb	13	; () banked
 30895  00A51C  6F8C               	movwf	140,b	;volatile
 30896                           
 30897                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 30898  00A51E  0E00               	movlw	0
 30899  00A520  6F88               	movwf	136,b	;volatile
 30900  00A522  0E00               	movlw	0
 30901  00A524  6F89               	movwf	137,b	;volatile
 30902  00A526  0E00               	movlw	0
 30903  00A528  6F8A               	movwf	138,b	;volatile
 30904  00A52A  0E00               	movlw	0
 30905  00A52C  6F8B               	movwf	139,b	;volatile
 30906                           
 30907                           ; BSR set to: 13
 30908                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 30909  00A52E  6853               	setf	_MSDCommandState,c
 30910                           
 30911                           ;usb_device_msd.c: 848: break;
 30912  00A530  0012               	return	
 30913  00A532                     
 30914                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 30915                           
 30916                           ; BSR set to: 13
 30917  00A532  0E00               	movlw	0
 30918  00A534  0100               	movlb	0	; () banked
 30919  00A536  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 30920  00A538  0E00               	movlw	0
 30921  00A53A  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 30922  00A53C  0E00               	movlw	0
 30923  00A53E  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30924  00A540  0E00               	movlw	0
 30925  00A542  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30926  00A544  ECE2  F076         	call	_MSDCheckForErrorCases	;wreg free
 30927  00A548  0900               	iorlw	0
 30928  00A54A  A4D8               	btfss	status,2,c
 30929  00A54C  0012               	return	
 30930                           
 30931                           ;usb_device_msd.c: 861: }
 30932                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 30933                           
 30934                           ;usb_device_msd.c: 859: {
 30935                           ;usb_device_msd.c: 860: break;
 30936  00A54E  0102               	movlb	2	; () banked
 30937  00A550  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30938  00A552  0B0F               	andlw	15
 30939  00A554  0A06               	xorlw	6
 30940  00A556  A4D8               	btfss	status,2,c
 30941  00A558  D006               	goto	l656
 30942                           
 30943                           ; BSR set to: 2
 30944  00A55A  010D               	movlb	13	; () banked
 30945  00A55C  058C               	decf	140,w,b	;volatile
 30946  00A55E  A4D8               	btfss	status,2,c
 30947  00A560  D002               	goto	l656
 30948                           
 30949                           ; BSR set to: 13
 30950                           ;usb_device_msd.c: 868: {
 30951                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 30952  00A562  6853               	setf	_MSDCommandState,c
 30953                           
 30954                           ;usb_device_msd.c: 870: }
 30955  00A564  0012               	return	
 30956  00A566                     l656:
 30957                           
 30958                           ;usb_device_msd.c: 871: else
 30959                           ;usb_device_msd.c: 872: {
 30960                           ;usb_device_msd.c: 873: ResetSenseData();
 30961                           
 30962                           ; BSR set to: 13
 30963  00A566  EC56  F08A         	call	_ResetSenseData	;wreg free
 30964                           
 30965                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 30966  00A56A  0E00               	movlw	0
 30967  00A56C  010D               	movlb	13	; () banked
 30968  00A56E  6F88               	movwf	136,b	;volatile
 30969  00A570  0E00               	movlw	0
 30970  00A572  6F89               	movwf	137,b	;volatile
 30971  00A574  0E00               	movlw	0
 30972  00A576  6F8A               	movwf	138,b	;volatile
 30973  00A578  0E00               	movlw	0
 30974  00A57A  6F8B               	movwf	139,b	;volatile
 30975                           
 30976                           ; BSR set to: 13
 30977                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 30978  00A57C  6853               	setf	_MSDCommandState,c
 30979                           
 30980                           ; BSR set to: 13
 30981                           ;usb_device_msd.c: 876: }
 30982                           ;usb_device_msd.c: 877: break;
 30983  00A57E  0012               	return	
 30984  00A580                     
 30985                           ;usb_device_msd.c: 882: case 0x1b:
 30986                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 30987                           
 30988                           ; BSR set to: 13
 30989                           
 30990                           ; BSR set to: 13
 30991  00A580  0E00               	movlw	0
 30992  00A582  010D               	movlb	13	; () banked
 30993  00A584  6F88               	movwf	136,b	;volatile
 30994  00A586  0E00               	movlw	0
 30995  00A588  6F89               	movwf	137,b	;volatile
 30996  00A58A  0E00               	movlw	0
 30997  00A58C  6F8A               	movwf	138,b	;volatile
 30998  00A58E  0E00               	movlw	0
 30999  00A590  6F8B               	movwf	139,b	;volatile
 31000                           
 31001                           ; BSR set to: 13
 31002                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 31003  00A592  6853               	setf	_MSDCommandState,c
 31004                           
 31005                           ;usb_device_msd.c: 885: break;
 31006  00A594  0012               	return	
 31007  00A596                     
 31008                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 31009                           
 31010                           ; BSR set to: 13
 31011  00A596  5045               	movf	_USBMSDInHandle,w,c
 31012  00A598  1046               	iorwf	_USBMSDInHandle+1,w,c
 31013  00A59A  B4D8               	btfsc	status,2,c
 31014  00A59C  D006               	goto	u10060
 31015  00A59E  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 31016  00A5A2  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 31017  00A5A6  BEDF               	btfsc	indf2,7,c
 31018  00A5A8  0012               	return	
 31019  00A5AA                     u10060:
 31020                           
 31021                           ;usb_device_msd.c: 893: {
 31022                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 31023  00A5AA  0102               	movlb	2	; () banked
 31024  00A5AC  514C               	movf	(_gblCBW+11)& (0+255),w,b
 31025  00A5AE  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31026  00A5B0  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31027  00A5B2  E104               	bnz	u10070
 31028  00A5B4  0E40               	movlw	64
 31029  00A5B6  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 31030  00A5B8  A0D8               	btfss	status,0,c
 31031  00A5BA  D00B               	goto	l664
 31032  00A5BC                     u10070:
 31033                           
 31034                           ; BSR set to: 2
 31035                           ;usb_device_msd.c: 897: {
 31036                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 31037  00A5BC  0E40               	movlw	64
 31038  00A5BE  0100               	movlb	0	; () banked
 31039  00A5C0  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 31040                           
 31041                           ; BSR set to: 0
 31042                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 31043  00A5C2  0E40               	movlw	64
 31044  00A5C4  0102               	movlb	2	; () banked
 31045  00A5C6  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 31046  00A5C8  0E00               	movlw	0
 31047  00A5CA  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 31048  00A5CC  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 31049  00A5CE  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 31050                           
 31051                           ;usb_device_msd.c: 900: }
 31052  00A5D0  D00A               	goto	l665
 31053  00A5D2                     l664:
 31054                           
 31055                           ; BSR set to: 2
 31056                           ;usb_device_msd.c: 901: else
 31057                           ;usb_device_msd.c: 902: {
 31058                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 31059  00A5D2  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 31060                           
 31061                           ; BSR set to: 2
 31062                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 31063  00A5D6  0E00               	movlw	0
 31064  00A5D8  6F49               	movwf	(_gblCBW+8)& (0+255),b
 31065  00A5DA  0E00               	movlw	0
 31066  00A5DC  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 31067  00A5DE  0E00               	movlw	0
 31068  00A5E0  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 31069  00A5E2  0E00               	movlw	0
 31070  00A5E4  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 31071  00A5E6                     l665:
 31072                           
 31073                           ; BSR set to: 2
 31074                           ;usb_device_msd.c: 907: }
 31075                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 31076                           
 31077                           ; BSR set to: 2
 31078  00A5E6  0100               	movlb	0	; () banked
 31079  00A5E8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31080  00A5EA  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 31081  00A5EC  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 31082  00A5EE  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 31083  00A5F0  5C43               	subwf	_TransferLength,w,c
 31084  00A5F2  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 31085  00A5F4  5844               	subwfb	_TransferLength+1,w,c
 31086  00A5F6  A0D8               	btfss	status,0,c
 31087  00A5F8  D005               	goto	l666
 31088                           
 31089                           ; BSR set to: 0
 31090                           ;usb_device_msd.c: 915: {
 31091                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 31092  00A5FA  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31093  00A5FC  5E43               	subwf	_TransferLength,f,c
 31094  00A5FE  0E00               	movlw	0
 31095  00A600  5A44               	subwfb	_TransferLength+1,f,c
 31096                           
 31097                           ;usb_device_msd.c: 918: }
 31098  00A602  D01A               	goto	u10100
 31099  00A604                     l666:
 31100                           
 31101                           ; BSR set to: 0
 31102                           ;usb_device_msd.c: 919: else
 31103                           ;usb_device_msd.c: 920: {
 31104                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 31105                           
 31106                           ; BSR set to: 0
 31107  00A604  0E00               	movlw	0
 31108  00A606  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 31109  00A608  D013               	goto	l668
 31110  00A60A                     
 31111                           ; BSR set to: 0
 31112                           ;usb_device_msd.c: 928: {
 31113                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 31114                           
 31115                           ; BSR set to: 0
 31116  00A60A  5043               	movf	_TransferLength,w,c
 31117  00A60C  1044               	iorwf	_TransferLength+1,w,c
 31118  00A60E  B4D8               	btfsc	status,2,c
 31119  00A610  D004               	goto	l670
 31120                           
 31121                           ; BSR set to: 0
 31122                           ;usb_device_msd.c: 930: {
 31123                           ;usb_device_msd.c: 931: TransferLength.Val--;
 31124  00A612  0643               	decf	_TransferLength,f,c
 31125  00A614  A0D8               	btfss	status,0,c
 31126  00A616  0644               	decf	_TransferLength+1,f,c
 31127                           
 31128                           ;usb_device_msd.c: 932: }
 31129  00A618  D00A               	goto	l671
 31130  00A61A                     l670:
 31131                           
 31132                           ; BSR set to: 0
 31133                           ;usb_device_msd.c: 933: else
 31134                           ;usb_device_msd.c: 934: {
 31135                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 31136                           
 31137                           ; BSR set to: 0
 31138  00A61A  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31139  00A61C  0D01               	mullw	1
 31140  00A61E  0E00               	movlw	0
 31141  00A620  24F3               	addwf	prodl,w,c
 31142  00A622  6ED9               	movwf	fsr2l,c
 31143  00A624  0E06               	movlw	6
 31144  00A626  20F4               	addwfc	prodh,w,c
 31145  00A628  6EDA               	movwf	fsr2h,c
 31146  00A62A  0E00               	movlw	0
 31147  00A62C  6EDF               	movwf	indf2,c
 31148  00A62E                     l671:
 31149                           
 31150                           ; BSR set to: 0
 31151                           
 31152                           ; BSR set to: 0
 31153  00A62E  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 31154  00A630                     l668:
 31155                           
 31156                           ; BSR set to: 0
 31157                           
 31158                           ; BSR set to: 0
 31159  00A630  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31160  00A632  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31161  00A634  A0D8               	btfss	status,0,c
 31162  00A636  D7E9               	goto	l669
 31163  00A638                     u10100:
 31164                           
 31165                           ; BSR set to: 0
 31166                           ;usb_device_msd.c: 936: }
 31167                           ;usb_device_msd.c: 937: }
 31168                           ;usb_device_msd.c: 938: }
 31169                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 31170                           
 31171                           ; BSR set to: 0
 31172                           
 31173                           ; BSR set to: 0
 31174  00A638  0E01               	movlw	1
 31175  00A63A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31176  00A63C  0E00               	movlw	0
 31177  00A63E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31178  00A640  0E06               	movlw	6
 31179  00A642  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31180  00A644  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 31181  00A648  0E02               	movlw	2
 31182  00A64A  ECDF  F073         	call	_USBTransferOnePacket
 31183  00A64E  C060  F045         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31184  00A652  C061  F046         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31185                           
 31186                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 31187  00A656  0102               	movlb	2	; () banked
 31188  00A658  5149               	movf	(_gblCBW+8)& (0+255),w,b
 31189  00A65A  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31190  00A65C  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31191  00A65E  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 31192  00A660  A4D8               	btfss	status,2,c
 31193  00A662  0012               	return	
 31194                           
 31195                           ; BSR set to: 2
 31196                           ;usb_device_msd.c: 945: {
 31197                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 31198  00A664  6853               	setf	_MSDCommandState,c
 31199                           
 31200                           ; BSR set to: 2
 31201                           ;usb_device_msd.c: 950: }
 31202                           ;usb_device_msd.c: 951: }
 31203                           ;usb_device_msd.c: 952: break;
 31204                           
 31205                           ; BSR set to: 2
 31206                           
 31207                           ;usb_device_msd.c: 949: break;
 31208  00A666  0012               	return	
 31209  00A668                     
 31210                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 31211                           
 31212                           ; BSR set to: 2
 31213                           
 31214                           ;usb_device_msd.c: 954: default:
 31215                           
 31216                           ; BSR set to: 2
 31217  00A668  0E7F               	movlw	127
 31218  00A66A  EC3B  F071         	call	_MSDErrorHandler
 31219                           
 31220                           ;usb_device_msd.c: 960: }
 31221                           
 31222                           ;usb_device_msd.c: 959: break;
 31223  00A66E  0012               	return	
 31224  00A670                     l634:
 31225  00A670  5053               	movf	_MSDCommandState,w,c
 31226                           
 31227                           ; Switch size 1, requested type "space"
 31228                           ; Number of cases is 12, Range of values is 0 to 254
 31229                           ; switch strategies available:
 31230                           ; Name         Instructions Cycles
 31231                           ; simple_byte           37    19 (average)
 31232                           ;	Chosen strategy is simple_byte
 31233  00A672  0A00               	xorlw	0	; case 0
 31234  00A674  B4D8               	btfsc	status,2,c
 31235  00A676  D75D               	goto	l654
 31236  00A678  0A03               	xorlw	3	; case 3
 31237  00A67A  B4D8               	btfsc	status,2,c
 31238  00A67C  D6DD               	goto	l644
 31239  00A67E  0A11               	xorlw	17	; case 18
 31240  00A680  B4D8               	btfsc	status,2,c
 31241  00A682  D64C               	goto	l640
 31242  00A684  0A08               	xorlw	8	; case 26
 31243  00A686  B4D8               	btfsc	status,2,c
 31244  00A688  D705               	goto	l648
 31245  00A68A  0A01               	xorlw	1	; case 27
 31246  00A68C  B4D8               	btfsc	status,2,c
 31247  00A68E  D778               	goto	l658
 31248  00A690  0A05               	xorlw	5	; case 30
 31249  00A692  B4D8               	btfsc	status,2,c
 31250  00A694  D738               	goto	l653
 31251  00A696  0A3B               	xorlw	59	; case 37
 31252  00A698  B4D8               	btfsc	status,2,c
 31253  00A69A  D66E               	goto	l643
 31254  00A69C  0A0D               	xorlw	13	; case 40
 31255  00A69E  B4D8               	btfsc	status,2,c
 31256  00A6A0  D62F               	goto	l635
 31257  00A6A2  0A02               	xorlw	2	; case 42
 31258  00A6A4  B4D8               	btfsc	status,2,c
 31259  00A6A6  D633               	goto	l638
 31260  00A6A8  0A05               	xorlw	5	; case 47
 31261  00A6AA  B4D8               	btfsc	status,2,c
 31262  00A6AC  D769               	goto	l658
 31263  00A6AE  0AD2               	xorlw	210	; case 253
 31264  00A6B0  B4D8               	btfsc	status,2,c
 31265  00A6B2  D771               	goto	l660
 31266  00A6B4  0A03               	xorlw	3	; case 254
 31267  00A6B6  D7D8               	goto	l674
 31268  00A6B8                     __end_of_MSDProcessCommandMediaPresent:
 31269                           	opt stack 0
 31270                           tosu	equ	0xFFF
 31271                           tosh	equ	0xFFE
 31272                           tosl	equ	0xFFD
 31273                           pclath	equ	0xFFA
 31274                           tblptru	equ	0xFF8
 31275                           tblptrh	equ	0xFF7
 31276                           tblptrl	equ	0xFF6
 31277                           tablat	equ	0xFF5
 31278                           prodh	equ	0xFF4
 31279                           prodl	equ	0xFF3
 31280                           intcon	equ	0xFF2
 31281                           intcon2	equ	0xFF1
 31282                           intcon3	equ	0xFF0
 31283                           postinc0	equ	0xFEE
 31284                           wreg	equ	0xFE8
 31285                           indf1	equ	0xFE7
 31286                           postinc1	equ	0xFE6
 31287                           postdec1	equ	0xFE5
 31288                           plusw1	equ	0xFE3
 31289                           fsr1h	equ	0xFE2
 31290                           fsr1l	equ	0xFE1
 31291                           indf2	equ	0xFDF
 31292                           postinc2	equ	0xFDE
 31293                           postdec2	equ	0xFDD
 31294                           plusw2	equ	0xFDB
 31295                           fsr2h	equ	0xFDA
 31296                           fsr2l	equ	0xFD9
 31297                           status	equ	0xFD8
 31298                           
 31299 ;; *************** function _MSDWriteHandler *****************
 31300 ;; Defined at:
 31301 ;;		line 1188 in file "usb_device_msd.c"
 31302 ;; Parameters:    Size  Location     Type
 31303 ;;		None
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;		None
 31306 ;; Return value:  Size  Location     Type
 31307 ;;                  1    wreg      unsigned char 
 31308 ;; Registers used:
 31309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31310 ;; Tracked objects:
 31311 ;;		On entry : 0/0
 31312 ;;		On exit  : 0/0
 31313 ;;		Unchanged: 0/0
 31314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31317 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31318 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31319 ;;Total ram usage:        5 bytes
 31320 ;; Hardware stack levels used:    1
 31321 ;; Hardware stack levels required when called:   16
 31322 ;; This function calls:
 31323 ;;		_ExternalFlash_SectorWrite
 31324 ;;		_ExternalFlash_WriteProtectStateGet
 31325 ;;		_MSDCheckForErrorCases
 31326 ;;		_USBStallEndpoint
 31327 ;;		_USBTransferOnePacket
 31328 ;; This function is called by:
 31329 ;;		_MSDProcessCommandMediaPresent
 31330 ;; This function uses a non-reentrant model
 31331 ;;
 31332                           
 31333                           	psect	text139
 31334  00BA8E                     __ptext139:
 31335                           	opt stack 0
 31336  00BA8E                     _MSDWriteHandler:
 31337                           	opt stack 10
 31338                           
 31339                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 31340                           
 31341                           ;incstack = 0
 31342  00BA8E  D157               	goto	l704
 31343  00BA90                     l705:
 31344                           
 31345                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 31346  00BA90  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 31347                           
 31348                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 31349  00BA94  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 31350                           
 31351                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 31352  00BA98  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 31353                           
 31354                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 31355  00BA9C  C255  F1D9         	movff	_gblCBW+20,_LBA
 31356                           
 31357                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 31358  00BAA0  C257  F044         	movff	_gblCBW+22,_TransferLength+1
 31359                           
 31360                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 31361  00BAA4  C258  F043         	movff	_gblCBW+23,_TransferLength
 31362                           
 31363                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 31364  00BAA8  5043               	movf	_TransferLength,w,c
 31365  00BAAA  0100               	movlb	0	; () banked
 31366  00BAAC  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31367  00BAAE  5044               	movf	_TransferLength+1,w,c
 31368  00BAB0  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 31369  00BAB2  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31370  00BAB4  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31371  00BAB6  0E09               	movlw	9
 31372  00BAB8                     u9085:
 31373  00BAB8  90D8               	bcf	status,0,c
 31374  00BABA  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 31375  00BABC  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 31376  00BABE  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 31377  00BAC0  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 31378  00BAC2  2EE8               	decfsz	wreg,f,c
 31379  00BAC4  D7F9               	goto	u9085
 31380  00BAC6  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 31381  00BACA  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 31382  00BACE  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 31383  00BAD2  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 31384  00BAD6  ECE2  F076         	call	_MSDCheckForErrorCases	;wreg free
 31385  00BADA  0900               	iorlw	0
 31386  00BADC  A4D8               	btfss	status,2,c
 31387  00BADE  D140               	goto	l707
 31388                           
 31389                           ;usb_device_msd.c: 1208: }
 31390                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 31391                           
 31392                           ;usb_device_msd.c: 1204: {
 31393                           ;usb_device_msd.c: 1207: break;
 31394  00BAE0  C2D4  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31395  00BAE4  C2D5  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31396  00BAE8  EE22  F0CE         	lfsr	2,_LUN+15
 31397  00BAEC  D801               	call	u9108
 31398  00BAEE  D00A               	goto	u9109
 31399  00BAF0                     u9108:
 31400  00BAF0  0005               	push	
 31401  00BAF2  6EFA               	movwf	pclath,c
 31402  00BAF4  50DE               	movf	postinc2,w,c
 31403  00BAF6  6EFD               	movwf	tosl,c
 31404  00BAF8  50DE               	movf	postinc2,w,c
 31405  00BAFA  6EFE               	movwf	tosh,c
 31406  00BAFC  50DE               	movf	postinc2,w,c
 31407  00BAFE  6EFF               	movwf	tosu,c
 31408  00BB00  50FA               	movf	pclath,w,c
 31409  00BB02  0012               	return		;indir
 31410  00BB04                     u9109:
 31411  00BB04  0900               	iorlw	0
 31412  00BB06  B4D8               	btfsc	status,2,c
 31413  00BB08  D016               	goto	l708
 31414                           
 31415                           ;usb_device_msd.c: 1213: {
 31416                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 31417  00BB0A  0E01               	movlw	1
 31418  00BB0C  010D               	movlb	13	; () banked
 31419  00BB0E  6F8C               	movwf	140,b	;volatile
 31420                           
 31421                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 31422  00BB10  0102               	movlb	2	; () banked
 31423  00BB12  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31424  00BB14  0BF0               	andlw	-16
 31425  00BB16  0907               	iorlw	7
 31426  00BB18  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31427                           
 31428                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 31429  00BB1A  0E27               	movlw	39
 31430  00BB1C  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31431                           
 31432                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 31433  00BB1E  0E00               	movlw	0
 31434  00BB20  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31435                           
 31436                           ; BSR set to: 2
 31437                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 31438  00BB22  0E00               	movlw	0
 31439  00BB24  0100               	movlb	0	; () banked
 31440  00BB26  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31441  00BB28  0E02               	movlw	2
 31442  00BB2A  ECD6  F072         	call	_USBStallEndpoint
 31443                           
 31444                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 31445  00BB2E  0E00               	movlw	0
 31446  00BB30  6E52               	movwf	_MSDWriteState,c
 31447                           
 31448                           ;usb_device_msd.c: 1228: return MSDWriteState;
 31449  00BB32  5052               	movf	_MSDWriteState,w,c
 31450  00BB34  0012               	return	
 31451  00BB36                     l708:
 31452                           
 31453                           ;usb_device_msd.c: 1229: }
 31454                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 31455  00BB36  0E01               	movlw	1
 31456  00BB38  6E54               	movwf	_MSD_State,c
 31457  00BB3A                     
 31458                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 31459  00BB3A  5043               	movf	_TransferLength,w,c
 31460  00BB3C  1044               	iorwf	_TransferLength+1,w,c
 31461  00BB3E  B4D8               	btfsc	status,2,c
 31462  00BB40  D0FB               	goto	l11884
 31463                           
 31464                           ;usb_device_msd.c: 1239: }
 31465                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 31466                           
 31467                           ;usb_device_msd.c: 1238: break;
 31468                           
 31469                           ;usb_device_msd.c: 1236: {
 31470                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 31471  00BB42  0E03               	movlw	3
 31472  00BB44  6E52               	movwf	_MSDWriteState,c
 31473                           
 31474                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 31475  00BB46  0E00               	movlw	0
 31476  00BB48  0101               	movlb	1	; () banked
 31477  00BB4A  6FE7               	movwf	_ptrNextData& (0+255),b
 31478  00BB4C  0E06               	movlw	6
 31479  00BB4E  6FE8               	movwf	(_ptrNextData+1)& (0+255),b
 31480                           
 31481                           ; BSR set to: 1
 31482                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 31483  00BB50  0E00               	movlw	0
 31484  00BB52  010D               	movlb	13	; () banked
 31485  00BB54  6F88               	movwf	136,b	;volatile
 31486  00BB56  0E02               	movlw	2
 31487  00BB58  6F89               	movwf	137,b	;volatile
 31488  00BB5A  0E00               	movlw	0
 31489  00BB5C  6F8A               	movwf	138,b	;volatile
 31490  00BB5E  0E00               	movlw	0
 31491  00BB60  6F8B               	movwf	139,b	;volatile
 31492  00BB62                     l712:
 31493                           
 31494                           ;usb_device_msd.c: 1248: {
 31495                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 31496  00BB62  010D               	movlb	13	; () banked
 31497  00BB64  5188               	movf	136,w,b	;volatile
 31498  00BB66  1189               	iorwf	137,w,b	;volatile
 31499  00BB68  118A               	iorwf	138,w,b	;volatile
 31500  00BB6A  118B               	iorwf	139,w,b	;volatile
 31501  00BB6C  B4D8               	btfsc	status,2,c
 31502  00BB6E  D01D               	goto	l713
 31503                           
 31504                           ; BSR set to: 13
 31505                           ;usb_device_msd.c: 1251: {
 31506                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 31507  00BB70  5047               	movf	_USBMSDOutHandle,w,c
 31508  00BB72  1048               	iorwf	_USBMSDOutHandle+1,w,c
 31509  00BB74  B4D8               	btfsc	status,2,c
 31510  00BB76  D006               	goto	l714
 31511                           
 31512                           ; BSR set to: 13
 31513  00BB78  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31514  00BB7C  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31515  00BB80  BEDF               	btfsc	indf2,7,c
 31516  00BB82  D0EE               	goto	l707
 31517  00BB84                     l714:
 31518                           
 31519                           ; BSR set to: 13
 31520                           ;usb_device_msd.c: 1255: }
 31521                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 31522                           
 31523                           ; BSR set to: 13
 31524  00BB84  0E00               	movlw	0
 31525  00BB86  0100               	movlb	0	; () banked
 31526  00BB88  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31527  00BB8A  C1E7  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 31528  00BB8E  C1E8  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 31529  00BB92  0E40               	movlw	64
 31530  00BB94  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31531  00BB96  0E02               	movlw	2
 31532  00BB98  ECDF  F073         	call	_USBTransferOnePacket
 31533  00BB9C  C060  F047         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31534  00BBA0  C061  F048         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31535                           
 31536                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 31537  00BBA4  0E04               	movlw	4
 31538  00BBA6  6E52               	movwf	_MSDWriteState,c
 31539                           
 31540                           ;usb_device_msd.c: 1260: }
 31541  00BBA8  D023               	goto	l715
 31542  00BBAA                     l713:
 31543                           
 31544                           ;usb_device_msd.c: 1261: else
 31545                           ;usb_device_msd.c: 1262: {
 31546                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 31547  00BBAA  C2D4  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31548  00BBAE  C2D5  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31549  00BBB2  EE22  F0CE         	lfsr	2,_LUN+15
 31550  00BBB6  D801               	call	u9168
 31551  00BBB8  D00A               	goto	u9169
 31552  00BBBA                     u9168:
 31553  00BBBA  0005               	push	
 31554  00BBBC  6EFA               	movwf	pclath,c
 31555  00BBBE  50DE               	movf	postinc2,w,c
 31556  00BBC0  6EFD               	movwf	tosl,c
 31557  00BBC2  50DE               	movf	postinc2,w,c
 31558  00BBC4  6EFE               	movwf	tosh,c
 31559  00BBC6  50DE               	movf	postinc2,w,c
 31560  00BBC8  6EFF               	movwf	tosu,c
 31561  00BBCA  50FA               	movf	pclath,w,c
 31562  00BBCC  0012               	return		;indir
 31563  00BBCE                     u9169:
 31564  00BBCE  0900               	iorlw	0
 31565  00BBD0  B4D8               	btfsc	status,2,c
 31566  00BBD2  D00C               	goto	l716
 31567                           
 31568                           ;usb_device_msd.c: 1267: {
 31569                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 31570  00BBD4  0E01               	movlw	1
 31571  00BBD6  010D               	movlb	13	; () banked
 31572  00BBD8  6F8C               	movwf	140,b	;volatile
 31573                           
 31574                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 31575  00BBDA  0102               	movlb	2	; () banked
 31576  00BBDC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31577  00BBDE  0BF0               	andlw	-16
 31578  00BBE0  0902               	iorlw	2
 31579  00BBE2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31580                           
 31581                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 31582  00BBE4  0E27               	movlw	39
 31583  00BBE6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31584                           
 31585                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 31586  00BBE8  0E00               	movlw	0
 31587  00BBEA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31588  00BBEC                     l716:
 31589                           
 31590                           ;usb_device_msd.c: 1277: }
 31591                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 31592  00BBEC  0E02               	movlw	2
 31593  00BBEE  D0A5               	goto	L27
 31594  00BBF0                     l715:
 31595                           
 31596                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 31597                           
 31598                           ;usb_device_msd.c: 1281: }
 31599                           ;usb_device_msd.c: 1282: }
 31600                           ;usb_device_msd.c: 1284: case 0x04:
 31601  00BBF0  5047               	movf	_USBMSDOutHandle,w,c
 31602  00BBF2  1048               	iorwf	_USBMSDOutHandle+1,w,c
 31603  00BBF4  B4D8               	btfsc	status,2,c
 31604  00BBF6  D006               	goto	l718
 31605  00BBF8  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31606  00BBFC  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31607  00BC00  BEDF               	btfsc	indf2,7,c
 31608  00BC02  D0AE               	goto	l707
 31609  00BC04                     l718:
 31610                           
 31611                           ;usb_device_msd.c: 1288: }
 31612                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 31613  00BC04  EE20 F001          	lfsr	2,1
 31614  00BC08  5047               	movf	_USBMSDOutHandle,w,c
 31615  00BC0A  26D9               	addwf	fsr2l,f,c
 31616  00BC0C  5048               	movf	_USBMSDOutHandle+1,w,c
 31617  00BC0E  22DA               	addwfc	fsr2h,f,c
 31618  00BC10  50DF               	movf	indf2,w,c
 31619  00BC12  0100               	movlb	0	; () banked
 31620  00BC14  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31621  00BC16  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 31622  00BC1A  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31623  00BC1C  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31624  00BC1E  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 31625  00BC20  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 31626  00BC22  0102               	movlb	2	; () banked
 31627  00BC24  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 31628  00BC26  0100               	movlb	0	; () banked
 31629  00BC28  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 31630  00BC2A  0102               	movlb	2	; () banked
 31631  00BC2C  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 31632  00BC2E  0100               	movlb	0	; () banked
 31633  00BC30  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 31634  00BC32  0102               	movlb	2	; () banked
 31635  00BC34  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 31636  00BC36  0100               	movlb	0	; () banked
 31637  00BC38  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 31638  00BC3A  0102               	movlb	2	; () banked
 31639  00BC3C  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 31640                           
 31641                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 31642  00BC3E  EE20 F001          	lfsr	2,1
 31643  00BC42  5047               	movf	_USBMSDOutHandle,w,c
 31644  00BC44  26D9               	addwf	fsr2l,f,c
 31645  00BC46  5048               	movf	_USBMSDOutHandle+1,w,c
 31646  00BC48  22DA               	addwfc	fsr2h,f,c
 31647  00BC4A  50DF               	movf	indf2,w,c
 31648  00BC4C  0100               	movlb	0	; () banked
 31649  00BC4E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31650  00BC50  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 31651  00BC54  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31652  00BC56  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31653  00BC58  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 31654  00BC5A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 31655  00BC5C  010D               	movlb	13	; () banked
 31656  00BC5E  5F88               	subwf	136,f,b	;volatile
 31657  00BC60  0100               	movlb	0	; () banked
 31658  00BC62  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 31659  00BC64  010D               	movlb	13	; () banked
 31660  00BC66  5B89               	subwfb	137,f,b	;volatile
 31661  00BC68  0100               	movlb	0	; () banked
 31662  00BC6A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 31663  00BC6C  010D               	movlb	13	; () banked
 31664  00BC6E  5B8A               	subwfb	138,f,b	;volatile
 31665  00BC70  0100               	movlb	0	; () banked
 31666  00BC72  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 31667  00BC74  010D               	movlb	13	; () banked
 31668  00BC76  5B8B               	subwfb	139,f,b	;volatile
 31669                           
 31670                           ; BSR set to: 13
 31671                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 31672  00BC78  0E40               	movlw	64
 31673  00BC7A  0101               	movlb	1	; () banked
 31674  00BC7C  27E7               	addwf	_ptrNextData& (0+255),f,b
 31675  00BC7E  0E00               	movlw	0
 31676  00BC80  23E8               	addwfc	(_ptrNextData+1)& (0+255),f,b
 31677                           
 31678                           ; BSR set to: 1
 31679                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 31680  00BC82  0E03               	movlw	3
 31681  00BC84  D05A               	goto	L27
 31682  00BC86                     
 31683                           ;usb_device_msd.c: 1298: {
 31684                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 31685                           
 31686                           ; BSR set to: 1
 31687  00BC86  010D               	movlb	13	; () banked
 31688  00BC88  518C               	movf	140,w,b	;volatile
 31689  00BC8A  A4D8               	btfss	status,2,c
 31690  00BC8C  D040               	goto	l723
 31691                           
 31692                           ; BSR set to: 13
 31693                           ;usb_device_msd.c: 1306: {
 31694                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 31695  00BC8E  C2D4  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 31696  00BC92  C2D5  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 31697  00BC96  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 31698  00BC9A  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 31699  00BC9E  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 31700  00BCA2  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 31701  00BCA6  0E00               	movlw	0
 31702  00BCA8  0100               	movlb	0	; () banked
 31703  00BCAA  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 31704  00BCAC  0E06               	movlw	6
 31705  00BCAE  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 31706  00BCB0  0101               	movlb	1	; () banked
 31707  00BCB2  51D9               	movf	_LBA& (0+255),w,b
 31708  00BCB4  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 31709  00BCB6  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 31710  00BCB8  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 31711  00BCBA  A4D8               	btfss	status,2,c
 31712  00BCBC  D002               	goto	u9210
 31713  00BCBE  0E01               	movlw	1
 31714  00BCC0  D001               	goto	u9220
 31715  00BCC2                     u9210:
 31716  00BCC2  0E00               	movlw	0
 31717  00BCC4                     u9220:
 31718  00BCC4  0100               	movlb	0	; () banked
 31719  00BCC6  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 31720  00BCC8  EE22  F0D1         	lfsr	2,_LUN+18
 31721  00BCCC  D801               	call	u9238
 31722  00BCCE  D00A               	goto	u9239
 31723  00BCD0                     u9238:
 31724  00BCD0  0005               	push	
 31725  00BCD2  6EFA               	movwf	pclath,c
 31726  00BCD4  50DE               	movf	postinc2,w,c
 31727  00BCD6  6EFD               	movwf	tosl,c
 31728  00BCD8  50DE               	movf	postinc2,w,c
 31729  00BCDA  6EFE               	movwf	tosh,c
 31730  00BCDC  50DE               	movf	postinc2,w,c
 31731  00BCDE  6EFF               	movwf	tosu,c
 31732  00BCE0  50FA               	movf	pclath,w,c
 31733  00BCE2  0012               	return		;indir
 31734  00BCE4                     u9239:
 31735  00BCE4  06E8               	decf	wreg,f,c
 31736  00BCE6  B4D8               	btfsc	status,2,c
 31737  00BCE8  D012               	goto	l723
 31738                           
 31739                           ;usb_device_msd.c: 1308: {
 31740                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 31741  00BCEA  0E64               	movlw	100
 31742  00BCEC  0101               	movlb	1	; () banked
 31743  00BCEE  61F4               	cpfslt	_MSDRetryAttempt& (0+255),b
 31744  00BCF0  D002               	goto	l722
 31745                           
 31746                           ; BSR set to: 1
 31747                           ;usb_device_msd.c: 1312: {
 31748                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 31749  00BCF2  2BF4               	incf	_MSDRetryAttempt& (0+255),f,b
 31750                           
 31751                           ;usb_device_msd.c: 1314: break;
 31752  00BCF4  D035               	goto	l707
 31753  00BCF6                     l722:
 31754                           
 31755                           ; BSR set to: 1
 31756                           ;usb_device_msd.c: 1316: else
 31757                           ;usb_device_msd.c: 1317: {
 31758                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 31759                           
 31760                           ; BSR set to: 1
 31761  00BCF6  0E01               	movlw	1
 31762  00BCF8  010D               	movlb	13	; () banked
 31763  00BCFA  6F8C               	movwf	140,b	;volatile
 31764                           
 31765                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 31766  00BCFC  0102               	movlb	2	; () banked
 31767  00BCFE  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31768  00BD00  0BF0               	andlw	-16
 31769  00BD02  0903               	iorlw	3
 31770  00BD04  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31771                           
 31772                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 31773  00BD06  0E00               	movlw	0
 31774  00BD08  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31775                           
 31776                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 31777  00BD0A  0E00               	movlw	0
 31778  00BD0C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31779  00BD0E                     l723:
 31780                           
 31781                           ;usb_device_msd.c: 1326: }
 31782                           ;usb_device_msd.c: 1327: }
 31783                           ;usb_device_msd.c: 1328: }
 31784                           ;usb_device_msd.c: 1332: LBA.Val++;
 31785                           
 31786                           ; BSR set to: 2
 31787                           
 31788                           ; BSR set to: 2
 31789                           
 31790                           ; BSR set to: 2
 31791  00BD0E  0E01               	movlw	1
 31792  00BD10  0101               	movlb	1	; () banked
 31793  00BD12  27D9               	addwf	_LBA& (0+255),f,b
 31794  00BD14  0E00               	movlw	0
 31795  00BD16  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 31796  00BD18  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 31797  00BD1A  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 31798                           
 31799                           ; BSR set to: 1
 31800                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 31801  00BD1C  0643               	decf	_TransferLength,f,c
 31802  00BD1E  A0D8               	btfss	status,0,c
 31803  00BD20  0644               	decf	_TransferLength+1,f,c
 31804                           
 31805                           ; BSR set to: 1
 31806                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 31807  00BD22  0E01               	movlw	1
 31808  00BD24  D00A               	goto	L27
 31809  00BD26                     
 31810                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 31811                           
 31812                           ; BSR set to: 1
 31813  00BD26  0E02               	movlw	2
 31814  00BD28  010D               	movlb	13	; () banked
 31815  00BD2A  6F8C               	movwf	140,b	;volatile
 31816                           
 31817                           ; BSR set to: 13
 31818                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 31819  00BD2C  0E00               	movlw	0
 31820  00BD2E  0100               	movlb	0	; () banked
 31821  00BD30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31822  00BD32  0E02               	movlw	2
 31823  00BD34  ECD6  F072         	call	_USBStallEndpoint
 31824  00BD38                     l11884:
 31825                           
 31826                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 31827  00BD38  0E00               	movlw	0
 31828  00BD3A                     L27:
 31829  00BD3A  6E52               	movwf	_MSDWriteState,c
 31830                           
 31831                           ;usb_device_msd.c: 1345: }
 31832                           
 31833                           ;usb_device_msd.c: 1344: break;
 31834  00BD3C  D011               	goto	l707
 31835  00BD3E                     l704:
 31836  00BD3E  5052               	movf	_MSDWriteState,w,c
 31837                           
 31838                           ; Switch size 1, requested type "space"
 31839                           ; Number of cases is 5, Range of values is 0 to 4
 31840                           ; switch strategies available:
 31841                           ; Name         Instructions Cycles
 31842                           ; simple_byte           16     9 (average)
 31843                           ;	Chosen strategy is simple_byte
 31844  00BD40  0A00               	xorlw	0	; case 0
 31845  00BD42  B4D8               	btfsc	status,2,c
 31846  00BD44  D6A5               	goto	l705
 31847  00BD46  0A01               	xorlw	1	; case 1
 31848  00BD48  B4D8               	btfsc	status,2,c
 31849  00BD4A  D6F7               	goto	l710
 31850  00BD4C  0A03               	xorlw	3	; case 2
 31851  00BD4E  B4D8               	btfsc	status,2,c
 31852  00BD50  D79A               	goto	l719
 31853  00BD52  0A01               	xorlw	1	; case 3
 31854  00BD54  B4D8               	btfsc	status,2,c
 31855  00BD56  D705               	goto	l712
 31856  00BD58  0A07               	xorlw	7	; case 4
 31857  00BD5A  B4D8               	btfsc	status,2,c
 31858  00BD5C  D749               	goto	l715
 31859  00BD5E  D7E3               	goto	l724
 31860  00BD60                     l707:
 31861                           
 31862                           ;usb_device_msd.c: 1347: return MSDWriteState;
 31863  00BD60  5052               	movf	_MSDWriteState,w,c
 31864  00BD62  0012               	return	
 31865  00BD64                     __end_of_MSDWriteHandler:
 31866                           	opt stack 0
 31867                           tosu	equ	0xFFF
 31868                           tosh	equ	0xFFE
 31869                           tosl	equ	0xFFD
 31870                           pclath	equ	0xFFA
 31871                           tblptru	equ	0xFF8
 31872                           tblptrh	equ	0xFF7
 31873                           tblptrl	equ	0xFF6
 31874                           tablat	equ	0xFF5
 31875                           prodh	equ	0xFF4
 31876                           prodl	equ	0xFF3
 31877                           intcon	equ	0xFF2
 31878                           intcon2	equ	0xFF1
 31879                           intcon3	equ	0xFF0
 31880                           postinc0	equ	0xFEE
 31881                           wreg	equ	0xFE8
 31882                           indf1	equ	0xFE7
 31883                           postinc1	equ	0xFE6
 31884                           postdec1	equ	0xFE5
 31885                           plusw1	equ	0xFE3
 31886                           fsr1h	equ	0xFE2
 31887                           fsr1l	equ	0xFE1
 31888                           indf2	equ	0xFDF
 31889                           postinc2	equ	0xFDE
 31890                           postdec2	equ	0xFDD
 31891                           plusw2	equ	0xFDB
 31892                           fsr2h	equ	0xFDA
 31893                           fsr2l	equ	0xFD9
 31894                           status	equ	0xFD8
 31895                           
 31896 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 31897 ;; Defined at:
 31898 ;;		line 34 in file "external_flash.c"
 31899 ;; Parameters:    Size  Location     Type
 31900 ;;  config          2    0[BANK0 ] PTR void 
 31901 ;;		 -> NULL(0), 
 31902 ;; Auto vars:     Size  Location     Type
 31903 ;;		None
 31904 ;; Return value:  Size  Location     Type
 31905 ;;                  1    wreg      unsigned char 
 31906 ;; Registers used:
 31907 ;;		wreg
 31908 ;; Tracked objects:
 31909 ;;		On entry : 0/0
 31910 ;;		On exit  : 0/0
 31911 ;;		Unchanged: 0/0
 31912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31917 ;;Total ram usage:        2 bytes
 31918 ;; Hardware stack levels used:    1
 31919 ;; Hardware stack levels required when called:   10
 31920 ;; This function calls:
 31921 ;;		Nothing
 31922 ;; This function is called by:
 31923 ;;		_MSDWriteHandler
 31924 ;;		_MSDProcessCommandMediaPresent
 31925 ;; This function uses a non-reentrant model
 31926 ;;
 31927                           
 31928                           	psect	text140
 31929  012E1C                     __ptext140:
 31930                           	opt stack 0
 31931  012E1C                     _ExternalFlash_WriteProtectStateGet:
 31932                           	opt stack 15
 31933                           
 31934                           ;external_flash.c: 37: return 0;
 31935                           
 31936                           ;incstack = 0
 31937  012E1C  0E00               	movlw	0
 31938  012E1E  0012               	return	
 31939  012E20                     __end_of_ExternalFlash_WriteProtectStateGet:
 31940                           	opt stack 0
 31941                           tosu	equ	0xFFF
 31942                           tosh	equ	0xFFE
 31943                           tosl	equ	0xFFD
 31944                           pclath	equ	0xFFA
 31945                           tblptru	equ	0xFF8
 31946                           tblptrh	equ	0xFF7
 31947                           tblptrl	equ	0xFF6
 31948                           tablat	equ	0xFF5
 31949                           prodh	equ	0xFF4
 31950                           prodl	equ	0xFF3
 31951                           intcon	equ	0xFF2
 31952                           intcon2	equ	0xFF1
 31953                           intcon3	equ	0xFF0
 31954                           postinc0	equ	0xFEE
 31955                           wreg	equ	0xFE8
 31956                           indf1	equ	0xFE7
 31957                           postinc1	equ	0xFE6
 31958                           postdec1	equ	0xFE5
 31959                           plusw1	equ	0xFE3
 31960                           fsr1h	equ	0xFE2
 31961                           fsr1l	equ	0xFE1
 31962                           indf2	equ	0xFDF
 31963                           postinc2	equ	0xFDE
 31964                           postdec2	equ	0xFDD
 31965                           plusw2	equ	0xFDB
 31966                           fsr2h	equ	0xFDA
 31967                           fsr2l	equ	0xFD9
 31968                           status	equ	0xFD8
 31969                           
 31970 ;; *************** function _ExternalFlash_SectorWrite *****************
 31971 ;; Defined at:
 31972 ;;		line 104 in file "external_flash.c"
 31973 ;; Parameters:    Size  Location     Type
 31974 ;;  config          2   36[BANK0 ] PTR void 
 31975 ;;		 -> NULL(0), 
 31976 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 31977 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 31978 ;;		 -> msd_buffer(512), 
 31979 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 31980 ;; Auto vars:     Size  Location     Type
 31981 ;;  page            2   45[BANK0 ] unsigned int 
 31982 ;; Return value:  Size  Location     Type
 31983 ;;                  1    wreg      unsigned char 
 31984 ;; Registers used:
 31985 ;;		wreg, status,2, status,0, cstack
 31986 ;; Tracked objects:
 31987 ;;		On entry : 0/0
 31988 ;;		On exit  : 0/0
 31989 ;;		Unchanged: 0/0
 31990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31991 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31994 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31995 ;;Total ram usage:       11 bytes
 31996 ;; Hardware stack levels used:    1
 31997 ;; Hardware stack levels required when called:   15
 31998 ;; This function calls:
 31999 ;;		_flash_page_write
 32000 ;; This function is called by:
 32001 ;;		_MSDWriteHandler
 32002 ;; This function uses a non-reentrant model
 32003 ;;
 32004                           
 32005                           	psect	text141
 32006  0123CC                     __ptext141:
 32007                           	opt stack 0
 32008  0123CC                     _ExternalFlash_SectorWrite:
 32009                           	opt stack 10
 32010                           
 32011                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 32012                           
 32013                           ;incstack = 0
 32014  0123CC  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 32015  0123D0  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 32016                           
 32017                           ;external_flash.c: 110: if(sector_addr >= 4096)
 32018  0123D4  0100               	movlb	0	; () banked
 32019  0123D6  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 32020  0123D8  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 32021  0123DA  E104               	bnz	u8840
 32022  0123DC  0E10               	movlw	16
 32023  0123DE  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 32024  0123E0  A0D8               	btfss	status,0,c
 32025  0123E2  D002               	goto	l2891
 32026  0123E4                     u8840:
 32027                           
 32028                           ; BSR set to: 0
 32029                           ;external_flash.c: 111: {
 32030                           ;external_flash.c: 112: return 0;
 32031  0123E4  0E00               	movlw	0
 32032                           
 32033                           ; BSR set to: 0
 32034  0123E6  0012               	return	
 32035  0123E8                     l2891:
 32036                           
 32037                           ; BSR set to: 0
 32038                           ;external_flash.c: 113: }
 32039                           ;external_flash.c: 141: flash_page_write(page, buffer);
 32040                           
 32041                           ; BSR set to: 0
 32042  0123E8  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 32043  0123EC  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 32044  0123F0  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 32045  0123F4  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 32046  0123F8  EC8C  F08E         	call	_flash_page_write	;wreg free
 32047                           
 32048                           ;external_flash.c: 143: return 1;
 32049  0123FC  0E01               	movlw	1
 32050  0123FE  0012               	return	
 32051  012400                     __end_of_ExternalFlash_SectorWrite:
 32052                           	opt stack 0
 32053                           tosu	equ	0xFFF
 32054                           tosh	equ	0xFFE
 32055                           tosl	equ	0xFFD
 32056                           pclath	equ	0xFFA
 32057                           tblptru	equ	0xFF8
 32058                           tblptrh	equ	0xFF7
 32059                           tblptrl	equ	0xFF6
 32060                           tablat	equ	0xFF5
 32061                           prodh	equ	0xFF4
 32062                           prodl	equ	0xFF3
 32063                           intcon	equ	0xFF2
 32064                           intcon2	equ	0xFF1
 32065                           intcon3	equ	0xFF0
 32066                           postinc0	equ	0xFEE
 32067                           wreg	equ	0xFE8
 32068                           indf1	equ	0xFE7
 32069                           postinc1	equ	0xFE6
 32070                           postdec1	equ	0xFE5
 32071                           plusw1	equ	0xFE3
 32072                           fsr1h	equ	0xFE2
 32073                           fsr1l	equ	0xFE1
 32074                           indf2	equ	0xFDF
 32075                           postinc2	equ	0xFDE
 32076                           postdec2	equ	0xFDD
 32077                           plusw2	equ	0xFDB
 32078                           fsr2h	equ	0xFDA
 32079                           fsr2l	equ	0xFD9
 32080                           status	equ	0xFD8
 32081                           
 32082 ;; *************** function _flash_page_write *****************
 32083 ;; Defined at:
 32084 ;;		line 546 in file "flash.c"
 32085 ;; Parameters:    Size  Location     Type
 32086 ;;  page            2   31[BANK0 ] unsigned int 
 32087 ;;  data            2   33[BANK0 ] PTR unsigned char 
 32088 ;;		 -> buffer(512), msd_buffer(512), 
 32089 ;; Auto vars:     Size  Location     Type
 32090 ;;  match           1   35[BANK0 ] enum E8341
 32091 ;; Return value:  Size  Location     Type
 32092 ;;                  1    wreg      void 
 32093 ;; Registers used:
 32094 ;;		wreg, status,2, status,0, cstack
 32095 ;; Tracked objects:
 32096 ;;		On entry : 0/0
 32097 ;;		On exit  : 0/0
 32098 ;;		Unchanged: 0/0
 32099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32103 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32104 ;;Total ram usage:        5 bytes
 32105 ;; Hardware stack levels used:    1
 32106 ;; Hardware stack levels required when called:   14
 32107 ;; This function calls:
 32108 ;;		__flash_compare_page_to_buffer
 32109 ;;		__flash_write_page_from_buffer
 32110 ;;		__flash_write_to_buffer
 32111 ;; This function is called by:
 32112 ;;		_ExternalFlash_SectorWrite
 32113 ;;		_fat_format
 32114 ;; This function uses a non-reentrant model
 32115 ;;
 32116                           
 32117                           	psect	text142
 32118  011D18                     __ptext142:
 32119                           	opt stack 0
 32120  011D18                     _flash_page_write:
 32121                           	opt stack 10
 32122                           
 32123                           ;flash.c: 548: flashMatchResult_t match;
 32124                           ;flash.c: 551: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 32125                           
 32126                           ;incstack = 0
 32127  011D18  0E00               	movlw	0
 32128  011D1A  0100               	movlb	0	; () banked
 32129  011D1C  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 32130  011D1E  0E00               	movlw	0
 32131  011D20  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 32132  011D22  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 32133  011D26  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 32134  011D2A  0E02               	movlw	2
 32135  011D2C  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 32136  011D2E  0E00               	movlw	0
 32137  011D30  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 32138  011D32  0E00               	movlw	0
 32139  011D34  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 32140  011D36  EC3A  F08E         	call	__flash_write_to_buffer	;wreg free
 32141                           
 32142                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 32143  011D3A  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 32144  011D3E  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 32145  011D42  0E00               	movlw	0
 32146  011D44  0100               	movlb	0	; () banked
 32147  011D46  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 32148  011D48  EC6A  F086         	call	__flash_compare_page_to_buffer	;wreg free
 32149  011D4C  0100               	movlb	0	; () banked
 32150  011D4E  6F83               	movwf	flash_page_write@match& (0+255),b
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 32154  011D50  0583               	decf	flash_page_write@match& (0+255),w,b
 32155  011D52  A4D8               	btfss	status,2,c
 32156  011D54  0012               	return	
 32157                           
 32158                           ; BSR set to: 0
 32159                           ;flash.c: 558: {
 32160                           ;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 32161  011D56  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 32162  011D5A  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 32163  011D5E  0E00               	movlw	0
 32164  011D60  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 32165  011D62  ECB8  F08C         	call	__flash_write_page_from_buffer	;wreg free
 32166  011D66  0012               	return	
 32167  011D68                     __end_of_flash_page_write:
 32168                           	opt stack 0
 32169                           tosu	equ	0xFFF
 32170                           tosh	equ	0xFFE
 32171                           tosl	equ	0xFFD
 32172                           pclath	equ	0xFFA
 32173                           tblptru	equ	0xFF8
 32174                           tblptrh	equ	0xFF7
 32175                           tblptrl	equ	0xFF6
 32176                           tablat	equ	0xFF5
 32177                           prodh	equ	0xFF4
 32178                           prodl	equ	0xFF3
 32179                           intcon	equ	0xFF2
 32180                           intcon2	equ	0xFF1
 32181                           intcon3	equ	0xFF0
 32182                           postinc0	equ	0xFEE
 32183                           wreg	equ	0xFE8
 32184                           indf1	equ	0xFE7
 32185                           postinc1	equ	0xFE6
 32186                           postdec1	equ	0xFE5
 32187                           plusw1	equ	0xFE3
 32188                           fsr1h	equ	0xFE2
 32189                           fsr1l	equ	0xFE1
 32190                           indf2	equ	0xFDF
 32191                           postinc2	equ	0xFDE
 32192                           postdec2	equ	0xFDD
 32193                           plusw2	equ	0xFDB
 32194                           fsr2h	equ	0xFDA
 32195                           fsr2l	equ	0xFD9
 32196                           status	equ	0xFD8
 32197                           
 32198 ;; *************** function __flash_write_to_buffer *****************
 32199 ;; Defined at:
 32200 ;;		line 397 in file "flash.c"
 32201 ;; Parameters:    Size  Location     Type
 32202 ;;  start           2   19[BANK0 ] unsigned int 
 32203 ;;  data            2   21[BANK0 ] PTR unsigned char 
 32204 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32205 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32206 ;;		 -> msd_buffer(512), 
 32207 ;;  data_length     2   23[BANK0 ] unsigned int 
 32208 ;;  buffer          1   25[BANK0 ] enum E8337
 32209 ;; Auto vars:     Size  Location     Type
 32210 ;;  command         4   26[BANK0 ] unsigned char [4]
 32211 ;; Return value:  Size  Location     Type
 32212 ;;                  1    wreg      void 
 32213 ;; Registers used:
 32214 ;;		wreg, status,2, status,0, cstack
 32215 ;; Tracked objects:
 32216 ;;		On entry : 0/0
 32217 ;;		On exit  : 0/0
 32218 ;;		Unchanged: 0/0
 32219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32220 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32223 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32224 ;;Total ram usage:       11 bytes
 32225 ;; Hardware stack levels used:    1
 32226 ;; Hardware stack levels required when called:   13
 32227 ;; This function calls:
 32228 ;;		__flash_spi_tx_tx
 32229 ;;		_flash_is_busy
 32230 ;; This function is called by:
 32231 ;;		_flash_page_write
 32232 ;;		_flash_partial_write
 32233 ;; This function uses a non-reentrant model
 32234 ;;
 32235                           
 32236                           	psect	text143
 32237  011C74                     __ptext143:
 32238                           	opt stack 0
 32239  011C74                     __flash_write_to_buffer:
 32240                           	opt stack 13
 32241                           
 32242                           ;flash.c: 399: uint8_t command[4];
 32243                           ;flash.c: 402: while(flash_is_busy());
 32244                           
 32245                           ;incstack = 0
 32246  011C74  EC00  F095         	call	_flash_is_busy	;wreg free
 32247  011C78  0900               	iorlw	0
 32248  011C7A  A4D8               	btfss	status,2,c
 32249  011C7C  D7FB               	goto	__flash_write_to_buffer
 32250                           
 32251                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 32252  011C7E  0100               	movlb	0	; () banked
 32253  011C80  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 32254  011C82  A4D8               	btfss	status,2,c
 32255  011C84  D002               	goto	l2805
 32256                           
 32257                           ; BSR set to: 0
 32258                           ;flash.c: 406: command[0] = 0x84;
 32259  011C86  0E84               	movlw	132
 32260  011C88  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32261  011C8A                     l2805:
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 32265                           
 32266                           ; BSR set to: 0
 32267  011C8A  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 32268  011C8C  A4D8               	btfss	status,2,c
 32269  011C8E  D002               	goto	l2806
 32270                           
 32271                           ; BSR set to: 0
 32272                           ;flash.c: 408: command[0] = 0x87;
 32273  011C90  0E87               	movlw	135
 32274  011C92  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32275  011C94                     l2806:
 32276                           
 32277                           ; BSR set to: 0
 32278                           ;flash.c: 410: command[1] = 0x00;
 32279  011C94  0E00               	movlw	0
 32280  011C96  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 32281                           
 32282                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 32283  011C98  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 32284  011C9A  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 32285                           
 32286                           ; BSR set to: 0
 32287                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 32288  011C9C  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 32289                           
 32290                           ; BSR set to: 0
 32291                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 32292  011CA0  0E7A               	movlw	low __flash_write_to_buffer@command
 32293  011CA2  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 32294  011CA4  0E00               	movlw	high __flash_write_to_buffer@command
 32295  011CA6  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 32296  011CA8  0E00               	movlw	0
 32297  011CAA  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 32298  011CAC  0E04               	movlw	4
 32299  011CAE  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 32300  011CB0  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 32301  011CB4  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 32302  011CB8  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 32303  011CBC  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 32304  011CC0  EC55  F083         	call	__flash_spi_tx_tx	;wreg free
 32305  011CC4  0012               	return		;funcret
 32306  011CC6                     __end_of__flash_write_to_buffer:
 32307                           	opt stack 0
 32308                           tosu	equ	0xFFF
 32309                           tosh	equ	0xFFE
 32310                           tosl	equ	0xFFD
 32311                           pclath	equ	0xFFA
 32312                           tblptru	equ	0xFF8
 32313                           tblptrh	equ	0xFF7
 32314                           tblptrl	equ	0xFF6
 32315                           tablat	equ	0xFF5
 32316                           prodh	equ	0xFF4
 32317                           prodl	equ	0xFF3
 32318                           intcon	equ	0xFF2
 32319                           intcon2	equ	0xFF1
 32320                           intcon3	equ	0xFF0
 32321                           postinc0	equ	0xFEE
 32322                           wreg	equ	0xFE8
 32323                           indf1	equ	0xFE7
 32324                           postinc1	equ	0xFE6
 32325                           postdec1	equ	0xFE5
 32326                           plusw1	equ	0xFE3
 32327                           fsr1h	equ	0xFE2
 32328                           fsr1l	equ	0xFE1
 32329                           indf2	equ	0xFDF
 32330                           postinc2	equ	0xFDE
 32331                           postdec2	equ	0xFDD
 32332                           plusw2	equ	0xFDB
 32333                           fsr2h	equ	0xFDA
 32334                           fsr2l	equ	0xFD9
 32335                           status	equ	0xFD8
 32336                           
 32337 ;; *************** function __flash_spi_tx_tx *****************
 32338 ;; Defined at:
 32339 ;;		line 141 in file "flash.c"
 32340 ;; Parameters:    Size  Location     Type
 32341 ;;  command         2    0[BANK0 ] PTR unsigned char 
 32342 ;;		 -> _flash_write_to_buffer@command(4), 
 32343 ;;  command_leng    2    2[BANK0 ] unsigned int 
 32344 ;;  data            2    4[BANK0 ] PTR unsigned char 
 32345 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32346 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32347 ;;		 -> msd_buffer(512), 
 32348 ;;  data_length     2    6[BANK0 ] unsigned int 
 32349 ;; Auto vars:     Size  Location     Type
 32350 ;;		None
 32351 ;; Return value:  Size  Location     Type
 32352 ;;                  1    wreg      void 
 32353 ;; Registers used:
 32354 ;;		wreg, status,2, status,0
 32355 ;; Tracked objects:
 32356 ;;		On entry : 0/0
 32357 ;;		On exit  : 0/0
 32358 ;;		Unchanged: 0/0
 32359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32360 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32362 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32363 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32364 ;;Total ram usage:       12 bytes
 32365 ;; Hardware stack levels used:    1
 32366 ;; Hardware stack levels required when called:   10
 32367 ;; This function calls:
 32368 ;;		Nothing
 32369 ;; This function is called by:
 32370 ;;		__flash_write_to_buffer
 32371 ;; This function uses a non-reentrant model
 32372 ;;
 32373                           
 32374                           	psect	text144
 32375  0106AA                     __ptext144:
 32376                           	opt stack 0
 32377  0106AA                     __flash_spi_tx_tx:
 32378                           	opt stack 15
 32379                           
 32380                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 32381                           
 32382                           ;incstack = 0
 32383  0106AA  9E88               	bcf	3976,7,c	;volatile
 32384                           
 32385                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 32386  0106AC  9C88               	bcf	3976,6,c	;volatile
 32387                           
 32388                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 32389  0106AE  8A88               	bsf	3976,5,c	;volatile
 32390                           
 32391                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 32392  0106B0  9888               	bcf	3976,4,c	;volatile
 32393                           
 32394                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 32395  0106B2  9688               	bcf	3976,3,c	;volatile
 32396                           
 32397                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 32398  0106B4  8488               	bsf	3976,2,c	;volatile
 32399                           
 32400                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 32401  0106B6  9288               	bcf	3976,1,c	;volatile
 32402                           
 32403                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 32404  0106B8  9886               	bcf	3974,4,c	;volatile
 32405  0106BA  9A86               	bcf	3974,5,c	;volatile
 32406  0106BC  9C86               	bcf	3974,6,c	;volatile
 32407  0106BE  9E86               	bcf	3974,7,c	;volatile
 32408                           
 32409                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 32410  0106C0  9086               	bcf	3974,0,c	;volatile
 32411  0106C2  9286               	bcf	3974,1,c	;volatile
 32412  0106C4  9486               	bcf	3974,2,c	;volatile
 32413  0106C6  9686               	bcf	3974,3,c	;volatile
 32414                           
 32415                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 32416  0106C8  0100               	movlb	0	; () banked
 32417  0106CA  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 32418  0106CC  6E6A               	movwf	3946,c	;volatile
 32419                           
 32420                           ; BSR set to: 0
 32421                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 32422  0106CE  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 32423                           
 32424                           ; BSR set to: 0
 32425                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 32426  0106D2  0EFF               	movlw	255
 32427  0106D4  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32428  0106D6  0EFF               	movlw	255
 32429  0106D8  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32430  0106DA  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 32431  0106DE  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 32432  0106E2  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32433  0106E4  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32434  0106E6  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32435  0106E8  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32436  0106EA  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32437  0106EE  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32438  0106F0  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32439  0106F2  6E66               	movwf	3942,c	;volatile
 32440                           
 32441                           ; BSR set to: 0
 32442                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 32443  0106F4  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 32444  0106F6  6E67               	movwf	3943,c	;volatile
 32445                           
 32446                           ; BSR set to: 0
 32447                           ;flash.c: 169: LATDbits.LD7 = 0;
 32448  0106F8  9E8C               	bcf	3980,7,c	;volatile
 32449                           
 32450                           ; BSR set to: 0
 32451                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 32452  0106FA  8088               	bsf	3976,0,c	;volatile
 32453  0106FC                     
 32454                           ; BSR set to: 0
 32455  0106FC  B088               	btfsc	3976,0,c	;volatile
 32456  0106FE  D7FE               	goto	l2740
 32457                           
 32458                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 32459  010700  0100               	movlb	0	; () banked
 32460  010702  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 32461  010704  6E6A               	movwf	3946,c	;volatile
 32462                           
 32463                           ; BSR set to: 0
 32464                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 32465  010706  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 32466                           
 32467                           ; BSR set to: 0
 32468                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 32469  01070A  0EFF               	movlw	255
 32470  01070C  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32471  01070E  0EFF               	movlw	255
 32472  010710  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32473  010712  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 32474  010716  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 32475  01071A  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32476  01071C  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32477  01071E  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32478  010720  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32479  010722  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32480  010726  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32481  010728  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32482  01072A  6E66               	movwf	3942,c	;volatile
 32483                           
 32484                           ; BSR set to: 0
 32485                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 32486  01072C  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 32487  01072E  6E67               	movwf	3943,c	;volatile
 32488                           
 32489                           ; BSR set to: 0
 32490                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 32491  010730  8088               	bsf	3976,0,c	;volatile
 32492  010732                     
 32493                           ; BSR set to: 0
 32494  010732  B088               	btfsc	3976,0,c	;volatile
 32495  010734  D7FE               	goto	l2743
 32496                           
 32497                           ;flash.c: 188: LATDbits.LD7 = 1;
 32498  010736  8E8C               	bsf	3980,7,c	;volatile
 32499  010738  0012               	return		;funcret
 32500  01073A                     __end_of__flash_spi_tx_tx:
 32501                           	opt stack 0
 32502                           tosu	equ	0xFFF
 32503                           tosh	equ	0xFFE
 32504                           tosl	equ	0xFFD
 32505                           pclath	equ	0xFFA
 32506                           tblptru	equ	0xFF8
 32507                           tblptrh	equ	0xFF7
 32508                           tblptrl	equ	0xFF6
 32509                           tablat	equ	0xFF5
 32510                           prodh	equ	0xFF4
 32511                           prodl	equ	0xFF3
 32512                           intcon	equ	0xFF2
 32513                           intcon2	equ	0xFF1
 32514                           intcon3	equ	0xFF0
 32515                           postinc0	equ	0xFEE
 32516                           wreg	equ	0xFE8
 32517                           indf1	equ	0xFE7
 32518                           postinc1	equ	0xFE6
 32519                           postdec1	equ	0xFE5
 32520                           plusw1	equ	0xFE3
 32521                           fsr1h	equ	0xFE2
 32522                           fsr1l	equ	0xFE1
 32523                           indf2	equ	0xFDF
 32524                           postinc2	equ	0xFDE
 32525                           postdec2	equ	0xFDD
 32526                           plusw2	equ	0xFDB
 32527                           fsr2h	equ	0xFDA
 32528                           fsr2l	equ	0xFD9
 32529                           status	equ	0xFD8
 32530                           
 32531 ;; *************** function __flash_write_page_from_buffer *****************
 32532 ;; Defined at:
 32533 ;;		line 419 in file "flash.c"
 32534 ;; Parameters:    Size  Location     Type
 32535 ;;  page            2   19[BANK0 ] unsigned int 
 32536 ;;  buffer          1   21[BANK0 ] enum E8337
 32537 ;; Auto vars:     Size  Location     Type
 32538 ;;  command         4   25[BANK0 ] unsigned char [4]
 32539 ;; Return value:  Size  Location     Type
 32540 ;;                  1    wreg      void 
 32541 ;; Registers used:
 32542 ;;		wreg, status,2, status,0, cstack
 32543 ;; Tracked objects:
 32544 ;;		On entry : 0/0
 32545 ;;		On exit  : 0/0
 32546 ;;		Unchanged: 0/0
 32547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32548 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32549 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32550 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32551 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32552 ;;Total ram usage:       10 bytes
 32553 ;; Hardware stack levels used:    1
 32554 ;; Hardware stack levels required when called:   13
 32555 ;; This function calls:
 32556 ;;		__flash_spi_tx
 32557 ;;		_flash_is_busy
 32558 ;; This function is called by:
 32559 ;;		_flash_page_write
 32560 ;;		_flash_partial_write
 32561 ;; This function uses a non-reentrant model
 32562 ;;
 32563                           
 32564                           	psect	text145
 32565  011970                     __ptext145:
 32566                           	opt stack 0
 32567  011970                     __flash_write_page_from_buffer:
 32568                           	opt stack 13
 32569                           
 32570                           ;flash.c: 421: uint8_t command[4];
 32571                           ;flash.c: 424: while(flash_is_busy());
 32572                           
 32573                           ;incstack = 0
 32574  011970  EC00  F095         	call	_flash_is_busy	;wreg free
 32575  011974  0900               	iorlw	0
 32576  011976  A4D8               	btfss	status,2,c
 32577  011978  D7FB               	goto	__flash_write_page_from_buffer
 32578                           
 32579                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 32580  01197A  0100               	movlb	0	; () banked
 32581  01197C  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32582  01197E  A4D8               	btfss	status,2,c
 32583  011980  D002               	goto	l2813
 32584                           
 32585                           ; BSR set to: 0
 32586                           ;flash.c: 428: command[0] = 0x83;
 32587  011982  0E83               	movlw	131
 32588  011984  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32589  011986                     l2813:
 32590                           
 32591                           ; BSR set to: 0
 32592                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 32593                           
 32594                           ; BSR set to: 0
 32595  011986  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32596  011988  A4D8               	btfss	status,2,c
 32597  01198A  D002               	goto	l2814
 32598                           
 32599                           ; BSR set to: 0
 32600                           ;flash.c: 430: command[0] = 0x86;
 32601  01198C  0E86               	movlw	134
 32602  01198E  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32603  011990                     l2814:
 32604                           
 32605                           ; BSR set to: 0
 32606                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 32607                           
 32608                           ; BSR set to: 0
 32609  011990  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 32610  011994  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 32611  011998  0E07               	movlw	7
 32612  01199A  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 32613  01199C                     u8255:
 32614  01199C  90D8               	bcf	status,0,c
 32615  01199E  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 32616  0119A0  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 32617  0119A2  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 32618  0119A4  D7FB               	goto	u8255
 32619  0119A6  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 32620  0119A8  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 32621                           
 32622                           ; BSR set to: 0
 32623                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 32624  0119AA  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 32625  0119AC  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 32626  0119AE  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 32627                           
 32628                           ;flash.c: 434: command[3] = 0x00;
 32629  0119B0  0E00               	movlw	0
 32630  0119B2  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 32631                           
 32632                           ; BSR set to: 0
 32633                           ;flash.c: 437: _flash_spi_tx(command, 4);
 32634  0119B4  0E79               	movlw	low __flash_write_page_from_buffer@command
 32635  0119B6  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 32636  0119B8  0E00               	movlw	high __flash_write_page_from_buffer@command
 32637  0119BA  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 32638  0119BC  0E00               	movlw	0
 32639  0119BE  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 32640  0119C0  0E04               	movlw	4
 32641  0119C2  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 32642  0119C4  ECE5  F08C         	call	__flash_spi_tx	;wreg free
 32643  0119C8  0012               	return		;funcret
 32644  0119CA                     __end_of__flash_write_page_from_buffer:
 32645                           	opt stack 0
 32646                           tosu	equ	0xFFF
 32647                           tosh	equ	0xFFE
 32648                           tosl	equ	0xFFD
 32649                           pclath	equ	0xFFA
 32650                           tblptru	equ	0xFF8
 32651                           tblptrh	equ	0xFF7
 32652                           tblptrl	equ	0xFF6
 32653                           tablat	equ	0xFF5
 32654                           prodh	equ	0xFF4
 32655                           prodl	equ	0xFF3
 32656                           intcon	equ	0xFF2
 32657                           intcon2	equ	0xFF1
 32658                           intcon3	equ	0xFF0
 32659                           postinc0	equ	0xFEE
 32660                           wreg	equ	0xFE8
 32661                           indf1	equ	0xFE7
 32662                           postinc1	equ	0xFE6
 32663                           postdec1	equ	0xFE5
 32664                           plusw1	equ	0xFE3
 32665                           fsr1h	equ	0xFE2
 32666                           fsr1l	equ	0xFE1
 32667                           indf2	equ	0xFDF
 32668                           postinc2	equ	0xFDE
 32669                           postdec2	equ	0xFDD
 32670                           plusw2	equ	0xFDB
 32671                           fsr2h	equ	0xFDA
 32672                           fsr2l	equ	0xFD9
 32673                           status	equ	0xFD8
 32674                           
 32675 ;; *************** function __flash_compare_page_to_buffer *****************
 32676 ;; Defined at:
 32677 ;;		line 337 in file "flash.c"
 32678 ;; Parameters:    Size  Location     Type
 32679 ;;  page            2   19[BANK0 ] unsigned int 
 32680 ;;  buffer          1   21[BANK0 ] enum E8337
 32681 ;; Auto vars:     Size  Location     Type
 32682 ;;  command         4   27[BANK0 ] unsigned char [4]
 32683 ;;  status          2   25[BANK0 ] unsigned int 
 32684 ;; Return value:  Size  Location     Type
 32685 ;;                  1    wreg      enum E8341
 32686 ;; Registers used:
 32687 ;;		wreg, status,2, status,0, cstack
 32688 ;; Tracked objects:
 32689 ;;		On entry : 0/0
 32690 ;;		On exit  : 0/0
 32691 ;;		Unchanged: 0/0
 32692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32693 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32694 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32695 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32696 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32697 ;;Total ram usage:       12 bytes
 32698 ;; Hardware stack levels used:    1
 32699 ;; Hardware stack levels required when called:   13
 32700 ;; This function calls:
 32701 ;;		__flash_get_status
 32702 ;;		__flash_spi_tx
 32703 ;;		_flash_is_busy
 32704 ;; This function is called by:
 32705 ;;		_flash_page_write
 32706 ;;		_flash_partial_write
 32707 ;; This function uses a non-reentrant model
 32708 ;;
 32709                           
 32710                           	psect	text146
 32711  010CD4                     __ptext146:
 32712                           	opt stack 0
 32713  010CD4                     __flash_compare_page_to_buffer:
 32714                           	opt stack 13
 32715                           
 32716                           ;flash.c: 339: uint8_t command[4];
 32717                           ;flash.c: 340: uint16_t status;
 32718                           ;flash.c: 343: while(flash_is_busy());
 32719                           
 32720                           ;incstack = 0
 32721  010CD4  EC00  F095         	call	_flash_is_busy	;wreg free
 32722  010CD8  0900               	iorlw	0
 32723  010CDA  A4D8               	btfss	status,2,c
 32724  010CDC  D7FB               	goto	__flash_compare_page_to_buffer
 32725                           
 32726                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 32727  010CDE  0100               	movlb	0	; () banked
 32728  010CE0  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 32729  010CE2  A4D8               	btfss	status,2,c
 32730  010CE4  D002               	goto	l2786
 32731                           
 32732                           ; BSR set to: 0
 32733                           ;flash.c: 347: command[0] = 0x60;
 32734  010CE6  0E60               	movlw	96
 32735  010CE8  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 32736  010CEA                     l2786:
 32737                           
 32738                           ; BSR set to: 0
 32739                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 32740                           
 32741                           ; BSR set to: 0
 32742  010CEA  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 32743  010CEC  A4D8               	btfss	status,2,c
 32744  010CEE  D002               	goto	l2787
 32745                           
 32746                           ; BSR set to: 0
 32747                           ;flash.c: 349: command[0] = 0x60;
 32748  010CF0  0E60               	movlw	96
 32749  010CF2  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 32750  010CF4                     l2787:
 32751                           
 32752                           ; BSR set to: 0
 32753                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 32754                           
 32755                           ; BSR set to: 0
 32756  010CF4  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 32757  010CF8  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 32758  010CFC  0E07               	movlw	7
 32759  010CFE  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 32760  010D00                     u8165:
 32761  010D00  90D8               	bcf	status,0,c
 32762  010D02  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 32763  010D04  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 32764  010D06  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 32765  010D08  D7FB               	goto	u8165
 32766  010D0A  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 32767  010D0C  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 32768                           
 32769                           ; BSR set to: 0
 32770                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 32771  010D0E  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 32772  010D10  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 32773  010D12  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 32774                           
 32775                           ;flash.c: 353: command[3] = 0x00;
 32776  010D14  0E00               	movlw	0
 32777  010D16  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 32778                           
 32779                           ; BSR set to: 0
 32780                           ;flash.c: 356: _flash_spi_tx(command, 4);
 32781  010D18  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 32782  010D1A  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 32783  010D1C  0E00               	movlw	high __flash_compare_page_to_buffer@command
 32784  010D1E  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 32785  010D20  0E00               	movlw	0
 32786  010D22  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 32787  010D24  0E04               	movlw	4
 32788  010D26  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 32789  010D28  ECE5  F08C         	call	__flash_spi_tx	;wreg free
 32790  010D2C  EC00  F095         	call	_flash_is_busy	;wreg free
 32791  010D30  0900               	iorlw	0
 32792  010D32  A4D8               	btfss	status,2,c
 32793  010D34  D7FB               	goto	l2789
 32794                           
 32795                           ;flash.c: 362: status = _flash_get_status();
 32796  010D36  EC1A  F092         	call	__flash_get_status	;wreg free
 32797  010D3A  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 32798  010D3E  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 32799                           
 32800                           ;flash.c: 365: if(status & 0b0000000001000000)
 32801  010D42  0100               	movlb	0	; () banked
 32802  010D44  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 32803  010D46  D002               	goto	l2791
 32804                           
 32805                           ; BSR set to: 0
 32806                           ;flash.c: 366: {
 32807                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 32808  010D48  0E01               	movlw	1
 32809                           
 32810                           ; BSR set to: 0
 32811                           ;flash.c: 369: }
 32812                           
 32813                           ; BSR set to: 0
 32814  010D4A  0012               	return	
 32815  010D4C                     l2791:
 32816                           
 32817                           ; BSR set to: 0
 32818                           ;flash.c: 370: else
 32819                           ;flash.c: 371: {
 32820                           ;flash.c: 373: return DATA_DOES_MATCH;
 32821                           
 32822                           ; BSR set to: 0
 32823  010D4C  0E00               	movlw	0
 32824                           
 32825                           ; BSR set to: 0
 32826  010D4E  0012               	return	
 32827  010D50                     __end_of__flash_compare_page_to_buffer:
 32828                           	opt stack 0
 32829                           tosu	equ	0xFFF
 32830                           tosh	equ	0xFFE
 32831                           tosl	equ	0xFFD
 32832                           pclath	equ	0xFFA
 32833                           tblptru	equ	0xFF8
 32834                           tblptrh	equ	0xFF7
 32835                           tblptrl	equ	0xFF6
 32836                           tablat	equ	0xFF5
 32837                           prodh	equ	0xFF4
 32838                           prodl	equ	0xFF3
 32839                           intcon	equ	0xFF2
 32840                           intcon2	equ	0xFF1
 32841                           intcon3	equ	0xFF0
 32842                           postinc0	equ	0xFEE
 32843                           wreg	equ	0xFE8
 32844                           indf1	equ	0xFE7
 32845                           postinc1	equ	0xFE6
 32846                           postdec1	equ	0xFE5
 32847                           plusw1	equ	0xFE3
 32848                           fsr1h	equ	0xFE2
 32849                           fsr1l	equ	0xFE1
 32850                           indf2	equ	0xFDF
 32851                           postinc2	equ	0xFDE
 32852                           postdec2	equ	0xFDD
 32853                           plusw2	equ	0xFDB
 32854                           fsr2h	equ	0xFDA
 32855                           fsr2l	equ	0xFD9
 32856                           status	equ	0xFD8
 32857                           
 32858 ;; *************** function _MSDReadHandler *****************
 32859 ;; Defined at:
 32860 ;;		line 1038 in file "usb_device_msd.c"
 32861 ;; Parameters:    Size  Location     Type
 32862 ;;		None
 32863 ;; Auto vars:     Size  Location     Type
 32864 ;;		None
 32865 ;; Return value:  Size  Location     Type
 32866 ;;                  1    wreg      unsigned char 
 32867 ;; Registers used:
 32868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32869 ;; Tracked objects:
 32870 ;;		On entry : 0/0
 32871 ;;		On exit  : 0/0
 32872 ;;		Unchanged: 0/0
 32873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32877 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32878 ;;Total ram usage:        4 bytes
 32879 ;; Hardware stack levels used:    1
 32880 ;; Hardware stack levels required when called:   16
 32881 ;; This function calls:
 32882 ;;		_ExternalFlash_SectorRead
 32883 ;;		_MSDCheckForErrorCases
 32884 ;;		_USBStallEndpoint
 32885 ;;		_USBTransferOnePacket
 32886 ;; This function is called by:
 32887 ;;		_MSDProcessCommandMediaPresent
 32888 ;; This function uses a non-reentrant model
 32889 ;;
 32890                           
 32891                           	psect	text147
 32892  00CF64                     __ptext147:
 32893                           	opt stack 0
 32894  00CF64                     _MSDReadHandler:
 32895                           	opt stack 10
 32896                           
 32897                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 32898                           
 32899                           ; BSR set to: 0
 32900                           ;incstack = 0
 32901  00CF64  D0DD               	goto	l685
 32902  00CF66                     l686:
 32903                           
 32904                           ; BSR set to: 1
 32905                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 32906  00CF66  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 32907                           
 32908                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 32909  00CF6A  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 32910                           
 32911                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 32912  00CF6E  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 32913                           
 32914                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 32915  00CF72  C255  F1D9         	movff	_gblCBW+20,_LBA
 32916                           
 32917                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 32918  00CF76  C257  F044         	movff	_gblCBW+22,_TransferLength+1
 32919                           
 32920                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 32921  00CF7A  C258  F043         	movff	_gblCBW+23,_TransferLength
 32922                           
 32923                           ; BSR set to: 1
 32924                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 32925  00CF7E  5043               	movf	_TransferLength,w,c
 32926  00CF80  0100               	movlb	0	; () banked
 32927  00CF82  6F95               	movwf	??_MSDReadHandler& (0+255),b
 32928  00CF84  5044               	movf	_TransferLength+1,w,c
 32929  00CF86  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 32930  00CF88  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 32931  00CF8A  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 32932  00CF8C  0E09               	movlw	9
 32933  00CF8E                     u8975:
 32934  00CF8E  90D8               	bcf	status,0,c
 32935  00CF90  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 32936  00CF92  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 32937  00CF94  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 32938  00CF96  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 32939  00CF98  2EE8               	decfsz	wreg,f,c
 32940  00CF9A  D7F9               	goto	u8975
 32941  00CF9C  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 32942  00CFA0  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 32943  00CFA4  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 32944  00CFA8  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 32945  00CFAC  ECE2  F076         	call	_MSDCheckForErrorCases	;wreg free
 32946  00CFB0  0900               	iorlw	0
 32947  00CFB2  A4D8               	btfss	status,2,c
 32948  00CFB4  D0C7               	goto	l688
 32949                           
 32950                           ;usb_device_msd.c: 1058: }
 32951                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 32952                           
 32953                           ;usb_device_msd.c: 1056: {
 32954                           ;usb_device_msd.c: 1057: break;
 32955  00CFB6  0E01               	movlw	1
 32956  00CFB8  0101               	movlb	1	; () banked
 32957  00CFBA  6FF5               	movwf	_MSDReadState& (0+255),b
 32958  00CFBC                     
 32959                           ; BSR set to: 1
 32960                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 32961                           
 32962                           ; BSR set to: 1
 32963  00CFBC  5043               	movf	_TransferLength,w,c
 32964  00CFBE  1044               	iorwf	_TransferLength+1,w,c
 32965  00CFC0  A4D8               	btfss	status,2,c
 32966  00CFC2  D002               	goto	l690
 32967                           
 32968                           ; BSR set to: 1
 32969                           ;usb_device_msd.c: 1065: {
 32970                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 32971  00CFC4  0E00               	movlw	0
 32972  00CFC6  D04A               	goto	L28
 32973  00CFC8                     l690:
 32974                           
 32975                           ; BSR set to: 1
 32976                           ;usb_device_msd.c: 1068: }
 32977                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 32978                           
 32979                           ; BSR set to: 1
 32980  00CFC8  0643               	decf	_TransferLength,f,c
 32981  00CFCA  A0D8               	btfss	status,0,c
 32982  00CFCC  0644               	decf	_TransferLength+1,f,c
 32983                           
 32984                           ; BSR set to: 1
 32985                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 32986  00CFCE  0E02               	movlw	2
 32987  00CFD0  6FF5               	movwf	_MSDReadState& (0+255),b
 32988  00CFD2                     
 32989                           ; BSR set to: 1
 32990                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 32991                           
 32992                           ; BSR set to: 1
 32993  00CFD2  5045               	movf	_USBMSDInHandle,w,c
 32994  00CFD4  1046               	iorwf	_USBMSDInHandle+1,w,c
 32995  00CFD6  B4D8               	btfsc	status,2,c
 32996  00CFD8  D006               	goto	l692
 32997                           
 32998                           ; BSR set to: 1
 32999  00CFDA  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 33000  00CFDE  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33001  00CFE2  BEDF               	btfsc	indf2,7,c
 33002  00CFE4  D0AF               	goto	l688
 33003  00CFE6                     l692:
 33004                           
 33005                           ; BSR set to: 1
 33006                           ;usb_device_msd.c: 1079: }
 33007                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 33008                           
 33009                           ; BSR set to: 1
 33010  00CFE6  C2D4  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 33011  00CFEA  C2D5  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 33012  00CFEE  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 33013  00CFF2  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 33014  00CFF6  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 33015  00CFFA  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 33016  00CFFE  0E00               	movlw	0
 33017  00D000  0100               	movlb	0	; () banked
 33018  00D002  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 33019  00D004  0E06               	movlw	6
 33020  00D006  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 33021  00D008  EE22  F0CB         	lfsr	2,_LUN+12
 33022  00D00C  D801               	call	u9028
 33023  00D00E  D00A               	goto	u9029
 33024  00D010                     u9028:
 33025  00D010  0005               	push	
 33026  00D012  6EFA               	movwf	pclath,c
 33027  00D014  50DE               	movf	postinc2,w,c
 33028  00D016  6EFD               	movwf	tosl,c
 33029  00D018  50DE               	movf	postinc2,w,c
 33030  00D01A  6EFE               	movwf	tosh,c
 33031  00D01C  50DE               	movf	postinc2,w,c
 33032  00D01E  6EFF               	movwf	tosu,c
 33033  00D020  50FA               	movf	pclath,w,c
 33034  00D022  0012               	return		;indir
 33035  00D024                     u9029:
 33036  00D024  06E8               	decf	wreg,f,c
 33037  00D026  B4D8               	btfsc	status,2,c
 33038  00D028  D01B               	goto	l695
 33039                           
 33040                           ;usb_device_msd.c: 1084: {
 33041                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 33042  00D02A  0E64               	movlw	100
 33043  00D02C  0101               	movlb	1	; () banked
 33044  00D02E  61F4               	cpfslt	_MSDRetryAttempt& (0+255),b
 33045  00D030  D002               	goto	l694
 33046                           
 33047                           ; BSR set to: 1
 33048                           ;usb_device_msd.c: 1086: {
 33049                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 33050  00D032  2BF4               	incf	_MSDRetryAttempt& (0+255),f,b
 33051                           
 33052                           ;usb_device_msd.c: 1088: break;
 33053  00D034  D087               	goto	l688
 33054  00D036                     l694:
 33055                           
 33056                           ; BSR set to: 1
 33057                           ;usb_device_msd.c: 1090: else
 33058                           ;usb_device_msd.c: 1091: {
 33059                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 33060                           
 33061                           ; BSR set to: 1
 33062  00D036  0E02               	movlw	2
 33063  00D038  010D               	movlb	13	; () banked
 33064  00D03A  6F8C               	movwf	140,b	;volatile
 33065                           
 33066                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 33067  00D03C  0102               	movlb	2	; () banked
 33068  00D03E  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33069  00D040  0BF0               	andlw	-16
 33070  00D042  0903               	iorlw	3
 33071  00D044  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33072                           
 33073                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 33074  00D046  0E00               	movlw	0
 33075  00D048  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33076                           
 33077                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 33078  00D04A  0E00               	movlw	0
 33079  00D04C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33080                           
 33081                           ; BSR set to: 2
 33082                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 33083  00D04E  0E01               	movlw	1
 33084  00D050  0100               	movlb	0	; () banked
 33085  00D052  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33086  00D054  0E02               	movlw	2
 33087  00D056  ECD6  F072         	call	_USBStallEndpoint
 33088  00D05A  D05F               	goto	l11796
 33089  00D05C                     L28:
 33090  00D05C  6FF5               	movwf	_MSDReadState& (0+255),b
 33091                           
 33092                           ;usb_device_msd.c: 1109: break;
 33093  00D05E  D072               	goto	l688
 33094  00D060                     l695:
 33095                           
 33096                           ;usb_device_msd.c: 1110: }
 33097                           ;usb_device_msd.c: 1111: }
 33098                           ;usb_device_msd.c: 1113: LBA.Val++;
 33099                           
 33100                           ; BSR set to: 1
 33101                           
 33102                           ; BSR set to: 1
 33103  00D060  0E01               	movlw	1
 33104  00D062  0101               	movlb	1	; () banked
 33105  00D064  27D9               	addwf	_LBA& (0+255),f,b
 33106  00D066  0E00               	movlw	0
 33107  00D068  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 33108  00D06A  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 33109  00D06C  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 33110                           
 33111                           ; BSR set to: 1
 33112                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 33113  00D06E  0E00               	movlw	0
 33114  00D070  010D               	movlb	13	; () banked
 33115  00D072  6F88               	movwf	136,b	;volatile
 33116  00D074  0E02               	movlw	2
 33117  00D076  6F89               	movwf	137,b	;volatile
 33118  00D078  0E00               	movlw	0
 33119  00D07A  6F8A               	movwf	138,b	;volatile
 33120  00D07C  0E00               	movlw	0
 33121  00D07E  6F8B               	movwf	139,b	;volatile
 33122                           
 33123                           ; BSR set to: 13
 33124                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 33125  00D080  0E00               	movlw	0
 33126  00D082  0101               	movlb	1	; () banked
 33127  00D084  6FE7               	movwf	_ptrNextData& (0+255),b
 33128  00D086  0E06               	movlw	6
 33129  00D088  6FE8               	movwf	(_ptrNextData+1)& (0+255),b
 33130                           
 33131                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 33132  00D08A  0E03               	movlw	3
 33133  00D08C  6FF5               	movwf	_MSDReadState& (0+255),b
 33134  00D08E                     
 33135                           ; BSR set to: 1
 33136                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 33137                           
 33138                           ; BSR set to: 1
 33139  00D08E  010D               	movlb	13	; () banked
 33140  00D090  5188               	movf	136,w,b	;volatile
 33141  00D092  1189               	iorwf	137,w,b	;volatile
 33142  00D094  118A               	iorwf	138,w,b	;volatile
 33143  00D096  118B               	iorwf	139,w,b	;volatile
 33144  00D098  A4D8               	btfss	status,2,c
 33145  00D09A  D002               	goto	l697
 33146                           
 33147                           ; BSR set to: 13
 33148                           ;usb_device_msd.c: 1124: {
 33149                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 33150  00D09C  0E01               	movlw	1
 33151  00D09E  D03E               	goto	L30
 33152  00D0A0                     l697:
 33153                           
 33154                           ;usb_device_msd.c: 1127: }
 33155                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 33156                           
 33157                           ; BSR set to: 1
 33158  00D0A0  0E04               	movlw	4
 33159  00D0A2  0101               	movlb	1	; () banked
 33160  00D0A4  6FF5               	movwf	_MSDReadState& (0+255),b
 33161  00D0A6                     
 33162                           ; BSR set to: 1
 33163                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 33164                           
 33165                           ; BSR set to: 1
 33166  00D0A6  5045               	movf	_USBMSDInHandle,w,c
 33167  00D0A8  1046               	iorwf	_USBMSDInHandle+1,w,c
 33168  00D0AA  B4D8               	btfsc	status,2,c
 33169  00D0AC  D006               	goto	l699
 33170                           
 33171                           ; BSR set to: 1
 33172  00D0AE  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 33173  00D0B2  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33174  00D0B6  BEDF               	btfsc	indf2,7,c
 33175  00D0B8  D045               	goto	l688
 33176  00D0BA                     l699:
 33177                           
 33178                           ; BSR set to: 1
 33179                           ;usb_device_msd.c: 1139: }
 33180                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 33181                           
 33182                           ; BSR set to: 1
 33183  00D0BA  0E01               	movlw	1
 33184  00D0BC  0100               	movlb	0	; () banked
 33185  00D0BE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33186  00D0C0  C1E7  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33187  00D0C4  C1E8  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33188  00D0C8  0E40               	movlw	64
 33189  00D0CA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33190  00D0CC  0E02               	movlw	2
 33191  00D0CE  ECDF  F073         	call	_USBTransferOnePacket
 33192  00D0D2  C060  F045         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33193  00D0D6  C061  F046         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33194                           
 33195                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 33196  00D0DA  0E03               	movlw	3
 33197  00D0DC  0101               	movlb	1	; () banked
 33198  00D0DE  6FF5               	movwf	_MSDReadState& (0+255),b
 33199                           
 33200                           ; BSR set to: 1
 33201                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 33202  00D0E0  0E40               	movlw	64
 33203  00D0E2  0102               	movlb	2	; () banked
 33204  00D0E4  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 33205  00D0E6  0E00               	movlw	0
 33206  00D0E8  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 33207  00D0EA  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 33208  00D0EC  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 33209                           
 33210                           ; BSR set to: 2
 33211                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 33212  00D0EE  0E40               	movlw	64
 33213  00D0F0  010D               	movlb	13	; () banked
 33214  00D0F2  5F88               	subwf	136,f,b	;volatile
 33215  00D0F4  0E00               	movlw	0
 33216  00D0F6  5B89               	subwfb	137,f,b	;volatile
 33217  00D0F8  5B8A               	subwfb	138,f,b	;volatile
 33218  00D0FA  5B8B               	subwfb	139,f,b	;volatile
 33219                           
 33220                           ; BSR set to: 13
 33221                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 33222  00D0FC  0E40               	movlw	64
 33223  00D0FE  0101               	movlb	1	; () banked
 33224  00D100  27E7               	addwf	_ptrNextData& (0+255),f,b
 33225  00D102  0E00               	movlw	0
 33226  00D104  23E8               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33227                           
 33228                           ;usb_device_msd.c: 1149: break;
 33229  00D106  D01E               	goto	l688
 33230  00D108                     
 33231                           ; BSR set to: 1
 33232                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 33233                           
 33234                           ; BSR set to: 1
 33235  00D108  0E02               	movlw	2
 33236  00D10A  010D               	movlb	13	; () banked
 33237  00D10C  6F8C               	movwf	140,b	;volatile
 33238                           
 33239                           ; BSR set to: 13
 33240                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 33241  00D10E  0E01               	movlw	1
 33242  00D110  0100               	movlb	0	; () banked
 33243  00D112  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33244  00D114  0E02               	movlw	2
 33245  00D116  ECD6  F072         	call	_USBStallEndpoint
 33246  00D11A                     l11796:
 33247                           
 33248                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 33249  00D11A  0E00               	movlw	0
 33250  00D11C                     L30:
 33251  00D11C  0101               	movlb	1	; () banked
 33252  00D11E  D79E               	goto	L28
 33253  00D120                     l685:
 33254                           
 33255                           ; BSR set to: 1
 33256  00D120  0101               	movlb	1	; () banked
 33257  00D122  51F5               	movf	_MSDReadState& (0+255),w,b
 33258                           
 33259                           ; Switch size 1, requested type "space"
 33260                           ; Number of cases is 5, Range of values is 0 to 4
 33261                           ; switch strategies available:
 33262                           ; Name         Instructions Cycles
 33263                           ; simple_byte           16     9 (average)
 33264                           ;	Chosen strategy is simple_byte
 33265  00D124  0A00               	xorlw	0	; case 0
 33266  00D126  B4D8               	btfsc	status,2,c
 33267  00D128  D71E               	goto	l686
 33268  00D12A  0A01               	xorlw	1	; case 1
 33269  00D12C  B4D8               	btfsc	status,2,c
 33270  00D12E  D746               	goto	l689
 33271  00D130  0A03               	xorlw	3	; case 2
 33272  00D132  B4D8               	btfsc	status,2,c
 33273  00D134  D74E               	goto	l691
 33274  00D136  0A01               	xorlw	1	; case 3
 33275  00D138  B4D8               	btfsc	status,2,c
 33276  00D13A  D7A9               	goto	l696
 33277  00D13C  0A07               	xorlw	7	; case 4
 33278  00D13E  B4D8               	btfsc	status,2,c
 33279  00D140  D7B2               	goto	l698
 33280  00D142  D7E2               	goto	l700
 33281  00D144                     l688:
 33282                           
 33283                           ;usb_device_msd.c: 1161: return MSDReadState;
 33284                           
 33285                           ; BSR set to: 1
 33286  00D144  0101               	movlb	1	; () banked
 33287  00D146  51F5               	movf	_MSDReadState& (0+255),w,b
 33288  00D148  0012               	return	
 33289  00D14A                     __end_of_MSDReadHandler:
 33290                           	opt stack 0
 33291                           tosu	equ	0xFFF
 33292                           tosh	equ	0xFFE
 33293                           tosl	equ	0xFFD
 33294                           pclath	equ	0xFFA
 33295                           tblptru	equ	0xFF8
 33296                           tblptrh	equ	0xFF7
 33297                           tblptrl	equ	0xFF6
 33298                           tablat	equ	0xFF5
 33299                           prodh	equ	0xFF4
 33300                           prodl	equ	0xFF3
 33301                           intcon	equ	0xFF2
 33302                           intcon2	equ	0xFF1
 33303                           intcon3	equ	0xFF0
 33304                           postinc0	equ	0xFEE
 33305                           wreg	equ	0xFE8
 33306                           indf1	equ	0xFE7
 33307                           postinc1	equ	0xFE6
 33308                           postdec1	equ	0xFE5
 33309                           plusw1	equ	0xFE3
 33310                           fsr1h	equ	0xFE2
 33311                           fsr1l	equ	0xFE1
 33312                           indf2	equ	0xFDF
 33313                           postinc2	equ	0xFDE
 33314                           postdec2	equ	0xFDD
 33315                           plusw2	equ	0xFDB
 33316                           fsr2h	equ	0xFDA
 33317                           fsr2l	equ	0xFD9
 33318                           status	equ	0xFD8
 33319                           
 33320 ;; *************** function _MSDCheckForErrorCases *****************
 33321 ;; Defined at:
 33322 ;;		line 1434 in file "usb_device_msd.c"
 33323 ;; Parameters:    Size  Location     Type
 33324 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 33325 ;; Auto vars:     Size  Location     Type
 33326 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 33327 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 33328 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 33329 ;; Return value:  Size  Location     Type
 33330 ;;                  1    wreg      unsigned char 
 33331 ;; Registers used:
 33332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33333 ;; Tracked objects:
 33334 ;;		On entry : 0/0
 33335 ;;		On exit  : 0/0
 33336 ;;		Unchanged: 0/0
 33337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33339 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33342 ;;Total ram usage:        7 bytes
 33343 ;; Hardware stack levels used:    1
 33344 ;; Hardware stack levels required when called:   12
 33345 ;; This function calls:
 33346 ;;		_MSDErrorHandler
 33347 ;; This function is called by:
 33348 ;;		_MSDProcessCommandMediaPresent
 33349 ;;		_MSDReadHandler
 33350 ;;		_MSDWriteHandler
 33351 ;; This function uses a non-reentrant model
 33352 ;;
 33353                           
 33354                           	psect	text148
 33355  00EDC4                     __ptext148:
 33356                           	opt stack 0
 33357  00EDC4                     _MSDCheckForErrorCases:
 33358                           	opt stack 13
 33359                           
 33360                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 33361                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 33362                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 33363                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 33364                           
 33365                           ; BSR set to: 1
 33366                           ;incstack = 0
 33367  00EDC4  0100               	movlb	0	; () banked
 33368  00EDC6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33369  00EDC8  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33370  00EDCA  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33371  00EDCC  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33372  00EDCE  A4D8               	btfss	status,2,c
 33373  00EDD0  D002               	goto	l730
 33374                           
 33375                           ; BSR set to: 0
 33376                           ;usb_device_msd.c: 1442: {
 33377                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 33378  00EDD2  0E01               	movlw	1
 33379  00EDD4  D001               	goto	L31
 33380  00EDD6                     l730:
 33381                           
 33382                           ; BSR set to: 0
 33383                           ;usb_device_msd.c: 1445: else
 33384                           ;usb_device_msd.c: 1446: {
 33385                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 33386                           
 33387                           ; BSR set to: 0
 33388  00EDD6  0E00               	movlw	0
 33389  00EDD8                     L31:
 33390  00EDD8  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 33391                           
 33392                           ; BSR set to: 0
 33393                           ;usb_device_msd.c: 1448: }
 33394                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 33395                           
 33396                           ; BSR set to: 0
 33397  00EDDA  0451               	decf	_MSDHostNoData,w,c
 33398  00EDDC  A4D8               	btfss	status,2,c
 33399  00EDDE  D005               	goto	l732
 33400                           
 33401                           ; BSR set to: 0
 33402  00EDE0  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33403  00EDE2  A4D8               	btfss	status,2,c
 33404  00EDE4  D002               	goto	l732
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;usb_device_msd.c: 1454: {
 33408                           ;usb_device_msd.c: 1455: return 0x00;
 33409  00EDE6  0E00               	movlw	0
 33410                           
 33411                           ; BSR set to: 0
 33412  00EDE8  0012               	return	
 33413  00EDEA                     l732:
 33414                           
 33415                           ; BSR set to: 0
 33416                           ;usb_device_msd.c: 1456: }
 33417                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 33418                           
 33419                           ; BSR set to: 0
 33420  00EDEA  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33421  00EDEC  0102               	movlb	2	; () banked
 33422  00EDEE  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 33423  00EDF0  E11F               	bnz	l11524
 33424  00EDF2  0100               	movlb	0	; () banked
 33425  00EDF4  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33426  00EDF6  0102               	movlb	2	; () banked
 33427  00EDF8  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 33428  00EDFA  E11A               	bnz	l11524
 33429  00EDFC  0100               	movlb	0	; () banked
 33430  00EDFE  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33431  00EE00  0102               	movlb	2	; () banked
 33432  00EE02  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 33433  00EE04  E115               	bnz	l11524
 33434  00EE06  0100               	movlb	0	; () banked
 33435  00EE08  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33436  00EE0A  0102               	movlb	2	; () banked
 33437  00EE0C  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 33438  00EE0E  A4D8               	btfss	status,2,c
 33439  00EE10  D00F               	goto	l738
 33440                           
 33441                           ; BSR set to: 2
 33442                           ;usb_device_msd.c: 1460: {
 33443                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 33444  00EE12  0454               	decf	_MSD_State,w,c
 33445  00EE14  A4D8               	btfss	status,2,c
 33446  00EE16  D006               	goto	l735
 33447                           
 33448                           ; BSR set to: 2
 33449                           ;usb_device_msd.c: 1463: {
 33450                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 33451  00EE18  0E2A               	movlw	42
 33452  00EE1A  1853               	xorwf	_MSDCommandState,w,c
 33453  00EE1C  B4D8               	btfsc	status,2,c
 33454  00EE1E  D008               	goto	l738
 33455                           
 33456                           ; BSR set to: 2
 33457                           ;usb_device_msd.c: 1466: {
 33458                           ;usb_device_msd.c: 1467: return 0x00;
 33459  00EE20  0E00               	movlw	0
 33460                           
 33461                           ; BSR set to: 2
 33462  00EE22  0012               	return	
 33463  00EE24                     l735:
 33464                           
 33465                           ; BSR set to: 2
 33466                           ;usb_device_msd.c: 1470: else
 33467                           ;usb_device_msd.c: 1471: {
 33468                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 33469                           
 33470                           ; BSR set to: 2
 33471  00EE24  0E2A               	movlw	42
 33472  00EE26  1853               	xorwf	_MSDCommandState,w,c
 33473  00EE28  A4D8               	btfss	status,2,c
 33474  00EE2A  D002               	goto	l738
 33475                           
 33476                           ; BSR set to: 2
 33477                           ;usb_device_msd.c: 1475: {
 33478                           ;usb_device_msd.c: 1476: return 0x00;
 33479  00EE2C  0E00               	movlw	0
 33480                           
 33481                           ; BSR set to: 2
 33482  00EE2E  0012               	return	
 33483  00EE30                     l738:
 33484  00EE30                     l11524:
 33485                           
 33486                           ; BSR set to: 2
 33487                           ;usb_device_msd.c: 1477: }
 33488                           ;usb_device_msd.c: 1478: }
 33489                           ;usb_device_msd.c: 1479: }
 33490                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 33491  00EE30  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33492  00EE32  0100               	movlb	0	; () banked
 33493  00EE34  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33494  00EE36  0102               	movlb	2	; () banked
 33495  00EE38  514A               	movf	(_gblCBW+9)& (0+255),w,b
 33496  00EE3A  0100               	movlb	0	; () banked
 33497  00EE3C  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33498  00EE3E  0102               	movlb	2	; () banked
 33499  00EE40  514B               	movf	(_gblCBW+10)& (0+255),w,b
 33500  00EE42  0100               	movlb	0	; () banked
 33501  00EE44  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33502  00EE46  0102               	movlb	2	; () banked
 33503  00EE48  514C               	movf	(_gblCBW+11)& (0+255),w,b
 33504  00EE4A  0100               	movlb	0	; () banked
 33505  00EE4C  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33506  00EE4E  B0D8               	btfsc	status,0,c
 33507  00EE50  D002               	goto	l739
 33508                           
 33509                           ; BSR set to: 0
 33510                           ;usb_device_msd.c: 1486: {
 33511                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 33512  00EE52  0E01               	movlw	1
 33513  00EE54  D001               	goto	L32
 33514  00EE56                     l739:
 33515                           
 33516                           ; BSR set to: 0
 33517                           ;usb_device_msd.c: 1489: else
 33518                           ;usb_device_msd.c: 1490: {
 33519                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 33520                           
 33521                           ; BSR set to: 0
 33522  00EE56  0E00               	movlw	0
 33523  00EE58                     L32:
 33524  00EE58  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 33525                           
 33526                           ; BSR set to: 0
 33527                           ;usb_device_msd.c: 1492: }
 33528                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 33529                           
 33530                           ; BSR set to: 0
 33531  00EE5A  0E02               	movlw	2
 33532  00EE5C  1854               	xorwf	_MSD_State,w,c
 33533  00EE5E  A4D8               	btfss	status,2,c
 33534  00EE60  D014               	goto	l741
 33535                           
 33536                           ; BSR set to: 0
 33537                           ;usb_device_msd.c: 1496: {
 33538                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 33539  00EE62  0E2A               	movlw	42
 33540  00EE64  1853               	xorwf	_MSDCommandState,w,c
 33541  00EE66  B4D8               	btfsc	status,2,c
 33542  00EE68  D005               	goto	l742
 33543                           
 33544                           ; BSR set to: 0
 33545  00EE6A  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33546  00EE6C  A4D8               	btfss	status,2,c
 33547  00EE6E  D002               	goto	l742
 33548  00EE70                     u8730:
 33549                           
 33550                           ; BSR set to: 0
 33551                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 33552  00EE70  0E05               	movlw	5
 33553  00EE72  D01D               	goto	L35
 33554  00EE74                     l742:
 33555                           
 33556                           ; BSR set to: 0
 33557                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 33558                           
 33559                           ; BSR set to: 0
 33560  00EE74  0451               	decf	_MSDHostNoData,w,c
 33561  00EE76  B4D8               	btfsc	status,2,c
 33562  00EE78  D00F               	goto	u8780
 33563                           
 33564                           ; BSR set to: 0
 33565                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 33566                           
 33567                           ; BSR set to: 0
 33568                           
 33569                           ; BSR set to: 0
 33570                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 33571  00EE7A  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33572  00EE7C  B4D8               	btfsc	status,2,c
 33573  00EE7E  D003               	goto	u8760
 33574                           
 33575                           ; BSR set to: 0
 33576                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 33577                           
 33578                           ; BSR set to: 0
 33579                           
 33580                           ; BSR set to: 0
 33581                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 33582  00EE80  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33583  00EE82  A4D8               	btfss	status,2,c
 33584  00EE84  D7F5               	goto	u8730
 33585  00EE86                     u8760:
 33586                           
 33587                           ; BSR set to: 0
 33588                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 33589  00EE86  0E04               	movlw	4
 33590  00EE88  D012               	goto	L35
 33591  00EE8A                     l741:
 33592                           
 33593                           ; BSR set to: 0
 33594                           ;usb_device_msd.c: 1513: else
 33595                           ;usb_device_msd.c: 1514: {
 33596                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 33597                           
 33598                           ; BSR set to: 0
 33599  00EE8A  0E2A               	movlw	42
 33600  00EE8C  1853               	xorwf	_MSDCommandState,w,c
 33601  00EE8E  B4D8               	btfsc	status,2,c
 33602  00EE90  D00D               	goto	l757
 33603                           
 33604                           ; BSR set to: 0
 33605                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 33606                           
 33607                           ; BSR set to: 0
 33608                           
 33609                           ; BSR set to: 0
 33610                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 33611  00EE92  0451               	decf	_MSDHostNoData,w,c
 33612  00EE94  A4D8               	btfss	status,2,c
 33613  00EE96  D002               	goto	l753
 33614  00EE98                     u8780:
 33615                           
 33616                           ; BSR set to: 0
 33617                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 33618  00EE98  0E01               	movlw	1
 33619  00EE9A  D009               	goto	L35
 33620  00EE9C                     l753:
 33621                           
 33622                           ; BSR set to: 0
 33623                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 33624                           
 33625                           ; BSR set to: 0
 33626  00EE9C  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33627  00EE9E  B4D8               	btfsc	status,2,c
 33628  00EEA0  D003               	goto	u8800
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 33632                           
 33633                           ; BSR set to: 0
 33634                           
 33635                           ; BSR set to: 0
 33636                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 33637  00EEA2  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33638  00EEA4  A4D8               	btfss	status,2,c
 33639  00EEA6  D002               	goto	l757
 33640  00EEA8                     u8800:
 33641                           
 33642                           ; BSR set to: 0
 33643                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 33644  00EEA8  0E02               	movlw	2
 33645  00EEAA  D001               	goto	L35
 33646  00EEAC                     l757:
 33647                           
 33648                           ; BSR set to: 0
 33649                           ;usb_device_msd.c: 1528: else
 33650                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 33651                           
 33652                           ; BSR set to: 0
 33653  00EEAC  0E03               	movlw	3
 33654  00EEAE                     L35:
 33655  00EEAE  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 33656                           
 33657                           ; BSR set to: 0
 33658                           ;usb_device_msd.c: 1530: }
 33659                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 33660                           
 33661                           ; BSR set to: 0
 33662                           
 33663                           ; BSR set to: 0
 33664                           
 33665                           ; BSR set to: 0
 33666                           
 33667                           ; BSR set to: 0
 33668                           
 33669                           ; BSR set to: 0
 33670  00EEB0  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 33671  00EEB2  EC3B  F071         	call	_MSDErrorHandler
 33672                           
 33673                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 33674  00EEB6  0100               	movlb	0	; () banked
 33675  00EEB8  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 33676  00EEBA  0012               	return	
 33677  00EEBC                     __end_of_MSDCheckForErrorCases:
 33678                           	opt stack 0
 33679                           tosu	equ	0xFFF
 33680                           tosh	equ	0xFFE
 33681                           tosl	equ	0xFFD
 33682                           pclath	equ	0xFFA
 33683                           tblptru	equ	0xFF8
 33684                           tblptrh	equ	0xFF7
 33685                           tblptrl	equ	0xFF6
 33686                           tablat	equ	0xFF5
 33687                           prodh	equ	0xFF4
 33688                           prodl	equ	0xFF3
 33689                           intcon	equ	0xFF2
 33690                           intcon2	equ	0xFF1
 33691                           intcon3	equ	0xFF0
 33692                           postinc0	equ	0xFEE
 33693                           wreg	equ	0xFE8
 33694                           indf1	equ	0xFE7
 33695                           postinc1	equ	0xFE6
 33696                           postdec1	equ	0xFE5
 33697                           plusw1	equ	0xFE3
 33698                           fsr1h	equ	0xFE2
 33699                           fsr1l	equ	0xFE1
 33700                           indf2	equ	0xFDF
 33701                           postinc2	equ	0xFDE
 33702                           postdec2	equ	0xFDD
 33703                           plusw2	equ	0xFDB
 33704                           fsr2h	equ	0xFDA
 33705                           fsr2l	equ	0xFD9
 33706                           status	equ	0xFD8
 33707                           
 33708 ;; *************** function _MSDErrorHandler *****************
 33709 ;; Defined at:
 33710 ;;		line 1577 in file "usb_device_msd.c"
 33711 ;; Parameters:    Size  Location     Type
 33712 ;;  ErrorCase       1    wreg     unsigned char 
 33713 ;; Auto vars:     Size  Location     Type
 33714 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 33715 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 33716 ;; Return value:  Size  Location     Type
 33717 ;;                  1    wreg      void 
 33718 ;; Registers used:
 33719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33720 ;; Tracked objects:
 33721 ;;		On entry : 0/0
 33722 ;;		On exit  : 0/0
 33723 ;;		Unchanged: 0/0
 33724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33726 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33729 ;;Total ram usage:        2 bytes
 33730 ;; Hardware stack levels used:    1
 33731 ;; Hardware stack levels required when called:   11
 33732 ;; This function calls:
 33733 ;;		_ResetSenseData
 33734 ;;		_USBStallEndpoint
 33735 ;; This function is called by:
 33736 ;;		_MSDProcessCommandMediaAbsent
 33737 ;;		_MSDProcessCommandMediaPresent
 33738 ;;		_MSDCheckForErrorCases
 33739 ;; This function uses a non-reentrant model
 33740 ;;
 33741                           
 33742                           	psect	text149
 33743  00E276                     __ptext149:
 33744                           	opt stack 0
 33745  00E276                     _MSDErrorHandler:
 33746                           	opt stack 13
 33747                           
 33748                           ;incstack = 0
 33749                           ;MSDErrorHandler@ErrorCase stored from wreg
 33750  00E276  0100               	movlb	0	; () banked
 33751  00E278  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 33752                           
 33753                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 33754                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 33755  00E27A  5045               	movf	_USBMSDInHandle,w,c
 33756  00E27C  1046               	iorwf	_USBMSDInHandle+1,w,c
 33757  00E27E  B4D8               	btfsc	status,2,c
 33758  00E280  D006               	goto	u8400
 33759  00E282  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 33760  00E286  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33761  00E28A  BEDF               	btfsc	indf2,7,c
 33762  00E28C  0012               	return	
 33763  00E28E                     u8400:
 33764  00E28E  5047               	movf	_USBMSDOutHandle,w,c
 33765  00E290  1048               	iorwf	_USBMSDOutHandle+1,w,c
 33766  00E292  B4D8               	btfsc	status,2,c
 33767  00E294  D006               	goto	l761
 33768  00E296  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33769  00E29A  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33770  00E29E  BEDF               	btfsc	indf2,7,c
 33771  00E2A0  0012               	return	
 33772  00E2A2                     l761:
 33773                           
 33774                           ;usb_device_msd.c: 1586: }
 33775                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 33776  00E2A2  C054  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 33777                           
 33778                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 33779  00E2A6  6853               	setf	_MSDCommandState,c
 33780                           
 33781                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 33782  00E2A8  0E00               	movlw	0
 33783  00E2AA  0101               	movlb	1	; () banked
 33784  00E2AC  6FF5               	movwf	_MSDReadState& (0+255),b
 33785                           
 33786                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 33787  00E2AE  0E00               	movlw	0
 33788  00E2B0  6E52               	movwf	_MSDWriteState,c
 33789                           
 33790                           ; BSR set to: 1
 33791                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 33792  00E2B2  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 33793  00E2B6  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 33794  00E2BA  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 33795  00E2BE  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 33796                           
 33797                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 33798  00E2C2  0E01               	movlw	1
 33799  00E2C4  010D               	movlb	13	; () banked
 33800  00E2C6  6F8C               	movwf	140,b	;volatile
 33801                           
 33802                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 33803  00E2C8  0E03               	movlw	3
 33804  00E2CA  6E54               	movwf	_MSD_State,c
 33805                           
 33806                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 33807  00E2CC  D04B               	goto	l767
 33808  00E2CE                     
 33809                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 33810                           
 33811                           ; BSR set to: 13
 33812  00E2CE  0E02               	movlw	2
 33813  00E2D0  010D               	movlb	13	; () banked
 33814  00E2D2  6F8C               	movwf	140,b	;volatile
 33815                           
 33816                           ;usb_device_msd.c: 1607: break;
 33817  00E2D4  0012               	return	
 33818  00E2D6                     
 33819                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 33820                           
 33821                           ; BSR set to: 13
 33822  00E2D6  0E01               	movlw	1
 33823  00E2D8  0100               	movlb	0	; () banked
 33824  00E2DA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33825  00E2DC  0E02               	movlw	2
 33826  00E2DE  ECD6  F072         	call	_USBStallEndpoint
 33827                           
 33828                           ;usb_device_msd.c: 1611: break;
 33829  00E2E2  0012               	return	
 33830  00E2E4                     
 33831                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 33832  00E2E4  0E02               	movlw	2
 33833  00E2E6  010D               	movlb	13	; () banked
 33834  00E2E8  6F8C               	movwf	140,b	;volatile
 33835                           
 33836                           ; BSR set to: 13
 33837                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 33838  00E2EA  0E01               	movlw	1
 33839  00E2EC  0100               	movlb	0	; () banked
 33840  00E2EE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33841  00E2F0  0E02               	movlw	2
 33842  00E2F2  ECD6  F072         	call	_USBStallEndpoint
 33843                           
 33844                           ;usb_device_msd.c: 1616: break;
 33845  00E2F6  0012               	return	
 33846  00E2F8                     
 33847                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 33848  00E2F8  0E00               	movlw	0
 33849  00E2FA  0100               	movlb	0	; () banked
 33850  00E2FC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33851  00E2FE  0E02               	movlw	2
 33852  00E300  ECD6  F072         	call	_USBStallEndpoint
 33853                           
 33854                           ;usb_device_msd.c: 1620: break;
 33855  00E304  0012               	return	
 33856  00E306                     
 33857                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 33858  00E306  0E02               	movlw	2
 33859  00E308  010D               	movlb	13	; () banked
 33860  00E30A  6F8C               	movwf	140,b	;volatile
 33861                           
 33862                           ; BSR set to: 13
 33863                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 33864  00E30C  0E00               	movlw	0
 33865  00E30E  0100               	movlb	0	; () banked
 33866  00E310  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33867  00E312  0E02               	movlw	2
 33868  00E314  ECD6  F072         	call	_USBStallEndpoint
 33869                           
 33870                           ;usb_device_msd.c: 1625: break;
 33871  00E318  0012               	return	
 33872  00E31A                     
 33873                           ;usb_device_msd.c: 1628: ResetSenseData();
 33874  00E31A  EC56  F08A         	call	_ResetSenseData	;wreg free
 33875                           
 33876                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 33877  00E31E  0102               	movlb	2	; () banked
 33878  00E320  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33879  00E322  0BF0               	andlw	-16
 33880  00E324  0905               	iorlw	5
 33881  00E326  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33882                           
 33883                           ; BSR set to: 2
 33884                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 33885  00E328  0E20               	movlw	32
 33886  00E32A  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33887                           
 33888                           ; BSR set to: 2
 33889                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 33890  00E32C  0E00               	movlw	0
 33891  00E32E  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33892                           
 33893                           ; BSR set to: 2
 33894                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 33895  00E330  0E02               	movlw	2
 33896  00E332  0100               	movlb	0	; () banked
 33897  00E334  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 33898  00E336  A4D8               	btfss	status,2,c
 33899  00E338  D00E               	goto	l775
 33900                           
 33901                           ; BSR set to: 0
 33902  00E33A  0102               	movlb	2	; () banked
 33903  00E33C  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33904  00E33E  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 33905  00E340  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 33906  00E342  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 33907  00E344  B4D8               	btfsc	status,2,c
 33908  00E346  D007               	goto	l775
 33909                           
 33910                           ; BSR set to: 2
 33911                           ;usb_device_msd.c: 1634: {
 33912                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 33913  00E348  0E00               	movlw	0
 33914  00E34A  0100               	movlb	0	; () banked
 33915  00E34C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33916  00E34E  0E02               	movlw	2
 33917  00E350  ECD6  F072         	call	_USBStallEndpoint
 33918                           
 33919                           ;usb_device_msd.c: 1636: }
 33920  00E354  0012               	return	
 33921  00E356                     l775:
 33922                           
 33923                           ;usb_device_msd.c: 1637: else
 33924                           ;usb_device_msd.c: 1638: {
 33925                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 33926  00E356  0E01               	movlw	1
 33927  00E358  0100               	movlb	0	; () banked
 33928  00E35A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33929  00E35C  0E02               	movlw	2
 33930  00E35E  ECD6  F072         	call	_USBStallEndpoint
 33931                           
 33932                           ;usb_device_msd.c: 1644: }
 33933                           
 33934                           ;usb_device_msd.c: 1643: break;
 33935                           
 33936                           ;usb_device_msd.c: 1642: default:
 33937                           
 33938                           ;usb_device_msd.c: 1640: }
 33939                           ;usb_device_msd.c: 1641: break;
 33940  00E362  0012               	return	
 33941  00E364                     l767:
 33942  00E364  0100               	movlb	0	; () banked
 33943  00E366  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 33944                           
 33945                           ; Switch size 1, requested type "space"
 33946                           ; Number of cases is 6, Range of values is 1 to 127
 33947                           ; switch strategies available:
 33948                           ; Name         Instructions Cycles
 33949                           ; simple_byte           19    10 (average)
 33950                           ;	Chosen strategy is simple_byte
 33951  00E368  0A01               	xorlw	1	; case 1
 33952  00E36A  B4D8               	btfsc	status,2,c
 33953  00E36C  D7B0               	goto	l768
 33954  00E36E  0A03               	xorlw	3	; case 2
 33955  00E370  B4D8               	btfsc	status,2,c
 33956  00E372  D7B1               	goto	l770
 33957  00E374  0A01               	xorlw	1	; case 3
 33958  00E376  B4D8               	btfsc	status,2,c
 33959  00E378  D7B5               	goto	l771
 33960  00E37A  0A07               	xorlw	7	; case 4
 33961  00E37C  B4D8               	btfsc	status,2,c
 33962  00E37E  D7BC               	goto	l772
 33963  00E380  0A01               	xorlw	1	; case 5
 33964  00E382  B4D8               	btfsc	status,2,c
 33965  00E384  D7C0               	goto	l773
 33966  00E386  0A7A               	xorlw	122	; case 127
 33967  00E388  A4D8               	btfss	status,2,c
 33968  00E38A  0012               	return	
 33969  00E38C  D7C6               	goto	l774
 33970  00E38E                     __end_of_MSDErrorHandler:
 33971                           	opt stack 0
 33972                           tosu	equ	0xFFF
 33973                           tosh	equ	0xFFE
 33974                           tosl	equ	0xFFD
 33975                           pclath	equ	0xFFA
 33976                           tblptru	equ	0xFF8
 33977                           tblptrh	equ	0xFF7
 33978                           tblptrl	equ	0xFF6
 33979                           tablat	equ	0xFF5
 33980                           prodh	equ	0xFF4
 33981                           prodl	equ	0xFF3
 33982                           intcon	equ	0xFF2
 33983                           intcon2	equ	0xFF1
 33984                           intcon3	equ	0xFF0
 33985                           postinc0	equ	0xFEE
 33986                           wreg	equ	0xFE8
 33987                           indf1	equ	0xFE7
 33988                           postinc1	equ	0xFE6
 33989                           postdec1	equ	0xFE5
 33990                           plusw1	equ	0xFE3
 33991                           fsr1h	equ	0xFE2
 33992                           fsr1l	equ	0xFE1
 33993                           indf2	equ	0xFDF
 33994                           postinc2	equ	0xFDE
 33995                           postdec2	equ	0xFDD
 33996                           plusw2	equ	0xFDB
 33997                           fsr2h	equ	0xFDA
 33998                           fsr2l	equ	0xFD9
 33999                           status	equ	0xFD8
 34000                           
 34001 ;; *************** function _USBStallEndpoint *****************
 34002 ;; Defined at:
 34003 ;;		line 1073 in file "usb_device.c"
 34004 ;; Parameters:    Size  Location     Type
 34005 ;;  ep              1    wreg     unsigned char 
 34006 ;;  dir             1    0[BANK0 ] unsigned char 
 34007 ;; Auto vars:     Size  Location     Type
 34008 ;;  ep              1    5[BANK0 ] unsigned char 
 34009 ;;  p               2    6[BANK0 ] PTR struct __BDT
 34010 ;;		 -> BDT(48), 
 34011 ;; Return value:  Size  Location     Type
 34012 ;;                  1    wreg      void 
 34013 ;; Registers used:
 34014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34015 ;; Tracked objects:
 34016 ;;		On entry : 0/0
 34017 ;;		On exit  : 0/0
 34018 ;;		Unchanged: 0/0
 34019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34020 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34021 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34022 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34023 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34024 ;;Total ram usage:        8 bytes
 34025 ;; Hardware stack levels used:    1
 34026 ;; Hardware stack levels required when called:   10
 34027 ;; This function calls:
 34028 ;;		Nothing
 34029 ;; This function is called by:
 34030 ;;		_MSDTasks
 34031 ;;		_MSDReadHandler
 34032 ;;		_MSDWriteHandler
 34033 ;;		_MSDErrorHandler
 34034 ;; This function uses a non-reentrant model
 34035 ;;
 34036                           
 34037                           	psect	text150
 34038  00E5AC                     __ptext150:
 34039                           	opt stack 0
 34040  00E5AC                     _USBStallEndpoint:
 34041                           	opt stack 18
 34042                           
 34043                           ;incstack = 0
 34044                           ;USBStallEndpoint@ep stored from wreg
 34045  00E5AC  0100               	movlb	0	; () banked
 34046  00E5AE  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 34047                           
 34048                           ;usb_device.c: 1075: BDT_ENTRY *p;
 34049                           ;usb_device.c: 1077: if(ep == 0)
 34050  00E5B0  0100               	movlb	0	; () banked
 34051  00E5B2  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 34052  00E5B4  A4D8               	btfss	status,2,c
 34053  00E5B6  D02B               	goto	l194
 34054                           
 34055                           ; BSR set to: 0
 34056                           ;usb_device.c: 1078: {
 34057                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 34058  00E5B8  EE20 F001          	lfsr	2,1
 34059  00E5BC  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 34060  00E5BE  26D9               	addwf	fsr2l,f,c
 34061  00E5C0  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 34062  00E5C2  22DA               	addwfc	fsr2h,f,c
 34063  00E5C4  0E08               	movlw	8
 34064  00E5C6  6EDF               	movwf	indf2,c
 34065                           
 34066                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 34067  00E5C8  EE20 F002          	lfsr	2,2
 34068  00E5CC  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 34069  00E5CE  26D9               	addwf	fsr2l,f,c
 34070  00E5D0  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 34071  00E5D2  22DA               	addwfc	fsr2h,f,c
 34072  00E5D4  0E30               	movlw	48
 34073  00E5D6  6EDE               	movwf	postinc2,c
 34074  00E5D8  0E0D               	movlw	13
 34075  00E5DA  6EDD               	movwf	postdec2,c
 34076                           
 34077                           ; BSR set to: 0
 34078                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 34079  00E5DC  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34080  00E5E0  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34081  00E5E4  0E0C               	movlw	12
 34082  00E5E6  6EDF               	movwf	indf2,c
 34083                           
 34084                           ; BSR set to: 0
 34085                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34086  00E5E8  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34087  00E5EC  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34088  00E5F0  0E00               	movlw	0
 34089  00E5F2  8EDB               	bsf	plusw2,7,c
 34090                           
 34091                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 34092  00E5F4  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 34093  00E5F8  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34094  00E5FC  0E04               	movlw	4
 34095  00E5FE  6EDF               	movwf	indf2,c
 34096                           
 34097                           ; BSR set to: 0
 34098                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 34099  00E600  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 34100  00E604  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34101  00E608  0E00               	movlw	0
 34102  00E60A  8EDB               	bsf	plusw2,7,c
 34103                           
 34104                           ;usb_device.c: 1089: }
 34105  00E60C  0012               	return	
 34106  00E60E                     l194:
 34107                           
 34108                           ; BSR set to: 0
 34109                           ;usb_device.c: 1090: else
 34110                           ;usb_device.c: 1091: {
 34111                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 34112                           
 34113                           ; BSR set to: 0
 34114  00E60E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 34115  00E610  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 34116  00E612  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 34117  00E614  90D8               	bcf	status,0,c
 34118  00E616  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 34119  00E618  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 34120  00E61A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 34121  00E61C  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 34122  00E61E  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 34123  00E620  90D8               	bcf	status,0,c
 34124  00E622  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34125  00E624  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34126  00E626  90D8               	bcf	status,0,c
 34127  00E628  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34128  00E62A  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34129  00E62C  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 34130  00E62E  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 34131  00E630  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 34132  00E632  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 34133  00E634  90D8               	bcf	status,0,c
 34134  00E636  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34135  00E638  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34136  00E63A  90D8               	bcf	status,0,c
 34137  00E63C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34138  00E63E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34139  00E640  0E00               	movlw	0
 34140  00E642  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 34141  00E644  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 34142  00E646  0E0D               	movlw	13
 34143  00E648  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 34144  00E64A  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 34145                           
 34146                           ; BSR set to: 0
 34147                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 34148  00E64C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34149  00E650  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34150  00E654  0E00               	movlw	0
 34151  00E656  84DB               	bsf	plusw2,2,c
 34152                           
 34153                           ; BSR set to: 0
 34154                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 34155  00E658  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34156  00E65C  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34157  00E660  0E00               	movlw	0
 34158  00E662  8EDB               	bsf	plusw2,7,c
 34159                           
 34160                           ; BSR set to: 0
 34161                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 34162  00E664  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 34163  00E666  0D04               	mullw	4
 34164  00E668  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 34165  00E66C  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 34166  00E670  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 34167  00E672  0D02               	mullw	2
 34168  00E674  50F3               	movf	prodl,w,c
 34169  00E676  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 34170  00E678  50F4               	movf	prodh,w,c
 34171  00E67A  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 34172  00E67C  90D8               	bcf	status,0,c
 34173  00E67E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 34174  00E680  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 34175  00E682  90D8               	bcf	status,0,c
 34176  00E684  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 34177  00E686  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 34178  00E688  0E04               	movlw	4
 34179  00E68A  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 34180  00E68C  0E00               	movlw	0
 34181  00E68E  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 34182  00E690  0E00               	movlw	0
 34183  00E692  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 34184  00E694  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 34185  00E696  0E0D               	movlw	13
 34186  00E698  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 34187  00E69A  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 34188                           
 34189                           ; BSR set to: 0
 34190                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 34191  00E69C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34192  00E6A0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34193  00E6A4  0E00               	movlw	0
 34194  00E6A6  84DB               	bsf	plusw2,2,c
 34195                           
 34196                           ; BSR set to: 0
 34197                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 34198  00E6A8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34199  00E6AC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34200  00E6B0  0E00               	movlw	0
 34201  00E6B2  8EDB               	bsf	plusw2,7,c
 34202  00E6B4  0012               	return	
 34203  00E6B6                     __end_of_USBStallEndpoint:
 34204                           	opt stack 0
 34205                           tosu	equ	0xFFF
 34206                           tosh	equ	0xFFE
 34207                           tosl	equ	0xFFD
 34208                           pclath	equ	0xFFA
 34209                           tblptru	equ	0xFF8
 34210                           tblptrh	equ	0xFF7
 34211                           tblptrl	equ	0xFF6
 34212                           tablat	equ	0xFF5
 34213                           prodh	equ	0xFF4
 34214                           prodl	equ	0xFF3
 34215                           intcon	equ	0xFF2
 34216                           intcon2	equ	0xFF1
 34217                           intcon3	equ	0xFF0
 34218                           postinc0	equ	0xFEE
 34219                           wreg	equ	0xFE8
 34220                           indf1	equ	0xFE7
 34221                           postinc1	equ	0xFE6
 34222                           postdec1	equ	0xFE5
 34223                           plusw1	equ	0xFE3
 34224                           fsr1h	equ	0xFE2
 34225                           fsr1l	equ	0xFE1
 34226                           indf2	equ	0xFDF
 34227                           postinc2	equ	0xFDE
 34228                           postdec2	equ	0xFDD
 34229                           plusw2	equ	0xFDB
 34230                           fsr2h	equ	0xFDA
 34231                           fsr2l	equ	0xFD9
 34232                           status	equ	0xFD8
 34233                           
 34234 ;; *************** function _ResetSenseData *****************
 34235 ;; Defined at:
 34236 ;;		line 1373 in file "usb_device_msd.c"
 34237 ;; Parameters:    Size  Location     Type
 34238 ;;		None
 34239 ;; Auto vars:     Size  Location     Type
 34240 ;;		None
 34241 ;; Return value:  Size  Location     Type
 34242 ;;                  1    wreg      void 
 34243 ;; Registers used:
 34244 ;;		wreg, status,2
 34245 ;; Tracked objects:
 34246 ;;		On entry : 0/0
 34247 ;;		On exit  : 0/0
 34248 ;;		Unchanged: 0/0
 34249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34254 ;;Total ram usage:        0 bytes
 34255 ;; Hardware stack levels used:    1
 34256 ;; Hardware stack levels required when called:   10
 34257 ;; This function calls:
 34258 ;;		Nothing
 34259 ;; This function is called by:
 34260 ;;		_MSDProcessCommandMediaAbsent
 34261 ;;		_MSDProcessCommandMediaPresent
 34262 ;;		_MSDErrorHandler
 34263 ;; This function uses a non-reentrant model
 34264 ;;
 34265                           
 34266                           	psect	text151
 34267  0114AC                     __ptext151:
 34268                           	opt stack 0
 34269  0114AC                     _ResetSenseData:
 34270                           	opt stack 16
 34271                           
 34272                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 34273                           
 34274                           ; BSR set to: 0
 34275                           ;incstack = 0
 34276  0114AC  0102               	movlb	2	; () banked
 34277  0114AE  9160               	bcf	_gblSenseData& (0+255),0,b
 34278  0114B0  9360               	bcf	_gblSenseData& (0+255),1,b
 34279  0114B2  9560               	bcf	_gblSenseData& (0+255),2,b
 34280  0114B4  9760               	bcf	_gblSenseData& (0+255),3,b
 34281  0114B6  8960               	bsf	_gblSenseData& (0+255),4,b
 34282  0114B8  8B60               	bsf	_gblSenseData& (0+255),5,b
 34283  0114BA  8D60               	bsf	_gblSenseData& (0+255),6,b
 34284                           
 34285                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 34286  0114BC  9F60               	bcf	_gblSenseData& (0+255),7,b
 34287                           
 34288                           ; BSR set to: 2
 34289                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 34290  0114BE  0E00               	movlw	0
 34291  0114C0  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 34292                           
 34293                           ; BSR set to: 2
 34294                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 34295  0114C2  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 34296  0114C4  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 34297  0114C6  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 34298  0114C8  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 34299                           
 34300                           ; BSR set to: 2
 34301                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 34302  0114CA  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 34303                           
 34304                           ; BSR set to: 2
 34305                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 34306  0114CC  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 34307                           
 34308                           ; BSR set to: 2
 34309                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 34310  0114CE  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 34311                           
 34312                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 34313  0114D0  0E00               	movlw	0
 34314  0114D2  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 34315                           
 34316                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 34317  0114D4  0E00               	movlw	0
 34318  0114D6  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 34319                           
 34320                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 34321  0114D8  0E00               	movlw	0
 34322  0114DA  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 34323                           
 34324                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 34325  0114DC  0E00               	movlw	0
 34326  0114DE  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 34327                           
 34328                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 34329  0114E0  0E0A               	movlw	10
 34330  0114E2  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 34331                           
 34332                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 34333  0114E4  0E00               	movlw	0
 34334  0114E6  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 34335  0114E8  0E00               	movlw	0
 34336  0114EA  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 34337  0114EC  0E00               	movlw	0
 34338  0114EE  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 34339  0114F0  0E00               	movlw	0
 34340  0114F2  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 34341                           
 34342                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 34343  0114F4  0E00               	movlw	0
 34344  0114F6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34345                           
 34346                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 34347  0114F8  0E00               	movlw	0
 34348  0114FA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34349                           
 34350                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 34351  0114FC  0E00               	movlw	0
 34352  0114FE  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 34353                           
 34354                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 34355  011500  0E00               	movlw	0
 34356  011502  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 34357                           
 34358                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 34359  011504  0E00               	movlw	0
 34360  011506  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 34361                           
 34362                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 34363  011508  0E00               	movlw	0
 34364  01150A  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 34365                           
 34366                           ; BSR set to: 2
 34367  01150C  0012               	return		;funcret
 34368  01150E                     __end_of_ResetSenseData:
 34369                           	opt stack 0
 34370                           tosu	equ	0xFFF
 34371                           tosh	equ	0xFFE
 34372                           tosl	equ	0xFFD
 34373                           pclath	equ	0xFFA
 34374                           tblptru	equ	0xFF8
 34375                           tblptrh	equ	0xFF7
 34376                           tblptrl	equ	0xFF6
 34377                           tablat	equ	0xFF5
 34378                           prodh	equ	0xFF4
 34379                           prodl	equ	0xFF3
 34380                           intcon	equ	0xFF2
 34381                           intcon2	equ	0xFF1
 34382                           intcon3	equ	0xFF0
 34383                           postinc0	equ	0xFEE
 34384                           wreg	equ	0xFE8
 34385                           indf1	equ	0xFE7
 34386                           postinc1	equ	0xFE6
 34387                           postdec1	equ	0xFE5
 34388                           plusw1	equ	0xFE3
 34389                           fsr1h	equ	0xFE2
 34390                           fsr1l	equ	0xFE1
 34391                           indf2	equ	0xFDF
 34392                           postinc2	equ	0xFDE
 34393                           postdec2	equ	0xFDD
 34394                           plusw2	equ	0xFDB
 34395                           fsr2h	equ	0xFDA
 34396                           fsr2l	equ	0xFD9
 34397                           status	equ	0xFD8
 34398                           
 34399 ;; *************** function _ExternalFlash_SectorRead *****************
 34400 ;; Defined at:
 34401 ;;		line 64 in file "external_flash.c"
 34402 ;; Parameters:    Size  Location     Type
 34403 ;;  config          2   43[BANK0 ] PTR void 
 34404 ;;		 -> NULL(0), 
 34405 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 34406 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 34407 ;;		 -> msd_buffer(512), 
 34408 ;; Auto vars:     Size  Location     Type
 34409 ;;  page            2   51[BANK0 ] unsigned int 
 34410 ;; Return value:  Size  Location     Type
 34411 ;;                  1    wreg      unsigned char 
 34412 ;; Registers used:
 34413 ;;		wreg, status,2, status,0, cstack
 34414 ;; Tracked objects:
 34415 ;;		On entry : 0/0
 34416 ;;		On exit  : 0/0
 34417 ;;		Unchanged: 0/0
 34418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34419 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34422 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34423 ;;Total ram usage:       10 bytes
 34424 ;; Hardware stack levels used:    1
 34425 ;; Hardware stack levels required when called:   15
 34426 ;; This function calls:
 34427 ;;		_flash_page_read
 34428 ;; This function is called by:
 34429 ;;		_MSDReadHandler
 34430 ;; This function uses a non-reentrant model
 34431 ;;
 34432                           
 34433                           	psect	text152
 34434  012400                     __ptext152:
 34435                           	opt stack 0
 34436  012400                     _ExternalFlash_SectorRead:
 34437                           	opt stack 10
 34438                           
 34439                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 34440                           
 34441                           ; BSR set to: 2
 34442                           ;incstack = 0
 34443  012400  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 34444  012404  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 34445                           
 34446                           ;external_flash.c: 70: if(sector_addr >= 4096)
 34447  012408  0100               	movlb	0	; () banked
 34448  01240A  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 34449  01240C  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 34450  01240E  E104               	bnz	u8830
 34451  012410  0E10               	movlw	16
 34452  012412  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 34453  012414  A0D8               	btfss	status,0,c
 34454  012416  D002               	goto	l2887
 34455  012418                     u8830:
 34456                           
 34457                           ; BSR set to: 0
 34458                           ;external_flash.c: 71: {
 34459                           ;external_flash.c: 72: return 0;
 34460  012418  0E00               	movlw	0
 34461                           
 34462                           ; BSR set to: 0
 34463  01241A  0012               	return	
 34464  01241C                     l2887:
 34465                           
 34466                           ; BSR set to: 0
 34467                           ;external_flash.c: 73: }
 34468                           ;external_flash.c: 76: flash_page_read(page, buffer);
 34469                           
 34470                           ; BSR set to: 0
 34471  01241C  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 34472  012420  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 34473  012424  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 34474  012428  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 34475  01242C  ECD1  F093         	call	_flash_page_read	;wreg free
 34476                           
 34477                           ;external_flash.c: 78: return 1;
 34478  012430  0E01               	movlw	1
 34479  012432  0012               	return	
 34480  012434                     __end_of_ExternalFlash_SectorRead:
 34481                           	opt stack 0
 34482                           tosu	equ	0xFFF
 34483                           tosh	equ	0xFFE
 34484                           tosl	equ	0xFFD
 34485                           pclath	equ	0xFFA
 34486                           tblptru	equ	0xFF8
 34487                           tblptrh	equ	0xFF7
 34488                           tblptrl	equ	0xFF6
 34489                           tablat	equ	0xFF5
 34490                           prodh	equ	0xFF4
 34491                           prodl	equ	0xFF3
 34492                           intcon	equ	0xFF2
 34493                           intcon2	equ	0xFF1
 34494                           intcon3	equ	0xFF0
 34495                           postinc0	equ	0xFEE
 34496                           wreg	equ	0xFE8
 34497                           indf1	equ	0xFE7
 34498                           postinc1	equ	0xFE6
 34499                           postdec1	equ	0xFE5
 34500                           plusw1	equ	0xFE3
 34501                           fsr1h	equ	0xFE2
 34502                           fsr1l	equ	0xFE1
 34503                           indf2	equ	0xFDF
 34504                           postinc2	equ	0xFDE
 34505                           postdec2	equ	0xFDD
 34506                           plusw2	equ	0xFDB
 34507                           fsr2h	equ	0xFDA
 34508                           fsr2l	equ	0xFD9
 34509                           status	equ	0xFD8
 34510                           
 34511 ;; *************** function _flash_page_read *****************
 34512 ;; Defined at:
 34513 ;;		line 538 in file "flash.c"
 34514 ;; Parameters:    Size  Location     Type
 34515 ;;  page            2   39[BANK0 ] unsigned int 
 34516 ;;  data            2   41[BANK0 ] PTR unsigned char 
 34517 ;;		 -> msd_buffer(512), 
 34518 ;; Auto vars:     Size  Location     Type
 34519 ;;		None
 34520 ;; Return value:  Size  Location     Type
 34521 ;;                  1    wreg      void 
 34522 ;; Registers used:
 34523 ;;		wreg, status,2, status,0, cstack
 34524 ;; Tracked objects:
 34525 ;;		On entry : 0/0
 34526 ;;		On exit  : 0/0
 34527 ;;		Unchanged: 0/0
 34528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34533 ;;Total ram usage:        4 bytes
 34534 ;; Hardware stack levels used:    1
 34535 ;; Hardware stack levels required when called:   14
 34536 ;; This function calls:
 34537 ;;		_flash_partial_read
 34538 ;; This function is called by:
 34539 ;;		_ExternalFlash_SectorRead
 34540 ;; This function uses a non-reentrant model
 34541 ;;
 34542                           
 34543                           	psect	text153
 34544  0127A2                     __ptext153:
 34545                           	opt stack 0
 34546  0127A2                     _flash_page_read:
 34547                           	opt stack 10
 34548                           
 34549                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 34550                           
 34551                           ;incstack = 0
 34552  0127A2  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 34553  0127A6  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 34554  0127AA  0E00               	movlw	0
 34555  0127AC  0100               	movlb	0	; () banked
 34556  0127AE  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 34557  0127B0  0E00               	movlw	0
 34558  0127B2  6F75               	movwf	flash_partial_read@start& (0+255),b
 34559  0127B4  0E02               	movlw	2
 34560  0127B6  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 34561  0127B8  0E00               	movlw	0
 34562  0127BA  6F77               	movwf	flash_partial_read@length& (0+255),b
 34563  0127BC  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 34564  0127C0  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 34565  0127C4  EC5F  F087         	call	_flash_partial_read	;wreg free
 34566  0127C8  0012               	return		;funcret
 34567  0127CA                     __end_of_flash_page_read:
 34568                           	opt stack 0
 34569                           tosu	equ	0xFFF
 34570                           tosh	equ	0xFFE
 34571                           tosl	equ	0xFFD
 34572                           pclath	equ	0xFFA
 34573                           tblptru	equ	0xFF8
 34574                           tblptrh	equ	0xFF7
 34575                           tblptrl	equ	0xFF6
 34576                           tablat	equ	0xFF5
 34577                           prodh	equ	0xFF4
 34578                           prodl	equ	0xFF3
 34579                           intcon	equ	0xFF2
 34580                           intcon2	equ	0xFF1
 34581                           intcon3	equ	0xFF0
 34582                           postinc0	equ	0xFEE
 34583                           wreg	equ	0xFE8
 34584                           indf1	equ	0xFE7
 34585                           postinc1	equ	0xFE6
 34586                           postdec1	equ	0xFE5
 34587                           plusw1	equ	0xFE3
 34588                           fsr1h	equ	0xFE2
 34589                           fsr1l	equ	0xFE1
 34590                           indf2	equ	0xFDF
 34591                           postinc2	equ	0xFDE
 34592                           postdec2	equ	0xFDD
 34593                           plusw2	equ	0xFDB
 34594                           fsr2h	equ	0xFDA
 34595                           fsr2l	equ	0xFD9
 34596                           status	equ	0xFD8
 34597                           
 34598 ;; *************** function _flash_partial_read *****************
 34599 ;; Defined at:
 34600 ;;		line 564 in file "flash.c"
 34601 ;; Parameters:    Size  Location     Type
 34602 ;;  page            2   19[BANK0 ] unsigned int 
 34603 ;;  start           2   21[BANK0 ] unsigned int 
 34604 ;;  length          2   23[BANK0 ] unsigned int 
 34605 ;;  data            2   25[BANK0 ] PTR unsigned char 
 34606 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 34607 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 34608 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 34609 ;; Auto vars:     Size  Location     Type
 34610 ;;  command         4   31[BANK0 ] unsigned char [4]
 34611 ;;  address         4   35[BANK0 ] unsigned long 
 34612 ;; Return value:  Size  Location     Type
 34613 ;;                  1    wreg      void 
 34614 ;; Registers used:
 34615 ;;		wreg, status,2, status,0, cstack
 34616 ;; Tracked objects:
 34617 ;;		On entry : 0/0
 34618 ;;		On exit  : 0/0
 34619 ;;		Unchanged: 0/0
 34620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34621 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34622 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34623 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34624 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34625 ;;Total ram usage:       20 bytes
 34626 ;; Hardware stack levels used:    1
 34627 ;; Hardware stack levels required when called:   13
 34628 ;; This function calls:
 34629 ;;		__flash_spi_tx_rx
 34630 ;;		_flash_is_busy
 34631 ;; This function is called by:
 34632 ;;		_flash_page_read
 34633 ;;		__root_is_available
 34634 ;;		__get_empty_cluster
 34635 ;;		_fat_get_empty_clusters
 34636 ;;		__read_fat
 34637 ;;		__read_root
 34638 ;;		_fat_find_file
 34639 ;;		__get_first_cluster
 34640 ;;		__get_file_size
 34641 ;;		_fat_get_file_size
 34642 ;;		_fat_read_from_file
 34643 ;; This function uses a non-reentrant model
 34644 ;;
 34645                           
 34646                           	psect	text154
 34647  010EBE                     __ptext154:
 34648                           	opt stack 0
 34649  010EBE                     _flash_partial_read:
 34650                           	opt stack 15
 34651                           
 34652                           ;flash.c: 566: uint32_t address;
 34653                           ;flash.c: 567: uint8_t command[4];
 34654                           ;flash.c: 570: while(flash_is_busy());
 34655                           
 34656                           ;incstack = 0
 34657  010EBE  EC00  F095         	call	_flash_is_busy	;wreg free
 34658  010EC2  0900               	iorlw	0
 34659  010EC4  A4D8               	btfss	status,2,c
 34660  010EC6  D7FB               	goto	_flash_partial_read
 34661                           
 34662                           ;flash.c: 573: address = page;
 34663  010EC8  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 34664  010ECC  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 34665  010ED0  0100               	movlb	0	; () banked
 34666  010ED2  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 34667  010ED4  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 34668                           
 34669                           ; BSR set to: 0
 34670                           ;flash.c: 574: address <<= 9;
 34671  010ED6  0E09               	movlw	9
 34672  010ED8                     u8275:
 34673  010ED8  90D8               	bcf	status,0,c
 34674  010EDA  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 34675  010EDC  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 34676  010EDE  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 34677  010EE0  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 34678  010EE2  2EE8               	decfsz	wreg,f,c
 34679  010EE4  D7F9               	goto	u8275
 34680                           
 34681                           ; BSR set to: 0
 34682                           ;flash.c: 575: address |= start;
 34683  010EE6  5175               	movf	flash_partial_read@start& (0+255),w,b
 34684  010EE8  6F7B               	movwf	??_flash_partial_read& (0+255),b
 34685  010EEA  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 34686  010EEC  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 34687  010EEE  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 34688  010EF0  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 34689  010EF2  517B               	movf	??_flash_partial_read& (0+255),w,b
 34690  010EF4  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 34691  010EF6  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 34692  010EF8  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 34693  010EFA  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 34694  010EFC  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 34695  010EFE  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 34696  010F00  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 34697                           
 34698                           ; BSR set to: 0
 34699                           ;flash.c: 578: command[0] = 0x03;
 34700  010F02  0E03               	movlw	3
 34701  010F04  6F7F               	movwf	flash_partial_read@command& (0+255),b
 34702                           
 34703                           ; BSR set to: 0
 34704                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 34705  010F06  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 34706                           
 34707                           ; BSR set to: 0
 34708                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 34709  010F0A  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 34710  010F0C  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 34711                           
 34712                           ; BSR set to: 0
 34713                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 34714  010F0E  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 34715                           
 34716                           ; BSR set to: 0
 34717                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 34718  010F12  0E7F               	movlw	low flash_partial_read@command
 34719  010F14  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 34720  010F16  0E00               	movlw	high flash_partial_read@command
 34721  010F18  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 34722  010F1A  0E00               	movlw	0
 34723  010F1C  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 34724  010F1E  0E04               	movlw	4
 34725  010F20  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 34726  010F22  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 34727  010F26  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 34728  010F2A  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 34729  010F2E  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 34730  010F32  EC02  F081         	call	__flash_spi_tx_rx	;wreg free
 34731  010F36  0012               	return		;funcret
 34732  010F38                     __end_of_flash_partial_read:
 34733                           	opt stack 0
 34734                           tosu	equ	0xFFF
 34735                           tosh	equ	0xFFE
 34736                           tosl	equ	0xFFD
 34737                           pclath	equ	0xFFA
 34738                           tblptru	equ	0xFF8
 34739                           tblptrh	equ	0xFF7
 34740                           tblptrl	equ	0xFF6
 34741                           tablat	equ	0xFF5
 34742                           prodh	equ	0xFF4
 34743                           prodl	equ	0xFF3
 34744                           intcon	equ	0xFF2
 34745                           intcon2	equ	0xFF1
 34746                           intcon3	equ	0xFF0
 34747                           postinc0	equ	0xFEE
 34748                           wreg	equ	0xFE8
 34749                           indf1	equ	0xFE7
 34750                           postinc1	equ	0xFE6
 34751                           postdec1	equ	0xFE5
 34752                           plusw1	equ	0xFE3
 34753                           fsr1h	equ	0xFE2
 34754                           fsr1l	equ	0xFE1
 34755                           indf2	equ	0xFDF
 34756                           postinc2	equ	0xFDE
 34757                           postdec2	equ	0xFDD
 34758                           plusw2	equ	0xFDB
 34759                           fsr2h	equ	0xFDA
 34760                           fsr2l	equ	0xFD9
 34761                           status	equ	0xFD8
 34762                           
 34763 ;; *************** function _flash_is_busy *****************
 34764 ;; Defined at:
 34765 ;;		line 475 in file "flash.c"
 34766 ;; Parameters:    Size  Location     Type
 34767 ;;		None
 34768 ;; Auto vars:     Size  Location     Type
 34769 ;;  status          2   17[BANK0 ] unsigned int 
 34770 ;; Return value:  Size  Location     Type
 34771 ;;                  1    wreg      unsigned char 
 34772 ;; Registers used:
 34773 ;;		wreg, status,2, status,0, cstack
 34774 ;; Tracked objects:
 34775 ;;		On entry : 0/0
 34776 ;;		On exit  : 0/0
 34777 ;;		Unchanged: 0/0
 34778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34780 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34783 ;;Total ram usage:        2 bytes
 34784 ;; Hardware stack levels used:    1
 34785 ;; Hardware stack levels required when called:   12
 34786 ;; This function calls:
 34787 ;;		__flash_get_status
 34788 ;;		__flash_wakeup
 34789 ;; This function is called by:
 34790 ;;		__flash_set_page_size
 34791 ;;		__flash_copy_page_to_buffer
 34792 ;;		__flash_compare_page_to_buffer
 34793 ;;		__flash_write_to_buffer
 34794 ;;		__flash_write_page_from_buffer
 34795 ;;		_flash_partial_read
 34796 ;;		_flash_partial_write
 34797 ;;		__flash_erase_page
 34798 ;;		_flash_set_power_state
 34799 ;; This function uses a non-reentrant model
 34800 ;;
 34801                           
 34802                           	psect	text155
 34803  012A00                     __ptext155:
 34804                           	opt stack 0
 34805  012A00                     _flash_is_busy:
 34806                           	opt stack 15
 34807                           
 34808                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 34809                           
 34810                           ;incstack = 0
 34811  012A00  504B               	movf	_power_state,w,c
 34812  012A02  A4D8               	btfss	status,2,c
 34813                           
 34814                           ;flash.c: 479: {
 34815                           ;flash.c: 480: _flash_wakeup();
 34816  012A04  EC63  F08E         	call	__flash_wakeup	;wreg free
 34817                           
 34818                           ;flash.c: 481: }
 34819                           ;flash.c: 484: uint16_t status = _flash_get_status();
 34820  012A08  EC1A  F092         	call	__flash_get_status	;wreg free
 34821  012A0C  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 34822  012A10  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 34823                           
 34824                           ;flash.c: 485: if(status & 0b0000000010000000)
 34825  012A14  0100               	movlb	0	; () banked
 34826  012A16  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 34827  012A18  D002               	goto	l2822
 34828                           
 34829                           ; BSR set to: 0
 34830                           ;flash.c: 486: {
 34831                           ;flash.c: 488: return 0;
 34832  012A1A  0E00               	movlw	0
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;flash.c: 489: }
 34836                           
 34837                           ; BSR set to: 0
 34838  012A1C  0012               	return	
 34839  012A1E                     l2822:
 34840                           
 34841                           ; BSR set to: 0
 34842                           ;flash.c: 490: else
 34843                           ;flash.c: 491: {
 34844                           ;flash.c: 493: return 1;
 34845                           
 34846                           ; BSR set to: 0
 34847  012A1E  0E01               	movlw	1
 34848                           
 34849                           ; BSR set to: 0
 34850  012A20  0012               	return	
 34851  012A22                     __end_of_flash_is_busy:
 34852                           	opt stack 0
 34853                           tosu	equ	0xFFF
 34854                           tosh	equ	0xFFE
 34855                           tosl	equ	0xFFD
 34856                           pclath	equ	0xFFA
 34857                           tblptru	equ	0xFF8
 34858                           tblptrh	equ	0xFF7
 34859                           tblptrl	equ	0xFF6
 34860                           tablat	equ	0xFF5
 34861                           prodh	equ	0xFF4
 34862                           prodl	equ	0xFF3
 34863                           intcon	equ	0xFF2
 34864                           intcon2	equ	0xFF1
 34865                           intcon3	equ	0xFF0
 34866                           postinc0	equ	0xFEE
 34867                           wreg	equ	0xFE8
 34868                           indf1	equ	0xFE7
 34869                           postinc1	equ	0xFE6
 34870                           postdec1	equ	0xFE5
 34871                           plusw1	equ	0xFE3
 34872                           fsr1h	equ	0xFE2
 34873                           fsr1l	equ	0xFE1
 34874                           indf2	equ	0xFDF
 34875                           postinc2	equ	0xFDE
 34876                           postdec2	equ	0xFDD
 34877                           plusw2	equ	0xFDB
 34878                           fsr2h	equ	0xFDA
 34879                           fsr2l	equ	0xFD9
 34880                           status	equ	0xFD8
 34881                           
 34882 ;; *************** function __flash_wakeup *****************
 34883 ;; Defined at:
 34884 ;;		line 289 in file "flash.c"
 34885 ;; Parameters:    Size  Location     Type
 34886 ;;		None
 34887 ;; Auto vars:     Size  Location     Type
 34888 ;;  command         1    8[BANK0 ] unsigned char 
 34889 ;; Return value:  Size  Location     Type
 34890 ;;                  1    wreg      void 
 34891 ;; Registers used:
 34892 ;;		wreg, status,2, status,0, cstack
 34893 ;; Tracked objects:
 34894 ;;		On entry : 0/0
 34895 ;;		On exit  : 0/0
 34896 ;;		Unchanged: 0/0
 34897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34901 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34902 ;;Total ram usage:        1 bytes
 34903 ;; Hardware stack levels used:    1
 34904 ;; Hardware stack levels required when called:   11
 34905 ;; This function calls:
 34906 ;;		__flash_spi_tx
 34907 ;; This function is called by:
 34908 ;;		_flash_is_busy
 34909 ;;		_flash_set_power_state
 34910 ;; This function uses a non-reentrant model
 34911 ;;
 34912                           
 34913                           	psect	text156
 34914  011CC6                     __ptext156:
 34915                           	opt stack 0
 34916  011CC6                     __flash_wakeup:
 34917                           	opt stack 15
 34918                           
 34919                           ;flash.c: 291: uint8_t command;
 34920                           ;flash.c: 293: switch(power_state)
 34921                           
 34922                           ; BSR set to: 0
 34923                           ;incstack = 0
 34924  011CC6  D020               	goto	l2768
 34925  011CC8                     
 34926                           ;flash.c: 296: command = 0xAB;
 34927  011CC8  0EAB               	movlw	171
 34928  011CCA  0100               	movlb	0	; () banked
 34929  011CCC  6F68               	movwf	__flash_wakeup@command& (0+255),b
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 34933  011CCE  0E68               	movlw	low __flash_wakeup@command
 34934  011CD0  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34935  011CD2  0E00               	movlw	high __flash_wakeup@command
 34936  011CD4  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34937  011CD6  0E00               	movlw	0
 34938  011CD8  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34939  011CDA  0E01               	movlw	1
 34940  011CDC  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34941  011CDE  ECE5  F08C         	call	__flash_spi_tx	;wreg free
 34942                           
 34943                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 34944  011CE2  0E17               	movlw	23
 34945  011CE4                     u16017:
 34946  011CE4  2EE8               	decfsz	wreg,f,c
 34947  011CE6  D7FE               	bra	u16017
 34948  011CE8  F000               	nop	
 34949                           
 34950                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 34951  011CEA  0E00               	movlw	0
 34952  011CEC  6E4B               	movwf	_power_state,c
 34953                           
 34954                           ;flash.c: 300: break;
 34955  011CEE  0012               	return	
 34956  011CF0                     l2771:
 34957                           
 34958                           ;flash.c: 305: LATDbits.LD7 = 0;
 34959  011CF0  9E8C               	bcf	3980,7,c	;volatile
 34960                           
 34961                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 34962  011CF2  0E0D               	movlw	13
 34963  011CF4                     u16027:
 34964  011CF4  2EE8               	decfsz	wreg,f,c
 34965  011CF6  D7FE               	bra	u16027
 34966  011CF8  F000               	nop	
 34967                           
 34968                           ;flash.c: 307: LATDbits.LD7 = 1;
 34969  011CFA  8E8C               	bsf	3980,7,c	;volatile
 34970                           
 34971                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 34972  011CFC  0E50               	movlw	80
 34973  011CFE                     u16037:
 34974  011CFE  2EE8               	decfsz	wreg,f,c
 34975  011D00  D7FE               	bra	u16037
 34976                           
 34977                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 34978  011D02  0E00               	movlw	0
 34979  011D04  6E4B               	movwf	_power_state,c
 34980                           
 34981                           ;flash.c: 311: }
 34982                           
 34983                           ;flash.c: 310: break;
 34984  011D06  0012               	return	
 34985  011D08                     l2768:
 34986  011D08  504B               	movf	_power_state,w,c
 34987                           
 34988                           ; Switch size 1, requested type "space"
 34989                           ; Number of cases is 2, Range of values is 1 to 2
 34990                           ; switch strategies available:
 34991                           ; Name         Instructions Cycles
 34992                           ; simple_byte            7     4 (average)
 34993                           ;	Chosen strategy is simple_byte
 34994  011D0A  0A01               	xorlw	1	; case 1
 34995  011D0C  B4D8               	btfsc	status,2,c
 34996  011D0E  D7DC               	goto	l2769
 34997  011D10  0A03               	xorlw	3	; case 2
 34998  011D12  A4D8               	btfss	status,2,c
 34999  011D14  0012               	return	
 35000  011D16  D7EC               	goto	l2771
 35001  011D18                     __end_of__flash_wakeup:
 35002                           	opt stack 0
 35003                           tosu	equ	0xFFF
 35004                           tosh	equ	0xFFE
 35005                           tosl	equ	0xFFD
 35006                           pclath	equ	0xFFA
 35007                           tblptru	equ	0xFF8
 35008                           tblptrh	equ	0xFF7
 35009                           tblptrl	equ	0xFF6
 35010                           tablat	equ	0xFF5
 35011                           prodh	equ	0xFF4
 35012                           prodl	equ	0xFF3
 35013                           intcon	equ	0xFF2
 35014                           intcon2	equ	0xFF1
 35015                           intcon3	equ	0xFF0
 35016                           postinc0	equ	0xFEE
 35017                           wreg	equ	0xFE8
 35018                           indf1	equ	0xFE7
 35019                           postinc1	equ	0xFE6
 35020                           postdec1	equ	0xFE5
 35021                           plusw1	equ	0xFE3
 35022                           fsr1h	equ	0xFE2
 35023                           fsr1l	equ	0xFE1
 35024                           indf2	equ	0xFDF
 35025                           postinc2	equ	0xFDE
 35026                           postdec2	equ	0xFDD
 35027                           plusw2	equ	0xFDB
 35028                           fsr2h	equ	0xFDA
 35029                           fsr2l	equ	0xFD9
 35030                           status	equ	0xFD8
 35031                           
 35032 ;; *************** function __flash_spi_tx *****************
 35033 ;; Defined at:
 35034 ;;		line 103 in file "flash.c"
 35035 ;; Parameters:    Size  Location     Type
 35036 ;;  data            2    0[BANK0 ] PTR unsigned char 
 35037 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 35038 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 35039 ;;  length          2    2[BANK0 ] unsigned int 
 35040 ;; Auto vars:     Size  Location     Type
 35041 ;;		None
 35042 ;; Return value:  Size  Location     Type
 35043 ;;                  1    wreg      void 
 35044 ;; Registers used:
 35045 ;;		wreg, status,2, status,0
 35046 ;; Tracked objects:
 35047 ;;		On entry : 0/0
 35048 ;;		On exit  : 0/0
 35049 ;;		Unchanged: 0/0
 35050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35051 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35053 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35054 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35055 ;;Total ram usage:        8 bytes
 35056 ;; Hardware stack levels used:    1
 35057 ;; Hardware stack levels required when called:   10
 35058 ;; This function calls:
 35059 ;;		Nothing
 35060 ;; This function is called by:
 35061 ;;		__flash_set_page_size
 35062 ;;		__flash_wakeup
 35063 ;;		__flash_copy_page_to_buffer
 35064 ;;		__flash_compare_page_to_buffer
 35065 ;;		__flash_write_page_from_buffer
 35066 ;;		__flash_erase_page
 35067 ;;		_flash_set_power_state
 35068 ;; This function uses a non-reentrant model
 35069 ;;
 35070                           
 35071                           	psect	text157
 35072  0119CA                     __ptext157:
 35073                           	opt stack 0
 35074  0119CA                     __flash_spi_tx:
 35075                           	opt stack 15
 35076                           
 35077                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 35078                           
 35079                           ;incstack = 0
 35080  0119CA  9E88               	bcf	3976,7,c	;volatile
 35081                           
 35082                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 35083  0119CC  9C88               	bcf	3976,6,c	;volatile
 35084                           
 35085                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 35086  0119CE  8A88               	bsf	3976,5,c	;volatile
 35087                           
 35088                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 35089  0119D0  9888               	bcf	3976,4,c	;volatile
 35090                           
 35091                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 35092  0119D2  9688               	bcf	3976,3,c	;volatile
 35093                           
 35094                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 35095  0119D4  8488               	bsf	3976,2,c	;volatile
 35096                           
 35097                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 35098  0119D6  9288               	bcf	3976,1,c	;volatile
 35099                           
 35100                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 35101  0119D8  9886               	bcf	3974,4,c	;volatile
 35102  0119DA  9A86               	bcf	3974,5,c	;volatile
 35103  0119DC  9C86               	bcf	3974,6,c	;volatile
 35104  0119DE  9E86               	bcf	3974,7,c	;volatile
 35105                           
 35106                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 35107  0119E0  9086               	bcf	3974,0,c	;volatile
 35108  0119E2  9286               	bcf	3974,1,c	;volatile
 35109  0119E4  9486               	bcf	3974,2,c	;volatile
 35110  0119E6  9686               	bcf	3974,3,c	;volatile
 35111                           
 35112                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35113  0119E8  0100               	movlb	0	; () banked
 35114  0119EA  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 35115  0119EC  6E6A               	movwf	3946,c	;volatile
 35116                           
 35117                           ; BSR set to: 0
 35118                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35119  0119EE  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 35120                           
 35121                           ; BSR set to: 0
 35122                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 35123  0119F2  0EFF               	movlw	255
 35124  0119F4  6F64               	movwf	??__flash_spi_tx& (0+255),b
 35125  0119F6  0EFF               	movlw	255
 35126  0119F8  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 35127  0119FA  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 35128  0119FE  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 35129  011A02  5164               	movf	??__flash_spi_tx& (0+255),w,b
 35130  011A04  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 35131  011A06  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 35132  011A08  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 35133  011A0A  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 35134  011A0E  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 35135  011A10  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 35136  011A12  6E66               	movwf	3942,c	;volatile
 35137                           
 35138                           ; BSR set to: 0
 35139                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 35140  011A14  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 35141  011A16  6E67               	movwf	3943,c	;volatile
 35142                           
 35143                           ; BSR set to: 0
 35144                           ;flash.c: 131: LATDbits.LD7 = 0;
 35145  011A18  9E8C               	bcf	3980,7,c	;volatile
 35146                           
 35147                           ; BSR set to: 0
 35148                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 35149  011A1A  8088               	bsf	3976,0,c	;volatile
 35150  011A1C                     
 35151                           ; BSR set to: 0
 35152  011A1C  B088               	btfsc	3976,0,c	;volatile
 35153  011A1E  D7FE               	goto	l2734
 35154                           
 35155                           ;flash.c: 134: LATDbits.LD7 = 1;
 35156  011A20  8E8C               	bsf	3980,7,c	;volatile
 35157  011A22  0012               	return		;funcret
 35158  011A24                     __end_of__flash_spi_tx:
 35159                           	opt stack 0
 35160                           tosu	equ	0xFFF
 35161                           tosh	equ	0xFFE
 35162                           tosl	equ	0xFFD
 35163                           pclath	equ	0xFFA
 35164                           tblptru	equ	0xFF8
 35165                           tblptrh	equ	0xFF7
 35166                           tblptrl	equ	0xFF6
 35167                           tablat	equ	0xFF5
 35168                           prodh	equ	0xFF4
 35169                           prodl	equ	0xFF3
 35170                           intcon	equ	0xFF2
 35171                           intcon2	equ	0xFF1
 35172                           intcon3	equ	0xFF0
 35173                           postinc0	equ	0xFEE
 35174                           wreg	equ	0xFE8
 35175                           indf1	equ	0xFE7
 35176                           postinc1	equ	0xFE6
 35177                           postdec1	equ	0xFE5
 35178                           plusw1	equ	0xFE3
 35179                           fsr1h	equ	0xFE2
 35180                           fsr1l	equ	0xFE1
 35181                           indf2	equ	0xFDF
 35182                           postinc2	equ	0xFDE
 35183                           postdec2	equ	0xFDD
 35184                           plusw2	equ	0xFDB
 35185                           fsr2h	equ	0xFDA
 35186                           fsr2l	equ	0xFD9
 35187                           status	equ	0xFD8
 35188                           
 35189 ;; *************** function __flash_get_status *****************
 35190 ;; Defined at:
 35191 ;;		line 278 in file "flash.c"
 35192 ;; Parameters:    Size  Location     Type
 35193 ;;		None
 35194 ;; Auto vars:     Size  Location     Type
 35195 ;;  status          2   15[BANK0 ] unsigned int 
 35196 ;;  command         1   14[BANK0 ] unsigned char 
 35197 ;; Return value:  Size  Location     Type
 35198 ;;                  2   12[BANK0 ] unsigned int 
 35199 ;; Registers used:
 35200 ;;		wreg, status,2, status,0, cstack
 35201 ;; Tracked objects:
 35202 ;;		On entry : 0/0
 35203 ;;		On exit  : 0/0
 35204 ;;		Unchanged: 0/0
 35205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35207 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35209 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35210 ;;Total ram usage:        5 bytes
 35211 ;; Hardware stack levels used:    1
 35212 ;; Hardware stack levels required when called:   11
 35213 ;; This function calls:
 35214 ;;		__flash_spi_tx_rx
 35215 ;; This function is called by:
 35216 ;;		__flash_compare_page_to_buffer
 35217 ;;		_flash_is_busy
 35218 ;; This function uses a non-reentrant model
 35219 ;;
 35220                           
 35221                           	psect	text158
 35222  012434                     __ptext158:
 35223                           	opt stack 0
 35224  012434                     __flash_get_status:
 35225                           	opt stack 15
 35226                           
 35227                           ;flash.c: 282: uint8_t command = 0xD7;
 35228                           
 35229                           ;incstack = 0
 35230  012434  0ED7               	movlw	215
 35231  012436  0100               	movlb	0	; () banked
 35232  012438  6F6E               	movwf	__flash_get_status@command& (0+255),b
 35233                           
 35234                           ; BSR set to: 0
 35235                           ;flash.c: 283: uint16_t status;
 35236                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 35237  01243A  0E6E               	movlw	low __flash_get_status@command
 35238  01243C  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 35239  01243E  0E00               	movlw	high __flash_get_status@command
 35240  012440  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 35241  012442  0E00               	movlw	0
 35242  012444  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 35243  012446  0E01               	movlw	1
 35244  012448  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 35245  01244A  0E6F               	movlw	low __flash_get_status@status
 35246  01244C  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 35247  01244E  0E00               	movlw	high __flash_get_status@status
 35248  012450  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 35249  012452  0E00               	movlw	0
 35250  012454  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 35251  012456  0E02               	movlw	2
 35252  012458  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 35253  01245A  EC02  F081         	call	__flash_spi_tx_rx	;wreg free
 35254                           
 35255                           ;flash.c: 285: return status;
 35256  01245E  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 35257  012462  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 35258  012466  0012               	return	
 35259  012468                     __end_of__flash_get_status:
 35260                           	opt stack 0
 35261                           tosu	equ	0xFFF
 35262                           tosh	equ	0xFFE
 35263                           tosl	equ	0xFFD
 35264                           pclath	equ	0xFFA
 35265                           tblptru	equ	0xFF8
 35266                           tblptrh	equ	0xFF7
 35267                           tblptrl	equ	0xFF6
 35268                           tablat	equ	0xFF5
 35269                           prodh	equ	0xFF4
 35270                           prodl	equ	0xFF3
 35271                           intcon	equ	0xFF2
 35272                           intcon2	equ	0xFF1
 35273                           intcon3	equ	0xFF0
 35274                           postinc0	equ	0xFEE
 35275                           wreg	equ	0xFE8
 35276                           indf1	equ	0xFE7
 35277                           postinc1	equ	0xFE6
 35278                           postdec1	equ	0xFE5
 35279                           plusw1	equ	0xFE3
 35280                           fsr1h	equ	0xFE2
 35281                           fsr1l	equ	0xFE1
 35282                           indf2	equ	0xFDF
 35283                           postinc2	equ	0xFDE
 35284                           postdec2	equ	0xFDD
 35285                           plusw2	equ	0xFDB
 35286                           fsr2h	equ	0xFDA
 35287                           fsr2l	equ	0xFD9
 35288                           status	equ	0xFD8
 35289                           
 35290 ;; *************** function __flash_spi_tx_rx *****************
 35291 ;; Defined at:
 35292 ;;		line 194 in file "flash.c"
 35293 ;; Parameters:    Size  Location     Type
 35294 ;;  command         2    0[BANK0 ] PTR unsigned char 
 35295 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 35296 ;;  command_leng    2    2[BANK0 ] unsigned int 
 35297 ;;  data            2    4[BANK0 ] PTR unsigned char 
 35298 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 35299 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 35300 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 35301 ;;		 -> msd_buffer(512), 
 35302 ;;  data_length     2    6[BANK0 ] unsigned int 
 35303 ;; Auto vars:     Size  Location     Type
 35304 ;;		None
 35305 ;; Return value:  Size  Location     Type
 35306 ;;                  1    wreg      void 
 35307 ;; Registers used:
 35308 ;;		wreg, status,2, status,0
 35309 ;; Tracked objects:
 35310 ;;		On entry : 0/0
 35311 ;;		On exit  : 0/0
 35312 ;;		Unchanged: 0/0
 35313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35314 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35317 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35318 ;;Total ram usage:       12 bytes
 35319 ;; Hardware stack levels used:    1
 35320 ;; Hardware stack levels required when called:   10
 35321 ;; This function calls:
 35322 ;;		Nothing
 35323 ;; This function is called by:
 35324 ;;		__flash_get_status
 35325 ;;		_flash_partial_read
 35326 ;; This function uses a non-reentrant model
 35327 ;;
 35328                           
 35329                           	psect	text159
 35330  010204                     __ptext159:
 35331                           	opt stack 0
 35332  010204                     __flash_spi_tx_rx:
 35333                           	opt stack 15
 35334                           
 35335                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 35336                           
 35337                           ;incstack = 0
 35338  010204  9E88               	bcf	3976,7,c	;volatile
 35339                           
 35340                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 35341  010206  9C88               	bcf	3976,6,c	;volatile
 35342                           
 35343                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 35344  010208  8A88               	bsf	3976,5,c	;volatile
 35345                           
 35346                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 35347  01020A  9888               	bcf	3976,4,c	;volatile
 35348                           
 35349                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 35350  01020C  9688               	bcf	3976,3,c	;volatile
 35351                           
 35352                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 35353  01020E  8488               	bsf	3976,2,c	;volatile
 35354                           
 35355                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 35356  010210  9288               	bcf	3976,1,c	;volatile
 35357                           
 35358                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 35359  010212  9886               	bcf	3974,4,c	;volatile
 35360  010214  9A86               	bcf	3974,5,c	;volatile
 35361  010216  9C86               	bcf	3974,6,c	;volatile
 35362  010218  9E86               	bcf	3974,7,c	;volatile
 35363                           
 35364                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 35365  01021A  9086               	bcf	3974,0,c	;volatile
 35366  01021C  9286               	bcf	3974,1,c	;volatile
 35367  01021E  9486               	bcf	3974,2,c	;volatile
 35368  010220  9686               	bcf	3974,3,c	;volatile
 35369                           
 35370                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35371  010222  0100               	movlb	0	; () banked
 35372  010224  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 35373  010226  6E6A               	movwf	3946,c	;volatile
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35377  010228  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 35378                           
 35379                           ; BSR set to: 0
 35380                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35381  01022C  0EFF               	movlw	255
 35382  01022E  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35383  010230  0EFF               	movlw	255
 35384  010232  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35385  010234  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 35386  010238  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 35387  01023C  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35388  01023E  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35389  010240  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35390  010242  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35391  010244  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35392  010248  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35393  01024A  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35394  01024C  6E66               	movwf	3942,c	;volatile
 35395                           
 35396                           ; BSR set to: 0
 35397                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35398  01024E  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 35399  010250  6E67               	movwf	3943,c	;volatile
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;flash.c: 222: LATDbits.LD7 = 0;
 35403  010252  9E8C               	bcf	3980,7,c	;volatile
 35404                           
 35405                           ; BSR set to: 0
 35406                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 35407  010254  8088               	bsf	3976,0,c	;volatile
 35408  010256                     
 35409                           ; BSR set to: 0
 35410  010256  B088               	btfsc	3976,0,c	;volatile
 35411  010258  D7FE               	goto	l2749
 35412                           
 35413                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 35414  01025A  9A88               	bcf	3976,5,c	;volatile
 35415                           
 35416                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 35417  01025C  8888               	bsf	3976,4,c	;volatile
 35418                           
 35419                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 35420  01025E  9688               	bcf	3976,3,c	;volatile
 35421                           
 35422                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 35423  010260  9488               	bcf	3976,2,c	;volatile
 35424                           
 35425                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35426  010262  0100               	movlb	0	; () banked
 35427  010264  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 35428  010266  6E68               	movwf	3944,c	;volatile
 35429                           
 35430                           ; BSR set to: 0
 35431                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35432  010268  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35436  01026C  0EFF               	movlw	255
 35437  01026E  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35438  010270  0EFF               	movlw	255
 35439  010272  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35440  010274  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 35441  010278  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 35442  01027C  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35443  01027E  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35444  010280  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35445  010282  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35446  010284  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35447  010288  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35448  01028A  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35449  01028C  6E66               	movwf	3942,c	;volatile
 35450                           
 35451                           ; BSR set to: 0
 35452                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35453  01028E  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 35454  010290  6E67               	movwf	3943,c	;volatile
 35455                           
 35456                           ; BSR set to: 0
 35457                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 35458  010292  8088               	bsf	3976,0,c	;volatile
 35459  010294                     
 35460                           ; BSR set to: 0
 35461  010294  B088               	btfsc	3976,0,c	;volatile
 35462  010296  D7FE               	goto	l2752
 35463                           
 35464                           ;flash.c: 249: LATDbits.LD7 = 1;
 35465  010298  8E8C               	bsf	3980,7,c	;volatile
 35466  01029A  0012               	return		;funcret
 35467  01029C                     __end_of__flash_spi_tx_rx:
 35468                           	opt stack 0
 35469                           tosu	equ	0xFFF
 35470                           tosh	equ	0xFFE
 35471                           tosl	equ	0xFFD
 35472                           pclath	equ	0xFFA
 35473                           tblptru	equ	0xFF8
 35474                           tblptrh	equ	0xFF7
 35475                           tblptrl	equ	0xFF6
 35476                           tablat	equ	0xFF5
 35477                           prodh	equ	0xFF4
 35478                           prodl	equ	0xFF3
 35479                           intcon	equ	0xFF2
 35480                           intcon2	equ	0xFF1
 35481                           intcon3	equ	0xFF0
 35482                           postinc0	equ	0xFEE
 35483                           wreg	equ	0xFE8
 35484                           indf1	equ	0xFE7
 35485                           postinc1	equ	0xFE6
 35486                           postdec1	equ	0xFE5
 35487                           plusw1	equ	0xFE3
 35488                           fsr1h	equ	0xFE2
 35489                           fsr1l	equ	0xFE1
 35490                           indf2	equ	0xFDF
 35491                           postinc2	equ	0xFDE
 35492                           postdec2	equ	0xFDD
 35493                           plusw2	equ	0xFDB
 35494                           fsr2h	equ	0xFDA
 35495                           fsr2l	equ	0xFD9
 35496                           status	equ	0xFD8
 35497                           
 35498 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 35499 ;; Defined at:
 35500 ;;		line 993 in file "usb_device_msd.c"
 35501 ;; Parameters:    Size  Location     Type
 35502 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 35503 ;; Auto vars:     Size  Location     Type
 35504 ;;		None
 35505 ;; Return value:  Size  Location     Type
 35506 ;;                  1    wreg      void 
 35507 ;; Registers used:
 35508 ;;		wreg, status,2, status,0
 35509 ;; Tracked objects:
 35510 ;;		On entry : 0/0
 35511 ;;		On exit  : 0/0
 35512 ;;		Unchanged: 0/0
 35513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35517 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35518 ;;Total ram usage:        6 bytes
 35519 ;; Hardware stack levels used:    1
 35520 ;; Hardware stack levels required when called:   10
 35521 ;; This function calls:
 35522 ;;		Nothing
 35523 ;; This function is called by:
 35524 ;;		_MSDProcessCommandMediaPresent
 35525 ;; This function uses a non-reentrant model
 35526 ;;
 35527                           
 35528                           	psect	text160
 35529  00FEB0                     __ptext160:
 35530                           	opt stack 0
 35531  00FEB0                     _MSDComputeDeviceInAndResidue:
 35532                           	opt stack 16
 35533                           
 35534                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 35535                           
 35536                           ;incstack = 0
 35537  00FEB0  0100               	movlb	0	; () banked
 35538  00FEB2  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35539  00FEB4  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35540  00FEB6  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35541  00FEB8  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35542  00FEBA  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35543  00FEBC  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35544  00FEBE  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35545  00FEC0  0102               	movlb	2	; () banked
 35546  00FEC2  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 35547  00FEC4  0100               	movlb	0	; () banked
 35548  00FEC6  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35549  00FEC8  0102               	movlb	2	; () banked
 35550  00FECA  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 35551  00FECC  0100               	movlb	0	; () banked
 35552  00FECE  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35553  00FED0  0102               	movlb	2	; () banked
 35554  00FED2  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 35555  00FED4  0100               	movlb	0	; () banked
 35556  00FED6  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35557  00FED8  0102               	movlb	2	; () banked
 35558  00FEDA  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 35559  00FEDC  B0D8               	btfsc	status,0,c
 35560  00FEDE  D00E               	goto	l679
 35561                           
 35562                           ; BSR set to: 2
 35563                           ;usb_device_msd.c: 997: {
 35564                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 35565  00FEE0  0E00               	movlw	0
 35566  00FEE2  010D               	movlb	13	; () banked
 35567  00FEE4  6F88               	movwf	136,b	;volatile
 35568  00FEE6  0E00               	movlw	0
 35569  00FEE8  6F89               	movwf	137,b	;volatile
 35570  00FEEA  0E00               	movlw	0
 35571  00FEEC  6F8A               	movwf	138,b	;volatile
 35572  00FEEE  0E00               	movlw	0
 35573  00FEF0  6F8B               	movwf	139,b	;volatile
 35574                           
 35575                           ; BSR set to: 13
 35576                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 35577  00FEF2  C249  F043         	movff	_gblCBW+8,_TransferLength
 35578  00FEF6  C24A  F044         	movff	_gblCBW+9,_TransferLength+1
 35579                           
 35580                           ;usb_device_msd.c: 1002: }
 35581  00FEFA  0012               	return	
 35582  00FEFC                     l679:
 35583                           
 35584                           ;usb_device_msd.c: 1003: else
 35585                           ;usb_device_msd.c: 1004: {
 35586                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 35587                           
 35588                           ; BSR set to: 13
 35589  00FEFC  5043               	movf	_TransferLength,w,c
 35590  00FEFE  0100               	movlb	0	; () banked
 35591  00FF00  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35592  00FF02  5044               	movf	_TransferLength+1,w,c
 35593  00FF04  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35594  00FF06  B0D8               	btfsc	status,0,c
 35595  00FF08  D004               	goto	l681
 35596                           
 35597                           ; BSR set to: 0
 35598                           ;usb_device_msd.c: 1007: {
 35599                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 35600  00FF0A  C060  F043         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 35601  00FF0E  C061  F044         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 35602  00FF12                     l681:
 35603                           
 35604                           ; BSR set to: 0
 35605                           ;usb_device_msd.c: 1009: }
 35606                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 35607                           
 35608                           ; BSR set to: 0
 35609  00FF12  5043               	movf	_TransferLength,w,c
 35610  00FF14  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35611  00FF16  5044               	movf	_TransferLength+1,w,c
 35612  00FF18  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35613  00FF1A  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35614  00FF1C  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35615  00FF1E  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 35616  00FF20  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 35617  00FF22  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 35618  00FF24  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 35619  00FF26  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 35620  00FF28  0E00               	movlw	0
 35621  00FF2A  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 35622  00FF2C  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 35623  00FF2E  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 35624  00FF30  0102               	movlb	2	; () banked
 35625  00FF32  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35626  00FF34  0100               	movlb	0	; () banked
 35627  00FF36  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35628  00FF38  010D               	movlb	13	; () banked
 35629  00FF3A  6F88               	movwf	136,b	;volatile
 35630  00FF3C  0102               	movlb	2	; () banked
 35631  00FF3E  514A               	movf	(_gblCBW+9)& (0+255),w,b
 35632  00FF40  0100               	movlb	0	; () banked
 35633  00FF42  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35634  00FF44  010D               	movlb	13	; () banked
 35635  00FF46  6F89               	movwf	137,b	;volatile
 35636  00FF48  0102               	movlb	2	; () banked
 35637  00FF4A  514B               	movf	(_gblCBW+10)& (0+255),w,b
 35638  00FF4C  0100               	movlb	0	; () banked
 35639  00FF4E  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35640  00FF50  010D               	movlb	13	; () banked
 35641  00FF52  6F8A               	movwf	138,b	;volatile
 35642  00FF54  0102               	movlb	2	; () banked
 35643  00FF56  514C               	movf	(_gblCBW+11)& (0+255),w,b
 35644  00FF58  0100               	movlb	0	; () banked
 35645  00FF5A  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35646  00FF5C  010D               	movlb	13	; () banked
 35647  00FF5E  6F8B               	movwf	139,b	;volatile
 35648  00FF60  0012               	return	
 35649  00FF62                     __end_of_MSDComputeDeviceInAndResidue:
 35650                           	opt stack 0
 35651                           tosu	equ	0xFFF
 35652                           tosh	equ	0xFFE
 35653                           tosl	equ	0xFFD
 35654                           pclath	equ	0xFFA
 35655                           tblptru	equ	0xFF8
 35656                           tblptrh	equ	0xFF7
 35657                           tblptrl	equ	0xFF6
 35658                           tablat	equ	0xFF5
 35659                           prodh	equ	0xFF4
 35660                           prodl	equ	0xFF3
 35661                           intcon	equ	0xFF2
 35662                           intcon2	equ	0xFF1
 35663                           intcon3	equ	0xFF0
 35664                           postinc0	equ	0xFEE
 35665                           wreg	equ	0xFE8
 35666                           indf1	equ	0xFE7
 35667                           postinc1	equ	0xFE6
 35668                           postdec1	equ	0xFE5
 35669                           plusw1	equ	0xFE3
 35670                           fsr1h	equ	0xFE2
 35671                           fsr1l	equ	0xFE1
 35672                           indf2	equ	0xFDF
 35673                           postinc2	equ	0xFDE
 35674                           postdec2	equ	0xFDD
 35675                           plusw2	equ	0xFDB
 35676                           fsr2h	equ	0xFDA
 35677                           fsr2l	equ	0xFD9
 35678                           status	equ	0xFD8
 35679                           
 35680 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 35681 ;; Defined at:
 35682 ;;		line 18 in file "external_flash.c"
 35683 ;; Parameters:    Size  Location     Type
 35684 ;;  config          2    0[BANK0 ] PTR void 
 35685 ;;		 -> NULL(0), 
 35686 ;; Auto vars:     Size  Location     Type
 35687 ;;		None
 35688 ;; Return value:  Size  Location     Type
 35689 ;;                  2    0[BANK0 ] unsigned int 
 35690 ;; Registers used:
 35691 ;;		wreg, status,2
 35692 ;; Tracked objects:
 35693 ;;		On entry : 0/0
 35694 ;;		On exit  : 0/0
 35695 ;;		Unchanged: 0/0
 35696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35701 ;;Total ram usage:        2 bytes
 35702 ;; Hardware stack levels used:    1
 35703 ;; Hardware stack levels required when called:   10
 35704 ;; This function calls:
 35705 ;;		Nothing
 35706 ;; This function is called by:
 35707 ;;		_MSDProcessCommandMediaPresent
 35708 ;; This function uses a non-reentrant model
 35709 ;;
 35710                           
 35711                           	psect	text161
 35712  012DA6                     __ptext161:
 35713                           	opt stack 0
 35714  012DA6                     _ExternalFlash_SectorSizeRead:
 35715                           	opt stack 16
 35716                           
 35717                           ;external_flash.c: 21: return 512;
 35718                           
 35719                           ; BSR set to: 13
 35720                           ;incstack = 0
 35721  012DA6  0E02               	movlw	2
 35722  012DA8  0100               	movlb	0	; () banked
 35723  012DAA  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 35724  012DAC  0E00               	movlw	0
 35725  012DAE  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 35726  012DB0  0012               	return	
 35727  012DB2                     __end_of_ExternalFlash_SectorSizeRead:
 35728                           	opt stack 0
 35729                           tosu	equ	0xFFF
 35730                           tosh	equ	0xFFE
 35731                           tosl	equ	0xFFD
 35732                           pclath	equ	0xFFA
 35733                           tblptru	equ	0xFF8
 35734                           tblptrh	equ	0xFF7
 35735                           tblptrl	equ	0xFF6
 35736                           tablat	equ	0xFF5
 35737                           prodh	equ	0xFF4
 35738                           prodl	equ	0xFF3
 35739                           intcon	equ	0xFF2
 35740                           intcon2	equ	0xFF1
 35741                           intcon3	equ	0xFF0
 35742                           postinc0	equ	0xFEE
 35743                           wreg	equ	0xFE8
 35744                           indf1	equ	0xFE7
 35745                           postinc1	equ	0xFE6
 35746                           postdec1	equ	0xFE5
 35747                           plusw1	equ	0xFE3
 35748                           fsr1h	equ	0xFE2
 35749                           fsr1l	equ	0xFE1
 35750                           indf2	equ	0xFDF
 35751                           postinc2	equ	0xFDE
 35752                           postdec2	equ	0xFDD
 35753                           plusw2	equ	0xFDB
 35754                           fsr2h	equ	0xFDA
 35755                           fsr2l	equ	0xFD9
 35756                           status	equ	0xFD8
 35757                           
 35758 ;; *************** function _ExternalFlash_CapacityRead *****************
 35759 ;; Defined at:
 35760 ;;		line 24 in file "external_flash.c"
 35761 ;; Parameters:    Size  Location     Type
 35762 ;;  config          2    0[BANK0 ] PTR void 
 35763 ;;		 -> NULL(0), 
 35764 ;; Auto vars:     Size  Location     Type
 35765 ;;		None
 35766 ;; Return value:  Size  Location     Type
 35767 ;;                  4    0[BANK0 ] unsigned long 
 35768 ;; Registers used:
 35769 ;;		wreg, status,2
 35770 ;; Tracked objects:
 35771 ;;		On entry : 0/0
 35772 ;;		On exit  : 0/0
 35773 ;;		Unchanged: 0/0
 35774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35778 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35779 ;;Total ram usage:        4 bytes
 35780 ;; Hardware stack levels used:    1
 35781 ;; Hardware stack levels required when called:   10
 35782 ;; This function calls:
 35783 ;;		Nothing
 35784 ;; This function is called by:
 35785 ;;		_MSDProcessCommandMediaPresent
 35786 ;; This function uses a non-reentrant model
 35787 ;;
 35788                           
 35789                           	psect	text162
 35790  012C74                     __ptext162:
 35791                           	opt stack 0
 35792  012C74                     _ExternalFlash_CapacityRead:
 35793                           	opt stack 16
 35794                           
 35795                           ;external_flash.c: 26: return ((uint32_t) 4114 - 1);
 35796                           
 35797                           ; BSR set to: 0
 35798                           ;incstack = 0
 35799  012C74  0E11               	movlw	17
 35800  012C76  0100               	movlb	0	; () banked
 35801  012C78  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 35802  012C7A  0E10               	movlw	16
 35803  012C7C  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 35804  012C7E  0E00               	movlw	0
 35805  012C80  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 35806  012C82  0E00               	movlw	0
 35807  012C84  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 35808  012C86  0012               	return	
 35809  012C88                     __end_of_ExternalFlash_CapacityRead:
 35810                           	opt stack 0
 35811                           tosu	equ	0xFFF
 35812                           tosh	equ	0xFFE
 35813                           tosl	equ	0xFFD
 35814                           pclath	equ	0xFFA
 35815                           tblptru	equ	0xFF8
 35816                           tblptrh	equ	0xFF7
 35817                           tblptrl	equ	0xFF6
 35818                           tablat	equ	0xFF5
 35819                           prodh	equ	0xFF4
 35820                           prodl	equ	0xFF3
 35821                           intcon	equ	0xFF2
 35822                           intcon2	equ	0xFF1
 35823                           intcon3	equ	0xFF0
 35824                           postinc0	equ	0xFEE
 35825                           wreg	equ	0xFE8
 35826                           indf1	equ	0xFE7
 35827                           postinc1	equ	0xFE6
 35828                           postdec1	equ	0xFE5
 35829                           plusw1	equ	0xFE3
 35830                           fsr1h	equ	0xFE2
 35831                           fsr1l	equ	0xFE1
 35832                           indf2	equ	0xFDF
 35833                           postinc2	equ	0xFDE
 35834                           postdec2	equ	0xFDD
 35835                           plusw2	equ	0xFDB
 35836                           fsr2h	equ	0xFDA
 35837                           fsr2l	equ	0xFD9
 35838                           status	equ	0xFD8
 35839                           
 35840 ;; *************** function _ExternalFlash_MediaInitialize *****************
 35841 ;; Defined at:
 35842 ;;		line 10 in file "external_flash.c"
 35843 ;; Parameters:    Size  Location     Type
 35844 ;;  config          2    0[BANK0 ] PTR void 
 35845 ;;		 -> NULL(0), 
 35846 ;; Auto vars:     Size  Location     Type
 35847 ;;		None
 35848 ;; Return value:  Size  Location     Type
 35849 ;;                  2    0[BANK0 ] PTR struct .
 35850 ;; Registers used:
 35851 ;;		wreg, status,2, status,0
 35852 ;; Tracked objects:
 35853 ;;		On entry : 0/0
 35854 ;;		On exit  : 0/0
 35855 ;;		Unchanged: 0/0
 35856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35861 ;;Total ram usage:        2 bytes
 35862 ;; Hardware stack levels used:    1
 35863 ;; Hardware stack levels required when called:   10
 35864 ;; This function calls:
 35865 ;;		Nothing
 35866 ;; This function is called by:
 35867 ;;		_USBMSDInit
 35868 ;;		_MSDProcessCommand
 35869 ;; This function uses a non-reentrant model
 35870 ;;
 35871                           
 35872                           	psect	text163
 35873  012A22                     __ptext163:
 35874                           	opt stack 0
 35875  012A22                     _ExternalFlash_MediaInitialize:
 35876                           	opt stack 0
 35877                           
 35878                           ; BSR set to: 0
 35879                           ;Skip over the trampoline to the duplicate function for level 2
 35880  012A22  B25F               	btfsc	btemp,1,c
 35881  012A24  EF95  F095         	goto	i2_ExternalFlash_MediaInitialize
 35882  012A28                     _ExternalFlash_MediaInitialize$intlevel0:
 35883                           	opt stack 17
 35884                           
 35885                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 35886                           
 35887                           ;incstack = 0
 35888  012A28  0102               	movlb	2	; () banked
 35889  012A2A  81BB               	bsf	(_mediaInformation+1)& (0+255),0,b
 35890                           
 35891                           ; BSR set to: 2
 35892                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 35893  012A2C  0E02               	movlw	2
 35894  012A2E  6FBD               	movwf	(_mediaInformation+3)& (0+255),b
 35895  012A30  0E00               	movlw	0
 35896  012A32  6FBC               	movwf	(_mediaInformation+2)& (0+255),b
 35897                           
 35898                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 35899  012A34  0E00               	movlw	0
 35900  012A36  6FBA               	movwf	_mediaInformation& (0+255),b
 35901                           
 35902                           ; BSR set to: 2
 35903                           ;external_flash.c: 15: return &mediaInformation;
 35904  012A38  0EBA               	movlw	low _mediaInformation
 35905  012A3A  0100               	movlb	0	; () banked
 35906  012A3C  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 35907  012A3E  0E02               	movlw	high _mediaInformation
 35908  012A40  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 35909  012A42  0012               	return	
 35910  012A44                     __end_of_ExternalFlash_MediaInitialize:
 35911                           	opt stack 0
 35912                           tosu	equ	0xFFF
 35913                           tosh	equ	0xFFE
 35914                           tosl	equ	0xFFD
 35915                           pclath	equ	0xFFA
 35916                           tblptru	equ	0xFF8
 35917                           tblptrh	equ	0xFF7
 35918                           tblptrl	equ	0xFF6
 35919                           tablat	equ	0xFF5
 35920                           prodh	equ	0xFF4
 35921                           prodl	equ	0xFF3
 35922                           intcon	equ	0xFF2
 35923                           intcon2	equ	0xFF1
 35924                           intcon3	equ	0xFF0
 35925                           postinc0	equ	0xFEE
 35926                           wreg	equ	0xFE8
 35927                           indf1	equ	0xFE7
 35928                           postinc1	equ	0xFE6
 35929                           postdec1	equ	0xFE5
 35930                           plusw1	equ	0xFE3
 35931                           fsr1h	equ	0xFE2
 35932                           fsr1l	equ	0xFE1
 35933                           indf2	equ	0xFDF
 35934                           postinc2	equ	0xFDE
 35935                           postdec2	equ	0xFDD
 35936                           plusw2	equ	0xFDB
 35937                           fsr2h	equ	0xFDA
 35938                           fsr2l	equ	0xFD9
 35939                           status	equ	0xFD8
 35940                           
 35941 ;; *************** function _ExternalFlash_MediaDetect *****************
 35942 ;; Defined at:
 35943 ;;		line 29 in file "external_flash.c"
 35944 ;; Parameters:    Size  Location     Type
 35945 ;;  config          2    0[BANK0 ] PTR void 
 35946 ;;		 -> NULL(0), 
 35947 ;; Auto vars:     Size  Location     Type
 35948 ;;		None
 35949 ;; Return value:  Size  Location     Type
 35950 ;;                  1    wreg      unsigned char 
 35951 ;; Registers used:
 35952 ;;		wreg
 35953 ;; Tracked objects:
 35954 ;;		On entry : 0/0
 35955 ;;		On exit  : 0/0
 35956 ;;		Unchanged: 0/0
 35957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35962 ;;Total ram usage:        2 bytes
 35963 ;; Hardware stack levels used:    1
 35964 ;; Hardware stack levels required when called:   10
 35965 ;; This function calls:
 35966 ;;		Nothing
 35967 ;; This function is called by:
 35968 ;;		_USBMSDInit
 35969 ;;		_MSDProcessCommand
 35970 ;; This function uses a non-reentrant model
 35971 ;;
 35972                           
 35973                           	psect	text164
 35974  012DDA                     __ptext164:
 35975                           	opt stack 0
 35976  012DDA                     _ExternalFlash_MediaDetect:
 35977                           	opt stack 0
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;Skip over the trampoline to the duplicate function for level 2
 35981  012DDA  B25F               	btfsc	btemp,1,c
 35982  012DDC  EF10  F097         	goto	i2_ExternalFlash_MediaDetect
 35983  012DE0                     _ExternalFlash_MediaDetect$intlevel0:
 35984                           	opt stack 17
 35985                           
 35986                           ;external_flash.c: 31: return 1;
 35987                           
 35988                           ;incstack = 0
 35989  012DE0  0E01               	movlw	1
 35990  012DE2  0012               	return	
 35991  012DE4                     __end_of_ExternalFlash_MediaDetect:
 35992                           	opt stack 0
 35993                           tosu	equ	0xFFF
 35994                           tosh	equ	0xFFE
 35995                           tosl	equ	0xFFD
 35996                           pclath	equ	0xFFA
 35997                           tblptru	equ	0xFF8
 35998                           tblptrh	equ	0xFF7
 35999                           tblptrl	equ	0xFF6
 36000                           tablat	equ	0xFF5
 36001                           prodh	equ	0xFF4
 36002                           prodl	equ	0xFF3
 36003                           intcon	equ	0xFF2
 36004                           intcon2	equ	0xFF1
 36005                           intcon3	equ	0xFF0
 36006                           postinc0	equ	0xFEE
 36007                           wreg	equ	0xFE8
 36008                           indf1	equ	0xFE7
 36009                           postinc1	equ	0xFE6
 36010                           postdec1	equ	0xFE5
 36011                           plusw1	equ	0xFE3
 36012                           fsr1h	equ	0xFE2
 36013                           fsr1l	equ	0xFE1
 36014                           indf2	equ	0xFDF
 36015                           postinc2	equ	0xFDE
 36016                           postdec2	equ	0xFDD
 36017                           plusw2	equ	0xFDB
 36018                           fsr2h	equ	0xFDA
 36019                           fsr2l	equ	0xFD9
 36020                           status	equ	0xFD8
 36021                           
 36022 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 36023 ;; Defined at:
 36024 ;;		line 108 in file "app_device_custom_hid.c"
 36025 ;; Parameters:    Size  Location     Type
 36026 ;;		None
 36027 ;; Auto vars:     Size  Location     Type
 36028 ;;  return_value    2   52[BANK0 ] unsigned int 
 36029 ;;  idx             1   54[BANK0 ] unsigned char 
 36030 ;; Return value:  Size  Location     Type
 36031 ;;                  1    wreg      void 
 36032 ;; Registers used:
 36033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36034 ;; Tracked objects:
 36035 ;;		On entry : 0/0
 36036 ;;		On exit  : 0/0
 36037 ;;		Unchanged: 0/0
 36038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36041 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36042 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36043 ;;Total ram usage:       11 bytes
 36044 ;; Hardware stack levels used:    1
 36045 ;; Hardware stack levels required when called:   15
 36046 ;; This function calls:
 36047 ;;		_USBTransferOnePacket
 36048 ;;		__fill_buffer_get_calibration1
 36049 ;;		__fill_buffer_get_calibration2
 36050 ;;		__fill_buffer_get_display1
 36051 ;;		__fill_buffer_get_display2
 36052 ;;		__fill_buffer_get_status
 36053 ;;		__parse_command_calibration
 36054 ;;		__parse_command_long
 36055 ;;		__parse_command_short
 36056 ;; This function is called by:
 36057 ;;		_main
 36058 ;; This function uses a non-reentrant model
 36059 ;;
 36060                           
 36061                           	psect	text165
 36062  00ADCC                     __ptext165:
 36063                           	opt stack 0
 36064  00ADCC                     _APP_DeviceCustomHIDTasks:
 36065                           	opt stack 15
 36066                           
 36067                           ;app_device_custom_hid.c: 110: uint8_t idx;
 36068                           ;app_device_custom_hid.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 36069                           
 36070                           ;incstack = 0
 36071  00ADCC  0E20               	movlw	32
 36072  00ADCE  605C               	cpfslt	_USBDeviceState,c	;volatile
 36073  00ADD0  D001               	goto	l1070
 36074  00ADD2  0012               	return	
 36075  00ADD4                     l1070:
 36076                           
 36077                           ;app_device_custom_hid.c: 118: }
 36078                           ;app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 36079  00ADD4  B265               	btfsc	3941,1,c	;volatile
 36080  00ADD6  0012               	return	
 36081                           
 36082                           ;app_device_custom_hid.c: 127: }
 36083                           ;app_device_custom_hid.c: 130: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 36084                           
 36085                           ;app_device_custom_hid.c: 125: {
 36086                           ;app_device_custom_hid.c: 126: return;
 36087  00ADD8  0102               	movlb	2	; () banked
 36088  00ADDA  51B4               	movf	_USBOutHandle& (0+255),w,b
 36089  00ADDC  11B5               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 36090  00ADDE  B4D8               	btfsc	status,2,c
 36091  00ADE0  D0E4               	goto	l1076
 36092                           
 36093                           ; BSR set to: 2
 36094  00ADE2  C2B4  FFD9         	movff	_USBOutHandle,fsr2l
 36095  00ADE6  C2B5  FFDA         	movff	_USBOutHandle+1,fsr2h
 36096  00ADEA  BEDF               	btfsc	indf2,7,c
 36097  00ADEC  0012               	return	
 36098  00ADEE  D0DD               	goto	l1076
 36099  00ADF0                     
 36100                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36101                           
 36102                           ; BSR set to: 2
 36103  00ADF0  0100               	movlb	0	; () banked
 36104  00ADF2  51F9               	movf	_USBInHandle& (0+255),w,b
 36105  00ADF4  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36106  00ADF6  B4D8               	btfsc	status,2,c
 36107  00ADF8  D006               	goto	u14930
 36108                           
 36109                           ; BSR set to: 0
 36110  00ADFA  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36111  00ADFE  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36112  00AE02  BEDF               	btfsc	indf2,7,c
 36113  00AE04  D0EC               	goto	l1081
 36114  00AE06                     u14930:
 36115                           
 36116                           ; BSR set to: 0
 36117                           ;app_device_custom_hid.c: 141: {
 36118                           ;app_device_custom_hid.c: 143: _fill_buffer_get_status();
 36119                           
 36120                           ; BSR set to: 0
 36121  00AE06  EC41  F061         	call	__fill_buffer_get_status	;wreg free
 36122                           
 36123                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36124  00AE0A  0E01               	movlw	1
 36125  00AE0C  0100               	movlb	0	; () banked
 36126  00AE0E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36127  00AE10  0EA4               	movlw	low _ToSendDataBuffer
 36128  00AE12  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36129  00AE14  0E03               	movlw	high _ToSendDataBuffer
 36130  00AE16  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36131  00AE18  0E40               	movlw	64
 36132  00AE1A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36133  00AE1C  0E01               	movlw	1
 36134  00AE1E  ECDF  F073         	call	_USBTransferOnePacket
 36135  00AE22  D0BE               	goto	L42
 36136  00AE24                     
 36137                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36138  00AE24  0100               	movlb	0	; () banked
 36139  00AE26  51F9               	movf	_USBInHandle& (0+255),w,b
 36140  00AE28  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36141  00AE2A  B4D8               	btfsc	status,2,c
 36142  00AE2C  D006               	goto	u14950
 36143                           
 36144                           ; BSR set to: 0
 36145  00AE2E  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36146  00AE32  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36147  00AE36  BEDF               	btfsc	indf2,7,c
 36148  00AE38  D0D2               	goto	l1081
 36149  00AE3A                     u14950:
 36150                           
 36151                           ; BSR set to: 0
 36152                           ;app_device_custom_hid.c: 152: {
 36153                           ;app_device_custom_hid.c: 154: _fill_buffer_get_display1();
 36154                           
 36155                           ; BSR set to: 0
 36156  00AE3A  EC2C  F08F         	call	__fill_buffer_get_display1	;wreg free
 36157                           
 36158                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36159  00AE3E  0E01               	movlw	1
 36160  00AE40  0100               	movlb	0	; () banked
 36161  00AE42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36162  00AE44  0EA4               	movlw	low _ToSendDataBuffer
 36163  00AE46  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36164  00AE48  0E03               	movlw	high _ToSendDataBuffer
 36165  00AE4A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36166  00AE4C  0E40               	movlw	64
 36167  00AE4E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36168  00AE50  0E01               	movlw	1
 36169  00AE52  ECDF  F073         	call	_USBTransferOnePacket
 36170  00AE56  D0A4               	goto	L42
 36171  00AE58                     
 36172                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36173  00AE58  0100               	movlb	0	; () banked
 36174  00AE5A  51F9               	movf	_USBInHandle& (0+255),w,b
 36175  00AE5C  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36176  00AE5E  B4D8               	btfsc	status,2,c
 36177  00AE60  D006               	goto	u14970
 36178                           
 36179                           ; BSR set to: 0
 36180  00AE62  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36181  00AE66  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36182  00AE6A  BEDF               	btfsc	indf2,7,c
 36183  00AE6C  D0B8               	goto	l1081
 36184  00AE6E                     u14970:
 36185                           
 36186                           ; BSR set to: 0
 36187                           ;app_device_custom_hid.c: 163: {
 36188                           ;app_device_custom_hid.c: 165: _fill_buffer_get_display2();
 36189                           
 36190                           ; BSR set to: 0
 36191  00AE6E  EC04  F08F         	call	__fill_buffer_get_display2	;wreg free
 36192                           
 36193                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36194  00AE72  0E01               	movlw	1
 36195  00AE74  0100               	movlb	0	; () banked
 36196  00AE76  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36197  00AE78  0EA4               	movlw	low _ToSendDataBuffer
 36198  00AE7A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36199  00AE7C  0E03               	movlw	high _ToSendDataBuffer
 36200  00AE7E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36201  00AE80  0E40               	movlw	64
 36202  00AE82  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36203  00AE84  0E01               	movlw	1
 36204  00AE86  ECDF  F073         	call	_USBTransferOnePacket
 36205  00AE8A  D08A               	goto	L42
 36206  00AE8C                     
 36207                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36208  00AE8C  0100               	movlb	0	; () banked
 36209  00AE8E  51F9               	movf	_USBInHandle& (0+255),w,b
 36210  00AE90  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36211  00AE92  B4D8               	btfsc	status,2,c
 36212  00AE94  D006               	goto	u14990
 36213                           
 36214                           ; BSR set to: 0
 36215  00AE96  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36216  00AE9A  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36217  00AE9E  BEDF               	btfsc	indf2,7,c
 36218  00AEA0  D09E               	goto	l1081
 36219  00AEA2                     u14990:
 36220                           
 36221                           ; BSR set to: 0
 36222                           ;app_device_custom_hid.c: 174: {
 36223                           ;app_device_custom_hid.c: 176: _fill_buffer_get_calibration1();
 36224                           
 36225                           ; BSR set to: 0
 36226  00AEA2  ECEC  F085         	call	__fill_buffer_get_calibration1	;wreg free
 36227                           
 36228                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36229  00AEA6  0E01               	movlw	1
 36230  00AEA8  0100               	movlb	0	; () banked
 36231  00AEAA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36232  00AEAC  0EA4               	movlw	low _ToSendDataBuffer
 36233  00AEAE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36234  00AEB0  0E03               	movlw	high _ToSendDataBuffer
 36235  00AEB2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36236  00AEB4  0E40               	movlw	64
 36237  00AEB6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36238  00AEB8  0E01               	movlw	1
 36239  00AEBA  ECDF  F073         	call	_USBTransferOnePacket
 36240  00AEBE  D070               	goto	L42
 36241  00AEC0                     
 36242                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36243  00AEC0  0100               	movlb	0	; () banked
 36244  00AEC2  51F9               	movf	_USBInHandle& (0+255),w,b
 36245  00AEC4  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36246  00AEC6  B4D8               	btfsc	status,2,c
 36247  00AEC8  D006               	goto	u15010
 36248                           
 36249                           ; BSR set to: 0
 36250  00AECA  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36251  00AECE  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36252  00AED2  BEDF               	btfsc	indf2,7,c
 36253  00AED4  D084               	goto	l1081
 36254  00AED6                     u15010:
 36255                           
 36256                           ; BSR set to: 0
 36257                           ;app_device_custom_hid.c: 185: {
 36258                           ;app_device_custom_hid.c: 187: _fill_buffer_get_calibration2();
 36259                           
 36260                           ; BSR set to: 0
 36261  00AED6  EC87  F08A         	call	__fill_buffer_get_calibration2	;wreg free
 36262                           
 36263                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36264  00AEDA  0E01               	movlw	1
 36265  00AEDC  0100               	movlb	0	; () banked
 36266  00AEDE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36267  00AEE0  0EA4               	movlw	low _ToSendDataBuffer
 36268  00AEE2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36269  00AEE4  0E03               	movlw	high _ToSendDataBuffer
 36270  00AEE6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36271  00AEE8  0E40               	movlw	64
 36272  00AEEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36273  00AEEC  0E01               	movlw	1
 36274  00AEEE  ECDF  F073         	call	_USBTransferOnePacket
 36275  00AEF2  D056               	goto	L42
 36276  00AEF4                     
 36277                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 36278  00AEF4  728C               	btg	3980,1,c	;volatile
 36279                           
 36280                           ;app_device_custom_hid.c: 196: break;
 36281  00AEF6  D073               	goto	l1081
 36282  00AEF8                     
 36283                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36284  00AEF8  0100               	movlb	0	; () banked
 36285  00AEFA  51F9               	movf	_USBInHandle& (0+255),w,b
 36286  00AEFC  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36287  00AEFE  B4D8               	btfsc	status,2,c
 36288  00AF00  D006               	goto	u15030
 36289                           
 36290                           ; BSR set to: 0
 36291  00AF02  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36292  00AF06  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36293  00AF0A  BEDF               	btfsc	indf2,7,c
 36294  00AF0C  D068               	goto	l1081
 36295  00AF0E                     u15030:
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;app_device_custom_hid.c: 201: {
 36299                           ;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 36300                           
 36301                           ; BSR set to: 0
 36302  00AF0E  0E81               	movlw	129
 36303  00AF10  0103               	movlb	3	; () banked
 36304  00AF12  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36305                           
 36306                           ; BSR set to: 3
 36307                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 36308  00AF14  A080               	btfss	3968,0,c	;volatile
 36309  00AF16  D002               	goto	l1103
 36310                           
 36311                           ; BSR set to: 3
 36312                           ;app_device_custom_hid.c: 205: {
 36313                           ;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x01;
 36314  00AF18  0E01               	movlw	1
 36315  00AF1A  D001               	goto	L41
 36316  00AF1C                     l1103:
 36317                           
 36318                           ; BSR set to: 3
 36319                           ;app_device_custom_hid.c: 209: else
 36320                           ;app_device_custom_hid.c: 210: {
 36321                           ;app_device_custom_hid.c: 212: ToSendDataBuffer[1] = 0x00;
 36322                           
 36323                           ; BSR set to: 3
 36324  00AF1C  0E00               	movlw	0
 36325  00AF1E                     L41:
 36326  00AF1E  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 36327                           
 36328                           ; BSR set to: 3
 36329                           ;app_device_custom_hid.c: 213: }
 36330                           ;app_device_custom_hid.c: 215: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36331                           
 36332                           ; BSR set to: 3
 36333  00AF20  0E01               	movlw	1
 36334  00AF22  0100               	movlb	0	; () banked
 36335  00AF24  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36336  00AF26  0EA4               	movlw	low _ToSendDataBuffer
 36337  00AF28  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36338  00AF2A  0E03               	movlw	high _ToSendDataBuffer
 36339  00AF2C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36340  00AF2E  0E40               	movlw	64
 36341  00AF30  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36342  00AF32  0E01               	movlw	1
 36343  00AF34  ECDF  F073         	call	_USBTransferOnePacket
 36344  00AF38  D033               	goto	L42
 36345  00AF3A                     
 36346                           ;app_device_custom_hid.c: 220: {
 36347                           ;app_device_custom_hid.c: 221: uint16_t return_value;
 36348                           ;app_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36349  00AF3A  0100               	movlb	0	; () banked
 36350  00AF3C  51F9               	movf	_USBInHandle& (0+255),w,b
 36351  00AF3E  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36352  00AF40  B4D8               	btfsc	status,2,c
 36353  00AF42  D006               	goto	u15060
 36354                           
 36355                           ; BSR set to: 0
 36356  00AF44  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36357  00AF48  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36358  00AF4C  BEDF               	btfsc	indf2,7,c
 36359  00AF4E  D047               	goto	l1081
 36360  00AF50                     u15060:
 36361                           
 36362                           ; BSR set to: 0
 36363                           ;app_device_custom_hid.c: 224: {
 36364                           ;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 36365                           
 36366                           ; BSR set to: 0
 36367  00AF50  0E37               	movlw	55
 36368  00AF52  0103               	movlb	3	; () banked
 36369  00AF54  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36370                           
 36371                           ; BSR set to: 3
 36372                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 36373  00AF56  EE22  F036         	lfsr	2,_os+54	;volatile
 36374  00AF5A  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 36375  00AF5E  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 36376  00AF62  0100               	movlb	0	; () banked
 36377  00AF64  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36378  00AF66  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36379  00AF68  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36380  00AF6A  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36381  00AF6C  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36382  00AF6E  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36383  00AF70  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36384  00AF72  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36385  00AF74  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36386  00AF76  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 36387  00AF7A  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 36388                           
 36389                           ; BSR set to: 0
 36390                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 36391  00AF7E  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 36392                           
 36393                           ; BSR set to: 0
 36394                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 36395  00AF82  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 36396  00AF84  0103               	movlb	3	; () banked
 36397  00AF86  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 36398                           
 36399                           ; BSR set to: 3
 36400                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36401  00AF88  0E01               	movlw	1
 36402  00AF8A  0100               	movlb	0	; () banked
 36403  00AF8C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36404  00AF8E  0EA4               	movlw	low _ToSendDataBuffer
 36405  00AF90  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36406  00AF92  0E03               	movlw	high _ToSendDataBuffer
 36407  00AF94  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36408  00AF96  0E40               	movlw	64
 36409  00AF98  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36410  00AF9A  0E01               	movlw	1
 36411  00AF9C  ECDF  F073         	call	_USBTransferOnePacket
 36412  00AFA0                     L42:
 36413  00AFA0  C060  F0F9         	movff	?_USBTransferOnePacket,_USBInHandle
 36414  00AFA4  C061  F0FA         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 36415                           
 36416                           ;app_device_custom_hid.c: 236: }
 36417                           
 36418                           ;app_device_custom_hid.c: 233: }
 36419                           ;app_device_custom_hid.c: 234: }
 36420                           ;app_device_custom_hid.c: 235: break;
 36421  00AFA8  D01A               	goto	l1081
 36422  00AFAA                     l1076:
 36423  00AFAA  0104               	movlb	4	; () banked
 36424  00AFAC  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 36425                           
 36426                           ; Switch size 1, requested type "space"
 36427                           ; Number of cases is 8, Range of values is 16 to 129
 36428                           ; switch strategies available:
 36429                           ; Name         Instructions Cycles
 36430                           ; simple_byte           25    13 (average)
 36431                           ;	Chosen strategy is simple_byte
 36432  00AFAE  0A10               	xorlw	16	; case 16
 36433  00AFB0  B4D8               	btfsc	status,2,c
 36434  00AFB2  D71E               	goto	l1077
 36435  00AFB4  0A01               	xorlw	1	; case 17
 36436  00AFB6  B4D8               	btfsc	status,2,c
 36437  00AFB8  D735               	goto	l1082
 36438  00AFBA  0A03               	xorlw	3	; case 18
 36439  00AFBC  B4D8               	btfsc	status,2,c
 36440  00AFBE  D74C               	goto	l1086
 36441  00AFC0  0A01               	xorlw	1	; case 19
 36442  00AFC2  B4D8               	btfsc	status,2,c
 36443  00AFC4  D763               	goto	l1090
 36444  00AFC6  0A07               	xorlw	7	; case 20
 36445  00AFC8  B4D8               	btfsc	status,2,c
 36446  00AFCA  D77A               	goto	l1094
 36447  00AFCC  0A23               	xorlw	35	; case 55
 36448  00AFCE  B4D8               	btfsc	status,2,c
 36449  00AFD0  D7B4               	goto	l1105
 36450  00AFD2  0AB7               	xorlw	183	; case 128
 36451  00AFD4  B4D8               	btfsc	status,2,c
 36452  00AFD6  D78E               	goto	l1098
 36453  00AFD8  0A01               	xorlw	1	; case 129
 36454  00AFDA  B4D8               	btfsc	status,2,c
 36455  00AFDC  D78D               	goto	l1099
 36456  00AFDE                     l1081:
 36457                           
 36458                           ;app_device_custom_hid.c: 239: idx = 1;
 36459                           
 36460                           ; BSR set to: 4
 36461  00AFDE  0E01               	movlw	1
 36462  00AFE0  0100               	movlb	0	; () banked
 36463  00AFE2  D076               	goto	L43
 36464  00AFE4                     
 36465                           ; BSR set to: 0
 36466                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 36467                           
 36468                           ; BSR set to: 0
 36469  00AFE4  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36470  00AFE6  0D01               	mullw	1
 36471  00AFE8  0E78               	movlw	low _ReceivedDataBuffer
 36472  00AFEA  24F3               	addwf	prodl,w,c
 36473  00AFEC  6ED9               	movwf	fsr2l,c
 36474  00AFEE  0E04               	movlw	high _ReceivedDataBuffer
 36475  00AFF0  20F4               	addwfc	prodh,w,c
 36476  00AFF2  6EDA               	movwf	fsr2h,c
 36477  00AFF4  50DF               	movf	indf2,w,c
 36478  00AFF6  ECC9  F078         	call	__parse_command_short
 36479                           
 36480                           ;app_device_custom_hid.c: 246: ++idx;
 36481  00AFFA  0100               	movlb	0	; () banked
 36482  00AFFC  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36483                           
 36484                           ;app_device_custom_hid.c: 247: break;
 36485  00AFFE  D085               	goto	l1113
 36486  00B000                     
 36487                           ; BSR set to: 0
 36488                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 36489                           
 36490                           ; BSR set to: 0
 36491  00B000  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36492  00B002  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36493  00B004  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36494  00B006  0E01               	movlw	1
 36495  00B008  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36496  00B00A  0E00               	movlw	0
 36497  00B00C  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36498  00B00E  0E78               	movlw	low _ReceivedDataBuffer
 36499  00B010  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36500  00B012  6ED9               	movwf	fsr2l,c
 36501  00B014  0E04               	movlw	high _ReceivedDataBuffer
 36502  00B016  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36503  00B018  6EDA               	movwf	fsr2h,c
 36504  00B01A  50DF               	movf	indf2,w,c
 36505  00B01C  6F63               	movwf	__parse_command_long@data& (0+255),b
 36506  00B01E  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36507  00B020  0D01               	mullw	1
 36508  00B022  0E78               	movlw	low _ReceivedDataBuffer
 36509  00B024  24F3               	addwf	prodl,w,c
 36510  00B026  6ED9               	movwf	fsr2l,c
 36511  00B028  0E04               	movlw	high _ReceivedDataBuffer
 36512  00B02A  20F4               	addwfc	prodh,w,c
 36513  00B02C  6EDA               	movwf	fsr2h,c
 36514  00B02E  50DF               	movf	indf2,w,c
 36515  00B030  EC53  F078         	call	__parse_command_long
 36516                           
 36517                           ;app_device_custom_hid.c: 250: idx += 2;
 36518  00B034  0E02               	movlw	2
 36519  00B036  D048               	goto	L44
 36520  00B038                     
 36521                           ; BSR set to: 0
 36522                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 36523                           
 36524                           ; BSR set to: 0
 36525  00B038  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36526  00B03A  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36527  00B03C  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36528  00B03E  0E01               	movlw	1
 36529  00B040  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36530  00B042  0E00               	movlw	0
 36531  00B044  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36532  00B046  0E78               	movlw	low _ReceivedDataBuffer
 36533  00B048  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36534  00B04A  6ED9               	movwf	fsr2l,c
 36535  00B04C  0E04               	movlw	high _ReceivedDataBuffer
 36536  00B04E  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36537  00B050  6EDA               	movwf	fsr2h,c
 36538  00B052  50DF               	movf	indf2,w,c
 36539  00B054  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 36540  00B056  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36541  00B058  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 36542  00B05A  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 36543  00B05C  0E02               	movlw	2
 36544  00B05E  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 36545  00B060  0E00               	movlw	0
 36546  00B062  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 36547  00B064  0E78               	movlw	low _ReceivedDataBuffer
 36548  00B066  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 36549  00B068  6ED9               	movwf	fsr2l,c
 36550  00B06A  0E04               	movlw	high _ReceivedDataBuffer
 36551  00B06C  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 36552  00B06E  6EDA               	movwf	fsr2h,c
 36553  00B070  50DF               	movf	indf2,w,c
 36554  00B072  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 36555  00B074  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36556  00B076  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 36557  00B078  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 36558  00B07A  0E03               	movlw	3
 36559  00B07C  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 36560  00B07E  0E00               	movlw	0
 36561  00B080  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 36562  00B082  0E78               	movlw	low _ReceivedDataBuffer
 36563  00B084  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 36564  00B086  6ED9               	movwf	fsr2l,c
 36565  00B088  0E04               	movlw	high _ReceivedDataBuffer
 36566  00B08A  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 36567  00B08C  6EDA               	movwf	fsr2h,c
 36568  00B08E  50DF               	movf	indf2,w,c
 36569  00B090  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 36570  00B092  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36571  00B094  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 36572  00B096  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 36573  00B098  0E04               	movlw	4
 36574  00B09A  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 36575  00B09C  0E00               	movlw	0
 36576  00B09E  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 36577  00B0A0  0E78               	movlw	low _ReceivedDataBuffer
 36578  00B0A2  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 36579  00B0A4  6ED9               	movwf	fsr2l,c
 36580  00B0A6  0E04               	movlw	high _ReceivedDataBuffer
 36581  00B0A8  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 36582  00B0AA  6EDA               	movwf	fsr2h,c
 36583  00B0AC  50DF               	movf	indf2,w,c
 36584  00B0AE  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 36585  00B0B0  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36586  00B0B2  0D01               	mullw	1
 36587  00B0B4  0E78               	movlw	low _ReceivedDataBuffer
 36588  00B0B6  24F3               	addwf	prodl,w,c
 36589  00B0B8  6ED9               	movwf	fsr2l,c
 36590  00B0BA  0E04               	movlw	high _ReceivedDataBuffer
 36591  00B0BC  20F4               	addwfc	prodh,w,c
 36592  00B0BE  6EDA               	movwf	fsr2h,c
 36593  00B0C0  50DF               	movf	indf2,w,c
 36594  00B0C2  ECF3  F06E         	call	__parse_command_calibration
 36595                           
 36596                           ;app_device_custom_hid.c: 254: idx += 5;
 36597  00B0C6  0E05               	movlw	5
 36598  00B0C8                     L44:
 36599  00B0C8  0100               	movlb	0	; () banked
 36600  00B0CA  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36601                           
 36602                           ;app_device_custom_hid.c: 255: break;
 36603  00B0CC  D01E               	goto	l1113
 36604  00B0CE                     
 36605                           ; BSR set to: 0
 36606                           ;app_device_custom_hid.c: 257: idx = 65;
 36607                           
 36608                           ; BSR set to: 0
 36609  00B0CE  0E41               	movlw	65
 36610  00B0D0                     L43:
 36611  00B0D0  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 36612                           
 36613                           ;app_device_custom_hid.c: 258: }
 36614  00B0D2  D01B               	goto	l1113
 36615  00B0D4                     
 36616                           ; BSR set to: 0
 36617                           
 36618                           ; BSR set to: 0
 36619  00B0D4  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36620  00B0D6  0D01               	mullw	1
 36621  00B0D8  0E78               	movlw	low _ReceivedDataBuffer
 36622  00B0DA  24F3               	addwf	prodl,w,c
 36623  00B0DC  6ED9               	movwf	fsr2l,c
 36624  00B0DE  0E04               	movlw	high _ReceivedDataBuffer
 36625  00B0E0  20F4               	addwfc	prodh,w,c
 36626  00B0E2  6EDA               	movwf	fsr2h,c
 36627  00B0E4  50DF               	movf	indf2,w,c
 36628  00B0E6  0BF0               	andlw	240
 36629  00B0E8  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36630  00B0EA  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36631                           
 36632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36633                           ; Switch size 1, requested type "space"
 36634                           ; Number of cases is 1, Range of values is 0 to 0
 36635                           ; switch strategies available:
 36636                           ; Name         Instructions Cycles
 36637                           ; simple_byte            4     3 (average)
 36638                           ;	Chosen strategy is simple_byte
 36639  00B0EC  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36640  00B0EE  0A00               	xorlw	0	; case 0
 36641  00B0F0  A4D8               	btfss	status,2,c
 36642  00B0F2  D7ED               	goto	l1116
 36643                           
 36644                           ; BSR set to: 0
 36645                           ; Switch size 1, requested type "space"
 36646                           ; Number of cases is 3, Range of values is 48 to 96
 36647                           ; switch strategies available:
 36648                           ; Name         Instructions Cycles
 36649                           ; simple_byte           10     6 (average)
 36650                           ;	Chosen strategy is simple_byte
 36651  00B0F4  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36652  00B0F6  0A30               	xorlw	48	; case 48
 36653  00B0F8  B4D8               	btfsc	status,2,c
 36654  00B0FA  D774               	goto	l1112
 36655  00B0FC  0A70               	xorlw	112	; case 64
 36656  00B0FE  B4D8               	btfsc	status,2,c
 36657  00B100  D77F               	goto	l1114
 36658  00B102  0A20               	xorlw	32	; case 96
 36659  00B104  B4D8               	btfsc	status,2,c
 36660  00B106  D798               	goto	l1115
 36661  00B108  D7E2               	goto	l1116
 36662  00B10A                     l1113:
 36663                           
 36664                           ; BSR set to: 0
 36665                           
 36666                           ; BSR set to: 0
 36667                           
 36668                           ; BSR set to: 0
 36669  00B10A  0E3D               	movlw	61
 36670  00B10C  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 36671  00B10E  D7E2               	goto	l1111
 36672                           
 36673                           ; BSR set to: 0
 36674                           ;app_device_custom_hid.c: 259: }
 36675                           ;app_device_custom_hid.c: 263: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 36676                           
 36677                           ; BSR set to: 0
 36678  00B110  0E00               	movlw	0
 36679  00B112  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36680  00B114  0E78               	movlw	low _ReceivedDataBuffer
 36681  00B116  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36682  00B118  0E04               	movlw	high _ReceivedDataBuffer
 36683  00B11A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36684  00B11C  0E40               	movlw	64
 36685  00B11E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36686  00B120  0E01               	movlw	1
 36687  00B122  ECDF  F073         	call	_USBTransferOnePacket
 36688  00B126  C060  F2B4         	movff	?_USBTransferOnePacket,_USBOutHandle
 36689  00B12A  C061  F2B5         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 36690  00B12E  0012               	return	
 36691  00B130                     __end_of_APP_DeviceCustomHIDTasks:
 36692                           	opt stack 0
 36693                           tosu	equ	0xFFF
 36694                           tosh	equ	0xFFE
 36695                           tosl	equ	0xFFD
 36696                           pclath	equ	0xFFA
 36697                           tblptru	equ	0xFF8
 36698                           tblptrh	equ	0xFF7
 36699                           tblptrl	equ	0xFF6
 36700                           tablat	equ	0xFF5
 36701                           prodh	equ	0xFF4
 36702                           prodl	equ	0xFF3
 36703                           intcon	equ	0xFF2
 36704                           intcon2	equ	0xFF1
 36705                           intcon3	equ	0xFF0
 36706                           postinc0	equ	0xFEE
 36707                           wreg	equ	0xFE8
 36708                           indf1	equ	0xFE7
 36709                           postinc1	equ	0xFE6
 36710                           postdec1	equ	0xFE5
 36711                           plusw1	equ	0xFE3
 36712                           fsr1h	equ	0xFE2
 36713                           fsr1l	equ	0xFE1
 36714                           indf2	equ	0xFDF
 36715                           postinc2	equ	0xFDE
 36716                           postdec2	equ	0xFDD
 36717                           plusw2	equ	0xFDB
 36718                           fsr2h	equ	0xFDA
 36719                           fsr2l	equ	0xFD9
 36720                           status	equ	0xFD8
 36721                           
 36722 ;; *************** function __parse_command_short *****************
 36723 ;; Defined at:
 36724 ;;		line 398 in file "app_device_custom_hid.c"
 36725 ;; Parameters:    Size  Location     Type
 36726 ;;  cmd             1    wreg     unsigned char 
 36727 ;; Auto vars:     Size  Location     Type
 36728 ;;  cmd             1   43[BANK0 ] unsigned char 
 36729 ;; Return value:  Size  Location     Type
 36730 ;;                  1    wreg      void 
 36731 ;; Registers used:
 36732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36733 ;; Tracked objects:
 36734 ;;		On entry : 0/0
 36735 ;;		On exit  : 0/0
 36736 ;;		Unchanged: 0/0
 36737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36742 ;;Total ram usage:        1 bytes
 36743 ;; Hardware stack levels used:    1
 36744 ;; Hardware stack levels required when called:   14
 36745 ;; This function calls:
 36746 ;;		_rtcc_write_eeprom
 36747 ;;		_system_output_off
 36748 ;;		_system_output_on
 36749 ;; This function is called by:
 36750 ;;		_APP_DeviceCustomHIDTasks
 36751 ;; This function uses a non-reentrant model
 36752 ;;
 36753                           
 36754                           	psect	text166
 36755  00F192                     __ptext166:
 36756                           	opt stack 0
 36757  00F192                     __parse_command_short:
 36758                           	opt stack 15
 36759                           
 36760                           ;incstack = 0
 36761                           ;__parse_command_short@cmd stored from wreg
 36762  00F192  0100               	movlb	0	; () banked
 36763  00F194  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 36764                           
 36765                           ;app_device_custom_hid.c: 400: switch(cmd)
 36766  00F196  D03C               	goto	l1143
 36767  00F198                     
 36768                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 36769  00F198  0E01               	movlw	1
 36770  00F19A  EC3E  F08D         	call	_system_output_off
 36771                           
 36772                           ;app_device_custom_hid.c: 404: break;
 36773  00F19E  0012               	return	
 36774  00F1A0                     
 36775                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 36776  00F1A0  0E01               	movlw	1
 36777  00F1A2  EC54  F08F         	call	_system_output_on
 36778                           
 36779                           ;app_device_custom_hid.c: 407: break;
 36780  00F1A6  0012               	return	
 36781  00F1A8                     
 36782                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 36783  00F1A8  0E02               	movlw	2
 36784  00F1AA  EC3E  F08D         	call	_system_output_off
 36785                           
 36786                           ;app_device_custom_hid.c: 410: break;
 36787  00F1AE  0012               	return	
 36788  00F1B0                     
 36789                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 36790  00F1B0  0E02               	movlw	2
 36791  00F1B2  EC54  F08F         	call	_system_output_on
 36792                           
 36793                           ;app_device_custom_hid.c: 413: break;
 36794  00F1B6  0012               	return	
 36795  00F1B8                     
 36796                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 36797  00F1B8  0E04               	movlw	4
 36798  00F1BA  EC3E  F08D         	call	_system_output_off
 36799                           
 36800                           ;app_device_custom_hid.c: 416: break;
 36801  00F1BE  0012               	return	
 36802  00F1C0                     
 36803                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 36804  00F1C0  0E04               	movlw	4
 36805  00F1C2  EC54  F08F         	call	_system_output_on
 36806                           
 36807                           ;app_device_custom_hid.c: 419: break;
 36808  00F1C6  0012               	return	
 36809  00F1C8                     
 36810                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 36811  00F1C8  0E08               	movlw	8
 36812  00F1CA  EC3E  F08D         	call	_system_output_off
 36813                           
 36814                           ;app_device_custom_hid.c: 422: break;
 36815  00F1CE  0012               	return	
 36816  00F1D0                     
 36817                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 36818  00F1D0  0E08               	movlw	8
 36819  00F1D2  EC54  F08F         	call	_system_output_on
 36820                           
 36821                           ;app_device_custom_hid.c: 425: break;
 36822  00F1D6  0012               	return	
 36823  00F1D8                     
 36824                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 36825  00F1D8  0E10               	movlw	16
 36826  00F1DA  EC3E  F08D         	call	_system_output_off
 36827                           
 36828                           ;app_device_custom_hid.c: 428: break;
 36829  00F1DE  0012               	return	
 36830  00F1E0                     
 36831                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 36832  00F1E0  0E10               	movlw	16
 36833  00F1E2  EC54  F08F         	call	_system_output_on
 36834                           
 36835                           ;app_device_custom_hid.c: 431: break;
 36836  00F1E6  0012               	return	
 36837  00F1E8                     
 36838                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 36839  00F1E8  0E20               	movlw	32
 36840  00F1EA  EC3E  F08D         	call	_system_output_off
 36841                           
 36842                           ;app_device_custom_hid.c: 434: break;
 36843  00F1EE  0012               	return	
 36844  00F1F0                     
 36845                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 36846  00F1F0  0E20               	movlw	32
 36847  00F1F2  EC54  F08F         	call	_system_output_on
 36848                           
 36849                           ;app_device_custom_hid.c: 437: break;
 36850  00F1F6  0012               	return	
 36851  00F1F8                     
 36852                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 36853  00F1F8  0102               	movlb	2	; () banked
 36854  00F1FA  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 36855                           
 36856                           ;app_device_custom_hid.c: 440: break;
 36857  00F1FC  0012               	return	
 36858  00F1FE                     
 36859                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 36860                           
 36861                           ; BSR set to: 2
 36862  00F1FE  0102               	movlb	2	; () banked
 36863  00F200  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 36864                           
 36865                           ;app_device_custom_hid.c: 443: break;
 36866  00F202  0012               	return	
 36867  00F204                     
 36868                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 36869                           
 36870                           ; BSR set to: 2
 36871  00F204  0102               	movlb	2	; () banked
 36872  00F206  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 36873                           
 36874                           ;app_device_custom_hid.c: 446: break;
 36875  00F208  0012               	return	
 36876  00F20A                     
 36877                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 36878                           
 36879                           ; BSR set to: 2
 36880  00F20A  ECEB  F08F         	call	_rtcc_write_eeprom	;wreg free
 36881                           
 36882                           ;app_device_custom_hid.c: 450: }
 36883                           
 36884                           ;app_device_custom_hid.c: 449: break;
 36885  00F20E  0012               	return	
 36886  00F210                     l1143:
 36887  00F210  0100               	movlb	0	; () banked
 36888  00F212  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 36889                           
 36890                           ; Switch size 1, requested type "space"
 36891                           ; Number of cases is 16, Range of values is 48 to 63
 36892                           ; switch strategies available:
 36893                           ; Name         Instructions Cycles
 36894                           ; simple_byte           49    25 (average)
 36895                           ;	Chosen strategy is simple_byte
 36896  00F214  0A30               	xorlw	48	; case 48
 36897  00F216  B4D8               	btfsc	status,2,c
 36898  00F218  D7BF               	goto	l1144
 36899  00F21A  0A01               	xorlw	1	; case 49
 36900  00F21C  B4D8               	btfsc	status,2,c
 36901  00F21E  D7C0               	goto	l1146
 36902  00F220  0A03               	xorlw	3	; case 50
 36903  00F222  B4D8               	btfsc	status,2,c
 36904  00F224  D7C1               	goto	l1147
 36905  00F226  0A01               	xorlw	1	; case 51
 36906  00F228  B4D8               	btfsc	status,2,c
 36907  00F22A  D7C2               	goto	l1148
 36908  00F22C  0A07               	xorlw	7	; case 52
 36909  00F22E  B4D8               	btfsc	status,2,c
 36910  00F230  D7C3               	goto	l1149
 36911  00F232  0A01               	xorlw	1	; case 53
 36912  00F234  B4D8               	btfsc	status,2,c
 36913  00F236  D7C4               	goto	l1150
 36914  00F238  0A03               	xorlw	3	; case 54
 36915  00F23A  B4D8               	btfsc	status,2,c
 36916  00F23C  D7C5               	goto	l1151
 36917  00F23E  0A01               	xorlw	1	; case 55
 36918  00F240  B4D8               	btfsc	status,2,c
 36919  00F242  D7C6               	goto	l1152
 36920  00F244  0A0F               	xorlw	15	; case 56
 36921  00F246  B4D8               	btfsc	status,2,c
 36922  00F248  D7C7               	goto	l1153
 36923  00F24A  0A01               	xorlw	1	; case 57
 36924  00F24C  B4D8               	btfsc	status,2,c
 36925  00F24E  D7C8               	goto	l1154
 36926  00F250  0A03               	xorlw	3	; case 58
 36927  00F252  B4D8               	btfsc	status,2,c
 36928  00F254  D7C9               	goto	l1155
 36929  00F256  0A01               	xorlw	1	; case 59
 36930  00F258  B4D8               	btfsc	status,2,c
 36931  00F25A  D7CA               	goto	l1156
 36932  00F25C  0A07               	xorlw	7	; case 60
 36933  00F25E  B4D8               	btfsc	status,2,c
 36934  00F260  D7CB               	goto	l1157
 36935  00F262  0A01               	xorlw	1	; case 61
 36936  00F264  B4D8               	btfsc	status,2,c
 36937  00F266  D7CB               	goto	l1158
 36938  00F268  0A03               	xorlw	3	; case 62
 36939  00F26A  B4D8               	btfsc	status,2,c
 36940  00F26C  D7CB               	goto	l1159
 36941  00F26E  0A01               	xorlw	1	; case 63
 36942  00F270  A4D8               	btfss	status,2,c
 36943  00F272  0012               	return	
 36944  00F274  D7CA               	goto	l1160
 36945  00F276                     __end_of__parse_command_short:
 36946                           	opt stack 0
 36947                           tosu	equ	0xFFF
 36948                           tosh	equ	0xFFE
 36949                           tosl	equ	0xFFD
 36950                           pclath	equ	0xFFA
 36951                           tblptru	equ	0xFF8
 36952                           tblptrh	equ	0xFF7
 36953                           tblptrl	equ	0xFF6
 36954                           tablat	equ	0xFF5
 36955                           prodh	equ	0xFF4
 36956                           prodl	equ	0xFF3
 36957                           intcon	equ	0xFF2
 36958                           intcon2	equ	0xFF1
 36959                           intcon3	equ	0xFF0
 36960                           postinc0	equ	0xFEE
 36961                           wreg	equ	0xFE8
 36962                           indf1	equ	0xFE7
 36963                           postinc1	equ	0xFE6
 36964                           postdec1	equ	0xFE5
 36965                           plusw1	equ	0xFE3
 36966                           fsr1h	equ	0xFE2
 36967                           fsr1l	equ	0xFE1
 36968                           indf2	equ	0xFDF
 36969                           postinc2	equ	0xFDE
 36970                           postdec2	equ	0xFDD
 36971                           plusw2	equ	0xFDB
 36972                           fsr2h	equ	0xFDA
 36973                           fsr2l	equ	0xFD9
 36974                           status	equ	0xFD8
 36975                           
 36976 ;; *************** function _system_output_on *****************
 36977 ;; Defined at:
 36978 ;;		line 507 in file "os.c"
 36979 ;; Parameters:    Size  Location     Type
 36980 ;;  output          1    wreg     enum E8135
 36981 ;; Auto vars:     Size  Location     Type
 36982 ;;  output          1    0[BANK0 ] enum E8135
 36983 ;; Return value:  Size  Location     Type
 36984 ;;                  1    wreg      void 
 36985 ;; Registers used:
 36986 ;;		wreg, status,2, status,0
 36987 ;; Tracked objects:
 36988 ;;		On entry : 0/0
 36989 ;;		On exit  : 0/0
 36990 ;;		Unchanged: 0/0
 36991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36995 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36996 ;;Total ram usage:        1 bytes
 36997 ;; Hardware stack levels used:    1
 36998 ;; Hardware stack levels required when called:   10
 36999 ;; This function calls:
 37000 ;;		Nothing
 37001 ;; This function is called by:
 37002 ;;		__parse_command_short
 37003 ;;		_system_output_toggle
 37004 ;;		__ui_encoder
 37005 ;; This function uses a non-reentrant model
 37006 ;;
 37007                           
 37008                           	psect	text167
 37009  011EA8                     __ptext167:
 37010                           	opt stack 0
 37011  011EA8                     _system_output_on:
 37012                           	opt stack 17
 37013                           
 37014                           ;incstack = 0
 37015                           ;system_output_on@output stored from wreg
 37016  011EA8  0100               	movlb	0	; () banked
 37017  011EAA  6F60               	movwf	system_output_on@output& (0+255),b
 37018                           
 37019                           ;os.c: 510: os.outputs |= output;
 37020  011EAC  0100               	movlb	0	; () banked
 37021  011EAE  5160               	movf	system_output_on@output& (0+255),w,b
 37022  011EB0  0102               	movlb	2	; () banked
 37023  011EB2  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 37024                           
 37025                           ;os.c: 513: switch(output)
 37026  011EB4  D00E               	goto	l1406
 37027  011EB6                     l1407:
 37028                           
 37029                           ; BSR set to: 0
 37030                           ;os.c: 516: LATCbits.LC7 = 1;
 37031  011EB6  8E8B               	bsf	3979,7,c	;volatile
 37032                           
 37033                           ;os.c: 517: LATEbits.LE2 = 0;
 37034  011EB8  948D               	bcf	3981,2,c	;volatile
 37035                           
 37036                           ;os.c: 518: break;
 37037  011EBA  0012               	return	
 37038  011EBC                     l1409:
 37039                           
 37040                           ; BSR set to: 0
 37041                           ;os.c: 520: LATCbits.LC7 = 1;
 37042  011EBC  8E8B               	bsf	3979,7,c	;volatile
 37043                           
 37044                           ;os.c: 521: LATEbits.LE1 = 0;
 37045  011EBE  928D               	bcf	3981,1,c	;volatile
 37046                           
 37047                           ;os.c: 522: break;
 37048  011EC0  0012               	return	
 37049  011EC2                     l1410:
 37050                           
 37051                           ; BSR set to: 0
 37052                           ;os.c: 524: LATCbits.LC7 = 1;
 37053  011EC2  8E8B               	bsf	3979,7,c	;volatile
 37054                           
 37055                           ;os.c: 525: LATEbits.LE0 = 0;
 37056  011EC4  908D               	bcf	3981,0,c	;volatile
 37057                           
 37058                           ;os.c: 526: break;
 37059  011EC6  0012               	return	
 37060  011EC8                     l1411:
 37061                           
 37062                           ; BSR set to: 0
 37063                           ;os.c: 528: LATCbits.LC7 = 1;
 37064  011EC8  8E8B               	bsf	3979,7,c	;volatile
 37065                           
 37066                           ;os.c: 529: LATAbits.LA5 = 0;
 37067  011ECA  9A89               	bcf	3977,5,c	;volatile
 37068                           
 37069                           ;os.c: 530: break;
 37070  011ECC  0012               	return	
 37071  011ECE                     l1412:
 37072                           
 37073                           ; BSR set to: 0
 37074                           ;os.c: 532: LATDbits.LD3 = 1;
 37075  011ECE  868C               	bsf	3980,3,c	;volatile
 37076                           
 37077                           ; BSR set to: 0
 37078                           ;os.c: 534: }
 37079                           
 37080                           ;os.c: 533: break;
 37081  011ED0  0012               	return	
 37082  011ED2                     l1406:
 37083                           
 37084                           ; BSR set to: 0
 37085  011ED2  0100               	movlb	0	; () banked
 37086  011ED4  5160               	movf	system_output_on@output& (0+255),w,b
 37087                           
 37088                           ; Switch size 1, requested type "space"
 37089                           ; Number of cases is 5, Range of values is 1 to 16
 37090                           ; switch strategies available:
 37091                           ; Name         Instructions Cycles
 37092                           ; simple_byte           16     9 (average)
 37093                           ;	Chosen strategy is simple_byte
 37094  011ED6  0A01               	xorlw	1	; case 1
 37095  011ED8  B4D8               	btfsc	status,2,c
 37096  011EDA  D7ED               	goto	l1407
 37097  011EDC  0A03               	xorlw	3	; case 2
 37098  011EDE  B4D8               	btfsc	status,2,c
 37099  011EE0  D7ED               	goto	l1409
 37100  011EE2  0A06               	xorlw	6	; case 4
 37101  011EE4  B4D8               	btfsc	status,2,c
 37102  011EE6  D7ED               	goto	l1410
 37103  011EE8  0A0C               	xorlw	12	; case 8
 37104  011EEA  B4D8               	btfsc	status,2,c
 37105  011EEC  D7ED               	goto	l1411
 37106  011EEE  0A18               	xorlw	24	; case 16
 37107  011EF0  A4D8               	btfss	status,2,c
 37108  011EF2  0012               	return	
 37109  011EF4  D7EC               	goto	l1412
 37110  011EF6                     __end_of_system_output_on:
 37111                           	opt stack 0
 37112                           tosu	equ	0xFFF
 37113                           tosh	equ	0xFFE
 37114                           tosl	equ	0xFFD
 37115                           pclath	equ	0xFFA
 37116                           tblptru	equ	0xFF8
 37117                           tblptrh	equ	0xFF7
 37118                           tblptrl	equ	0xFF6
 37119                           tablat	equ	0xFF5
 37120                           prodh	equ	0xFF4
 37121                           prodl	equ	0xFF3
 37122                           intcon	equ	0xFF2
 37123                           intcon2	equ	0xFF1
 37124                           intcon3	equ	0xFF0
 37125                           postinc0	equ	0xFEE
 37126                           wreg	equ	0xFE8
 37127                           indf1	equ	0xFE7
 37128                           postinc1	equ	0xFE6
 37129                           postdec1	equ	0xFE5
 37130                           plusw1	equ	0xFE3
 37131                           fsr1h	equ	0xFE2
 37132                           fsr1l	equ	0xFE1
 37133                           indf2	equ	0xFDF
 37134                           postinc2	equ	0xFDE
 37135                           postdec2	equ	0xFDD
 37136                           plusw2	equ	0xFDB
 37137                           fsr2h	equ	0xFDA
 37138                           fsr2l	equ	0xFD9
 37139                           status	equ	0xFD8
 37140                           
 37141 ;; *************** function _system_output_off *****************
 37142 ;; Defined at:
 37143 ;;		line 537 in file "os.c"
 37144 ;; Parameters:    Size  Location     Type
 37145 ;;  output          1    wreg     enum E8135
 37146 ;; Auto vars:     Size  Location     Type
 37147 ;;  output          1    1[BANK0 ] enum E8135
 37148 ;; Return value:  Size  Location     Type
 37149 ;;                  1    wreg      void 
 37150 ;; Registers used:
 37151 ;;		wreg, status,2, status,0
 37152 ;; Tracked objects:
 37153 ;;		On entry : 0/0
 37154 ;;		On exit  : 0/0
 37155 ;;		Unchanged: 0/0
 37156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37161 ;;Total ram usage:        2 bytes
 37162 ;; Hardware stack levels used:    1
 37163 ;; Hardware stack levels required when called:   10
 37164 ;; This function calls:
 37165 ;;		Nothing
 37166 ;; This function is called by:
 37167 ;;		_main
 37168 ;;		__parse_command_short
 37169 ;;		_system_output_toggle
 37170 ;;		__ui_encoder
 37171 ;; This function uses a non-reentrant model
 37172 ;;
 37173                           
 37174                           	psect	text168
 37175  011A7C                     __ptext168:
 37176                           	opt stack 0
 37177  011A7C                     _system_output_off:
 37178                           	opt stack 17
 37179                           
 37180                           ; BSR set to: 0
 37181                           ;incstack = 0
 37182                           ;system_output_off@output stored from wreg
 37183  011A7C  0100               	movlb	0	; () banked
 37184  011A7E  6F61               	movwf	system_output_off@output& (0+255),b
 37185                           
 37186                           ;os.c: 540: os.outputs &= (~output);
 37187  011A80  0100               	movlb	0	; () banked
 37188  011A82  5161               	movf	system_output_off@output& (0+255),w,b
 37189  011A84  0AFF               	xorlw	255
 37190  011A86  0102               	movlb	2	; () banked
 37191  011A88  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 37192                           
 37193                           ;os.c: 543: switch(output)
 37194  011A8A  D00A               	goto	l1416
 37195  011A8C                     l1417:
 37196                           
 37197                           ; BSR set to: 0
 37198                           ;os.c: 546: LATEbits.LE2 = 1;
 37199  011A8C  848D               	bsf	3981,2,c	;volatile
 37200                           
 37201                           ;os.c: 547: break;
 37202  011A8E  D019               	goto	l1418
 37203  011A90                     l1419:
 37204                           
 37205                           ; BSR set to: 0
 37206                           ;os.c: 549: LATEbits.LE1 = 1;
 37207  011A90  828D               	bsf	3981,1,c	;volatile
 37208                           
 37209                           ;os.c: 550: break;
 37210  011A92  D017               	goto	l1418
 37211  011A94                     l1420:
 37212                           
 37213                           ; BSR set to: 0
 37214                           ;os.c: 552: LATEbits.LE0 = 1;
 37215  011A94  808D               	bsf	3981,0,c	;volatile
 37216                           
 37217                           ;os.c: 553: break;
 37218  011A96  D015               	goto	l1418
 37219  011A98                     l1421:
 37220                           
 37221                           ; BSR set to: 0
 37222                           ;os.c: 555: LATAbits.LA5 = 1;
 37223  011A98  8A89               	bsf	3977,5,c	;volatile
 37224                           
 37225                           ;os.c: 556: break;
 37226  011A9A  D013               	goto	l1418
 37227  011A9C                     l1422:
 37228                           
 37229                           ; BSR set to: 0
 37230                           ;os.c: 558: LATDbits.LD3 = 0;
 37231  011A9C  968C               	bcf	3980,3,c	;volatile
 37232                           
 37233                           ; BSR set to: 0
 37234                           ;os.c: 560: }
 37235                           
 37236                           ;os.c: 559: break;
 37237  011A9E  D011               	goto	l1418
 37238  011AA0                     l1416:
 37239                           
 37240                           ; BSR set to: 0
 37241  011AA0  0100               	movlb	0	; () banked
 37242  011AA2  5161               	movf	system_output_off@output& (0+255),w,b
 37243                           
 37244                           ; Switch size 1, requested type "space"
 37245                           ; Number of cases is 5, Range of values is 1 to 16
 37246                           ; switch strategies available:
 37247                           ; Name         Instructions Cycles
 37248                           ; simple_byte           16     9 (average)
 37249                           ;	Chosen strategy is simple_byte
 37250  011AA4  0A01               	xorlw	1	; case 1
 37251  011AA6  B4D8               	btfsc	status,2,c
 37252  011AA8  D7F1               	goto	l1417
 37253  011AAA  0A03               	xorlw	3	; case 2
 37254  011AAC  B4D8               	btfsc	status,2,c
 37255  011AAE  D7F0               	goto	l1419
 37256  011AB0  0A06               	xorlw	6	; case 4
 37257  011AB2  B4D8               	btfsc	status,2,c
 37258  011AB4  D7EF               	goto	l1420
 37259  011AB6  0A0C               	xorlw	12	; case 8
 37260  011AB8  B4D8               	btfsc	status,2,c
 37261  011ABA  D7EE               	goto	l1421
 37262  011ABC  0A18               	xorlw	24	; case 16
 37263  011ABE  B4D8               	btfsc	status,2,c
 37264  011AC0  D7ED               	goto	l1422
 37265  011AC2                     l1418:
 37266                           
 37267                           ; BSR set to: 0
 37268                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 37269                           
 37270                           ; BSR set to: 0
 37271  011AC2  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 37272  011AC6  0E0F               	movlw	15
 37273  011AC8  1760               	andwf	??_system_output_off& (0+255),f,b
 37274  011ACA  A4D8               	btfss	status,2,c
 37275  011ACC  0012               	return	
 37276                           
 37277                           ; BSR set to: 0
 37278                           ;os.c: 564: {
 37279                           ;os.c: 565: LATCbits.LC7 = 0;
 37280  011ACE  9E8B               	bcf	3979,7,c	;volatile
 37281  011AD0  0012               	return	
 37282  011AD2                     __end_of_system_output_off:
 37283                           	opt stack 0
 37284                           tosu	equ	0xFFF
 37285                           tosh	equ	0xFFE
 37286                           tosl	equ	0xFFD
 37287                           pclath	equ	0xFFA
 37288                           tblptru	equ	0xFF8
 37289                           tblptrh	equ	0xFF7
 37290                           tblptrl	equ	0xFF6
 37291                           tablat	equ	0xFF5
 37292                           prodh	equ	0xFF4
 37293                           prodl	equ	0xFF3
 37294                           intcon	equ	0xFF2
 37295                           intcon2	equ	0xFF1
 37296                           intcon3	equ	0xFF0
 37297                           postinc0	equ	0xFEE
 37298                           wreg	equ	0xFE8
 37299                           indf1	equ	0xFE7
 37300                           postinc1	equ	0xFE6
 37301                           postdec1	equ	0xFE5
 37302                           plusw1	equ	0xFE3
 37303                           fsr1h	equ	0xFE2
 37304                           fsr1l	equ	0xFE1
 37305                           indf2	equ	0xFDF
 37306                           postinc2	equ	0xFDE
 37307                           postdec2	equ	0xFDD
 37308                           plusw2	equ	0xFDB
 37309                           fsr2h	equ	0xFDA
 37310                           fsr2l	equ	0xFD9
 37311                           status	equ	0xFD8
 37312                           
 37313 ;; *************** function _rtcc_write_eeprom *****************
 37314 ;; Defined at:
 37315 ;;		line 344 in file "rtcc.c"
 37316 ;; Parameters:    Size  Location     Type
 37317 ;;		None
 37318 ;; Auto vars:     Size  Location     Type
 37319 ;;  date            6   37[BANK0 ] unsigned char [6]
 37320 ;; Return value:  Size  Location     Type
 37321 ;;                  1    wreg      void 
 37322 ;; Registers used:
 37323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37324 ;; Tracked objects:
 37325 ;;		On entry : 0/0
 37326 ;;		On exit  : 0/0
 37327 ;;		Unchanged: 0/0
 37328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37330 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37332 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37333 ;;Total ram usage:        6 bytes
 37334 ;; Hardware stack levels used:    1
 37335 ;; Hardware stack levels required when called:   13
 37336 ;; This function calls:
 37337 ;;		_i2c_eeprom_write
 37338 ;;		_rtcc_get_day
 37339 ;;		_rtcc_get_hours
 37340 ;;		_rtcc_get_minutes
 37341 ;;		_rtcc_get_month
 37342 ;;		_rtcc_get_seconds
 37343 ;;		_rtcc_get_year
 37344 ;; This function is called by:
 37345 ;;		__parse_command_short
 37346 ;;		__ui_encoder
 37347 ;; This function uses a non-reentrant model
 37348 ;;
 37349                           
 37350                           	psect	text169
 37351  011FD6                     __ptext169:
 37352                           	opt stack 0
 37353  011FD6                     _rtcc_write_eeprom:
 37354                           	opt stack 15
 37355                           
 37356                           ;rtcc.c: 346: uint8_t date[6];
 37357                           ;rtcc.c: 347: date[0] = rtcc_get_year();
 37358                           
 37359                           ; BSR set to: 0
 37360                           ;incstack = 0
 37361  011FD6  EC9D  F096         	call	_rtcc_get_year	;wreg free
 37362  011FDA  0100               	movlb	0	; () banked
 37363  011FDC  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 37364                           
 37365                           ;rtcc.c: 348: date[1] = rtcc_get_month();
 37366  011FDE  ECAB  F096         	call	_rtcc_get_month	;wreg free
 37367  011FE2  0100               	movlb	0	; () banked
 37368  011FE4  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 37369                           
 37370                           ;rtcc.c: 349: date[2] = rtcc_get_day();
 37371  011FE6  ECC0  F096         	call	_rtcc_get_day	;wreg free
 37372  011FEA  0100               	movlb	0	; () banked
 37373  011FEC  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 37374                           
 37375                           ;rtcc.c: 350: date[3] = rtcc_get_hours();
 37376  011FEE  ECB9  F096         	call	_rtcc_get_hours	;wreg free
 37377  011FF2  0100               	movlb	0	; () banked
 37378  011FF4  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 37379                           
 37380                           ;rtcc.c: 351: date[4] = rtcc_get_minutes();
 37381  011FF6  ECB2  F096         	call	_rtcc_get_minutes	;wreg free
 37382  011FFA  0100               	movlb	0	; () banked
 37383  011FFC  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 37384                           
 37385                           ;rtcc.c: 352: date[5] = rtcc_get_seconds();
 37386  011FFE  ECA4  F096         	call	_rtcc_get_seconds	;wreg free
 37387  012002  0100               	movlb	0	; () banked
 37388  012004  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 37389                           
 37390                           ; BSR set to: 0
 37391                           ;rtcc.c: 354: i2c_eeprom_write(0x0040, &date[0], 6);
 37392  012006  0E00               	movlw	0
 37393  012008  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 37394  01200A  0E40               	movlw	64
 37395  01200C  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 37396  01200E  0E85               	movlw	low rtcc_write_eeprom@date
 37397  012010  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 37398  012012  0E00               	movlw	high rtcc_write_eeprom@date
 37399  012014  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 37400  012016  0E06               	movlw	6
 37401  012018  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 37402  01201A  EC6B  F085         	call	_i2c_eeprom_write	;wreg free
 37403  01201E  0012               	return		;funcret
 37404  012020                     __end_of_rtcc_write_eeprom:
 37405                           	opt stack 0
 37406                           tosu	equ	0xFFF
 37407                           tosh	equ	0xFFE
 37408                           tosl	equ	0xFFD
 37409                           pclath	equ	0xFFA
 37410                           tblptru	equ	0xFF8
 37411                           tblptrh	equ	0xFF7
 37412                           tblptrl	equ	0xFF6
 37413                           tablat	equ	0xFF5
 37414                           prodh	equ	0xFF4
 37415                           prodl	equ	0xFF3
 37416                           intcon	equ	0xFF2
 37417                           intcon2	equ	0xFF1
 37418                           intcon3	equ	0xFF0
 37419                           postinc0	equ	0xFEE
 37420                           wreg	equ	0xFE8
 37421                           indf1	equ	0xFE7
 37422                           postinc1	equ	0xFE6
 37423                           postdec1	equ	0xFE5
 37424                           plusw1	equ	0xFE3
 37425                           fsr1h	equ	0xFE2
 37426                           fsr1l	equ	0xFE1
 37427                           indf2	equ	0xFDF
 37428                           postinc2	equ	0xFDE
 37429                           postdec2	equ	0xFDD
 37430                           plusw2	equ	0xFDB
 37431                           fsr2h	equ	0xFDA
 37432                           fsr2l	equ	0xFD9
 37433                           status	equ	0xFD8
 37434                           
 37435 ;; *************** function _i2c_eeprom_write *****************
 37436 ;; Defined at:
 37437 ;;		line 542 in file "i2c.c"
 37438 ;; Parameters:    Size  Location     Type
 37439 ;;  address         2   10[BANK0 ] unsigned int 
 37440 ;;  data            2   12[BANK0 ] PTR unsigned char 
 37441 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 37442 ;;  length          1   14[BANK0 ] unsigned char 
 37443 ;; Auto vars:     Size  Location     Type
 37444 ;;  dat            17   18[BANK0 ] unsigned char [17]
 37445 ;;  cntr            1   36[BANK0 ] unsigned char 
 37446 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 37447 ;; Return value:  Size  Location     Type
 37448 ;;                  1    wreg      void 
 37449 ;; Registers used:
 37450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37451 ;; Tracked objects:
 37452 ;;		On entry : 0/0
 37453 ;;		On exit  : 0/0
 37454 ;;		Unchanged: 0/0
 37455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37456 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37457 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37458 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37459 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37460 ;;Total ram usage:       27 bytes
 37461 ;; Hardware stack levels used:    1
 37462 ;; Hardware stack levels required when called:   12
 37463 ;; This function calls:
 37464 ;;		__i2c_write
 37465 ;;		_i2c_set_frequency
 37466 ;; This function is called by:
 37467 ;;		__write_calibration
 37468 ;;		_rtcc_write_eeprom
 37469 ;; This function uses a non-reentrant model
 37470 ;;
 37471                           
 37472                           	psect	text170
 37473  010AD6                     __ptext170:
 37474                           	opt stack 0
 37475  010AD6                     _i2c_eeprom_write:
 37476                           	opt stack 15
 37477                           
 37478                           ;i2c.c: 544: uint8_t cntr;
 37479                           ;i2c.c: 545: uint8_t slave_address;
 37480                           ;i2c.c: 546: uint8_t dat[17];
 37481                           ;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 37482                           
 37483                           ;incstack = 0
 37484  010AD6  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 37485  010ADA  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 37486  010ADE  0E07               	movlw	7
 37487  010AE0  0100               	movlb	0	; () banked
 37488  010AE2  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 37489  010AE4                     u10485:
 37490  010AE4  90D8               	bcf	status,0,c
 37491  010AE6  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 37492  010AE8  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 37493  010AEA  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 37494  010AEC  D7FB               	goto	u10485
 37495  010AEE  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 37496  010AF0  0B0E               	andlw	14
 37497  010AF2  09A0               	iorlw	160
 37498  010AF4  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 37499                           
 37500                           ; BSR set to: 0
 37501                           ;i2c.c: 549: dat[0] = address & 0xFF;
 37502  010AF6  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 37503                           
 37504                           ;i2c.c: 551: length &= 0b00001111;
 37505  010AFA  0E0F               	movlw	15
 37506  010AFC  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 37510  010AFE  0E00               	movlw	0
 37511  010B00  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 37512  010B02  D018               	goto	l1615
 37513  010B04                     
 37514                           ; BSR set to: 0
 37515                           ;i2c.c: 553: {
 37516                           ;i2c.c: 554: dat[cntr+1] = data[cntr];
 37517                           
 37518                           ; BSR set to: 0
 37519  010B04  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37520  010B06  0D01               	mullw	1
 37521  010B08  50F3               	movf	prodl,w,c
 37522  010B0A  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 37523  010B0C  6ED9               	movwf	fsr2l,c
 37524  010B0E  50F4               	movf	prodh,w,c
 37525  010B10  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 37526  010B12  6EDA               	movwf	fsr2h,c
 37527  010B14  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37528  010B16  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 37529  010B18  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 37530  010B1A  0E01               	movlw	1
 37531  010B1C  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 37532  010B1E  0E00               	movlw	0
 37533  010B20  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 37534  010B22  0E72               	movlw	low i2c_eeprom_write@dat
 37535  010B24  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 37536  010B26  6EE1               	movwf	fsr1l,c
 37537  010B28  0E00               	movlw	high i2c_eeprom_write@dat
 37538  010B2A  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 37539  010B2C  6EE2               	movwf	fsr1h,c
 37540  010B2E  CFDF FFE7          	movff	indf2,indf1
 37541                           
 37542                           ; BSR set to: 0
 37543  010B32  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 37544  010B34                     l1615:
 37545                           
 37546                           ; BSR set to: 0
 37547                           
 37548                           ; BSR set to: 0
 37549  010B34  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 37550  010B36  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 37551  010B38  A0D8               	btfss	status,0,c
 37552  010B3A  D7E4               	goto	l1616
 37553                           
 37554                           ; BSR set to: 0
 37555                           ;i2c.c: 555: }
 37556                           ;i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 37557                           
 37558                           ; BSR set to: 0
 37559  010B3C  0E02               	movlw	2
 37560  010B3E  EC0F  F088         	call	_i2c_set_frequency
 37561                           
 37562                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 37563  010B42  0E72               	movlw	low i2c_eeprom_write@dat
 37564  010B44  0100               	movlb	0	; () banked
 37565  010B46  6F65               	movwf	__i2c_write@data& (0+255),b
 37566  010B48  0E00               	movlw	high i2c_eeprom_write@dat
 37567  010B4A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 37568  010B4C  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 37569  010B4E  6F67               	movwf	__i2c_write@length& (0+255),b
 37570  010B50  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 37571  010B52  ECB4  F08E         	call	__i2c_write
 37572  010B56  0012               	return		;funcret
 37573  010B58                     __end_of_i2c_eeprom_write:
 37574                           	opt stack 0
 37575                           tosu	equ	0xFFF
 37576                           tosh	equ	0xFFE
 37577                           tosl	equ	0xFFD
 37578                           pclath	equ	0xFFA
 37579                           tblptru	equ	0xFF8
 37580                           tblptrh	equ	0xFF7
 37581                           tblptrl	equ	0xFF6
 37582                           tablat	equ	0xFF5
 37583                           prodh	equ	0xFF4
 37584                           prodl	equ	0xFF3
 37585                           intcon	equ	0xFF2
 37586                           intcon2	equ	0xFF1
 37587                           intcon3	equ	0xFF0
 37588                           postinc0	equ	0xFEE
 37589                           wreg	equ	0xFE8
 37590                           indf1	equ	0xFE7
 37591                           postinc1	equ	0xFE6
 37592                           postdec1	equ	0xFE5
 37593                           plusw1	equ	0xFE3
 37594                           fsr1h	equ	0xFE2
 37595                           fsr1l	equ	0xFE1
 37596                           indf2	equ	0xFDF
 37597                           postinc2	equ	0xFDE
 37598                           postdec2	equ	0xFDD
 37599                           plusw2	equ	0xFDB
 37600                           fsr2h	equ	0xFDA
 37601                           fsr2l	equ	0xFD9
 37602                           status	equ	0xFD8
 37603                           
 37604 ;; *************** function _i2c_set_frequency *****************
 37605 ;; Defined at:
 37606 ;;		line 107 in file "i2c.c"
 37607 ;; Parameters:    Size  Location     Type
 37608 ;;  frequency       1    wreg     enum E8219
 37609 ;; Auto vars:     Size  Location     Type
 37610 ;;  frequency       1    0[BANK0 ] enum E8219
 37611 ;; Return value:  Size  Location     Type
 37612 ;;                  1    wreg      void 
 37613 ;; Registers used:
 37614 ;;		wreg, status,2, status,0
 37615 ;; Tracked objects:
 37616 ;;		On entry : 0/0
 37617 ;;		On exit  : 0/0
 37618 ;;		Unchanged: 0/0
 37619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37624 ;;Total ram usage:        1 bytes
 37625 ;; Hardware stack levels used:    1
 37626 ;; Hardware stack levels required when called:   10
 37627 ;; This function calls:
 37628 ;;		Nothing
 37629 ;; This function is called by:
 37630 ;;		_i2c_init
 37631 ;;		_i2c_display_send_init_sequence
 37632 ;;		__ic2_display_set_address
 37633 ;;		_i2c_display_cursor
 37634 ;;		_i2c_display_write_fixed
 37635 ;;		_i2c_digipot_reset_on
 37636 ;;		_i2c_digipot_reset_off
 37637 ;;		_i2c_digipot_backlight
 37638 ;;		_i2c_adc_start
 37639 ;;		_i2c_adc_read
 37640 ;;		_i2c_eeprom_write
 37641 ;;		_i2c_eeprom_read
 37642 ;;		_i2c_display_init
 37643 ;;		_i2c_display_write
 37644 ;;		_i2c_digipot_set_defaults
 37645 ;;		_i2c_eeprom_writeByte
 37646 ;;		_i2c_eeprom_readByte
 37647 ;; This function uses a non-reentrant model
 37648 ;;
 37649                           
 37650                           	psect	text171
 37651  01101E                     __ptext171:
 37652                           	opt stack 0
 37653  01101E                     _i2c_set_frequency:
 37654                           	opt stack 18
 37655                           
 37656                           ;incstack = 0
 37657                           ;i2c_set_frequency@frequency stored from wreg
 37658  01101E  0100               	movlb	0	; () banked
 37659  011020  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 37660                           
 37661                           ;i2c.c: 109: switch(os.clockFrequency)
 37662  011022  D027               	goto	l1533
 37663  011024                     
 37664                           ;i2c.c: 112: SSP1ADD = 0;
 37665  011024  0E00               	movlw	0
 37666  011026  D017               	goto	L50
 37667  011028                     
 37668                           ;i2c.c: 118: SSP1ADD = 19;
 37669  011028  0E13               	movlw	19
 37670  01102A  D015               	goto	L50
 37671  01102C                     
 37672                           ;i2c.c: 121: SSP1ADD = 9;
 37673  01102C  0E09               	movlw	9
 37674  01102E  D013               	goto	L50
 37675  011030                     
 37676                           ;i2c.c: 124: SSP1ADD = 4;
 37677  011030  0E04               	movlw	4
 37678  011032  D011               	goto	L50
 37679  011034  0100               	movlb	0	; () banked
 37680  011036  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 37681                           
 37682                           ; Switch size 1, requested type "space"
 37683                           ; Number of cases is 3, Range of values is 0 to 2
 37684                           ; switch strategies available:
 37685                           ; Name         Instructions Cycles
 37686                           ; simple_byte           10     6 (average)
 37687                           ;	Chosen strategy is simple_byte
 37688  011038  0A00               	xorlw	0	; case 0
 37689  01103A  B4D8               	btfsc	status,2,c
 37690  01103C  D7F5               	goto	l1538
 37691  01103E  0A01               	xorlw	1	; case 1
 37692  011040  B4D8               	btfsc	status,2,c
 37693  011042  D7F4               	goto	l1540
 37694  011044  0A03               	xorlw	3	; case 2
 37695  011046  B4D8               	btfsc	status,2,c
 37696  011048  D7F3               	goto	l1541
 37697                           
 37698                           ; BSR set to: 0
 37699                           ;i2c.c: 127: break;
 37700  01104A  D01E               	goto	l1535
 37701  01104C                     
 37702                           ; BSR set to: 0
 37703                           ;i2c.c: 132: SSP1ADD = 119;
 37704                           
 37705                           ; BSR set to: 0
 37706  01104C  0E77               	movlw	119
 37707  01104E  D003               	goto	L50
 37708  011050                     
 37709                           ; BSR set to: 0
 37710                           ;i2c.c: 135: SSP1ADD = 59;
 37711                           
 37712                           ; BSR set to: 0
 37713  011050  0E3B               	movlw	59
 37714  011052  D001               	goto	L50
 37715  011054                     
 37716                           ; BSR set to: 0
 37717                           ;i2c.c: 138: SSP1ADD = 29;
 37718                           
 37719                           ; BSR set to: 0
 37720  011054  0E1D               	movlw	29
 37721  011056                     L50:
 37722  011056  6EC8               	movwf	4040,c	;volatile
 37723                           
 37724                           ; BSR set to: 0
 37725                           ;i2c.c: 140: }
 37726                           
 37727                           ;i2c.c: 139: break;
 37728  011058  D017               	goto	l1535
 37729  01105A                     
 37730                           ; BSR set to: 0
 37731  01105A  0100               	movlb	0	; () banked
 37732  01105C  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 37733                           
 37734                           ; Switch size 1, requested type "space"
 37735                           ; Number of cases is 3, Range of values is 0 to 2
 37736                           ; switch strategies available:
 37737                           ; Name         Instructions Cycles
 37738                           ; simple_byte           10     6 (average)
 37739                           ;	Chosen strategy is simple_byte
 37740  01105E  0A00               	xorlw	0	; case 0
 37741  011060  B4D8               	btfsc	status,2,c
 37742  011062  D7F4               	goto	l1544
 37743  011064  0A01               	xorlw	1	; case 1
 37744  011066  B4D8               	btfsc	status,2,c
 37745  011068  D7F3               	goto	l1546
 37746  01106A  0A03               	xorlw	3	; case 2
 37747  01106C  B4D8               	btfsc	status,2,c
 37748  01106E  D7F2               	goto	l1547
 37749                           
 37750                           ; BSR set to: 0
 37751                           ;i2c.c: 142: }
 37752                           
 37753                           ; BSR set to: 0
 37754                           ;i2c.c: 141: break;
 37755  011070  D00B               	goto	l1535
 37756  011072                     l1533:
 37757                           
 37758                           ; BSR set to: 0
 37759  011072  0102               	movlb	2	; () banked
 37760  011074  5100               	movf	_os& (0+255),w,b	;volatile
 37761                           
 37762                           ; Switch size 1, requested type "space"
 37763                           ; Number of cases is 3, Range of values is 0 to 2
 37764                           ; switch strategies available:
 37765                           ; Name         Instructions Cycles
 37766                           ; simple_byte           10     6 (average)
 37767                           ;	Chosen strategy is simple_byte
 37768  011076  0A00               	xorlw	0	; case 0
 37769  011078  B4D8               	btfsc	status,2,c
 37770  01107A  D7D4               	goto	l1534
 37771  01107C  0A01               	xorlw	1	; case 1
 37772  01107E  B4D8               	btfsc	status,2,c
 37773  011080  D7D9               	goto	l1537
 37774  011082  0A03               	xorlw	3	; case 2
 37775  011084  B4D8               	btfsc	status,2,c
 37776  011086  D7E9               	goto	l1543
 37777  011088                     l1535:
 37778                           
 37779                           ;i2c.c: 144: i2c_frequency = frequency;
 37780  011088  C060  F1F0         	movff	i2c_set_frequency@frequency,_i2c_frequency
 37781  01108C  0012               	return		;funcret
 37782  01108E                     __end_of_i2c_set_frequency:
 37783                           	opt stack 0
 37784                           tosu	equ	0xFFF
 37785                           tosh	equ	0xFFE
 37786                           tosl	equ	0xFFD
 37787                           pclath	equ	0xFFA
 37788                           tblptru	equ	0xFF8
 37789                           tblptrh	equ	0xFF7
 37790                           tblptrl	equ	0xFF6
 37791                           tablat	equ	0xFF5
 37792                           prodh	equ	0xFF4
 37793                           prodl	equ	0xFF3
 37794                           intcon	equ	0xFF2
 37795                           intcon2	equ	0xFF1
 37796                           intcon3	equ	0xFF0
 37797                           postinc0	equ	0xFEE
 37798                           wreg	equ	0xFE8
 37799                           indf1	equ	0xFE7
 37800                           postinc1	equ	0xFE6
 37801                           postdec1	equ	0xFE5
 37802                           plusw1	equ	0xFE3
 37803                           fsr1h	equ	0xFE2
 37804                           fsr1l	equ	0xFE1
 37805                           indf2	equ	0xFDF
 37806                           postinc2	equ	0xFDE
 37807                           postdec2	equ	0xFDD
 37808                           plusw2	equ	0xFDB
 37809                           fsr2h	equ	0xFDA
 37810                           fsr2l	equ	0xFD9
 37811                           status	equ	0xFD8
 37812                           
 37813 ;; *************** function __i2c_write *****************
 37814 ;; Defined at:
 37815 ;;		line 148 in file "i2c.c"
 37816 ;; Parameters:    Size  Location     Type
 37817 ;;  slave_addres    1    wreg     unsigned char 
 37818 ;;  data            2    5[BANK0 ] PTR unsigned char 
 37819 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 37820 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 37821 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 37822 ;;  length          1    7[BANK0 ] unsigned char 
 37823 ;; Auto vars:     Size  Location     Type
 37824 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 37825 ;;  cntr            1    9[BANK0 ] unsigned char 
 37826 ;; Return value:  Size  Location     Type
 37827 ;;                  1    wreg      void 
 37828 ;; Registers used:
 37829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37830 ;; Tracked objects:
 37831 ;;		On entry : 0/0
 37832 ;;		On exit  : 0/0
 37833 ;;		Unchanged: 0/0
 37834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37835 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37838 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37839 ;;Total ram usage:        5 bytes
 37840 ;; Hardware stack levels used:    1
 37841 ;; Hardware stack levels required when called:   11
 37842 ;; This function calls:
 37843 ;;		__i2c_send
 37844 ;;		__i2c_start
 37845 ;;		__i2c_stop
 37846 ;;		__i2c_wait_idle
 37847 ;; This function is called by:
 37848 ;;		_i2c_display_send_init_sequence
 37849 ;;		__ic2_display_set_address
 37850 ;;		_i2c_digipot_reset_on
 37851 ;;		_i2c_digipot_reset_off
 37852 ;;		_i2c_digipot_backlight
 37853 ;;		_i2c_adc_start
 37854 ;;		_i2c_eeprom_write
 37855 ;;		_i2c_eeprom_read
 37856 ;;		_i2c_display_init
 37857 ;;		_i2c_digipot_set_defaults
 37858 ;;		_i2c_eeprom_writeByte
 37859 ;;		_i2c_eeprom_readByte
 37860 ;; This function uses a non-reentrant model
 37861 ;;
 37862                           
 37863                           	psect	text172
 37864  011D68                     __ptext172:
 37865                           	opt stack 0
 37866  011D68                     __i2c_write:
 37867                           	opt stack 17
 37868                           
 37869                           ;incstack = 0
 37870                           ;__i2c_write@slave_address stored from wreg
 37871  011D68  0100               	movlb	0	; () banked
 37872  011D6A  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 37873                           
 37874                           ;i2c.c: 150: uint8_t cntr;
 37875                           ;i2c.c: 152: _i2c_wait_idle();
 37876  011D6C  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 37877                           
 37878                           ;i2c.c: 153: _i2c_start();
 37879  011D70  ECFB  F096         	call	__i2c_start	;wreg free
 37880                           
 37881                           ;i2c.c: 154: _i2c_wait_idle();
 37882  011D74  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 37883                           
 37884                           ;i2c.c: 155: _i2c_send(slave_address);
 37885  011D78  0100               	movlb	0	; () banked
 37886  011D7A  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 37887  011D7C  ECF2  F096         	call	__i2c_send
 37888                           
 37889                           ;i2c.c: 156: _i2c_wait_idle();
 37890  011D80  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 37891                           
 37892                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 37893  011D84  0E00               	movlw	0
 37894  011D86  0100               	movlb	0	; () banked
 37895  011D88  6F69               	movwf	__i2c_write@cntr& (0+255),b
 37896  011D8A  D00F               	goto	l1551
 37897  011D8C                     
 37898                           ; BSR set to: 0
 37899                           ;i2c.c: 159: {
 37900                           ;i2c.c: 160: _i2c_send(data[cntr]);
 37901                           
 37902                           ; BSR set to: 0
 37903  011D8C  5169               	movf	__i2c_write@cntr& (0+255),w,b
 37904  011D8E  0D01               	mullw	1
 37905  011D90  50F3               	movf	prodl,w,c
 37906  011D92  2565               	addwf	__i2c_write@data& (0+255),w,b
 37907  011D94  6ED9               	movwf	fsr2l,c
 37908  011D96  50F4               	movf	prodh,w,c
 37909  011D98  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 37910  011D9A  6EDA               	movwf	fsr2h,c
 37911  011D9C  50DF               	movf	indf2,w,c
 37912  011D9E  ECF2  F096         	call	__i2c_send
 37913                           
 37914                           ;i2c.c: 161: _i2c_wait_idle();
 37915  011DA2  EC24  F08A         	call	__i2c_wait_idle	;wreg free
 37916  011DA6  0100               	movlb	0	; () banked
 37917  011DA8  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 37918  011DAA                     l1551:
 37919                           
 37920                           ; BSR set to: 0
 37921                           
 37922                           ; BSR set to: 0
 37923  011DAA  5167               	movf	__i2c_write@length& (0+255),w,b
 37924  011DAC  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 37925  011DAE  A0D8               	btfss	status,0,c
 37926  011DB0  D7ED               	goto	l1552
 37927                           
 37928                           ; BSR set to: 0
 37929                           ;i2c.c: 162: }
 37930                           ;i2c.c: 164: _i2c_stop();
 37931                           
 37932                           ; BSR set to: 0
 37933  011DB2  ECF7  F096         	call	__i2c_stop	;wreg free
 37934  011DB6  0012               	return		;funcret
 37935  011DB8                     __end_of__i2c_write:
 37936                           	opt stack 0
 37937                           tosu	equ	0xFFF
 37938                           tosh	equ	0xFFE
 37939                           tosl	equ	0xFFD
 37940                           pclath	equ	0xFFA
 37941                           tblptru	equ	0xFF8
 37942                           tblptrh	equ	0xFF7
 37943                           tblptrl	equ	0xFF6
 37944                           tablat	equ	0xFF5
 37945                           prodh	equ	0xFF4
 37946                           prodl	equ	0xFF3
 37947                           intcon	equ	0xFF2
 37948                           intcon2	equ	0xFF1
 37949                           intcon3	equ	0xFF0
 37950                           postinc0	equ	0xFEE
 37951                           wreg	equ	0xFE8
 37952                           indf1	equ	0xFE7
 37953                           postinc1	equ	0xFE6
 37954                           postdec1	equ	0xFE5
 37955                           plusw1	equ	0xFE3
 37956                           fsr1h	equ	0xFE2
 37957                           fsr1l	equ	0xFE1
 37958                           indf2	equ	0xFDF
 37959                           postinc2	equ	0xFDE
 37960                           postdec2	equ	0xFDD
 37961                           plusw2	equ	0xFDB
 37962                           fsr2h	equ	0xFDA
 37963                           fsr2l	equ	0xFD9
 37964                           status	equ	0xFD8
 37965                           
 37966 ;; *************** function __i2c_wait_idle *****************
 37967 ;; Defined at:
 37968 ;;		line 45 in file "i2c.c"
 37969 ;; Parameters:    Size  Location     Type
 37970 ;;		None
 37971 ;; Auto vars:     Size  Location     Type
 37972 ;;		None
 37973 ;; Return value:  Size  Location     Type
 37974 ;;                  1    wreg      void 
 37975 ;; Registers used:
 37976 ;;		wreg, status,2, status,0
 37977 ;; Tracked objects:
 37978 ;;		On entry : 0/0
 37979 ;;		On exit  : 0/0
 37980 ;;		Unchanged: 0/0
 37981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37984 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37985 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37986 ;;Total ram usage:        5 bytes
 37987 ;; Hardware stack levels used:    1
 37988 ;; Hardware stack levels required when called:   10
 37989 ;; This function calls:
 37990 ;;		Nothing
 37991 ;; This function is called by:
 37992 ;;		__i2c_write
 37993 ;;		__i2c_read
 37994 ;;		_i2c_display_write_fixed
 37995 ;;		_i2c_adc_read
 37996 ;;		_i2c_display_write
 37997 ;; This function uses a non-reentrant model
 37998 ;;
 37999                           
 38000                           	psect	text173
 38001  011448                     __ptext173:
 38002                           	opt stack 0
 38003  011448                     __i2c_wait_idle:
 38004                           	opt stack 17
 38005                           
 38006                           ;i2c.c: 47: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 38007                           
 38008                           ;incstack = 0
 38009  011448  A4C7               	btfss	4039,2,c	;volatile
 38010  01144A  D004               	goto	u9340
 38011  01144C  0100               	movlb	0	; () banked
 38012  01144E  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 38013  011450  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 38014  011452  D002               	goto	u9348
 38015  011454                     u9340:
 38016  011454  0100               	movlb	0	; () banked
 38017  011456  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 38018  011458                     u9348:
 38019  011458  A0C5               	btfss	4037,0,c	;volatile
 38020  01145A  D003               	goto	u9350
 38021  01145C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 38022  01145E  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 38023  011460  D002               	goto	u9358
 38024  011462                     u9350:
 38025  011462  0100               	movlb	0	; () banked
 38026  011464  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 38027  011466                     u9358:
 38028  011466  A2C5               	btfss	4037,1,c	;volatile
 38029  011468  D003               	goto	u9360
 38030  01146A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 38031  01146C  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 38032  01146E  D002               	goto	u9368
 38033  011470                     u9360:
 38034  011470  0100               	movlb	0	; () banked
 38035  011472  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 38036  011474                     u9368:
 38037  011474  A4C5               	btfss	4037,2,c	;volatile
 38038  011476  D003               	goto	u9370
 38039  011478  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 38040  01147A  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 38041  01147C  D002               	goto	u9378
 38042  01147E                     u9370:
 38043  01147E  0100               	movlb	0	; () banked
 38044  011480  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 38045  011482                     u9378:
 38046  011482  A6C5               	btfss	4037,3,c	;volatile
 38047  011484  D003               	goto	u9380
 38048  011486  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 38049  011488  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 38050  01148A  D002               	goto	u9388
 38051  01148C                     u9380:
 38052  01148C  0100               	movlb	0	; () banked
 38053  01148E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 38054  011490                     u9388:
 38055  011490  A8C5               	btfss	4037,4,c	;volatile
 38056  011492  D002               	goto	u9390
 38057  011494  0E01               	movlw	1
 38058  011496  D001               	goto	u9396
 38059  011498                     u9390:
 38060  011498  0E00               	movlw	0
 38061  01149A                     u9396:
 38062  01149A  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 38063  01149C  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 38064  01149E  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 38065  0114A0  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 38066  0114A2  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 38067  0114A4  0900               	iorlw	0
 38068  0114A6  B4D8               	btfsc	status,2,c
 38069  0114A8  0012               	return	
 38070  0114AA  D7CE               	goto	__i2c_wait_idle
 38071  0114AC                     __end_of__i2c_wait_idle:
 38072                           	opt stack 0
 38073                           tosu	equ	0xFFF
 38074                           tosh	equ	0xFFE
 38075                           tosl	equ	0xFFD
 38076                           pclath	equ	0xFFA
 38077                           tblptru	equ	0xFF8
 38078                           tblptrh	equ	0xFF7
 38079                           tblptrl	equ	0xFF6
 38080                           tablat	equ	0xFF5
 38081                           prodh	equ	0xFF4
 38082                           prodl	equ	0xFF3
 38083                           intcon	equ	0xFF2
 38084                           intcon2	equ	0xFF1
 38085                           intcon3	equ	0xFF0
 38086                           postinc0	equ	0xFEE
 38087                           wreg	equ	0xFE8
 38088                           indf1	equ	0xFE7
 38089                           postinc1	equ	0xFE6
 38090                           postdec1	equ	0xFE5
 38091                           plusw1	equ	0xFE3
 38092                           fsr1h	equ	0xFE2
 38093                           fsr1l	equ	0xFE1
 38094                           indf2	equ	0xFDF
 38095                           postinc2	equ	0xFDE
 38096                           postdec2	equ	0xFDD
 38097                           plusw2	equ	0xFDB
 38098                           fsr2h	equ	0xFDA
 38099                           fsr2l	equ	0xFD9
 38100                           status	equ	0xFD8
 38101                           
 38102 ;; *************** function __i2c_stop *****************
 38103 ;; Defined at:
 38104 ;;		line 72 in file "i2c.c"
 38105 ;; Parameters:    Size  Location     Type
 38106 ;;		None
 38107 ;; Auto vars:     Size  Location     Type
 38108 ;;		None
 38109 ;; Return value:  Size  Location     Type
 38110 ;;                  1    wreg      void 
 38111 ;; Registers used:
 38112 ;;		None
 38113 ;; Tracked objects:
 38114 ;;		On entry : 0/0
 38115 ;;		On exit  : 0/0
 38116 ;;		Unchanged: 0/0
 38117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38122 ;;Total ram usage:        0 bytes
 38123 ;; Hardware stack levels used:    1
 38124 ;; Hardware stack levels required when called:   10
 38125 ;; This function calls:
 38126 ;;		Nothing
 38127 ;; This function is called by:
 38128 ;;		__i2c_write
 38129 ;;		__i2c_read
 38130 ;;		_i2c_display_write_fixed
 38131 ;;		_i2c_adc_read
 38132 ;;		_i2c_display_write
 38133 ;; This function uses a non-reentrant model
 38134 ;;
 38135                           
 38136                           	psect	text174
 38137  012DEE                     __ptext174:
 38138                           	opt stack 0
 38139  012DEE                     __i2c_stop:
 38140                           	opt stack 17
 38141                           
 38142                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 38143                           
 38144                           ; BSR set to: 0
 38145                           ;incstack = 0
 38146  012DEE  84C5               	bsf	4037,2,c	;volatile
 38147  012DF0  A4C5               	btfss	4037,2,c	;volatile
 38148  012DF2  0012               	return	
 38149  012DF4  D7FD               	goto	l1510
 38150  012DF6                     __end_of__i2c_stop:
 38151                           	opt stack 0
 38152                           tosu	equ	0xFFF
 38153                           tosh	equ	0xFFE
 38154                           tosl	equ	0xFFD
 38155                           pclath	equ	0xFFA
 38156                           tblptru	equ	0xFF8
 38157                           tblptrh	equ	0xFF7
 38158                           tblptrl	equ	0xFF6
 38159                           tablat	equ	0xFF5
 38160                           prodh	equ	0xFF4
 38161                           prodl	equ	0xFF3
 38162                           intcon	equ	0xFF2
 38163                           intcon2	equ	0xFF1
 38164                           intcon3	equ	0xFF0
 38165                           postinc0	equ	0xFEE
 38166                           wreg	equ	0xFE8
 38167                           indf1	equ	0xFE7
 38168                           postinc1	equ	0xFE6
 38169                           postdec1	equ	0xFE5
 38170                           plusw1	equ	0xFE3
 38171                           fsr1h	equ	0xFE2
 38172                           fsr1l	equ	0xFE1
 38173                           indf2	equ	0xFDF
 38174                           postinc2	equ	0xFDE
 38175                           postdec2	equ	0xFDD
 38176                           plusw2	equ	0xFDB
 38177                           fsr2h	equ	0xFDA
 38178                           fsr2l	equ	0xFD9
 38179                           status	equ	0xFD8
 38180                           
 38181 ;; *************** function __i2c_start *****************
 38182 ;; Defined at:
 38183 ;;		line 51 in file "i2c.c"
 38184 ;; Parameters:    Size  Location     Type
 38185 ;;		None
 38186 ;; Auto vars:     Size  Location     Type
 38187 ;;		None
 38188 ;; Return value:  Size  Location     Type
 38189 ;;                  1    wreg      void 
 38190 ;; Registers used:
 38191 ;;		None
 38192 ;; Tracked objects:
 38193 ;;		On entry : 0/0
 38194 ;;		On exit  : 0/0
 38195 ;;		Unchanged: 0/0
 38196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38201 ;;Total ram usage:        0 bytes
 38202 ;; Hardware stack levels used:    1
 38203 ;; Hardware stack levels required when called:   10
 38204 ;; This function calls:
 38205 ;;		Nothing
 38206 ;; This function is called by:
 38207 ;;		__i2c_write
 38208 ;;		__i2c_read
 38209 ;;		_i2c_display_write_fixed
 38210 ;;		_i2c_adc_read
 38211 ;;		_i2c_display_write
 38212 ;; This function uses a non-reentrant model
 38213 ;;
 38214                           
 38215                           	psect	text175
 38216  012DF6                     __ptext175:
 38217                           	opt stack 0
 38218  012DF6                     __i2c_start:
 38219                           	opt stack 17
 38220                           
 38221                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 38222                           
 38223                           ;incstack = 0
 38224  012DF6  80C5               	bsf	4037,0,c	;volatile
 38225  012DF8  A0C5               	btfss	4037,0,c	;volatile
 38226  012DFA  0012               	return	
 38227  012DFC  D7FD               	goto	l1495
 38228  012DFE                     __end_of__i2c_start:
 38229                           	opt stack 0
 38230                           tosu	equ	0xFFF
 38231                           tosh	equ	0xFFE
 38232                           tosl	equ	0xFFD
 38233                           pclath	equ	0xFFA
 38234                           tblptru	equ	0xFF8
 38235                           tblptrh	equ	0xFF7
 38236                           tblptrl	equ	0xFF6
 38237                           tablat	equ	0xFF5
 38238                           prodh	equ	0xFF4
 38239                           prodl	equ	0xFF3
 38240                           intcon	equ	0xFF2
 38241                           intcon2	equ	0xFF1
 38242                           intcon3	equ	0xFF0
 38243                           postinc0	equ	0xFEE
 38244                           wreg	equ	0xFE8
 38245                           indf1	equ	0xFE7
 38246                           postinc1	equ	0xFE6
 38247                           postdec1	equ	0xFE5
 38248                           plusw1	equ	0xFE3
 38249                           fsr1h	equ	0xFE2
 38250                           fsr1l	equ	0xFE1
 38251                           indf2	equ	0xFDF
 38252                           postinc2	equ	0xFDE
 38253                           postdec2	equ	0xFDD
 38254                           plusw2	equ	0xFDB
 38255                           fsr2h	equ	0xFDA
 38256                           fsr2l	equ	0xFD9
 38257                           status	equ	0xFD8
 38258                           
 38259 ;; *************** function __i2c_send *****************
 38260 ;; Defined at:
 38261 ;;		line 58 in file "i2c.c"
 38262 ;; Parameters:    Size  Location     Type
 38263 ;;  dat             1    wreg     unsigned char 
 38264 ;; Auto vars:     Size  Location     Type
 38265 ;;  dat             1    0[BANK0 ] unsigned char 
 38266 ;; Return value:  Size  Location     Type
 38267 ;;                  1    wreg      void 
 38268 ;; Registers used:
 38269 ;;		wreg
 38270 ;; Tracked objects:
 38271 ;;		On entry : 0/0
 38272 ;;		On exit  : 0/0
 38273 ;;		Unchanged: 0/0
 38274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38279 ;;Total ram usage:        1 bytes
 38280 ;; Hardware stack levels used:    1
 38281 ;; Hardware stack levels required when called:   10
 38282 ;; This function calls:
 38283 ;;		Nothing
 38284 ;; This function is called by:
 38285 ;;		__i2c_write
 38286 ;;		__i2c_read
 38287 ;;		_i2c_display_write_fixed
 38288 ;;		_i2c_adc_read
 38289 ;;		_i2c_display_write
 38290 ;; This function uses a non-reentrant model
 38291 ;;
 38292                           
 38293                           	psect	text176
 38294  012DE4                     __ptext176:
 38295                           	opt stack 0
 38296  012DE4                     __i2c_send:
 38297                           	opt stack 17
 38298                           
 38299                           ;incstack = 0
 38300                           ;__i2c_send@dat stored from wreg
 38301  012DE4  0100               	movlb	0	; () banked
 38302  012DE6  6F60               	movwf	__i2c_send@dat& (0+255),b
 38303                           
 38304                           ;i2c.c: 60: SSP1BUF = dat;
 38305  012DE8  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 38306  012DEC  0012               	return		;funcret
 38307  012DEE                     __end_of__i2c_send:
 38308                           	opt stack 0
 38309                           tosu	equ	0xFFF
 38310                           tosh	equ	0xFFE
 38311                           tosl	equ	0xFFD
 38312                           pclath	equ	0xFFA
 38313                           tblptru	equ	0xFF8
 38314                           tblptrh	equ	0xFF7
 38315                           tblptrl	equ	0xFF6
 38316                           tablat	equ	0xFF5
 38317                           prodh	equ	0xFF4
 38318                           prodl	equ	0xFF3
 38319                           intcon	equ	0xFF2
 38320                           intcon2	equ	0xFF1
 38321                           intcon3	equ	0xFF0
 38322                           postinc0	equ	0xFEE
 38323                           wreg	equ	0xFE8
 38324                           indf1	equ	0xFE7
 38325                           postinc1	equ	0xFE6
 38326                           postdec1	equ	0xFE5
 38327                           plusw1	equ	0xFE3
 38328                           fsr1h	equ	0xFE2
 38329                           fsr1l	equ	0xFE1
 38330                           indf2	equ	0xFDF
 38331                           postinc2	equ	0xFDE
 38332                           postdec2	equ	0xFDD
 38333                           plusw2	equ	0xFDB
 38334                           fsr2h	equ	0xFDA
 38335                           fsr2l	equ	0xFD9
 38336                           status	equ	0xFD8
 38337                           
 38338 ;; *************** function __parse_command_long *****************
 38339 ;; Defined at:
 38340 ;;		line 453 in file "app_device_custom_hid.c"
 38341 ;; Parameters:    Size  Location     Type
 38342 ;;  cmd             1    wreg     unsigned char 
 38343 ;;  data            1    3[BANK0 ] unsigned char 
 38344 ;; Auto vars:     Size  Location     Type
 38345 ;;  cmd             1    4[BANK0 ] unsigned char 
 38346 ;; Return value:  Size  Location     Type
 38347 ;;                  1    wreg      void 
 38348 ;; Registers used:
 38349 ;;		wreg, status,2, status,0, cstack
 38350 ;; Tracked objects:
 38351 ;;		On entry : 0/0
 38352 ;;		On exit  : 0/0
 38353 ;;		Unchanged: 0/0
 38354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38355 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38359 ;;Total ram usage:        2 bytes
 38360 ;; Hardware stack levels used:    1
 38361 ;; Hardware stack levels required when called:   12
 38362 ;; This function calls:
 38363 ;;		_buck_remote_change_dutycycle
 38364 ;;		_buck_remote_set_dutycycle
 38365 ;;		_buck_remote_set_enable
 38366 ;;		_buck_remote_set_on
 38367 ;;		_buck_remote_set_synchronous
 38368 ;;		_rtcc_set_day
 38369 ;;		_rtcc_set_hours
 38370 ;;		_rtcc_set_minutes
 38371 ;;		_rtcc_set_month
 38372 ;;		_rtcc_set_seconds
 38373 ;;		_rtcc_set_year
 38374 ;; This function is called by:
 38375 ;;		_APP_DeviceCustomHIDTasks
 38376 ;; This function uses a non-reentrant model
 38377 ;;
 38378                           
 38379                           	psect	text177
 38380  00F0A6                     __ptext177:
 38381                           	opt stack 0
 38382  00F0A6                     __parse_command_long:
 38383                           	opt stack 17
 38384                           
 38385                           ;incstack = 0
 38386                           ;__parse_command_long@cmd stored from wreg
 38387  00F0A6  0100               	movlb	0	; () banked
 38388  00F0A8  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 38389                           
 38390                           ;app_device_custom_hid.c: 455: switch(cmd)
 38391  00F0AA  D043               	goto	l1164
 38392  00F0AC                     
 38393                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 38394  00F0AC  0100               	movlb	0	; () banked
 38395  00F0AE  5163               	movf	__parse_command_long@data& (0+255),w,b
 38396  00F0B0  ECBA  F095         	call	_rtcc_set_year
 38397                           
 38398                           ;app_device_custom_hid.c: 459: break;
 38399  00F0B4  0012               	return	
 38400  00F0B6                     
 38401                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 38402  00F0B6  0100               	movlb	0	; () banked
 38403  00F0B8  5163               	movf	__parse_command_long@data& (0+255),w,b
 38404  00F0BA  ECD2  F095         	call	_rtcc_set_month
 38405                           
 38406                           ;app_device_custom_hid.c: 462: break;
 38407  00F0BE  0012               	return	
 38408  00F0C0                     
 38409                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 38410  00F0C0  0100               	movlb	0	; () banked
 38411  00F0C2  5163               	movf	__parse_command_long@data& (0+255),w,b
 38412  00F0C4  ECF6  F095         	call	_rtcc_set_day
 38413                           
 38414                           ;app_device_custom_hid.c: 465: break;
 38415  00F0C8  0012               	return	
 38416  00F0CA                     
 38417                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 38418  00F0CA  0100               	movlb	0	; () banked
 38419  00F0CC  5163               	movf	__parse_command_long@data& (0+255),w,b
 38420  00F0CE  ECEA  F095         	call	_rtcc_set_hours
 38421                           
 38422                           ;app_device_custom_hid.c: 468: break;
 38423  00F0D2  0012               	return	
 38424  00F0D4                     
 38425                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 38426  00F0D4  0100               	movlb	0	; () banked
 38427  00F0D6  5163               	movf	__parse_command_long@data& (0+255),w,b
 38428  00F0D8  ECDE  F095         	call	_rtcc_set_minutes
 38429                           
 38430                           ;app_device_custom_hid.c: 471: break;
 38431  00F0DC  0012               	return	
 38432  00F0DE                     
 38433                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 38434  00F0DE  0100               	movlb	0	; () banked
 38435  00F0E0  5163               	movf	__parse_command_long@data& (0+255),w,b
 38436  00F0E2  ECC6  F095         	call	_rtcc_set_seconds
 38437                           
 38438                           ;app_device_custom_hid.c: 474: break;
 38439  00F0E6  0012               	return	
 38440  00F0E8                     
 38441                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 38442  00F0E8  0E01               	movlw	1
 38443  00F0EA  EC5F  F095         	call	_buck_remote_set_enable
 38444                           
 38445                           ;app_device_custom_hid.c: 477: break;
 38446  00F0EE  0012               	return	
 38447  00F0F0                     
 38448                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 38449  00F0F0  0E00               	movlw	0
 38450  00F0F2  EC5F  F095         	call	_buck_remote_set_enable
 38451                           
 38452                           ;app_device_custom_hid.c: 480: break;
 38453  00F0F6  0012               	return	
 38454  00F0F8                     
 38455                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 38456  00F0F8  0E01               	movlw	1
 38457  00F0FA  EC0E  F096         	call	_buck_remote_set_on
 38458                           
 38459                           ;app_device_custom_hid.c: 483: break;
 38460  00F0FE  0012               	return	
 38461  00F100                     
 38462                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 38463  00F100  0E00               	movlw	0
 38464  00F102  EC0E  F096         	call	_buck_remote_set_on
 38465                           
 38466                           ;app_device_custom_hid.c: 486: break;
 38467  00F106  0012               	return	
 38468  00F108                     
 38469                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 38470  00F108  0E00               	movlw	0
 38471  00F10A  EC02  F096         	call	_buck_remote_set_synchronous
 38472                           
 38473                           ;app_device_custom_hid.c: 489: break;
 38474  00F10E  0012               	return	
 38475  00F110                     
 38476                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 38477  00F110  0E01               	movlw	1
 38478  00F112  EC02  F096         	call	_buck_remote_set_synchronous
 38479                           
 38480                           ;app_device_custom_hid.c: 492: break;
 38481  00F116  0012               	return	
 38482  00F118                     
 38483                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 38484  00F118  0EFF               	movlw	255
 38485  00F11A  EC10  F090         	call	_buck_remote_change_dutycycle
 38486                           
 38487                           ;app_device_custom_hid.c: 495: break;
 38488  00F11E  0012               	return	
 38489  00F120                     
 38490                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 38491  00F120  0E01               	movlw	1
 38492  00F122  EC10  F090         	call	_buck_remote_change_dutycycle
 38493                           
 38494                           ;app_device_custom_hid.c: 498: break;
 38495  00F126  0012               	return	
 38496  00F128                     
 38497                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 38498  00F128  0100               	movlb	0	; () banked
 38499  00F12A  5163               	movf	__parse_command_long@data& (0+255),w,b
 38500  00F12C  EC44  F094         	call	_buck_remote_set_dutycycle
 38501                           
 38502                           ;app_device_custom_hid.c: 502: }
 38503                           
 38504                           ;app_device_custom_hid.c: 501: break;
 38505  00F130  0012               	return	
 38506  00F132                     l1164:
 38507  00F132  0100               	movlb	0	; () banked
 38508  00F134  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 38509                           
 38510                           ; Switch size 1, requested type "space"
 38511                           ; Number of cases is 15, Range of values is 64 to 78
 38512                           ; switch strategies available:
 38513                           ; Name         Instructions Cycles
 38514                           ; simple_byte           46    24 (average)
 38515                           ;	Chosen strategy is simple_byte
 38516  00F136  0A40               	xorlw	64	; case 64
 38517  00F138  B4D8               	btfsc	status,2,c
 38518  00F13A  D7B8               	goto	l1165
 38519  00F13C  0A01               	xorlw	1	; case 65
 38520  00F13E  B4D8               	btfsc	status,2,c
 38521  00F140  D7BA               	goto	l1167
 38522  00F142  0A03               	xorlw	3	; case 66
 38523  00F144  B4D8               	btfsc	status,2,c
 38524  00F146  D7BC               	goto	l1168
 38525  00F148  0A01               	xorlw	1	; case 67
 38526  00F14A  B4D8               	btfsc	status,2,c
 38527  00F14C  D7BE               	goto	l1169
 38528  00F14E  0A07               	xorlw	7	; case 68
 38529  00F150  B4D8               	btfsc	status,2,c
 38530  00F152  D7C0               	goto	l1170
 38531  00F154  0A01               	xorlw	1	; case 69
 38532  00F156  B4D8               	btfsc	status,2,c
 38533  00F158  D7C2               	goto	l1171
 38534  00F15A  0A03               	xorlw	3	; case 70
 38535  00F15C  B4D8               	btfsc	status,2,c
 38536  00F15E  D7C4               	goto	l1172
 38537  00F160  0A01               	xorlw	1	; case 71
 38538  00F162  B4D8               	btfsc	status,2,c
 38539  00F164  D7C5               	goto	l1173
 38540  00F166  0A0F               	xorlw	15	; case 72
 38541  00F168  B4D8               	btfsc	status,2,c
 38542  00F16A  D7C6               	goto	l1174
 38543  00F16C  0A01               	xorlw	1	; case 73
 38544  00F16E  B4D8               	btfsc	status,2,c
 38545  00F170  D7C7               	goto	l1175
 38546  00F172  0A03               	xorlw	3	; case 74
 38547  00F174  B4D8               	btfsc	status,2,c
 38548  00F176  D7C8               	goto	l1176
 38549  00F178  0A01               	xorlw	1	; case 75
 38550  00F17A  B4D8               	btfsc	status,2,c
 38551  00F17C  D7C9               	goto	l1177
 38552  00F17E  0A07               	xorlw	7	; case 76
 38553  00F180  B4D8               	btfsc	status,2,c
 38554  00F182  D7CA               	goto	l1178
 38555  00F184  0A01               	xorlw	1	; case 77
 38556  00F186  B4D8               	btfsc	status,2,c
 38557  00F188  D7CB               	goto	l1179
 38558  00F18A  0A03               	xorlw	3	; case 78
 38559  00F18C  A4D8               	btfss	status,2,c
 38560  00F18E  0012               	return	
 38561  00F190  D7CB               	goto	l1180
 38562  00F192                     __end_of__parse_command_long:
 38563                           	opt stack 0
 38564                           tosu	equ	0xFFF
 38565                           tosh	equ	0xFFE
 38566                           tosl	equ	0xFFD
 38567                           pclath	equ	0xFFA
 38568                           tblptru	equ	0xFF8
 38569                           tblptrh	equ	0xFF7
 38570                           tblptrl	equ	0xFF6
 38571                           tablat	equ	0xFF5
 38572                           prodh	equ	0xFF4
 38573                           prodl	equ	0xFF3
 38574                           intcon	equ	0xFF2
 38575                           intcon2	equ	0xFF1
 38576                           intcon3	equ	0xFF0
 38577                           postinc0	equ	0xFEE
 38578                           wreg	equ	0xFE8
 38579                           indf1	equ	0xFE7
 38580                           postinc1	equ	0xFE6
 38581                           postdec1	equ	0xFE5
 38582                           plusw1	equ	0xFE3
 38583                           fsr1h	equ	0xFE2
 38584                           fsr1l	equ	0xFE1
 38585                           indf2	equ	0xFDF
 38586                           postinc2	equ	0xFDE
 38587                           postdec2	equ	0xFDD
 38588                           plusw2	equ	0xFDB
 38589                           fsr2h	equ	0xFDA
 38590                           fsr2l	equ	0xFD9
 38591                           status	equ	0xFD8
 38592                           
 38593 ;; *************** function _rtcc_set_year *****************
 38594 ;; Defined at:
 38595 ;;		line 117 in file "rtcc.c"
 38596 ;; Parameters:    Size  Location     Type
 38597 ;;  year            1    wreg     unsigned char 
 38598 ;; Auto vars:     Size  Location     Type
 38599 ;;  year            1    0[BANK0 ] unsigned char 
 38600 ;; Return value:  Size  Location     Type
 38601 ;;                  1    wreg      void 
 38602 ;; Registers used:
 38603 ;;		wreg, status,2, cstack
 38604 ;; Tracked objects:
 38605 ;;		On entry : 0/0
 38606 ;;		On exit  : 0/0
 38607 ;;		Unchanged: 0/0
 38608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38613 ;;Total ram usage:        1 bytes
 38614 ;; Hardware stack levels used:    1
 38615 ;; Hardware stack levels required when called:   11
 38616 ;; This function calls:
 38617 ;;		__rtcc_write_disable
 38618 ;;		__rtcc_write_enable
 38619 ;; This function is called by:
 38620 ;;		__parse_command_long
 38621 ;;		_rtcc_increment_year
 38622 ;;		_rtcc_decrement_year
 38623 ;;		_rtcc_read_eeprom
 38624 ;; This function uses a non-reentrant model
 38625 ;;
 38626                           
 38627                           	psect	text178
 38628  012B74                     __ptext178:
 38629                           	opt stack 0
 38630  012B74                     _rtcc_set_year:
 38631                           	opt stack 16
 38632                           
 38633                           ;incstack = 0
 38634                           ;rtcc_set_year@year stored from wreg
 38635  012B74  0100               	movlb	0	; () banked
 38636  012B76  6F60               	movwf	rtcc_set_year@year& (0+255),b
 38637                           
 38638                           ;rtcc.c: 119: _rtcc_write_enable();
 38639  012B78  EC1A  F096         	call	__rtcc_write_enable	;wreg free
 38640                           
 38641                           ;rtcc.c: 120: RTCCFGbits.RTCPTR1 = 1;
 38642  012B7C  010F               	movlb	15	; () banked
 38643  012B7E  833F               	bsf	63,1,b	;volatile
 38644                           
 38645                           ; BSR set to: 15
 38646                           ;rtcc.c: 121: RTCCFGbits.RTCPTR0 = 1;
 38647  012B80  813F               	bsf	63,0,b	;volatile
 38648                           
 38649                           ; BSR set to: 15
 38650                           ;rtcc.c: 122: RTCVALL = year;
 38651  012B82  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 38652                           
 38653                           ;rtcc.c: 123: _rtcc_write_disable();
 38654  012B86  EC25  F096         	call	__rtcc_write_disable	;wreg free
 38655  012B8A  0012               	return		;funcret
 38656  012B8C                     __end_of_rtcc_set_year:
 38657                           	opt stack 0
 38658                           tosu	equ	0xFFF
 38659                           tosh	equ	0xFFE
 38660                           tosl	equ	0xFFD
 38661                           pclath	equ	0xFFA
 38662                           tblptru	equ	0xFF8
 38663                           tblptrh	equ	0xFF7
 38664                           tblptrl	equ	0xFF6
 38665                           tablat	equ	0xFF5
 38666                           prodh	equ	0xFF4
 38667                           prodl	equ	0xFF3
 38668                           intcon	equ	0xFF2
 38669                           intcon2	equ	0xFF1
 38670                           intcon3	equ	0xFF0
 38671                           postinc0	equ	0xFEE
 38672                           wreg	equ	0xFE8
 38673                           indf1	equ	0xFE7
 38674                           postinc1	equ	0xFE6
 38675                           postdec1	equ	0xFE5
 38676                           plusw1	equ	0xFE3
 38677                           fsr1h	equ	0xFE2
 38678                           fsr1l	equ	0xFE1
 38679                           indf2	equ	0xFDF
 38680                           postinc2	equ	0xFDE
 38681                           postdec2	equ	0xFDD
 38682                           plusw2	equ	0xFDB
 38683                           fsr2h	equ	0xFDA
 38684                           fsr2l	equ	0xFD9
 38685                           status	equ	0xFD8
 38686                           
 38687 ;; *************** function _rtcc_set_seconds *****************
 38688 ;; Defined at:
 38689 ;;		line 307 in file "rtcc.c"
 38690 ;; Parameters:    Size  Location     Type
 38691 ;;  seconds         1    wreg     unsigned char 
 38692 ;; Auto vars:     Size  Location     Type
 38693 ;;  seconds         1    0[BANK0 ] unsigned char 
 38694 ;; Return value:  Size  Location     Type
 38695 ;;                  1    wreg      void 
 38696 ;; Registers used:
 38697 ;;		wreg, status,2, cstack
 38698 ;; Tracked objects:
 38699 ;;		On entry : 0/0
 38700 ;;		On exit  : 0/0
 38701 ;;		Unchanged: 0/0
 38702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38706 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38707 ;;Total ram usage:        1 bytes
 38708 ;; Hardware stack levels used:    1
 38709 ;; Hardware stack levels required when called:   11
 38710 ;; This function calls:
 38711 ;;		__rtcc_write_disable
 38712 ;;		__rtcc_write_enable
 38713 ;; This function is called by:
 38714 ;;		__parse_command_long
 38715 ;;		_rtcc_increment_seconds
 38716 ;;		_rtcc_decrement_seconds
 38717 ;;		_rtcc_read_eeprom
 38718 ;; This function uses a non-reentrant model
 38719 ;;
 38720                           
 38721                           	psect	text179
 38722  012B8C                     __ptext179:
 38723                           	opt stack 0
 38724  012B8C                     _rtcc_set_seconds:
 38725                           	opt stack 16
 38726                           
 38727                           ;incstack = 0
 38728                           ;rtcc_set_seconds@seconds stored from wreg
 38729  012B8C  0100               	movlb	0	; () banked
 38730  012B8E  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 38731                           
 38732                           ;rtcc.c: 309: _rtcc_write_enable();
 38733  012B90  EC1A  F096         	call	__rtcc_write_enable	;wreg free
 38734                           
 38735                           ;rtcc.c: 310: RTCCFGbits.RTCPTR1 = 0;
 38736  012B94  010F               	movlb	15	; () banked
 38737  012B96  933F               	bcf	63,1,b	;volatile
 38738                           
 38739                           ; BSR set to: 15
 38740                           ;rtcc.c: 311: RTCCFGbits.RTCPTR0 = 0;
 38741  012B98  913F               	bcf	63,0,b	;volatile
 38742                           
 38743                           ; BSR set to: 15
 38744                           ;rtcc.c: 312: RTCVALL = seconds;
 38745  012B9A  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 38746                           
 38747                           ;rtcc.c: 313: _rtcc_write_disable();
 38748  012B9E  EC25  F096         	call	__rtcc_write_disable	;wreg free
 38749  012BA2  0012               	return		;funcret
 38750  012BA4                     __end_of_rtcc_set_seconds:
 38751                           	opt stack 0
 38752                           tosu	equ	0xFFF
 38753                           tosh	equ	0xFFE
 38754                           tosl	equ	0xFFD
 38755                           pclath	equ	0xFFA
 38756                           tblptru	equ	0xFF8
 38757                           tblptrh	equ	0xFF7
 38758                           tblptrl	equ	0xFF6
 38759                           tablat	equ	0xFF5
 38760                           prodh	equ	0xFF4
 38761                           prodl	equ	0xFF3
 38762                           intcon	equ	0xFF2
 38763                           intcon2	equ	0xFF1
 38764                           intcon3	equ	0xFF0
 38765                           postinc0	equ	0xFEE
 38766                           wreg	equ	0xFE8
 38767                           indf1	equ	0xFE7
 38768                           postinc1	equ	0xFE6
 38769                           postdec1	equ	0xFE5
 38770                           plusw1	equ	0xFE3
 38771                           fsr1h	equ	0xFE2
 38772                           fsr1l	equ	0xFE1
 38773                           indf2	equ	0xFDF
 38774                           postinc2	equ	0xFDE
 38775                           postdec2	equ	0xFDD
 38776                           plusw2	equ	0xFDB
 38777                           fsr2h	equ	0xFDA
 38778                           fsr2l	equ	0xFD9
 38779                           status	equ	0xFD8
 38780                           
 38781 ;; *************** function _rtcc_set_month *****************
 38782 ;; Defined at:
 38783 ;;		line 155 in file "rtcc.c"
 38784 ;; Parameters:    Size  Location     Type
 38785 ;;  month           1    wreg     unsigned char 
 38786 ;; Auto vars:     Size  Location     Type
 38787 ;;  month           1    0[BANK0 ] unsigned char 
 38788 ;; Return value:  Size  Location     Type
 38789 ;;                  1    wreg      void 
 38790 ;; Registers used:
 38791 ;;		wreg, status,2, cstack
 38792 ;; Tracked objects:
 38793 ;;		On entry : 0/0
 38794 ;;		On exit  : 0/0
 38795 ;;		Unchanged: 0/0
 38796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38801 ;;Total ram usage:        1 bytes
 38802 ;; Hardware stack levels used:    1
 38803 ;; Hardware stack levels required when called:   11
 38804 ;; This function calls:
 38805 ;;		__rtcc_write_disable
 38806 ;;		__rtcc_write_enable
 38807 ;; This function is called by:
 38808 ;;		__parse_command_long
 38809 ;;		_rtcc_increment_month
 38810 ;;		_rtcc_decrement_month
 38811 ;;		_rtcc_read_eeprom
 38812 ;; This function uses a non-reentrant model
 38813 ;;
 38814                           
 38815                           	psect	text180
 38816  012BA4                     __ptext180:
 38817                           	opt stack 0
 38818  012BA4                     _rtcc_set_month:
 38819                           	opt stack 16
 38820                           
 38821                           ;incstack = 0
 38822                           ;rtcc_set_month@month stored from wreg
 38823  012BA4  0100               	movlb	0	; () banked
 38824  012BA6  6F60               	movwf	rtcc_set_month@month& (0+255),b
 38825                           
 38826                           ;rtcc.c: 157: _rtcc_write_enable();
 38827  012BA8  EC1A  F096         	call	__rtcc_write_enable	;wreg free
 38828                           
 38829                           ;rtcc.c: 158: RTCCFGbits.RTCPTR1 = 1;
 38830  012BAC  010F               	movlb	15	; () banked
 38831  012BAE  833F               	bsf	63,1,b	;volatile
 38832                           
 38833                           ; BSR set to: 15
 38834                           ;rtcc.c: 159: RTCCFGbits.RTCPTR0 = 0;
 38835  012BB0  913F               	bcf	63,0,b	;volatile
 38836                           
 38837                           ; BSR set to: 15
 38838                           ;rtcc.c: 160: RTCVALH = month;
 38839  012BB2  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 38840                           
 38841                           ;rtcc.c: 161: _rtcc_write_disable();
 38842  012BB6  EC25  F096         	call	__rtcc_write_disable	;wreg free
 38843  012BBA  0012               	return		;funcret
 38844  012BBC                     __end_of_rtcc_set_month:
 38845                           	opt stack 0
 38846                           tosu	equ	0xFFF
 38847                           tosh	equ	0xFFE
 38848                           tosl	equ	0xFFD
 38849                           pclath	equ	0xFFA
 38850                           tblptru	equ	0xFF8
 38851                           tblptrh	equ	0xFF7
 38852                           tblptrl	equ	0xFF6
 38853                           tablat	equ	0xFF5
 38854                           prodh	equ	0xFF4
 38855                           prodl	equ	0xFF3
 38856                           intcon	equ	0xFF2
 38857                           intcon2	equ	0xFF1
 38858                           intcon3	equ	0xFF0
 38859                           postinc0	equ	0xFEE
 38860                           wreg	equ	0xFE8
 38861                           indf1	equ	0xFE7
 38862                           postinc1	equ	0xFE6
 38863                           postdec1	equ	0xFE5
 38864                           plusw1	equ	0xFE3
 38865                           fsr1h	equ	0xFE2
 38866                           fsr1l	equ	0xFE1
 38867                           indf2	equ	0xFDF
 38868                           postinc2	equ	0xFDE
 38869                           postdec2	equ	0xFDD
 38870                           plusw2	equ	0xFDB
 38871                           fsr2h	equ	0xFDA
 38872                           fsr2l	equ	0xFD9
 38873                           status	equ	0xFD8
 38874                           
 38875 ;; *************** function _rtcc_set_minutes *****************
 38876 ;; Defined at:
 38877 ;;		line 269 in file "rtcc.c"
 38878 ;; Parameters:    Size  Location     Type
 38879 ;;  minutes         1    wreg     unsigned char 
 38880 ;; Auto vars:     Size  Location     Type
 38881 ;;  minutes         1    0[BANK0 ] unsigned char 
 38882 ;; Return value:  Size  Location     Type
 38883 ;;                  1    wreg      void 
 38884 ;; Registers used:
 38885 ;;		wreg, status,2, cstack
 38886 ;; Tracked objects:
 38887 ;;		On entry : 0/0
 38888 ;;		On exit  : 0/0
 38889 ;;		Unchanged: 0/0
 38890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38895 ;;Total ram usage:        1 bytes
 38896 ;; Hardware stack levels used:    1
 38897 ;; Hardware stack levels required when called:   11
 38898 ;; This function calls:
 38899 ;;		__rtcc_write_disable
 38900 ;;		__rtcc_write_enable
 38901 ;; This function is called by:
 38902 ;;		__parse_command_long
 38903 ;;		_rtcc_increment_minutes
 38904 ;;		_rtcc_decrement_minutes
 38905 ;;		_rtcc_read_eeprom
 38906 ;; This function uses a non-reentrant model
 38907 ;;
 38908                           
 38909                           	psect	text181
 38910  012BBC                     __ptext181:
 38911                           	opt stack 0
 38912  012BBC                     _rtcc_set_minutes:
 38913                           	opt stack 16
 38914                           
 38915                           ;incstack = 0
 38916                           ;rtcc_set_minutes@minutes stored from wreg
 38917  012BBC  0100               	movlb	0	; () banked
 38918  012BBE  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 38919                           
 38920                           ;rtcc.c: 271: _rtcc_write_enable();
 38921  012BC0  EC1A  F096         	call	__rtcc_write_enable	;wreg free
 38922                           
 38923                           ;rtcc.c: 272: RTCCFGbits.RTCPTR1 = 0;
 38924  012BC4  010F               	movlb	15	; () banked
 38925  012BC6  933F               	bcf	63,1,b	;volatile
 38926                           
 38927                           ; BSR set to: 15
 38928                           ;rtcc.c: 273: RTCCFGbits.RTCPTR0 = 0;
 38929  012BC8  913F               	bcf	63,0,b	;volatile
 38930                           
 38931                           ; BSR set to: 15
 38932                           ;rtcc.c: 274: RTCVALH = minutes;
 38933  012BCA  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 38934                           
 38935                           ;rtcc.c: 275: _rtcc_write_disable();
 38936  012BCE  EC25  F096         	call	__rtcc_write_disable	;wreg free
 38937  012BD2  0012               	return		;funcret
 38938  012BD4                     __end_of_rtcc_set_minutes:
 38939                           	opt stack 0
 38940                           tosu	equ	0xFFF
 38941                           tosh	equ	0xFFE
 38942                           tosl	equ	0xFFD
 38943                           pclath	equ	0xFFA
 38944                           tblptru	equ	0xFF8
 38945                           tblptrh	equ	0xFF7
 38946                           tblptrl	equ	0xFF6
 38947                           tablat	equ	0xFF5
 38948                           prodh	equ	0xFF4
 38949                           prodl	equ	0xFF3
 38950                           intcon	equ	0xFF2
 38951                           intcon2	equ	0xFF1
 38952                           intcon3	equ	0xFF0
 38953                           postinc0	equ	0xFEE
 38954                           wreg	equ	0xFE8
 38955                           indf1	equ	0xFE7
 38956                           postinc1	equ	0xFE6
 38957                           postdec1	equ	0xFE5
 38958                           plusw1	equ	0xFE3
 38959                           fsr1h	equ	0xFE2
 38960                           fsr1l	equ	0xFE1
 38961                           indf2	equ	0xFDF
 38962                           postinc2	equ	0xFDE
 38963                           postdec2	equ	0xFDD
 38964                           plusw2	equ	0xFDB
 38965                           fsr2h	equ	0xFDA
 38966                           fsr2l	equ	0xFD9
 38967                           status	equ	0xFD8
 38968                           
 38969 ;; *************** function _rtcc_set_hours *****************
 38970 ;; Defined at:
 38971 ;;		line 231 in file "rtcc.c"
 38972 ;; Parameters:    Size  Location     Type
 38973 ;;  hours           1    wreg     unsigned char 
 38974 ;; Auto vars:     Size  Location     Type
 38975 ;;  hours           1    0[BANK0 ] unsigned char 
 38976 ;; Return value:  Size  Location     Type
 38977 ;;                  1    wreg      void 
 38978 ;; Registers used:
 38979 ;;		wreg, status,2, cstack
 38980 ;; Tracked objects:
 38981 ;;		On entry : 0/0
 38982 ;;		On exit  : 0/0
 38983 ;;		Unchanged: 0/0
 38984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38988 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38989 ;;Total ram usage:        1 bytes
 38990 ;; Hardware stack levels used:    1
 38991 ;; Hardware stack levels required when called:   11
 38992 ;; This function calls:
 38993 ;;		__rtcc_write_disable
 38994 ;;		__rtcc_write_enable
 38995 ;; This function is called by:
 38996 ;;		__parse_command_long
 38997 ;;		_rtcc_increment_hours
 38998 ;;		_rtcc_decrement_hours
 38999 ;;		_rtcc_read_eeprom
 39000 ;; This function uses a non-reentrant model
 39001 ;;
 39002                           
 39003                           	psect	text182
 39004  012BD4                     __ptext182:
 39005                           	opt stack 0
 39006  012BD4                     _rtcc_set_hours:
 39007                           	opt stack 16
 39008                           
 39009                           ;incstack = 0
 39010                           ;rtcc_set_hours@hours stored from wreg
 39011  012BD4  0100               	movlb	0	; () banked
 39012  012BD6  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 39013                           
 39014                           ;rtcc.c: 233: _rtcc_write_enable();
 39015  012BD8  EC1A  F096         	call	__rtcc_write_enable	;wreg free
 39016                           
 39017                           ;rtcc.c: 234: RTCCFGbits.RTCPTR1 = 0;
 39018  012BDC  010F               	movlb	15	; () banked
 39019  012BDE  933F               	bcf	63,1,b	;volatile
 39020                           
 39021                           ; BSR set to: 15
 39022                           ;rtcc.c: 235: RTCCFGbits.RTCPTR0 = 1;
 39023  012BE0  813F               	bsf	63,0,b	;volatile
 39024                           
 39025                           ; BSR set to: 15
 39026                           ;rtcc.c: 236: RTCVALL = hours;
 39027  012BE2  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 39028                           
 39029                           ;rtcc.c: 237: _rtcc_write_disable();
 39030  012BE6  EC25  F096         	call	__rtcc_write_disable	;wreg free
 39031  012BEA  0012               	return		;funcret
 39032  012BEC                     __end_of_rtcc_set_hours:
 39033                           	opt stack 0
 39034                           tosu	equ	0xFFF
 39035                           tosh	equ	0xFFE
 39036                           tosl	equ	0xFFD
 39037                           pclath	equ	0xFFA
 39038                           tblptru	equ	0xFF8
 39039                           tblptrh	equ	0xFF7
 39040                           tblptrl	equ	0xFF6
 39041                           tablat	equ	0xFF5
 39042                           prodh	equ	0xFF4
 39043                           prodl	equ	0xFF3
 39044                           intcon	equ	0xFF2
 39045                           intcon2	equ	0xFF1
 39046                           intcon3	equ	0xFF0
 39047                           postinc0	equ	0xFEE
 39048                           wreg	equ	0xFE8
 39049                           indf1	equ	0xFE7
 39050                           postinc1	equ	0xFE6
 39051                           postdec1	equ	0xFE5
 39052                           plusw1	equ	0xFE3
 39053                           fsr1h	equ	0xFE2
 39054                           fsr1l	equ	0xFE1
 39055                           indf2	equ	0xFDF
 39056                           postinc2	equ	0xFDE
 39057                           postdec2	equ	0xFDD
 39058                           plusw2	equ	0xFDB
 39059                           fsr2h	equ	0xFDA
 39060                           fsr2l	equ	0xFD9
 39061                           status	equ	0xFD8
 39062                           
 39063 ;; *************** function _rtcc_set_day *****************
 39064 ;; Defined at:
 39065 ;;		line 193 in file "rtcc.c"
 39066 ;; Parameters:    Size  Location     Type
 39067 ;;  day             1    wreg     unsigned char 
 39068 ;; Auto vars:     Size  Location     Type
 39069 ;;  day             1    0[BANK0 ] unsigned char 
 39070 ;; Return value:  Size  Location     Type
 39071 ;;                  1    wreg      void 
 39072 ;; Registers used:
 39073 ;;		wreg, status,2, cstack
 39074 ;; Tracked objects:
 39075 ;;		On entry : 0/0
 39076 ;;		On exit  : 0/0
 39077 ;;		Unchanged: 0/0
 39078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39083 ;;Total ram usage:        1 bytes
 39084 ;; Hardware stack levels used:    1
 39085 ;; Hardware stack levels required when called:   11
 39086 ;; This function calls:
 39087 ;;		__rtcc_write_disable
 39088 ;;		__rtcc_write_enable
 39089 ;; This function is called by:
 39090 ;;		__parse_command_long
 39091 ;;		_rtcc_correct_day
 39092 ;;		_rtcc_increment_day
 39093 ;;		_rtcc_decrement_day
 39094 ;;		_rtcc_read_eeprom
 39095 ;; This function uses a non-reentrant model
 39096 ;;
 39097                           
 39098                           	psect	text183
 39099  012BEC                     __ptext183:
 39100                           	opt stack 0
 39101  012BEC                     _rtcc_set_day:
 39102                           	opt stack 16
 39103                           
 39104                           ;incstack = 0
 39105                           ;rtcc_set_day@day stored from wreg
 39106  012BEC  0100               	movlb	0	; () banked
 39107  012BEE  6F60               	movwf	rtcc_set_day@day& (0+255),b
 39108                           
 39109                           ;rtcc.c: 195: _rtcc_write_enable();
 39110  012BF0  EC1A  F096         	call	__rtcc_write_enable	;wreg free
 39111                           
 39112                           ;rtcc.c: 196: RTCCFGbits.RTCPTR1 = 1;
 39113  012BF4  010F               	movlb	15	; () banked
 39114  012BF6  833F               	bsf	63,1,b	;volatile
 39115                           
 39116                           ; BSR set to: 15
 39117                           ;rtcc.c: 197: RTCCFGbits.RTCPTR0 = 0;
 39118  012BF8  913F               	bcf	63,0,b	;volatile
 39119                           
 39120                           ; BSR set to: 15
 39121                           ;rtcc.c: 198: RTCVALL = day;
 39122  012BFA  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 39123                           
 39124                           ;rtcc.c: 199: _rtcc_write_disable();
 39125  012BFE  EC25  F096         	call	__rtcc_write_disable	;wreg free
 39126  012C02  0012               	return		;funcret
 39127  012C04                     __end_of_rtcc_set_day:
 39128                           	opt stack 0
 39129                           tosu	equ	0xFFF
 39130                           tosh	equ	0xFFE
 39131                           tosl	equ	0xFFD
 39132                           pclath	equ	0xFFA
 39133                           tblptru	equ	0xFF8
 39134                           tblptrh	equ	0xFF7
 39135                           tblptrl	equ	0xFF6
 39136                           tablat	equ	0xFF5
 39137                           prodh	equ	0xFF4
 39138                           prodl	equ	0xFF3
 39139                           intcon	equ	0xFF2
 39140                           intcon2	equ	0xFF1
 39141                           intcon3	equ	0xFF0
 39142                           postinc0	equ	0xFEE
 39143                           wreg	equ	0xFE8
 39144                           indf1	equ	0xFE7
 39145                           postinc1	equ	0xFE6
 39146                           postdec1	equ	0xFE5
 39147                           plusw1	equ	0xFE3
 39148                           fsr1h	equ	0xFE2
 39149                           fsr1l	equ	0xFE1
 39150                           indf2	equ	0xFDF
 39151                           postinc2	equ	0xFDE
 39152                           postdec2	equ	0xFDD
 39153                           plusw2	equ	0xFDB
 39154                           fsr2h	equ	0xFDA
 39155                           fsr2l	equ	0xFD9
 39156                           status	equ	0xFD8
 39157                           
 39158 ;; *************** function __rtcc_write_enable *****************
 39159 ;; Defined at:
 39160 ;;		line 14 in file "rtcc.c"
 39161 ;; Parameters:    Size  Location     Type
 39162 ;;		None
 39163 ;; Auto vars:     Size  Location     Type
 39164 ;;		None
 39165 ;; Return value:  Size  Location     Type
 39166 ;;                  1    wreg      void 
 39167 ;; Registers used:
 39168 ;;		wreg, status,2
 39169 ;; Tracked objects:
 39170 ;;		On entry : 0/0
 39171 ;;		On exit  : 0/0
 39172 ;;		Unchanged: 0/0
 39173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39178 ;;Total ram usage:        0 bytes
 39179 ;; Hardware stack levels used:    1
 39180 ;; Hardware stack levels required when called:   10
 39181 ;; This function calls:
 39182 ;;		Nothing
 39183 ;; This function is called by:
 39184 ;;		_rtcc_set_year
 39185 ;;		_rtcc_set_month
 39186 ;;		_rtcc_set_day
 39187 ;;		_rtcc_set_hours
 39188 ;;		_rtcc_set_minutes
 39189 ;;		_rtcc_set_seconds
 39190 ;; This function uses a non-reentrant model
 39191 ;;
 39192                           
 39193                           	psect	text184
 39194  012C34                     __ptext184:
 39195                           	opt stack 0
 39196  012C34                     __rtcc_write_enable:
 39197                           	opt stack 16
 39198                           
 39199                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 39200                           
 39201                           ;incstack = 0
 39202  012C34  D006               	goto	l2241
 39203  012C36                     
 39204                           ;rtcc.c: 17: {
 39205                           ;rtcc.c: 18: EECON2 = 0x55;
 39206  012C36  0E55               	movlw	85
 39207  012C38  6EA7               	movwf	4007,c	;volsfr
 39208                           
 39209                           ;rtcc.c: 19: EECON2 = 0xAA;
 39210  012C3A  0EAA               	movlw	170
 39211  012C3C  6EA7               	movwf	4007,c	;volsfr
 39212                           
 39213                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 39214  012C3E  010F               	movlb	15	; () banked
 39215  012C40  8B3F               	bsf	63,5,b	;volatile
 39216  012C42                     l2241:
 39217                           
 39218                           ; BSR set to: 15
 39219  012C42  010F               	movlb	15	; () banked
 39220  012C44  BB3F               	btfsc	63,5,b	;volatile
 39221  012C46  0012               	return	
 39222  012C48  D7F6               	goto	l2242
 39223  012C4A                     __end_of__rtcc_write_enable:
 39224                           	opt stack 0
 39225                           tosu	equ	0xFFF
 39226                           tosh	equ	0xFFE
 39227                           tosl	equ	0xFFD
 39228                           pclath	equ	0xFFA
 39229                           tblptru	equ	0xFF8
 39230                           tblptrh	equ	0xFF7
 39231                           tblptrl	equ	0xFF6
 39232                           tablat	equ	0xFF5
 39233                           prodh	equ	0xFF4
 39234                           prodl	equ	0xFF3
 39235                           intcon	equ	0xFF2
 39236                           intcon2	equ	0xFF1
 39237                           intcon3	equ	0xFF0
 39238                           postinc0	equ	0xFEE
 39239                           wreg	equ	0xFE8
 39240                           indf1	equ	0xFE7
 39241                           postinc1	equ	0xFE6
 39242                           postdec1	equ	0xFE5
 39243                           plusw1	equ	0xFE3
 39244                           fsr1h	equ	0xFE2
 39245                           fsr1l	equ	0xFE1
 39246                           indf2	equ	0xFDF
 39247                           postinc2	equ	0xFDE
 39248                           postdec2	equ	0xFDD
 39249                           plusw2	equ	0xFDB
 39250                           fsr2h	equ	0xFDA
 39251                           fsr2l	equ	0xFD9
 39252                           status	equ	0xFD8
 39253                           
 39254 ;; *************** function __rtcc_write_disable *****************
 39255 ;; Defined at:
 39256 ;;		line 24 in file "rtcc.c"
 39257 ;; Parameters:    Size  Location     Type
 39258 ;;		None
 39259 ;; Auto vars:     Size  Location     Type
 39260 ;;		None
 39261 ;; Return value:  Size  Location     Type
 39262 ;;                  1    wreg      void 
 39263 ;; Registers used:
 39264 ;;		wreg, status,2
 39265 ;; Tracked objects:
 39266 ;;		On entry : 0/0
 39267 ;;		On exit  : 0/0
 39268 ;;		Unchanged: 0/0
 39269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39274 ;;Total ram usage:        0 bytes
 39275 ;; Hardware stack levels used:    1
 39276 ;; Hardware stack levels required when called:   10
 39277 ;; This function calls:
 39278 ;;		Nothing
 39279 ;; This function is called by:
 39280 ;;		_rtcc_set_year
 39281 ;;		_rtcc_set_month
 39282 ;;		_rtcc_set_day
 39283 ;;		_rtcc_set_hours
 39284 ;;		_rtcc_set_minutes
 39285 ;;		_rtcc_set_seconds
 39286 ;; This function uses a non-reentrant model
 39287 ;;
 39288                           
 39289                           	psect	text185
 39290  012C4A                     __ptext185:
 39291                           	opt stack 0
 39292  012C4A                     __rtcc_write_disable:
 39293                           	opt stack 16
 39294                           
 39295                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 39296                           
 39297                           ; BSR set to: 15
 39298                           ;incstack = 0
 39299  012C4A  D006               	goto	l2247
 39300  012C4C                     
 39301                           ;rtcc.c: 27: {
 39302                           ;rtcc.c: 28: EECON2 = 0x55;
 39303  012C4C  0E55               	movlw	85
 39304  012C4E  6EA7               	movwf	4007,c	;volsfr
 39305                           
 39306                           ;rtcc.c: 29: EECON2 = 0xAA;
 39307  012C50  0EAA               	movlw	170
 39308  012C52  6EA7               	movwf	4007,c	;volsfr
 39309                           
 39310                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 39311  012C54  010F               	movlb	15	; () banked
 39312  012C56  9B3F               	bcf	63,5,b	;volatile
 39313  012C58                     l2247:
 39314                           
 39315                           ; BSR set to: 15
 39316  012C58  010F               	movlb	15	; () banked
 39317  012C5A  AB3F               	btfss	63,5,b	;volatile
 39318  012C5C  0012               	return	
 39319  012C5E  D7F6               	goto	l2248
 39320  012C60                     __end_of__rtcc_write_disable:
 39321                           	opt stack 0
 39322                           tosu	equ	0xFFF
 39323                           tosh	equ	0xFFE
 39324                           tosl	equ	0xFFD
 39325                           pclath	equ	0xFFA
 39326                           tblptru	equ	0xFF8
 39327                           tblptrh	equ	0xFF7
 39328                           tblptrl	equ	0xFF6
 39329                           tablat	equ	0xFF5
 39330                           prodh	equ	0xFF4
 39331                           prodl	equ	0xFF3
 39332                           intcon	equ	0xFF2
 39333                           intcon2	equ	0xFF1
 39334                           intcon3	equ	0xFF0
 39335                           postinc0	equ	0xFEE
 39336                           wreg	equ	0xFE8
 39337                           indf1	equ	0xFE7
 39338                           postinc1	equ	0xFE6
 39339                           postdec1	equ	0xFE5
 39340                           plusw1	equ	0xFE3
 39341                           fsr1h	equ	0xFE2
 39342                           fsr1l	equ	0xFE1
 39343                           indf2	equ	0xFDF
 39344                           postinc2	equ	0xFDE
 39345                           postdec2	equ	0xFDD
 39346                           plusw2	equ	0xFDB
 39347                           fsr2h	equ	0xFDA
 39348                           fsr2l	equ	0xFD9
 39349                           status	equ	0xFD8
 39350                           
 39351 ;; *************** function _buck_remote_set_synchronous *****************
 39352 ;; Defined at:
 39353 ;;		line 621 in file "buck.c"
 39354 ;; Parameters:    Size  Location     Type
 39355 ;;  synchronous     1    wreg     unsigned char 
 39356 ;; Auto vars:     Size  Location     Type
 39357 ;;  synchronous     1    0[BANK0 ] unsigned char 
 39358 ;; Return value:  Size  Location     Type
 39359 ;;                  1    wreg      void 
 39360 ;; Registers used:
 39361 ;;		wreg, status,2
 39362 ;; Tracked objects:
 39363 ;;		On entry : 0/0
 39364 ;;		On exit  : 0/0
 39365 ;;		Unchanged: 0/0
 39366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39370 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39371 ;;Total ram usage:        1 bytes
 39372 ;; Hardware stack levels used:    1
 39373 ;; Hardware stack levels required when called:   10
 39374 ;; This function calls:
 39375 ;;		Nothing
 39376 ;; This function is called by:
 39377 ;;		__parse_command_long
 39378 ;; This function uses a non-reentrant model
 39379 ;;
 39380                           
 39381                           	psect	text186
 39382  012C04                     __ptext186:
 39383                           	opt stack 0
 39384  012C04                     _buck_remote_set_synchronous:
 39385                           	opt stack 18
 39386                           
 39387                           ; BSR set to: 15
 39388                           ;incstack = 0
 39389                           ;buck_remote_set_synchronous@synchronous stored from wreg
 39390  012C04  0100               	movlb	0	; () banked
 39391  012C06  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 39392                           
 39393                           ;buck.c: 623: if(synchronous)
 39394  012C08  0100               	movlb	0	; () banked
 39395  012C0A  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 39396  012C0C  B4D8               	btfsc	status,2,c
 39397  012C0E  D003               	goto	l2613
 39398                           
 39399                           ; BSR set to: 0
 39400                           ;buck.c: 624: buck_remote_synchronous = 1;
 39401  012C10  0E01               	movlw	1
 39402  012C12  6E4D               	movwf	_buck_remote_synchronous,c
 39403  012C14  0012               	return	
 39404  012C16                     l2613:
 39405                           
 39406                           ; BSR set to: 0
 39407                           ;buck.c: 625: else
 39408                           ;buck.c: 626: buck_remote_synchronous = 0;
 39409                           
 39410                           ; BSR set to: 0
 39411  012C16  0E00               	movlw	0
 39412  012C18  6E4D               	movwf	_buck_remote_synchronous,c
 39413  012C1A  0012               	return	
 39414  012C1C                     __end_of_buck_remote_set_synchronous:
 39415                           	opt stack 0
 39416                           tosu	equ	0xFFF
 39417                           tosh	equ	0xFFE
 39418                           tosl	equ	0xFFD
 39419                           pclath	equ	0xFFA
 39420                           tblptru	equ	0xFF8
 39421                           tblptrh	equ	0xFF7
 39422                           tblptrl	equ	0xFF6
 39423                           tablat	equ	0xFF5
 39424                           prodh	equ	0xFF4
 39425                           prodl	equ	0xFF3
 39426                           intcon	equ	0xFF2
 39427                           intcon2	equ	0xFF1
 39428                           intcon3	equ	0xFF0
 39429                           postinc0	equ	0xFEE
 39430                           wreg	equ	0xFE8
 39431                           indf1	equ	0xFE7
 39432                           postinc1	equ	0xFE6
 39433                           postdec1	equ	0xFE5
 39434                           plusw1	equ	0xFE3
 39435                           fsr1h	equ	0xFE2
 39436                           fsr1l	equ	0xFE1
 39437                           indf2	equ	0xFDF
 39438                           postinc2	equ	0xFDE
 39439                           postdec2	equ	0xFDD
 39440                           plusw2	equ	0xFDB
 39441                           fsr2h	equ	0xFDA
 39442                           fsr2l	equ	0xFD9
 39443                           status	equ	0xFD8
 39444                           
 39445 ;; *************** function _buck_remote_set_on *****************
 39446 ;; Defined at:
 39447 ;;		line 613 in file "buck.c"
 39448 ;; Parameters:    Size  Location     Type
 39449 ;;  on              1    wreg     unsigned char 
 39450 ;; Auto vars:     Size  Location     Type
 39451 ;;  on              1    0[BANK0 ] unsigned char 
 39452 ;; Return value:  Size  Location     Type
 39453 ;;                  1    wreg      void 
 39454 ;; Registers used:
 39455 ;;		wreg, status,2
 39456 ;; Tracked objects:
 39457 ;;		On entry : 0/0
 39458 ;;		On exit  : 0/0
 39459 ;;		Unchanged: 0/0
 39460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39465 ;;Total ram usage:        1 bytes
 39466 ;; Hardware stack levels used:    1
 39467 ;; Hardware stack levels required when called:   10
 39468 ;; This function calls:
 39469 ;;		Nothing
 39470 ;; This function is called by:
 39471 ;;		__parse_command_long
 39472 ;; This function uses a non-reentrant model
 39473 ;;
 39474                           
 39475                           	psect	text187
 39476  012C1C                     __ptext187:
 39477                           	opt stack 0
 39478  012C1C                     _buck_remote_set_on:
 39479                           	opt stack 18
 39480                           
 39481                           ; BSR set to: 0
 39482                           ;incstack = 0
 39483                           ;buck_remote_set_on@on stored from wreg
 39484  012C1C  0100               	movlb	0	; () banked
 39485  012C1E  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 39486                           
 39487                           ;buck.c: 615: if(on)
 39488  012C20  0100               	movlb	0	; () banked
 39489  012C22  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 39490  012C24  B4D8               	btfsc	status,2,c
 39491  012C26  D003               	goto	l2608
 39492                           
 39493                           ; BSR set to: 0
 39494                           ;buck.c: 616: buck_remote_on = 1;
 39495  012C28  0E01               	movlw	1
 39496  012C2A  6E4E               	movwf	_buck_remote_on,c
 39497  012C2C  0012               	return	
 39498  012C2E                     l2608:
 39499                           
 39500                           ; BSR set to: 0
 39501                           ;buck.c: 617: else
 39502                           ;buck.c: 618: buck_remote_on = 0;
 39503                           
 39504                           ; BSR set to: 0
 39505  012C2E  0E00               	movlw	0
 39506  012C30  6E4E               	movwf	_buck_remote_on,c
 39507  012C32  0012               	return	
 39508  012C34                     __end_of_buck_remote_set_on:
 39509                           	opt stack 0
 39510                           tosu	equ	0xFFF
 39511                           tosh	equ	0xFFE
 39512                           tosl	equ	0xFFD
 39513                           pclath	equ	0xFFA
 39514                           tblptru	equ	0xFF8
 39515                           tblptrh	equ	0xFF7
 39516                           tblptrl	equ	0xFF6
 39517                           tablat	equ	0xFF5
 39518                           prodh	equ	0xFF4
 39519                           prodl	equ	0xFF3
 39520                           intcon	equ	0xFF2
 39521                           intcon2	equ	0xFF1
 39522                           intcon3	equ	0xFF0
 39523                           postinc0	equ	0xFEE
 39524                           wreg	equ	0xFE8
 39525                           indf1	equ	0xFE7
 39526                           postinc1	equ	0xFE6
 39527                           postdec1	equ	0xFE5
 39528                           plusw1	equ	0xFE3
 39529                           fsr1h	equ	0xFE2
 39530                           fsr1l	equ	0xFE1
 39531                           indf2	equ	0xFDF
 39532                           postinc2	equ	0xFDE
 39533                           postdec2	equ	0xFDD
 39534                           plusw2	equ	0xFDB
 39535                           fsr2h	equ	0xFDA
 39536                           fsr2l	equ	0xFD9
 39537                           status	equ	0xFD8
 39538                           
 39539 ;; *************** function _buck_remote_set_enable *****************
 39540 ;; Defined at:
 39541 ;;		line 605 in file "buck.c"
 39542 ;; Parameters:    Size  Location     Type
 39543 ;;  remote          1    wreg     unsigned char 
 39544 ;; Auto vars:     Size  Location     Type
 39545 ;;  remote          1    0[BANK0 ] unsigned char 
 39546 ;; Return value:  Size  Location     Type
 39547 ;;                  1    wreg      void 
 39548 ;; Registers used:
 39549 ;;		wreg, status,2
 39550 ;; Tracked objects:
 39551 ;;		On entry : 0/0
 39552 ;;		On exit  : 0/0
 39553 ;;		Unchanged: 0/0
 39554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39559 ;;Total ram usage:        1 bytes
 39560 ;; Hardware stack levels used:    1
 39561 ;; Hardware stack levels required when called:   10
 39562 ;; This function calls:
 39563 ;;		Nothing
 39564 ;; This function is called by:
 39565 ;;		__parse_command_long
 39566 ;; This function uses a non-reentrant model
 39567 ;;
 39568                           
 39569                           	psect	text188
 39570  012ABE                     __ptext188:
 39571                           	opt stack 0
 39572  012ABE                     _buck_remote_set_enable:
 39573                           	opt stack 18
 39574                           
 39575                           ; BSR set to: 0
 39576                           ;incstack = 0
 39577                           ;buck_remote_set_enable@remote stored from wreg
 39578  012ABE  0100               	movlb	0	; () banked
 39579  012AC0  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 39580                           
 39581                           ;buck.c: 607: if(remote)
 39582  012AC2  0100               	movlb	0	; () banked
 39583  012AC4  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 39584  012AC6  B4D8               	btfsc	status,2,c
 39585  012AC8  D004               	goto	l2603
 39586                           
 39587                           ; BSR set to: 0
 39588                           ;buck.c: 608: buck_remote_enable = 1;
 39589  012ACA  0E01               	movlw	1
 39590  012ACC  0101               	movlb	1	; () banked
 39591  012ACE  6FED               	movwf	_buck_remote_enable& (0+255),b
 39592  012AD0  0012               	return	
 39593  012AD2                     l2603:
 39594                           
 39595                           ;buck.c: 609: else
 39596                           ;buck.c: 610: buck_remote_enable = 0;
 39597                           
 39598                           ; BSR set to: 1
 39599  012AD2  0E00               	movlw	0
 39600  012AD4  0101               	movlb	1	; () banked
 39601  012AD6  6FED               	movwf	_buck_remote_enable& (0+255),b
 39602  012AD8  0012               	return	
 39603  012ADA                     __end_of_buck_remote_set_enable:
 39604                           	opt stack 0
 39605                           tosu	equ	0xFFF
 39606                           tosh	equ	0xFFE
 39607                           tosl	equ	0xFFD
 39608                           pclath	equ	0xFFA
 39609                           tblptru	equ	0xFF8
 39610                           tblptrh	equ	0xFF7
 39611                           tblptrl	equ	0xFF6
 39612                           tablat	equ	0xFF5
 39613                           prodh	equ	0xFF4
 39614                           prodl	equ	0xFF3
 39615                           intcon	equ	0xFF2
 39616                           intcon2	equ	0xFF1
 39617                           intcon3	equ	0xFF0
 39618                           postinc0	equ	0xFEE
 39619                           wreg	equ	0xFE8
 39620                           indf1	equ	0xFE7
 39621                           postinc1	equ	0xFE6
 39622                           postdec1	equ	0xFE5
 39623                           plusw1	equ	0xFE3
 39624                           fsr1h	equ	0xFE2
 39625                           fsr1l	equ	0xFE1
 39626                           indf2	equ	0xFDF
 39627                           postinc2	equ	0xFDE
 39628                           postdec2	equ	0xFDD
 39629                           plusw2	equ	0xFDB
 39630                           fsr2h	equ	0xFDA
 39631                           fsr2l	equ	0xFD9
 39632                           status	equ	0xFD8
 39633                           
 39634 ;; *************** function _buck_remote_set_dutycycle *****************
 39635 ;; Defined at:
 39636 ;;		line 629 in file "buck.c"
 39637 ;; Parameters:    Size  Location     Type
 39638 ;;  dutycycle       1    wreg     unsigned char 
 39639 ;; Auto vars:     Size  Location     Type
 39640 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 39641 ;; Return value:  Size  Location     Type
 39642 ;;                  1    wreg      void 
 39643 ;; Registers used:
 39644 ;;		wreg, status,2, status,0
 39645 ;; Tracked objects:
 39646 ;;		On entry : 0/0
 39647 ;;		On exit  : 0/0
 39648 ;;		Unchanged: 0/0
 39649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39653 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39654 ;;Total ram usage:        1 bytes
 39655 ;; Hardware stack levels used:    1
 39656 ;; Hardware stack levels required when called:   10
 39657 ;; This function calls:
 39658 ;;		Nothing
 39659 ;; This function is called by:
 39660 ;;		__parse_command_long
 39661 ;; This function uses a non-reentrant model
 39662 ;;
 39663                           
 39664                           	psect	text189
 39665  012888                     __ptext189:
 39666                           	opt stack 0
 39667  012888                     _buck_remote_set_dutycycle:
 39668                           	opt stack 18
 39669                           
 39670                           ; BSR set to: 1
 39671                           ;incstack = 0
 39672                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 39673  012888  0100               	movlb	0	; () banked
 39674  01288A  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39675                           
 39676                           ;buck.c: 631: if(dutycycle>242)
 39677  01288C  0EF2               	movlw	242
 39678  01288E  0100               	movlb	0	; () banked
 39679  012890  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39680  012892  D003               	goto	l2618
 39681                           
 39682                           ; BSR set to: 0
 39683                           ;buck.c: 632: buck_remote_dutycycle = 242;
 39684  012894  0EF2               	movlw	242
 39685  012896  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 39686  012898  0012               	return	
 39687  01289A                     l2618:
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;buck.c: 633: else if(dutycycle<40)
 39691                           
 39692                           ; BSR set to: 0
 39693  01289A  0E28               	movlw	40
 39694  01289C  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39695  01289E  D003               	goto	l2620
 39696                           
 39697                           ; BSR set to: 0
 39698                           ;buck.c: 634: buck_remote_dutycycle = 40;
 39699  0128A0  0E28               	movlw	40
 39700  0128A2  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 39701  0128A4  0012               	return	
 39702  0128A6                     l2620:
 39703                           
 39704                           ; BSR set to: 0
 39705                           ;buck.c: 635: else
 39706                           ;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 39707  0128A6  C060  F0FD         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 39708                           
 39709                           ; BSR set to: 0
 39710  0128AA  0012               	return	
 39711  0128AC                     __end_of_buck_remote_set_dutycycle:
 39712                           	opt stack 0
 39713                           tosu	equ	0xFFF
 39714                           tosh	equ	0xFFE
 39715                           tosl	equ	0xFFD
 39716                           pclath	equ	0xFFA
 39717                           tblptru	equ	0xFF8
 39718                           tblptrh	equ	0xFF7
 39719                           tblptrl	equ	0xFF6
 39720                           tablat	equ	0xFF5
 39721                           prodh	equ	0xFF4
 39722                           prodl	equ	0xFF3
 39723                           intcon	equ	0xFF2
 39724                           intcon2	equ	0xFF1
 39725                           intcon3	equ	0xFF0
 39726                           postinc0	equ	0xFEE
 39727                           wreg	equ	0xFE8
 39728                           indf1	equ	0xFE7
 39729                           postinc1	equ	0xFE6
 39730                           postdec1	equ	0xFE5
 39731                           plusw1	equ	0xFE3
 39732                           fsr1h	equ	0xFE2
 39733                           fsr1l	equ	0xFE1
 39734                           indf2	equ	0xFDF
 39735                           postinc2	equ	0xFDE
 39736                           postdec2	equ	0xFDD
 39737                           plusw2	equ	0xFDB
 39738                           fsr2h	equ	0xFDA
 39739                           fsr2l	equ	0xFD9
 39740                           status	equ	0xFD8
 39741                           
 39742 ;; *************** function _buck_remote_change_dutycycle *****************
 39743 ;; Defined at:
 39744 ;;		line 639 in file "buck.c"
 39745 ;; Parameters:    Size  Location     Type
 39746 ;;  change          1    wreg     char 
 39747 ;; Auto vars:     Size  Location     Type
 39748 ;;  change          1    0[BANK0 ] char 
 39749 ;;  new_dutycycl    2    1[BANK0 ] int 
 39750 ;; Return value:  Size  Location     Type
 39751 ;;                  1    wreg      void 
 39752 ;; Registers used:
 39753 ;;		wreg, status,2, status,0
 39754 ;; Tracked objects:
 39755 ;;		On entry : 0/0
 39756 ;;		On exit  : 0/0
 39757 ;;		Unchanged: 0/0
 39758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39760 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39762 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39763 ;;Total ram usage:        3 bytes
 39764 ;; Hardware stack levels used:    1
 39765 ;; Hardware stack levels required when called:   10
 39766 ;; This function calls:
 39767 ;;		Nothing
 39768 ;; This function is called by:
 39769 ;;		__parse_command_long
 39770 ;; This function uses a non-reentrant model
 39771 ;;
 39772                           
 39773                           	psect	text190
 39774  012020                     __ptext190:
 39775                           	opt stack 0
 39776  012020                     _buck_remote_change_dutycycle:
 39777                           	opt stack 18
 39778                           
 39779                           ; BSR set to: 0
 39780                           ;incstack = 0
 39781                           ;buck_remote_change_dutycycle@change stored from wreg
 39782  012020  0100               	movlb	0	; () banked
 39783  012022  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 39784                           
 39785                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 39786  012024  0100               	movlb	0	; () banked
 39787  012026  51FE               	movf	_buck_dutycycle& (0+255),w,b
 39788  012028  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 39789  01202A  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 39790  01202C  6AE8               	clrf	wreg,c
 39791  01202E  B0D8               	btfsc	status,0,c
 39792  012030  2AE8               	incf	wreg,f,c
 39793  012032  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 39794  012034  06E8               	decf	wreg,f,c
 39795  012036  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 39796                           
 39797                           ;buck.c: 642: if(new_dutycycle>242)
 39798  012038  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 39799  01203A  D009               	goto	l2625
 39800  01203C  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 39801  01203E  E104               	bnz	u11200
 39802  012040  0EF3               	movlw	243
 39803  012042  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 39804  012044  A0D8               	btfss	status,0,c
 39805  012046  D003               	goto	l2625
 39806  012048                     u11200:
 39807                           
 39808                           ; BSR set to: 0
 39809                           ;buck.c: 643: buck_remote_dutycycle = 242;
 39810  012048  0EF2               	movlw	242
 39811  01204A  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 39812  01204C  0012               	return	
 39813  01204E                     l2625:
 39814                           
 39815                           ; BSR set to: 0
 39816                           ;buck.c: 644: else if(new_dutycycle<40)
 39817                           
 39818                           ; BSR set to: 0
 39819  01204E  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 39820  012050  D006               	goto	u11210
 39821  012052  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 39822  012054  E107               	bnz	l2627
 39823  012056  0E28               	movlw	40
 39824  012058  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 39825  01205A  B0D8               	btfsc	status,0,c
 39826  01205C  D003               	goto	l2627
 39827  01205E                     u11210:
 39828                           
 39829                           ; BSR set to: 0
 39830                           ;buck.c: 645: buck_remote_dutycycle = 40;
 39831  01205E  0E28               	movlw	40
 39832  012060  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 39833  012062  0012               	return	
 39834  012064                     l2627:
 39835                           
 39836                           ; BSR set to: 0
 39837                           ;buck.c: 646: else
 39838                           ;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 39839  012064  C061  F0FD         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 39840                           
 39841                           ; BSR set to: 0
 39842  012068  0012               	return	
 39843  01206A                     __end_of_buck_remote_change_dutycycle:
 39844                           	opt stack 0
 39845                           tosu	equ	0xFFF
 39846                           tosh	equ	0xFFE
 39847                           tosl	equ	0xFFD
 39848                           pclath	equ	0xFFA
 39849                           tblptru	equ	0xFF8
 39850                           tblptrh	equ	0xFF7
 39851                           tblptrl	equ	0xFF6
 39852                           tablat	equ	0xFF5
 39853                           prodh	equ	0xFF4
 39854                           prodl	equ	0xFF3
 39855                           intcon	equ	0xFF2
 39856                           intcon2	equ	0xFF1
 39857                           intcon3	equ	0xFF0
 39858                           postinc0	equ	0xFEE
 39859                           wreg	equ	0xFE8
 39860                           indf1	equ	0xFE7
 39861                           postinc1	equ	0xFE6
 39862                           postdec1	equ	0xFE5
 39863                           plusw1	equ	0xFE3
 39864                           fsr1h	equ	0xFE2
 39865                           fsr1l	equ	0xFE1
 39866                           indf2	equ	0xFDF
 39867                           postinc2	equ	0xFDE
 39868                           postdec2	equ	0xFDD
 39869                           plusw2	equ	0xFDB
 39870                           fsr2h	equ	0xFDA
 39871                           fsr2l	equ	0xFD9
 39872                           status	equ	0xFD8
 39873                           
 39874 ;; *************** function __parse_command_calibration *****************
 39875 ;; Defined at:
 39876 ;;		line 505 in file "app_device_custom_hid.c"
 39877 ;; Parameters:    Size  Location     Type
 39878 ;;  cmd             1    wreg     unsigned char 
 39879 ;;  item            1    3[BANK0 ] unsigned char 
 39880 ;;  dat1            1    4[BANK0 ] unsigned char 
 39881 ;;  dat2            1    5[BANK0 ] unsigned char 
 39882 ;;  dat3            1    6[BANK0 ] unsigned char 
 39883 ;; Auto vars:     Size  Location     Type
 39884 ;;  cmd             1    0[COMRAM] unsigned char 
 39885 ;;  parameter       2    9[BANK0 ] int 
 39886 ;; Return value:  Size  Location     Type
 39887 ;;                  1    wreg      void 
 39888 ;; Registers used:
 39889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39890 ;; Tracked objects:
 39891 ;;		On entry : 0/0
 39892 ;;		On exit  : 0/0
 39893 ;;		Unchanged: 0/0
 39894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39895 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39897 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39899 ;;Total ram usage:        8 bytes
 39900 ;; Hardware stack levels used:    1
 39901 ;; Hardware stack levels required when called:   11
 39902 ;; This function calls:
 39903 ;;		_schedule_eeprom_write_task
 39904 ;; This function is called by:
 39905 ;;		_APP_DeviceCustomHIDTasks
 39906 ;; This function uses a non-reentrant model
 39907 ;;
 39908                           
 39909                           	psect	text191
 39910  00DDE6                     __ptext191:
 39911                           	opt stack 0
 39912  00DDE6                     __parse_command_calibration:
 39913                           	opt stack 18
 39914                           
 39915                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 39916                           
 39917                           ; BSR set to: 0
 39918                           ;incstack = 0
 39919  00DDE6  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 39920  00DDEA  0100               	movlb	0	; () banked
 39921  00DDEC  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 39922                           
 39923                           ; BSR set to: 0
 39924                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 39925  00DDEE  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 39926  00DDF0  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 39927  00DDF2  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 39928                           
 39929                           ; BSR set to: 0
 39930                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 39931  00DDF4  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 39932  00DDF6  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 39933                           
 39934                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 39935  00DDF8  D03F               	goto	l1184
 39936  00DDFA                     
 39937                           ; BSR set to: 0
 39938                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 39939                           
 39940                           ; BSR set to: 0
 39941  00DDFA  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39942  00DDFE  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39943  00DE00  0E0F               	movlw	15
 39944  00DE02  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39945  00DE04  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39946  00DE06  0D0C               	mullw	12
 39947  00DE08  0E05               	movlw	5
 39948  00DE0A  26F3               	addwf	prodl,f,c
 39949  00DE0C  0E00               	movlw	0
 39950  00DE0E  22F4               	addwfc	prodh,f,c
 39951  00DE10  0E00               	movlw	low _calibrationParameters
 39952  00DE12  24F3               	addwf	prodl,w,c
 39953  00DE14  6ED9               	movwf	fsr2l,c
 39954  00DE16  0E03               	movlw	high _calibrationParameters
 39955  00DE18  20F4               	addwfc	prodh,w,c
 39956  00DE1A  6EDA               	movwf	fsr2h,c
 39957  00DE1C  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 39958  00DE20  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 39959                           
 39960                           ;app_device_custom_hid.c: 516: break;
 39961  00DE24  D055               	goto	l1188
 39962  00DE26                     
 39963                           ; BSR set to: 0
 39964                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 39965                           
 39966                           ; BSR set to: 0
 39967  00DE26  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39968  00DE2A  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39969  00DE2C  0E0F               	movlw	15
 39970  00DE2E  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39971  00DE30  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39972  00DE32  0D0C               	mullw	12
 39973  00DE34  0E07               	movlw	7
 39974  00DE36  26F3               	addwf	prodl,f,c
 39975  00DE38  0E00               	movlw	0
 39976  00DE3A  22F4               	addwfc	prodh,f,c
 39977  00DE3C  0E00               	movlw	low _calibrationParameters
 39978  00DE3E  24F3               	addwf	prodl,w,c
 39979  00DE40  6ED9               	movwf	fsr2l,c
 39980  00DE42  0E03               	movlw	high _calibrationParameters
 39981  00DE44  20F4               	addwfc	prodh,w,c
 39982  00DE46  6EDA               	movwf	fsr2h,c
 39983  00DE48  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 39984  00DE4C  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 39985                           
 39986                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 39987  00DE50  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39988  00DE54  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39989  00DE56  0E0F               	movlw	15
 39990  00DE58  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39991  00DE5A  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39992  00DE5C  0D0C               	mullw	12
 39993  00DE5E  0E09               	movlw	9
 39994  00DE60  26F3               	addwf	prodl,f,c
 39995  00DE62  0E00               	movlw	0
 39996  00DE64  22F4               	addwfc	prodh,f,c
 39997  00DE66  0E00               	movlw	low _calibrationParameters
 39998  00DE68  24F3               	addwf	prodl,w,c
 39999  00DE6A  6ED9               	movwf	fsr2l,c
 40000  00DE6C  0E03               	movlw	high _calibrationParameters
 40001  00DE6E  20F4               	addwfc	prodh,w,c
 40002  00DE70  6EDA               	movwf	fsr2h,c
 40003  00DE72  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 40004                           
 40005                           ; BSR set to: 0
 40006                           ;app_device_custom_hid.c: 522: }
 40007                           
 40008                           ;app_device_custom_hid.c: 521: break;
 40009  00DE76  D02C               	goto	l1188
 40010  00DE78                     l1184:
 40011                           
 40012                           ; BSR set to: 0
 40013                           
 40014                           ; BSR set to: 0
 40015  00DE78  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 40016  00DE7A  0B0F               	andlw	15
 40017  00DE7C  6F67               	movwf	??__parse_command_calibration& (0+255),b
 40018  00DE7E  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 40019                           
 40020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40021                           ; Switch size 1, requested type "space"
 40022                           ; Number of cases is 1, Range of values is 0 to 0
 40023                           ; switch strategies available:
 40024                           ; Name         Instructions Cycles
 40025                           ; simple_byte            4     3 (average)
 40026                           ;	Chosen strategy is simple_byte
 40027  00DE80  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 40028  00DE82  0A00               	xorlw	0	; case 0
 40029  00DE84  A4D8               	btfss	status,2,c
 40030  00DE86  D024               	goto	l1188
 40031                           
 40032                           ; BSR set to: 0
 40033                           ; Switch size 1, requested type "space"
 40034                           ; Number of cases is 2, Range of values is 0 to 1
 40035                           ; switch strategies available:
 40036                           ; Name         Instructions Cycles
 40037                           ; simple_byte            7     4 (average)
 40038                           ;	Chosen strategy is simple_byte
 40039  00DE88  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40040  00DE8A  0A00               	xorlw	0	; case 0
 40041  00DE8C  B4D8               	btfsc	status,2,c
 40042  00DE8E  D7B5               	goto	l1185
 40043  00DE90  0A01               	xorlw	1	; case 1
 40044  00DE92  B4D8               	btfsc	status,2,c
 40045  00DE94  D7C8               	goto	l1187
 40046                           
 40047                           ; BSR set to: 0
 40048                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 40049  00DE96  D01C               	goto	l1188
 40050  00DE98                     
 40051                           ; BSR set to: 0
 40052                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 40053                           
 40054                           ; BSR set to: 0
 40055  00DE98  0E02               	movlw	2
 40056  00DE9A  ECDC  F08E         	call	_schedule_eeprom_write_task
 40057                           
 40058                           ;app_device_custom_hid.c: 528: break;
 40059  00DE9E  0012               	return	
 40060  00DEA0                     
 40061                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 40062  00DEA0  0E03               	movlw	3
 40063  00DEA2  ECDC  F08E         	call	_schedule_eeprom_write_task
 40064                           
 40065                           ;app_device_custom_hid.c: 531: break;
 40066  00DEA6  0012               	return	
 40067  00DEA8                     
 40068                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 40069  00DEA8  0E04               	movlw	4
 40070  00DEAA  ECDC  F08E         	call	_schedule_eeprom_write_task
 40071                           
 40072                           ;app_device_custom_hid.c: 534: break;
 40073  00DEAE  0012               	return	
 40074  00DEB0                     
 40075                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 40076  00DEB0  0E05               	movlw	5
 40077  00DEB2  ECDC  F08E         	call	_schedule_eeprom_write_task
 40078                           
 40079                           ;app_device_custom_hid.c: 537: break;
 40080  00DEB6  0012               	return	
 40081  00DEB8                     
 40082                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 40083  00DEB8  0E06               	movlw	6
 40084  00DEBA  ECDC  F08E         	call	_schedule_eeprom_write_task
 40085                           
 40086                           ;app_device_custom_hid.c: 540: break;
 40087  00DEBE  0012               	return	
 40088  00DEC0                     
 40089                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 40090  00DEC0  0E07               	movlw	7
 40091  00DEC2  ECDC  F08E         	call	_schedule_eeprom_write_task
 40092                           
 40093                           ;app_device_custom_hid.c: 543: break;
 40094  00DEC6  0012               	return	
 40095  00DEC8                     
 40096                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 40097  00DEC8  0E08               	movlw	8
 40098  00DECA  ECDC  F08E         	call	_schedule_eeprom_write_task
 40099                           
 40100                           ;app_device_custom_hid.c: 547: }
 40101                           
 40102                           ;app_device_custom_hid.c: 546: break;
 40103  00DECE  0012               	return	
 40104  00DED0                     l1188:
 40105  00DED0  0100               	movlb	0	; () banked
 40106  00DED2  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 40107  00DED4  0B0F               	andlw	15
 40108  00DED6  6F67               	movwf	??__parse_command_calibration& (0+255),b
 40109  00DED8  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 40110                           
 40111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40112                           ; Switch size 1, requested type "space"
 40113                           ; Number of cases is 1, Range of values is 0 to 0
 40114                           ; switch strategies available:
 40115                           ; Name         Instructions Cycles
 40116                           ; simple_byte            4     3 (average)
 40117                           ;	Chosen strategy is simple_byte
 40118  00DEDA  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 40119  00DEDC  0A00               	xorlw	0	; case 0
 40120  00DEDE  A4D8               	btfss	status,2,c
 40121  00DEE0  0012               	return	
 40122                           
 40123                           ; BSR set to: 0
 40124                           ; Switch size 1, requested type "space"
 40125                           ; Number of cases is 7, Range of values is 0 to 6
 40126                           ; switch strategies available:
 40127                           ; Name         Instructions Cycles
 40128                           ; simple_byte           22    12 (average)
 40129                           ;	Chosen strategy is simple_byte
 40130  00DEE2  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40131  00DEE4  0A00               	xorlw	0	; case 0
 40132  00DEE6  B4D8               	btfsc	status,2,c
 40133  00DEE8  D7D7               	goto	l1189
 40134  00DEEA  0A01               	xorlw	1	; case 1
 40135  00DEEC  B4D8               	btfsc	status,2,c
 40136  00DEEE  D7D8               	goto	l1191
 40137  00DEF0  0A03               	xorlw	3	; case 2
 40138  00DEF2  B4D8               	btfsc	status,2,c
 40139  00DEF4  D7D9               	goto	l1192
 40140  00DEF6  0A01               	xorlw	1	; case 3
 40141  00DEF8  B4D8               	btfsc	status,2,c
 40142  00DEFA  D7DA               	goto	l1193
 40143  00DEFC  0A07               	xorlw	7	; case 4
 40144  00DEFE  B4D8               	btfsc	status,2,c
 40145  00DF00  D7DB               	goto	l1194
 40146  00DF02  0A01               	xorlw	1	; case 5
 40147  00DF04  B4D8               	btfsc	status,2,c
 40148  00DF06  D7DC               	goto	l1195
 40149  00DF08  0A03               	xorlw	3	; case 6
 40150  00DF0A  A4D8               	btfss	status,2,c
 40151  00DF0C  0012               	return	
 40152  00DF0E  D7DC               	goto	l1196
 40153  00DF10                     __end_of__parse_command_calibration:
 40154                           	opt stack 0
 40155                           tosu	equ	0xFFF
 40156                           tosh	equ	0xFFE
 40157                           tosl	equ	0xFFD
 40158                           pclath	equ	0xFFA
 40159                           tblptru	equ	0xFF8
 40160                           tblptrh	equ	0xFF7
 40161                           tblptrl	equ	0xFF6
 40162                           tablat	equ	0xFF5
 40163                           prodh	equ	0xFF4
 40164                           prodl	equ	0xFF3
 40165                           intcon	equ	0xFF2
 40166                           intcon2	equ	0xFF1
 40167                           intcon3	equ	0xFF0
 40168                           postinc0	equ	0xFEE
 40169                           wreg	equ	0xFE8
 40170                           indf1	equ	0xFE7
 40171                           postinc1	equ	0xFE6
 40172                           postdec1	equ	0xFE5
 40173                           plusw1	equ	0xFE3
 40174                           fsr1h	equ	0xFE2
 40175                           fsr1l	equ	0xFE1
 40176                           indf2	equ	0xFDF
 40177                           postinc2	equ	0xFDE
 40178                           postdec2	equ	0xFDD
 40179                           plusw2	equ	0xFDB
 40180                           fsr2h	equ	0xFDA
 40181                           fsr2l	equ	0xFD9
 40182                           status	equ	0xFD8
 40183                           
 40184 ;; *************** function _schedule_eeprom_write_task *****************
 40185 ;; Defined at:
 40186 ;;		line 741 in file "i2c.c"
 40187 ;; Parameters:    Size  Location     Type
 40188 ;;  task            1    wreg     enum E8258
 40189 ;; Auto vars:     Size  Location     Type
 40190 ;;  task            1    1[BANK0 ] enum E8258
 40191 ;;  idx             1    2[BANK0 ] unsigned char 
 40192 ;; Return value:  Size  Location     Type
 40193 ;;                  1    wreg      void 
 40194 ;; Registers used:
 40195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40196 ;; Tracked objects:
 40197 ;;		On entry : 0/0
 40198 ;;		On exit  : 0/0
 40199 ;;		Unchanged: 0/0
 40200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40204 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40205 ;;Total ram usage:        3 bytes
 40206 ;; Hardware stack levels used:    1
 40207 ;; Hardware stack levels required when called:   10
 40208 ;; This function calls:
 40209 ;;		Nothing
 40210 ;; This function is called by:
 40211 ;;		__parse_command_calibration
 40212 ;;		_i2c_eeprom_read_calibration
 40213 ;; This function uses a non-reentrant model
 40214 ;;
 40215                           
 40216                           	psect	text192
 40217  011DB8                     __ptext192:
 40218                           	opt stack 0
 40219  011DB8                     _schedule_eeprom_write_task:
 40220                           	opt stack 18
 40221                           
 40222                           ;incstack = 0
 40223                           ;schedule_eeprom_write_task@task stored from wreg
 40224  011DB8  0100               	movlb	0	; () banked
 40225  011DBA  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 40226                           
 40227                           ;i2c.c: 743: uint8_t idx;
 40228                           ;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 40229  011DBC  C050  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 40230  011DC0  D010               	goto	l1660
 40231  011DC2                     
 40232                           ;i2c.c: 746: {
 40233                           ;i2c.c: 747: if (task_list[idx] == task)
 40234  011DC2  0100               	movlb	0	; () banked
 40235  011DC4  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 40236  011DC6  0D01               	mullw	1
 40237  011DC8  0E68               	movlw	low _task_list
 40238  011DCA  24F3               	addwf	prodl,w,c
 40239  011DCC  6ED9               	movwf	fsr2l,c
 40240  011DCE  0E04               	movlw	high _task_list
 40241  011DD0  20F4               	addwfc	prodh,w,c
 40242  011DD2  6EDA               	movwf	fsr2h,c
 40243  011DD4  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 40244  011DD6  18DE               	xorwf	postinc2,w,c
 40245  011DD8  B4D8               	btfsc	status,2,c
 40246  011DDA  0012               	return	
 40247                           
 40248                           ; BSR set to: 0
 40249                           
 40250                           ; BSR set to: 0
 40251                           
 40252                           ; BSR set to: 0
 40253                           ;i2c.c: 748: {
 40254                           ;i2c.c: 750: return;
 40255  011DDC  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 40256  011DDE  0B0F               	andlw	15
 40257  011DE0  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 40258  011DE2                     l1660:
 40259  011DE2  504F               	movf	_task_list_write_index,w,c
 40260  011DE4  0100               	movlb	0	; () banked
 40261  011DE6  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 40262  011DE8  A4D8               	btfss	status,2,c
 40263  011DEA  D7EB               	goto	l1661
 40264                           
 40265                           ; BSR set to: 0
 40266                           ;i2c.c: 751: }
 40267                           ;i2c.c: 752: }
 40268                           ;i2c.c: 754: task_list[task_list_write_index] = task;
 40269                           
 40270                           ; BSR set to: 0
 40271  011DEC  504F               	movf	_task_list_write_index,w,c
 40272  011DEE  0D01               	mullw	1
 40273  011DF0  0E68               	movlw	low _task_list
 40274  011DF2  24F3               	addwf	prodl,w,c
 40275  011DF4  6ED9               	movwf	fsr2l,c
 40276  011DF6  0E04               	movlw	high _task_list
 40277  011DF8  20F4               	addwfc	prodh,w,c
 40278  011DFA  6EDA               	movwf	fsr2h,c
 40279  011DFC  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 40280                           
 40281                           ; BSR set to: 0
 40282                           ;i2c.c: 755: ++task_list_write_index;
 40283  011E00  2A4F               	incf	_task_list_write_index,f,c
 40284                           
 40285                           ; BSR set to: 0
 40286                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 40287  011E02  0E0F               	movlw	15
 40288  011E04  164F               	andwf	_task_list_write_index,f,c
 40289                           
 40290                           ; BSR set to: 0
 40291  011E06  0012               	return		;funcret
 40292  011E08                     __end_of_schedule_eeprom_write_task:
 40293                           	opt stack 0
 40294                           tosu	equ	0xFFF
 40295                           tosh	equ	0xFFE
 40296                           tosl	equ	0xFFD
 40297                           pclath	equ	0xFFA
 40298                           tblptru	equ	0xFF8
 40299                           tblptrh	equ	0xFF7
 40300                           tblptrl	equ	0xFF6
 40301                           tablat	equ	0xFF5
 40302                           prodh	equ	0xFF4
 40303                           prodl	equ	0xFF3
 40304                           intcon	equ	0xFF2
 40305                           intcon2	equ	0xFF1
 40306                           intcon3	equ	0xFF0
 40307                           postinc0	equ	0xFEE
 40308                           wreg	equ	0xFE8
 40309                           indf1	equ	0xFE7
 40310                           postinc1	equ	0xFE6
 40311                           postdec1	equ	0xFE5
 40312                           plusw1	equ	0xFE3
 40313                           fsr1h	equ	0xFE2
 40314                           fsr1l	equ	0xFE1
 40315                           indf2	equ	0xFDF
 40316                           postinc2	equ	0xFDE
 40317                           postdec2	equ	0xFDD
 40318                           plusw2	equ	0xFDB
 40319                           fsr2h	equ	0xFDA
 40320                           fsr2l	equ	0xFD9
 40321                           status	equ	0xFD8
 40322                           
 40323 ;; *************** function __fill_buffer_get_status *****************
 40324 ;; Defined at:
 40325 ;;		line 269 in file "app_device_custom_hid.c"
 40326 ;; Parameters:    Size  Location     Type
 40327 ;;		None
 40328 ;; Auto vars:     Size  Location     Type
 40329 ;;		None
 40330 ;; Return value:  Size  Location     Type
 40331 ;;                  1    wreg      void 
 40332 ;; Registers used:
 40333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40334 ;; Tracked objects:
 40335 ;;		On entry : 0/0
 40336 ;;		On exit  : 0/0
 40337 ;;		Unchanged: 0/0
 40338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40342 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40343 ;;Total ram usage:        4 bytes
 40344 ;; Hardware stack levels used:    1
 40345 ;; Hardware stack levels required when called:   11
 40346 ;; This function calls:
 40347 ;;		_buck_get_dutycycle
 40348 ;;		_buck_get_mode
 40349 ;;		_buck_remote_get_dutycycle
 40350 ;;		_buck_remote_get_status
 40351 ;;		_rtcc_get_day
 40352 ;;		_rtcc_get_hours
 40353 ;;		_rtcc_get_minutes
 40354 ;;		_rtcc_get_month
 40355 ;;		_rtcc_get_seconds
 40356 ;;		_rtcc_get_year
 40357 ;;		_ui_get_status
 40358 ;; This function is called by:
 40359 ;;		_APP_DeviceCustomHIDTasks
 40360 ;; This function uses a non-reentrant model
 40361 ;;
 40362                           
 40363                           	psect	text193
 40364  00C282                     __ptext193:
 40365                           	opt stack 0
 40366  00C282                     __fill_buffer_get_status:
 40367                           	opt stack 18
 40368                           
 40369                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 40370                           
 40371                           ; BSR set to: 0
 40372                           ;incstack = 0
 40373  00C282  0E10               	movlw	16
 40374  00C284  0103               	movlb	3	; () banked
 40375  00C286  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 40376                           
 40377                           ; BSR set to: 3
 40378                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 40379  00C288  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 40380                           
 40381                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 40382  00C28C  0102               	movlb	2	; () banked
 40383  00C28E  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 40384  00C290  0103               	movlb	3	; () banked
 40385  00C292  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 40386                           
 40387                           ; BSR set to: 3
 40388                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 40389  00C294  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 40390                           
 40391                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 40392  00C298  0102               	movlb	2	; () banked
 40393  00C29A  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 40394  00C29C  0103               	movlb	3	; () banked
 40395  00C29E  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 40396                           
 40397                           ; BSR set to: 3
 40398                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 40399  00C2A0  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 40400                           
 40401                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 40402  00C2A4  0102               	movlb	2	; () banked
 40403  00C2A6  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 40404  00C2A8  0103               	movlb	3	; () banked
 40405  00C2AA  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 40406                           
 40407                           ; BSR set to: 3
 40408                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 40409  00C2AC  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 40410                           
 40411                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 40412  00C2B0  0102               	movlb	2	; () banked
 40413  00C2B2  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 40414  00C2B4  0103               	movlb	3	; () banked
 40415  00C2B6  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 40416                           
 40417                           ; BSR set to: 3
 40418                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 40419  00C2B8  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 40420                           
 40421                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 40422  00C2BC  0102               	movlb	2	; () banked
 40423  00C2BE  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 40424  00C2C0  0103               	movlb	3	; () banked
 40425  00C2C2  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 40426                           
 40427                           ; BSR set to: 3
 40428                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 40429  00C2C4  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 40430                           
 40431                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 40432  00C2C8  0102               	movlb	2	; () banked
 40433  00C2CA  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 40434  00C2CC  0103               	movlb	3	; () banked
 40435  00C2CE  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 40436                           
 40437                           ; BSR set to: 3
 40438                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 40439  00C2D0  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 40440                           
 40441                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 40442  00C2D4  0102               	movlb	2	; () banked
 40443  00C2D6  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 40444  00C2D8  0103               	movlb	3	; () banked
 40445  00C2DA  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 40446                           
 40447                           ; BSR set to: 3
 40448                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 40449  00C2DC  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 40450                           
 40451                           ; BSR set to: 3
 40452                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 40453  00C2E0  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 40454                           
 40455                           ; BSR set to: 3
 40456                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 40457  00C2E4  EC9D  F096         	call	_rtcc_get_year	;wreg free
 40458  00C2E8  0103               	movlb	3	; () banked
 40459  00C2EA  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 40460                           
 40461                           ; BSR set to: 3
 40462                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 40463  00C2EC  ECAB  F096         	call	_rtcc_get_month	;wreg free
 40464  00C2F0  0103               	movlb	3	; () banked
 40465  00C2F2  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 40466                           
 40467                           ; BSR set to: 3
 40468                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 40469  00C2F4  ECC0  F096         	call	_rtcc_get_day	;wreg free
 40470  00C2F8  0103               	movlb	3	; () banked
 40471  00C2FA  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 40472                           
 40473                           ; BSR set to: 3
 40474                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 40475  00C2FC  ECB9  F096         	call	_rtcc_get_hours	;wreg free
 40476  00C300  0103               	movlb	3	; () banked
 40477  00C302  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 40478                           
 40479                           ; BSR set to: 3
 40480                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 40481  00C304  ECB2  F096         	call	_rtcc_get_minutes	;wreg free
 40482  00C308  0103               	movlb	3	; () banked
 40483  00C30A  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 40484                           
 40485                           ; BSR set to: 3
 40486                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 40487  00C30C  ECA4  F096         	call	_rtcc_get_seconds	;wreg free
 40488  00C310  0103               	movlb	3	; () banked
 40489  00C312  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 40490                           
 40491                           ; BSR set to: 3
 40492                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 40493  00C314  EC08  F097         	call	_buck_get_mode	;wreg free
 40494  00C318  0103               	movlb	3	; () banked
 40495  00C31A  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 40496                           
 40497                           ; BSR set to: 3
 40498                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 40499  00C31C  EC0B  F097         	call	_buck_get_dutycycle	;wreg free
 40500  00C320  0103               	movlb	3	; () banked
 40501  00C322  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 40502                           
 40503                           ; BSR set to: 3
 40504                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 40505  00C324  EC0B  F093         	call	_buck_remote_get_status	;wreg free
 40506  00C328  0103               	movlb	3	; () banked
 40507  00C32A  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 40508                           
 40509                           ; BSR set to: 3
 40510                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 40511  00C32C  EC05  F097         	call	_buck_remote_get_dutycycle	;wreg free
 40512  00C330  0103               	movlb	3	; () banked
 40513  00C332  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 40514                           
 40515                           ; BSR set to: 3
 40516                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 40517  00C334  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 40518                           
 40519                           ; BSR set to: 3
 40520                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 40521  00C338  0102               	movlb	2	; () banked
 40522  00C33A  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 40523  00C33C  0103               	movlb	3	; () banked
 40524  00C33E  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 40525                           
 40526                           ; BSR set to: 3
 40527                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 40528  00C340  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 40529                           
 40530                           ; BSR set to: 3
 40531                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 40532  00C344  0102               	movlb	2	; () banked
 40533  00C346  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 40534  00C348  0103               	movlb	3	; () banked
 40535  00C34A  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 40536                           
 40537                           ; BSR set to: 3
 40538                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 40539  00C34C  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 40540                           
 40541                           ; BSR set to: 3
 40542                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 40543  00C350  0102               	movlb	2	; () banked
 40544  00C352  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 40545  00C354  0103               	movlb	3	; () banked
 40546  00C356  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 40547                           
 40548                           ; BSR set to: 3
 40549                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 40550  00C358  0102               	movlb	2	; () banked
 40551  00C35A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40552  00C35C  0B0F               	andlw	15
 40553  00C35E  0B03               	andlw	3
 40554  00C360  0100               	movlb	0	; () banked
 40555  00C362  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40556  00C364  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40557  00C366  90D8               	bcf	status,0,c
 40558  00C368  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40559  00C36A  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40560  00C36C  0E0A               	movlw	low (_os+10)
 40561  00C36E  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40562  00C370  6ED9               	movwf	fsr2l,c
 40563  00C372  0E02               	movlw	high (_os+10)
 40564  00C374  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40565  00C376  6EDA               	movwf	fsr2h,c
 40566  00C378  50DF               	movf	indf2,w,c
 40567  00C37A  0103               	movlb	3	; () banked
 40568  00C37C  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 40569                           
 40570                           ; BSR set to: 3
 40571                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40572  00C37E  0102               	movlb	2	; () banked
 40573  00C380  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40574  00C382  0B0F               	andlw	15
 40575  00C384  0B03               	andlw	3
 40576  00C386  0100               	movlb	0	; () banked
 40577  00C388  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40578  00C38A  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40579  00C38C  90D8               	bcf	status,0,c
 40580  00C38E  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40581  00C390  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40582  00C392  0E0A               	movlw	low (_os+10)
 40583  00C394  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40584  00C396  6ED9               	movwf	fsr2l,c
 40585  00C398  0E02               	movlw	high (_os+10)
 40586  00C39A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40587  00C39C  6EDA               	movwf	fsr2h,c
 40588  00C39E  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40589  00C3A2  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40590  00C3A6  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40591  00C3AA  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40592  00C3AC  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40593  00C3AE  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40594  00C3B0  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40595  00C3B2  0103               	movlb	3	; () banked
 40596  00C3B4  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 40597                           
 40598                           ; BSR set to: 3
 40599                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40600  00C3B6  0102               	movlb	2	; () banked
 40601  00C3B8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40602  00C3BA  0B0F               	andlw	15
 40603  00C3BC  0B03               	andlw	3
 40604  00C3BE  0100               	movlb	0	; () banked
 40605  00C3C0  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40606  00C3C2  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40607  00C3C4  90D8               	bcf	status,0,c
 40608  00C3C6  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40609  00C3C8  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40610  00C3CA  0E1F               	movlw	low (_os+31)
 40611  00C3CC  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40612  00C3CE  6ED9               	movwf	fsr2l,c
 40613  00C3D0  0E02               	movlw	high (_os+31)
 40614  00C3D2  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40615  00C3D4  6EDA               	movwf	fsr2h,c
 40616  00C3D6  50DF               	movf	indf2,w,c
 40617  00C3D8  0103               	movlb	3	; () banked
 40618  00C3DA  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 40619                           
 40620                           ; BSR set to: 3
 40621                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 40622  00C3DC  0102               	movlb	2	; () banked
 40623  00C3DE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40624  00C3E0  0B0F               	andlw	15
 40625  00C3E2  0B03               	andlw	3
 40626  00C3E4  0100               	movlb	0	; () banked
 40627  00C3E6  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40628  00C3E8  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40629  00C3EA  90D8               	bcf	status,0,c
 40630  00C3EC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40631  00C3EE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40632  00C3F0  0E1F               	movlw	low (_os+31)
 40633  00C3F2  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40634  00C3F4  6ED9               	movwf	fsr2l,c
 40635  00C3F6  0E02               	movlw	high (_os+31)
 40636  00C3F8  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40637  00C3FA  6EDA               	movwf	fsr2h,c
 40638  00C3FC  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40639  00C400  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40640  00C404  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40641  00C408  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40642  00C40A  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40643  00C40C  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40644  00C40E  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40645  00C410  0103               	movlb	3	; () banked
 40646  00C412  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 40647                           
 40648                           ; BSR set to: 3
 40649                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 40650  00C414  0102               	movlb	2	; () banked
 40651  00C416  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40652  00C418  0B0F               	andlw	15
 40653  00C41A  0B03               	andlw	3
 40654  00C41C  0100               	movlb	0	; () banked
 40655  00C41E  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40656  00C420  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40657  00C422  90D8               	bcf	status,0,c
 40658  00C424  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40659  00C426  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40660  00C428  0E14               	movlw	low (_os+20)
 40661  00C42A  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40662  00C42C  6ED9               	movwf	fsr2l,c
 40663  00C42E  0E02               	movlw	high (_os+20)
 40664  00C430  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40665  00C432  6EDA               	movwf	fsr2h,c
 40666  00C434  50DF               	movf	indf2,w,c
 40667  00C436  0103               	movlb	3	; () banked
 40668  00C438  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 40669                           
 40670                           ; BSR set to: 3
 40671                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40672  00C43A  0102               	movlb	2	; () banked
 40673  00C43C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40674  00C43E  0B0F               	andlw	15
 40675  00C440  0B03               	andlw	3
 40676  00C442  0100               	movlb	0	; () banked
 40677  00C444  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40678  00C446  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40679  00C448  90D8               	bcf	status,0,c
 40680  00C44A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40681  00C44C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40682  00C44E  0E14               	movlw	low (_os+20)
 40683  00C450  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40684  00C452  6ED9               	movwf	fsr2l,c
 40685  00C454  0E02               	movlw	high (_os+20)
 40686  00C456  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40687  00C458  6EDA               	movwf	fsr2h,c
 40688  00C45A  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40689  00C45E  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40690  00C462  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40691  00C466  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40692  00C468  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40693  00C46A  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40694  00C46C  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40695  00C46E  0103               	movlb	3	; () banked
 40696  00C470  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 40697                           
 40698                           ; BSR set to: 3
 40699                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40700  00C472  0102               	movlb	2	; () banked
 40701  00C474  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40702  00C476  0B0F               	andlw	15
 40703  00C478  0B03               	andlw	3
 40704  00C47A  0100               	movlb	0	; () banked
 40705  00C47C  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40706  00C47E  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40707  00C480  90D8               	bcf	status,0,c
 40708  00C482  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40709  00C484  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40710  00C486  0E29               	movlw	low (_os+41)
 40711  00C488  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40712  00C48A  6ED9               	movwf	fsr2l,c
 40713  00C48C  0E02               	movlw	high (_os+41)
 40714  00C48E  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40715  00C490  6EDA               	movwf	fsr2h,c
 40716  00C492  50DF               	movf	indf2,w,c
 40717  00C494  0103               	movlb	3	; () banked
 40718  00C496  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 40719                           
 40720                           ; BSR set to: 3
 40721                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 40722  00C498  0102               	movlb	2	; () banked
 40723  00C49A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40724  00C49C  0B0F               	andlw	15
 40725  00C49E  0B03               	andlw	3
 40726  00C4A0  0100               	movlb	0	; () banked
 40727  00C4A2  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40728  00C4A4  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40729  00C4A6  90D8               	bcf	status,0,c
 40730  00C4A8  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40731  00C4AA  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40732  00C4AC  0E29               	movlw	low (_os+41)
 40733  00C4AE  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40734  00C4B0  6ED9               	movwf	fsr2l,c
 40735  00C4B2  0E02               	movlw	high (_os+41)
 40736  00C4B4  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40737  00C4B6  6EDA               	movwf	fsr2h,c
 40738  00C4B8  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40739  00C4BC  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40740  00C4C0  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40741  00C4C4  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40742  00C4C6  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40743  00C4C8  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40744  00C4CA  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40745  00C4CC  0103               	movlb	3	; () banked
 40746  00C4CE  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 40747                           
 40748                           ; BSR set to: 3
 40749                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 40750  00C4D0  EC02  F097         	call	_ui_get_status	;wreg free
 40751  00C4D4  0103               	movlb	3	; () banked
 40752  00C4D6  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 40753                           
 40754                           ; BSR set to: 3
 40755                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 40756  00C4D8  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 40757                           
 40758                           ; BSR set to: 3
 40759  00C4DC  0012               	return		;funcret
 40760  00C4DE                     __end_of__fill_buffer_get_status:
 40761                           	opt stack 0
 40762                           tosu	equ	0xFFF
 40763                           tosh	equ	0xFFE
 40764                           tosl	equ	0xFFD
 40765                           pclath	equ	0xFFA
 40766                           tblptru	equ	0xFF8
 40767                           tblptrh	equ	0xFF7
 40768                           tblptrl	equ	0xFF6
 40769                           tablat	equ	0xFF5
 40770                           prodh	equ	0xFF4
 40771                           prodl	equ	0xFF3
 40772                           intcon	equ	0xFF2
 40773                           intcon2	equ	0xFF1
 40774                           intcon3	equ	0xFF0
 40775                           postinc0	equ	0xFEE
 40776                           wreg	equ	0xFE8
 40777                           indf1	equ	0xFE7
 40778                           postinc1	equ	0xFE6
 40779                           postdec1	equ	0xFE5
 40780                           plusw1	equ	0xFE3
 40781                           fsr1h	equ	0xFE2
 40782                           fsr1l	equ	0xFE1
 40783                           indf2	equ	0xFDF
 40784                           postinc2	equ	0xFDE
 40785                           postdec2	equ	0xFDD
 40786                           plusw2	equ	0xFDB
 40787                           fsr2h	equ	0xFDA
 40788                           fsr2l	equ	0xFD9
 40789                           status	equ	0xFD8
 40790                           
 40791 ;; *************** function _ui_get_status *****************
 40792 ;; Defined at:
 40793 ;;		line 12 in file "ui.c"
 40794 ;; Parameters:    Size  Location     Type
 40795 ;;		None
 40796 ;; Auto vars:     Size  Location     Type
 40797 ;;		None
 40798 ;; Return value:  Size  Location     Type
 40799 ;;                  1    wreg      enum E9494
 40800 ;; Registers used:
 40801 ;;		wreg, status,2
 40802 ;; Tracked objects:
 40803 ;;		On entry : 0/0
 40804 ;;		On exit  : 0/0
 40805 ;;		Unchanged: 0/0
 40806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40811 ;;Total ram usage:        0 bytes
 40812 ;; Hardware stack levels used:    1
 40813 ;; Hardware stack levels required when called:   10
 40814 ;; This function calls:
 40815 ;;		Nothing
 40816 ;; This function is called by:
 40817 ;;		_main
 40818 ;;		__fill_buffer_get_status
 40819 ;; This function uses a non-reentrant model
 40820 ;;
 40821                           
 40822                           	psect	text194
 40823  012E04                     __ptext194:
 40824                           	opt stack 0
 40825  012E04                     _ui_get_status:
 40826                           	opt stack 20
 40827                           
 40828                           ;ui.c: 14: return userInterfaceStatus;
 40829                           
 40830                           ; BSR set to: 3
 40831                           ;incstack = 0
 40832  012E04  0101               	movlb	1	; () banked
 40833  012E06  51EF               	movf	_userInterfaceStatus& (0+255),w,b
 40834  012E08  0012               	return	
 40835  012E0A                     __end_of_ui_get_status:
 40836                           	opt stack 0
 40837                           tosu	equ	0xFFF
 40838                           tosh	equ	0xFFE
 40839                           tosl	equ	0xFFD
 40840                           pclath	equ	0xFFA
 40841                           tblptru	equ	0xFF8
 40842                           tblptrh	equ	0xFF7
 40843                           tblptrl	equ	0xFF6
 40844                           tablat	equ	0xFF5
 40845                           prodh	equ	0xFF4
 40846                           prodl	equ	0xFF3
 40847                           intcon	equ	0xFF2
 40848                           intcon2	equ	0xFF1
 40849                           intcon3	equ	0xFF0
 40850                           postinc0	equ	0xFEE
 40851                           wreg	equ	0xFE8
 40852                           indf1	equ	0xFE7
 40853                           postinc1	equ	0xFE6
 40854                           postdec1	equ	0xFE5
 40855                           plusw1	equ	0xFE3
 40856                           fsr1h	equ	0xFE2
 40857                           fsr1l	equ	0xFE1
 40858                           indf2	equ	0xFDF
 40859                           postinc2	equ	0xFDE
 40860                           postdec2	equ	0xFDD
 40861                           plusw2	equ	0xFDB
 40862                           fsr2h	equ	0xFDA
 40863                           fsr2l	equ	0xFD9
 40864                           status	equ	0xFD8
 40865                           
 40866 ;; *************** function _rtcc_get_year *****************
 40867 ;; Defined at:
 40868 ;;		line 103 in file "rtcc.c"
 40869 ;; Parameters:    Size  Location     Type
 40870 ;;		None
 40871 ;; Auto vars:     Size  Location     Type
 40872 ;;		None
 40873 ;; Return value:  Size  Location     Type
 40874 ;;                  1    wreg      unsigned char 
 40875 ;; Registers used:
 40876 ;;		wreg, status,2
 40877 ;; Tracked objects:
 40878 ;;		On entry : 0/0
 40879 ;;		On exit  : 0/0
 40880 ;;		Unchanged: 0/0
 40881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40886 ;;Total ram usage:        0 bytes
 40887 ;; Hardware stack levels used:    1
 40888 ;; Hardware stack levels required when called:   10
 40889 ;; This function calls:
 40890 ;;		Nothing
 40891 ;; This function is called by:
 40892 ;;		__fill_buffer_get_status
 40893 ;;		__display_time
 40894 ;;		__number_of_days
 40895 ;;		_rtcc_get_year_decimal
 40896 ;;		_rtcc_increment_year
 40897 ;;		_rtcc_decrement_year
 40898 ;;		_rtcc_write_eeprom
 40899 ;; This function uses a non-reentrant model
 40900 ;;
 40901                           
 40902                           	psect	text195
 40903  012D3A                     __ptext195:
 40904                           	opt stack 0
 40905  012D3A                     _rtcc_get_year:
 40906                           	opt stack 17
 40907                           
 40908                           ;rtcc.c: 105: RTCCFGbits.RTCPTR1 = 1;
 40909                           
 40910                           ; BSR set to: 1
 40911                           ;incstack = 0
 40912  012D3A  010F               	movlb	15	; () banked
 40913  012D3C  833F               	bsf	63,1,b	;volatile
 40914                           
 40915                           ;rtcc.c: 106: RTCCFGbits.RTCPTR0 = 1;
 40916  012D3E  813F               	bsf	63,0,b	;volatile
 40917  012D40                     
 40918                           ; BSR set to: 15
 40919                           
 40920                           ; BSR set to: 15
 40921  012D40  B93F               	btfsc	63,4,b	;volatile
 40922  012D42  D7FE               	goto	l2280
 40923                           
 40924                           ; BSR set to: 15
 40925                           ;rtcc.c: 108: return RTCVALL;
 40926                           
 40927                           ; BSR set to: 15
 40928  012D44  513A               	movf	58,w,b	;volatile
 40929  012D46  0012               	return	
 40930  012D48                     __end_of_rtcc_get_year:
 40931                           	opt stack 0
 40932                           tosu	equ	0xFFF
 40933                           tosh	equ	0xFFE
 40934                           tosl	equ	0xFFD
 40935                           pclath	equ	0xFFA
 40936                           tblptru	equ	0xFF8
 40937                           tblptrh	equ	0xFF7
 40938                           tblptrl	equ	0xFF6
 40939                           tablat	equ	0xFF5
 40940                           prodh	equ	0xFF4
 40941                           prodl	equ	0xFF3
 40942                           intcon	equ	0xFF2
 40943                           intcon2	equ	0xFF1
 40944                           intcon3	equ	0xFF0
 40945                           postinc0	equ	0xFEE
 40946                           wreg	equ	0xFE8
 40947                           indf1	equ	0xFE7
 40948                           postinc1	equ	0xFE6
 40949                           postdec1	equ	0xFE5
 40950                           plusw1	equ	0xFE3
 40951                           fsr1h	equ	0xFE2
 40952                           fsr1l	equ	0xFE1
 40953                           indf2	equ	0xFDF
 40954                           postinc2	equ	0xFDE
 40955                           postdec2	equ	0xFDD
 40956                           plusw2	equ	0xFDB
 40957                           fsr2h	equ	0xFDA
 40958                           fsr2l	equ	0xFD9
 40959                           status	equ	0xFD8
 40960                           
 40961 ;; *************** function _rtcc_get_seconds *****************
 40962 ;; Defined at:
 40963 ;;		line 293 in file "rtcc.c"
 40964 ;; Parameters:    Size  Location     Type
 40965 ;;		None
 40966 ;; Auto vars:     Size  Location     Type
 40967 ;;		None
 40968 ;; Return value:  Size  Location     Type
 40969 ;;                  1    wreg      unsigned char 
 40970 ;; Registers used:
 40971 ;;		wreg, status,2
 40972 ;; Tracked objects:
 40973 ;;		On entry : 0/0
 40974 ;;		On exit  : 0/0
 40975 ;;		Unchanged: 0/0
 40976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40981 ;;Total ram usage:        0 bytes
 40982 ;; Hardware stack levels used:    1
 40983 ;; Hardware stack levels required when called:   10
 40984 ;; This function calls:
 40985 ;;		Nothing
 40986 ;; This function is called by:
 40987 ;;		__fill_buffer_get_status
 40988 ;;		__display_time
 40989 ;;		_rtcc_get_seconds_decimal
 40990 ;;		_rtcc_increment_seconds
 40991 ;;		_rtcc_decrement_seconds
 40992 ;;		_rtcc_write_eeprom
 40993 ;; This function uses a non-reentrant model
 40994 ;;
 40995                           
 40996                           	psect	text196
 40997  012D48                     __ptext196:
 40998                           	opt stack 0
 40999  012D48                     _rtcc_get_seconds:
 41000                           	opt stack 17
 41001                           
 41002                           ;rtcc.c: 295: RTCCFGbits.RTCPTR1 = 0;
 41003                           
 41004                           ; BSR set to: 15
 41005                           ;incstack = 0
 41006  012D48  010F               	movlb	15	; () banked
 41007  012D4A  933F               	bcf	63,1,b	;volatile
 41008                           
 41009                           ;rtcc.c: 296: RTCCFGbits.RTCPTR0 = 0;
 41010  012D4C  913F               	bcf	63,0,b	;volatile
 41011  012D4E                     
 41012                           ; BSR set to: 15
 41013                           
 41014                           ; BSR set to: 15
 41015  012D4E  B93F               	btfsc	63,4,b	;volatile
 41016  012D50  D7FE               	goto	l2370
 41017                           
 41018                           ; BSR set to: 15
 41019                           ;rtcc.c: 298: return RTCVALL;
 41020                           
 41021                           ; BSR set to: 15
 41022  012D52  513A               	movf	58,w,b	;volatile
 41023  012D54  0012               	return	
 41024  012D56                     __end_of_rtcc_get_seconds:
 41025                           	opt stack 0
 41026                           tosu	equ	0xFFF
 41027                           tosh	equ	0xFFE
 41028                           tosl	equ	0xFFD
 41029                           pclath	equ	0xFFA
 41030                           tblptru	equ	0xFF8
 41031                           tblptrh	equ	0xFF7
 41032                           tblptrl	equ	0xFF6
 41033                           tablat	equ	0xFF5
 41034                           prodh	equ	0xFF4
 41035                           prodl	equ	0xFF3
 41036                           intcon	equ	0xFF2
 41037                           intcon2	equ	0xFF1
 41038                           intcon3	equ	0xFF0
 41039                           postinc0	equ	0xFEE
 41040                           wreg	equ	0xFE8
 41041                           indf1	equ	0xFE7
 41042                           postinc1	equ	0xFE6
 41043                           postdec1	equ	0xFE5
 41044                           plusw1	equ	0xFE3
 41045                           fsr1h	equ	0xFE2
 41046                           fsr1l	equ	0xFE1
 41047                           indf2	equ	0xFDF
 41048                           postinc2	equ	0xFDE
 41049                           postdec2	equ	0xFDD
 41050                           plusw2	equ	0xFDB
 41051                           fsr2h	equ	0xFDA
 41052                           fsr2l	equ	0xFD9
 41053                           status	equ	0xFD8
 41054                           
 41055 ;; *************** function _rtcc_get_month *****************
 41056 ;; Defined at:
 41057 ;;		line 141 in file "rtcc.c"
 41058 ;; Parameters:    Size  Location     Type
 41059 ;;		None
 41060 ;; Auto vars:     Size  Location     Type
 41061 ;;		None
 41062 ;; Return value:  Size  Location     Type
 41063 ;;                  1    wreg      unsigned char 
 41064 ;; Registers used:
 41065 ;;		wreg, status,2
 41066 ;; Tracked objects:
 41067 ;;		On entry : 0/0
 41068 ;;		On exit  : 0/0
 41069 ;;		Unchanged: 0/0
 41070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41075 ;;Total ram usage:        0 bytes
 41076 ;; Hardware stack levels used:    1
 41077 ;; Hardware stack levels required when called:   10
 41078 ;; This function calls:
 41079 ;;		Nothing
 41080 ;; This function is called by:
 41081 ;;		__fill_buffer_get_status
 41082 ;;		__display_time
 41083 ;;		__number_of_days
 41084 ;;		_rtcc_get_month_decimal
 41085 ;;		_rtcc_increment_month
 41086 ;;		_rtcc_decrement_month
 41087 ;;		_rtcc_write_eeprom
 41088 ;; This function uses a non-reentrant model
 41089 ;;
 41090                           
 41091                           	psect	text197
 41092  012D56                     __ptext197:
 41093                           	opt stack 0
 41094  012D56                     _rtcc_get_month:
 41095                           	opt stack 17
 41096                           
 41097                           ;rtcc.c: 143: RTCCFGbits.RTCPTR1 = 1;
 41098                           
 41099                           ; BSR set to: 15
 41100                           ;incstack = 0
 41101  012D56  010F               	movlb	15	; () banked
 41102  012D58  833F               	bsf	63,1,b	;volatile
 41103                           
 41104                           ;rtcc.c: 144: RTCCFGbits.RTCPTR0 = 0;
 41105  012D5A  913F               	bcf	63,0,b	;volatile
 41106  012D5C                     
 41107                           ; BSR set to: 15
 41108                           
 41109                           ; BSR set to: 15
 41110  012D5C  B93F               	btfsc	63,4,b	;volatile
 41111  012D5E  D7FE               	goto	l2298
 41112                           
 41113                           ; BSR set to: 15
 41114                           ;rtcc.c: 146: return RTCVALH;
 41115                           
 41116                           ; BSR set to: 15
 41117  012D60  513B               	movf	59,w,b	;volatile
 41118  012D62  0012               	return	
 41119  012D64                     __end_of_rtcc_get_month:
 41120                           	opt stack 0
 41121                           tosu	equ	0xFFF
 41122                           tosh	equ	0xFFE
 41123                           tosl	equ	0xFFD
 41124                           pclath	equ	0xFFA
 41125                           tblptru	equ	0xFF8
 41126                           tblptrh	equ	0xFF7
 41127                           tblptrl	equ	0xFF6
 41128                           tablat	equ	0xFF5
 41129                           prodh	equ	0xFF4
 41130                           prodl	equ	0xFF3
 41131                           intcon	equ	0xFF2
 41132                           intcon2	equ	0xFF1
 41133                           intcon3	equ	0xFF0
 41134                           postinc0	equ	0xFEE
 41135                           wreg	equ	0xFE8
 41136                           indf1	equ	0xFE7
 41137                           postinc1	equ	0xFE6
 41138                           postdec1	equ	0xFE5
 41139                           plusw1	equ	0xFE3
 41140                           fsr1h	equ	0xFE2
 41141                           fsr1l	equ	0xFE1
 41142                           indf2	equ	0xFDF
 41143                           postinc2	equ	0xFDE
 41144                           postdec2	equ	0xFDD
 41145                           plusw2	equ	0xFDB
 41146                           fsr2h	equ	0xFDA
 41147                           fsr2l	equ	0xFD9
 41148                           status	equ	0xFD8
 41149                           
 41150 ;; *************** function _rtcc_get_minutes *****************
 41151 ;; Defined at:
 41152 ;;		line 255 in file "rtcc.c"
 41153 ;; Parameters:    Size  Location     Type
 41154 ;;		None
 41155 ;; Auto vars:     Size  Location     Type
 41156 ;;		None
 41157 ;; Return value:  Size  Location     Type
 41158 ;;                  1    wreg      unsigned char 
 41159 ;; Registers used:
 41160 ;;		wreg, status,2
 41161 ;; Tracked objects:
 41162 ;;		On entry : 0/0
 41163 ;;		On exit  : 0/0
 41164 ;;		Unchanged: 0/0
 41165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41170 ;;Total ram usage:        0 bytes
 41171 ;; Hardware stack levels used:    1
 41172 ;; Hardware stack levels required when called:   10
 41173 ;; This function calls:
 41174 ;;		Nothing
 41175 ;; This function is called by:
 41176 ;;		__fill_buffer_get_status
 41177 ;;		__display_time
 41178 ;;		_rtcc_get_minutes_decimal
 41179 ;;		_rtcc_increment_minutes
 41180 ;;		_rtcc_decrement_minutes
 41181 ;;		_rtcc_write_eeprom
 41182 ;; This function uses a non-reentrant model
 41183 ;;
 41184                           
 41185                           	psect	text198
 41186  012D64                     __ptext198:
 41187                           	opt stack 0
 41188  012D64                     _rtcc_get_minutes:
 41189                           	opt stack 17
 41190                           
 41191                           ;rtcc.c: 257: RTCCFGbits.RTCPTR1 = 0;
 41192                           
 41193                           ; BSR set to: 15
 41194                           ;incstack = 0
 41195  012D64  010F               	movlb	15	; () banked
 41196  012D66  933F               	bcf	63,1,b	;volatile
 41197                           
 41198                           ;rtcc.c: 258: RTCCFGbits.RTCPTR0 = 0;
 41199  012D68  913F               	bcf	63,0,b	;volatile
 41200  012D6A                     
 41201                           ; BSR set to: 15
 41202                           
 41203                           ; BSR set to: 15
 41204  012D6A  B93F               	btfsc	63,4,b	;volatile
 41205  012D6C  D7FE               	goto	l2352
 41206                           
 41207                           ; BSR set to: 15
 41208                           ;rtcc.c: 260: return RTCVALH;
 41209                           
 41210                           ; BSR set to: 15
 41211  012D6E  513B               	movf	59,w,b	;volatile
 41212  012D70  0012               	return	
 41213  012D72                     __end_of_rtcc_get_minutes:
 41214                           	opt stack 0
 41215                           tosu	equ	0xFFF
 41216                           tosh	equ	0xFFE
 41217                           tosl	equ	0xFFD
 41218                           pclath	equ	0xFFA
 41219                           tblptru	equ	0xFF8
 41220                           tblptrh	equ	0xFF7
 41221                           tblptrl	equ	0xFF6
 41222                           tablat	equ	0xFF5
 41223                           prodh	equ	0xFF4
 41224                           prodl	equ	0xFF3
 41225                           intcon	equ	0xFF2
 41226                           intcon2	equ	0xFF1
 41227                           intcon3	equ	0xFF0
 41228                           postinc0	equ	0xFEE
 41229                           wreg	equ	0xFE8
 41230                           indf1	equ	0xFE7
 41231                           postinc1	equ	0xFE6
 41232                           postdec1	equ	0xFE5
 41233                           plusw1	equ	0xFE3
 41234                           fsr1h	equ	0xFE2
 41235                           fsr1l	equ	0xFE1
 41236                           indf2	equ	0xFDF
 41237                           postinc2	equ	0xFDE
 41238                           postdec2	equ	0xFDD
 41239                           plusw2	equ	0xFDB
 41240                           fsr2h	equ	0xFDA
 41241                           fsr2l	equ	0xFD9
 41242                           status	equ	0xFD8
 41243                           
 41244 ;; *************** function _rtcc_get_hours *****************
 41245 ;; Defined at:
 41246 ;;		line 217 in file "rtcc.c"
 41247 ;; Parameters:    Size  Location     Type
 41248 ;;		None
 41249 ;; Auto vars:     Size  Location     Type
 41250 ;;		None
 41251 ;; Return value:  Size  Location     Type
 41252 ;;                  1    wreg      unsigned char 
 41253 ;; Registers used:
 41254 ;;		wreg, status,2
 41255 ;; Tracked objects:
 41256 ;;		On entry : 0/0
 41257 ;;		On exit  : 0/0
 41258 ;;		Unchanged: 0/0
 41259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41264 ;;Total ram usage:        0 bytes
 41265 ;; Hardware stack levels used:    1
 41266 ;; Hardware stack levels required when called:   10
 41267 ;; This function calls:
 41268 ;;		Nothing
 41269 ;; This function is called by:
 41270 ;;		__fill_buffer_get_status
 41271 ;;		__display_time
 41272 ;;		_rtcc_get_hours_decimal
 41273 ;;		_rtcc_increment_hours
 41274 ;;		_rtcc_decrement_hours
 41275 ;;		_rtcc_write_eeprom
 41276 ;; This function uses a non-reentrant model
 41277 ;;
 41278                           
 41279                           	psect	text199
 41280  012D72                     __ptext199:
 41281                           	opt stack 0
 41282  012D72                     _rtcc_get_hours:
 41283                           	opt stack 17
 41284                           
 41285                           ;rtcc.c: 219: RTCCFGbits.RTCPTR1 = 0;
 41286                           
 41287                           ; BSR set to: 15
 41288                           ;incstack = 0
 41289  012D72  010F               	movlb	15	; () banked
 41290  012D74  933F               	bcf	63,1,b	;volatile
 41291                           
 41292                           ;rtcc.c: 220: RTCCFGbits.RTCPTR0 = 1;
 41293  012D76  813F               	bsf	63,0,b	;volatile
 41294  012D78                     
 41295                           ; BSR set to: 15
 41296                           
 41297                           ; BSR set to: 15
 41298  012D78  B93F               	btfsc	63,4,b	;volatile
 41299  012D7A  D7FE               	goto	l2334
 41300                           
 41301                           ; BSR set to: 15
 41302                           ;rtcc.c: 222: return RTCVALL;
 41303                           
 41304                           ; BSR set to: 15
 41305  012D7C  513A               	movf	58,w,b	;volatile
 41306  012D7E  0012               	return	
 41307  012D80                     __end_of_rtcc_get_hours:
 41308                           	opt stack 0
 41309                           tosu	equ	0xFFF
 41310                           tosh	equ	0xFFE
 41311                           tosl	equ	0xFFD
 41312                           pclath	equ	0xFFA
 41313                           tblptru	equ	0xFF8
 41314                           tblptrh	equ	0xFF7
 41315                           tblptrl	equ	0xFF6
 41316                           tablat	equ	0xFF5
 41317                           prodh	equ	0xFF4
 41318                           prodl	equ	0xFF3
 41319                           intcon	equ	0xFF2
 41320                           intcon2	equ	0xFF1
 41321                           intcon3	equ	0xFF0
 41322                           postinc0	equ	0xFEE
 41323                           wreg	equ	0xFE8
 41324                           indf1	equ	0xFE7
 41325                           postinc1	equ	0xFE6
 41326                           postdec1	equ	0xFE5
 41327                           plusw1	equ	0xFE3
 41328                           fsr1h	equ	0xFE2
 41329                           fsr1l	equ	0xFE1
 41330                           indf2	equ	0xFDF
 41331                           postinc2	equ	0xFDE
 41332                           postdec2	equ	0xFDD
 41333                           plusw2	equ	0xFDB
 41334                           fsr2h	equ	0xFDA
 41335                           fsr2l	equ	0xFD9
 41336                           status	equ	0xFD8
 41337                           
 41338 ;; *************** function _rtcc_get_day *****************
 41339 ;; Defined at:
 41340 ;;		line 179 in file "rtcc.c"
 41341 ;; Parameters:    Size  Location     Type
 41342 ;;		None
 41343 ;; Auto vars:     Size  Location     Type
 41344 ;;		None
 41345 ;; Return value:  Size  Location     Type
 41346 ;;                  1    wreg      unsigned char 
 41347 ;; Registers used:
 41348 ;;		wreg, status,2
 41349 ;; Tracked objects:
 41350 ;;		On entry : 0/0
 41351 ;;		On exit  : 0/0
 41352 ;;		Unchanged: 0/0
 41353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41358 ;;Total ram usage:        0 bytes
 41359 ;; Hardware stack levels used:    1
 41360 ;; Hardware stack levels required when called:   10
 41361 ;; This function calls:
 41362 ;;		Nothing
 41363 ;; This function is called by:
 41364 ;;		__fill_buffer_get_status
 41365 ;;		__display_time
 41366 ;;		_rtcc_correct_day
 41367 ;;		_rtcc_get_day_decimal
 41368 ;;		_rtcc_increment_day
 41369 ;;		_rtcc_decrement_day
 41370 ;;		_rtcc_write_eeprom
 41371 ;; This function uses a non-reentrant model
 41372 ;;
 41373                           
 41374                           	psect	text200
 41375  012D80                     __ptext200:
 41376                           	opt stack 0
 41377  012D80                     _rtcc_get_day:
 41378                           	opt stack 17
 41379                           
 41380                           ;rtcc.c: 181: RTCCFGbits.RTCPTR1 = 1;
 41381                           
 41382                           ; BSR set to: 15
 41383                           ;incstack = 0
 41384  012D80  010F               	movlb	15	; () banked
 41385  012D82  833F               	bsf	63,1,b	;volatile
 41386                           
 41387                           ;rtcc.c: 182: RTCCFGbits.RTCPTR0 = 0;
 41388  012D84  913F               	bcf	63,0,b	;volatile
 41389  012D86                     
 41390                           ; BSR set to: 15
 41391                           
 41392                           ; BSR set to: 15
 41393  012D86  B93F               	btfsc	63,4,b	;volatile
 41394  012D88  D7FE               	goto	l2316
 41395                           
 41396                           ; BSR set to: 15
 41397                           ;rtcc.c: 184: return RTCVALL;
 41398                           
 41399                           ; BSR set to: 15
 41400  012D8A  513A               	movf	58,w,b	;volatile
 41401  012D8C  0012               	return	
 41402  012D8E                     __end_of_rtcc_get_day:
 41403                           	opt stack 0
 41404                           tosu	equ	0xFFF
 41405                           tosh	equ	0xFFE
 41406                           tosl	equ	0xFFD
 41407                           pclath	equ	0xFFA
 41408                           tblptru	equ	0xFF8
 41409                           tblptrh	equ	0xFF7
 41410                           tblptrl	equ	0xFF6
 41411                           tablat	equ	0xFF5
 41412                           prodh	equ	0xFF4
 41413                           prodl	equ	0xFF3
 41414                           intcon	equ	0xFF2
 41415                           intcon2	equ	0xFF1
 41416                           intcon3	equ	0xFF0
 41417                           postinc0	equ	0xFEE
 41418                           wreg	equ	0xFE8
 41419                           indf1	equ	0xFE7
 41420                           postinc1	equ	0xFE6
 41421                           postdec1	equ	0xFE5
 41422                           plusw1	equ	0xFE3
 41423                           fsr1h	equ	0xFE2
 41424                           fsr1l	equ	0xFE1
 41425                           indf2	equ	0xFDF
 41426                           postinc2	equ	0xFDE
 41427                           postdec2	equ	0xFDD
 41428                           plusw2	equ	0xFDB
 41429                           fsr2h	equ	0xFDA
 41430                           fsr2l	equ	0xFD9
 41431                           status	equ	0xFD8
 41432                           
 41433 ;; *************** function _buck_remote_get_status *****************
 41434 ;; Defined at:
 41435 ;;		line 650 in file "buck.c"
 41436 ;; Parameters:    Size  Location     Type
 41437 ;;		None
 41438 ;; Auto vars:     Size  Location     Type
 41439 ;;  retval          1    0[BANK0 ] unsigned char 
 41440 ;; Return value:  Size  Location     Type
 41441 ;;                  1    wreg      unsigned char 
 41442 ;; Registers used:
 41443 ;;		wreg, status,2, status,0
 41444 ;; Tracked objects:
 41445 ;;		On entry : 0/0
 41446 ;;		On exit  : 0/0
 41447 ;;		Unchanged: 0/0
 41448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41453 ;;Total ram usage:        1 bytes
 41454 ;; Hardware stack levels used:    1
 41455 ;; Hardware stack levels required when called:   10
 41456 ;; This function calls:
 41457 ;;		Nothing
 41458 ;; This function is called by:
 41459 ;;		__fill_buffer_get_status
 41460 ;; This function uses a non-reentrant model
 41461 ;;
 41462                           
 41463                           	psect	text201
 41464  012616                     __ptext201:
 41465                           	opt stack 0
 41466  012616                     _buck_remote_get_status:
 41467                           	opt stack 18
 41468                           
 41469                           ;buck.c: 652: uint8_t retval = 0x00;
 41470                           
 41471                           ; BSR set to: 15
 41472                           ;incstack = 0
 41473  012616  0E00               	movlw	0
 41474  012618  0100               	movlb	0	; () banked
 41475  01261A  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 41476                           
 41477                           ;buck.c: 653: if(buck_remote_enable)
 41478  01261C  0101               	movlb	1	; () banked
 41479  01261E  51ED               	movf	_buck_remote_enable& (0+255),w,b
 41480  012620  B4D8               	btfsc	status,2,c
 41481  012622  D002               	goto	l2632
 41482                           
 41483                           ; BSR set to: 1
 41484                           ;buck.c: 654: retval |= 0x01;
 41485  012624  0100               	movlb	0	; () banked
 41486  012626  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 41487  012628                     l2632:
 41488                           
 41489                           ;buck.c: 655: if(buck_remote_on)
 41490                           
 41491                           ; BSR set to: 0
 41492  012628  504E               	movf	_buck_remote_on,w,c
 41493  01262A  B4D8               	btfsc	status,2,c
 41494  01262C  D002               	goto	l2633
 41495                           
 41496                           ;buck.c: 656: retval |= 0x02;
 41497  01262E  0100               	movlb	0	; () banked
 41498  012630  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 41499  012632                     l2633:
 41500                           
 41501                           ;buck.c: 657: if(buck_remote_synchronous)
 41502                           
 41503                           ; BSR set to: 0
 41504  012632  504D               	movf	_buck_remote_synchronous,w,c
 41505  012634  B4D8               	btfsc	status,2,c
 41506  012636  D003               	goto	l2634
 41507                           
 41508                           ;buck.c: 658: retval |= 0x03;
 41509  012638  0E03               	movlw	3
 41510  01263A  0100               	movlb	0	; () banked
 41511  01263C  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 41512  01263E                     l2634:
 41513                           
 41514                           ;buck.c: 659: return retval;
 41515                           
 41516                           ; BSR set to: 0
 41517  01263E  0100               	movlb	0	; () banked
 41518  012640  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 41519  012642  0012               	return	
 41520  012644                     __end_of_buck_remote_get_status:
 41521                           	opt stack 0
 41522                           tosu	equ	0xFFF
 41523                           tosh	equ	0xFFE
 41524                           tosl	equ	0xFFD
 41525                           pclath	equ	0xFFA
 41526                           tblptru	equ	0xFF8
 41527                           tblptrh	equ	0xFF7
 41528                           tblptrl	equ	0xFF6
 41529                           tablat	equ	0xFF5
 41530                           prodh	equ	0xFF4
 41531                           prodl	equ	0xFF3
 41532                           intcon	equ	0xFF2
 41533                           intcon2	equ	0xFF1
 41534                           intcon3	equ	0xFF0
 41535                           postinc0	equ	0xFEE
 41536                           wreg	equ	0xFE8
 41537                           indf1	equ	0xFE7
 41538                           postinc1	equ	0xFE6
 41539                           postdec1	equ	0xFE5
 41540                           plusw1	equ	0xFE3
 41541                           fsr1h	equ	0xFE2
 41542                           fsr1l	equ	0xFE1
 41543                           indf2	equ	0xFDF
 41544                           postinc2	equ	0xFDE
 41545                           postdec2	equ	0xFDD
 41546                           plusw2	equ	0xFDB
 41547                           fsr2h	equ	0xFDA
 41548                           fsr2l	equ	0xFD9
 41549                           status	equ	0xFD8
 41550                           
 41551 ;; *************** function _buck_remote_get_dutycycle *****************
 41552 ;; Defined at:
 41553 ;;		line 662 in file "buck.c"
 41554 ;; Parameters:    Size  Location     Type
 41555 ;;		None
 41556 ;; Auto vars:     Size  Location     Type
 41557 ;;		None
 41558 ;; Return value:  Size  Location     Type
 41559 ;;                  1    wreg      unsigned char 
 41560 ;; Registers used:
 41561 ;;		wreg, status,2
 41562 ;; Tracked objects:
 41563 ;;		On entry : 0/0
 41564 ;;		On exit  : 0/0
 41565 ;;		Unchanged: 0/0
 41566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41571 ;;Total ram usage:        0 bytes
 41572 ;; Hardware stack levels used:    1
 41573 ;; Hardware stack levels required when called:   10
 41574 ;; This function calls:
 41575 ;;		Nothing
 41576 ;; This function is called by:
 41577 ;;		__fill_buffer_get_status
 41578 ;; This function uses a non-reentrant model
 41579 ;;
 41580                           
 41581                           	psect	text202
 41582  012E0A                     __ptext202:
 41583                           	opt stack 0
 41584  012E0A                     _buck_remote_get_dutycycle:
 41585                           	opt stack 18
 41586                           
 41587                           ;buck.c: 664: return buck_remote_dutycycle;
 41588                           
 41589                           ; BSR set to: 0
 41590                           ;incstack = 0
 41591  012E0A  0100               	movlb	0	; () banked
 41592  012E0C  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 41593  012E0E  0012               	return	
 41594  012E10                     __end_of_buck_remote_get_dutycycle:
 41595                           	opt stack 0
 41596                           tosu	equ	0xFFF
 41597                           tosh	equ	0xFFE
 41598                           tosl	equ	0xFFD
 41599                           pclath	equ	0xFFA
 41600                           tblptru	equ	0xFF8
 41601                           tblptrh	equ	0xFF7
 41602                           tblptrl	equ	0xFF6
 41603                           tablat	equ	0xFF5
 41604                           prodh	equ	0xFF4
 41605                           prodl	equ	0xFF3
 41606                           intcon	equ	0xFF2
 41607                           intcon2	equ	0xFF1
 41608                           intcon3	equ	0xFF0
 41609                           postinc0	equ	0xFEE
 41610                           wreg	equ	0xFE8
 41611                           indf1	equ	0xFE7
 41612                           postinc1	equ	0xFE6
 41613                           postdec1	equ	0xFE5
 41614                           plusw1	equ	0xFE3
 41615                           fsr1h	equ	0xFE2
 41616                           fsr1l	equ	0xFE1
 41617                           indf2	equ	0xFDF
 41618                           postinc2	equ	0xFDE
 41619                           postdec2	equ	0xFDD
 41620                           plusw2	equ	0xFDB
 41621                           fsr2h	equ	0xFDA
 41622                           fsr2l	equ	0xFD9
 41623                           status	equ	0xFD8
 41624                           
 41625 ;; *************** function _buck_get_mode *****************
 41626 ;; Defined at:
 41627 ;;		line 597 in file "buck.c"
 41628 ;; Parameters:    Size  Location     Type
 41629 ;;		None
 41630 ;; Auto vars:     Size  Location     Type
 41631 ;;		None
 41632 ;; Return value:  Size  Location     Type
 41633 ;;                  1    wreg      enum E9576
 41634 ;; Registers used:
 41635 ;;		wreg, status,2
 41636 ;; Tracked objects:
 41637 ;;		On entry : 0/0
 41638 ;;		On exit  : 0/0
 41639 ;;		Unchanged: 0/0
 41640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41645 ;;Total ram usage:        0 bytes
 41646 ;; Hardware stack levels used:    1
 41647 ;; Hardware stack levels required when called:   10
 41648 ;; This function calls:
 41649 ;;		Nothing
 41650 ;; This function is called by:
 41651 ;;		_main
 41652 ;;		__fill_buffer_get_status
 41653 ;;		_system_calculate_input_current
 41654 ;;		_system_calculate_output_current
 41655 ;;		__display_inout
 41656 ;;		__display_charger
 41657 ;;		_log_collect_data
 41658 ;; This function uses a non-reentrant model
 41659 ;;
 41660                           
 41661                           	psect	text203
 41662  012E10                     __ptext203:
 41663                           	opt stack 0
 41664  012E10                     _buck_get_mode:
 41665                           	opt stack 19
 41666                           
 41667                           ;buck.c: 599: return buck_status;
 41668                           
 41669                           ; BSR set to: 0
 41670                           ;incstack = 0
 41671  012E10  0100               	movlb	0	; () banked
 41672  012E12  51FF               	movf	_buck_status& (0+255),w,b
 41673  012E14  0012               	return	
 41674  012E16                     __end_of_buck_get_mode:
 41675                           	opt stack 0
 41676                           tosu	equ	0xFFF
 41677                           tosh	equ	0xFFE
 41678                           tosl	equ	0xFFD
 41679                           pclath	equ	0xFFA
 41680                           tblptru	equ	0xFF8
 41681                           tblptrh	equ	0xFF7
 41682                           tblptrl	equ	0xFF6
 41683                           tablat	equ	0xFF5
 41684                           prodh	equ	0xFF4
 41685                           prodl	equ	0xFF3
 41686                           intcon	equ	0xFF2
 41687                           intcon2	equ	0xFF1
 41688                           intcon3	equ	0xFF0
 41689                           postinc0	equ	0xFEE
 41690                           wreg	equ	0xFE8
 41691                           indf1	equ	0xFE7
 41692                           postinc1	equ	0xFE6
 41693                           postdec1	equ	0xFE5
 41694                           plusw1	equ	0xFE3
 41695                           fsr1h	equ	0xFE2
 41696                           fsr1l	equ	0xFE1
 41697                           indf2	equ	0xFDF
 41698                           postinc2	equ	0xFDE
 41699                           postdec2	equ	0xFDD
 41700                           plusw2	equ	0xFDB
 41701                           fsr2h	equ	0xFDA
 41702                           fsr2l	equ	0xFD9
 41703                           status	equ	0xFD8
 41704                           
 41705 ;; *************** function _buck_get_dutycycle *****************
 41706 ;; Defined at:
 41707 ;;		line 592 in file "buck.c"
 41708 ;; Parameters:    Size  Location     Type
 41709 ;;		None
 41710 ;; Auto vars:     Size  Location     Type
 41711 ;;		None
 41712 ;; Return value:  Size  Location     Type
 41713 ;;                  1    wreg      unsigned char 
 41714 ;; Registers used:
 41715 ;;		wreg, status,2
 41716 ;; Tracked objects:
 41717 ;;		On entry : 0/0
 41718 ;;		On exit  : 0/0
 41719 ;;		Unchanged: 0/0
 41720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41725 ;;Total ram usage:        0 bytes
 41726 ;; Hardware stack levels used:    1
 41727 ;; Hardware stack levels required when called:   10
 41728 ;; This function calls:
 41729 ;;		Nothing
 41730 ;; This function is called by:
 41731 ;;		__fill_buffer_get_status
 41732 ;;		__display_charger
 41733 ;; This function uses a non-reentrant model
 41734 ;;
 41735                           
 41736                           	psect	text204
 41737  012E16                     __ptext204:
 41738                           	opt stack 0
 41739  012E16                     _buck_get_dutycycle:
 41740                           	opt stack 18
 41741                           
 41742                           ;buck.c: 594: return buck_dutycycle;
 41743                           
 41744                           ; BSR set to: 0
 41745                           ;incstack = 0
 41746  012E16  0100               	movlb	0	; () banked
 41747  012E18  51FE               	movf	_buck_dutycycle& (0+255),w,b
 41748  012E1A  0012               	return	
 41749  012E1C                     __end_of_buck_get_dutycycle:
 41750                           	opt stack 0
 41751                           tosu	equ	0xFFF
 41752                           tosh	equ	0xFFE
 41753                           tosl	equ	0xFFD
 41754                           pclath	equ	0xFFA
 41755                           tblptru	equ	0xFF8
 41756                           tblptrh	equ	0xFF7
 41757                           tblptrl	equ	0xFF6
 41758                           tablat	equ	0xFF5
 41759                           prodh	equ	0xFF4
 41760                           prodl	equ	0xFF3
 41761                           intcon	equ	0xFF2
 41762                           intcon2	equ	0xFF1
 41763                           intcon3	equ	0xFF0
 41764                           postinc0	equ	0xFEE
 41765                           wreg	equ	0xFE8
 41766                           indf1	equ	0xFE7
 41767                           postinc1	equ	0xFE6
 41768                           postdec1	equ	0xFE5
 41769                           plusw1	equ	0xFE3
 41770                           fsr1h	equ	0xFE2
 41771                           fsr1l	equ	0xFE1
 41772                           indf2	equ	0xFDF
 41773                           postinc2	equ	0xFDE
 41774                           postdec2	equ	0xFDD
 41775                           plusw2	equ	0xFDB
 41776                           fsr2h	equ	0xFDA
 41777                           fsr2l	equ	0xFD9
 41778                           status	equ	0xFD8
 41779                           
 41780 ;; *************** function __fill_buffer_get_display2 *****************
 41781 ;; Defined at:
 41782 ;;		line 353 in file "app_device_custom_hid.c"
 41783 ;; Parameters:    Size  Location     Type
 41784 ;;		None
 41785 ;; Auto vars:     Size  Location     Type
 41786 ;;  position        1    7[BANK0 ] unsigned char 
 41787 ;;  line            1    6[BANK0 ] unsigned char 
 41788 ;;  cntr            1    5[BANK0 ] unsigned char 
 41789 ;; Return value:  Size  Location     Type
 41790 ;;                  1    wreg      void 
 41791 ;; Registers used:
 41792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41793 ;; Tracked objects:
 41794 ;;		On entry : 0/0
 41795 ;;		On exit  : 0/0
 41796 ;;		Unchanged: 0/0
 41797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41799 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41801 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41802 ;;Total ram usage:        4 bytes
 41803 ;; Hardware stack levels used:    1
 41804 ;; Hardware stack levels required when called:   11
 41805 ;; This function calls:
 41806 ;;		_display_get_character
 41807 ;; This function is called by:
 41808 ;;		_APP_DeviceCustomHIDTasks
 41809 ;; This function uses a non-reentrant model
 41810 ;;
 41811                           
 41812                           	psect	text205
 41813  011E08                     __ptext205:
 41814                           	opt stack 0
 41815  011E08                     __fill_buffer_get_display2:
 41816                           	opt stack 18
 41817                           
 41818                           ;app_device_custom_hid.c: 355: uint8_t cntr;
 41819                           ;app_device_custom_hid.c: 356: uint8_t line;
 41820                           ;app_device_custom_hid.c: 357: uint8_t position;
 41821                           ;app_device_custom_hid.c: 360: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 41822                           
 41823                           ; BSR set to: 0
 41824                           ;incstack = 0
 41825  011E08  0E12               	movlw	18
 41826  011E0A  0103               	movlb	3	; () banked
 41827  011E0C  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41828                           
 41829                           ;app_device_custom_hid.c: 363: cntr = 1;
 41830  011E0E  0E01               	movlw	1
 41831  011E10  0100               	movlb	0	; () banked
 41832  011E12  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 41833                           
 41834                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 41835  011E14  0E02               	movlw	2
 41836  011E16  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 41837  011E18                     l14408:
 41838                           
 41839                           ; BSR set to: 0
 41840  011E18  0E03               	movlw	3
 41841  011E1A  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 41842  011E1C  D001               	goto	l1130
 41843  011E1E  0012               	return	
 41844  011E20                     l1130:
 41845                           
 41846                           ; BSR set to: 0
 41847                           ;app_device_custom_hid.c: 365: {
 41848                           ;app_device_custom_hid.c: 366: for(position=0; position<20; ++position)
 41849                           
 41850                           ; BSR set to: 0
 41851  011E20  0E00               	movlw	0
 41852  011E22  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 41853  011E24                     l14414:
 41854                           
 41855                           ; BSR set to: 0
 41856  011E24  0E13               	movlw	19
 41857  011E26  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 41858  011E28  D001               	goto	l1132
 41859  011E2A  D014               	goto	u12390
 41860  011E2C                     l1132:
 41861                           
 41862                           ; BSR set to: 0
 41863                           ;app_device_custom_hid.c: 367: {
 41864                           ;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 41865                           
 41866                           ; BSR set to: 0
 41867  011E2C  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 41868  011E30  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 41869  011E32  EC22  F093         	call	_display_get_character
 41870  011E36  0100               	movlb	0	; () banked
 41871  011E38  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 41872  011E3A  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 41873  011E3C  0D01               	mullw	1
 41874  011E3E  0EA4               	movlw	low _ToSendDataBuffer
 41875  011E40  24F3               	addwf	prodl,w,c
 41876  011E42  6ED9               	movwf	fsr2l,c
 41877  011E44  0E03               	movlw	high _ToSendDataBuffer
 41878  011E46  20F4               	addwfc	prodh,w,c
 41879  011E48  6EDA               	movwf	fsr2h,c
 41880  011E4A  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 41881                           
 41882                           ; BSR set to: 0
 41883                           ;app_device_custom_hid.c: 369: ++cntr;
 41884  011E4E  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 41885                           
 41886                           ; BSR set to: 0
 41887  011E50  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 41888  011E52  D7E8               	goto	l14414
 41889  011E54                     u12390:
 41890                           
 41891                           ; BSR set to: 0
 41892                           
 41893                           ; BSR set to: 0
 41894  011E54  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 41895  011E56  D7E0               	goto	l14408
 41896  011E58                     __end_of__fill_buffer_get_display2:
 41897                           	opt stack 0
 41898                           tosu	equ	0xFFF
 41899                           tosh	equ	0xFFE
 41900                           tosl	equ	0xFFD
 41901                           pclath	equ	0xFFA
 41902                           tblptru	equ	0xFF8
 41903                           tblptrh	equ	0xFF7
 41904                           tblptrl	equ	0xFF6
 41905                           tablat	equ	0xFF5
 41906                           prodh	equ	0xFF4
 41907                           prodl	equ	0xFF3
 41908                           intcon	equ	0xFF2
 41909                           intcon2	equ	0xFF1
 41910                           intcon3	equ	0xFF0
 41911                           postinc0	equ	0xFEE
 41912                           wreg	equ	0xFE8
 41913                           indf1	equ	0xFE7
 41914                           postinc1	equ	0xFE6
 41915                           postdec1	equ	0xFE5
 41916                           plusw1	equ	0xFE3
 41917                           fsr1h	equ	0xFE2
 41918                           fsr1l	equ	0xFE1
 41919                           indf2	equ	0xFDF
 41920                           postinc2	equ	0xFDE
 41921                           postdec2	equ	0xFDD
 41922                           plusw2	equ	0xFDB
 41923                           fsr2h	equ	0xFDA
 41924                           fsr2l	equ	0xFD9
 41925                           status	equ	0xFD8
 41926                           
 41927 ;; *************** function __fill_buffer_get_display1 *****************
 41928 ;; Defined at:
 41929 ;;		line 331 in file "app_device_custom_hid.c"
 41930 ;; Parameters:    Size  Location     Type
 41931 ;;		None
 41932 ;; Auto vars:     Size  Location     Type
 41933 ;;  position        1    7[BANK0 ] unsigned char 
 41934 ;;  line            1    6[BANK0 ] unsigned char 
 41935 ;;  cntr            1    5[BANK0 ] unsigned char 
 41936 ;; Return value:  Size  Location     Type
 41937 ;;                  1    wreg      void 
 41938 ;; Registers used:
 41939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41940 ;; Tracked objects:
 41941 ;;		On entry : 0/0
 41942 ;;		On exit  : 0/0
 41943 ;;		Unchanged: 0/0
 41944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41946 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41948 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41949 ;;Total ram usage:        4 bytes
 41950 ;; Hardware stack levels used:    1
 41951 ;; Hardware stack levels required when called:   11
 41952 ;; This function calls:
 41953 ;;		_display_get_character
 41954 ;; This function is called by:
 41955 ;;		_APP_DeviceCustomHIDTasks
 41956 ;; This function uses a non-reentrant model
 41957 ;;
 41958                           
 41959                           	psect	text206
 41960  011E58                     __ptext206:
 41961                           	opt stack 0
 41962  011E58                     __fill_buffer_get_display1:
 41963                           	opt stack 18
 41964                           
 41965                           ;app_device_custom_hid.c: 333: uint8_t cntr;
 41966                           ;app_device_custom_hid.c: 334: uint8_t line;
 41967                           ;app_device_custom_hid.c: 335: uint8_t position;
 41968                           ;app_device_custom_hid.c: 338: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 41969                           
 41970                           ; BSR set to: 0
 41971                           ;incstack = 0
 41972  011E58  0E11               	movlw	17
 41973  011E5A  0103               	movlb	3	; () banked
 41974  011E5C  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41975                           
 41976                           ;app_device_custom_hid.c: 341: cntr = 1;
 41977  011E5E  0E01               	movlw	1
 41978  011E60  0100               	movlb	0	; () banked
 41979  011E62  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 41980                           
 41981                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 41982  011E64  0E00               	movlw	0
 41983  011E66  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 41984  011E68                     l14384:
 41985                           
 41986                           ; BSR set to: 0
 41987  011E68  0E01               	movlw	1
 41988  011E6A  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 41989  011E6C  D001               	goto	l1123
 41990  011E6E  0012               	return	
 41991  011E70                     l1123:
 41992                           
 41993                           ; BSR set to: 0
 41994                           ;app_device_custom_hid.c: 343: {
 41995                           ;app_device_custom_hid.c: 344: for(position=0; position<20; ++position)
 41996                           
 41997                           ; BSR set to: 0
 41998  011E70  0E00               	movlw	0
 41999  011E72  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 42000  011E74                     l14390:
 42001                           
 42002                           ; BSR set to: 0
 42003  011E74  0E13               	movlw	19
 42004  011E76  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 42005  011E78  D001               	goto	l1125
 42006  011E7A  D014               	goto	u12350
 42007  011E7C                     l1125:
 42008                           
 42009                           ; BSR set to: 0
 42010                           ;app_device_custom_hid.c: 345: {
 42011                           ;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 42012                           
 42013                           ; BSR set to: 0
 42014  011E7C  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 42015  011E80  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 42016  011E82  EC22  F093         	call	_display_get_character
 42017  011E86  0100               	movlb	0	; () banked
 42018  011E88  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 42019  011E8A  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 42020  011E8C  0D01               	mullw	1
 42021  011E8E  0EA4               	movlw	low _ToSendDataBuffer
 42022  011E90  24F3               	addwf	prodl,w,c
 42023  011E92  6ED9               	movwf	fsr2l,c
 42024  011E94  0E03               	movlw	high _ToSendDataBuffer
 42025  011E96  20F4               	addwfc	prodh,w,c
 42026  011E98  6EDA               	movwf	fsr2h,c
 42027  011E9A  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 42028                           
 42029                           ; BSR set to: 0
 42030                           ;app_device_custom_hid.c: 347: ++cntr;
 42031  011E9E  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 42032                           
 42033                           ; BSR set to: 0
 42034  011EA0  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 42035  011EA2  D7E8               	goto	l14390
 42036  011EA4                     u12350:
 42037                           
 42038                           ; BSR set to: 0
 42039                           
 42040                           ; BSR set to: 0
 42041  011EA4  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 42042  011EA6  D7E0               	goto	l14384
 42043  011EA8                     __end_of__fill_buffer_get_display1:
 42044                           	opt stack 0
 42045                           tosu	equ	0xFFF
 42046                           tosh	equ	0xFFE
 42047                           tosl	equ	0xFFD
 42048                           pclath	equ	0xFFA
 42049                           tblptru	equ	0xFF8
 42050                           tblptrh	equ	0xFF7
 42051                           tblptrl	equ	0xFF6
 42052                           tablat	equ	0xFF5
 42053                           prodh	equ	0xFF4
 42054                           prodl	equ	0xFF3
 42055                           intcon	equ	0xFF2
 42056                           intcon2	equ	0xFF1
 42057                           intcon3	equ	0xFF0
 42058                           postinc0	equ	0xFEE
 42059                           wreg	equ	0xFE8
 42060                           indf1	equ	0xFE7
 42061                           postinc1	equ	0xFE6
 42062                           postdec1	equ	0xFE5
 42063                           plusw1	equ	0xFE3
 42064                           fsr1h	equ	0xFE2
 42065                           fsr1l	equ	0xFE1
 42066                           indf2	equ	0xFDF
 42067                           postinc2	equ	0xFDE
 42068                           postdec2	equ	0xFDD
 42069                           plusw2	equ	0xFDB
 42070                           fsr2h	equ	0xFDA
 42071                           fsr2l	equ	0xFD9
 42072                           status	equ	0xFD8
 42073                           
 42074 ;; *************** function _display_get_character *****************
 42075 ;; Defined at:
 42076 ;;		line 23 in file "display.c"
 42077 ;; Parameters:    Size  Location     Type
 42078 ;;  line            1    wreg     unsigned char 
 42079 ;;  position        1    0[BANK0 ] unsigned char 
 42080 ;; Auto vars:     Size  Location     Type
 42081 ;;  line            1    3[BANK0 ] unsigned char 
 42082 ;; Return value:  Size  Location     Type
 42083 ;;                  1    wreg      unsigned char 
 42084 ;; Registers used:
 42085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42086 ;; Tracked objects:
 42087 ;;		On entry : 0/0
 42088 ;;		On exit  : 0/0
 42089 ;;		Unchanged: 0/0
 42090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42095 ;;Total ram usage:        4 bytes
 42096 ;; Hardware stack levels used:    1
 42097 ;; Hardware stack levels required when called:   10
 42098 ;; This function calls:
 42099 ;;		Nothing
 42100 ;; This function is called by:
 42101 ;;		__fill_buffer_get_display1
 42102 ;;		__fill_buffer_get_display2
 42103 ;; This function uses a non-reentrant model
 42104 ;;
 42105                           
 42106                           	psect	text207
 42107  012644                     __ptext207:
 42108                           	opt stack 0
 42109  012644                     _display_get_character:
 42110                           	opt stack 18
 42111                           
 42112                           ; BSR set to: 0
 42113                           ;incstack = 0
 42114                           ;display_get_character@line stored from wreg
 42115  012644  0100               	movlb	0	; () banked
 42116  012646  6F63               	movwf	display_get_character@line& (0+255),b
 42117                           
 42118                           ;display.c: 25: return display_content[line][position];
 42119  012648  0100               	movlb	0	; () banked
 42120  01264A  5163               	movf	display_get_character@line& (0+255),w,b
 42121  01264C  0D14               	mullw	20
 42122  01264E  0E54               	movlw	low _display_content
 42123  012650  6F61               	movwf	??_display_get_character& (0+255),b
 42124  012652  0E03               	movlw	high _display_content
 42125  012654  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42126  012656  50F3               	movf	prodl,w,c
 42127  012658  2761               	addwf	??_display_get_character& (0+255),f,b
 42128  01265A  50F4               	movf	prodh,w,c
 42129  01265C  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42130  01265E  5160               	movf	display_get_character@position& (0+255),w,b
 42131  012660  0D01               	mullw	1
 42132  012662  50F3               	movf	prodl,w,c
 42133  012664  2561               	addwf	??_display_get_character& (0+255),w,b
 42134  012666  6ED9               	movwf	fsr2l,c
 42135  012668  50F4               	movf	prodh,w,c
 42136  01266A  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42137  01266C  6EDA               	movwf	fsr2h,c
 42138  01266E  50DF               	movf	indf2,w,c
 42139  012670  0012               	return	
 42140  012672                     __end_of_display_get_character:
 42141                           	opt stack 0
 42142                           tosu	equ	0xFFF
 42143                           tosh	equ	0xFFE
 42144                           tosl	equ	0xFFD
 42145                           pclath	equ	0xFFA
 42146                           tblptru	equ	0xFF8
 42147                           tblptrh	equ	0xFF7
 42148                           tblptrl	equ	0xFF6
 42149                           tablat	equ	0xFF5
 42150                           prodh	equ	0xFF4
 42151                           prodl	equ	0xFF3
 42152                           intcon	equ	0xFF2
 42153                           intcon2	equ	0xFF1
 42154                           intcon3	equ	0xFF0
 42155                           postinc0	equ	0xFEE
 42156                           wreg	equ	0xFE8
 42157                           indf1	equ	0xFE7
 42158                           postinc1	equ	0xFE6
 42159                           postdec1	equ	0xFE5
 42160                           plusw1	equ	0xFE3
 42161                           fsr1h	equ	0xFE2
 42162                           fsr1l	equ	0xFE1
 42163                           indf2	equ	0xFDF
 42164                           postinc2	equ	0xFDE
 42165                           postdec2	equ	0xFDD
 42166                           plusw2	equ	0xFDB
 42167                           fsr2h	equ	0xFDA
 42168                           fsr2l	equ	0xFD9
 42169                           status	equ	0xFD8
 42170                           
 42171 ;; *************** function __fill_buffer_get_calibration2 *****************
 42172 ;; Defined at:
 42173 ;;		line 388 in file "app_device_custom_hid.c"
 42174 ;; Parameters:    Size  Location     Type
 42175 ;;		None
 42176 ;; Auto vars:     Size  Location     Type
 42177 ;;		None
 42178 ;; Return value:  Size  Location     Type
 42179 ;;                  1    wreg      void 
 42180 ;; Registers used:
 42181 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42182 ;; Tracked objects:
 42183 ;;		On entry : 0/0
 42184 ;;		On exit  : 0/0
 42185 ;;		Unchanged: 0/0
 42186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42191 ;;Total ram usage:        0 bytes
 42192 ;; Hardware stack levels used:    1
 42193 ;; Hardware stack levels required when called:   11
 42194 ;; This function calls:
 42195 ;;		_memcpy
 42196 ;; This function is called by:
 42197 ;;		_APP_DeviceCustomHIDTasks
 42198 ;; This function uses a non-reentrant model
 42199 ;;
 42200                           
 42201                           	psect	text208
 42202  01150E                     __ptext208:
 42203                           	opt stack 0
 42204  01150E                     __fill_buffer_get_calibration2:
 42205                           	opt stack 18
 42206                           
 42207                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 42208                           
 42209                           ; BSR set to: 0
 42210                           ;incstack = 0
 42211  01150E  0E14               	movlw	20
 42212  011510  0103               	movlb	3	; () banked
 42213  011512  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42214                           
 42215                           ; BSR set to: 3
 42216                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 42217  011514  0EA5               	movlw	low (_ToSendDataBuffer+1)
 42218  011516  0100               	movlb	0	; () banked
 42219  011518  6F60               	movwf	memcpy@d1& (0+255),b
 42220  01151A  0E03               	movlw	high (_ToSendDataBuffer+1)
 42221  01151C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42222  01151E  0E30               	movlw	low (_calibrationParameters+48)
 42223  011520  6F62               	movwf	memcpy@s1& (0+255),b
 42224  011522  0E03               	movlw	high (_calibrationParameters+48)
 42225  011524  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42226  011526  0E00               	movlw	0
 42227  011528  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42228  01152A  0E0C               	movlw	12
 42229  01152C  6F64               	movwf	memcpy@n& (0+255),b
 42230  01152E  EC1A  F08B         	call	_memcpy	;wreg free
 42231                           
 42232                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 42233  011532  0EB1               	movlw	low (_ToSendDataBuffer+13)
 42234  011534  0100               	movlb	0	; () banked
 42235  011536  6F60               	movwf	memcpy@d1& (0+255),b
 42236  011538  0E03               	movlw	high (_ToSendDataBuffer+13)
 42237  01153A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42238  01153C  0E3C               	movlw	low (_calibrationParameters+60)
 42239  01153E  6F62               	movwf	memcpy@s1& (0+255),b
 42240  011540  0E03               	movlw	high (_calibrationParameters+60)
 42241  011542  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42242  011544  0E00               	movlw	0
 42243  011546  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42244  011548  0E0C               	movlw	12
 42245  01154A  6F64               	movwf	memcpy@n& (0+255),b
 42246  01154C  EC1A  F08B         	call	_memcpy	;wreg free
 42247                           
 42248                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 42249  011550  0EBD               	movlw	low (_ToSendDataBuffer+25)
 42250  011552  0100               	movlb	0	; () banked
 42251  011554  6F60               	movwf	memcpy@d1& (0+255),b
 42252  011556  0E03               	movlw	high (_ToSendDataBuffer+25)
 42253  011558  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42254  01155A  0E48               	movlw	low (_calibrationParameters+72)
 42255  01155C  6F62               	movwf	memcpy@s1& (0+255),b
 42256  01155E  0E03               	movlw	high (_calibrationParameters+72)
 42257  011560  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42258  011562  0E00               	movlw	0
 42259  011564  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42260  011566  0E0C               	movlw	12
 42261  011568  6F64               	movwf	memcpy@n& (0+255),b
 42262  01156A  EC1A  F08B         	call	_memcpy	;wreg free
 42263  01156E  0012               	return		;funcret
 42264  011570                     __end_of__fill_buffer_get_calibration2:
 42265                           	opt stack 0
 42266                           tosu	equ	0xFFF
 42267                           tosh	equ	0xFFE
 42268                           tosl	equ	0xFFD
 42269                           pclath	equ	0xFFA
 42270                           tblptru	equ	0xFF8
 42271                           tblptrh	equ	0xFF7
 42272                           tblptrl	equ	0xFF6
 42273                           tablat	equ	0xFF5
 42274                           prodh	equ	0xFF4
 42275                           prodl	equ	0xFF3
 42276                           intcon	equ	0xFF2
 42277                           intcon2	equ	0xFF1
 42278                           intcon3	equ	0xFF0
 42279                           postinc0	equ	0xFEE
 42280                           wreg	equ	0xFE8
 42281                           indf1	equ	0xFE7
 42282                           postinc1	equ	0xFE6
 42283                           postdec1	equ	0xFE5
 42284                           plusw1	equ	0xFE3
 42285                           fsr1h	equ	0xFE2
 42286                           fsr1l	equ	0xFE1
 42287                           indf2	equ	0xFDF
 42288                           postinc2	equ	0xFDE
 42289                           postdec2	equ	0xFDD
 42290                           plusw2	equ	0xFDB
 42291                           fsr2h	equ	0xFDA
 42292                           fsr2l	equ	0xFD9
 42293                           status	equ	0xFD8
 42294                           
 42295 ;; *************** function __fill_buffer_get_calibration1 *****************
 42296 ;; Defined at:
 42297 ;;		line 376 in file "app_device_custom_hid.c"
 42298 ;; Parameters:    Size  Location     Type
 42299 ;;		None
 42300 ;; Auto vars:     Size  Location     Type
 42301 ;;		None
 42302 ;; Return value:  Size  Location     Type
 42303 ;;                  1    wreg      void 
 42304 ;; Registers used:
 42305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42306 ;; Tracked objects:
 42307 ;;		On entry : 0/0
 42308 ;;		On exit  : 0/0
 42309 ;;		Unchanged: 0/0
 42310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42315 ;;Total ram usage:        0 bytes
 42316 ;; Hardware stack levels used:    1
 42317 ;; Hardware stack levels required when called:   11
 42318 ;; This function calls:
 42319 ;;		_memcpy
 42320 ;; This function is called by:
 42321 ;;		_APP_DeviceCustomHIDTasks
 42322 ;; This function uses a non-reentrant model
 42323 ;;
 42324                           
 42325                           	psect	text209
 42326  010BD8                     __ptext209:
 42327                           	opt stack 0
 42328  010BD8                     __fill_buffer_get_calibration1:
 42329                           	opt stack 18
 42330                           
 42331                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 42332                           
 42333                           ;incstack = 0
 42334  010BD8  0E13               	movlw	19
 42335  010BDA  0103               	movlb	3	; () banked
 42336  010BDC  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42337                           
 42338                           ; BSR set to: 3
 42339                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 42340  010BDE  0EA5               	movlw	low (_ToSendDataBuffer+1)
 42341  010BE0  0100               	movlb	0	; () banked
 42342  010BE2  6F60               	movwf	memcpy@d1& (0+255),b
 42343  010BE4  0E03               	movlw	high (_ToSendDataBuffer+1)
 42344  010BE6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42345  010BE8  0E00               	movlw	low _calibrationParameters
 42346  010BEA  6F62               	movwf	memcpy@s1& (0+255),b
 42347  010BEC  0E03               	movlw	high _calibrationParameters
 42348  010BEE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42349  010BF0  0E00               	movlw	0
 42350  010BF2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42351  010BF4  0E0C               	movlw	12
 42352  010BF6  6F64               	movwf	memcpy@n& (0+255),b
 42353  010BF8  EC1A  F08B         	call	_memcpy	;wreg free
 42354                           
 42355                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 42356  010BFC  0EB1               	movlw	low (_ToSendDataBuffer+13)
 42357  010BFE  0100               	movlb	0	; () banked
 42358  010C00  6F60               	movwf	memcpy@d1& (0+255),b
 42359  010C02  0E03               	movlw	high (_ToSendDataBuffer+13)
 42360  010C04  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42361  010C06  0E0C               	movlw	low (_calibrationParameters+12)
 42362  010C08  6F62               	movwf	memcpy@s1& (0+255),b
 42363  010C0A  0E03               	movlw	high (_calibrationParameters+12)
 42364  010C0C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42365  010C0E  0E00               	movlw	0
 42366  010C10  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42367  010C12  0E0C               	movlw	12
 42368  010C14  6F64               	movwf	memcpy@n& (0+255),b
 42369  010C16  EC1A  F08B         	call	_memcpy	;wreg free
 42370                           
 42371                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 42372  010C1A  0EBD               	movlw	low (_ToSendDataBuffer+25)
 42373  010C1C  0100               	movlb	0	; () banked
 42374  010C1E  6F60               	movwf	memcpy@d1& (0+255),b
 42375  010C20  0E03               	movlw	high (_ToSendDataBuffer+25)
 42376  010C22  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42377  010C24  0E18               	movlw	low (_calibrationParameters+24)
 42378  010C26  6F62               	movwf	memcpy@s1& (0+255),b
 42379  010C28  0E03               	movlw	high (_calibrationParameters+24)
 42380  010C2A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42381  010C2C  0E00               	movlw	0
 42382  010C2E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42383  010C30  0E0C               	movlw	12
 42384  010C32  6F64               	movwf	memcpy@n& (0+255),b
 42385  010C34  EC1A  F08B         	call	_memcpy	;wreg free
 42386                           
 42387                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 42388  010C38  0EC9               	movlw	low (_ToSendDataBuffer+37)
 42389  010C3A  0100               	movlb	0	; () banked
 42390  010C3C  6F60               	movwf	memcpy@d1& (0+255),b
 42391  010C3E  0E03               	movlw	high (_ToSendDataBuffer+37)
 42392  010C40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42393  010C42  0E24               	movlw	low (_calibrationParameters+36)
 42394  010C44  6F62               	movwf	memcpy@s1& (0+255),b
 42395  010C46  0E03               	movlw	high (_calibrationParameters+36)
 42396  010C48  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42397  010C4A  0E00               	movlw	0
 42398  010C4C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42399  010C4E  0E0C               	movlw	12
 42400  010C50  6F64               	movwf	memcpy@n& (0+255),b
 42401  010C52  EC1A  F08B         	call	_memcpy	;wreg free
 42402  010C56  0012               	return		;funcret
 42403  010C58                     __end_of__fill_buffer_get_calibration1:
 42404                           	opt stack 0
 42405                           tosu	equ	0xFFF
 42406                           tosh	equ	0xFFE
 42407                           tosl	equ	0xFFD
 42408                           pclath	equ	0xFFA
 42409                           tblptru	equ	0xFF8
 42410                           tblptrh	equ	0xFF7
 42411                           tblptrl	equ	0xFF6
 42412                           tablat	equ	0xFF5
 42413                           prodh	equ	0xFF4
 42414                           prodl	equ	0xFF3
 42415                           intcon	equ	0xFF2
 42416                           intcon2	equ	0xFF1
 42417                           intcon3	equ	0xFF0
 42418                           postinc0	equ	0xFEE
 42419                           wreg	equ	0xFE8
 42420                           indf1	equ	0xFE7
 42421                           postinc1	equ	0xFE6
 42422                           postdec1	equ	0xFE5
 42423                           plusw1	equ	0xFE3
 42424                           fsr1h	equ	0xFE2
 42425                           fsr1l	equ	0xFE1
 42426                           indf2	equ	0xFDF
 42427                           postinc2	equ	0xFDE
 42428                           postdec2	equ	0xFDD
 42429                           plusw2	equ	0xFDB
 42430                           fsr2h	equ	0xFDA
 42431                           fsr2l	equ	0xFD9
 42432                           status	equ	0xFD8
 42433                           
 42434 ;; *************** function _memcpy *****************
 42435 ;; Defined at:
 42436 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 42437 ;; Parameters:    Size  Location     Type
 42438 ;;  d1              2    0[BANK0 ] PTR void 
 42439 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42440 ;;		 -> SetupPkt(8), 
 42441 ;;  s1              2    2[BANK0 ] PTR const void 
 42442 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42443 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 42444 ;;		 -> SetupPkt(8), 
 42445 ;;  n               2    4[BANK0 ] unsigned int 
 42446 ;; Auto vars:     Size  Location     Type
 42447 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 42448 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42449 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 42450 ;;		 -> SetupPkt(8), 
 42451 ;;  d               2    6[BANK0 ] PTR unsigned char 
 42452 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42453 ;;		 -> SetupPkt(8), 
 42454 ;;  tmp             1   10[BANK0 ] unsigned char 
 42455 ;; Return value:  Size  Location     Type
 42456 ;;                  2    0[BANK0 ] PTR void 
 42457 ;; Registers used:
 42458 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42459 ;; Tracked objects:
 42460 ;;		On entry : 0/0
 42461 ;;		On exit  : 0/0
 42462 ;;		Unchanged: 0/0
 42463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42464 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42465 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42467 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42468 ;;Total ram usage:       11 bytes
 42469 ;; Hardware stack levels used:    1
 42470 ;; Hardware stack levels required when called:   10
 42471 ;; This function calls:
 42472 ;;		Nothing
 42473 ;; This function is called by:
 42474 ;;		_MSDProcessCommandMediaPresent
 42475 ;;		__fill_buffer_get_calibration1
 42476 ;;		__fill_buffer_get_calibration2
 42477 ;;		__flash_set_page_size
 42478 ;;		_fat_create_file
 42479 ;; This function uses a non-reentrant model
 42480 ;;
 42481                           
 42482                           	psect	text210
 42483  011634                     __ptext210:
 42484                           	opt stack 0
 42485  011634                     _memcpy:
 42486                           	opt stack 17
 42487                           
 42488                           ;incstack = 0
 42489  011634  C062  F068         	movff	memcpy@s1,memcpy@s
 42490  011638  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 42491  01163C  C060  F066         	movff	memcpy@d1,memcpy@d
 42492  011640  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 42493  011644  D01D               	goto	l3741
 42494  011646                     l11718:
 42495  011646  C068  FFF6         	movff	memcpy@s,tblptrl
 42496  01164A  C069  FFF7         	movff	memcpy@s+1,tblptrh
 42497  01164E  0E00               	movlw	low (__mediumconst shr (0+16))
 42498  011650  6EF8               	movwf	tblptru,c
 42499  011652  0E0E               	movlw	(high __ramtop+-1)
 42500  011654  64F7               	cpfsgt	tblptrh,c
 42501  011656  D003               	bra	u8957
 42502  011658  0008               	tblrd		*
 42503  01165A  50F5               	movf	tablat,w,c
 42504  01165C  D005               	bra	u8950
 42505  01165E                     u8957:
 42506  01165E  CFF6 FFE9          	movff	tblptrl,fsr0l
 42507  011662  CFF7 FFEA          	movff	tblptrh,fsr0h
 42508  011666  50EF               	movf	indf0,w,c
 42509  011668                     u8950:
 42510  011668  0100               	movlb	0	; () banked
 42511  01166A  6F6A               	movwf	memcpy@tmp& (0+255),b
 42512                           
 42513                           ; BSR set to: 0
 42514  01166C  4B68               	infsnz	memcpy@s& (0+255),f,b
 42515  01166E  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 42516                           
 42517                           ; BSR set to: 0
 42518  011670  C066  FFD9         	movff	memcpy@d,fsr2l
 42519  011674  C067  FFDA         	movff	memcpy@d+1,fsr2h
 42520  011678  C06A  FFDF         	movff	memcpy@tmp,indf2
 42521                           
 42522                           ; BSR set to: 0
 42523  01167C  4B66               	infsnz	memcpy@d& (0+255),f,b
 42524  01167E  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 42525  011680                     l3741:
 42526                           
 42527                           ; BSR set to: 0
 42528  011680  0100               	movlb	0	; () banked
 42529  011682  0764               	decf	memcpy@n& (0+255),f,b
 42530  011684  A0D8               	btfss	status,0,c
 42531  011686  0765               	decf	(memcpy@n+1)& (0+255),f,b
 42532  011688  2964               	incf	memcpy@n& (0+255),w,b
 42533  01168A  E1DD               	bnz	l11718
 42534  01168C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 42535  01168E  B4D8               	btfsc	status,2,c
 42536  011690  0012               	return	
 42537  011692  D7D9               	goto	l3742
 42538  011694                     __end_of_memcpy:
 42539                           	opt stack 0
 42540                           tosu	equ	0xFFF
 42541                           tosh	equ	0xFFE
 42542                           tosl	equ	0xFFD
 42543                           pclath	equ	0xFFA
 42544                           tblptru	equ	0xFF8
 42545                           tblptrh	equ	0xFF7
 42546                           tblptrl	equ	0xFF6
 42547                           tablat	equ	0xFF5
 42548                           prodh	equ	0xFF4
 42549                           prodl	equ	0xFF3
 42550                           intcon	equ	0xFF2
 42551                           intcon2	equ	0xFF1
 42552                           intcon3	equ	0xFF0
 42553                           indf0	equ	0xFEF
 42554                           postinc0	equ	0xFEE
 42555                           fsr0h	equ	0xFEA
 42556                           fsr0l	equ	0xFE9
 42557                           wreg	equ	0xFE8
 42558                           indf1	equ	0xFE7
 42559                           postinc1	equ	0xFE6
 42560                           postdec1	equ	0xFE5
 42561                           plusw1	equ	0xFE3
 42562                           fsr1h	equ	0xFE2
 42563                           fsr1l	equ	0xFE1
 42564                           indf2	equ	0xFDF
 42565                           postinc2	equ	0xFDE
 42566                           postdec2	equ	0xFDD
 42567                           plusw2	equ	0xFDB
 42568                           fsr2h	equ	0xFDA
 42569                           fsr2l	equ	0xFD9
 42570                           status	equ	0xFD8
 42571                           
 42572 ;; *************** function _USBTransferOnePacket *****************
 42573 ;; Defined at:
 42574 ;;		line 995 in file "usb_device.c"
 42575 ;; Parameters:    Size  Location     Type
 42576 ;;  ep              1    wreg     unsigned char 
 42577 ;;  dir             1    0[BANK0 ] unsigned char 
 42578 ;;  data            2    1[BANK0 ] PTR unsigned char 
 42579 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 42580 ;;		 -> msd_cbw(31), NULL(0), 
 42581 ;;  len             1    3[BANK0 ] unsigned char 
 42582 ;; Auto vars:     Size  Location     Type
 42583 ;;  ep              1    8[BANK0 ] unsigned char 
 42584 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 42585 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 42586 ;; Return value:  Size  Location     Type
 42587 ;;                  2    0[BANK0 ] PTR void 
 42588 ;; Registers used:
 42589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42590 ;; Tracked objects:
 42591 ;;		On entry : 0/0
 42592 ;;		On exit  : 0/0
 42593 ;;		Unchanged: 0/0
 42594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42595 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42596 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42598 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42599 ;;Total ram usage:       11 bytes
 42600 ;; Hardware stack levels used:    1
 42601 ;; Hardware stack levels required when called:   10
 42602 ;; This function calls:
 42603 ;;		Nothing
 42604 ;; This function is called by:
 42605 ;;		_MSDTasks
 42606 ;;		_MSDProcessCommandMediaPresent
 42607 ;;		_MSDReadHandler
 42608 ;;		_MSDWriteHandler
 42609 ;;		_APP_DeviceCustomHIDTasks
 42610 ;; This function uses a non-reentrant model
 42611 ;;
 42612                           
 42613                           	psect	text211
 42614  00E7BE                     __ptext211:
 42615                           	opt stack 0
 42616  00E7BE                     _USBTransferOnePacket:
 42617                           	opt stack 18
 42618                           
 42619                           ; BSR set to: 0
 42620                           ;incstack = 0
 42621                           ;USBTransferOnePacket@ep stored from wreg
 42622  00E7BE  0100               	movlb	0	; () banked
 42623  00E7C0  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 42624                           
 42625                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 42626                           ;usb_device.c: 1000: if(dir != 0)
 42627  00E7C2  0100               	movlb	0	; () banked
 42628  00E7C4  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 42629  00E7C6  B4D8               	btfsc	status,2,c
 42630  00E7C8  D007               	goto	l186
 42631                           
 42632                           ; BSR set to: 0
 42633                           ;usb_device.c: 1001: {
 42634                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 42635  00E7CA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42636  00E7CC  0D02               	mullw	2
 42637  00E7CE  0E3B               	movlw	low _pBDTEntryIn
 42638  00E7D0  24F3               	addwf	prodl,w,c
 42639  00E7D2  6ED9               	movwf	fsr2l,c
 42640  00E7D4  0E00               	movlw	high _pBDTEntryIn
 42641  00E7D6  D006               	goto	L51
 42642  00E7D8                     l186:
 42643                           
 42644                           ; BSR set to: 0
 42645                           ;usb_device.c: 1005: else
 42646                           ;usb_device.c: 1006: {
 42647                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 42648                           
 42649                           ; BSR set to: 0
 42650  00E7D8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42651  00E7DA  0D02               	mullw	2
 42652  00E7DC  0ED3               	movlw	low _pBDTEntryOut
 42653  00E7DE  24F3               	addwf	prodl,w,c
 42654  00E7E0  6ED9               	movwf	fsr2l,c
 42655  00E7E2  0E01               	movlw	high _pBDTEntryOut
 42656  00E7E4                     L51:
 42657  00E7E4  20F4               	addwfc	prodh,w,c
 42658  00E7E6  6EDA               	movwf	fsr2h,c
 42659  00E7E8  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 42660  00E7EC  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 42661                           
 42662                           ; BSR set to: 0
 42663                           ;usb_device.c: 1009: }
 42664                           ;usb_device.c: 1013: if(handle == 0)
 42665                           
 42666                           ; BSR set to: 0
 42667  00E7F0  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42668  00E7F2  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42669  00E7F4  A4D8               	btfss	status,2,c
 42670  00E7F6  D005               	goto	l188
 42671                           
 42672                           ; BSR set to: 0
 42673                           ;usb_device.c: 1014: {
 42674                           ;usb_device.c: 1015: return 0;
 42675  00E7F8  0E00               	movlw	0
 42676  00E7FA  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 42677  00E7FC  0E00               	movlw	0
 42678  00E7FE  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 42679                           
 42680                           ; BSR set to: 0
 42681  00E800  0012               	return	
 42682  00E802                     l188:
 42683                           
 42684                           ; BSR set to: 0
 42685                           ;usb_device.c: 1016: }
 42686                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 42687                           
 42688                           ; BSR set to: 0
 42689  00E802  EE20 F002          	lfsr	2,2
 42690  00E806  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42691  00E808  26D9               	addwf	fsr2l,f,c
 42692  00E80A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42693  00E80C  22DA               	addwfc	fsr2h,f,c
 42694  00E80E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 42695  00E812  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 42696                           
 42697                           ;usb_device.c: 1030: handle->CNT = len;
 42698  00E816  EE20 F001          	lfsr	2,1
 42699  00E81A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42700  00E81C  26D9               	addwf	fsr2l,f,c
 42701  00E81E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42702  00E820  22DA               	addwfc	fsr2h,f,c
 42703  00E822  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 42704                           
 42705                           ; BSR set to: 0
 42706                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 42707  00E826  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42708  00E82A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42709  00E82E  0E40               	movlw	64
 42710  00E830  16DF               	andwf	indf2,f,c
 42711                           
 42712                           ; BSR set to: 0
 42713                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 42714  00E832  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42715  00E836  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42716  00E83A  0E00               	movlw	0
 42717  00E83C  86DB               	bsf	plusw2,3,c
 42718                           
 42719                           ; BSR set to: 0
 42720                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 42721  00E83E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42722  00E842  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42723  00E846  0E00               	movlw	0
 42724  00E848  8EDB               	bsf	plusw2,7,c
 42725                           
 42726                           ; BSR set to: 0
 42727                           ;usb_device.c: 1036: if(dir != 0)
 42728  00E84A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 42729  00E84C  B4D8               	btfsc	status,2,c
 42730  00E84E  D018               	goto	l190
 42731                           
 42732                           ; BSR set to: 0
 42733                           ;usb_device.c: 1037: {
 42734                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 42735  00E850  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42736  00E852  0D02               	mullw	2
 42737  00E854  0E3B               	movlw	low _pBDTEntryIn
 42738  00E856  24F3               	addwf	prodl,w,c
 42739  00E858  6ED9               	movwf	fsr2l,c
 42740  00E85A  0E00               	movlw	high _pBDTEntryIn
 42741  00E85C  20F4               	addwfc	prodh,w,c
 42742  00E85E  6EDA               	movwf	fsr2h,c
 42743  00E860  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 42744  00E864  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 42745  00E868  0E04               	movlw	4
 42746  00E86A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 42747  00E86C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 42748  00E86E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 42749  00E870  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 42750  00E872  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42751  00E874  0D02               	mullw	2
 42752  00E876  0E3B               	movlw	low _pBDTEntryIn
 42753  00E878  24F3               	addwf	prodl,w,c
 42754  00E87A  6ED9               	movwf	fsr2l,c
 42755  00E87C  0E00               	movlw	high _pBDTEntryIn
 42756  00E87E  D017               	goto	L52
 42757  00E880                     l190:
 42758                           
 42759                           ; BSR set to: 0
 42760                           ;usb_device.c: 1041: else
 42761                           ;usb_device.c: 1042: {
 42762                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 42763                           
 42764                           ; BSR set to: 0
 42765  00E880  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42766  00E882  0D02               	mullw	2
 42767  00E884  0ED3               	movlw	low _pBDTEntryOut
 42768  00E886  24F3               	addwf	prodl,w,c
 42769  00E888  6ED9               	movwf	fsr2l,c
 42770  00E88A  0E01               	movlw	high _pBDTEntryOut
 42771  00E88C  20F4               	addwfc	prodh,w,c
 42772  00E88E  6EDA               	movwf	fsr2h,c
 42773  00E890  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 42774  00E894  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 42775  00E898  0E04               	movlw	4
 42776  00E89A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 42777  00E89C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 42778  00E89E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 42779  00E8A0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 42780  00E8A2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42781  00E8A4  0D02               	mullw	2
 42782  00E8A6  0ED3               	movlw	low _pBDTEntryOut
 42783  00E8A8  24F3               	addwf	prodl,w,c
 42784  00E8AA  6ED9               	movwf	fsr2l,c
 42785  00E8AC  0E01               	movlw	high _pBDTEntryOut
 42786  00E8AE                     L52:
 42787  00E8AE  20F4               	addwfc	prodh,w,c
 42788  00E8B0  6EDA               	movwf	fsr2h,c
 42789  00E8B2  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 42790  00E8B6  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 42791                           
 42792                           ; BSR set to: 0
 42793                           ;usb_device.c: 1045: }
 42794                           ;usb_device.c: 1046: return (void*)handle;
 42795                           
 42796                           ; BSR set to: 0
 42797  00E8BA  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 42798  00E8BE  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 42799  00E8C2  0012               	return	
 42800  00E8C4                     __end_of_USBTransferOnePacket:
 42801                           	opt stack 0
 42802                           tosu	equ	0xFFF
 42803                           tosh	equ	0xFFE
 42804                           tosl	equ	0xFFD
 42805                           pclath	equ	0xFFA
 42806                           tblptru	equ	0xFF8
 42807                           tblptrh	equ	0xFF7
 42808                           tblptrl	equ	0xFF6
 42809                           tablat	equ	0xFF5
 42810                           prodh	equ	0xFF4
 42811                           prodl	equ	0xFF3
 42812                           intcon	equ	0xFF2
 42813                           intcon2	equ	0xFF1
 42814                           intcon3	equ	0xFF0
 42815                           indf0	equ	0xFEF
 42816                           postinc0	equ	0xFEE
 42817                           fsr0h	equ	0xFEA
 42818                           fsr0l	equ	0xFE9
 42819                           wreg	equ	0xFE8
 42820                           indf1	equ	0xFE7
 42821                           postinc1	equ	0xFE6
 42822                           postdec1	equ	0xFE5
 42823                           plusw1	equ	0xFE3
 42824                           fsr1h	equ	0xFE2
 42825                           fsr1l	equ	0xFE1
 42826                           indf2	equ	0xFDF
 42827                           postinc2	equ	0xFDE
 42828                           postdec2	equ	0xFDD
 42829                           plusw2	equ	0xFDB
 42830                           fsr2h	equ	0xFDA
 42831                           fsr2l	equ	0xFD9
 42832                           status	equ	0xFD8
 42833                           
 42834 ;; *************** function _SYS_InterruptHigh *****************
 42835 ;; Defined at:
 42836 ;;		line 269 in file "system.c"
 42837 ;; Parameters:    Size  Location     Type
 42838 ;;		None
 42839 ;; Auto vars:     Size  Location     Type
 42840 ;;		None
 42841 ;; Return value:  Size  Location     Type
 42842 ;;                  1    wreg      void 
 42843 ;; Registers used:
 42844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 42845 ;; Tracked objects:
 42846 ;;		On entry : 0/0
 42847 ;;		On exit  : 0/0
 42848 ;;		Unchanged: 0/0
 42849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42852 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42853 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42854 ;;Total ram usage:       18 bytes
 42855 ;; Hardware stack levels used:    1
 42856 ;; Hardware stack levels required when called:    9
 42857 ;; This function calls:
 42858 ;;		_USBDeviceTasks
 42859 ;;		_tmr_isr
 42860 ;; This function is called by:
 42861 ;;		Interrupt level 2
 42862 ;; This function uses a non-reentrant model
 42863 ;;
 42864                           
 42865                           	psect	intcode
 42866  009008                     __pintcode:
 42867                           	opt stack 0
 42868  009008                     _SYS_InterruptHigh:
 42869                           	opt stack 9
 42870                           
 42871                           ; BSR set to: 0
 42872                           ;incstack = 0
 42873  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 42874  00900A  CFFA F020          	movff	pclath,??_SYS_InterruptHigh
 42875  00900E  CFFB F021          	movff	pclatu,??_SYS_InterruptHigh+1
 42876  009012  CFE9 F022          	movff	fsr0l,??_SYS_InterruptHigh+2
 42877  009016  CFEA F023          	movff	fsr0h,??_SYS_InterruptHigh+3
 42878  00901A  CFE1 F024          	movff	fsr1l,??_SYS_InterruptHigh+4
 42879  00901E  CFE2 F025          	movff	fsr1h,??_SYS_InterruptHigh+5
 42880  009022  CFD9 F026          	movff	fsr2l,??_SYS_InterruptHigh+6
 42881  009026  CFDA F027          	movff	fsr2h,??_SYS_InterruptHigh+7
 42882  00902A  CFF3 F028          	movff	prodl,??_SYS_InterruptHigh+8
 42883  00902E  CFF4 F029          	movff	prodh,??_SYS_InterruptHigh+9
 42884  009032  CFF6 F02A          	movff	tblptrl,??_SYS_InterruptHigh+10
 42885  009036  CFF7 F02B          	movff	tblptrh,??_SYS_InterruptHigh+11
 42886  00903A  CFF8 F02C          	movff	tblptru,??_SYS_InterruptHigh+12
 42887  00903E  CFF5 F02D          	movff	tablat,??_SYS_InterruptHigh+13
 42888  009042  C05F  F02E         	movff	btemp,??_SYS_InterruptHigh+14
 42889  009046  C060  F02F         	movff	btemp+1,??_SYS_InterruptHigh+15
 42890  00904A  C061  F030         	movff	btemp+2,??_SYS_InterruptHigh+16
 42891  00904E  C062  F031         	movff	btemp+3,??_SYS_InterruptHigh+17
 42892                           
 42893                           ;system.c: 272: USBDeviceTasks();
 42894  009052  EC19  F06D         	call	_USBDeviceTasks	;wreg free
 42895                           
 42896                           ;system.c: 276: tmr_isr();
 42897  009056  EC9A  F081         	call	_tmr_isr	;wreg free
 42898  00905A  C031  F062         	movff	??_SYS_InterruptHigh+17,btemp+3
 42899  00905E  C030  F061         	movff	??_SYS_InterruptHigh+16,btemp+2
 42900  009062  C02F  F060         	movff	??_SYS_InterruptHigh+15,btemp+1
 42901  009066  C02E  F05F         	movff	??_SYS_InterruptHigh+14,btemp
 42902  00906A  C02D  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 42903  00906E  C02C  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 42904  009072  C02B  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 42905  009076  C02A  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 42906  00907A  C029  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 42907  00907E  C028  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 42908  009082  C027  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 42909  009086  C026  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 42910  00908A  C025  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 42911  00908E  C024  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 42912  009092  C023  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 42913  009096  C022  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 42914  00909A  C021  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 42915  00909E  C020  FFFA         	movff	??_SYS_InterruptHigh,pclath
 42916  0090A2  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 42917  0090A4  0011               	retfie		f
 42918  0090A6                     __end_of_SYS_InterruptHigh:
 42919                           	opt stack 0
 42920                           tosu	equ	0xFFF
 42921                           tosh	equ	0xFFE
 42922                           tosl	equ	0xFFD
 42923                           pclatu	equ	0xFFB
 42924                           pclath	equ	0xFFA
 42925                           tblptru	equ	0xFF8
 42926                           tblptrh	equ	0xFF7
 42927                           tblptrl	equ	0xFF6
 42928                           tablat	equ	0xFF5
 42929                           prodh	equ	0xFF4
 42930                           prodl	equ	0xFF3
 42931                           intcon	equ	0xFF2
 42932                           intcon2	equ	0xFF1
 42933                           intcon3	equ	0xFF0
 42934                           indf0	equ	0xFEF
 42935                           postinc0	equ	0xFEE
 42936                           fsr0h	equ	0xFEA
 42937                           fsr0l	equ	0xFE9
 42938                           wreg	equ	0xFE8
 42939                           indf1	equ	0xFE7
 42940                           postinc1	equ	0xFE6
 42941                           postdec1	equ	0xFE5
 42942                           plusw1	equ	0xFE3
 42943                           fsr1h	equ	0xFE2
 42944                           fsr1l	equ	0xFE1
 42945                           indf2	equ	0xFDF
 42946                           postinc2	equ	0xFDE
 42947                           postdec2	equ	0xFDD
 42948                           plusw2	equ	0xFDB
 42949                           fsr2h	equ	0xFDA
 42950                           fsr2l	equ	0xFD9
 42951                           status	equ	0xFD8
 42952                           
 42953 ;; *************** function _tmr_isr *****************
 42954 ;; Defined at:
 42955 ;;		line 46 in file "os.c"
 42956 ;; Parameters:    Size  Location     Type
 42957 ;;		None
 42958 ;; Auto vars:     Size  Location     Type
 42959 ;;		None
 42960 ;; Return value:  Size  Location     Type
 42961 ;;                  1    wreg      void 
 42962 ;; Registers used:
 42963 ;;		wreg, status,2, status,0
 42964 ;; Tracked objects:
 42965 ;;		On entry : 0/0
 42966 ;;		On exit  : 0/0
 42967 ;;		Unchanged: 0/0
 42968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42973 ;;Total ram usage:        0 bytes
 42974 ;; Hardware stack levels used:    1
 42975 ;; This function calls:
 42976 ;;		Nothing
 42977 ;; This function is called by:
 42978 ;;		_SYS_InterruptHigh
 42979 ;; This function uses a non-reentrant model
 42980 ;;
 42981                           
 42982                           	psect	text213
 42983  010334                     __ptext213:
 42984                           	opt stack 0
 42985  010334                     _tmr_isr:
 42986                           	opt stack 17
 42987                           
 42988                           ;os.c: 49: if(INTCONbits.T0IF)
 42989                           
 42990                           ;incstack = 0
 42991  010334  A4F2               	btfss	intcon,2,c	;volatile
 42992  010336  D035               	goto	i2l1322
 42993                           
 42994                           ;os.c: 50: {
 42995                           ;os.c: 52: if(os.done)
 42996  010338  0102               	movlb	2	; () banked
 42997  01033A  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 42998  01033C  A4D8               	btfss	status,2,c
 42999  01033E  D00D               	goto	i2l1324
 43000  010340  D025               	goto	i2l1330
 43001  010342                     i2l1325:
 43002                           
 43003                           ; BSR set to: 2
 43004                           ;os.c: 58: TMR0H = 0xFF;
 43005  010342  68D7               	setf	4055,c	;volatile
 43006                           
 43007                           ; BSR set to: 2
 43008                           ;os.c: 59: TMR0L = 0x80;
 43009  010344  0E80               	movlw	128
 43010  010346  D007               	goto	L54
 43011  010348                     
 43012                           ; BSR set to: 2
 43013                           ;os.c: 62: TMR0H = 0xF8;
 43014                           
 43015                           ; BSR set to: 2
 43016  010348  0EF8               	movlw	248
 43017  01034A  6ED7               	movwf	4055,c	;volatile
 43018                           
 43019                           ;os.c: 63: TMR0L = 0x30;
 43020  01034C  0E30               	movlw	48
 43021  01034E  D003               	goto	L54
 43022  010350                     
 43023                           ; BSR set to: 2
 43024                           ;os.c: 66: TMR0H = 0xD1;
 43025                           
 43026                           ; BSR set to: 2
 43027  010350  0ED1               	movlw	209
 43028  010352  6ED7               	movwf	4055,c	;volatile
 43029                           
 43030                           ;os.c: 67: TMR0L = 0x20;
 43031  010354  0E20               	movlw	32
 43032  010356                     L54:
 43033  010356  6ED6               	movwf	4054,c	;volatile
 43034                           
 43035                           ; BSR set to: 2
 43036                           ;os.c: 69: }
 43037                           
 43038                           ;os.c: 68: break;
 43039  010358  D00A               	goto	i2l1326
 43040  01035A                     i2l1324:
 43041                           
 43042                           ; BSR set to: 2
 43043                           
 43044                           ; BSR set to: 2
 43045  01035A  5100               	movf	_os& (0+255),w,b	;volatile
 43046                           
 43047                           ; Switch size 1, requested type "space"
 43048                           ; Number of cases is 3, Range of values is 0 to 2
 43049                           ; switch strategies available:
 43050                           ; Name         Instructions Cycles
 43051                           ; simple_byte           10     6 (average)
 43052                           ;	Chosen strategy is simple_byte
 43053  01035C  0A00               	xorlw	0	; case 0
 43054  01035E  B4D8               	btfsc	status,2,c
 43055  010360  D7F0               	goto	i2l1325
 43056  010362  0A01               	xorlw	1	; case 1
 43057  010364  B4D8               	btfsc	status,2,c
 43058  010366  D7F0               	goto	i2l1327
 43059  010368  0A03               	xorlw	3	; case 2
 43060  01036A  B4D8               	btfsc	status,2,c
 43061  01036C  D7F1               	goto	i2l1328
 43062  01036E                     i2l1326:
 43063                           
 43064                           ; BSR set to: 2
 43065                           ;os.c: 71: ++os.timeSlot;
 43066                           
 43067                           ; BSR set to: 2
 43068  01036E  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 43069                           
 43070                           ; BSR set to: 2
 43071                           ;os.c: 76: os.done = 0;
 43072  010370  0E00               	movlw	0
 43073  010372  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 43074                           
 43075                           ;os.c: 77: }
 43076  010374  D015               	goto	i2l1332
 43077  010376                     i2l1331:
 43078                           
 43079                           ; BSR set to: 2
 43080                           ;os.c: 84: TMR0H = 0xFF;
 43081  010376  68D7               	setf	4055,c	;volatile
 43082                           
 43083                           ; BSR set to: 2
 43084                           ;os.c: 85: TMR0L = 0xE0;
 43085  010378  0EE0               	movlw	224
 43086  01037A  D006               	goto	L56
 43087  01037C                     i2l1333:
 43088                           
 43089                           ; BSR set to: 2
 43090                           ;os.c: 88: TMR0H = 0xFF;
 43091  01037C  68D7               	setf	4055,c	;volatile
 43092                           
 43093                           ; BSR set to: 2
 43094                           ;os.c: 89: TMR0L = 0x06;
 43095  01037E  0E06               	movlw	6
 43096  010380  D003               	goto	L56
 43097  010382                     
 43098                           ; BSR set to: 2
 43099                           ;os.c: 92: TMR0H = 0xFA;
 43100                           
 43101                           ; BSR set to: 2
 43102  010382  0EFA               	movlw	250
 43103  010384  6ED7               	movwf	4055,c	;volatile
 43104                           
 43105                           ;os.c: 93: TMR0L = 0x24;
 43106  010386  0E24               	movlw	36
 43107  010388                     L56:
 43108  010388  6ED6               	movwf	4054,c	;volatile
 43109                           
 43110                           ; BSR set to: 2
 43111                           ;os.c: 95: }
 43112                           
 43113                           ;os.c: 94: break;
 43114  01038A  D00A               	goto	i2l1332
 43115  01038C                     i2l1330:
 43116                           
 43117                           ; BSR set to: 2
 43118                           
 43119                           ; BSR set to: 2
 43120  01038C  5100               	movf	_os& (0+255),w,b	;volatile
 43121                           
 43122                           ; Switch size 1, requested type "space"
 43123                           ; Number of cases is 3, Range of values is 0 to 2
 43124                           ; switch strategies available:
 43125                           ; Name         Instructions Cycles
 43126                           ; simple_byte           10     6 (average)
 43127                           ;	Chosen strategy is simple_byte
 43128  01038E  0A00               	xorlw	0	; case 0
 43129  010390  B4D8               	btfsc	status,2,c
 43130  010392  D7F1               	goto	i2l1331
 43131  010394  0A01               	xorlw	1	; case 1
 43132  010396  B4D8               	btfsc	status,2,c
 43133  010398  D7F1               	goto	i2l1333
 43134  01039A  0A03               	xorlw	3	; case 2
 43135  01039C  B4D8               	btfsc	status,2,c
 43136  01039E  D7F1               	goto	i2l1334
 43137  0103A0                     i2l1332:
 43138                           
 43139                           ; BSR set to: 2
 43140                           ;os.c: 96: }
 43141                           ;os.c: 97: INTCONbits.T0IF = 0;
 43142                           
 43143                           ; BSR set to: 2
 43144  0103A0  94F2               	bcf	intcon,2,c	;volatile
 43145  0103A2                     i2l1322:
 43146                           
 43147                           ;os.c: 98: }
 43148                           ;os.c: 101: if(INTCON3bits.INT1IF)
 43149  0103A2  A0F0               	btfss	intcon3,0,c	;volatile
 43150  0103A4  D003               	goto	i2l1335
 43151                           
 43152                           ;os.c: 102: {
 43153                           ;os.c: 103: ++os.buttonCount;
 43154  0103A6  0102               	movlb	2	; () banked
 43155  0103A8  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 43156                           
 43157                           ; BSR set to: 2
 43158                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 43159  0103AA  90F0               	bcf	intcon3,0,c	;volatile
 43160  0103AC                     i2l1335:
 43161                           
 43162                           ;os.c: 105: }
 43163                           ;os.c: 108: if(INTCON3bits.INT2IF)
 43164                           
 43165                           ; BSR set to: 2
 43166  0103AC  A2F0               	btfss	intcon3,1,c	;volatile
 43167  0103AE  D005               	goto	i2l1336
 43168                           
 43169                           ;os.c: 109: {
 43170                           ;os.c: 110: if(!PORTBbits.RB6)
 43171  0103B0  BC81               	btfsc	3969,6,c	;volatile
 43172  0103B2  D002               	goto	i2l1337
 43173                           
 43174                           ;os.c: 111: {
 43175                           ;os.c: 112: --os.encoderCount;
 43176  0103B4  0102               	movlb	2	; () banked
 43177  0103B6  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 43178  0103B8                     i2l1337:
 43179                           
 43180                           ;os.c: 113: }
 43181                           ;os.c: 114: INTCON3bits.INT2IF = 0;
 43182                           
 43183                           ; BSR set to: 2
 43184  0103B8  92F0               	bcf	intcon3,1,c	;volatile
 43185  0103BA                     i2l1336:
 43186                           
 43187                           ;os.c: 115: }
 43188                           ;os.c: 116: if(INTCON3bits.INT3IF)
 43189  0103BA  A4F0               	btfss	intcon3,2,c	;volatile
 43190  0103BC  0012               	return	
 43191                           
 43192                           ;os.c: 117: {
 43193                           ;os.c: 118: if(!PORTBbits.RB7)
 43194  0103BE  BE81               	btfsc	3969,7,c	;volatile
 43195  0103C0  D002               	goto	i2l1339
 43196                           
 43197                           ;os.c: 119: {
 43198                           ;os.c: 120: ++os.encoderCount;
 43199  0103C2  0102               	movlb	2	; () banked
 43200  0103C4  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 43201  0103C6                     i2l1339:
 43202                           
 43203                           ;os.c: 121: }
 43204                           ;os.c: 122: INTCON3bits.INT3IF = 0;
 43205                           
 43206                           ; BSR set to: 2
 43207  0103C6  94F0               	bcf	intcon3,2,c	;volatile
 43208  0103C8  0012               	return	
 43209  0103CA                     __end_of_tmr_isr:
 43210                           	opt stack 0
 43211                           tosu	equ	0xFFF
 43212                           tosh	equ	0xFFE
 43213                           tosl	equ	0xFFD
 43214                           pclatu	equ	0xFFB
 43215                           pclath	equ	0xFFA
 43216                           tblptru	equ	0xFF8
 43217                           tblptrh	equ	0xFF7
 43218                           tblptrl	equ	0xFF6
 43219                           tablat	equ	0xFF5
 43220                           prodh	equ	0xFF4
 43221                           prodl	equ	0xFF3
 43222                           intcon	equ	0xFF2
 43223                           intcon2	equ	0xFF1
 43224                           intcon3	equ	0xFF0
 43225                           indf0	equ	0xFEF
 43226                           postinc0	equ	0xFEE
 43227                           fsr0h	equ	0xFEA
 43228                           fsr0l	equ	0xFE9
 43229                           wreg	equ	0xFE8
 43230                           indf1	equ	0xFE7
 43231                           postinc1	equ	0xFE6
 43232                           postdec1	equ	0xFE5
 43233                           plusw1	equ	0xFE3
 43234                           fsr1h	equ	0xFE2
 43235                           fsr1l	equ	0xFE1
 43236                           indf2	equ	0xFDF
 43237                           postinc2	equ	0xFDE
 43238                           postdec2	equ	0xFDD
 43239                           plusw2	equ	0xFDB
 43240                           fsr2h	equ	0xFDA
 43241                           fsr2l	equ	0xFD9
 43242                           status	equ	0xFD8
 43243                           
 43244 ;; *************** function _USBDeviceTasks *****************
 43245 ;; Defined at:
 43246 ;;		line 477 in file "usb_device.c"
 43247 ;; Parameters:    Size  Location     Type
 43248 ;;		None
 43249 ;; Auto vars:     Size  Location     Type
 43250 ;;  i               1   30[COMRAM] unsigned char 
 43251 ;; Return value:  Size  Location     Type
 43252 ;;                  1    wreg      void 
 43253 ;; Registers used:
 43254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 43255 ;; Tracked objects:
 43256 ;;		On entry : 0/0
 43257 ;;		On exit  : 0/0
 43258 ;;		Unchanged: 0/0
 43259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43264 ;;Total ram usage:        1 bytes
 43265 ;; Hardware stack levels used:    1
 43266 ;; Hardware stack levels required when called:    8
 43267 ;; This function calls:
 43268 ;;		_USBCtrlEPAllowStatusStage
 43269 ;;		_USBCtrlEPService
 43270 ;;		_USBIncrement1msInternalTimers
 43271 ;;		_USBStallHandler
 43272 ;;		_USBSuspend
 43273 ;;		_USBWakeFromSuspend
 43274 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 43275 ;;		i2_USBDeviceInit
 43276 ;; This function is called by:
 43277 ;;		_SYS_InterruptHigh
 43278 ;; This function uses a non-reentrant model
 43279 ;;
 43280                           
 43281                           	psect	text214
 43282  00DA32                     __ptext214:
 43283                           	opt stack 0
 43284  00DA32                     _USBDeviceTasks:
 43285                           	opt stack 9
 43286                           
 43287                           ;usb_device.c: 479: uint8_t i;
 43288                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 43289                           
 43290                           ;incstack = 0
 43291  00DA32  045C               	decf	_USBDeviceState,w,c	;volatile
 43292  00DA34  B4D8               	btfsc	status,2,c
 43293                           
 43294                           ;usb_device.c: 591: {
 43295                           ;usb_device.c: 601: if(!UCONbits.SE0)
 43296  00DA36  BA65               	btfsc	3941,5,c	;volatile
 43297  00DA38  D007               	goto	i2l157
 43298                           
 43299                           ;usb_device.c: 602: {
 43300                           ;usb_device.c: 608: {UIR = 0;};
 43301  00DA3A  0E00               	movlw	0
 43302  00DA3C  6E62               	movwf	3938,c	;volatile
 43303                           
 43304                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 43305  00DA3E  010F               	movlb	15	; () banked
 43306  00DA40  8136               	bsf	54,0,b	;volatile
 43307                           
 43308                           ; BSR set to: 15
 43309                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 43310  00DA42  8936               	bsf	54,4,b	;volatile
 43311                           
 43312                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 43313  00DA44  0E02               	movlw	2
 43314  00DA46  6E5C               	movwf	_USBDeviceState,c	;volatile
 43315  00DA48                     i2l157:
 43316                           
 43317                           ;usb_device.c: 617: }
 43318                           ;usb_device.c: 618: }
 43319                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 43320                           
 43321                           ; BSR set to: 15
 43322                           
 43323                           ; BSR set to: 15
 43324  00DA48  A462               	btfss	3938,2,c	;volatile
 43325  00DA4A  D006               	goto	i2l158
 43326  00DA4C  010F               	movlb	15	; () banked
 43327  00DA4E  A536               	btfss	54,2,b	;volatile
 43328  00DA50  D003               	goto	i2l158
 43329                           
 43330                           ; BSR set to: 15
 43331                           ;usb_device.c: 635: {
 43332                           ;usb_device.c: 636: (UIR &= 0xFB);
 43333  00DA52  9462               	bcf	3938,2,c	;volatile
 43334                           
 43335                           ; BSR set to: 15
 43336                           ;usb_device.c: 640: USBWakeFromSuspend();
 43337  00DA54  ECCB  F091         	call	_USBWakeFromSuspend	;wreg free
 43338  00DA58                     i2l158:
 43339                           
 43340                           ;usb_device.c: 642: }
 43341                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 43342  00DA58  A265               	btfss	3941,1,c	;volatile
 43343  00DA5A  D002               	goto	i2l159
 43344                           
 43345                           ;usb_device.c: 648: {
 43346                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 43347  00DA5C  98A1               	bcf	4001,4,c	;volatile
 43348                           
 43349                           ;usb_device.c: 650: return;
 43350  00DA5E  0012               	return	
 43351  00DA60                     i2l159:
 43352                           
 43353                           ;usb_device.c: 651: }
 43354                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 43355  00DA60  A062               	btfss	3938,0,c	;volatile
 43356  00DA62  D009               	goto	i2l161
 43357  00DA64  010F               	movlb	15	; () banked
 43358  00DA66  A136               	btfss	54,0,b	;volatile
 43359  00DA68  D006               	goto	i2l161
 43360                           
 43361                           ; BSR set to: 15
 43362                           ;usb_device.c: 664: {
 43363                           ;usb_device.c: 665: USBDeviceInit();
 43364  00DA6A  EC76  F06C         	call	i2_USBDeviceInit	;wreg free
 43365                           
 43366                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 43367  00DA6E  88A0               	bsf	4000,4,c	;volatile
 43368                           
 43369                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 43370  00DA70  0E04               	movlw	4
 43371  00DA72  6E5C               	movwf	_USBDeviceState,c	;volatile
 43372                           
 43373                           ;usb_device.c: 681: (UIR &= 0xFE);
 43374  00DA74  9062               	bcf	3938,0,c	;volatile
 43375  00DA76                     i2l161:
 43376                           
 43377                           ;usb_device.c: 682: }
 43378                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 43379  00DA76  A862               	btfss	3938,4,c	;volatile
 43380  00DA78  D004               	goto	i2l162
 43381  00DA7A  010F               	movlb	15	; () banked
 43382  00DA7C  B936               	btfsc	54,4,b	;volatile
 43383                           
 43384                           ; BSR set to: 15
 43385                           ;usb_device.c: 688: {
 43386                           ;usb_device.c: 694: USBSuspend();
 43387  00DA7E  EC97  F092         	call	_USBSuspend	;wreg free
 43388  00DA82                     i2l162:
 43389                           
 43390                           ;usb_device.c: 696: }
 43391                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 43392  00DA82  AC62               	btfss	3938,6,c	;volatile
 43393  00DA84  D01B               	goto	i2l166
 43394                           
 43395                           ;usb_device.c: 709: {
 43396                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 43397  00DA86  010F               	movlb	15	; () banked
 43398  00DA88  AD36               	btfss	54,6,b	;volatile
 43399  00DA8A  D00E               	goto	i2l164
 43400                           
 43401                           ; BSR set to: 15
 43402                           ;usb_device.c: 712: {
 43403                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 43404  00DA8C  0E00               	movlw	0
 43405  00DA8E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43406  00DA90  0E73               	movlw	115
 43407  00DA92  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43408  00DA94  0E00               	movlw	0
 43409  00DA96  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43410  00DA98  0E00               	movlw	0
 43411  00DA9A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43412  00DA9C  0E00               	movlw	0
 43413  00DA9E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43414  00DAA0  0E01               	movlw	1
 43415  00DAA2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43416  00DAA4  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43417  00DAA8                     i2l164:
 43418                           
 43419                           ;usb_device.c: 714: }
 43420                           ;usb_device.c: 715: (UIR &= 0xBF);
 43421  00DAA8  9C62               	bcf	3938,6,c	;volatile
 43422                           
 43423                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 43424  00DAAA  EC32  F095         	call	_USBIncrement1msInternalTimers	;wreg free
 43425                           
 43426                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 43427  00DAAE  5056               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43428  00DAB0  A4D8               	btfss	status,2,c
 43429                           
 43430                           ;usb_device.c: 736: {
 43431                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 43432  00DAB2  0656               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 43433                           
 43434                           ;usb_device.c: 738: }
 43435                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 43436  00DAB4  5056               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43437  00DAB6  B4D8               	btfsc	status,2,c
 43438                           
 43439                           ;usb_device.c: 745: {
 43440                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 43441  00DAB8  ECD8  F07D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 43442  00DABC                     i2l166:
 43443                           
 43444                           ;usb_device.c: 747: }
 43445                           ;usb_device.c: 749: }
 43446                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 43447  00DABC  AA62               	btfss	3938,5,c	;volatile
 43448  00DABE  D004               	goto	i2l167
 43449  00DAC0  010F               	movlb	15	; () banked
 43450  00DAC2  BB36               	btfsc	54,5,b	;volatile
 43451                           
 43452                           ; BSR set to: 15
 43453                           ;usb_device.c: 752: {
 43454                           ;usb_device.c: 753: USBStallHandler();
 43455  00DAC4  EC79  F090         	call	_USBStallHandler	;wreg free
 43456  00DAC8                     i2l167:
 43457                           
 43458                           ;usb_device.c: 754: }
 43459                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 43460  00DAC8  A262               	btfss	3938,1,c	;volatile
 43461  00DACA  D012               	goto	i2l168
 43462  00DACC  010F               	movlb	15	; () banked
 43463  00DACE  A336               	btfss	54,1,b	;volatile
 43464  00DAD0  D00F               	goto	i2l168
 43465                           
 43466                           ; BSR set to: 15
 43467                           ;usb_device.c: 757: {
 43468                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 43469  00DAD2  0E7F               	movlw	127
 43470  00DAD4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43471  00DAD6  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43472  00DAD8  0E00               	movlw	0
 43473  00DADA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43474  00DADC  0E00               	movlw	0
 43475  00DADE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43476  00DAE0  0E00               	movlw	0
 43477  00DAE2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43478  00DAE4  0E01               	movlw	1
 43479  00DAE6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43480  00DAE8  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43481                           
 43482                           ;usb_device.c: 759: {UEIR = 0;};
 43483  00DAEC  0E00               	movlw	0
 43484  00DAEE  6E63               	movwf	3939,c	;volatile
 43485  00DAF0                     i2l168:
 43486                           
 43487                           ;usb_device.c: 767: }
 43488                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 43489  00DAF0  0E04               	movlw	4
 43490  00DAF2  605C               	cpfslt	_USBDeviceState,c	;volatile
 43491  00DAF4  D002               	goto	i2l169
 43492                           
 43493                           ;usb_device.c: 775: {
 43494                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 43495  00DAF6  98A1               	bcf	4001,4,c	;volatile
 43496                           
 43497                           ;usb_device.c: 777: return;
 43498  00DAF8  0012               	return	
 43499  00DAFA                     i2l169:
 43500                           
 43501                           ;usb_device.c: 778: }
 43502                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 43503  00DAFA  010F               	movlb	15	; () banked
 43504  00DAFC  A736               	btfss	54,3,b	;volatile
 43505  00DAFE  D039               	goto	i2u1471_40
 43506                           
 43507                           ; BSR set to: 15
 43508                           ;usb_device.c: 784: {
 43509                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 43510  00DB00  0E00               	movlw	0
 43511  00DB02  6E1F               	movwf	USBDeviceTasks@i,c
 43512  00DB04                     i2l16074:
 43513                           
 43514                           ; BSR set to: 15
 43515  00DB04  0E03               	movlw	3
 43516  00DB06  641F               	cpfsgt	USBDeviceTasks@i,c
 43517  00DB08  D001               	goto	i2l171
 43518  00DB0A  D033               	goto	i2u1471_40
 43519  00DB0C                     i2l171:
 43520                           
 43521                           ;usb_device.c: 786: {
 43522                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 43523  00DB0C  A662               	btfss	3938,3,c	;volatile
 43524  00DB0E  D031               	goto	i2u1471_40
 43525                           
 43526                           ;usb_device.c: 788: {
 43527                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 43528  00DB10  CF64 F05D          	movff	3940,_USTATcopy	;volatile
 43529                           
 43530                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 43531  00DB14  305D               	rrcf	_USTATcopy,w,c	;volatile
 43532  00DB16  32E8               	rrcf	wreg,f,c
 43533  00DB18  32E8               	rrcf	wreg,f,c
 43534  00DB1A  0B0F               	andlw	15
 43535  00DB1C  6E57               	movwf	_endpoint_number,c	;volatile
 43536                           
 43537                           ;usb_device.c: 793: (UIR &= 0xF7);
 43538  00DB1E  9662               	bcf	3938,3,c	;volatile
 43539                           
 43540                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 43541  00DB20  B45D               	btfsc	_USTATcopy,2,c	;volatile
 43542  00DB22  D007               	goto	i2l174
 43543                           
 43544                           ;usb_device.c: 799: {
 43545                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 43546  00DB24  5057               	movf	_endpoint_number,w,c	;volatile
 43547  00DB26  0D01               	mullw	1
 43548  00DB28  0EE1               	movlw	low _ep_data_out
 43549  00DB2A  24F3               	addwf	prodl,w,c
 43550  00DB2C  6ED9               	movwf	fsr2l,c
 43551  00DB2E  0E01               	movlw	high _ep_data_out
 43552  00DB30  D006               	goto	L57
 43553  00DB32                     i2l174:
 43554                           
 43555                           ;usb_device.c: 802: else
 43556                           ;usb_device.c: 803: {
 43557                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 43558                           
 43559                           ; BSR set to: 1
 43560  00DB32  5057               	movf	_endpoint_number,w,c	;volatile
 43561  00DB34  0D01               	mullw	1
 43562  00DB36  0EE4               	movlw	low _ep_data_in
 43563  00DB38  24F3               	addwf	prodl,w,c
 43564  00DB3A  6ED9               	movwf	fsr2l,c
 43565  00DB3C  0E01               	movlw	high _ep_data_in
 43566  00DB3E                     L57:
 43567  00DB3E  20F4               	addwfc	prodh,w,c
 43568  00DB40  6EDA               	movwf	fsr2h,c
 43569  00DB42  0101               	movlb	1	; () banked
 43570  00DB44  70DF               	btg	indf2,0,c
 43571                           
 43572                           ; BSR set to: 1
 43573                           ;usb_device.c: 805: }
 43574                           ;usb_device.c: 810: if(endpoint_number == 0)
 43575                           
 43576                           ; BSR set to: 1
 43577  00DB46  5057               	movf	_endpoint_number,w,c	;volatile
 43578  00DB48  A4D8               	btfss	status,2,c
 43579  00DB4A  D003               	goto	i2l176
 43580                           
 43581                           ; BSR set to: 1
 43582                           ;usb_device.c: 811: {
 43583                           ;usb_device.c: 812: USBCtrlEPService();
 43584  00DB4C  EC4E  F081         	call	_USBCtrlEPService	;wreg free
 43585                           
 43586                           ;usb_device.c: 813: }
 43587  00DB50  D00E               	goto	i2l178
 43588  00DB52                     i2l176:
 43589                           
 43590                           ;usb_device.c: 814: else
 43591                           ;usb_device.c: 815: {
 43592                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 43593  00DB52  0E00               	movlw	0
 43594  00DB54  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43595  00DB56  0E72               	movlw	114
 43596  00DB58  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43597  00DB5A  0E5D               	movlw	low _USTATcopy
 43598  00DB5C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43599  00DB5E  0E00               	movlw	high _USTATcopy
 43600  00DB60  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43601  00DB62  0E00               	movlw	0
 43602  00DB64  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43603  00DB66  0E00               	movlw	0
 43604  00DB68  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43605  00DB6A  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43606  00DB6E                     i2l178:
 43607  00DB6E  2A1F               	incf	USBDeviceTasks@i,f,c
 43608  00DB70  D7C9               	goto	i2l16074
 43609  00DB72                     i2u1471_40:
 43610                           
 43611                           ;usb_device.c: 822: }
 43612                           ;usb_device.c: 823: }
 43613                           ;usb_device.c: 824: }
 43614                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 43615  00DB72  98A1               	bcf	4001,4,c	;volatile
 43616  00DB74  0012               	return		;funcret
 43617  00DB76                     __end_of_USBDeviceTasks:
 43618                           	opt stack 0
 43619                           tosu	equ	0xFFF
 43620                           tosh	equ	0xFFE
 43621                           tosl	equ	0xFFD
 43622                           pclatu	equ	0xFFB
 43623                           pclath	equ	0xFFA
 43624                           tblptru	equ	0xFF8
 43625                           tblptrh	equ	0xFF7
 43626                           tblptrl	equ	0xFF6
 43627                           tablat	equ	0xFF5
 43628                           prodh	equ	0xFF4
 43629                           prodl	equ	0xFF3
 43630                           intcon	equ	0xFF2
 43631                           intcon2	equ	0xFF1
 43632                           intcon3	equ	0xFF0
 43633                           indf0	equ	0xFEF
 43634                           postinc0	equ	0xFEE
 43635                           fsr0h	equ	0xFEA
 43636                           fsr0l	equ	0xFE9
 43637                           wreg	equ	0xFE8
 43638                           indf1	equ	0xFE7
 43639                           postinc1	equ	0xFE6
 43640                           postdec1	equ	0xFE5
 43641                           plusw1	equ	0xFE3
 43642                           fsr1h	equ	0xFE2
 43643                           fsr1l	equ	0xFE1
 43644                           indf2	equ	0xFDF
 43645                           postinc2	equ	0xFDE
 43646                           postdec2	equ	0xFDD
 43647                           plusw2	equ	0xFDB
 43648                           fsr2h	equ	0xFDA
 43649                           fsr2l	equ	0xFD9
 43650                           status	equ	0xFD8
 43651                           
 43652 ;; *************** function i2_USBDeviceInit *****************
 43653 ;; Defined at:
 43654 ;;		line 277 in file "usb_device.c"
 43655 ;; Parameters:    Size  Location     Type
 43656 ;;		None
 43657 ;; Auto vars:     Size  Location     Type
 43658 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 43659 ;; Return value:  Size  Location     Type
 43660 ;;                  1    wreg      void 
 43661 ;; Registers used:
 43662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43663 ;; Tracked objects:
 43664 ;;		On entry : 0/0
 43665 ;;		On exit  : 0/0
 43666 ;;		Unchanged: 0/0
 43667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43672 ;;Total ram usage:        1 bytes
 43673 ;; Hardware stack levels used:    1
 43674 ;; Hardware stack levels required when called:    1
 43675 ;; This function calls:
 43676 ;;		i2_memset
 43677 ;; This function is called by:
 43678 ;;		_USBDeviceTasks
 43679 ;; This function uses a non-reentrant model
 43680 ;;
 43681                           
 43682                           	psect	text215
 43683  00D8EC                     __ptext215:
 43684                           	opt stack 0
 43685  00D8EC                     i2_USBDeviceInit:
 43686                           	opt stack 15
 43687                           
 43688                           ;usb_device.c: 279: uint8_t i;
 43689                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 43690                           
 43691                           ;incstack = 0
 43692  00D8EC  98A0               	bcf	4000,4,c	;volatile
 43693                           
 43694                           ;usb_device.c: 285: ;
 43695                           ;usb_device.c: 288: {UEIR = 0;};
 43696  00D8EE  0E00               	movlw	0
 43697  00D8F0  6E63               	movwf	3939,c	;volatile
 43698                           
 43699                           ;usb_device.c: 291: {UIR = 0;};
 43700  00D8F2  0E00               	movlw	0
 43701  00D8F4  6E62               	movwf	3938,c	;volatile
 43702                           
 43703                           ;usb_device.c: 294: UEP0 = 0;
 43704  00D8F6  0E00               	movlw	0
 43705  00D8F8  010F               	movlb	15	; () banked
 43706  00D8FA  6F26               	movwf	38,b	;volatile
 43707                           
 43708                           ; BSR set to: 15
 43709                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 43710  00D8FC  0E27               	movlw	39
 43711  00D8FE  6E01               	movwf	i2memset@p1,c
 43712  00D900  0E0F               	movlw	15
 43713  00D902  6E02               	movwf	i2memset@p1+1,c
 43714  00D904  0E00               	movlw	0
 43715  00D906  6E04               	movwf	i2memset@c+1,c
 43716  00D908  0E00               	movlw	0
 43717  00D90A  6E03               	movwf	i2memset@c,c
 43718  00D90C  0E00               	movlw	0
 43719  00D90E  6E06               	movwf	i2memset@n+1,c
 43720  00D910  0E02               	movlw	2
 43721  00D912  6E05               	movwf	i2memset@n,c
 43722  00D914  EC91  F093         	call	i2_memset	;wreg free
 43723                           
 43724                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 43725  00D918  0E16               	movlw	22
 43726  00D91A  010F               	movlb	15	; () banked
 43727  00D91C  6F39               	movwf	57,b	;volatile
 43728                           
 43729                           ; BSR set to: 15
 43730  00D91E  0E9F               	movlw	159
 43731  00D920  6F37               	movwf	55,b	;volatile
 43732                           
 43733                           ; BSR set to: 15
 43734  00D922  0E7B               	movlw	123
 43735  00D924  6F36               	movwf	54,b	;volatile
 43736                           
 43737                           ; BSR set to: 15
 43738                           ;usb_device.c: 301: ;
 43739                           ;usb_device.c: 304: ;
 43740                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 43741  00D926  0E00               	movlw	0
 43742  00D928  6E09               	movwf	i2USBDeviceInit@i,c
 43743  00D92A                     i2l15868:
 43744                           
 43745                           ; BSR set to: 15
 43746  00D92A  0E0B               	movlw	11
 43747  00D92C  6409               	cpfsgt	i2USBDeviceInit@i,c
 43748  00D92E  D001               	goto	i2l147
 43749  00D930  D00E               	goto	i2u1439_40
 43750  00D932                     i2l147:
 43751                           
 43752                           ;usb_device.c: 308: {
 43753                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 43754                           
 43755                           ; BSR set to: 15
 43756  00D932  5009               	movf	i2USBDeviceInit@i,w,c
 43757  00D934  0D04               	mullw	4
 43758  00D936  0E00               	movlw	0
 43759  00D938  24F3               	addwf	prodl,w,c
 43760  00D93A  6ED9               	movwf	fsr2l,c
 43761  00D93C  0E0D               	movlw	13
 43762  00D93E  20F4               	addwfc	prodh,w,c
 43763  00D940  6EDA               	movwf	fsr2h,c
 43764  00D942  6ADE               	clrf	postinc2,c
 43765  00D944  6ADE               	clrf	postinc2,c
 43766  00D946  6ADE               	clrf	postinc2,c
 43767  00D948  6ADD               	clrf	postdec2,c
 43768  00D94A  2A09               	incf	i2USBDeviceInit@i,f,c
 43769  00D94C  D7EE               	goto	i2l15868
 43770  00D94E                     i2u1439_40:
 43771                           
 43772                           ;usb_device.c: 310: }
 43773                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 43774  00D94E  8C65               	bsf	3941,6,c	;volatile
 43775                           
 43776                           ;usb_device.c: 316: UADDR = 0x00;
 43777  00D950  0E00               	movlw	0
 43778  00D952  010F               	movlb	15	; () banked
 43779  00D954  6F38               	movwf	56,b	;volatile
 43780                           
 43781                           ; BSR set to: 15
 43782                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 43783  00D956  9865               	bcf	3941,4,c	;volatile
 43784                           
 43785                           ; BSR set to: 15
 43786                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 43787  00D958  9C65               	bcf	3941,6,c	;volatile
 43788  00D95A                     
 43789                           ;usb_device.c: 326: {
 43790                           ;usb_device.c: 327: (UIR &= 0xF7);
 43791                           
 43792                           ; BSR set to: 15
 43793  00D95A  9662               	bcf	3938,3,c	;volatile
 43794                           
 43795                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 43796  00D95C  0E00               	movlw	0
 43797  00D95E  0100               	movlb	0	; () banked
 43798  00D960  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 43799                           
 43800                           ; BSR set to: 0
 43801                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 43802  00D962  0E00               	movlw	0
 43803  00D964  6E35               	movwf	_outPipes+3,c	;volatile
 43804                           
 43805                           ; BSR set to: 0
 43806                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 43807  00D966  0E00               	movlw	0
 43808  00D968  6E37               	movwf	_outPipes+5,c	;volatile
 43809  00D96A  0E00               	movlw	0
 43810  00D96C  6E36               	movwf	_outPipes+4,c	;volatile
 43811                           
 43812                           ; BSR set to: 0
 43813                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 43814  00D96E  B662               	btfsc	3938,3,c	;volatile
 43815  00D970  D7F4               	goto	i2l149
 43816                           
 43817                           ; BSR set to: 0
 43818                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 43819                           
 43820                           ; BSR set to: 0
 43821  00D972  0E01               	movlw	1
 43822  00D974  0101               	movlb	1	; () banked
 43823  00D976  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 43824                           
 43825                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 43826  00D978  0E01               	movlw	1
 43827  00D97A  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 43828                           
 43829                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 43830  00D97C  0E00               	movlw	0
 43831  00D97E  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 43832                           
 43833                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 43834  00D980  0E00               	movlw	0
 43835  00D982  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 43836                           
 43837                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 43838  00D984  0E00               	movlw	0
 43839  00D986  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 43840                           
 43841                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 43842  00D988  0E00               	movlw	0
 43843  00D98A  6E09               	movwf	i2USBDeviceInit@i,c
 43844  00D98C                     i2l15896:
 43845                           
 43846                           ; BSR set to: 1
 43847  00D98C  0E02               	movlw	2
 43848  00D98E  6409               	cpfsgt	i2USBDeviceInit@i,c
 43849  00D990  D001               	goto	i2l151
 43850  00D992  D02E               	goto	i2u1442_40
 43851  00D994                     i2l151:
 43852                           
 43853                           ;usb_device.c: 346: {
 43854                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 43855                           
 43856                           ; BSR set to: 1
 43857  00D994  5009               	movf	i2USBDeviceInit@i,w,c
 43858  00D996  0D02               	mullw	2
 43859  00D998  0E3B               	movlw	low _pBDTEntryIn
 43860  00D99A  24F3               	addwf	prodl,w,c
 43861  00D99C  6ED9               	movwf	fsr2l,c
 43862  00D99E  0E00               	movlw	high _pBDTEntryIn
 43863  00D9A0  20F4               	addwfc	prodh,w,c
 43864  00D9A2  6EDA               	movwf	fsr2h,c
 43865  00D9A4  0E00               	movlw	0
 43866  00D9A6  6EDE               	movwf	postinc2,c
 43867  00D9A8  0E00               	movlw	0
 43868  00D9AA  6EDD               	movwf	postdec2,c
 43869                           
 43870                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 43871  00D9AC  5009               	movf	i2USBDeviceInit@i,w,c
 43872  00D9AE  0D02               	mullw	2
 43873  00D9B0  0ED3               	movlw	low _pBDTEntryOut
 43874  00D9B2  24F3               	addwf	prodl,w,c
 43875  00D9B4  6ED9               	movwf	fsr2l,c
 43876  00D9B6  0E01               	movlw	high _pBDTEntryOut
 43877  00D9B8  20F4               	addwfc	prodh,w,c
 43878  00D9BA  6EDA               	movwf	fsr2h,c
 43879  00D9BC  0E00               	movlw	0
 43880  00D9BE  6EDE               	movwf	postinc2,c
 43881  00D9C0  0E00               	movlw	0
 43882  00D9C2  6EDD               	movwf	postdec2,c
 43883                           
 43884                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 43885  00D9C4  5009               	movf	i2USBDeviceInit@i,w,c
 43886  00D9C6  0D01               	mullw	1
 43887  00D9C8  0EE4               	movlw	low _ep_data_in
 43888  00D9CA  24F3               	addwf	prodl,w,c
 43889  00D9CC  6ED9               	movwf	fsr2l,c
 43890  00D9CE  0E01               	movlw	high _ep_data_in
 43891  00D9D0  20F4               	addwfc	prodh,w,c
 43892  00D9D2  6EDA               	movwf	fsr2h,c
 43893  00D9D4  0E00               	movlw	0
 43894  00D9D6  6EDF               	movwf	indf2,c
 43895                           
 43896                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 43897  00D9D8  5009               	movf	i2USBDeviceInit@i,w,c
 43898  00D9DA  0D01               	mullw	1
 43899  00D9DC  0EE1               	movlw	low _ep_data_out
 43900  00D9DE  24F3               	addwf	prodl,w,c
 43901  00D9E0  6ED9               	movwf	fsr2l,c
 43902  00D9E2  0E01               	movlw	high _ep_data_out
 43903  00D9E4  20F4               	addwfc	prodh,w,c
 43904  00D9E6  6EDA               	movwf	fsr2h,c
 43905  00D9E8  0E00               	movlw	0
 43906  00D9EA  6EDF               	movwf	indf2,c
 43907  00D9EC  2A09               	incf	i2USBDeviceInit@i,f,c
 43908  00D9EE  D7CE               	goto	i2l15896
 43909  00D9F0                     i2u1442_40:
 43910                           
 43911                           ;usb_device.c: 351: }
 43912                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 43913  00D9F0  0E08               	movlw	8
 43914  00D9F2  6E3B               	movwf	_pBDTEntryIn,c
 43915  00D9F4  0E0D               	movlw	13
 43916  00D9F6  6E3C               	movwf	_pBDTEntryIn+1,c
 43917                           
 43918                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 43919  00D9F8  0E16               	movlw	22
 43920  00D9FA  010F               	movlb	15	; () banked
 43921  00D9FC  6F26               	movwf	38,b	;volatile
 43922                           
 43923                           ; BSR set to: 15
 43924                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 43925  00D9FE  0E0D               	movlw	13
 43926  00DA00  010D               	movlb	13	; () banked
 43927  00DA02  6F03               	movwf	3,b	;volatile
 43928  00DA04  0E30               	movlw	48
 43929  00DA06  6F02               	movwf	2,b	;volatile
 43930                           
 43931                           ; BSR set to: 13
 43932                           ;usb_device.c: 359: BDT[0].CNT = 8;
 43933  00DA08  0E08               	movlw	8
 43934  00DA0A  6F01               	movwf	1,b	;volatile
 43935                           
 43936                           ; BSR set to: 13
 43937                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 43938  00DA0C  0E04               	movlw	4
 43939  00DA0E  6F00               	movwf	0,b	;volatile
 43940                           
 43941                           ; BSR set to: 13
 43942                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 43943  00DA10  8F00               	bsf	0,7,b	;volatile
 43944                           
 43945                           ; BSR set to: 13
 43946                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 43947  00DA12  0E00               	movlw	0
 43948  00DA14  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 43949                           
 43950                           ; BSR set to: 13
 43951                           ;usb_device.c: 366: USB1msTickCount = 0;
 43952  00DA16  0E00               	movlw	0
 43953  00DA18  0101               	movlb	1	; () banked
 43954  00DA1A  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 43955  00DA1C  0E00               	movlw	0
 43956  00DA1E  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 43957  00DA20  0E00               	movlw	0
 43958  00DA22  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 43959  00DA24  0E00               	movlw	0
 43960  00DA26  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 43961                           
 43962                           ; BSR set to: 1
 43963                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 43964  00DA28  0E00               	movlw	0
 43965  00DA2A  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43966                           
 43967                           ; BSR set to: 1
 43968                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 43969  00DA2C  0E00               	movlw	0
 43970  00DA2E  6E5C               	movwf	_USBDeviceState,c	;volatile
 43971                           
 43972                           ; BSR set to: 1
 43973  00DA30  0012               	return		;funcret
 43974  00DA32                     __end_ofi2_USBDeviceInit:
 43975                           	opt stack 0
 43976                           tosu	equ	0xFFF
 43977                           tosh	equ	0xFFE
 43978                           tosl	equ	0xFFD
 43979                           pclatu	equ	0xFFB
 43980                           pclath	equ	0xFFA
 43981                           tblptru	equ	0xFF8
 43982                           tblptrh	equ	0xFF7
 43983                           tblptrl	equ	0xFF6
 43984                           tablat	equ	0xFF5
 43985                           prodh	equ	0xFF4
 43986                           prodl	equ	0xFF3
 43987                           intcon	equ	0xFF2
 43988                           intcon2	equ	0xFF1
 43989                           intcon3	equ	0xFF0
 43990                           indf0	equ	0xFEF
 43991                           postinc0	equ	0xFEE
 43992                           fsr0h	equ	0xFEA
 43993                           fsr0l	equ	0xFE9
 43994                           wreg	equ	0xFE8
 43995                           indf1	equ	0xFE7
 43996                           postinc1	equ	0xFE6
 43997                           postdec1	equ	0xFE5
 43998                           plusw1	equ	0xFE3
 43999                           fsr1h	equ	0xFE2
 44000                           fsr1l	equ	0xFE1
 44001                           indf2	equ	0xFDF
 44002                           postinc2	equ	0xFDE
 44003                           postdec2	equ	0xFDD
 44004                           plusw2	equ	0xFDB
 44005                           fsr2h	equ	0xFDA
 44006                           fsr2l	equ	0xFD9
 44007                           status	equ	0xFD8
 44008                           
 44009 ;; *************** function _USBWakeFromSuspend *****************
 44010 ;; Defined at:
 44011 ;;		line 2305 in file "usb_device.c"
 44012 ;; Parameters:    Size  Location     Type
 44013 ;;		None
 44014 ;; Auto vars:     Size  Location     Type
 44015 ;;		None
 44016 ;; Return value:  Size  Location     Type
 44017 ;;                  1    wreg      void 
 44018 ;; Registers used:
 44019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 44020 ;; Tracked objects:
 44021 ;;		On entry : 0/0
 44022 ;;		On exit  : 0/0
 44023 ;;		Unchanged: 0/0
 44024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44029 ;;Total ram usage:        0 bytes
 44030 ;; Hardware stack levels used:    1
 44031 ;; Hardware stack levels required when called:    4
 44032 ;; This function calls:
 44033 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44034 ;; This function is called by:
 44035 ;;		_USBDeviceTasks
 44036 ;; This function uses a non-reentrant model
 44037 ;;
 44038                           
 44039                           	psect	text216
 44040  012396                     __ptext216:
 44041                           	opt stack 0
 44042  012396                     _USBWakeFromSuspend:
 44043                           	opt stack 12
 44044                           
 44045                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 44046                           
 44047                           ; BSR set to: 1
 44048                           ;incstack = 0
 44049  012396  0E00               	movlw	0
 44050  012398  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 44051                           
 44052                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 44053  01239A  0E00               	movlw	0
 44054  01239C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44055  01239E  0E74               	movlw	116
 44056  0123A0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44057  0123A2  0E00               	movlw	0
 44058  0123A4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44059  0123A6  0E00               	movlw	0
 44060  0123A8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44061  0123AA  0E00               	movlw	0
 44062  0123AC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44063  0123AE  0E00               	movlw	0
 44064  0123B0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44065  0123B2  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44066                           
 44067                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 44068  0123B6  9265               	bcf	3941,1,c	;volatile
 44069                           
 44070                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 44071  0123B8  010F               	movlb	15	; () banked
 44072  0123BA  9536               	bcf	54,2,b	;volatile
 44073                           
 44074                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 44075  0123BC  D001               	goto	i2l317
 44076  0123BE                     
 44077                           ;usb_device.c: 2345: {
 44078                           ;usb_device.c: 2346: (UIR &= 0xFB);
 44079                           
 44080                           ; BSR set to: 15
 44081  0123BE  9462               	bcf	3938,2,c	;volatile
 44082  0123C0                     i2l317:
 44083  0123C0  B462               	btfsc	3938,2,c	;volatile
 44084  0123C2  D7FD               	goto	i2l318
 44085                           
 44086                           ;usb_device.c: 2347: }
 44087                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 44088  0123C4  0E00               	movlw	0
 44089  0123C6  0101               	movlb	1	; () banked
 44090  0123C8  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44091                           
 44092                           ; BSR set to: 1
 44093  0123CA  0012               	return		;funcret
 44094  0123CC                     __end_of_USBWakeFromSuspend:
 44095                           	opt stack 0
 44096                           tosu	equ	0xFFF
 44097                           tosh	equ	0xFFE
 44098                           tosl	equ	0xFFD
 44099                           pclatu	equ	0xFFB
 44100                           pclath	equ	0xFFA
 44101                           tblptru	equ	0xFF8
 44102                           tblptrh	equ	0xFF7
 44103                           tblptrl	equ	0xFF6
 44104                           tablat	equ	0xFF5
 44105                           prodh	equ	0xFF4
 44106                           prodl	equ	0xFF3
 44107                           intcon	equ	0xFF2
 44108                           intcon2	equ	0xFF1
 44109                           intcon3	equ	0xFF0
 44110                           indf0	equ	0xFEF
 44111                           postinc0	equ	0xFEE
 44112                           fsr0h	equ	0xFEA
 44113                           fsr0l	equ	0xFE9
 44114                           wreg	equ	0xFE8
 44115                           indf1	equ	0xFE7
 44116                           postinc1	equ	0xFE6
 44117                           postdec1	equ	0xFE5
 44118                           plusw1	equ	0xFE3
 44119                           fsr1h	equ	0xFE2
 44120                           fsr1l	equ	0xFE1
 44121                           indf2	equ	0xFDF
 44122                           postinc2	equ	0xFDE
 44123                           postdec2	equ	0xFDD
 44124                           plusw2	equ	0xFDB
 44125                           fsr2h	equ	0xFDA
 44126                           fsr2l	equ	0xFD9
 44127                           status	equ	0xFD8
 44128                           
 44129 ;; *************** function _USBSuspend *****************
 44130 ;; Defined at:
 44131 ;;		line 2247 in file "usb_device.c"
 44132 ;; Parameters:    Size  Location     Type
 44133 ;;		None
 44134 ;; Auto vars:     Size  Location     Type
 44135 ;;		None
 44136 ;; Return value:  Size  Location     Type
 44137 ;;                  1    wreg      void 
 44138 ;; Registers used:
 44139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 44140 ;; Tracked objects:
 44141 ;;		On entry : 0/0
 44142 ;;		On exit  : 0/0
 44143 ;;		Unchanged: 0/0
 44144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44149 ;;Total ram usage:        0 bytes
 44150 ;; Hardware stack levels used:    1
 44151 ;; Hardware stack levels required when called:    4
 44152 ;; This function calls:
 44153 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44154 ;; This function is called by:
 44155 ;;		_USBDeviceTasks
 44156 ;; This function uses a non-reentrant model
 44157 ;;
 44158                           
 44159                           	psect	text217
 44160  01252E                     __ptext217:
 44161                           	opt stack 0
 44162  01252E                     _USBSuspend:
 44163                           	opt stack 12
 44164                           
 44165                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 44166                           
 44167                           ; BSR set to: 1
 44168                           ;incstack = 0
 44169  01252E  010F               	movlb	15	; () banked
 44170  012530  8536               	bsf	54,2,b	;volatile
 44171                           
 44172                           ; BSR set to: 15
 44173                           ;usb_device.c: 2273: (UIR &= 0xEF);
 44174  012532  9862               	bcf	3938,4,c	;volatile
 44175                           
 44176                           ; BSR set to: 15
 44177                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 44178  012534  8265               	bsf	3941,1,c	;volatile
 44179                           
 44180                           ; BSR set to: 15
 44181                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 44182  012536  0E01               	movlw	1
 44183  012538  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 44184                           
 44185                           ; BSR set to: 15
 44186                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 44187  01253A  0E00               	movlw	0
 44188  01253C  0101               	movlb	1	; () banked
 44189  01253E  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44190                           
 44191                           ; BSR set to: 1
 44192                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 44193  012540  0E00               	movlw	0
 44194  012542  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44195  012544  0E75               	movlw	117
 44196  012546  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44197  012548  0E00               	movlw	0
 44198  01254A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44199  01254C  0E00               	movlw	0
 44200  01254E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44201  012550  0E00               	movlw	0
 44202  012552  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44203  012554  0E00               	movlw	0
 44204  012556  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44205  012558  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44206  01255C  0012               	return		;funcret
 44207  01255E                     __end_of_USBSuspend:
 44208                           	opt stack 0
 44209                           tosu	equ	0xFFF
 44210                           tosh	equ	0xFFE
 44211                           tosl	equ	0xFFD
 44212                           pclatu	equ	0xFFB
 44213                           pclath	equ	0xFFA
 44214                           tblptru	equ	0xFF8
 44215                           tblptrh	equ	0xFF7
 44216                           tblptrl	equ	0xFF6
 44217                           tablat	equ	0xFF5
 44218                           prodh	equ	0xFF4
 44219                           prodl	equ	0xFF3
 44220                           intcon	equ	0xFF2
 44221                           intcon2	equ	0xFF1
 44222                           intcon3	equ	0xFF0
 44223                           indf0	equ	0xFEF
 44224                           postinc0	equ	0xFEE
 44225                           fsr0h	equ	0xFEA
 44226                           fsr0l	equ	0xFE9
 44227                           wreg	equ	0xFE8
 44228                           indf1	equ	0xFE7
 44229                           postinc1	equ	0xFE6
 44230                           postdec1	equ	0xFE5
 44231                           plusw1	equ	0xFE3
 44232                           fsr1h	equ	0xFE2
 44233                           fsr1l	equ	0xFE1
 44234                           indf2	equ	0xFDF
 44235                           postinc2	equ	0xFDE
 44236                           postdec2	equ	0xFDD
 44237                           plusw2	equ	0xFDB
 44238                           fsr2h	equ	0xFDA
 44239                           fsr2l	equ	0xFD9
 44240                           status	equ	0xFD8
 44241                           
 44242 ;; *************** function _USBStallHandler *****************
 44243 ;; Defined at:
 44244 ;;		line 2204 in file "usb_device.c"
 44245 ;; Parameters:    Size  Location     Type
 44246 ;;		None
 44247 ;; Auto vars:     Size  Location     Type
 44248 ;;		None
 44249 ;; Return value:  Size  Location     Type
 44250 ;;                  1    wreg      void 
 44251 ;; Registers used:
 44252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44253 ;; Tracked objects:
 44254 ;;		On entry : 0/0
 44255 ;;		On exit  : 0/0
 44256 ;;		Unchanged: 0/0
 44257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44262 ;;Total ram usage:        1 bytes
 44263 ;; Hardware stack levels used:    1
 44264 ;; This function calls:
 44265 ;;		Nothing
 44266 ;; This function is called by:
 44267 ;;		_USBDeviceTasks
 44268 ;; This function uses a non-reentrant model
 44269 ;;
 44270                           
 44271                           	psect	text218
 44272  0120F2                     __ptext218:
 44273                           	opt stack 0
 44274  0120F2                     _USBStallHandler:
 44275                           	opt stack 16
 44276                           
 44277                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 44278                           
 44279                           ;incstack = 0
 44280  0120F2  010F               	movlb	15	; () banked
 44281  0120F4  A126               	btfss	38,0,b	;volatile
 44282  0120F6  D01D               	goto	i2l309
 44283                           
 44284                           ; BSR set to: 15
 44285                           ;usb_device.c: 2217: {
 44286                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 44287  0120F8  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44288  0120FC  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44289  012100  0E80               	movlw	128
 44290  012102  18DE               	xorwf	postinc2,w,c
 44291  012104  A4D8               	btfss	status,2,c
 44292  012106  D014               	goto	i2l310
 44293                           
 44294                           ; BSR set to: 15
 44295  012108  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 44296  01210C  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44297  012110  0E84               	movlw	132
 44298  012112  18DE               	xorwf	postinc2,w,c
 44299  012114  A4D8               	btfss	status,2,c
 44300  012116  D00C               	goto	i2l310
 44301                           
 44302                           ; BSR set to: 15
 44303                           ;usb_device.c: 2220: {
 44304                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 44305  012118  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44306  01211C  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44307  012120  0E0C               	movlw	12
 44308  012122  6EDF               	movwf	indf2,c
 44309                           
 44310                           ; BSR set to: 15
 44311                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 44312  012124  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44313  012128  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44314  01212C  0E00               	movlw	0
 44315  01212E  8EDB               	bsf	plusw2,7,c
 44316  012130                     i2l310:
 44317                           
 44318                           ; BSR set to: 15
 44319                           ;usb_device.c: 2224: }
 44320                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 44321                           
 44322                           ; BSR set to: 15
 44323  012130  9126               	bcf	38,0,b	;volatile
 44324  012132                     i2l309:
 44325                           
 44326                           ; BSR set to: 15
 44327                           ;usb_device.c: 2226: }
 44328                           ;usb_device.c: 2228: (UIR &= 0xDF);
 44329  012132  9A62               	bcf	3938,5,c	;volatile
 44330                           
 44331                           ; BSR set to: 15
 44332  012134  0012               	return		;funcret
 44333  012136                     __end_of_USBStallHandler:
 44334                           	opt stack 0
 44335                           tosu	equ	0xFFF
 44336                           tosh	equ	0xFFE
 44337                           tosl	equ	0xFFD
 44338                           pclatu	equ	0xFFB
 44339                           pclath	equ	0xFFA
 44340                           tblptru	equ	0xFF8
 44341                           tblptrh	equ	0xFF7
 44342                           tblptrl	equ	0xFF6
 44343                           tablat	equ	0xFF5
 44344                           prodh	equ	0xFF4
 44345                           prodl	equ	0xFF3
 44346                           intcon	equ	0xFF2
 44347                           intcon2	equ	0xFF1
 44348                           intcon3	equ	0xFF0
 44349                           indf0	equ	0xFEF
 44350                           postinc0	equ	0xFEE
 44351                           fsr0h	equ	0xFEA
 44352                           fsr0l	equ	0xFE9
 44353                           wreg	equ	0xFE8
 44354                           indf1	equ	0xFE7
 44355                           postinc1	equ	0xFE6
 44356                           postdec1	equ	0xFE5
 44357                           plusw1	equ	0xFE3
 44358                           fsr1h	equ	0xFE2
 44359                           fsr1l	equ	0xFE1
 44360                           indf2	equ	0xFDF
 44361                           postinc2	equ	0xFDE
 44362                           postdec2	equ	0xFDD
 44363                           plusw2	equ	0xFDB
 44364                           fsr2h	equ	0xFDA
 44365                           fsr2l	equ	0xFD9
 44366                           status	equ	0xFD8
 44367                           
 44368 ;; *************** function _USBIncrement1msInternalTimers *****************
 44369 ;; Defined at:
 44370 ;;		line 3027 in file "usb_device.c"
 44371 ;; Parameters:    Size  Location     Type
 44372 ;;		None
 44373 ;; Auto vars:     Size  Location     Type
 44374 ;;		None
 44375 ;; Return value:  Size  Location     Type
 44376 ;;                  1    wreg      void 
 44377 ;; Registers used:
 44378 ;;		wreg, status,2, status,0
 44379 ;; Tracked objects:
 44380 ;;		On entry : 0/0
 44381 ;;		On exit  : 0/0
 44382 ;;		Unchanged: 0/0
 44383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44388 ;;Total ram usage:        0 bytes
 44389 ;; Hardware stack levels used:    1
 44390 ;; This function calls:
 44391 ;;		Nothing
 44392 ;; This function is called by:
 44393 ;;		_USBDeviceTasks
 44394 ;; This function uses a non-reentrant model
 44395 ;;
 44396                           
 44397                           	psect	text219
 44398  012A64                     __ptext219:
 44399                           	opt stack 0
 44400  012A64                     _USBIncrement1msInternalTimers:
 44401                           	opt stack 16
 44402                           
 44403                           ;usb_device.c: 3035: USB1msTickCount++;
 44404                           
 44405                           ; BSR set to: 15
 44406                           ;incstack = 0
 44407  012A64  0E01               	movlw	1
 44408  012A66  0101               	movlb	1	; () banked
 44409  012A68  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 44410  012A6A  0E00               	movlw	0
 44411  012A6C  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 44412  012A6E  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 44413  012A70  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 44414                           
 44415                           ; BSR set to: 1
 44416                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 44417  012A72  5058               	movf	_USBBusIsSuspended,w,c	;volatile
 44418  012A74  A4D8               	btfss	status,2,c
 44419  012A76  0012               	return	
 44420                           
 44421                           ; BSR set to: 1
 44422                           ;usb_device.c: 3037: {
 44423                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 44424  012A78  2BF6               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 44425                           
 44426                           ; BSR set to: 1
 44427                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 44428  012A7A  51F6               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 44429  012A7C  A4D8               	btfss	status,2,c
 44430  012A7E  0012               	return	
 44431                           
 44432                           ; BSR set to: 1
 44433                           ;usb_device.c: 3041: {
 44434                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 44435  012A80  69F6               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44436                           
 44437                           ; BSR set to: 1
 44438  012A82  0012               	return	
 44439  012A84                     __end_of_USBIncrement1msInternalTimers:
 44440                           	opt stack 0
 44441                           tosu	equ	0xFFF
 44442                           tosh	equ	0xFFE
 44443                           tosl	equ	0xFFD
 44444                           pclatu	equ	0xFFB
 44445                           pclath	equ	0xFFA
 44446                           tblptru	equ	0xFF8
 44447                           tblptrh	equ	0xFF7
 44448                           tblptrl	equ	0xFF6
 44449                           tablat	equ	0xFF5
 44450                           prodh	equ	0xFF4
 44451                           prodl	equ	0xFF3
 44452                           intcon	equ	0xFF2
 44453                           intcon2	equ	0xFF1
 44454                           intcon3	equ	0xFF0
 44455                           indf0	equ	0xFEF
 44456                           postinc0	equ	0xFEE
 44457                           fsr0h	equ	0xFEA
 44458                           fsr0l	equ	0xFE9
 44459                           wreg	equ	0xFE8
 44460                           indf1	equ	0xFE7
 44461                           postinc1	equ	0xFE6
 44462                           postdec1	equ	0xFE5
 44463                           plusw1	equ	0xFE3
 44464                           fsr1h	equ	0xFE2
 44465                           fsr1l	equ	0xFE1
 44466                           indf2	equ	0xFDF
 44467                           postinc2	equ	0xFDE
 44468                           postdec2	equ	0xFDD
 44469                           plusw2	equ	0xFDB
 44470                           fsr2h	equ	0xFDA
 44471                           fsr2l	equ	0xFD9
 44472                           status	equ	0xFD8
 44473                           
 44474 ;; *************** function _USBCtrlEPService *****************
 44475 ;; Defined at:
 44476 ;;		line 2374 in file "usb_device.c"
 44477 ;; Parameters:    Size  Location     Type
 44478 ;;		None
 44479 ;; Auto vars:     Size  Location     Type
 44480 ;;		None
 44481 ;; Return value:  Size  Location     Type
 44482 ;;                  1    wreg      void 
 44483 ;; Registers used:
 44484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44485 ;; Tracked objects:
 44486 ;;		On entry : 0/0
 44487 ;;		On exit  : 0/0
 44488 ;;		Unchanged: 0/0
 44489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44494 ;;Total ram usage:        1 bytes
 44495 ;; Hardware stack levels used:    1
 44496 ;; Hardware stack levels required when called:    7
 44497 ;; This function calls:
 44498 ;;		_USBCtrlTrfInHandler
 44499 ;;		_USBCtrlTrfOutHandler
 44500 ;;		_USBCtrlTrfSetupHandler
 44501 ;;		i2_memcpy
 44502 ;; This function is called by:
 44503 ;;		_USBDeviceTasks
 44504 ;; This function uses a non-reentrant model
 44505 ;;
 44506                           
 44507                           	psect	text220
 44508  01029C                     __ptext220:
 44509                           	opt stack 0
 44510  01029C                     _USBCtrlEPService:
 44511                           	opt stack 9
 44512                           
 44513                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 44514                           
 44515                           ; BSR set to: 1
 44516                           ;incstack = 0
 44517  01029C  0E2D               	movlw	45
 44518  01029E  6E56               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 44519                           
 44520                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 44521  0102A0  C05D  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44522  0102A4  0EFD               	movlw	253
 44523  0102A6  161E               	andwf	??_USBCtrlEPService,f,c
 44524  0102A8  A4D8               	btfss	status,2,c
 44525  0102AA  D03C               	goto	i2l323
 44526                           
 44527                           ;usb_device.c: 2385: {
 44528                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 44529  0102AC  C05D  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44530  0102B0  90D8               	bcf	status,0,c
 44531  0102B2  321E               	rrcf	??_USBCtrlEPService,f,c
 44532  0102B4  0E3F               	movlw	63
 44533  0102B6  161E               	andwf	??_USBCtrlEPService,f,c
 44534  0102B8  501E               	movf	??_USBCtrlEPService,w,c
 44535  0102BA  0D04               	mullw	4
 44536  0102BC  0E00               	movlw	0
 44537  0102BE  24F3               	addwf	prodl,w,c
 44538  0102C0  6E49               	movwf	_pBDTEntryEP0OutCurrent,c
 44539  0102C2  0E0D               	movlw	13
 44540  0102C4  20F4               	addwfc	prodh,w,c
 44541  0102C6  6E4A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 44542                           
 44543                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 44544  0102C8  C049  F0FB         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 44545  0102CC  C04A  F0FC         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 44546                           
 44547                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 44548  0102D0  0E04               	movlw	4
 44549  0102D2  0100               	movlb	0	; () banked
 44550  0102D4  19FB               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 44551  0102D6  6FFB               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 44552  0102D8  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 44553  0102DA  6FFC               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 44554                           
 44555                           ; BSR set to: 0
 44556                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 44557  0102DC  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44558  0102E0  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44559  0102E4  30DF               	rrcf	indf2,w,c
 44560  0102E6  32E8               	rrcf	wreg,f,c
 44561  0102E8  0B0F               	andlw	15
 44562  0102EA  0A0D               	xorlw	13
 44563  0102EC  A4D8               	btfss	status,2,c
 44564  0102EE  D017               	goto	i2l324
 44565                           
 44566                           ; BSR set to: 0
 44567                           ;usb_device.c: 2402: {
 44568                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 44569  0102F0  0E30               	movlw	48
 44570  0102F2  6E01               	movwf	i2memcpy@d1,c
 44571  0102F4  0E0D               	movlw	13
 44572  0102F6  6E02               	movwf	i2memcpy@d1+1,c
 44573  0102F8  EE20 F002          	lfsr	2,2
 44574  0102FC  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 44575  0102FE  26D9               	addwf	fsr2l,f,c
 44576  010300  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 44577  010302  22DA               	addwfc	fsr2h,f,c
 44578  010304  CFDE F003          	movff	postinc2,i2memcpy@s1
 44579  010308  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 44580  01030C  0E00               	movlw	0
 44581  01030E  6E06               	movwf	i2memcpy@n+1,c
 44582  010310  0E08               	movlw	8
 44583  010312  6E05               	movwf	i2memcpy@n,c
 44584  010314  EC03  F08C         	call	i2_memcpy	;wreg free
 44585                           
 44586                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 44587  010318  EC0C  F083         	call	_USBCtrlTrfSetupHandler	;wreg free
 44588                           
 44589                           ;usb_device.c: 2411: }
 44590  01031C  0012               	return	
 44591  01031E                     i2l324:
 44592                           
 44593                           ;usb_device.c: 2412: else
 44594                           ;usb_device.c: 2413: {
 44595                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 44596  01031E  ECE9  F08A         	call	_USBCtrlTrfOutHandler	;wreg free
 44597                           
 44598                           ;usb_device.c: 2416: }
 44599                           ;usb_device.c: 2417: }
 44600  010322  0012               	return	
 44601  010324                     i2l323:
 44602                           
 44603                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 44604  010324  505D               	movf	_USTATcopy,w,c	;volatile
 44605  010326  0BFD               	andlw	253
 44606  010328  0A04               	xorlw	4
 44607  01032A  A4D8               	btfss	status,2,c
 44608  01032C  0012               	return	
 44609                           
 44610                           ;usb_device.c: 2419: {
 44611                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 44612  01032E  EC9C  F07E         	call	_USBCtrlTrfInHandler	;wreg free
 44613  010332  0012               	return	
 44614  010334                     __end_of_USBCtrlEPService:
 44615                           	opt stack 0
 44616                           tosu	equ	0xFFF
 44617                           tosh	equ	0xFFE
 44618                           tosl	equ	0xFFD
 44619                           pclatu	equ	0xFFB
 44620                           pclath	equ	0xFFA
 44621                           tblptru	equ	0xFF8
 44622                           tblptrh	equ	0xFF7
 44623                           tblptrl	equ	0xFF6
 44624                           tablat	equ	0xFF5
 44625                           prodh	equ	0xFF4
 44626                           prodl	equ	0xFF3
 44627                           intcon	equ	0xFF2
 44628                           intcon2	equ	0xFF1
 44629                           intcon3	equ	0xFF0
 44630                           indf0	equ	0xFEF
 44631                           postinc0	equ	0xFEE
 44632                           fsr0h	equ	0xFEA
 44633                           fsr0l	equ	0xFE9
 44634                           wreg	equ	0xFE8
 44635                           indf1	equ	0xFE7
 44636                           postinc1	equ	0xFE6
 44637                           postdec1	equ	0xFE5
 44638                           plusw1	equ	0xFE3
 44639                           fsr1h	equ	0xFE2
 44640                           fsr1l	equ	0xFE1
 44641                           indf2	equ	0xFDF
 44642                           postinc2	equ	0xFDE
 44643                           postdec2	equ	0xFDD
 44644                           plusw2	equ	0xFDB
 44645                           fsr2h	equ	0xFDA
 44646                           fsr2l	equ	0xFD9
 44647                           status	equ	0xFD8
 44648                           
 44649 ;; *************** function i2_memcpy *****************
 44650 ;; Defined at:
 44651 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 44652 ;; Parameters:    Size  Location     Type
 44653 ;;  d1              2    0[COMRAM] PTR void 
 44654 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44655 ;;		 -> SetupPkt(8), 
 44656 ;;  s1              2    2[COMRAM] PTR const void 
 44657 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44658 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44659 ;;		 -> SetupPkt(8), 
 44660 ;;  n               2    4[COMRAM] unsigned int 
 44661 ;; Auto vars:     Size  Location     Type
 44662 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 44663 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44664 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44665 ;;		 -> SetupPkt(8), 
 44666 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 44667 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44668 ;;		 -> SetupPkt(8), 
 44669 ;;  memcpy          1   10[COMRAM] unsigned char 
 44670 ;; Return value:  Size  Location     Type
 44671 ;;                  2    0[COMRAM] PTR void 
 44672 ;; Registers used:
 44673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44674 ;; Tracked objects:
 44675 ;;		On entry : 0/0
 44676 ;;		On exit  : 0/0
 44677 ;;		Unchanged: 0/0
 44678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44679 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44680 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44682 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44683 ;;Total ram usage:       11 bytes
 44684 ;; Hardware stack levels used:    1
 44685 ;; This function calls:
 44686 ;;		Nothing
 44687 ;; This function is called by:
 44688 ;;		_USBCtrlEPService
 44689 ;; This function uses a non-reentrant model
 44690 ;;
 44691                           
 44692                           	psect	text221
 44693  011806                     __ptext221:
 44694                           	opt stack 0
 44695  011806                     i2_memcpy:
 44696                           	opt stack 15
 44697                           
 44698                           ;incstack = 0
 44699  011806  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 44700  01180A  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 44701  01180E  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 44702  011812  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 44703  011816  D01C               	goto	i2l3741
 44704  011818                     i2l14114:
 44705  011818  C009  FFF6         	movff	i2memcpy@s,tblptrl
 44706  01181C  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 44707  011820  0E00               	movlw	low (__mediumconst shr (0+16))
 44708  011822  6EF8               	movwf	tblptru,c
 44709  011824  0E0E               	movlw	(high __ramtop+-1)
 44710  011826  64F7               	cpfsgt	tblptrh,c
 44711  011828  D003               	bra	i2u1199_47
 44712  01182A  0008               	tblrd		*
 44713  01182C  50F5               	movf	tablat,w,c
 44714  01182E  D005               	bra	i2u1199_40
 44715  011830                     i2u1199_47:
 44716  011830  CFF6 FFE9          	movff	tblptrl,fsr0l
 44717  011834  CFF7 FFEA          	movff	tblptrh,fsr0h
 44718  011838  50EF               	movf	indf0,w,c
 44719  01183A                     i2u1199_40:
 44720  01183A  6E0B               	movwf	i2memcpy@tmp,c
 44721  01183C  4A09               	infsnz	i2memcpy@s,f,c
 44722  01183E  2A0A               	incf	i2memcpy@s+1,f,c
 44723  011840  C007  FFD9         	movff	i2memcpy@d,fsr2l
 44724  011844  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 44725  011848  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 44726  01184C  4A07               	infsnz	i2memcpy@d,f,c
 44727  01184E  2A08               	incf	i2memcpy@d+1,f,c
 44728  011850                     i2l3741:
 44729  011850  0605               	decf	i2memcpy@n,f,c
 44730  011852  A0D8               	btfss	status,0,c
 44731  011854  0606               	decf	i2memcpy@n+1,f,c
 44732  011856  2805               	incf	i2memcpy@n,w,c
 44733  011858  E1DF               	bnz	i2l14114
 44734  01185A  2806               	incf	i2memcpy@n+1,w,c
 44735  01185C  B4D8               	btfsc	status,2,c
 44736  01185E  0012               	return	
 44737  011860  D7DB               	goto	i2l3742
 44738  011862                     __end_ofi2_memcpy:
 44739                           	opt stack 0
 44740                           tosu	equ	0xFFF
 44741                           tosh	equ	0xFFE
 44742                           tosl	equ	0xFFD
 44743                           pclatu	equ	0xFFB
 44744                           pclath	equ	0xFFA
 44745                           tblptru	equ	0xFF8
 44746                           tblptrh	equ	0xFF7
 44747                           tblptrl	equ	0xFF6
 44748                           tablat	equ	0xFF5
 44749                           prodh	equ	0xFF4
 44750                           prodl	equ	0xFF3
 44751                           intcon	equ	0xFF2
 44752                           intcon2	equ	0xFF1
 44753                           intcon3	equ	0xFF0
 44754                           indf0	equ	0xFEF
 44755                           postinc0	equ	0xFEE
 44756                           fsr0h	equ	0xFEA
 44757                           fsr0l	equ	0xFE9
 44758                           wreg	equ	0xFE8
 44759                           indf1	equ	0xFE7
 44760                           postinc1	equ	0xFE6
 44761                           postdec1	equ	0xFE5
 44762                           plusw1	equ	0xFE3
 44763                           fsr1h	equ	0xFE2
 44764                           fsr1l	equ	0xFE1
 44765                           indf2	equ	0xFDF
 44766                           postinc2	equ	0xFDE
 44767                           postdec2	equ	0xFDD
 44768                           plusw2	equ	0xFDB
 44769                           fsr2h	equ	0xFDA
 44770                           fsr2l	equ	0xFD9
 44771                           status	equ	0xFD8
 44772                           
 44773 ;; *************** function _USBCtrlTrfSetupHandler *****************
 44774 ;; Defined at:
 44775 ;;		line 2467 in file "usb_device.c"
 44776 ;; Parameters:    Size  Location     Type
 44777 ;;		None
 44778 ;; Auto vars:     Size  Location     Type
 44779 ;;		None
 44780 ;; Return value:  Size  Location     Type
 44781 ;;                  1    wreg      void 
 44782 ;; Registers used:
 44783 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44784 ;; Tracked objects:
 44785 ;;		On entry : 0/0
 44786 ;;		On exit  : 0/0
 44787 ;;		Unchanged: 0/0
 44788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44793 ;;Total ram usage:        0 bytes
 44794 ;; Hardware stack levels used:    1
 44795 ;; Hardware stack levels required when called:    6
 44796 ;; This function calls:
 44797 ;;		_USBCheckStdRequest
 44798 ;;		_USBCtrlEPServiceComplete
 44799 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44800 ;; This function is called by:
 44801 ;;		_USBCtrlEPService
 44802 ;; This function uses a non-reentrant model
 44803 ;;
 44804                           
 44805                           	psect	text222
 44806  010618                     __ptext222:
 44807                           	opt stack 0
 44808  010618                     _USBCtrlTrfSetupHandler:
 44809                           	opt stack 9
 44810                           
 44811                           ;usb_device.c: 2472: shortPacketStatus = 0;
 44812                           
 44813                           ;incstack = 0
 44814  010618  0E00               	movlw	0
 44815  01061A  6E5B               	movwf	_shortPacketStatus,c	;volatile
 44816                           
 44817                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 44818  01061C  0E00               	movlw	0
 44819  01061E  6E55               	movwf	_USBDeferStatusStagePacket,c	;volatile
 44820                           
 44821                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 44822  010620  0E00               	movlw	0
 44823  010622  0101               	movlb	1	; () banked
 44824  010624  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 44825                           
 44826                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 44827  010626  0E00               	movlw	0
 44828  010628  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 44829                           
 44830                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 44831  01062A  0E00               	movlw	0
 44832  01062C  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 44833                           
 44834                           ;usb_device.c: 2477: controlTransferState = 0;
 44835  01062E  0E00               	movlw	0
 44836  010630  6E5A               	movwf	_controlTransferState,c	;volatile
 44837                           
 44838                           ; BSR set to: 1
 44839                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 44840  010632  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 44841  010636  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44842  01063A  0E7F               	movlw	127
 44843  01063C  16DF               	andwf	indf2,f,c
 44844                           
 44845                           ; BSR set to: 1
 44846                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 44847  01063E  0E04               	movlw	4
 44848  010640  183B               	xorwf	_pBDTEntryIn,w,c
 44849  010642  6E3B               	movwf	_pBDTEntryIn,c
 44850  010644  503C               	movf	_pBDTEntryIn+1,w,c
 44851  010646  6E3C               	movwf	_pBDTEntryIn+1,c
 44852                           
 44853                           ; BSR set to: 1
 44854                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 44855  010648  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 44856  01064C  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44857  010650  0E7F               	movlw	127
 44858  010652  16DF               	andwf	indf2,f,c
 44859                           
 44860                           ; BSR set to: 1
 44861                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 44862  010654  0E04               	movlw	4
 44863  010656  183B               	xorwf	_pBDTEntryIn,w,c
 44864  010658  6E3B               	movwf	_pBDTEntryIn,c
 44865  01065A  503C               	movf	_pBDTEntryIn+1,w,c
 44866  01065C  6E3C               	movwf	_pBDTEntryIn+1,c
 44867                           
 44868                           ; BSR set to: 1
 44869                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 44870  01065E  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44871  010662  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44872  010666  0E7F               	movlw	127
 44873  010668  16DF               	andwf	indf2,f,c
 44874                           
 44875                           ; BSR set to: 1
 44876                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 44877  01066A  0E00               	movlw	0
 44878  01066C  0100               	movlb	0	; () banked
 44879  01066E  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 44880                           
 44881                           ; BSR set to: 0
 44882                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 44883  010670  0E00               	movlw	0
 44884  010672  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 44885  010674  0E00               	movlw	0
 44886  010676  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 44887                           
 44888                           ; BSR set to: 0
 44889                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 44890  010678  0E00               	movlw	0
 44891  01067A  6E35               	movwf	_outPipes+3,c	;volatile
 44892                           
 44893                           ; BSR set to: 0
 44894                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 44895  01067C  0E00               	movlw	0
 44896  01067E  6E37               	movwf	_outPipes+5,c	;volatile
 44897  010680  0E00               	movlw	0
 44898  010682  6E36               	movwf	_outPipes+4,c	;volatile
 44899                           
 44900                           ; BSR set to: 0
 44901                           ;usb_device.c: 2502: USBCheckStdRequest();
 44902  010684  EC1D  F07A         	call	_USBCheckStdRequest	;wreg free
 44903                           
 44904                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 44905  010688  0E00               	movlw	0
 44906  01068A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44907  01068C  0E03               	movlw	3
 44908  01068E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44909  010690  0E00               	movlw	0
 44910  010692  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44911  010694  0E00               	movlw	0
 44912  010696  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44913  010698  0E00               	movlw	0
 44914  01069A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44915  01069C  0E00               	movlw	0
 44916  01069E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44917  0106A0  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44918                           
 44919                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 44920  0106A4  ECE6  F075         	call	_USBCtrlEPServiceComplete	;wreg free
 44921  0106A8  0012               	return		;funcret
 44922  0106AA                     __end_of_USBCtrlTrfSetupHandler:
 44923                           	opt stack 0
 44924                           tosu	equ	0xFFF
 44925                           tosh	equ	0xFFE
 44926                           tosl	equ	0xFFD
 44927                           pclatu	equ	0xFFB
 44928                           pclath	equ	0xFFA
 44929                           tblptru	equ	0xFF8
 44930                           tblptrh	equ	0xFF7
 44931                           tblptrl	equ	0xFF6
 44932                           tablat	equ	0xFF5
 44933                           prodh	equ	0xFF4
 44934                           prodl	equ	0xFF3
 44935                           intcon	equ	0xFF2
 44936                           intcon2	equ	0xFF1
 44937                           intcon3	equ	0xFF0
 44938                           indf0	equ	0xFEF
 44939                           postinc0	equ	0xFEE
 44940                           fsr0h	equ	0xFEA
 44941                           fsr0l	equ	0xFE9
 44942                           wreg	equ	0xFE8
 44943                           indf1	equ	0xFE7
 44944                           postinc1	equ	0xFE6
 44945                           postdec1	equ	0xFE5
 44946                           plusw1	equ	0xFE3
 44947                           fsr1h	equ	0xFE2
 44948                           fsr1l	equ	0xFE1
 44949                           indf2	equ	0xFDF
 44950                           postinc2	equ	0xFDE
 44951                           postdec2	equ	0xFDD
 44952                           plusw2	equ	0xFDB
 44953                           fsr2h	equ	0xFDA
 44954                           fsr2l	equ	0xFD9
 44955                           status	equ	0xFD8
 44956                           
 44957 ;; *************** function _USBCtrlEPServiceComplete *****************
 44958 ;; Defined at:
 44959 ;;		line 1618 in file "usb_device.c"
 44960 ;; Parameters:    Size  Location     Type
 44961 ;;		None
 44962 ;; Auto vars:     Size  Location     Type
 44963 ;;		None
 44964 ;; Return value:  Size  Location     Type
 44965 ;;                  1    wreg      void 
 44966 ;; Registers used:
 44967 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44968 ;; Tracked objects:
 44969 ;;		On entry : 0/0
 44970 ;;		On exit  : 0/0
 44971 ;;		Unchanged: 0/0
 44972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44977 ;;Total ram usage:        0 bytes
 44978 ;; Hardware stack levels used:    1
 44979 ;; Hardware stack levels required when called:    2
 44980 ;; This function calls:
 44981 ;;		_USBCtrlEPAllowDataStage
 44982 ;;		_USBCtrlEPAllowStatusStage
 44983 ;; This function is called by:
 44984 ;;		_USBCtrlTrfSetupHandler
 44985 ;; This function uses a non-reentrant model
 44986 ;;
 44987                           
 44988                           	psect	text223
 44989  00EBCC                     __ptext223:
 44990                           	opt stack 0
 44991  00EBCC                     _USBCtrlEPServiceComplete:
 44992                           	opt stack 12
 44993                           
 44994                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 44995                           
 44996                           ;incstack = 0
 44997  00EBCC  9865               	bcf	3941,4,c	;volatile
 44998                           
 44999                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 45000  00EBCE  0100               	movlb	0	; () banked
 45001  00EBD0  BFF6               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 45002  00EBD2  D03B               	goto	i2l233
 45003                           
 45004                           ; BSR set to: 0
 45005                           ;usb_device.c: 1631: {
 45006                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 45007  00EBD4  AE35               	btfss	_outPipes+3,7,c	;volatile
 45008  00EBD6  D00D               	goto	i2l234
 45009                           
 45010                           ; BSR set to: 0
 45011                           ;usb_device.c: 1633: {
 45012                           ;usb_device.c: 1634: controlTransferState = 2;
 45013  00EBD8  0E02               	movlw	2
 45014  00EBDA  6E5A               	movwf	_controlTransferState,c	;volatile
 45015                           
 45016                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 45017  00EBDC  0101               	movlb	1	; () banked
 45018  00EBDE  51F7               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 45019  00EBE0  B4D8               	btfsc	status,2,c
 45020                           
 45021                           ; BSR set to: 1
 45022                           ;usb_device.c: 1646: {
 45023                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 45024  00EBE2  ECB2  F080         	call	_USBCtrlEPAllowDataStage	;wreg free
 45025                           
 45026                           ;usb_device.c: 1648: }
 45027                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 45028  00EBE6  0E00               	movlw	0
 45029  00EBE8  0101               	movlb	1	; () banked
 45030  00EBEA  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 45031                           
 45032                           ; BSR set to: 1
 45033                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 45034  00EBEC  0E00               	movlw	0
 45035  00EBEE  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 45036                           
 45037                           ;usb_device.c: 1654: }
 45038  00EBF0  0012               	return	
 45039  00EBF2                     i2l234:
 45040                           
 45041                           ;usb_device.c: 1655: else
 45042                           ;usb_device.c: 1656: {
 45043                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 45044                           
 45045                           ; BSR set to: 1
 45046  00EBF2  0100               	movlb	0	; () banked
 45047  00EBF4  EE20 F001          	lfsr	2,1
 45048  00EBF8  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45049  00EBFA  26D9               	addwf	fsr2l,f,c
 45050  00EBFC  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45051  00EBFE  22DA               	addwfc	fsr2h,f,c
 45052  00EC00  0E08               	movlw	8
 45053  00EC02  6EDF               	movwf	indf2,c
 45054                           
 45055                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 45056  00EC04  EE20 F002          	lfsr	2,2
 45057  00EC08  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45058  00EC0A  26D9               	addwf	fsr2l,f,c
 45059  00EC0C  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45060  00EC0E  22DA               	addwfc	fsr2h,f,c
 45061  00EC10  0E30               	movlw	48
 45062  00EC12  6EDE               	movwf	postinc2,c
 45063  00EC14  0E0D               	movlw	13
 45064  00EC16  6EDD               	movwf	postdec2,c
 45065                           
 45066                           ; BSR set to: 0
 45067                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 45068  00EC18  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45069  00EC1C  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45070  00EC20  0E0C               	movlw	12
 45071  00EC22  6EDF               	movwf	indf2,c
 45072                           
 45073                           ; BSR set to: 0
 45074                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 45075  00EC24  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45076  00EC28  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45077  00EC2C  0E00               	movlw	0
 45078  00EC2E  8EDB               	bsf	plusw2,7,c
 45079                           
 45080                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 45081  00EC30  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45082  00EC34  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45083  00EC38  0E04               	movlw	4
 45084  00EC3A  6EDF               	movwf	indf2,c
 45085                           
 45086                           ; BSR set to: 0
 45087                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 45088  00EC3C  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45089  00EC40  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45090  00EC44  0E00               	movlw	0
 45091  00EC46  8EDB               	bsf	plusw2,7,c
 45092                           
 45093                           ; BSR set to: 0
 45094                           ;usb_device.c: 1667: }
 45095                           ;usb_device.c: 1668: }
 45096  00EC48  0012               	return	
 45097  00EC4A                     i2l233:
 45098                           
 45099                           ; BSR set to: 0
 45100                           ;usb_device.c: 1669: else
 45101                           ;usb_device.c: 1670: {
 45102                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 45103  00EC4A  010D               	movlb	13	; () banked
 45104  00EC4C  AF30               	btfss	48,7,b	;volatile
 45105  00EC4E  D012               	goto	i2l238
 45106                           
 45107                           ; BSR set to: 13
 45108                           ;usb_device.c: 1672: {
 45109                           ;usb_device.c: 1673: controlTransferState = 1;
 45110  00EC50  0E01               	movlw	1
 45111  00EC52  6E5A               	movwf	_controlTransferState,c	;volatile
 45112                           
 45113                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 45114  00EC54  0101               	movlb	1	; () banked
 45115  00EC56  51F8               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 45116  00EC58  B4D8               	btfsc	status,2,c
 45117                           
 45118                           ; BSR set to: 1
 45119                           ;usb_device.c: 1688: {
 45120                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 45121  00EC5A  ECB2  F080         	call	_USBCtrlEPAllowDataStage	;wreg free
 45122                           
 45123                           ;usb_device.c: 1690: }
 45124                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 45125  00EC5E  0E00               	movlw	0
 45126  00EC60  0101               	movlb	1	; () banked
 45127  00EC62  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 45128                           
 45129                           ; BSR set to: 1
 45130                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 45131  00EC64  0E00               	movlw	0
 45132  00EC66  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 45133                           
 45134                           ; BSR set to: 1
 45135                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 45136  00EC68  5055               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 45137  00EC6A  A4D8               	btfss	status,2,c
 45138  00EC6C  0012               	return	
 45139                           
 45140                           ; BSR set to: 1
 45141                           ;usb_device.c: 1715: {
 45142                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 45143  00EC6E  ECD8  F07D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45144                           
 45145                           ;usb_device.c: 1717: }
 45146                           ;usb_device.c: 1718: }
 45147  00EC72  0012               	return	
 45148  00EC74                     i2l238:
 45149                           
 45150                           ;usb_device.c: 1719: else
 45151                           ;usb_device.c: 1720: {
 45152                           ;usb_device.c: 1731: controlTransferState = 2;
 45153  00EC74  0E02               	movlw	2
 45154  00EC76  6E5A               	movwf	_controlTransferState,c	;volatile
 45155                           
 45156                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 45157  00EC78  0100               	movlb	0	; () banked
 45158  00EC7A  EE20 F001          	lfsr	2,1
 45159  00EC7E  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45160  00EC80  26D9               	addwf	fsr2l,f,c
 45161  00EC82  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45162  00EC84  22DA               	addwfc	fsr2h,f,c
 45163  00EC86  0E08               	movlw	8
 45164  00EC88  6EDF               	movwf	indf2,c
 45165                           
 45166                           ; BSR set to: 0
 45167                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 45168  00EC8A  EE20 F002          	lfsr	2,2
 45169  00EC8E  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45170  00EC90  26D9               	addwf	fsr2l,f,c
 45171  00EC92  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45172  00EC94  22DA               	addwfc	fsr2h,f,c
 45173  00EC96  0E30               	movlw	48
 45174  00EC98  6EDE               	movwf	postinc2,c
 45175  00EC9A  0E0D               	movlw	13
 45176  00EC9C  6EDD               	movwf	postdec2,c
 45177                           
 45178                           ; BSR set to: 0
 45179                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 45180  00EC9E  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45181  00ECA2  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45182  00ECA6  0E04               	movlw	4
 45183  00ECA8  6EDF               	movwf	indf2,c
 45184                           
 45185                           ; BSR set to: 0
 45186                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 45187  00ECAA  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45188  00ECAE  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45189  00ECB2  0E00               	movlw	0
 45190  00ECB4  8EDB               	bsf	plusw2,7,c
 45191                           
 45192                           ; BSR set to: 0
 45193                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 45194  00ECB6  0E00               	movlw	0
 45195  00ECB8  0101               	movlb	1	; () banked
 45196  00ECBA  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 45197                           
 45198                           ; BSR set to: 1
 45199                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 45200  00ECBC  0E00               	movlw	0
 45201  00ECBE  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 45202                           
 45203                           ; BSR set to: 1
 45204                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 45205  00ECC0  5055               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 45206  00ECC2  A4D8               	btfss	status,2,c
 45207  00ECC4  0012               	return	
 45208                           
 45209                           ; BSR set to: 1
 45210                           ;usb_device.c: 1743: {
 45211                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 45212  00ECC6  ECD8  F07D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45213  00ECCA  0012               	return	
 45214  00ECCC                     __end_of_USBCtrlEPServiceComplete:
 45215                           	opt stack 0
 45216                           tosu	equ	0xFFF
 45217                           tosh	equ	0xFFE
 45218                           tosl	equ	0xFFD
 45219                           pclatu	equ	0xFFB
 45220                           pclath	equ	0xFFA
 45221                           tblptru	equ	0xFF8
 45222                           tblptrh	equ	0xFF7
 45223                           tblptrl	equ	0xFF6
 45224                           tablat	equ	0xFF5
 45225                           prodh	equ	0xFF4
 45226                           prodl	equ	0xFF3
 45227                           intcon	equ	0xFF2
 45228                           intcon2	equ	0xFF1
 45229                           intcon3	equ	0xFF0
 45230                           indf0	equ	0xFEF
 45231                           postinc0	equ	0xFEE
 45232                           fsr0h	equ	0xFEA
 45233                           fsr0l	equ	0xFE9
 45234                           wreg	equ	0xFE8
 45235                           indf1	equ	0xFE7
 45236                           postinc1	equ	0xFE6
 45237                           postdec1	equ	0xFE5
 45238                           plusw1	equ	0xFE3
 45239                           fsr1h	equ	0xFE2
 45240                           fsr1l	equ	0xFE1
 45241                           indf2	equ	0xFDF
 45242                           postinc2	equ	0xFDE
 45243                           postdec2	equ	0xFDD
 45244                           plusw2	equ	0xFDB
 45245                           fsr2h	equ	0xFDA
 45246                           fsr2l	equ	0xFD9
 45247                           status	equ	0xFD8
 45248                           
 45249 ;; *************** function _USBCtrlEPAllowDataStage *****************
 45250 ;; Defined at:
 45251 ;;		line 1490 in file "usb_device.c"
 45252 ;; Parameters:    Size  Location     Type
 45253 ;;		None
 45254 ;; Auto vars:     Size  Location     Type
 45255 ;;		None
 45256 ;; Return value:  Size  Location     Type
 45257 ;;                  1    wreg      void 
 45258 ;; Registers used:
 45259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45260 ;; Tracked objects:
 45261 ;;		On entry : 0/0
 45262 ;;		On exit  : 0/0
 45263 ;;		Unchanged: 0/0
 45264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45269 ;;Total ram usage:        0 bytes
 45270 ;; Hardware stack levels used:    1
 45271 ;; Hardware stack levels required when called:    1
 45272 ;; This function calls:
 45273 ;;		_USBCtrlTrfTxService
 45274 ;; This function is called by:
 45275 ;;		_USBCtrlEPServiceComplete
 45276 ;; This function uses a non-reentrant model
 45277 ;;
 45278                           
 45279                           	psect	text224
 45280  010164                     __ptext224:
 45281                           	opt stack 0
 45282  010164                     _USBCtrlEPAllowDataStage:
 45283                           	opt stack 12
 45284                           
 45285                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 45286                           
 45287                           ;incstack = 0
 45288  010164  0E00               	movlw	0
 45289  010166  0101               	movlb	1	; () banked
 45290  010168  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 45291                           
 45292                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 45293  01016A  0E00               	movlw	0
 45294  01016C  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 45295                           
 45296                           ; BSR set to: 1
 45297                           ;usb_device.c: 1495: if(controlTransferState == 2)
 45298  01016E  0E02               	movlw	2
 45299  010170  185A               	xorwf	_controlTransferState,w,c	;volatile
 45300  010172  A4D8               	btfss	status,2,c
 45301  010174  D020               	goto	i2l222
 45302                           
 45303                           ; BSR set to: 1
 45304                           ;usb_device.c: 1496: {
 45305                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 45306  010176  0100               	movlb	0	; () banked
 45307  010178  EE20 F001          	lfsr	2,1
 45308  01017C  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45309  01017E  26D9               	addwf	fsr2l,f,c
 45310  010180  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45311  010182  22DA               	addwfc	fsr2h,f,c
 45312  010184  0E08               	movlw	8
 45313  010186  6EDF               	movwf	indf2,c
 45314                           
 45315                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 45316  010188  EE20 F002          	lfsr	2,2
 45317  01018C  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45318  01018E  26D9               	addwf	fsr2l,f,c
 45319  010190  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45320  010192  22DA               	addwfc	fsr2h,f,c
 45321  010194  0E38               	movlw	56
 45322  010196  6EDE               	movwf	postinc2,c
 45323  010198  0E0D               	movlw	13
 45324  01019A  6EDD               	movwf	postdec2,c
 45325                           
 45326                           ; BSR set to: 0
 45327                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 45328  01019C  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45329  0101A0  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45330  0101A4  0E48               	movlw	72
 45331  0101A6  6EDF               	movwf	indf2,c
 45332                           
 45333                           ; BSR set to: 0
 45334                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 45335  0101A8  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45336  0101AC  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45337  0101B0  0E00               	movlw	0
 45338  0101B2  8EDB               	bsf	plusw2,7,c
 45339                           
 45340                           ;usb_device.c: 1502: }
 45341  0101B4  0012               	return	
 45342  0101B6                     i2l222:
 45343                           
 45344                           ;usb_device.c: 1503: else
 45345                           ;usb_device.c: 1504: {
 45346                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 45347                           
 45348                           ; BSR set to: 0
 45349  0101B6  0100               	movlb	0	; () banked
 45350  0101B8  51F7               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 45351  0101BA  010D               	movlb	13	; () banked
 45352  0101BC  5D36               	subwf	54,w,b	;volatile
 45353  0101BE  0100               	movlb	0	; () banked
 45354  0101C0  51F8               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 45355  0101C2  010D               	movlb	13	; () banked
 45356  0101C4  5937               	subwfb	55,w,b	;volatile
 45357  0101C6  B0D8               	btfsc	status,0,c
 45358  0101C8  D004               	goto	i2l224
 45359                           
 45360                           ; BSR set to: 13
 45361                           ;usb_device.c: 1508: {
 45362                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 45363  0101CA  CD36 F0F7          	movff	3382,_inPipes+4	;volatile
 45364  0101CE  CD37 F0F8          	movff	3383,_inPipes+5	;volatile
 45365  0101D2                     i2l224:
 45366                           
 45367                           ; BSR set to: 13
 45368                           ;usb_device.c: 1510: }
 45369                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 45370                           
 45371                           ; BSR set to: 13
 45372  0101D2  ECDB  F07B         	call	_USBCtrlTrfTxService	;wreg free
 45373                           
 45374                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 45375  0101D6  EE20 F002          	lfsr	2,2
 45376  0101DA  503B               	movf	_pBDTEntryIn,w,c
 45377  0101DC  26D9               	addwf	fsr2l,f,c
 45378  0101DE  503C               	movf	_pBDTEntryIn+1,w,c
 45379  0101E0  22DA               	addwfc	fsr2h,f,c
 45380  0101E2  0E38               	movlw	56
 45381  0101E4  6EDE               	movwf	postinc2,c
 45382  0101E6  0E0D               	movlw	13
 45383  0101E8  6EDD               	movwf	postdec2,c
 45384                           
 45385                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 45386  0101EA  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45387  0101EE  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45388  0101F2  0E48               	movlw	72
 45389  0101F4  6EDF               	movwf	indf2,c
 45390                           
 45391                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 45392  0101F6  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45393  0101FA  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45394  0101FE  0E00               	movlw	0
 45395  010200  8EDB               	bsf	plusw2,7,c
 45396  010202  0012               	return	
 45397  010204                     __end_of_USBCtrlEPAllowDataStage:
 45398                           	opt stack 0
 45399                           tosu	equ	0xFFF
 45400                           tosh	equ	0xFFE
 45401                           tosl	equ	0xFFD
 45402                           pclatu	equ	0xFFB
 45403                           pclath	equ	0xFFA
 45404                           tblptru	equ	0xFF8
 45405                           tblptrh	equ	0xFF7
 45406                           tblptrl	equ	0xFF6
 45407                           tablat	equ	0xFF5
 45408                           prodh	equ	0xFF4
 45409                           prodl	equ	0xFF3
 45410                           intcon	equ	0xFF2
 45411                           intcon2	equ	0xFF1
 45412                           intcon3	equ	0xFF0
 45413                           indf0	equ	0xFEF
 45414                           postinc0	equ	0xFEE
 45415                           fsr0h	equ	0xFEA
 45416                           fsr0l	equ	0xFE9
 45417                           wreg	equ	0xFE8
 45418                           indf1	equ	0xFE7
 45419                           postinc1	equ	0xFE6
 45420                           postdec1	equ	0xFE5
 45421                           plusw1	equ	0xFE3
 45422                           fsr1h	equ	0xFE2
 45423                           fsr1l	equ	0xFE1
 45424                           indf2	equ	0xFDF
 45425                           postinc2	equ	0xFDE
 45426                           postdec2	equ	0xFDD
 45427                           plusw2	equ	0xFDB
 45428                           fsr2h	equ	0xFDA
 45429                           fsr2l	equ	0xFD9
 45430                           status	equ	0xFD8
 45431                           
 45432 ;; *************** function _USBCheckStdRequest *****************
 45433 ;; Defined at:
 45434 ;;		line 2688 in file "usb_device.c"
 45435 ;; Parameters:    Size  Location     Type
 45436 ;;		None
 45437 ;; Auto vars:     Size  Location     Type
 45438 ;;		None
 45439 ;; Return value:  Size  Location     Type
 45440 ;;                  1    wreg      void 
 45441 ;; Registers used:
 45442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45443 ;; Tracked objects:
 45444 ;;		On entry : 0/0
 45445 ;;		On exit  : 0/0
 45446 ;;		Unchanged: 0/0
 45447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45452 ;;Total ram usage:        0 bytes
 45453 ;; Hardware stack levels used:    1
 45454 ;; Hardware stack levels required when called:    5
 45455 ;; This function calls:
 45456 ;;		_USBStdFeatureReqHandler
 45457 ;;		_USBStdGetDscHandler
 45458 ;;		_USBStdGetStatusHandler
 45459 ;;		_USBStdSetCfgHandler
 45460 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45461 ;; This function is called by:
 45462 ;;		_USBCtrlTrfSetupHandler
 45463 ;; This function uses a non-reentrant model
 45464 ;;
 45465                           
 45466                           	psect	text225
 45467  00F43A                     __ptext225:
 45468                           	opt stack 0
 45469  00F43A                     _USBCheckStdRequest:
 45470                           	opt stack 9
 45471                           
 45472                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 45473                           
 45474                           ;incstack = 0
 45475  00F43A  010D               	movlb	13	; () banked
 45476  00F43C  3930               	swapf	48,w,b	;volatile
 45477  00F43E  32E8               	rrcf	wreg,f,c
 45478  00F440  0B03               	andlw	3
 45479  00F442  0900               	iorlw	0
 45480  00F444  A4D8               	btfss	status,2,c
 45481  00F446  0012               	return	
 45482  00F448  D047               	goto	i2l357
 45483  00F44A                     i2l358:
 45484                           
 45485                           ; BSR set to: 13
 45486                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 45487  00F44A  0100               	movlb	0	; () banked
 45488  00F44C  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45489                           
 45490                           ; BSR set to: 0
 45491                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 45492  00F44E  0E08               	movlw	8
 45493  00F450  6E5C               	movwf	_USBDeviceState,c	;volatile
 45494                           
 45495                           ;usb_device.c: 2698: break;
 45496  00F452  0012               	return	
 45497  00F454                     
 45498                           ;usb_device.c: 2700: USBStdGetDscHandler();
 45499                           
 45500                           ; BSR set to: 0
 45501  00F454  ECBB  F06D         	call	_USBStdGetDscHandler	;wreg free
 45502                           
 45503                           ;usb_device.c: 2701: break;
 45504  00F458  0012               	return	
 45505  00F45A                     
 45506                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 45507  00F45A  ECFF  F07A         	call	_USBStdSetCfgHandler	;wreg free
 45508                           
 45509                           ;usb_device.c: 2704: break;
 45510  00F45E  0012               	return	
 45511  00F460                     
 45512                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 45513  00F460  0E5E               	movlw	low _USBActiveConfiguration
 45514  00F462  0100               	movlb	0	; () banked
 45515  00F464  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 45516  00F466  0E00               	movlw	high _USBActiveConfiguration
 45517  00F468  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 45518                           
 45519                           ; BSR set to: 0
 45520                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45521  00F46A  81F6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 45522                           
 45523                           ; BSR set to: 0
 45524                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 45525  00F46C  0E01               	movlw	1
 45526  00F46E  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 45527                           
 45528                           ; BSR set to: 0
 45529                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 45530  00F470  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45531                           
 45532                           ;usb_device.c: 2710: break;
 45533  00F472  0012               	return	
 45534  00F474                     
 45535                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 45536                           
 45537                           ; BSR set to: 0
 45538  00F474  EC5E  F080         	call	_USBStdGetStatusHandler	;wreg free
 45539                           
 45540                           ;usb_device.c: 2713: break;
 45541  00F478  0012               	return	
 45542  00F47A                     
 45543                           ;usb_device.c: 2715: case 3:
 45544                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 45545  00F47A  EC01  F060         	call	_USBStdFeatureReqHandler	;wreg free
 45546                           
 45547                           ;usb_device.c: 2717: break;
 45548  00F47E  0012               	return	
 45549  00F480                     
 45550                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 45551  00F480  010D               	movlb	13	; () banked
 45552  00F482  5134               	movf	52,w,b	;volatile
 45553  00F484  0D01               	mullw	1
 45554  00F486  0EFC               	movlw	low _USBAlternateInterface
 45555  00F488  24F3               	addwf	prodl,w,c
 45556  00F48A  0100               	movlb	0	; () banked
 45557  00F48C  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 45558  00F48E  0E01               	movlw	high _USBAlternateInterface
 45559  00F490  20F4               	addwfc	prodh,w,c
 45560  00F492  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 45561                           
 45562                           ; BSR set to: 0
 45563                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45564  00F494  81F6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 45565                           
 45566                           ; BSR set to: 0
 45567                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 45568  00F496  0E01               	movlw	1
 45569  00F498  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 45570                           
 45571                           ; BSR set to: 0
 45572                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 45573  00F49A  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45574                           
 45575                           ;usb_device.c: 2723: break;
 45576  00F49C  0012               	return	
 45577  00F49E                     i2l367:
 45578                           
 45579                           ; BSR set to: 13
 45580                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 45581  00F49E  0100               	movlb	0	; () banked
 45582  00F4A0  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45583                           
 45584                           ; BSR set to: 0
 45585                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 45586  00F4A2  010D               	movlb	13	; () banked
 45587  00F4A4  5134               	movf	52,w,b	;volatile
 45588  00F4A6  0D01               	mullw	1
 45589  00F4A8  0EFC               	movlw	low _USBAlternateInterface
 45590  00F4AA  24F3               	addwf	prodl,w,c
 45591  00F4AC  6ED9               	movwf	fsr2l,c
 45592  00F4AE  0E01               	movlw	high _USBAlternateInterface
 45593  00F4B0  20F4               	addwfc	prodh,w,c
 45594  00F4B2  6EDA               	movwf	fsr2h,c
 45595  00F4B4  CD32 FFDF          	movff	3378,indf2	;volatile
 45596                           
 45597                           ;usb_device.c: 2727: break;
 45598  00F4B8  0012               	return	
 45599  00F4BA                     
 45600                           ; BSR set to: 13
 45601                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 45602                           
 45603                           ; BSR set to: 13
 45604  00F4BA  0E00               	movlw	0
 45605  00F4BC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45606  00F4BE  0E02               	movlw	2
 45607  00F4C0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45608  00F4C2  0E00               	movlw	0
 45609  00F4C4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45610  00F4C6  0E00               	movlw	0
 45611  00F4C8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45612  00F4CA  0E00               	movlw	0
 45613  00F4CC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45614  00F4CE  0E00               	movlw	0
 45615  00F4D0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45616  00F4D2  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45617                           
 45618                           ;usb_device.c: 2734: }
 45619                           
 45620                           ;usb_device.c: 2733: break;
 45621                           
 45622                           ;usb_device.c: 2732: default:
 45623                           
 45624                           ;usb_device.c: 2731: case 12:
 45625                           
 45626                           ;usb_device.c: 2730: break;
 45627  00F4D6  0012               	return	
 45628  00F4D8                     i2l357:
 45629  00F4D8  010D               	movlb	13	; () banked
 45630  00F4DA  5131               	movf	49,w,b	;volatile
 45631                           
 45632                           ; Switch size 1, requested type "space"
 45633                           ; Number of cases is 11, Range of values is 0 to 12
 45634                           ; switch strategies available:
 45635                           ; Name         Instructions Cycles
 45636                           ; simple_byte           34    18 (average)
 45637                           ;	Chosen strategy is simple_byte
 45638  00F4DC  0A00               	xorlw	0	; case 0
 45639  00F4DE  B4D8               	btfsc	status,2,c
 45640  00F4E0  D7C9               	goto	i2l363
 45641  00F4E2  0A01               	xorlw	1	; case 1
 45642  00F4E4  B4D8               	btfsc	status,2,c
 45643  00F4E6  D7C9               	goto	i2l364
 45644  00F4E8  0A02               	xorlw	2	; case 3
 45645  00F4EA  B4D8               	btfsc	status,2,c
 45646  00F4EC  D7C6               	goto	i2l364
 45647  00F4EE  0A06               	xorlw	6	; case 5
 45648  00F4F0  B4D8               	btfsc	status,2,c
 45649  00F4F2  D7AB               	goto	i2l358
 45650  00F4F4  0A03               	xorlw	3	; case 6
 45651  00F4F6  B4D8               	btfsc	status,2,c
 45652  00F4F8  D7AD               	goto	i2l360
 45653  00F4FA  0A01               	xorlw	1	; case 7
 45654  00F4FC  B4D8               	btfsc	status,2,c
 45655  00F4FE  D7DD               	goto	i2l368
 45656  00F500  0A0F               	xorlw	15	; case 8
 45657  00F502  B4D8               	btfsc	status,2,c
 45658  00F504  D7AD               	goto	i2l362
 45659  00F506  0A01               	xorlw	1	; case 9
 45660  00F508  B4D8               	btfsc	status,2,c
 45661  00F50A  D7A7               	goto	i2l361
 45662  00F50C  0A03               	xorlw	3	; case 10
 45663  00F50E  B4D8               	btfsc	status,2,c
 45664  00F510  D7B7               	goto	i2l366
 45665  00F512  0A01               	xorlw	1	; case 11
 45666  00F514  B4D8               	btfsc	status,2,c
 45667  00F516  D7C3               	goto	i2l367
 45668  00F518  0A07               	xorlw	7	; case 12
 45669  00F51A  0012               	return	
 45670  00F51C                     __end_of_USBCheckStdRequest:
 45671                           	opt stack 0
 45672                           tosu	equ	0xFFF
 45673                           tosh	equ	0xFFE
 45674                           tosl	equ	0xFFD
 45675                           pclatu	equ	0xFFB
 45676                           pclath	equ	0xFFA
 45677                           tblptru	equ	0xFF8
 45678                           tblptrh	equ	0xFF7
 45679                           tblptrl	equ	0xFF6
 45680                           tablat	equ	0xFF5
 45681                           prodh	equ	0xFF4
 45682                           prodl	equ	0xFF3
 45683                           intcon	equ	0xFF2
 45684                           intcon2	equ	0xFF1
 45685                           intcon3	equ	0xFF0
 45686                           indf0	equ	0xFEF
 45687                           postinc0	equ	0xFEE
 45688                           fsr0h	equ	0xFEA
 45689                           fsr0l	equ	0xFE9
 45690                           wreg	equ	0xFE8
 45691                           indf1	equ	0xFE7
 45692                           postinc1	equ	0xFE6
 45693                           postdec1	equ	0xFE5
 45694                           plusw1	equ	0xFE3
 45695                           fsr1h	equ	0xFE2
 45696                           fsr1l	equ	0xFE1
 45697                           indf2	equ	0xFDF
 45698                           postinc2	equ	0xFDE
 45699                           postdec2	equ	0xFDD
 45700                           plusw2	equ	0xFDB
 45701                           fsr2h	equ	0xFDA
 45702                           fsr2l	equ	0xFD9
 45703                           status	equ	0xFD8
 45704                           
 45705 ;; *************** function _USBStdSetCfgHandler *****************
 45706 ;; Defined at:
 45707 ;;		line 1970 in file "usb_device.c"
 45708 ;; Parameters:    Size  Location     Type
 45709 ;;		None
 45710 ;; Auto vars:     Size  Location     Type
 45711 ;;  i               1   23[COMRAM] unsigned char 
 45712 ;; Return value:  Size  Location     Type
 45713 ;;                  1    wreg      void 
 45714 ;; Registers used:
 45715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45716 ;; Tracked objects:
 45717 ;;		On entry : 0/0
 45718 ;;		On exit  : 0/0
 45719 ;;		Unchanged: 0/0
 45720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45725 ;;Total ram usage:        1 bytes
 45726 ;; Hardware stack levels used:    1
 45727 ;; Hardware stack levels required when called:    4
 45728 ;; This function calls:
 45729 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45730 ;;		i2_memset
 45731 ;; This function is called by:
 45732 ;;		_USBCheckStdRequest
 45733 ;; This function uses a non-reentrant model
 45734 ;;
 45735                           
 45736                           	psect	text226
 45737  00F5FE                     __ptext226:
 45738                           	opt stack 0
 45739  00F5FE                     _USBStdSetCfgHandler:
 45740                           	opt stack 9
 45741                           
 45742                           ;usb_device.c: 1972: uint8_t i;
 45743                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 45744                           
 45745                           ;incstack = 0
 45746  00F5FE  0100               	movlb	0	; () banked
 45747  00F600  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45748                           
 45749                           ; BSR set to: 0
 45750                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 45751  00F602  0E27               	movlw	39
 45752  00F604  6E01               	movwf	i2memset@p1,c
 45753  00F606  0E0F               	movlw	15
 45754  00F608  6E02               	movwf	i2memset@p1+1,c
 45755  00F60A  0E00               	movlw	0
 45756  00F60C  6E04               	movwf	i2memset@c+1,c
 45757  00F60E  0E00               	movlw	0
 45758  00F610  6E03               	movwf	i2memset@c,c
 45759  00F612  0E00               	movlw	0
 45760  00F614  6E06               	movwf	i2memset@n+1,c
 45761  00F616  0E02               	movlw	2
 45762  00F618  6E05               	movwf	i2memset@n,c
 45763  00F61A  EC91  F093         	call	i2_memset	;wreg free
 45764                           
 45765                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 45766  00F61E  0E00               	movlw	0
 45767  00F620  6E01               	movwf	i2memset@p1,c
 45768  00F622  0E0D               	movlw	13
 45769  00F624  6E02               	movwf	i2memset@p1+1,c
 45770  00F626  0E00               	movlw	0
 45771  00F628  6E04               	movwf	i2memset@c+1,c
 45772  00F62A  0E00               	movlw	0
 45773  00F62C  6E03               	movwf	i2memset@c,c
 45774  00F62E  0E00               	movlw	0
 45775  00F630  6E06               	movwf	i2memset@n+1,c
 45776  00F632  0E30               	movlw	48
 45777  00F634  6E05               	movwf	i2memset@n,c
 45778  00F636  EC91  F093         	call	i2_memset	;wreg free
 45779                           
 45780                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 45781  00F63A  8C65               	bsf	3941,6,c	;volatile
 45782                           
 45783                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 45784  00F63C  0E00               	movlw	0
 45785  00F63E  6E18               	movwf	USBStdSetCfgHandler@i,c
 45786  00F640                     i2l12086:
 45787  00F640  0E02               	movlw	2
 45788  00F642  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 45789  00F644  D001               	goto	i2l274
 45790  00F646  D016               	goto	i2u960_40
 45791  00F648                     i2l274:
 45792                           
 45793                           ;usb_device.c: 1990: {
 45794                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 45795  00F648  5018               	movf	USBStdSetCfgHandler@i,w,c
 45796  00F64A  0D01               	mullw	1
 45797  00F64C  0EE4               	movlw	low _ep_data_in
 45798  00F64E  24F3               	addwf	prodl,w,c
 45799  00F650  6ED9               	movwf	fsr2l,c
 45800  00F652  0E01               	movlw	high _ep_data_in
 45801  00F654  20F4               	addwfc	prodh,w,c
 45802  00F656  6EDA               	movwf	fsr2h,c
 45803  00F658  0E00               	movlw	0
 45804  00F65A  6EDF               	movwf	indf2,c
 45805                           
 45806                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 45807  00F65C  5018               	movf	USBStdSetCfgHandler@i,w,c
 45808  00F65E  0D01               	mullw	1
 45809  00F660  0EE1               	movlw	low _ep_data_out
 45810  00F662  24F3               	addwf	prodl,w,c
 45811  00F664  6ED9               	movwf	fsr2l,c
 45812  00F666  0E01               	movlw	high _ep_data_out
 45813  00F668  20F4               	addwfc	prodh,w,c
 45814  00F66A  6EDA               	movwf	fsr2h,c
 45815  00F66C  0E00               	movlw	0
 45816  00F66E  6EDF               	movwf	indf2,c
 45817  00F670  2A18               	incf	USBStdSetCfgHandler@i,f,c
 45818  00F672  D7E6               	goto	i2l12086
 45819  00F674                     i2u960_40:
 45820                           
 45821                           ;usb_device.c: 1993: }
 45822                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 45823  00F674  0EFC               	movlw	low _USBAlternateInterface
 45824  00F676  6E01               	movwf	i2memset@p1,c
 45825  00F678  0E01               	movlw	high _USBAlternateInterface
 45826  00F67A  6E02               	movwf	i2memset@p1+1,c
 45827  00F67C  0E00               	movlw	0
 45828  00F67E  6E04               	movwf	i2memset@c+1,c
 45829  00F680  0E00               	movlw	0
 45830  00F682  6E03               	movwf	i2memset@c,c
 45831  00F684  0E00               	movlw	0
 45832  00F686  6E06               	movwf	i2memset@n+1,c
 45833  00F688  0E02               	movlw	2
 45834  00F68A  6E05               	movwf	i2memset@n,c
 45835  00F68C  EC91  F093         	call	i2_memset	;wreg free
 45836                           
 45837                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 45838  00F690  9C65               	bcf	3941,6,c	;volatile
 45839                           
 45840                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 45841  00F692  0E08               	movlw	8
 45842  00F694  6E3B               	movwf	_pBDTEntryIn,c
 45843  00F696  0E0D               	movlw	13
 45844  00F698  6E3C               	movwf	_pBDTEntryIn+1,c
 45845                           
 45846                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 45847  00F69A  0E00               	movlw	0
 45848  00F69C  6E49               	movwf	_pBDTEntryEP0OutCurrent,c
 45849  00F69E  0E0D               	movlw	13
 45850  00F6A0  6E4A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 45851                           
 45852                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 45853  00F6A2  C049  F0FB         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 45854  00F6A6  C04A  F0FC         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 45855                           
 45856                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 45857  00F6AA  CD32 F05E          	movff	3378,_USBActiveConfiguration	;volatile
 45858                           
 45859                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 45860  00F6AE  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 45861  00F6B0  A4D8               	btfss	status,2,c
 45862  00F6B2  D003               	goto	i2l276
 45863                           
 45864                           ;usb_device.c: 2012: {
 45865                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 45866  00F6B4  0E10               	movlw	16
 45867  00F6B6  6E5C               	movwf	_USBDeviceState,c	;volatile
 45868                           
 45869                           ;usb_device.c: 2015: }
 45870  00F6B8  0012               	return	
 45871  00F6BA                     i2l276:
 45872                           
 45873                           ;usb_device.c: 2016: else
 45874                           ;usb_device.c: 2017: {
 45875                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 45876  00F6BA  0E00               	movlw	0
 45877  00F6BC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45878  00F6BE  0E01               	movlw	1
 45879  00F6C0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45880  00F6C2  0E5E               	movlw	low _USBActiveConfiguration
 45881  00F6C4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45882  00F6C6  0E00               	movlw	high _USBActiveConfiguration
 45883  00F6C8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45884  00F6CA  0E00               	movlw	0
 45885  00F6CC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45886  00F6CE  0E01               	movlw	1
 45887  00F6D0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45888  00F6D2  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45889                           
 45890                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 45891  00F6D6  0E20               	movlw	32
 45892  00F6D8  6E5C               	movwf	_USBDeviceState,c	;volatile
 45893  00F6DA  0012               	return	
 45894  00F6DC                     __end_of_USBStdSetCfgHandler:
 45895                           	opt stack 0
 45896                           tosu	equ	0xFFF
 45897                           tosh	equ	0xFFE
 45898                           tosl	equ	0xFFD
 45899                           pclatu	equ	0xFFB
 45900                           pclath	equ	0xFFA
 45901                           tblptru	equ	0xFF8
 45902                           tblptrh	equ	0xFF7
 45903                           tblptrl	equ	0xFF6
 45904                           tablat	equ	0xFF5
 45905                           prodh	equ	0xFF4
 45906                           prodl	equ	0xFF3
 45907                           intcon	equ	0xFF2
 45908                           intcon2	equ	0xFF1
 45909                           intcon3	equ	0xFF0
 45910                           indf0	equ	0xFEF
 45911                           postinc0	equ	0xFEE
 45912                           fsr0h	equ	0xFEA
 45913                           fsr0l	equ	0xFE9
 45914                           wreg	equ	0xFE8
 45915                           indf1	equ	0xFE7
 45916                           postinc1	equ	0xFE6
 45917                           postdec1	equ	0xFE5
 45918                           plusw1	equ	0xFE3
 45919                           fsr1h	equ	0xFE2
 45920                           fsr1l	equ	0xFE1
 45921                           indf2	equ	0xFDF
 45922                           postinc2	equ	0xFDE
 45923                           postdec2	equ	0xFDD
 45924                           plusw2	equ	0xFDB
 45925                           fsr2h	equ	0xFDA
 45926                           fsr2l	equ	0xFD9
 45927                           status	equ	0xFD8
 45928                           
 45929 ;; *************** function i2_memset *****************
 45930 ;; Defined at:
 45931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 45932 ;; Parameters:    Size  Location     Type
 45933 ;;  p1              2    0[COMRAM] PTR void 
 45934 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 45935 ;;  c               2    2[COMRAM] int 
 45936 ;;  n               2    4[COMRAM] unsigned int 
 45937 ;; Auto vars:     Size  Location     Type
 45938 ;;  memset          2    6[COMRAM] PTR unsigned char 
 45939 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 45940 ;; Return value:  Size  Location     Type
 45941 ;;                  2    0[COMRAM] PTR void 
 45942 ;; Registers used:
 45943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45944 ;; Tracked objects:
 45945 ;;		On entry : 0/0
 45946 ;;		On exit  : 0/0
 45947 ;;		Unchanged: 0/0
 45948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45952 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45953 ;;Total ram usage:        8 bytes
 45954 ;; Hardware stack levels used:    1
 45955 ;; This function calls:
 45956 ;;		Nothing
 45957 ;; This function is called by:
 45958 ;;		_USBStdSetCfgHandler
 45959 ;;		i2_USBDeviceInit
 45960 ;; This function uses a non-reentrant model
 45961 ;;
 45962                           
 45963                           	psect	text227
 45964  012722                     __ptext227:
 45965                           	opt stack 0
 45966  012722                     i2_memset:
 45967                           	opt stack 15
 45968                           
 45969                           ;incstack = 0
 45970  012722  C001  F007         	movff	i2memset@p1,i2memset@p
 45971  012726  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 45972  01272A  D008               	goto	i2l3747
 45973  01272C                     i2l12016:
 45974  01272C  C007  FFD9         	movff	i2memset@p,fsr2l
 45975  012730  C008  FFDA         	movff	i2memset@p+1,fsr2h
 45976  012734  C003  FFDF         	movff	i2memset@c,indf2
 45977  012738  4A07               	infsnz	i2memset@p,f,c
 45978  01273A  2A08               	incf	i2memset@p+1,f,c
 45979  01273C                     i2l3747:
 45980  01273C  0605               	decf	i2memset@n,f,c
 45981  01273E  A0D8               	btfss	status,0,c
 45982  012740  0606               	decf	i2memset@n+1,f,c
 45983  012742  2805               	incf	i2memset@n,w,c
 45984  012744  E1F3               	bnz	i2l12016
 45985  012746  2806               	incf	i2memset@n+1,w,c
 45986  012748  B4D8               	btfsc	status,2,c
 45987  01274A  0012               	return	
 45988  01274C  D7EF               	goto	i2l3748
 45989  01274E                     __end_ofi2_memset:
 45990                           	opt stack 0
 45991                           tosu	equ	0xFFF
 45992                           tosh	equ	0xFFE
 45993                           tosl	equ	0xFFD
 45994                           pclatu	equ	0xFFB
 45995                           pclath	equ	0xFFA
 45996                           tblptru	equ	0xFF8
 45997                           tblptrh	equ	0xFF7
 45998                           tblptrl	equ	0xFF6
 45999                           tablat	equ	0xFF5
 46000                           prodh	equ	0xFF4
 46001                           prodl	equ	0xFF3
 46002                           intcon	equ	0xFF2
 46003                           intcon2	equ	0xFF1
 46004                           intcon3	equ	0xFF0
 46005                           indf0	equ	0xFEF
 46006                           postinc0	equ	0xFEE
 46007                           fsr0h	equ	0xFEA
 46008                           fsr0l	equ	0xFE9
 46009                           wreg	equ	0xFE8
 46010                           indf1	equ	0xFE7
 46011                           postinc1	equ	0xFE6
 46012                           postdec1	equ	0xFE5
 46013                           plusw1	equ	0xFE3
 46014                           fsr1h	equ	0xFE2
 46015                           fsr1l	equ	0xFE1
 46016                           indf2	equ	0xFDF
 46017                           postinc2	equ	0xFDE
 46018                           postdec2	equ	0xFDD
 46019                           plusw2	equ	0xFDB
 46020                           fsr2h	equ	0xFDA
 46021                           fsr2l	equ	0xFD9
 46022                           status	equ	0xFD8
 46023                           
 46024 ;; *************** function _USBStdGetStatusHandler *****************
 46025 ;; Defined at:
 46026 ;;		line 2131 in file "usb_device.c"
 46027 ;; Parameters:    Size  Location     Type
 46028 ;;		None
 46029 ;; Auto vars:     Size  Location     Type
 46030 ;;  p               2    1[COMRAM] PTR struct __BDT
 46031 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46032 ;; Return value:  Size  Location     Type
 46033 ;;                  1    wreg      void 
 46034 ;; Registers used:
 46035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46036 ;; Tracked objects:
 46037 ;;		On entry : 0/0
 46038 ;;		On exit  : 0/0
 46039 ;;		Unchanged: 0/0
 46040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46045 ;;Total ram usage:        3 bytes
 46046 ;; Hardware stack levels used:    1
 46047 ;; This function calls:
 46048 ;;		Nothing
 46049 ;; This function is called by:
 46050 ;;		_USBCheckStdRequest
 46051 ;; This function uses a non-reentrant model
 46052 ;;
 46053                           
 46054                           	psect	text228
 46055  0100BC                     __ptext228:
 46056                           	opt stack 0
 46057  0100BC                     _USBStdGetStatusHandler:
 46058                           	opt stack 13
 46059                           
 46060                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 46061                           
 46062                           ;incstack = 0
 46063  0100BC  0E00               	movlw	0
 46064  0100BE  010D               	movlb	13	; () banked
 46065  0100C0  6F38               	movwf	56,b	;volatile
 46066                           
 46067                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 46068  0100C2  0E00               	movlw	0
 46069  0100C4  6F39               	movwf	57,b	;volatile
 46070                           
 46071                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 46072  0100C6  D038               	goto	i2l295
 46073  0100C8                     i2l296:
 46074                           
 46075                           ; BSR set to: 13
 46076                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 46077  0100C8  0100               	movlb	0	; () banked
 46078  0100CA  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46079                           
 46080                           ;usb_device.c: 2147: }
 46081                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 46082                           
 46083                           ; BSR set to: 13
 46084                           
 46085                           ; BSR set to: 0
 46086                           ;usb_device.c: 2145: {
 46087                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 46088                           
 46089                           ;usb_device.c: 2144: if(0 == 1)
 46090  0100CC  0459               	decf	_RemoteWakeup,w,c	;volatile
 46091  0100CE  A4D8               	btfss	status,2,c
 46092  0100D0  D03E               	goto	i2l299
 46093                           
 46094                           ;usb_device.c: 2150: {
 46095                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 46096  0100D2  010D               	movlb	13	; () banked
 46097  0100D4  8338               	bsf	56,1,b	;volatile
 46098                           
 46099                           ; BSR set to: 13
 46100                           ;usb_device.c: 2152: }
 46101                           ;usb_device.c: 2153: break;
 46102  0100D6  D03B               	goto	i2l299
 46103  0100D8                     i2l300:
 46104                           
 46105                           ; BSR set to: 13
 46106                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 46107  0100D8  0100               	movlb	0	; () banked
 46108  0100DA  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46109                           
 46110                           ;usb_device.c: 2156: break;
 46111  0100DC  D038               	goto	i2l299
 46112  0100DE                     i2l301:
 46113                           
 46114                           ; BSR set to: 13
 46115                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 46116  0100DE  0100               	movlb	0	; () banked
 46117  0100E0  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46118                           
 46119                           ;usb_device.c: 2162: {
 46120                           ;usb_device.c: 2163: BDT_ENTRY *p;
 46121                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 46122  0100E2  010D               	movlb	13	; () banked
 46123  0100E4  BF34               	btfsc	52,7,b	;volatile
 46124  0100E6  D00A               	goto	i2l302
 46125                           
 46126                           ; BSR set to: 13
 46127                           ;usb_device.c: 2166: {
 46128                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 46129  0100E8  5134               	movf	52,w,b	;volatile
 46130  0100EA  0B0F               	andlw	15
 46131  0100EC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 46132  0100EE  5001               	movf	??_USBStdGetStatusHandler,w,c
 46133  0100F0  0D02               	mullw	2
 46134  0100F2  0ED3               	movlw	low _pBDTEntryOut
 46135  0100F4  24F3               	addwf	prodl,w,c
 46136  0100F6  6ED9               	movwf	fsr2l,c
 46137  0100F8  0E01               	movlw	high _pBDTEntryOut
 46138  0100FA  D009               	goto	L58
 46139  0100FC                     i2l302:
 46140                           
 46141                           ; BSR set to: 13
 46142                           ;usb_device.c: 2169: else
 46143                           ;usb_device.c: 2170: {
 46144                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 46145                           
 46146                           ; BSR set to: 13
 46147  0100FC  5134               	movf	52,w,b	;volatile
 46148  0100FE  0B0F               	andlw	15
 46149  010100  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 46150  010102  5001               	movf	??_USBStdGetStatusHandler,w,c
 46151  010104  0D02               	mullw	2
 46152  010106  0E3B               	movlw	low _pBDTEntryIn
 46153  010108  24F3               	addwf	prodl,w,c
 46154  01010A  6ED9               	movwf	fsr2l,c
 46155  01010C  0E00               	movlw	high _pBDTEntryIn
 46156  01010E                     L58:
 46157  01010E  20F4               	addwfc	prodh,w,c
 46158  010110  6EDA               	movwf	fsr2h,c
 46159  010112  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 46160  010116  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 46161                           
 46162                           ; BSR set to: 13
 46163                           ;usb_device.c: 2172: }
 46164                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 46165                           
 46166                           ; BSR set to: 13
 46167  01011A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 46168  01011E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 46169  010122  AEDF               	btfss	indf2,7,c
 46170  010124  D014               	goto	i2l299
 46171                           
 46172                           ; BSR set to: 13
 46173  010126  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 46174  01012A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 46175  01012E  A4DF               	btfss	indf2,2,c
 46176  010130  D00E               	goto	i2l299
 46177                           
 46178                           ; BSR set to: 13
 46179                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 46180  010132  0E01               	movlw	1
 46181  010134  6F38               	movwf	56,b	;volatile
 46182                           
 46183                           ; BSR set to: 13
 46184                           ;usb_device.c: 2177: }
 46185                           ;usb_device.c: 2178: }
 46186                           
 46187                           ; BSR set to: 13
 46188                           ;usb_device.c: 2176: break;
 46189  010136  D00B               	goto	i2l299
 46190  010138                     i2l295:
 46191                           
 46192                           ; BSR set to: 13
 46193                           
 46194                           ; BSR set to: 13
 46195  010138  5130               	movf	48,w,b	;volatile
 46196  01013A  0B1F               	andlw	31
 46197                           
 46198                           ; Switch size 1, requested type "space"
 46199                           ; Number of cases is 3, Range of values is 0 to 2
 46200                           ; switch strategies available:
 46201                           ; Name         Instructions Cycles
 46202                           ; simple_byte           10     6 (average)
 46203                           ;	Chosen strategy is simple_byte
 46204  01013C  0A00               	xorlw	0	; case 0
 46205  01013E  B4D8               	btfsc	status,2,c
 46206  010140  D7C3               	goto	i2l296
 46207  010142  0A01               	xorlw	1	; case 1
 46208  010144  B4D8               	btfsc	status,2,c
 46209  010146  D7C8               	goto	i2l300
 46210  010148  0A03               	xorlw	3	; case 2
 46211  01014A  B4D8               	btfsc	status,2,c
 46212  01014C  D7C8               	goto	i2l301
 46213  01014E                     i2l299:
 46214                           
 46215                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 46216  01014E  0100               	movlb	0	; () banked
 46217  010150  AFF6               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 46218  010152  0012               	return	
 46219                           
 46220                           ; BSR set to: 0
 46221                           ;usb_device.c: 2181: {
 46222                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 46223  010154  0E38               	movlw	56
 46224  010156  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 46225  010158  0E0D               	movlw	13
 46226  01015A  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 46227                           
 46228                           ; BSR set to: 0
 46229                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 46230  01015C  81F6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 46231                           
 46232                           ; BSR set to: 0
 46233                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 46234  01015E  0E02               	movlw	2
 46235  010160  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46236  010162  0012               	return	
 46237  010164                     __end_of_USBStdGetStatusHandler:
 46238                           	opt stack 0
 46239                           tosu	equ	0xFFF
 46240                           tosh	equ	0xFFE
 46241                           tosl	equ	0xFFD
 46242                           pclatu	equ	0xFFB
 46243                           pclath	equ	0xFFA
 46244                           tblptru	equ	0xFF8
 46245                           tblptrh	equ	0xFF7
 46246                           tblptrl	equ	0xFF6
 46247                           tablat	equ	0xFF5
 46248                           prodh	equ	0xFF4
 46249                           prodl	equ	0xFF3
 46250                           intcon	equ	0xFF2
 46251                           intcon2	equ	0xFF1
 46252                           intcon3	equ	0xFF0
 46253                           indf0	equ	0xFEF
 46254                           postinc0	equ	0xFEE
 46255                           fsr0h	equ	0xFEA
 46256                           fsr0l	equ	0xFE9
 46257                           wreg	equ	0xFE8
 46258                           indf1	equ	0xFE7
 46259                           postinc1	equ	0xFE6
 46260                           postdec1	equ	0xFE5
 46261                           plusw1	equ	0xFE3
 46262                           fsr1h	equ	0xFE2
 46263                           fsr1l	equ	0xFE1
 46264                           indf2	equ	0xFDF
 46265                           postinc2	equ	0xFDE
 46266                           postdec2	equ	0xFDD
 46267                           plusw2	equ	0xFDB
 46268                           fsr2h	equ	0xFDA
 46269                           fsr2l	equ	0xFD9
 46270                           status	equ	0xFD8
 46271                           
 46272 ;; *************** function _USBStdGetDscHandler *****************
 46273 ;; Defined at:
 46274 ;;		line 2045 in file "usb_device.c"
 46275 ;; Parameters:    Size  Location     Type
 46276 ;;		None
 46277 ;; Auto vars:     Size  Location     Type
 46278 ;;		None
 46279 ;; Return value:  Size  Location     Type
 46280 ;;                  1    wreg      void 
 46281 ;; Registers used:
 46282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46283 ;; Tracked objects:
 46284 ;;		On entry : 0/0
 46285 ;;		On exit  : 0/0
 46286 ;;		Unchanged: 0/0
 46287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46292 ;;Total ram usage:        2 bytes
 46293 ;; Hardware stack levels used:    1
 46294 ;; This function calls:
 46295 ;;		Nothing
 46296 ;; This function is called by:
 46297 ;;		_USBCheckStdRequest
 46298 ;; This function uses a non-reentrant model
 46299 ;;
 46300                           
 46301                           	psect	text229
 46302  00DB76                     __ptext229:
 46303                           	opt stack 0
 46304  00DB76                     _USBStdGetDscHandler:
 46305                           	opt stack 13
 46306                           
 46307                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 46308                           
 46309                           ; BSR set to: 0
 46310                           ;incstack = 0
 46311  00DB76  0E80               	movlw	128
 46312  00DB78  010D               	movlb	13	; () banked
 46313  00DB7A  1930               	xorwf	48,w,b	;volatile
 46314  00DB7C  A4D8               	btfss	status,2,c
 46315  00DB7E  0012               	return	
 46316                           
 46317                           ; BSR set to: 13
 46318                           ;usb_device.c: 2048: {
 46319                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 46320  00DB80  0EC0               	movlw	192
 46321  00DB82  0100               	movlb	0	; () banked
 46322  00DB84  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46323                           
 46324                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 46325  00DB86  D08B               	goto	i2l282
 46326  00DB88                     
 46327                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 46328                           
 46329                           ; BSR set to: 0
 46330  00DB88  0E38               	movlw	low _device_dsc
 46331  00DB8A  0100               	movlb	0	; () banked
 46332  00DB8C  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 46333  00DB8E  0E94               	movlw	high _device_dsc
 46334  00DB90  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 46335                           
 46336                           ; BSR set to: 0
 46337                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 46338  00DB92  0E00               	movlw	0
 46339  00DB94  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 46340  00DB96  0E12               	movlw	18
 46341  00DB98  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46342                           
 46343                           ;usb_device.c: 2060: break;
 46344  00DB9A  0012               	return	
 46345  00DB9C                     
 46346                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 46347                           
 46348                           ; BSR set to: 0
 46349  00DB9C  010D               	movlb	13	; () banked
 46350  00DB9E  5132               	movf	50,w,b	;volatile
 46351  00DBA0  A4D8               	btfss	status,2,c
 46352  00DBA2  D045               	goto	i2l286
 46353                           
 46354                           ; BSR set to: 13
 46355                           ;usb_device.c: 2066: {
 46356                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 46357  00DBA4  5132               	movf	50,w,b	;volatile
 46358  00DBA6  0D02               	mullw	2
 46359  00DBA8  0E39               	movlw	low _USB_CD_Ptr
 46360  00DBAA  24F3               	addwf	prodl,w,c
 46361  00DBAC  6EF6               	movwf	tblptrl,c
 46362  00DBAE  0E93               	movlw	high _USB_CD_Ptr
 46363  00DBB0  20F4               	addwfc	prodh,w,c
 46364  00DBB2  6EF7               	movwf	tblptrh,c
 46365  00DBB4                     	if	1	;There are 3 active tblptr bytes
 46366  00DBB4  6AF8               	clrf	tblptru,c
 46367  00DBB6  0E00               	movlw	low (__mediumconst shr (0+16))
 46368  00DBB8  22F8               	addwfc	tblptru,f,c
 46369  00DBBA                     	endif
 46370  00DBBA  0009               	tblrd		*+
 46371  00DBBC  CFF5 F0F3          	movff	tablat,_inPipes	;volatile
 46372  00DBC0  000A               	tblrd		*-
 46373  00DBC2  CFF5 F0F4          	movff	tablat,_inPipes+1	;volatile
 46374                           
 46375                           ; BSR set to: 13
 46376                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 46377  00DBC6  0E02               	movlw	2
 46378  00DBC8  0100               	movlb	0	; () banked
 46379  00DBCA  25F3               	addwf	_inPipes& (0+255),w,b	;volatile
 46380  00DBCC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 46381  00DBCE  0E00               	movlw	0
 46382  00DBD0  21F4               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 46383  00DBD2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 46384  00DBD4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 46385  00DBD8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 46386  00DBDC  0E00               	movlw	low (__mediumconst shr (0+16))
 46387  00DBDE  6EF8               	movwf	tblptru,c
 46388  00DBE0  0E0E               	movlw	(high __ramtop+-1)
 46389  00DBE2  64F7               	cpfsgt	tblptrh,c
 46390  00DBE4  D003               	bra	i2u964_47
 46391  00DBE6  0008               	tblrd		*
 46392  00DBE8  50F5               	movf	tablat,w,c
 46393  00DBEA  D005               	bra	i2u964_40
 46394  00DBEC                     i2u964_47:
 46395  00DBEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 46396  00DBF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 46397  00DBF4  50EF               	movf	indf0,w,c
 46398  00DBF6                     i2u964_40:
 46399  00DBF6  0100               	movlb	0	; () banked
 46400  00DBF8  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46401                           
 46402                           ; BSR set to: 0
 46403                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 46404  00DBFA  0E03               	movlw	3
 46405  00DBFC  25F3               	addwf	_inPipes& (0+255),w,b	;volatile
 46406  00DBFE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 46407  00DC00  0E00               	movlw	0
 46408  00DC02  21F4               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 46409  00DC04  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 46410  00DC06  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 46411  00DC0A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 46412  00DC0E  0E00               	movlw	low (__mediumconst shr (0+16))
 46413  00DC10  6EF8               	movwf	tblptru,c
 46414  00DC12  0E0E               	movlw	(high __ramtop+-1)
 46415  00DC14  64F7               	cpfsgt	tblptrh,c
 46416  00DC16  D003               	bra	i2u965_47
 46417  00DC18  0008               	tblrd		*
 46418  00DC1A  50F5               	movf	tablat,w,c
 46419  00DC1C  D005               	bra	i2u965_40
 46420  00DC1E                     i2u965_47:
 46421  00DC1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 46422  00DC22  CFF7 FFEA          	movff	tblptrh,fsr0h
 46423  00DC26  50EF               	movf	indf0,w,c
 46424  00DC28                     i2u965_40:
 46425  00DC28  0100               	movlb	0	; () banked
 46426  00DC2A  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 46427                           
 46428                           ;usb_device.c: 2078: }
 46429  00DC2C  0012               	return	
 46430  00DC2E                     i2l286:
 46431                           
 46432                           ;usb_device.c: 2079: else
 46433                           ;usb_device.c: 2080: {
 46434                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 46435                           
 46436                           ; BSR set to: 0
 46437  00DC2E  0E00               	movlw	0
 46438  00DC30  0100               	movlb	0	; () banked
 46439  00DC32  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46440                           
 46441                           ; BSR set to: 0
 46442                           ;usb_device.c: 2082: }
 46443                           ;usb_device.c: 2083: break;
 46444  00DC34  0012               	return	
 46445  00DC36                     
 46446                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 46447                           
 46448                           ; BSR set to: 0
 46449  00DC36  0E04               	movlw	4
 46450  00DC38  010D               	movlb	13	; () banked
 46451  00DC3A  6132               	cpfslt	50,b	;volatile
 46452  00DC3C  D028               	goto	i2l289
 46453                           
 46454                           ; BSR set to: 13
 46455                           ;usb_device.c: 2089: {
 46456                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 46457  00DC3E  5132               	movf	50,w,b	;volatile
 46458  00DC40  0D02               	mullw	2
 46459  00DC42  0E27               	movlw	low _USB_SD_Ptr
 46460  00DC44  24F3               	addwf	prodl,w,c
 46461  00DC46  6EF6               	movwf	tblptrl,c
 46462  00DC48  0E93               	movlw	high _USB_SD_Ptr
 46463  00DC4A  20F4               	addwfc	prodh,w,c
 46464  00DC4C  6EF7               	movwf	tblptrh,c
 46465  00DC4E                     	if	1	;There are 3 active tblptr bytes
 46466  00DC4E  6AF8               	clrf	tblptru,c
 46467  00DC50  0E00               	movlw	low (__mediumconst shr (0+16))
 46468  00DC52  22F8               	addwfc	tblptru,f,c
 46469  00DC54                     	endif
 46470  00DC54  0009               	tblrd		*+
 46471  00DC56  CFF5 F0F3          	movff	tablat,_inPipes	;volatile
 46472  00DC5A  000A               	tblrd		*-
 46473  00DC5C  CFF5 F0F4          	movff	tablat,_inPipes+1	;volatile
 46474                           
 46475                           ; BSR set to: 13
 46476                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 46477  00DC60  C0F3  FFF6         	movff	_inPipes,tblptrl	;volatile
 46478  00DC64  C0F4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 46479  00DC68  0E00               	movlw	low (__mediumconst shr (0+16))
 46480  00DC6A  6EF8               	movwf	tblptru,c
 46481  00DC6C  0E0E               	movlw	(high __ramtop+-1)
 46482  00DC6E  64F7               	cpfsgt	tblptrh,c
 46483  00DC70  D003               	bra	i2u967_47
 46484  00DC72  0008               	tblrd		*
 46485  00DC74  50F5               	movf	tablat,w,c
 46486  00DC76  D005               	bra	i2u967_40
 46487  00DC78                     i2u967_47:
 46488  00DC78  CFF6 FFE9          	movff	tblptrl,fsr0l
 46489  00DC7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 46490  00DC80  50EF               	movf	indf0,w,c
 46491  00DC82                     i2u967_40:
 46492  00DC82  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 46493  00DC84  5001               	movf	??_USBStdGetDscHandler,w,c
 46494  00DC86  0100               	movlb	0	; () banked
 46495  00DC88  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46496  00DC8A  6BF8               	clrf	(_inPipes+5)& (0+255),b	;volatile
 46497                           
 46498                           ;usb_device.c: 2094: }
 46499  00DC8C  0012               	return	
 46500  00DC8E                     i2l289:
 46501                           
 46502                           ;usb_device.c: 2104: else
 46503                           ;usb_device.c: 2105: {
 46504                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 46505                           
 46506                           ; BSR set to: 0
 46507  00DC8E  0E00               	movlw	0
 46508  00DC90  0100               	movlb	0	; () banked
 46509  00DC92  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46510                           
 46511                           ; BSR set to: 0
 46512                           ;usb_device.c: 2107: }
 46513                           ;usb_device.c: 2108: break;
 46514  00DC94  0012               	return	
 46515  00DC96                     
 46516                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 46517                           
 46518                           ; BSR set to: 0
 46519  00DC96  0E00               	movlw	0
 46520  00DC98  0100               	movlb	0	; () banked
 46521  00DC9A  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46522                           
 46523                           ; BSR set to: 0
 46524                           ;usb_device.c: 2112: }
 46525                           
 46526                           ;usb_device.c: 2111: break;
 46527  00DC9C  0012               	return	
 46528  00DC9E                     i2l282:
 46529                           
 46530                           ; BSR set to: 0
 46531                           
 46532                           ; BSR set to: 0
 46533  00DC9E  010D               	movlb	13	; () banked
 46534  00DCA0  5133               	movf	51,w,b	;volatile
 46535                           
 46536                           ; Switch size 1, requested type "space"
 46537                           ; Number of cases is 3, Range of values is 1 to 3
 46538                           ; switch strategies available:
 46539                           ; Name         Instructions Cycles
 46540                           ; simple_byte           10     6 (average)
 46541                           ;	Chosen strategy is simple_byte
 46542  00DCA2  0A01               	xorlw	1	; case 1
 46543  00DCA4  B4D8               	btfsc	status,2,c
 46544  00DCA6  D770               	goto	i2l283
 46545  00DCA8  0A03               	xorlw	3	; case 2
 46546  00DCAA  B4D8               	btfsc	status,2,c
 46547  00DCAC  D777               	goto	i2l285
 46548  00DCAE  0A01               	xorlw	1	; case 3
 46549  00DCB0  B4D8               	btfsc	status,2,c
 46550  00DCB2  D7C1               	goto	i2l288
 46551  00DCB4  D7F0               	goto	i2l291
 46552  00DCB6                     __end_of_USBStdGetDscHandler:
 46553                           	opt stack 0
 46554                           tosu	equ	0xFFF
 46555                           tosh	equ	0xFFE
 46556                           tosl	equ	0xFFD
 46557                           pclatu	equ	0xFFB
 46558                           pclath	equ	0xFFA
 46559                           tblptru	equ	0xFF8
 46560                           tblptrh	equ	0xFF7
 46561                           tblptrl	equ	0xFF6
 46562                           tablat	equ	0xFF5
 46563                           prodh	equ	0xFF4
 46564                           prodl	equ	0xFF3
 46565                           intcon	equ	0xFF2
 46566                           intcon2	equ	0xFF1
 46567                           intcon3	equ	0xFF0
 46568                           indf0	equ	0xFEF
 46569                           postinc0	equ	0xFEE
 46570                           fsr0h	equ	0xFEA
 46571                           fsr0l	equ	0xFE9
 46572                           wreg	equ	0xFE8
 46573                           indf1	equ	0xFE7
 46574                           postinc1	equ	0xFE6
 46575                           postdec1	equ	0xFE5
 46576                           plusw1	equ	0xFE3
 46577                           fsr1h	equ	0xFE2
 46578                           fsr1l	equ	0xFE1
 46579                           indf2	equ	0xFDF
 46580                           postinc2	equ	0xFDE
 46581                           postdec2	equ	0xFDD
 46582                           plusw2	equ	0xFDB
 46583                           fsr2h	equ	0xFDA
 46584                           fsr2l	equ	0xFD9
 46585                           status	equ	0xFD8
 46586                           
 46587 ;; *************** function _USBStdFeatureReqHandler *****************
 46588 ;; Defined at:
 46589 ;;		line 2756 in file "usb_device.c"
 46590 ;; Parameters:    Size  Location     Type
 46591 ;;		None
 46592 ;; Auto vars:     Size  Location     Type
 46593 ;;  p               2   27[COMRAM] PTR struct __BDT
 46594 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46595 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 46596 ;;		 -> UEP0(1), 
 46597 ;;  current_ep_d    1   26[COMRAM] struct .
 46598 ;; Return value:  Size  Location     Type
 46599 ;;                  1    wreg      void 
 46600 ;; Registers used:
 46601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46602 ;; Tracked objects:
 46603 ;;		On entry : 0/0
 46604 ;;		On exit  : 0/0
 46605 ;;		Unchanged: 0/0
 46606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46608 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46611 ;;Total ram usage:        6 bytes
 46612 ;; Hardware stack levels used:    1
 46613 ;; Hardware stack levels required when called:    4
 46614 ;; This function calls:
 46615 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46616 ;; This function is called by:
 46617 ;;		_USBCheckStdRequest
 46618 ;; This function uses a non-reentrant model
 46619 ;;
 46620                           
 46621                           	psect	text230
 46622  00C002                     __ptext230:
 46623                           	opt stack 0
 46624  00C002                     _USBStdFeatureReqHandler:
 46625                           	opt stack 9
 46626                           
 46627                           ;usb_device.c: 2758: BDT_ENTRY *p;
 46628                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 46629                           ;usb_device.c: 2763: unsigned char* pUEP;
 46630                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 46631                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 46632                           
 46633                           ;incstack = 0
 46634  00C002  010D               	movlb	13	; () banked
 46635  00C004  0532               	decf	50,w,b	;volatile
 46636  00C006  A4D8               	btfss	status,2,c
 46637  00C008  D010               	goto	i2l375
 46638                           
 46639                           ; BSR set to: 13
 46640  00C00A  5130               	movf	48,w,b	;volatile
 46641  00C00C  0B1F               	andlw	31
 46642  00C00E  0900               	iorlw	0
 46643  00C010  A4D8               	btfss	status,2,c
 46644  00C012  D00B               	goto	i2l375
 46645                           
 46646                           ; BSR set to: 13
 46647                           ;usb_device.c: 2803: {
 46648                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 46649  00C014  0100               	movlb	0	; () banked
 46650  00C016  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46651                           
 46652                           ; BSR set to: 0
 46653                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 46654  00C018  0E03               	movlw	3
 46655  00C01A  010D               	movlb	13	; () banked
 46656  00C01C  1931               	xorwf	49,w,b	;volatile
 46657  00C01E  A4D8               	btfss	status,2,c
 46658  00C020  D002               	goto	i2l374
 46659                           
 46660                           ; BSR set to: 13
 46661                           ;usb_device.c: 2806: RemoteWakeup = 1;
 46662  00C022  0E01               	movlw	1
 46663  00C024  D001               	goto	L59
 46664  00C026                     i2l374:
 46665                           
 46666                           ; BSR set to: 13
 46667                           ;usb_device.c: 2807: else
 46668                           ;usb_device.c: 2808: RemoteWakeup = 0;
 46669                           
 46670                           ; BSR set to: 13
 46671  00C026  0E00               	movlw	0
 46672  00C028                     L59:
 46673  00C028  6E59               	movwf	_RemoteWakeup,c	;volatile
 46674  00C02A                     i2l375:
 46675                           
 46676                           ; BSR set to: 13
 46677                           ;usb_device.c: 2809: }
 46678                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 46679                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 46680                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 46681                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 46682                           
 46683                           ; BSR set to: 13
 46684  00C02A  5132               	movf	50,w,b	;volatile
 46685  00C02C  A4D8               	btfss	status,2,c
 46686  00C02E  0012               	return	
 46687                           
 46688                           ; BSR set to: 13
 46689  00C030  5130               	movf	48,w,b	;volatile
 46690  00C032  0B1F               	andlw	31
 46691  00C034  0A02               	xorlw	2
 46692  00C036  A4D8               	btfss	status,2,c
 46693  00C038  0012               	return	
 46694                           
 46695                           ; BSR set to: 13
 46696  00C03A  5134               	movf	52,w,b	;volatile
 46697  00C03C  0B0F               	andlw	15
 46698  00C03E  0900               	iorlw	0
 46699  00C040  B4D8               	btfsc	status,2,c
 46700  00C042  0012               	return	
 46701                           
 46702                           ; BSR set to: 13
 46703  00C044  5134               	movf	52,w,b	;volatile
 46704  00C046  0B0F               	andlw	15
 46705  00C048  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46706  00C04A  0E03               	movlw	3
 46707  00C04C  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 46708  00C04E  0012               	return	
 46709                           
 46710                           ; BSR set to: 13
 46711  00C050  0E20               	movlw	32
 46712  00C052  185C               	xorwf	_USBDeviceState,w,c	;volatile
 46713  00C054  A4D8               	btfss	status,2,c
 46714  00C056  0012               	return	
 46715                           
 46716                           ; BSR set to: 13
 46717                           ;usb_device.c: 2816: {
 46718                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 46719  00C058  0100               	movlb	0	; () banked
 46720  00C05A  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46721                           
 46722                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 46723  00C05C  010D               	movlb	13	; () banked
 46724  00C05E  BF34               	btfsc	52,7,b	;volatile
 46725  00C060  D019               	goto	i2l377
 46726                           
 46727                           ; BSR set to: 13
 46728                           ;usb_device.c: 2823: {
 46729                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 46730  00C062  5134               	movf	52,w,b	;volatile
 46731  00C064  0B0F               	andlw	15
 46732  00C066  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46733  00C068  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46734  00C06A  0D02               	mullw	2
 46735  00C06C  0ED3               	movlw	low _pBDTEntryOut
 46736  00C06E  24F3               	addwf	prodl,w,c
 46737  00C070  6ED9               	movwf	fsr2l,c
 46738  00C072  0E01               	movlw	high _pBDTEntryOut
 46739  00C074  20F4               	addwfc	prodh,w,c
 46740  00C076  6EDA               	movwf	fsr2h,c
 46741  00C078  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 46742  00C07C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 46743                           
 46744                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 46745  00C080  5134               	movf	52,w,b	;volatile
 46746  00C082  0B0F               	andlw	15
 46747  00C084  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46748  00C086  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46749  00C088  0D01               	mullw	1
 46750  00C08A  0EE1               	movlw	low _ep_data_out
 46751  00C08C  24F3               	addwf	prodl,w,c
 46752  00C08E  6ED9               	movwf	fsr2l,c
 46753  00C090  0E01               	movlw	high _ep_data_out
 46754  00C092  D018               	goto	L60
 46755  00C094                     i2l377:
 46756                           
 46757                           ; BSR set to: 13
 46758                           ;usb_device.c: 2827: else
 46759                           ;usb_device.c: 2828: {
 46760                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 46761                           
 46762                           ; BSR set to: 13
 46763  00C094  5134               	movf	52,w,b	;volatile
 46764  00C096  0B0F               	andlw	15
 46765  00C098  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46766  00C09A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46767  00C09C  0D02               	mullw	2
 46768  00C09E  0E3B               	movlw	low _pBDTEntryIn
 46769  00C0A0  24F3               	addwf	prodl,w,c
 46770  00C0A2  6ED9               	movwf	fsr2l,c
 46771  00C0A4  0E00               	movlw	high _pBDTEntryIn
 46772  00C0A6  20F4               	addwfc	prodh,w,c
 46773  00C0A8  6EDA               	movwf	fsr2h,c
 46774  00C0AA  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 46775  00C0AE  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 46776                           
 46777                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 46778  00C0B2  5134               	movf	52,w,b	;volatile
 46779  00C0B4  0B0F               	andlw	15
 46780  00C0B6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46781  00C0B8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46782  00C0BA  0D01               	mullw	1
 46783  00C0BC  0EE4               	movlw	low _ep_data_in
 46784  00C0BE  24F3               	addwf	prodl,w,c
 46785  00C0C0  6ED9               	movwf	fsr2l,c
 46786  00C0C2  0E01               	movlw	high _ep_data_in
 46787  00C0C4                     L60:
 46788  00C0C4  20F4               	addwfc	prodh,w,c
 46789  00C0C6  6EDA               	movwf	fsr2h,c
 46790  00C0C8  50DF               	movf	indf2,w,c
 46791  00C0CA  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 46792                           
 46793                           ; BSR set to: 13
 46794                           ;usb_device.c: 2831: }
 46795                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 46796                           
 46797                           ; BSR set to: 13
 46798  00C0CC  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 46799  00C0CE  D006               	goto	i2l379
 46800                           
 46801                           ; BSR set to: 13
 46802                           ;usb_device.c: 2838: {
 46803                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 46804  00C0D0  0EFB               	movlw	251
 46805  00C0D2  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 46806  00C0D4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 46807  00C0D6  0EFF               	movlw	255
 46808  00C0D8  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 46809  00C0DA  D004               	goto	L61
 46810  00C0DC                     i2l379:
 46811                           
 46812                           ; BSR set to: 13
 46813                           ;usb_device.c: 2841: else
 46814                           ;usb_device.c: 2842: {
 46815                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 46816                           
 46817                           ; BSR set to: 13
 46818  00C0DC  0E04               	movlw	4
 46819  00C0DE  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 46820  00C0E0  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 46821  00C0E2  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 46822  00C0E4                     L61:
 46823  00C0E4  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 46824                           
 46825                           ; BSR set to: 13
 46826                           ;usb_device.c: 2844: }
 46827                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 46828                           
 46829                           ; BSR set to: 13
 46830  00C0E6  BF34               	btfsc	52,7,b	;volatile
 46831  00C0E8  D00A               	goto	i2l381
 46832                           
 46833                           ; BSR set to: 13
 46834                           ;usb_device.c: 2850: {
 46835                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 46836  00C0EA  5134               	movf	52,w,b	;volatile
 46837  00C0EC  0B0F               	andlw	15
 46838  00C0EE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46839  00C0F0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46840  00C0F2  0D02               	mullw	2
 46841  00C0F4  0ED3               	movlw	low _pBDTEntryOut
 46842  00C0F6  24F3               	addwf	prodl,w,c
 46843  00C0F8  6ED9               	movwf	fsr2l,c
 46844  00C0FA  0E01               	movlw	high _pBDTEntryOut
 46845  00C0FC  D009               	goto	L62
 46846  00C0FE                     i2l381:
 46847                           
 46848                           ; BSR set to: 13
 46849                           ;usb_device.c: 2853: else
 46850                           ;usb_device.c: 2854: {
 46851                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 46852                           
 46853                           ; BSR set to: 13
 46854  00C0FE  5134               	movf	52,w,b	;volatile
 46855  00C100  0B0F               	andlw	15
 46856  00C102  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46857  00C104  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46858  00C106  0D02               	mullw	2
 46859  00C108  0E3B               	movlw	low _pBDTEntryIn
 46860  00C10A  24F3               	addwf	prodl,w,c
 46861  00C10C  6ED9               	movwf	fsr2l,c
 46862  00C10E  0E00               	movlw	high _pBDTEntryIn
 46863  00C110                     L62:
 46864  00C110  20F4               	addwfc	prodh,w,c
 46865  00C112  6EDA               	movwf	fsr2h,c
 46866  00C114  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 46867  00C118  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 46868                           
 46869                           ; BSR set to: 13
 46870                           ;usb_device.c: 2856: }
 46871                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 46872                           
 46873                           ; BSR set to: 13
 46874  00C11C  0E03               	movlw	3
 46875  00C11E  1931               	xorwf	49,w,b	;volatile
 46876  00C120  A4D8               	btfss	status,2,c
 46877  00C122  D02D               	goto	i2l383
 46878                           
 46879                           ; BSR set to: 13
 46880                           ;usb_device.c: 2860: {
 46881                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 46882  00C124  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46883  00C128  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46884  00C12C  AEDF               	btfss	indf2,7,c
 46885  00C12E  D01A               	goto	i2l386
 46886                           
 46887                           ; BSR set to: 13
 46888                           ;usb_device.c: 2862: {
 46889                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 46890  00C130  BF34               	btfsc	52,7,b	;volatile
 46891  00C132  D00A               	goto	i2l385
 46892                           
 46893                           ; BSR set to: 13
 46894                           ;usb_device.c: 2866: {
 46895                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 46896  00C134  5134               	movf	52,w,b	;volatile
 46897  00C136  0B0F               	andlw	15
 46898  00C138  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46899  00C13A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46900  00C13C  0D01               	mullw	1
 46901  00C13E  0EE1               	movlw	low _ep_data_out
 46902  00C140  24F3               	addwf	prodl,w,c
 46903  00C142  6ED9               	movwf	fsr2l,c
 46904  00C144  0E01               	movlw	high _ep_data_out
 46905  00C146  D00A               	goto	L63
 46906  00C148                     i2l385:
 46907                           
 46908                           ;usb_device.c: 2869: else
 46909                           ;usb_device.c: 2870: {
 46910                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 46911                           
 46912                           ; BSR set to: 1
 46913  00C148  010D               	movlb	13	; () banked
 46914  00C14A  5134               	movf	52,w,b	;volatile
 46915  00C14C  0B0F               	andlw	15
 46916  00C14E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46917  00C150  5018               	movf	??_USBStdFeatureReqHandler,w,c
 46918  00C152  0D01               	mullw	1
 46919  00C154  0EE4               	movlw	low _ep_data_in
 46920  00C156  24F3               	addwf	prodl,w,c
 46921  00C158  6ED9               	movwf	fsr2l,c
 46922  00C15A  0E01               	movlw	high _ep_data_in
 46923  00C15C                     L63:
 46924  00C15C  20F4               	addwfc	prodh,w,c
 46925  00C15E  6EDA               	movwf	fsr2h,c
 46926  00C160  0101               	movlb	1	; () banked
 46927  00C162  82DF               	bsf	indf2,1,c
 46928  00C164                     i2l386:
 46929                           
 46930                           ;usb_device.c: 2872: }
 46931                           ;usb_device.c: 2873: }
 46932                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 46933                           
 46934                           ; BSR set to: 1
 46935                           
 46936                           ; BSR set to: 1
 46937  00C164  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46938  00C168  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46939  00C16C  0E00               	movlw	0
 46940  00C16E  84DB               	bsf	plusw2,2,c
 46941                           
 46942                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 46943  00C170  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46944  00C174  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46945  00C178  0E00               	movlw	0
 46946  00C17A  8EDB               	bsf	plusw2,7,c
 46947                           
 46948                           ;usb_device.c: 2878: }
 46949  00C17C  0012               	return	
 46950  00C17E                     i2l383:
 46951                           
 46952                           ;usb_device.c: 2879: else
 46953                           ;usb_device.c: 2880: {
 46954                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 46955  00C17E  0E04               	movlw	4
 46956  00C180  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 46957  00C182  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 46958  00C184  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 46959  00C186  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 46960                           
 46961                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 46962  00C188  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46963  00C18C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46964  00C190  AEDF               	btfss	indf2,7,c
 46965  00C192  D01B               	goto	i2l388
 46966                           
 46967                           ;usb_device.c: 2887: {
 46968                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 46969  00C194  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46970  00C198  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46971  00C19C  0E7F               	movlw	127
 46972  00C19E  16DF               	andwf	indf2,f,c
 46973                           
 46974                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 46975  00C1A0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46976  00C1A4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46977  00C1A8  0E00               	movlw	0
 46978  00C1AA  8CDB               	bsf	plusw2,6,c
 46979                           
 46980                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 46981  00C1AC  0E00               	movlw	0
 46982  00C1AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46983  00C1B0  0E05               	movlw	5
 46984  00C1B2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46985  00C1B4  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 46986  00C1B8  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 46987  00C1BC  0E00               	movlw	0
 46988  00C1BE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46989  00C1C0  0E02               	movlw	2
 46990  00C1C2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46991  00C1C4  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46992                           
 46993                           ;usb_device.c: 2893: }
 46994  00C1C8  D006               	goto	i2l389
 46995  00C1CA                     i2l388:
 46996                           
 46997                           ;usb_device.c: 2894: else
 46998                           ;usb_device.c: 2895: {
 46999                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 47000  00C1CA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47001  00C1CE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47002  00C1D2  0E00               	movlw	0
 47003  00C1D4  8CDB               	bsf	plusw2,6,c
 47004  00C1D6                     i2l389:
 47005                           
 47006                           ;usb_device.c: 2898: }
 47007                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 47008  00C1D6  0E04               	movlw	4
 47009  00C1D8  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 47010  00C1DA  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 47011  00C1DC  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 47012  00C1DE  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 47013                           
 47014                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 47015  00C1E0  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 47016  00C1E2  D006               	goto	i2u989_40
 47017  00C1E4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47018  00C1E8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47019  00C1EC  AEDF               	btfss	indf2,7,c
 47020  00C1EE  D030               	goto	i2l390
 47021  00C1F0                     i2u989_40:
 47022                           
 47023                           ;usb_device.c: 2909: {
 47024                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 47025  00C1F0  010D               	movlb	13	; () banked
 47026  00C1F2  BF34               	btfsc	52,7,b	;volatile
 47027  00C1F4  D00A               	goto	i2l393
 47028                           
 47029                           ; BSR set to: 13
 47030                           ;usb_device.c: 2911: {
 47031                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 47032  00C1F6  5134               	movf	52,w,b	;volatile
 47033  00C1F8  0B0F               	andlw	15
 47034  00C1FA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47035  00C1FC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47036  00C1FE  0D01               	mullw	1
 47037  00C200  0EE1               	movlw	low _ep_data_out
 47038  00C202  24F3               	addwf	prodl,w,c
 47039  00C204  6ED9               	movwf	fsr2l,c
 47040  00C206  0E01               	movlw	high _ep_data_out
 47041  00C208  D00A               	goto	L64
 47042  00C20A                     i2l393:
 47043                           
 47044                           ;usb_device.c: 2914: else
 47045                           ;usb_device.c: 2915: {
 47046                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 47047                           
 47048                           ; BSR set to: 1
 47049  00C20A  010D               	movlb	13	; () banked
 47050  00C20C  5134               	movf	52,w,b	;volatile
 47051  00C20E  0B0F               	andlw	15
 47052  00C210  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47053  00C212  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47054  00C214  0D01               	mullw	1
 47055  00C216  0EE4               	movlw	low _ep_data_in
 47056  00C218  24F3               	addwf	prodl,w,c
 47057  00C21A  6ED9               	movwf	fsr2l,c
 47058  00C21C  0E01               	movlw	high _ep_data_in
 47059  00C21E                     L64:
 47060  00C21E  20F4               	addwfc	prodh,w,c
 47061  00C220  6EDA               	movwf	fsr2h,c
 47062  00C222  0101               	movlb	1	; () banked
 47063  00C224  92DF               	bcf	indf2,1,c
 47064                           
 47065                           ; BSR set to: 1
 47066                           ;usb_device.c: 2917: }
 47067                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 47068                           
 47069                           ; BSR set to: 1
 47070  00C226  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47071  00C22A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47072  00C22E  0E3B               	movlw	59
 47073  00C230  16DF               	andwf	indf2,f,c
 47074                           
 47075                           ; BSR set to: 1
 47076                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 47077  00C232  0E00               	movlw	0
 47078  00C234  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47079  00C236  0E05               	movlw	5
 47080  00C238  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47081  00C23A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 47082  00C23E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 47083  00C242  0E00               	movlw	0
 47084  00C244  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47085  00C246  0E02               	movlw	2
 47086  00C248  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47087  00C24A  EC23  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47088                           
 47089                           ;usb_device.c: 2923: }
 47090  00C24E  D006               	goto	i2l395
 47091  00C250                     i2l390:
 47092                           
 47093                           ;usb_device.c: 2924: else
 47094                           ;usb_device.c: 2925: {
 47095                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 47096  00C250  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47097  00C254  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47098  00C258  0E3B               	movlw	59
 47099  00C25A  16DF               	andwf	indf2,f,c
 47100  00C25C                     i2l395:
 47101                           
 47102                           ;usb_device.c: 2928: }
 47103                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 47104  00C25C  010D               	movlb	13	; () banked
 47105  00C25E  5134               	movf	52,w,b	;volatile
 47106  00C260  0B0F               	andlw	15
 47107  00C262  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47108  00C264  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47109  00C266  0D01               	mullw	1
 47110  00C268  0E26               	movlw	38
 47111  00C26A  24F3               	addwf	prodl,w,c
 47112  00C26C  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 47113  00C26E  0E0F               	movlw	15
 47114  00C270  20F4               	addwfc	prodh,w,c
 47115  00C272  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 47116                           
 47117                           ; BSR set to: 13
 47118                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 47119  00C274  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 47120  00C278  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 47121  00C27C  0EFE               	movlw	254
 47122  00C27E  16DF               	andwf	indf2,f,c
 47123                           
 47124                           ; BSR set to: 13
 47125  00C280  0012               	return	
 47126  00C282                     __end_of_USBStdFeatureReqHandler:
 47127                           	opt stack 0
 47128                           tosu	equ	0xFFF
 47129                           tosh	equ	0xFFE
 47130                           tosl	equ	0xFFD
 47131                           pclatu	equ	0xFFB
 47132                           pclath	equ	0xFFA
 47133                           tblptru	equ	0xFF8
 47134                           tblptrh	equ	0xFF7
 47135                           tblptrl	equ	0xFF6
 47136                           tablat	equ	0xFF5
 47137                           prodh	equ	0xFF4
 47138                           prodl	equ	0xFF3
 47139                           intcon	equ	0xFF2
 47140                           intcon2	equ	0xFF1
 47141                           intcon3	equ	0xFF0
 47142                           indf0	equ	0xFEF
 47143                           postinc0	equ	0xFEE
 47144                           fsr0h	equ	0xFEA
 47145                           fsr0l	equ	0xFE9
 47146                           wreg	equ	0xFE8
 47147                           indf1	equ	0xFE7
 47148                           postinc1	equ	0xFE6
 47149                           postdec1	equ	0xFE5
 47150                           plusw1	equ	0xFE3
 47151                           fsr1h	equ	0xFE2
 47152                           fsr1l	equ	0xFE1
 47153                           indf2	equ	0xFDF
 47154                           postinc2	equ	0xFDE
 47155                           postdec2	equ	0xFDD
 47156                           plusw2	equ	0xFDB
 47157                           fsr2h	equ	0xFDA
 47158                           fsr2l	equ	0xFD9
 47159                           status	equ	0xFD8
 47160                           
 47161 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 47162 ;; Defined at:
 47163 ;;		line 54 in file "usb_events.c"
 47164 ;; Parameters:    Size  Location     Type
 47165 ;;  event           2   15[COMRAM] enum E8443
 47166 ;;  pdata           2   17[COMRAM] PTR void 
 47167 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 47168 ;;		 -> BDT(48), 
 47169 ;;  size            2   19[COMRAM] unsigned int 
 47170 ;; Auto vars:     Size  Location     Type
 47171 ;;		None
 47172 ;; Return value:  Size  Location     Type
 47173 ;;                  1    wreg      unsigned char 
 47174 ;; Registers used:
 47175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47176 ;; Tracked objects:
 47177 ;;		On entry : 0/0
 47178 ;;		On exit  : 0/0
 47179 ;;		Unchanged: 0/0
 47180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47181 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47184 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47185 ;;Total ram usage:        8 bytes
 47186 ;; Hardware stack levels used:    1
 47187 ;; Hardware stack levels required when called:    3
 47188 ;; This function calls:
 47189 ;;		_APP_DeviceCustomHIDInitialize
 47190 ;;		_APP_DeviceMSDInitialize
 47191 ;;		_MSDTransferTerminated
 47192 ;;		_USBCheckHIDRequest
 47193 ;;		_USBCheckMSDRequest
 47194 ;;		i2_SYSTEM_Initialize
 47195 ;; This function is called by:
 47196 ;;		_USBDeviceTasks
 47197 ;;		_USBStdSetCfgHandler
 47198 ;;		_USBSuspend
 47199 ;;		_USBWakeFromSuspend
 47200 ;;		_USBCtrlTrfSetupHandler
 47201 ;;		_USBCheckStdRequest
 47202 ;;		_USBStdFeatureReqHandler
 47203 ;; This function uses a non-reentrant model
 47204 ;;
 47205                           
 47206                           	psect	text231
 47207  010846                     __ptext231:
 47208                           	opt stack 0
 47209  010846                     _USER_USB_CALLBACK_EVENT_HANDLER:
 47210                           	opt stack 13
 47211                           
 47212                           ;usb_events.c: 56: switch((int)event)
 47213                           
 47214                           ;incstack = 0
 47215  010846  D019               	goto	i2l824
 47216  010848                     
 47217                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 47218  010848  0E01               	movlw	1
 47219  01084A  ECBE  F08D         	call	i2_SYSTEM_Initialize
 47220                           
 47221                           ;usb_events.c: 79: break;
 47222  01084E  0012               	return	
 47223  010850                     
 47224                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 47225  010850  0E02               	movlw	2
 47226  010852  ECBE  F08D         	call	i2_SYSTEM_Initialize
 47227                           
 47228                           ;usb_events.c: 90: break;
 47229  010856  0012               	return	
 47230  010858                     
 47231                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 47232  010858  EC34  F092         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 47233                           
 47234                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 47235  01085C  EC95  F096         	call	_APP_DeviceMSDInitialize	;wreg free
 47236                           
 47237                           ;usb_events.c: 100: break;
 47238                           
 47239                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 47240                           
 47241                           ;usb_events.c: 97: break;
 47242  010860  0012               	return	
 47243  010862                     
 47244                           ;usb_events.c: 105: USBCheckHIDRequest();
 47245  010862  EC8E  F07A         	call	_USBCheckHIDRequest	;wreg free
 47246                           
 47247                           ;usb_events.c: 108: USBCheckMSDRequest();
 47248  010866  EC3B  F07E         	call	_USBCheckMSDRequest	;wreg free
 47249                           
 47250                           ;usb_events.c: 112: break;
 47251                           
 47252                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 47253                           
 47254                           ;usb_events.c: 109: break;
 47255  01086A  0012               	return	
 47256  01086C                     
 47257                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 47258  01086C  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 47259  010870  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 47260  010874  EC69  F08D         	call	_MSDTransferTerminated	;wreg free
 47261                           
 47262                           ;usb_events.c: 129: }
 47263                           
 47264                           ;usb_events.c: 128: break;
 47265                           
 47266                           ;usb_events.c: 127: default:
 47267                           
 47268                           ;usb_events.c: 125: break;
 47269  010878  0012               	return	
 47270  01087A                     i2l824:
 47271  01087A  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 47272  01087E  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 47273                           
 47274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 47275                           ; Switch size 1, requested type "space"
 47276                           ; Number of cases is 2, Range of values is 0 to 127
 47277                           ; switch strategies available:
 47278                           ; Name         Instructions Cycles
 47279                           ; simple_byte            7     4 (average)
 47280                           ;	Chosen strategy is simple_byte
 47281  010882  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 47282  010884  0A00               	xorlw	0	; case 0
 47283  010886  B4D8               	btfsc	status,2,c
 47284  010888  D004               	goto	i2l17418
 47285  01088A  0A7F               	xorlw	127	; case 127
 47286  01088C  A4D8               	btfss	status,2,c
 47287  01088E  0012               	return	
 47288  010890  D01A               	goto	i2l17420
 47289  010892                     i2l17418:
 47290                           
 47291                           ; Switch size 1, requested type "space"
 47292                           ; Number of cases is 8, Range of values is 1 to 117
 47293                           ; switch strategies available:
 47294                           ; Name         Instructions Cycles
 47295                           ; simple_byte           25    13 (average)
 47296                           ;	Chosen strategy is simple_byte
 47297  010892  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 47298  010894  0A01               	xorlw	1	; case 1
 47299  010896  B4D8               	btfsc	status,2,c
 47300  010898  D7DF               	goto	i2l830
 47301  01089A  0A03               	xorlw	3	; case 2
 47302  01089C  B4D8               	btfsc	status,2,c
 47303  01089E  0012               	return	
 47304  0108A0  0A01               	xorlw	1	; case 3
 47305  0108A2  B4D8               	btfsc	status,2,c
 47306  0108A4  D7DE               	goto	i2l832
 47307  0108A6  0A06               	xorlw	6	; case 5
 47308  0108A8  B4D8               	btfsc	status,2,c
 47309  0108AA  D7E0               	goto	i2l834
 47310  0108AC  0A77               	xorlw	119	; case 114
 47311  0108AE  B4D8               	btfsc	status,2,c
 47312  0108B0  0012               	return	
 47313  0108B2  0A01               	xorlw	1	; case 115
 47314  0108B4  B4D8               	btfsc	status,2,c
 47315  0108B6  0012               	return	
 47316  0108B8  0A07               	xorlw	7	; case 116
 47317  0108BA  B4D8               	btfsc	status,2,c
 47318  0108BC  D7C9               	goto	i2l829
 47319  0108BE  0A01               	xorlw	1	; case 117
 47320  0108C0  A4D8               	btfss	status,2,c
 47321  0108C2  0012               	return	
 47322  0108C4  D7C1               	goto	i2l828
 47323  0108C6                     i2l17420:
 47324                           
 47325                           ; Switch size 1, requested type "space"
 47326                           ; Number of cases is 1, Range of values is 255 to 255
 47327                           ; switch strategies available:
 47328                           ; Name         Instructions Cycles
 47329                           ; simple_byte            4     3 (average)
 47330                           ;	Chosen strategy is simple_byte
 47331  0108C6  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 47332  0108C8  0AFF               	xorlw	255	; case 255
 47333  0108CA  0012               	return	
 47334  0108CC                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 47335                           	opt stack 0
 47336                           tosu	equ	0xFFF
 47337                           tosh	equ	0xFFE
 47338                           tosl	equ	0xFFD
 47339                           pclatu	equ	0xFFB
 47340                           pclath	equ	0xFFA
 47341                           tblptru	equ	0xFF8
 47342                           tblptrh	equ	0xFF7
 47343                           tblptrl	equ	0xFF6
 47344                           tablat	equ	0xFF5
 47345                           prodh	equ	0xFF4
 47346                           prodl	equ	0xFF3
 47347                           intcon	equ	0xFF2
 47348                           intcon2	equ	0xFF1
 47349                           intcon3	equ	0xFF0
 47350                           indf0	equ	0xFEF
 47351                           postinc0	equ	0xFEE
 47352                           fsr0h	equ	0xFEA
 47353                           fsr0l	equ	0xFE9
 47354                           wreg	equ	0xFE8
 47355                           indf1	equ	0xFE7
 47356                           postinc1	equ	0xFE6
 47357                           postdec1	equ	0xFE5
 47358                           plusw1	equ	0xFE3
 47359                           fsr1h	equ	0xFE2
 47360                           fsr1l	equ	0xFE1
 47361                           indf2	equ	0xFDF
 47362                           postinc2	equ	0xFDE
 47363                           postdec2	equ	0xFDD
 47364                           plusw2	equ	0xFDB
 47365                           fsr2h	equ	0xFDA
 47366                           fsr2l	equ	0xFD9
 47367                           status	equ	0xFD8
 47368                           
 47369 ;; *************** function i2_SYSTEM_Initialize *****************
 47370 ;; Defined at:
 47371 ;;		line 146 in file "system.c"
 47372 ;; Parameters:    Size  Location     Type
 47373 ;;  state           1    wreg     enum E8234
 47374 ;; Auto vars:     Size  Location     Type
 47375 ;;  state           1    4[COMRAM] enum E8234
 47376 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 47377 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 47378 ;; Return value:  Size  Location     Type
 47379 ;;                  1    wreg      void 
 47380 ;; Registers used:
 47381 ;;		wreg, status,2, status,0
 47382 ;; Tracked objects:
 47383 ;;		On entry : 0/0
 47384 ;;		On exit  : 0/0
 47385 ;;		Unchanged: 0/0
 47386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47388 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47390 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47391 ;;Total ram usage:        5 bytes
 47392 ;; Hardware stack levels used:    1
 47393 ;; This function calls:
 47394 ;;		Nothing
 47395 ;; This function is called by:
 47396 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47397 ;; This function uses a non-reentrant model
 47398 ;;
 47399                           
 47400                           	psect	text232
 47401  011B7C                     __ptext232:
 47402                           	opt stack 0
 47403  011B7C                     i2_SYSTEM_Initialize:
 47404                           	opt stack 15
 47405                           
 47406                           ;incstack = 0
 47407                           ;i2SYSTEM_Initialize@state stored from wreg
 47408  011B7C  6E05               	movwf	i2SYSTEM_Initialize@state,c
 47409                           
 47410                           ;system.c: 148: switch(state)
 47411  011B7E  D01D               	goto	i2l949
 47412  011B80                     
 47413                           ;system.c: 157: {
 47414                           ;system.c: 158: unsigned int pll_startup_counter = 600;
 47415  011B80  0E02               	movlw	2
 47416  011B82  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 47417  011B84  0E58               	movlw	88
 47418  011B86  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 47419                           
 47420                           ;system.c: 159: OSCTUNEbits.PLLEN = 1;
 47421  011B88  8C9B               	bsf	3995,6,c	;volatile
 47422  011B8A                     i2l11634:
 47423  011B8A  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 47424  011B8C  A0D8               	btfss	status,0,c
 47425  011B8E  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 47426  011B90  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 47427  011B92  E1FB               	bnz	i2l11634
 47428  011B94  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 47429  011B96  B4D8               	btfsc	status,2,c
 47430  011B98  0012               	return	
 47431  011B9A  D7F7               	goto	i2l952
 47432  011B9C                     
 47433                           ;system.c: 185: OSCCON = 0x70;
 47434  011B9C  0E70               	movlw	112
 47435  011B9E  6ED3               	movwf	4051,c	;volatile
 47436                           
 47437                           ;system.c: 191: {
 47438                           ;system.c: 192: unsigned int pll_startup_counter = 800;
 47439  011BA0  0E03               	movlw	3
 47440  011BA2  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,c
 47441  011BA4  0E20               	movlw	32
 47442  011BA6  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284,c
 47443  011BA8                     i2l11638:
 47444  011BA8  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284,f,c
 47445  011BAA  A0D8               	btfss	status,0,c
 47446  011BAC  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,f,c
 47447  011BAE  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284,w,c
 47448  011BB0  E1FB               	bnz	i2l11638
 47449  011BB2  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,w,c
 47450  011BB4  B4D8               	btfsc	status,2,c
 47451  011BB6  0012               	return	
 47452  011BB8  D7F7               	goto	i2l958
 47453  011BBA                     i2l949:
 47454  011BBA  5005               	movf	i2SYSTEM_Initialize@state,w,c
 47455                           
 47456                           ; Switch size 1, requested type "space"
 47457                           ; Number of cases is 3, Range of values is 0 to 2
 47458                           ; switch strategies available:
 47459                           ; Name         Instructions Cycles
 47460                           ; simple_byte           10     6 (average)
 47461                           ;	Chosen strategy is simple_byte
 47462  011BBC  0A00               	xorlw	0	; case 0
 47463  011BBE  B4D8               	btfsc	status,2,c
 47464  011BC0  D7DF               	goto	i2l950
 47465  011BC2  0A01               	xorlw	1	; case 1
 47466  011BC4  B4D8               	btfsc	status,2,c
 47467  011BC6  0012               	return	
 47468  011BC8  0A03               	xorlw	3	; case 2
 47469  011BCA  A4D8               	btfss	status,2,c
 47470  011BCC  0012               	return	
 47471  011BCE  D7E6               	goto	i2l956
 47472  011BD0                     __end_ofi2_SYSTEM_Initialize:
 47473                           	opt stack 0
 47474                           tosu	equ	0xFFF
 47475                           tosh	equ	0xFFE
 47476                           tosl	equ	0xFFD
 47477                           pclatu	equ	0xFFB
 47478                           pclath	equ	0xFFA
 47479                           tblptru	equ	0xFF8
 47480                           tblptrh	equ	0xFF7
 47481                           tblptrl	equ	0xFF6
 47482                           tablat	equ	0xFF5
 47483                           prodh	equ	0xFF4
 47484                           prodl	equ	0xFF3
 47485                           intcon	equ	0xFF2
 47486                           intcon2	equ	0xFF1
 47487                           intcon3	equ	0xFF0
 47488                           indf0	equ	0xFEF
 47489                           postinc0	equ	0xFEE
 47490                           fsr0h	equ	0xFEA
 47491                           fsr0l	equ	0xFE9
 47492                           wreg	equ	0xFE8
 47493                           indf1	equ	0xFE7
 47494                           postinc1	equ	0xFE6
 47495                           postdec1	equ	0xFE5
 47496                           plusw1	equ	0xFE3
 47497                           fsr1h	equ	0xFE2
 47498                           fsr1l	equ	0xFE1
 47499                           indf2	equ	0xFDF
 47500                           postinc2	equ	0xFDE
 47501                           postdec2	equ	0xFDD
 47502                           plusw2	equ	0xFDB
 47503                           fsr2h	equ	0xFDA
 47504                           fsr2l	equ	0xFD9
 47505                           status	equ	0xFD8
 47506                           
 47507 ;; *************** function _USBCheckMSDRequest *****************
 47508 ;; Defined at:
 47509 ;;		line 218 in file "usb_device_msd.c"
 47510 ;; Parameters:    Size  Location     Type
 47511 ;;		None
 47512 ;; Auto vars:     Size  Location     Type
 47513 ;;		None
 47514 ;; Return value:  Size  Location     Type
 47515 ;;                  1    wreg      void 
 47516 ;; Registers used:
 47517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47518 ;; Tracked objects:
 47519 ;;		On entry : 0/0
 47520 ;;		On exit  : 0/0
 47521 ;;		Unchanged: 0/0
 47522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47524 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47527 ;;Total ram usage:        4 bytes
 47528 ;; Hardware stack levels used:    1
 47529 ;; Hardware stack levels required when called:    1
 47530 ;; This function calls:
 47531 ;;		i2_USBTransferOnePacket
 47532 ;; This function is called by:
 47533 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47534 ;; This function uses a non-reentrant model
 47535 ;;
 47536                           
 47537                           	psect	text233
 47538  00FC76                     __ptext233:
 47539                           	opt stack 0
 47540  00FC76                     _USBCheckMSDRequest:
 47541                           	opt stack 14
 47542                           
 47543                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 47544                           
 47545                           ;incstack = 0
 47546  00FC76  010D               	movlb	13	; () banked
 47547  00FC78  5130               	movf	48,w,b	;volatile
 47548  00FC7A  0B1F               	andlw	31
 47549  00FC7C  06E8               	decf	wreg,f,c
 47550  00FC7E  A4D8               	btfss	status,2,c
 47551  00FC80  0012               	return	
 47552                           
 47553                           ; BSR set to: 13
 47554                           ;usb_device_msd.c: 223: }
 47555                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 47556                           
 47557                           ; BSR set to: 13
 47558                           
 47559                           ; BSR set to: 13
 47560                           ;usb_device_msd.c: 221: {
 47561                           ;usb_device_msd.c: 222: return;
 47562  00FC82  5134               	movf	52,w,b	;volatile
 47563  00FC84  A4D8               	btfss	status,2,c
 47564  00FC86  0012               	return	
 47565  00FC88  D04E               	goto	i2l549
 47566  00FC8A                     
 47567                           ; BSR set to: 13
 47568                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 47569                           
 47570                           ; BSR set to: 13
 47571  00FC8A  5132               	movf	50,w,b	;volatile
 47572  00FC8C  1133               	iorwf	51,w,b	;volatile
 47573  00FC8E  A4D8               	btfss	status,2,c
 47574  00FC90  0012               	return	
 47575                           
 47576                           ; BSR set to: 13
 47577  00FC92  5136               	movf	54,w,b	;volatile
 47578  00FC94  1137               	iorwf	55,w,b	;volatile
 47579  00FC96  A4D8               	btfss	status,2,c
 47580  00FC98  0012               	return	
 47581                           
 47582                           ; BSR set to: 13
 47583                           ;usb_device_msd.c: 238: }
 47584                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 47585                           
 47586                           ; BSR set to: 13
 47587                           
 47588                           ; BSR set to: 13
 47589                           ;usb_device_msd.c: 236: {
 47590                           ;usb_device_msd.c: 237: return;
 47591  00FC9A  0E00               	movlw	0
 47592  00FC9C  6E54               	movwf	_MSD_State,c
 47593                           
 47594                           ; BSR set to: 13
 47595                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 47596  00FC9E  6853               	setf	_MSDCommandState,c
 47597                           
 47598                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 47599  00FCA0  0E00               	movlw	0
 47600  00FCA2  0101               	movlb	1	; () banked
 47601  00FCA4  6FF5               	movwf	_MSDReadState& (0+255),b
 47602                           
 47603                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 47604  00FCA6  0E00               	movlw	0
 47605  00FCA8  6E52               	movwf	_MSDWriteState,c
 47606                           
 47607                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 47608  00FCAA  0E01               	movlw	1
 47609  00FCAC  6FF1               	movwf	_MSDCBWValid& (0+255),b
 47610                           
 47611                           ; BSR set to: 1
 47612                           
 47613                           ; BSR set to: 1
 47614                           
 47615                           ; BSR set to: 1
 47616                           
 47617                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 47618  00FCAE  C1D7  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2640
 47619  00FCB2  C1D8  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2640+1
 47620                           
 47621                           ; BSR set to: 1
 47622  00FCB6  500C               	movf	_USBCheckMSDRequest$2640,w,c
 47623  00FCB8  100D               	iorwf	_USBCheckMSDRequest$2640+1,w,c
 47624  00FCBA  B4D8               	btfsc	status,2,c
 47625  00FCBC  D00A               	goto	i2u860_40
 47626                           
 47627                           ; BSR set to: 1
 47628                           
 47629                           ; BSR set to: 1
 47630                           
 47631                           ; BSR set to: 1
 47632                           
 47633                           ; BSR set to: 1
 47634  00FCBE  C1D7  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2641
 47635  00FCC2  C1D8  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2641+1
 47636                           
 47637                           ; BSR set to: 1
 47638                           
 47639                           ; BSR set to: 1
 47640  00FCC6  C00E  FFD9         	movff	_USBCheckMSDRequest$2641,fsr2l
 47641  00FCCA  C00F  FFDA         	movff	_USBCheckMSDRequest$2641+1,fsr2h
 47642  00FCCE  BEDF               	btfsc	indf2,7,c
 47643  00FCD0  D00F               	goto	i2l554
 47644  00FCD2                     i2u860_40:
 47645                           
 47646                           ; BSR set to: 1
 47647                           ;usb_device_msd.c: 256: {
 47648                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 47649                           
 47650                           ; BSR set to: 1
 47651  00FCD2  0E00               	movlw	0
 47652  00FCD4  6E01               	movwf	i2USBTransferOnePacket@dir,c
 47653  00FCD6  0E40               	movlw	64
 47654  00FCD8  6E02               	movwf	i2USBTransferOnePacket@data,c
 47655  00FCDA  0E0D               	movlw	13
 47656  00FCDC  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 47657  00FCDE  0E40               	movlw	64
 47658  00FCE0  6E04               	movwf	i2USBTransferOnePacket@len,c
 47659  00FCE2  0E02               	movlw	2
 47660  00FCE4  EC65  F075         	call	i2_USBTransferOnePacket
 47661  00FCE8  C001  F047         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47662  00FCEC  C002  F048         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47663  00FCF0                     i2l554:
 47664                           
 47665                           ;usb_device_msd.c: 258: }
 47666                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 47667  00FCF0  0E80               	movlw	128
 47668  00FCF2  0100               	movlb	0	; () banked
 47669  00FCF4  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47670                           
 47671                           ;usb_device_msd.c: 263: break;
 47672  00FCF6  0012               	return	
 47673  00FCF8                     
 47674                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 47675                           
 47676                           ; BSR set to: 0
 47677  00FCF8  010D               	movlb	13	; () banked
 47678  00FCFA  5132               	movf	50,w,b	;volatile
 47679  00FCFC  1133               	iorwf	51,w,b	;volatile
 47680  00FCFE  A4D8               	btfss	status,2,c
 47681  00FD00  0012               	return	
 47682                           
 47683                           ; BSR set to: 13
 47684  00FD02  0536               	decf	54,w,b	;volatile
 47685  00FD04  1137               	iorwf	55,w,b	;volatile
 47686  00FD06  A4D8               	btfss	status,2,c
 47687  00FD08  0012               	return	
 47688                           
 47689                           ; BSR set to: 13
 47690                           ;usb_device_msd.c: 271: }
 47691                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 47692                           
 47693                           ; BSR set to: 13
 47694                           
 47695                           ; BSR set to: 13
 47696                           ;usb_device_msd.c: 269: {
 47697                           ;usb_device_msd.c: 270: break;
 47698  00FD0A  0E00               	movlw	0
 47699  00FD0C  6F38               	movwf	56,b	;volatile
 47700                           
 47701                           ; BSR set to: 13
 47702                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 47703  00FD0E  0E38               	movlw	56
 47704  00FD10  0100               	movlb	0	; () banked
 47705  00FD12  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 47706  00FD14  0E0D               	movlw	13
 47707  00FD16  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 47708                           
 47709                           ; BSR set to: 0
 47710  00FD18  0E00               	movlw	0
 47711  00FD1A  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 47712  00FD1C  0E01               	movlw	1
 47713  00FD1E  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 47714                           
 47715                           ; BSR set to: 0
 47716  00FD20  0EC1               	movlw	193
 47717  00FD22  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47718                           
 47719                           ; BSR set to: 0
 47720                           ;usb_device_msd.c: 278: }
 47721                           
 47722                           ;usb_device_msd.c: 277: break;
 47723  00FD24  0012               	return	
 47724  00FD26                     i2l549:
 47725                           
 47726                           ; BSR set to: 0
 47727  00FD26  010D               	movlb	13	; () banked
 47728  00FD28  5131               	movf	49,w,b	;volatile
 47729                           
 47730                           ; Switch size 1, requested type "space"
 47731                           ; Number of cases is 2, Range of values is 254 to 255
 47732                           ; switch strategies available:
 47733                           ; Name         Instructions Cycles
 47734                           ; simple_byte            7     4 (average)
 47735                           ;	Chosen strategy is simple_byte
 47736  00FD2A  0AFE               	xorlw	254	; case 254
 47737  00FD2C  B4D8               	btfsc	status,2,c
 47738  00FD2E  D7E4               	goto	i2l566
 47739  00FD30  0A01               	xorlw	1	; case 255
 47740  00FD32  A4D8               	btfss	status,2,c
 47741  00FD34  0012               	return	
 47742  00FD36  D7A9               	goto	i2l550
 47743  00FD38                     __end_of_USBCheckMSDRequest:
 47744                           	opt stack 0
 47745                           tosu	equ	0xFFF
 47746                           tosh	equ	0xFFE
 47747                           tosl	equ	0xFFD
 47748                           pclatu	equ	0xFFB
 47749                           pclath	equ	0xFFA
 47750                           tblptru	equ	0xFF8
 47751                           tblptrh	equ	0xFF7
 47752                           tblptrl	equ	0xFF6
 47753                           tablat	equ	0xFF5
 47754                           prodh	equ	0xFF4
 47755                           prodl	equ	0xFF3
 47756                           intcon	equ	0xFF2
 47757                           intcon2	equ	0xFF1
 47758                           intcon3	equ	0xFF0
 47759                           indf0	equ	0xFEF
 47760                           postinc0	equ	0xFEE
 47761                           fsr0h	equ	0xFEA
 47762                           fsr0l	equ	0xFE9
 47763                           wreg	equ	0xFE8
 47764                           indf1	equ	0xFE7
 47765                           postinc1	equ	0xFE6
 47766                           postdec1	equ	0xFE5
 47767                           plusw1	equ	0xFE3
 47768                           fsr1h	equ	0xFE2
 47769                           fsr1l	equ	0xFE1
 47770                           indf2	equ	0xFDF
 47771                           postinc2	equ	0xFDE
 47772                           postdec2	equ	0xFDD
 47773                           plusw2	equ	0xFDB
 47774                           fsr2h	equ	0xFDA
 47775                           fsr2l	equ	0xFD9
 47776                           status	equ	0xFD8
 47777                           
 47778 ;; *************** function _USBCheckHIDRequest *****************
 47779 ;; Defined at:
 47780 ;;		line 153 in file "usb_device_hid.c"
 47781 ;; Parameters:    Size  Location     Type
 47782 ;;		None
 47783 ;; Auto vars:     Size  Location     Type
 47784 ;;		None
 47785 ;; Return value:  Size  Location     Type
 47786 ;;                  1    wreg      void 
 47787 ;; Registers used:
 47788 ;;		wreg, status,2, status,0
 47789 ;; Tracked objects:
 47790 ;;		On entry : 0/0
 47791 ;;		On exit  : 0/0
 47792 ;;		Unchanged: 0/0
 47793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47798 ;;Total ram usage:        0 bytes
 47799 ;; Hardware stack levels used:    1
 47800 ;; This function calls:
 47801 ;;		Nothing
 47802 ;; This function is called by:
 47803 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47804 ;; This function uses a non-reentrant model
 47805 ;;
 47806                           
 47807                           	psect	text234
 47808  00F51C                     __ptext234:
 47809                           	opt stack 0
 47810  00F51C                     _USBCheckHIDRequest:
 47811                           	opt stack 15
 47812                           
 47813                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 47814                           
 47815                           ;incstack = 0
 47816  00F51C  010D               	movlb	13	; () banked
 47817  00F51E  5130               	movf	48,w,b	;volatile
 47818  00F520  0B1F               	andlw	31
 47819  00F522  06E8               	decf	wreg,f,c
 47820  00F524  A4D8               	btfss	status,2,c
 47821  00F526  0012               	return	
 47822                           
 47823                           ; BSR set to: 13
 47824                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 47825                           
 47826                           ; BSR set to: 13
 47827                           
 47828                           ; BSR set to: 13
 47829  00F528  5134               	movf	52,w,b	;volatile
 47830  00F52A  A4D8               	btfss	status,2,c
 47831  00F52C  0012               	return	
 47832                           
 47833                           ; BSR set to: 13
 47834                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 47835                           
 47836                           ; BSR set to: 13
 47837                           
 47838                           ; BSR set to: 13
 47839  00F52E  0E06               	movlw	6
 47840  00F530  1931               	xorwf	49,w,b	;volatile
 47841  00F532  B4D8               	btfsc	status,2,c
 47842  00F534  D01A               	goto	i2l427
 47843  00F536  D022               	goto	i2l430
 47844  00F538                     
 47845                           ; BSR set to: 13
 47846                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 47847                           
 47848                           ; BSR set to: 13
 47849  00F538  045E               	decf	_USBActiveConfiguration,w,c	;volatile
 47850  00F53A  A4D8               	btfss	status,2,c
 47851  00F53C  D01F               	goto	i2l430
 47852                           
 47853                           ; BSR set to: 13
 47854                           ;usb_device_hid.c: 169: {
 47855                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 47856  00F53E  0E4D               	movlw	low (_configDescriptor1+18)
 47857  00F540  0100               	movlb	0	; () banked
 47858  00F542  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 47859  00F544  0E93               	movlw	high (_configDescriptor1+18)
 47860  00F546  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 47861                           
 47862                           ; BSR set to: 0
 47863  00F548  0E00               	movlw	0
 47864  00F54A  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 47865  00F54C  0E09               	movlw	9
 47866  00F54E  D00B               	goto	L65
 47867  00F550                     i2l11406:
 47868                           
 47869                           ; BSR set to: 0
 47870  00F550  0EC0               	movlw	192
 47871  00F552  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47872                           
 47873                           ; BSR set to: 0
 47874                           ;usb_device_hid.c: 174: }
 47875                           ;usb_device_hid.c: 175: break;
 47876  00F554  D013               	goto	i2l430
 47877  00F556                     
 47878                           ;usb_device_hid.c: 178: {
 47879                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 47880                           
 47881                           ; BSR set to: 0
 47882  00F556  0E01               	movlw	low _hid_rpt01
 47883  00F558  0100               	movlb	0	; () banked
 47884  00F55A  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 47885  00F55C  0E94               	movlw	high _hid_rpt01
 47886  00F55E  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 47887                           
 47888                           ; BSR set to: 0
 47889  00F560  0E00               	movlw	0
 47890  00F562  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 47891  00F564  0E1D               	movlw	29
 47892  00F566                     L65:
 47893  00F566  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 47894  00F568  D7F3               	goto	i2l11406
 47895  00F56A                     i2l427:
 47896                           
 47897                           ; BSR set to: 0
 47898  00F56A  010D               	movlb	13	; () banked
 47899  00F56C  5133               	movf	51,w,b	;volatile
 47900                           
 47901                           ; Switch size 1, requested type "space"
 47902                           ; Number of cases is 3, Range of values is 33 to 35
 47903                           ; switch strategies available:
 47904                           ; Name         Instructions Cycles
 47905                           ; simple_byte           10     6 (average)
 47906                           ;	Chosen strategy is simple_byte
 47907  00F56E  0A21               	xorlw	33	; case 33
 47908  00F570  B4D8               	btfsc	status,2,c
 47909  00F572  D7E2               	goto	i2l428
 47910  00F574  0A03               	xorlw	3	; case 34
 47911  00F576  B4D8               	btfsc	status,2,c
 47912  00F578  D7EE               	goto	i2l431
 47913  00F57A  0A01               	xorlw	1	; case 35
 47914  00F57C                     i2l430:
 47915                           
 47916                           ;usb_device_hid.c: 199: }
 47917                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 47918                           
 47919                           ; BSR set to: 13
 47920                           
 47921                           ; BSR set to: 13
 47922  00F57C  010D               	movlb	13	; () banked
 47923  00F57E  3930               	swapf	48,w,b	;volatile
 47924  00F580  32E8               	rrcf	wreg,f,c
 47925  00F582  0B03               	andlw	3
 47926  00F584  06E8               	decf	wreg,f,c
 47927  00F586  A4D8               	btfss	status,2,c
 47928  00F588  0012               	return	
 47929  00F58A  D024               	goto	i2l434
 47930  00F58C                     
 47931                           ; BSR set to: 13
 47932                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 47933                           
 47934                           ; BSR set to: 13
 47935  00F58C  0EFF               	movlw	low _idle_rate
 47936  00F58E  0100               	movlb	0	; () banked
 47937  00F590  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 47938  00F592  0E01               	movlw	high _idle_rate
 47939  00F594  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 47940                           
 47941                           ; BSR set to: 0
 47942  00F596  0E00               	movlw	0
 47943  00F598  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 47944  00F59A  0E01               	movlw	1
 47945  00F59C  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 47946                           
 47947                           ; BSR set to: 0
 47948  00F59E  0EC1               	movlw	193
 47949  00F5A0  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47950                           
 47951                           ;usb_device_hid.c: 223: break;
 47952  00F5A2  0012               	return	
 47953  00F5A4                     
 47954                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 47955                           
 47956                           ; BSR set to: 0
 47957  00F5A4  0E80               	movlw	128
 47958  00F5A6  0100               	movlb	0	; () banked
 47959  00F5A8  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47960                           
 47961                           ; BSR set to: 0
 47962                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 47963  00F5AA  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 47964                           
 47965                           ;usb_device_hid.c: 227: ;
 47966                           ;usb_device_hid.c: 228: break;
 47967  00F5AE  0012               	return	
 47968  00F5B0                     
 47969                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 47970                           
 47971                           ; BSR set to: 0
 47972  00F5B0  0EFE               	movlw	low _active_protocol
 47973  00F5B2  0100               	movlb	0	; () banked
 47974  00F5B4  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 47975  00F5B6  0E01               	movlw	high _active_protocol
 47976  00F5B8  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 47977                           
 47978                           ; BSR set to: 0
 47979  00F5BA  0E00               	movlw	0
 47980  00F5BC  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 47981  00F5BE  0E01               	movlw	1
 47982  00F5C0  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 47983                           
 47984                           ; BSR set to: 0
 47985  00F5C2  0E81               	movlw	129
 47986  00F5C4  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47987                           
 47988                           ;usb_device_hid.c: 234: break;
 47989  00F5C6  0012               	return	
 47990  00F5C8                     
 47991                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 47992                           
 47993                           ; BSR set to: 0
 47994  00F5C8  0E80               	movlw	128
 47995  00F5CA  0100               	movlb	0	; () banked
 47996  00F5CC  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 47997                           
 47998                           ; BSR set to: 0
 47999                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 48000  00F5CE  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 48001                           
 48002                           ; BSR set to: 0
 48003                           ;usb_device_hid.c: 239: }
 48004                           
 48005                           ;usb_device_hid.c: 238: break;
 48006  00F5D2  0012               	return	
 48007  00F5D4                     i2l434:
 48008                           
 48009                           ; BSR set to: 0
 48010  00F5D4  010D               	movlb	13	; () banked
 48011  00F5D6  5131               	movf	49,w,b	;volatile
 48012                           
 48013                           ; Switch size 1, requested type "space"
 48014                           ; Number of cases is 6, Range of values is 1 to 11
 48015                           ; switch strategies available:
 48016                           ; Name         Instructions Cycles
 48017                           ; simple_byte           19    10 (average)
 48018                           ;	Chosen strategy is simple_byte
 48019  00F5D8  0A01               	xorlw	1	; case 1
 48020  00F5DA  B4D8               	btfsc	status,2,c
 48021  00F5DC  0012               	return	
 48022  00F5DE  0A03               	xorlw	3	; case 2
 48023  00F5E0  B4D8               	btfsc	status,2,c
 48024  00F5E2  D7D4               	goto	i2l438
 48025  00F5E4  0A01               	xorlw	1	; case 3
 48026  00F5E6  B4D8               	btfsc	status,2,c
 48027  00F5E8  D7E3               	goto	i2l440
 48028  00F5EA  0A0A               	xorlw	10	; case 9
 48029  00F5EC  B4D8               	btfsc	status,2,c
 48030  00F5EE  0012               	return	
 48031  00F5F0  0A03               	xorlw	3	; case 10
 48032  00F5F2  B4D8               	btfsc	status,2,c
 48033  00F5F4  D7D7               	goto	i2l439
 48034  00F5F6  0A01               	xorlw	1	; case 11
 48035  00F5F8  A4D8               	btfss	status,2,c
 48036  00F5FA  0012               	return	
 48037  00F5FC  D7E5               	goto	i2l441
 48038  00F5FE                     __end_of_USBCheckHIDRequest:
 48039                           	opt stack 0
 48040                           tosu	equ	0xFFF
 48041                           tosh	equ	0xFFE
 48042                           tosl	equ	0xFFD
 48043                           pclatu	equ	0xFFB
 48044                           pclath	equ	0xFFA
 48045                           tblptru	equ	0xFF8
 48046                           tblptrh	equ	0xFF7
 48047                           tblptrl	equ	0xFF6
 48048                           tablat	equ	0xFF5
 48049                           prodh	equ	0xFF4
 48050                           prodl	equ	0xFF3
 48051                           intcon	equ	0xFF2
 48052                           intcon2	equ	0xFF1
 48053                           intcon3	equ	0xFF0
 48054                           indf0	equ	0xFEF
 48055                           postinc0	equ	0xFEE
 48056                           fsr0h	equ	0xFEA
 48057                           fsr0l	equ	0xFE9
 48058                           wreg	equ	0xFE8
 48059                           indf1	equ	0xFE7
 48060                           postinc1	equ	0xFE6
 48061                           postdec1	equ	0xFE5
 48062                           plusw1	equ	0xFE3
 48063                           fsr1h	equ	0xFE2
 48064                           fsr1l	equ	0xFE1
 48065                           indf2	equ	0xFDF
 48066                           postinc2	equ	0xFDE
 48067                           postdec2	equ	0xFDD
 48068                           plusw2	equ	0xFDB
 48069                           fsr2h	equ	0xFDA
 48070                           fsr2l	equ	0xFD9
 48071                           status	equ	0xFD8
 48072                           
 48073 ;; *************** function _MSDTransferTerminated *****************
 48074 ;; Defined at:
 48075 ;;		line 1674 in file "usb_device_msd.c"
 48076 ;; Parameters:    Size  Location     Type
 48077 ;;  handle          2   11[COMRAM] PTR void 
 48078 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 48079 ;;		 -> BDT(48), 
 48080 ;; Auto vars:     Size  Location     Type
 48081 ;;		None
 48082 ;; Return value:  Size  Location     Type
 48083 ;;                  1    wreg      void 
 48084 ;; Registers used:
 48085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48086 ;; Tracked objects:
 48087 ;;		On entry : 0/0
 48088 ;;		On exit  : 0/0
 48089 ;;		Unchanged: 0/0
 48090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48095 ;;Total ram usage:        4 bytes
 48096 ;; Hardware stack levels used:    1
 48097 ;; Hardware stack levels required when called:    1
 48098 ;; This function calls:
 48099 ;;		i2_USBStallEndpoint
 48100 ;;		i2_USBTransferOnePacket
 48101 ;; This function is called by:
 48102 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48103 ;; This function uses a non-reentrant model
 48104 ;;
 48105                           
 48106                           	psect	text235
 48107  011AD2                     __ptext235:
 48108                           	opt stack 0
 48109  011AD2                     _MSDTransferTerminated:
 48110                           	opt stack 14
 48111                           
 48112                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 48113                           
 48114                           ;incstack = 0
 48115  011AD2  0101               	movlb	1	; () banked
 48116  011AD4  51F1               	movf	_MSDCBWValid& (0+255),w,b
 48117  011AD6  A4D8               	btfss	status,2,c
 48118  011AD8  D00B               	goto	i2l784
 48119                           
 48120                           ; BSR set to: 1
 48121                           ;usb_device_msd.c: 1677: {
 48122                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 48123  011ADA  0E01               	movlw	1
 48124  011ADC  6E01               	movwf	i2USBStallEndpoint@dir,c
 48125  011ADE  0E02               	movlw	2
 48126  011AE0  EC5B  F073         	call	i2_USBStallEndpoint
 48127                           
 48128                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 48129  011AE4  0E00               	movlw	0
 48130  011AE6  6E01               	movwf	i2USBStallEndpoint@dir,c
 48131  011AE8  0E02               	movlw	2
 48132  011AEA  EC5B  F073         	call	i2_USBStallEndpoint
 48133                           
 48134                           ;usb_device_msd.c: 1681: }
 48135  011AEE  0012               	return	
 48136  011AF0                     i2l784:
 48137  011AF0  C1D7  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2729
 48138  011AF4  C1D8  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2729+1
 48139  011AF8  500E               	movf	_MSDTransferTerminated$2729,w,c
 48140  011AFA  180C               	xorwf	MSDTransferTerminated@handle,w,c
 48141  011AFC  E114               	bnz	i2l787
 48142  011AFE  500F               	movf	_MSDTransferTerminated$2729+1,w,c
 48143  011B00  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 48144  011B02  A4D8               	btfss	status,2,c
 48145  011B04  0012               	return	
 48146                           
 48147                           ;usb_device_msd.c: 1687: {
 48148                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 48149  011B06  0E00               	movlw	0
 48150  011B08  6E01               	movwf	i2USBTransferOnePacket@dir,c
 48151  011B0A  0E40               	movlw	64
 48152  011B0C  6E02               	movwf	i2USBTransferOnePacket@data,c
 48153  011B0E  0E0D               	movlw	13
 48154  011B10  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 48155  011B12  0E40               	movlw	64
 48156  011B14  6E04               	movwf	i2USBTransferOnePacket@len,c
 48157  011B16  0E02               	movlw	2
 48158  011B18  EC65  F075         	call	i2_USBTransferOnePacket
 48159  011B1C  C001  F047         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 48160  011B20  C002  F048         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 48161  011B24  0012               	return	
 48162  011B26                     i2l787:
 48163  011B26  0012               	return		;funcret
 48164  011B28                     __end_of_MSDTransferTerminated:
 48165                           	opt stack 0
 48166                           tosu	equ	0xFFF
 48167                           tosh	equ	0xFFE
 48168                           tosl	equ	0xFFD
 48169                           pclatu	equ	0xFFB
 48170                           pclath	equ	0xFFA
 48171                           tblptru	equ	0xFF8
 48172                           tblptrh	equ	0xFF7
 48173                           tblptrl	equ	0xFF6
 48174                           tablat	equ	0xFF5
 48175                           prodh	equ	0xFF4
 48176                           prodl	equ	0xFF3
 48177                           intcon	equ	0xFF2
 48178                           intcon2	equ	0xFF1
 48179                           intcon3	equ	0xFF0
 48180                           indf0	equ	0xFEF
 48181                           postinc0	equ	0xFEE
 48182                           fsr0h	equ	0xFEA
 48183                           fsr0l	equ	0xFE9
 48184                           wreg	equ	0xFE8
 48185                           indf1	equ	0xFE7
 48186                           postinc1	equ	0xFE6
 48187                           postdec1	equ	0xFE5
 48188                           plusw1	equ	0xFE3
 48189                           fsr1h	equ	0xFE2
 48190                           fsr1l	equ	0xFE1
 48191                           indf2	equ	0xFDF
 48192                           postinc2	equ	0xFDE
 48193                           postdec2	equ	0xFDD
 48194                           plusw2	equ	0xFDB
 48195                           fsr2h	equ	0xFDA
 48196                           fsr2l	equ	0xFD9
 48197                           status	equ	0xFD8
 48198                           
 48199 ;; *************** function i2_USBStallEndpoint *****************
 48200 ;; Defined at:
 48201 ;;		line 1073 in file "usb_device.c"
 48202 ;; Parameters:    Size  Location     Type
 48203 ;;  ep              1    wreg     unsigned char 
 48204 ;;  dir             1    0[COMRAM] unsigned char 
 48205 ;; Auto vars:     Size  Location     Type
 48206 ;;  ep              1    5[COMRAM] unsigned char 
 48207 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 48208 ;;		 -> BDT(48), 
 48209 ;; Return value:  Size  Location     Type
 48210 ;;                  1    wreg      void 
 48211 ;; Registers used:
 48212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48213 ;; Tracked objects:
 48214 ;;		On entry : 0/0
 48215 ;;		On exit  : 0/0
 48216 ;;		Unchanged: 0/0
 48217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48218 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48219 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48221 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48222 ;;Total ram usage:        8 bytes
 48223 ;; Hardware stack levels used:    1
 48224 ;; This function calls:
 48225 ;;		Nothing
 48226 ;; This function is called by:
 48227 ;;		_MSDTransferTerminated
 48228 ;; This function uses a non-reentrant model
 48229 ;;
 48230                           
 48231                           	psect	text236
 48232  00E6B6                     __ptext236:
 48233                           	opt stack 0
 48234  00E6B6                     i2_USBStallEndpoint:
 48235                           	opt stack 14
 48236                           
 48237                           ;incstack = 0
 48238                           ;i2USBStallEndpoint@ep stored from wreg
 48239  00E6B6  6E06               	movwf	i2USBStallEndpoint@ep,c
 48240                           
 48241                           ;usb_device.c: 1075: BDT_ENTRY *p;
 48242                           ;usb_device.c: 1077: if(ep == 0)
 48243  00E6B8  5006               	movf	i2USBStallEndpoint@ep,w,c
 48244  00E6BA  A4D8               	btfss	status,2,c
 48245  00E6BC  D02C               	goto	i2l194
 48246                           
 48247                           ;usb_device.c: 1078: {
 48248                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 48249  00E6BE  0100               	movlb	0	; () banked
 48250  00E6C0  EE20 F001          	lfsr	2,1
 48251  00E6C4  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 48252  00E6C6  26D9               	addwf	fsr2l,f,c
 48253  00E6C8  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 48254  00E6CA  22DA               	addwfc	fsr2h,f,c
 48255  00E6CC  0E08               	movlw	8
 48256  00E6CE  6EDF               	movwf	indf2,c
 48257                           
 48258                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 48259  00E6D0  EE20 F002          	lfsr	2,2
 48260  00E6D4  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 48261  00E6D6  26D9               	addwf	fsr2l,f,c
 48262  00E6D8  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 48263  00E6DA  22DA               	addwfc	fsr2h,f,c
 48264  00E6DC  0E30               	movlw	48
 48265  00E6DE  6EDE               	movwf	postinc2,c
 48266  00E6E0  0E0D               	movlw	13
 48267  00E6E2  6EDD               	movwf	postdec2,c
 48268                           
 48269                           ; BSR set to: 0
 48270                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 48271  00E6E4  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48272  00E6E8  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48273  00E6EC  0E0C               	movlw	12
 48274  00E6EE  6EDF               	movwf	indf2,c
 48275                           
 48276                           ; BSR set to: 0
 48277                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 48278  00E6F0  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48279  00E6F4  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48280  00E6F8  0E00               	movlw	0
 48281  00E6FA  8EDB               	bsf	plusw2,7,c
 48282                           
 48283                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 48284  00E6FC  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48285  00E700  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48286  00E704  0E04               	movlw	4
 48287  00E706  6EDF               	movwf	indf2,c
 48288                           
 48289                           ; BSR set to: 0
 48290                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 48291  00E708  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48292  00E70C  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48293  00E710  0E00               	movlw	0
 48294  00E712  8EDB               	bsf	plusw2,7,c
 48295                           
 48296                           ;usb_device.c: 1089: }
 48297  00E714  0012               	return	
 48298  00E716                     i2l194:
 48299                           
 48300                           ;usb_device.c: 1090: else
 48301                           ;usb_device.c: 1091: {
 48302                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 48303                           
 48304                           ; BSR set to: 0
 48305  00E716  5001               	movf	i2USBStallEndpoint@dir,w,c
 48306  00E718  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 48307  00E71A  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 48308  00E71C  90D8               	bcf	status,0,c
 48309  00E71E  3602               	rlcf	??i2_USBStallEndpoint,f,c
 48310  00E720  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 48311  00E722  5006               	movf	i2USBStallEndpoint@ep,w,c
 48312  00E724  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 48313  00E726  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 48314  00E728  90D8               	bcf	status,0,c
 48315  00E72A  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48316  00E72C  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48317  00E72E  90D8               	bcf	status,0,c
 48318  00E730  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48319  00E732  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48320  00E734  5002               	movf	??i2_USBStallEndpoint,w,c
 48321  00E736  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 48322  00E738  5003               	movf	??i2_USBStallEndpoint+1,w,c
 48323  00E73A  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 48324  00E73C  90D8               	bcf	status,0,c
 48325  00E73E  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48326  00E740  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48327  00E742  90D8               	bcf	status,0,c
 48328  00E744  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48329  00E746  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48330  00E748  0E00               	movlw	0
 48331  00E74A  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 48332  00E74C  6E07               	movwf	i2USBStallEndpoint@p,c
 48333  00E74E  0E0D               	movlw	13
 48334  00E750  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 48335  00E752  6E08               	movwf	i2USBStallEndpoint@p+1,c
 48336                           
 48337                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 48338  00E754  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48339  00E758  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48340  00E75C  0E00               	movlw	0
 48341  00E75E  84DB               	bsf	plusw2,2,c
 48342                           
 48343                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 48344  00E760  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48345  00E764  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48346  00E768  0E00               	movlw	0
 48347  00E76A  8EDB               	bsf	plusw2,7,c
 48348                           
 48349                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 48350  00E76C  5006               	movf	i2USBStallEndpoint@ep,w,c
 48351  00E76E  0D04               	mullw	4
 48352  00E770  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 48353  00E774  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 48354  00E778  5001               	movf	i2USBStallEndpoint@dir,w,c
 48355  00E77A  0D02               	mullw	2
 48356  00E77C  50F3               	movf	prodl,w,c
 48357  00E77E  2602               	addwf	??i2_USBStallEndpoint,f,c
 48358  00E780  50F4               	movf	prodh,w,c
 48359  00E782  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 48360  00E784  90D8               	bcf	status,0,c
 48361  00E786  3602               	rlcf	??i2_USBStallEndpoint,f,c
 48362  00E788  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 48363  00E78A  90D8               	bcf	status,0,c
 48364  00E78C  3602               	rlcf	??i2_USBStallEndpoint,f,c
 48365  00E78E  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 48366  00E790  0E04               	movlw	4
 48367  00E792  2602               	addwf	??i2_USBStallEndpoint,f,c
 48368  00E794  0E00               	movlw	0
 48369  00E796  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 48370  00E798  0E00               	movlw	0
 48371  00E79A  2402               	addwf	??i2_USBStallEndpoint,w,c
 48372  00E79C  6E07               	movwf	i2USBStallEndpoint@p,c
 48373  00E79E  0E0D               	movlw	13
 48374  00E7A0  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 48375  00E7A2  6E08               	movwf	i2USBStallEndpoint@p+1,c
 48376                           
 48377                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 48378  00E7A4  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48379  00E7A8  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48380  00E7AC  0E00               	movlw	0
 48381  00E7AE  84DB               	bsf	plusw2,2,c
 48382                           
 48383                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 48384  00E7B0  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48385  00E7B4  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48386  00E7B8  0E00               	movlw	0
 48387  00E7BA  8EDB               	bsf	plusw2,7,c
 48388  00E7BC  0012               	return	
 48389  00E7BE                     __end_ofi2_USBStallEndpoint:
 48390                           	opt stack 0
 48391                           tosu	equ	0xFFF
 48392                           tosh	equ	0xFFE
 48393                           tosl	equ	0xFFD
 48394                           pclatu	equ	0xFFB
 48395                           pclath	equ	0xFFA
 48396                           tblptru	equ	0xFF8
 48397                           tblptrh	equ	0xFF7
 48398                           tblptrl	equ	0xFF6
 48399                           tablat	equ	0xFF5
 48400                           prodh	equ	0xFF4
 48401                           prodl	equ	0xFF3
 48402                           intcon	equ	0xFF2
 48403                           intcon2	equ	0xFF1
 48404                           intcon3	equ	0xFF0
 48405                           indf0	equ	0xFEF
 48406                           postinc0	equ	0xFEE
 48407                           fsr0h	equ	0xFEA
 48408                           fsr0l	equ	0xFE9
 48409                           wreg	equ	0xFE8
 48410                           indf1	equ	0xFE7
 48411                           postinc1	equ	0xFE6
 48412                           postdec1	equ	0xFE5
 48413                           plusw1	equ	0xFE3
 48414                           fsr1h	equ	0xFE2
 48415                           fsr1l	equ	0xFE1
 48416                           indf2	equ	0xFDF
 48417                           postinc2	equ	0xFDE
 48418                           postdec2	equ	0xFDD
 48419                           plusw2	equ	0xFDB
 48420                           fsr2h	equ	0xFDA
 48421                           fsr2l	equ	0xFD9
 48422                           status	equ	0xFD8
 48423                           
 48424 ;; *************** function _APP_DeviceMSDInitialize *****************
 48425 ;; Defined at:
 48426 ;;		line 84 in file "app_device_msd.c"
 48427 ;; Parameters:    Size  Location     Type
 48428 ;;		None
 48429 ;; Auto vars:     Size  Location     Type
 48430 ;;		None
 48431 ;; Return value:  Size  Location     Type
 48432 ;;                  1    wreg      void 
 48433 ;; Registers used:
 48434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48435 ;; Tracked objects:
 48436 ;;		On entry : 0/0
 48437 ;;		On exit  : 0/0
 48438 ;;		Unchanged: 0/0
 48439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48444 ;;Total ram usage:        0 bytes
 48445 ;; Hardware stack levels used:    1
 48446 ;; Hardware stack levels required when called:    2
 48447 ;; This function calls:
 48448 ;;		_USBEnableEndpoint
 48449 ;;		_USBMSDInit
 48450 ;; This function is called by:
 48451 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48452 ;; This function uses a non-reentrant model
 48453 ;;
 48454                           
 48455                           	psect	text237
 48456  012D2A                     __ptext237:
 48457                           	opt stack 0
 48458  012D2A                     _APP_DeviceMSDInitialize:
 48459                           	opt stack 13
 48460                           
 48461                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 48462                           
 48463                           ;incstack = 0
 48464  012D2A  0E1E               	movlw	30
 48465  012D2C  6E09               	movwf	USBEnableEndpoint@options,c
 48466  012D2E  0E02               	movlw	2
 48467  012D30  EC5A  F091         	call	_USBEnableEndpoint
 48468                           
 48469                           ;app_device_msd.c: 93: USBMSDInit();
 48470  012D34  EC4F  F072         	call	_USBMSDInit	;wreg free
 48471  012D38  0012               	return		;funcret
 48472  012D3A                     __end_of_APP_DeviceMSDInitialize:
 48473                           	opt stack 0
 48474                           tosu	equ	0xFFF
 48475                           tosh	equ	0xFFE
 48476                           tosl	equ	0xFFD
 48477                           pclatu	equ	0xFFB
 48478                           pclath	equ	0xFFA
 48479                           tblptru	equ	0xFF8
 48480                           tblptrh	equ	0xFF7
 48481                           tblptrl	equ	0xFF6
 48482                           tablat	equ	0xFF5
 48483                           prodh	equ	0xFF4
 48484                           prodl	equ	0xFF3
 48485                           intcon	equ	0xFF2
 48486                           intcon2	equ	0xFF1
 48487                           intcon3	equ	0xFF0
 48488                           indf0	equ	0xFEF
 48489                           postinc0	equ	0xFEE
 48490                           fsr0h	equ	0xFEA
 48491                           fsr0l	equ	0xFE9
 48492                           wreg	equ	0xFE8
 48493                           indf1	equ	0xFE7
 48494                           postinc1	equ	0xFE6
 48495                           postdec1	equ	0xFE5
 48496                           plusw1	equ	0xFE3
 48497                           fsr1h	equ	0xFE2
 48498                           fsr1l	equ	0xFE1
 48499                           indf2	equ	0xFDF
 48500                           postinc2	equ	0xFDE
 48501                           postdec2	equ	0xFDD
 48502                           plusw2	equ	0xFDB
 48503                           fsr2h	equ	0xFDA
 48504                           fsr2l	equ	0xFD9
 48505                           status	equ	0xFD8
 48506                           
 48507 ;; *************** function _USBMSDInit *****************
 48508 ;; Defined at:
 48509 ;;		line 142 in file "usb_device_msd.c"
 48510 ;; Parameters:    Size  Location     Type
 48511 ;;		None
 48512 ;; Auto vars:     Size  Location     Type
 48513 ;;		None
 48514 ;; Return value:  Size  Location     Type
 48515 ;;                  1    wreg      void 
 48516 ;; Registers used:
 48517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48518 ;; Tracked objects:
 48519 ;;		On entry : 0/0
 48520 ;;		On exit  : 0/0
 48521 ;;		Unchanged: 0/0
 48522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48525 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48527 ;;Total ram usage:        3 bytes
 48528 ;; Hardware stack levels used:    1
 48529 ;; Hardware stack levels required when called:    1
 48530 ;; This function calls:
 48531 ;;		i2_ExternalFlash_MediaDetect
 48532 ;;		i2_ExternalFlash_MediaInitialize
 48533 ;;		i2_ResetSenseData
 48534 ;;		i2_USBTransferOnePacket
 48535 ;; This function is called by:
 48536 ;;		_APP_DeviceMSDInitialize
 48537 ;; This function uses a non-reentrant model
 48538 ;;
 48539                           
 48540                           	psect	text238
 48541  00E49E                     __ptext238:
 48542                           	opt stack 0
 48543  00E49E                     _USBMSDInit:
 48544                           	opt stack 13
 48545                           
 48546                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 48547                           
 48548                           ;incstack = 0
 48549  00E49E  0E00               	movlw	0
 48550  00E4A0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 48551  00E4A2  0E40               	movlw	64
 48552  00E4A4  6E02               	movwf	i2USBTransferOnePacket@data,c
 48553  00E4A6  0E0D               	movlw	13
 48554  00E4A8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 48555  00E4AA  0E40               	movlw	64
 48556  00E4AC  6E04               	movwf	i2USBTransferOnePacket@len,c
 48557  00E4AE  0E02               	movlw	2
 48558  00E4B0  EC65  F075         	call	i2_USBTransferOnePacket
 48559  00E4B4  C001  F047         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 48560  00E4B8  C002  F048         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 48561  00E4BC  C03F  F045         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 48562  00E4C0  C040  F046         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 48563                           
 48564                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 48565  00E4C4  0E00               	movlw	0
 48566  00E4C6  6E54               	movwf	_MSD_State,c
 48567                           
 48568                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 48569  00E4C8  6853               	setf	_MSDCommandState,c
 48570                           
 48571                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 48572  00E4CA  0E00               	movlw	0
 48573  00E4CC  0101               	movlb	1	; () banked
 48574  00E4CE  6FF5               	movwf	_MSDReadState& (0+255),b
 48575                           
 48576                           ; BSR set to: 1
 48577                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 48578  00E4D0  0E00               	movlw	0
 48579  00E4D2  6E52               	movwf	_MSDWriteState,c
 48580                           
 48581                           ; BSR set to: 1
 48582                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 48583  00E4D4  0E00               	movlw	0
 48584  00E4D6  6E51               	movwf	_MSDHostNoData,c
 48585                           
 48586                           ; BSR set to: 1
 48587                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 48588  00E4D8  0E00               	movlw	0
 48589  00E4DA  0102               	movlb	2	; () banked
 48590  00E4DC  6FAA               	movwf	_gblNumBLKS& (0+255),b
 48591  00E4DE  0E00               	movlw	0
 48592  00E4E0  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 48593  00E4E2  0E00               	movlw	0
 48594  00E4E4  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 48595  00E4E6  0E00               	movlw	0
 48596  00E4E8  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 48597                           
 48598                           ; BSR set to: 2
 48599                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 48600  00E4EA  0E00               	movlw	0
 48601  00E4EC  6FA6               	movwf	_gblBLKLen& (0+255),b
 48602  00E4EE  0E00               	movlw	0
 48603  00E4F0  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 48604  00E4F2  0E00               	movlw	0
 48605  00E4F4  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 48606  00E4F6  0E00               	movlw	0
 48607  00E4F8  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 48608                           
 48609                           ; BSR set to: 2
 48610                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 48611  00E4FA  0E01               	movlw	1
 48612  00E4FC  0101               	movlb	1	; () banked
 48613  00E4FE  6FF1               	movwf	_MSDCBWValid& (0+255),b
 48614                           
 48615                           ; BSR set to: 1
 48616                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 48617  00E500  0E00               	movlw	0
 48618  00E502  0102               	movlb	2	; () banked
 48619  00E504  6FB7               	movwf	(_gblMediaPresent+1)& (0+255),b
 48620  00E506  0E00               	movlw	0
 48621  00E508  6FB6               	movwf	_gblMediaPresent& (0+255),b
 48622                           
 48623                           ; BSR set to: 2
 48624                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 48625  00E50A  0E00               	movlw	0
 48626  00E50C  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 48627  00E50E  D04A               	goto	i2l538
 48628  00E510                     
 48629                           ; BSR set to: 2
 48630                           ;usb_device_msd.c: 161: {
 48631                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 48632                           
 48633                           ; BSR set to: 2
 48634  00E510  514E               	movf	(_gblCBW+13)& (0+255),w,b
 48635  00E512  0D01               	mullw	1
 48636  00E514  0EF2               	movlw	low _SoftDetach
 48637  00E516  24F3               	addwf	prodl,w,c
 48638  00E518  6ED9               	movwf	fsr2l,c
 48639  00E51A  0E01               	movlw	high _SoftDetach
 48640  00E51C  20F4               	addwfc	prodh,w,c
 48641  00E51E  6EDA               	movwf	fsr2h,c
 48642  00E520  0E00               	movlw	0
 48643  00E522  6EDF               	movwf	indf2,c
 48644                           
 48645                           ; BSR set to: 2
 48646                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 48647  00E524  C2D4  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 48648  00E528  C2D5  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 48649  00E52C  EE22  F0C8         	lfsr	2,_LUN+9
 48650  00E530  D801               	call	i2u833_48
 48651  00E532  D00A               	goto	i2u833_49
 48652  00E534                     i2u833_48:
 48653  00E534  0005               	push	
 48654  00E536  6EFA               	movwf	pclath,c
 48655  00E538  50DE               	movf	postinc2,w,c
 48656  00E53A  6EFD               	movwf	tosl,c
 48657  00E53C  50DE               	movf	postinc2,w,c
 48658  00E53E  6EFE               	movwf	tosh,c
 48659  00E540  50DE               	movf	postinc2,w,c
 48660  00E542  6EFF               	movwf	tosu,c
 48661  00E544  50FA               	movf	pclath,w,c
 48662  00E546  0012               	return		;indir
 48663  00E548                     i2u833_49:
 48664  00E548  0900               	iorlw	0
 48665  00E54A  B4D8               	btfsc	status,2,c
 48666  00E54C  D027               	goto	i2l541
 48667                           
 48668                           ;usb_device_msd.c: 167: {
 48669                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 48670  00E54E  C2D4  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 48671  00E552  C2D5  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 48672  00E556  D801               	call	i2u835_48
 48673  00E558  D00B               	goto	i2u835_49
 48674  00E55A                     i2u835_48:
 48675  00E55A  0005               	push	
 48676  00E55C  6EFA               	movwf	pclath,c
 48677  00E55E  0102               	movlb	2	; () banked
 48678  00E560  51BF               	movf	_LUN& (0+255),w,b
 48679  00E562  6EFD               	movwf	tosl,c
 48680  00E564  51C0               	movf	(_LUN+1)& (0+255),w,b
 48681  00E566  6EFE               	movwf	tosh,c
 48682  00E568  51C1               	movf	(_LUN+2)& (0+255),w,b
 48683  00E56A  6EFF               	movwf	tosu,c
 48684  00E56C  50FA               	movf	pclath,w,c
 48685  00E56E  0012               	return		;indir
 48686  00E570                     i2u835_49:
 48687  00E570  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 48688  00E572  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 48689  00E574  B4D8               	btfsc	status,2,c
 48690  00E576  D012               	goto	i2l541
 48691                           
 48692                           ;usb_device_msd.c: 170: {
 48693                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 48694  00E578  C24E  F00C         	movff	_gblCBW+13,??_USBMSDInit
 48695  00E57C  0E01               	movlw	1
 48696  00E57E  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 48697  00E580  0E00               	movlw	0
 48698  00E582  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 48699  00E584  2A0C               	incf	??_USBMSDInit,f,c
 48700  00E586  D003               	goto	i2u837_44
 48701  00E588                     i2u837_45:
 48702  00E588  90D8               	bcf	status,0,c
 48703  00E58A  360D               	rlcf	??_USBMSDInit+1,f,c
 48704  00E58C  360E               	rlcf	??_USBMSDInit+2,f,c
 48705  00E58E                     i2u837_44:
 48706  00E58E  2E0C               	decfsz	??_USBMSDInit,f,c
 48707  00E590  D7FB               	goto	i2u837_45
 48708  00E592  500D               	movf	??_USBMSDInit+1,w,c
 48709  00E594  0102               	movlb	2	; () banked
 48710  00E596  13B6               	iorwf	_gblMediaPresent& (0+255),f,b
 48711  00E598  500E               	movf	??_USBMSDInit+2,w,c
 48712  00E59A  13B7               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 48713  00E59C                     i2l541:
 48714                           
 48715                           ;usb_device_msd.c: 174: }
 48716                           ;usb_device_msd.c: 175: }
 48717                           ;usb_device_msd.c: 176: ResetSenseData();
 48718                           
 48719                           ; BSR set to: 2
 48720                           
 48721                           ; BSR set to: 2
 48722  00E59C  ECB8  F08A         	call	i2_ResetSenseData	;wreg free
 48723  00E5A0  0102               	movlb	2	; () banked
 48724  00E5A2  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 48725  00E5A4                     i2l538:
 48726                           
 48727                           ; BSR set to: 2
 48728                           
 48729                           ; BSR set to: 2
 48730  00E5A4  514E               	movf	(_gblCBW+13)& (0+255),w,b
 48731  00E5A6  A4D8               	btfss	status,2,c
 48732  00E5A8  0012               	return	
 48733  00E5AA  D7B2               	goto	i2l539
 48734  00E5AC                     __end_of_USBMSDInit:
 48735                           	opt stack 0
 48736                           tosu	equ	0xFFF
 48737                           tosh	equ	0xFFE
 48738                           tosl	equ	0xFFD
 48739                           pclatu	equ	0xFFB
 48740                           pclath	equ	0xFFA
 48741                           tblptru	equ	0xFF8
 48742                           tblptrh	equ	0xFF7
 48743                           tblptrl	equ	0xFF6
 48744                           tablat	equ	0xFF5
 48745                           prodh	equ	0xFF4
 48746                           prodl	equ	0xFF3
 48747                           intcon	equ	0xFF2
 48748                           intcon2	equ	0xFF1
 48749                           intcon3	equ	0xFF0
 48750                           indf0	equ	0xFEF
 48751                           postinc0	equ	0xFEE
 48752                           fsr0h	equ	0xFEA
 48753                           fsr0l	equ	0xFE9
 48754                           wreg	equ	0xFE8
 48755                           indf1	equ	0xFE7
 48756                           postinc1	equ	0xFE6
 48757                           postdec1	equ	0xFE5
 48758                           plusw1	equ	0xFE3
 48759                           fsr1h	equ	0xFE2
 48760                           fsr1l	equ	0xFE1
 48761                           indf2	equ	0xFDF
 48762                           postinc2	equ	0xFDE
 48763                           postdec2	equ	0xFDD
 48764                           plusw2	equ	0xFDB
 48765                           fsr2h	equ	0xFDA
 48766                           fsr2l	equ	0xFD9
 48767                           status	equ	0xFD8
 48768                           
 48769 ;; *************** function i2_ResetSenseData *****************
 48770 ;; Defined at:
 48771 ;;		line 1373 in file "usb_device_msd.c"
 48772 ;; Parameters:    Size  Location     Type
 48773 ;;		None
 48774 ;; Auto vars:     Size  Location     Type
 48775 ;;		None
 48776 ;; Return value:  Size  Location     Type
 48777 ;;                  1    wreg      void 
 48778 ;; Registers used:
 48779 ;;		wreg, status,2
 48780 ;; Tracked objects:
 48781 ;;		On entry : 0/0
 48782 ;;		On exit  : 0/0
 48783 ;;		Unchanged: 0/0
 48784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48789 ;;Total ram usage:        0 bytes
 48790 ;; Hardware stack levels used:    1
 48791 ;; This function calls:
 48792 ;;		Nothing
 48793 ;; This function is called by:
 48794 ;;		_USBMSDInit
 48795 ;; This function uses a non-reentrant model
 48796 ;;
 48797                           
 48798                           	psect	text239
 48799  011570                     __ptext239:
 48800                           	opt stack 0
 48801  011570                     i2_ResetSenseData:
 48802                           	opt stack 13
 48803                           
 48804                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 48805                           
 48806                           ; BSR set to: 2
 48807                           ;incstack = 0
 48808  011570  0102               	movlb	2	; () banked
 48809  011572  9160               	bcf	_gblSenseData& (0+255),0,b
 48810  011574  9360               	bcf	_gblSenseData& (0+255),1,b
 48811  011576  9560               	bcf	_gblSenseData& (0+255),2,b
 48812  011578  9760               	bcf	_gblSenseData& (0+255),3,b
 48813  01157A  8960               	bsf	_gblSenseData& (0+255),4,b
 48814  01157C  8B60               	bsf	_gblSenseData& (0+255),5,b
 48815  01157E  8D60               	bsf	_gblSenseData& (0+255),6,b
 48816                           
 48817                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 48818  011580  9F60               	bcf	_gblSenseData& (0+255),7,b
 48819                           
 48820                           ; BSR set to: 2
 48821                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 48822  011582  0E00               	movlw	0
 48823  011584  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 48824                           
 48825                           ; BSR set to: 2
 48826                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 48827  011586  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 48828  011588  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 48829  01158A  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 48830  01158C  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 48831                           
 48832                           ; BSR set to: 2
 48833                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 48834  01158E  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 48835                           
 48836                           ; BSR set to: 2
 48837                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 48838  011590  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 48839                           
 48840                           ; BSR set to: 2
 48841                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 48842  011592  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 48843                           
 48844                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 48845  011594  0E00               	movlw	0
 48846  011596  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 48847                           
 48848                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 48849  011598  0E00               	movlw	0
 48850  01159A  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 48851                           
 48852                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 48853  01159C  0E00               	movlw	0
 48854  01159E  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 48855                           
 48856                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 48857  0115A0  0E00               	movlw	0
 48858  0115A2  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 48859                           
 48860                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 48861  0115A4  0E0A               	movlw	10
 48862  0115A6  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 48863                           
 48864                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 48865  0115A8  0E00               	movlw	0
 48866  0115AA  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 48867  0115AC  0E00               	movlw	0
 48868  0115AE  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 48869  0115B0  0E00               	movlw	0
 48870  0115B2  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 48871  0115B4  0E00               	movlw	0
 48872  0115B6  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 48873                           
 48874                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 48875  0115B8  0E00               	movlw	0
 48876  0115BA  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 48877                           
 48878                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 48879  0115BC  0E00               	movlw	0
 48880  0115BE  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 48881                           
 48882                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 48883  0115C0  0E00               	movlw	0
 48884  0115C2  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 48885                           
 48886                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 48887  0115C4  0E00               	movlw	0
 48888  0115C6  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 48889                           
 48890                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 48891  0115C8  0E00               	movlw	0
 48892  0115CA  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 48893                           
 48894                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 48895  0115CC  0E00               	movlw	0
 48896  0115CE  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 48897                           
 48898                           ; BSR set to: 2
 48899  0115D0  0012               	return		;funcret
 48900  0115D2                     __end_ofi2_ResetSenseData:
 48901                           	opt stack 0
 48902                           tosu	equ	0xFFF
 48903                           tosh	equ	0xFFE
 48904                           tosl	equ	0xFFD
 48905                           pclatu	equ	0xFFB
 48906                           pclath	equ	0xFFA
 48907                           tblptru	equ	0xFF8
 48908                           tblptrh	equ	0xFF7
 48909                           tblptrl	equ	0xFF6
 48910                           tablat	equ	0xFF5
 48911                           prodh	equ	0xFF4
 48912                           prodl	equ	0xFF3
 48913                           intcon	equ	0xFF2
 48914                           intcon2	equ	0xFF1
 48915                           intcon3	equ	0xFF0
 48916                           indf0	equ	0xFEF
 48917                           postinc0	equ	0xFEE
 48918                           fsr0h	equ	0xFEA
 48919                           fsr0l	equ	0xFE9
 48920                           wreg	equ	0xFE8
 48921                           indf1	equ	0xFE7
 48922                           postinc1	equ	0xFE6
 48923                           postdec1	equ	0xFE5
 48924                           plusw1	equ	0xFE3
 48925                           fsr1h	equ	0xFE2
 48926                           fsr1l	equ	0xFE1
 48927                           indf2	equ	0xFDF
 48928                           postinc2	equ	0xFDE
 48929                           postdec2	equ	0xFDD
 48930                           plusw2	equ	0xFDB
 48931                           fsr2h	equ	0xFDA
 48932                           fsr2l	equ	0xFD9
 48933                           status	equ	0xFD8
 48934                           
 48935 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 48936 ;; Defined at:
 48937 ;;		line 10 in file "external_flash.c"
 48938 ;; Parameters:    Size  Location     Type
 48939 ;;  config          2    0[COMRAM] PTR void 
 48940 ;;		 -> NULL(0), 
 48941 ;; Auto vars:     Size  Location     Type
 48942 ;;		None
 48943 ;; Return value:  Size  Location     Type
 48944 ;;                  2    0[COMRAM] PTR struct .
 48945 ;; Registers used:
 48946 ;;		wreg, status,2, status,0
 48947 ;; Tracked objects:
 48948 ;;		On entry : 0/0
 48949 ;;		On exit  : 0/0
 48950 ;;		Unchanged: 0/0
 48951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48956 ;;Total ram usage:        2 bytes
 48957 ;; Hardware stack levels used:    1
 48958 ;; This function calls:
 48959 ;;		Nothing
 48960 ;; This function is called by:
 48961 ;; This function uses a non-reentrant model
 48962 ;;
 48963                           
 48964                           	psect	text240
 48965  012B2A                     __ptext240:
 48966                           	opt stack 0
 48967  012B2A                     i2_ExternalFlash_MediaInitialize:
 48968                           	opt stack 13
 48969                           
 48970                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 48971                           
 48972                           ; BSR set to: 2
 48973                           ;incstack = 0
 48974  012B2A  0102               	movlb	2	; () banked
 48975  012B2C  81BB               	bsf	(_mediaInformation+1)& (0+255),0,b
 48976                           
 48977                           ; BSR set to: 2
 48978                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 48979  012B2E  0E02               	movlw	2
 48980  012B30  6FBD               	movwf	(_mediaInformation+3)& (0+255),b
 48981  012B32  0E00               	movlw	0
 48982  012B34  6FBC               	movwf	(_mediaInformation+2)& (0+255),b
 48983                           
 48984                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 48985  012B36  0E00               	movlw	0
 48986  012B38  6FBA               	movwf	_mediaInformation& (0+255),b
 48987                           
 48988                           ; BSR set to: 2
 48989                           ;external_flash.c: 15: return &mediaInformation;
 48990  012B3A  0EBA               	movlw	low _mediaInformation
 48991  012B3C  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 48992  012B3E  0E02               	movlw	high _mediaInformation
 48993  012B40  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 48994  012B42  0012               	return	
 48995  012B44                     __end_ofi2_ExternalFlash_MediaInitialize:
 48996                           	opt stack 0
 48997                           tosu	equ	0xFFF
 48998                           tosh	equ	0xFFE
 48999                           tosl	equ	0xFFD
 49000                           pclatu	equ	0xFFB
 49001                           pclath	equ	0xFFA
 49002                           tblptru	equ	0xFF8
 49003                           tblptrh	equ	0xFF7
 49004                           tblptrl	equ	0xFF6
 49005                           tablat	equ	0xFF5
 49006                           prodh	equ	0xFF4
 49007                           prodl	equ	0xFF3
 49008                           intcon	equ	0xFF2
 49009                           intcon2	equ	0xFF1
 49010                           intcon3	equ	0xFF0
 49011                           indf0	equ	0xFEF
 49012                           postinc0	equ	0xFEE
 49013                           fsr0h	equ	0xFEA
 49014                           fsr0l	equ	0xFE9
 49015                           wreg	equ	0xFE8
 49016                           indf1	equ	0xFE7
 49017                           postinc1	equ	0xFE6
 49018                           postdec1	equ	0xFE5
 49019                           plusw1	equ	0xFE3
 49020                           fsr1h	equ	0xFE2
 49021                           fsr1l	equ	0xFE1
 49022                           indf2	equ	0xFDF
 49023                           postinc2	equ	0xFDE
 49024                           postdec2	equ	0xFDD
 49025                           plusw2	equ	0xFDB
 49026                           fsr2h	equ	0xFDA
 49027                           fsr2l	equ	0xFD9
 49028                           status	equ	0xFD8
 49029                           
 49030 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 49031 ;; Defined at:
 49032 ;;		line 29 in file "external_flash.c"
 49033 ;; Parameters:    Size  Location     Type
 49034 ;;  config          2    0[COMRAM] PTR void 
 49035 ;;		 -> NULL(0), 
 49036 ;; Auto vars:     Size  Location     Type
 49037 ;;		None
 49038 ;; Return value:  Size  Location     Type
 49039 ;;                  1    wreg      unsigned char 
 49040 ;; Registers used:
 49041 ;;		wreg
 49042 ;; Tracked objects:
 49043 ;;		On entry : 0/0
 49044 ;;		On exit  : 0/0
 49045 ;;		Unchanged: 0/0
 49046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49051 ;;Total ram usage:        2 bytes
 49052 ;; Hardware stack levels used:    1
 49053 ;; This function calls:
 49054 ;;		Nothing
 49055 ;; This function is called by:
 49056 ;; This function uses a non-reentrant model
 49057 ;;
 49058                           
 49059                           	psect	text241
 49060  012E20                     __ptext241:
 49061                           	opt stack 0
 49062  012E20                     i2_ExternalFlash_MediaDetect:
 49063                           	opt stack 13
 49064                           
 49065                           ;external_flash.c: 31: return 1;
 49066                           
 49067                           ; BSR set to: 2
 49068                           ;incstack = 0
 49069  012E20  0E01               	movlw	1
 49070  012E22  0012               	return	
 49071  012E24                     __end_ofi2_ExternalFlash_MediaDetect:
 49072                           	opt stack 0
 49073                           tosu	equ	0xFFF
 49074                           tosh	equ	0xFFE
 49075                           tosl	equ	0xFFD
 49076                           pclatu	equ	0xFFB
 49077                           pclath	equ	0xFFA
 49078                           tblptru	equ	0xFF8
 49079                           tblptrh	equ	0xFF7
 49080                           tblptrl	equ	0xFF6
 49081                           tablat	equ	0xFF5
 49082                           prodh	equ	0xFF4
 49083                           prodl	equ	0xFF3
 49084                           intcon	equ	0xFF2
 49085                           intcon2	equ	0xFF1
 49086                           intcon3	equ	0xFF0
 49087                           indf0	equ	0xFEF
 49088                           postinc0	equ	0xFEE
 49089                           fsr0h	equ	0xFEA
 49090                           fsr0l	equ	0xFE9
 49091                           wreg	equ	0xFE8
 49092                           indf1	equ	0xFE7
 49093                           postinc1	equ	0xFE6
 49094                           postdec1	equ	0xFE5
 49095                           plusw1	equ	0xFE3
 49096                           fsr1h	equ	0xFE2
 49097                           fsr1l	equ	0xFE1
 49098                           indf2	equ	0xFDF
 49099                           postinc2	equ	0xFDE
 49100                           postdec2	equ	0xFDD
 49101                           plusw2	equ	0xFDB
 49102                           fsr2h	equ	0xFDA
 49103                           fsr2l	equ	0xFD9
 49104                           status	equ	0xFD8
 49105                           
 49106 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 49107 ;; Defined at:
 49108 ;;		line 81 in file "app_device_custom_hid.c"
 49109 ;; Parameters:    Size  Location     Type
 49110 ;;		None
 49111 ;; Auto vars:     Size  Location     Type
 49112 ;;		None
 49113 ;; Return value:  Size  Location     Type
 49114 ;;                  1    wreg      void 
 49115 ;; Registers used:
 49116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49117 ;; Tracked objects:
 49118 ;;		On entry : 0/0
 49119 ;;		On exit  : 0/0
 49120 ;;		Unchanged: 0/0
 49121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49126 ;;Total ram usage:        0 bytes
 49127 ;; Hardware stack levels used:    1
 49128 ;; Hardware stack levels required when called:    2
 49129 ;; This function calls:
 49130 ;;		_USBEnableEndpoint
 49131 ;;		i2_USBTransferOnePacket
 49132 ;; This function is called by:
 49133 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49134 ;; This function uses a non-reentrant model
 49135 ;;
 49136                           
 49137                           	psect	text242
 49138  012468                     __ptext242:
 49139                           	opt stack 0
 49140  012468                     _APP_DeviceCustomHIDInitialize:
 49141                           	opt stack 13
 49142                           
 49143                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 49144                           
 49145                           ;incstack = 0
 49146  012468  0E00               	movlw	0
 49147  01246A  0100               	movlb	0	; () banked
 49148  01246C  6FF9               	movwf	_USBInHandle& (0+255),b
 49149  01246E  0E00               	movlw	0
 49150  012470  6FFA               	movwf	(_USBInHandle+1)& (0+255),b
 49151                           
 49152                           ; BSR set to: 0
 49153                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 49154  012472  0E1E               	movlw	30
 49155  012474  6E09               	movwf	USBEnableEndpoint@options,c
 49156  012476  0E01               	movlw	1
 49157  012478  EC5A  F091         	call	_USBEnableEndpoint
 49158                           
 49159                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 49160  01247C  0E00               	movlw	0
 49161  01247E  6E01               	movwf	i2USBTransferOnePacket@dir,c
 49162  012480  0E78               	movlw	low _ReceivedDataBuffer
 49163  012482  6E02               	movwf	i2USBTransferOnePacket@data,c
 49164  012484  0E04               	movlw	high _ReceivedDataBuffer
 49165  012486  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 49166  012488  0E40               	movlw	64
 49167  01248A  6E04               	movwf	i2USBTransferOnePacket@len,c
 49168  01248C  0E01               	movlw	1
 49169  01248E  EC65  F075         	call	i2_USBTransferOnePacket
 49170  012492  C001  F2B4         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 49171  012496  C002  F2B5         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 49172  01249A  0012               	return		;funcret
 49173  01249C                     __end_of_APP_DeviceCustomHIDInitialize:
 49174                           	opt stack 0
 49175                           tosu	equ	0xFFF
 49176                           tosh	equ	0xFFE
 49177                           tosl	equ	0xFFD
 49178                           pclatu	equ	0xFFB
 49179                           pclath	equ	0xFFA
 49180                           tblptru	equ	0xFF8
 49181                           tblptrh	equ	0xFF7
 49182                           tblptrl	equ	0xFF6
 49183                           tablat	equ	0xFF5
 49184                           prodh	equ	0xFF4
 49185                           prodl	equ	0xFF3
 49186                           intcon	equ	0xFF2
 49187                           intcon2	equ	0xFF1
 49188                           intcon3	equ	0xFF0
 49189                           indf0	equ	0xFEF
 49190                           postinc0	equ	0xFEE
 49191                           fsr0h	equ	0xFEA
 49192                           fsr0l	equ	0xFE9
 49193                           wreg	equ	0xFE8
 49194                           indf1	equ	0xFE7
 49195                           postinc1	equ	0xFE6
 49196                           postdec1	equ	0xFE5
 49197                           plusw1	equ	0xFE3
 49198                           fsr1h	equ	0xFE2
 49199                           fsr1l	equ	0xFE1
 49200                           indf2	equ	0xFDF
 49201                           postinc2	equ	0xFDE
 49202                           postdec2	equ	0xFDD
 49203                           plusw2	equ	0xFDB
 49204                           fsr2h	equ	0xFDA
 49205                           fsr2l	equ	0xFD9
 49206                           status	equ	0xFD8
 49207                           
 49208 ;; *************** function i2_USBTransferOnePacket *****************
 49209 ;; Defined at:
 49210 ;;		line 995 in file "usb_device.c"
 49211 ;; Parameters:    Size  Location     Type
 49212 ;;  ep              1    wreg     unsigned char 
 49213 ;;  dir             1    0[COMRAM] unsigned char 
 49214 ;;  data            2    1[COMRAM] PTR unsigned char 
 49215 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 49216 ;;		 -> msd_cbw(31), NULL(0), 
 49217 ;;  len             1    3[COMRAM] unsigned char 
 49218 ;; Auto vars:     Size  Location     Type
 49219 ;;  ep              1    8[COMRAM] unsigned char 
 49220 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 49221 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 49222 ;; Return value:  Size  Location     Type
 49223 ;;                  2    0[COMRAM] PTR void 
 49224 ;; Registers used:
 49225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49226 ;; Tracked objects:
 49227 ;;		On entry : 0/0
 49228 ;;		On exit  : 0/0
 49229 ;;		Unchanged: 0/0
 49230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49232 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49234 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49235 ;;Total ram usage:       11 bytes
 49236 ;; Hardware stack levels used:    1
 49237 ;; This function calls:
 49238 ;;		Nothing
 49239 ;; This function is called by:
 49240 ;;		_USBMSDInit
 49241 ;;		_USBCheckMSDRequest
 49242 ;;		_MSDTransferTerminated
 49243 ;;		_APP_DeviceCustomHIDInitialize
 49244 ;; This function uses a non-reentrant model
 49245 ;;
 49246                           
 49247                           	psect	text243
 49248  00EACA                     __ptext243:
 49249                           	opt stack 0
 49250  00EACA                     i2_USBTransferOnePacket:
 49251                           	opt stack 14
 49252                           
 49253                           ;incstack = 0
 49254                           ;i2USBTransferOnePacket@ep stored from wreg
 49255  00EACA  6E09               	movwf	i2USBTransferOnePacket@ep,c
 49256                           
 49257                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 49258                           ;usb_device.c: 1000: if(dir != 0)
 49259  00EACC  5001               	movf	i2USBTransferOnePacket@dir,w,c
 49260  00EACE  B4D8               	btfsc	status,2,c
 49261  00EAD0  D007               	goto	i2l186
 49262                           
 49263                           ;usb_device.c: 1001: {
 49264                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 49265  00EAD2  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49266  00EAD4  0D02               	mullw	2
 49267  00EAD6  0E3B               	movlw	low _pBDTEntryIn
 49268  00EAD8  24F3               	addwf	prodl,w,c
 49269  00EADA  6ED9               	movwf	fsr2l,c
 49270  00EADC  0E00               	movlw	high _pBDTEntryIn
 49271  00EADE  D006               	goto	L66
 49272  00EAE0                     i2l186:
 49273                           
 49274                           ;usb_device.c: 1005: else
 49275                           ;usb_device.c: 1006: {
 49276                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 49277  00EAE0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49278  00EAE2  0D02               	mullw	2
 49279  00EAE4  0ED3               	movlw	low _pBDTEntryOut
 49280  00EAE6  24F3               	addwf	prodl,w,c
 49281  00EAE8  6ED9               	movwf	fsr2l,c
 49282  00EAEA  0E01               	movlw	high _pBDTEntryOut
 49283  00EAEC                     L66:
 49284  00EAEC  20F4               	addwfc	prodh,w,c
 49285  00EAEE  6EDA               	movwf	fsr2h,c
 49286  00EAF0  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 49287  00EAF4  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 49288                           
 49289                           ;usb_device.c: 1009: }
 49290                           ;usb_device.c: 1013: if(handle == 0)
 49291  00EAF8  500A               	movf	i2USBTransferOnePacket@handle,w,c
 49292  00EAFA  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 49293  00EAFC  A4D8               	btfss	status,2,c
 49294  00EAFE  D005               	goto	i2l188
 49295                           
 49296                           ;usb_device.c: 1014: {
 49297                           ;usb_device.c: 1015: return 0;
 49298  00EB00  0E00               	movlw	0
 49299  00EB02  6E01               	movwf	?i2_USBTransferOnePacket,c
 49300  00EB04  0E00               	movlw	0
 49301  00EB06  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 49302  00EB08  0012               	return	
 49303  00EB0A                     i2l188:
 49304                           
 49305                           ;usb_device.c: 1016: }
 49306                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 49307  00EB0A  EE20 F002          	lfsr	2,2
 49308  00EB0E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 49309  00EB10  26D9               	addwf	fsr2l,f,c
 49310  00EB12  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 49311  00EB14  22DA               	addwfc	fsr2h,f,c
 49312  00EB16  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 49313  00EB1A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 49314                           
 49315                           ;usb_device.c: 1030: handle->CNT = len;
 49316  00EB1E  EE20 F001          	lfsr	2,1
 49317  00EB22  500A               	movf	i2USBTransferOnePacket@handle,w,c
 49318  00EB24  26D9               	addwf	fsr2l,f,c
 49319  00EB26  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 49320  00EB28  22DA               	addwfc	fsr2h,f,c
 49321  00EB2A  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 49322                           
 49323                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 49324  00EB2E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 49325  00EB32  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 49326  00EB36  0E40               	movlw	64
 49327  00EB38  16DF               	andwf	indf2,f,c
 49328                           
 49329                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 49330  00EB3A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 49331  00EB3E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 49332  00EB42  0E00               	movlw	0
 49333  00EB44  86DB               	bsf	plusw2,3,c
 49334                           
 49335                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 49336  00EB46  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 49337  00EB4A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 49338  00EB4E  0E00               	movlw	0
 49339  00EB50  8EDB               	bsf	plusw2,7,c
 49340                           
 49341                           ;usb_device.c: 1036: if(dir != 0)
 49342  00EB52  5001               	movf	i2USBTransferOnePacket@dir,w,c
 49343  00EB54  B4D8               	btfsc	status,2,c
 49344  00EB56  D018               	goto	i2l190
 49345                           
 49346                           ;usb_device.c: 1037: {
 49347                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 49348  00EB58  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49349  00EB5A  0D02               	mullw	2
 49350  00EB5C  0E3B               	movlw	low _pBDTEntryIn
 49351  00EB5E  24F3               	addwf	prodl,w,c
 49352  00EB60  6ED9               	movwf	fsr2l,c
 49353  00EB62  0E00               	movlw	high _pBDTEntryIn
 49354  00EB64  20F4               	addwfc	prodh,w,c
 49355  00EB66  6EDA               	movwf	fsr2h,c
 49356  00EB68  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 49357  00EB6C  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 49358  00EB70  0E04               	movlw	4
 49359  00EB72  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 49360  00EB74  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 49361  00EB76  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 49362  00EB78  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 49363  00EB7A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49364  00EB7C  0D02               	mullw	2
 49365  00EB7E  0E3B               	movlw	low _pBDTEntryIn
 49366  00EB80  24F3               	addwf	prodl,w,c
 49367  00EB82  6ED9               	movwf	fsr2l,c
 49368  00EB84  0E00               	movlw	high _pBDTEntryIn
 49369  00EB86  D017               	goto	L67
 49370  00EB88                     i2l190:
 49371                           
 49372                           ;usb_device.c: 1041: else
 49373                           ;usb_device.c: 1042: {
 49374                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 49375  00EB88  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49376  00EB8A  0D02               	mullw	2
 49377  00EB8C  0ED3               	movlw	low _pBDTEntryOut
 49378  00EB8E  24F3               	addwf	prodl,w,c
 49379  00EB90  6ED9               	movwf	fsr2l,c
 49380  00EB92  0E01               	movlw	high _pBDTEntryOut
 49381  00EB94  20F4               	addwfc	prodh,w,c
 49382  00EB96  6EDA               	movwf	fsr2h,c
 49383  00EB98  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 49384  00EB9C  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 49385  00EBA0  0E04               	movlw	4
 49386  00EBA2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 49387  00EBA4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 49388  00EBA6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 49389  00EBA8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 49390  00EBAA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49391  00EBAC  0D02               	mullw	2
 49392  00EBAE  0ED3               	movlw	low _pBDTEntryOut
 49393  00EBB0  24F3               	addwf	prodl,w,c
 49394  00EBB2  6ED9               	movwf	fsr2l,c
 49395  00EBB4  0E01               	movlw	high _pBDTEntryOut
 49396  00EBB6                     L67:
 49397  00EBB6  20F4               	addwfc	prodh,w,c
 49398  00EBB8  6EDA               	movwf	fsr2h,c
 49399  00EBBA  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 49400  00EBBE  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 49401                           
 49402                           ;usb_device.c: 1045: }
 49403                           ;usb_device.c: 1046: return (void*)handle;
 49404  00EBC2  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 49405  00EBC6  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 49406  00EBCA  0012               	return	
 49407  00EBCC                     __end_ofi2_USBTransferOnePacket:
 49408                           	opt stack 0
 49409                           tosu	equ	0xFFF
 49410                           tosh	equ	0xFFE
 49411                           tosl	equ	0xFFD
 49412                           pclatu	equ	0xFFB
 49413                           pclath	equ	0xFFA
 49414                           tblptru	equ	0xFF8
 49415                           tblptrh	equ	0xFF7
 49416                           tblptrl	equ	0xFF6
 49417                           tablat	equ	0xFF5
 49418                           prodh	equ	0xFF4
 49419                           prodl	equ	0xFF3
 49420                           intcon	equ	0xFF2
 49421                           intcon2	equ	0xFF1
 49422                           intcon3	equ	0xFF0
 49423                           indf0	equ	0xFEF
 49424                           postinc0	equ	0xFEE
 49425                           fsr0h	equ	0xFEA
 49426                           fsr0l	equ	0xFE9
 49427                           wreg	equ	0xFE8
 49428                           indf1	equ	0xFE7
 49429                           postinc1	equ	0xFE6
 49430                           postdec1	equ	0xFE5
 49431                           plusw1	equ	0xFE3
 49432                           fsr1h	equ	0xFE2
 49433                           fsr1l	equ	0xFE1
 49434                           indf2	equ	0xFDF
 49435                           postinc2	equ	0xFDE
 49436                           postdec2	equ	0xFDD
 49437                           plusw2	equ	0xFDB
 49438                           fsr2h	equ	0xFDA
 49439                           fsr2l	equ	0xFD9
 49440                           status	equ	0xFD8
 49441                           
 49442 ;; *************** function _USBEnableEndpoint *****************
 49443 ;; Defined at:
 49444 ;;		line 878 in file "usb_device.c"
 49445 ;; Parameters:    Size  Location     Type
 49446 ;;  ep              1    wreg     unsigned char 
 49447 ;;  options         1    8[COMRAM] unsigned char 
 49448 ;; Auto vars:     Size  Location     Type
 49449 ;;  ep              1   11[COMRAM] unsigned char 
 49450 ;;  p               2    9[COMRAM] PTR unsigned char 
 49451 ;;		 -> UEP0(1), 
 49452 ;; Return value:  Size  Location     Type
 49453 ;;                  1    wreg      void 
 49454 ;; Registers used:
 49455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49456 ;; Tracked objects:
 49457 ;;		On entry : 0/0
 49458 ;;		On exit  : 0/0
 49459 ;;		Unchanged: 0/0
 49460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49465 ;;Total ram usage:        4 bytes
 49466 ;; Hardware stack levels used:    1
 49467 ;; Hardware stack levels required when called:    1
 49468 ;; This function calls:
 49469 ;;		_USBConfigureEndpoint
 49470 ;; This function is called by:
 49471 ;;		_APP_DeviceCustomHIDInitialize
 49472 ;;		_APP_DeviceMSDInitialize
 49473 ;; This function uses a non-reentrant model
 49474 ;;
 49475                           
 49476                           	psect	text244
 49477  0122B4                     __ptext244:
 49478                           	opt stack 0
 49479  0122B4                     _USBEnableEndpoint:
 49480                           	opt stack 13
 49481                           
 49482                           ;incstack = 0
 49483                           ;USBEnableEndpoint@ep stored from wreg
 49484  0122B4  6E0C               	movwf	USBEnableEndpoint@ep,c
 49485                           
 49486                           ;usb_device.c: 880: unsigned char* p;
 49487                           ;usb_device.c: 884: if(options & 0x04)
 49488  0122B6  A409               	btfss	USBEnableEndpoint@options,2,c
 49489  0122B8  D005               	goto	i2l181
 49490                           
 49491                           ;usb_device.c: 885: {
 49492                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 49493  0122BA  0E00               	movlw	0
 49494  0122BC  6E01               	movwf	USBConfigureEndpoint@direction,c
 49495  0122BE  500C               	movf	USBEnableEndpoint@ep,w,c
 49496  0122C0  EC79  F082         	call	_USBConfigureEndpoint
 49497  0122C4                     i2l181:
 49498                           
 49499                           ;usb_device.c: 887: }
 49500                           ;usb_device.c: 888: if(options & 0x02)
 49501  0122C4  A209               	btfss	USBEnableEndpoint@options,1,c
 49502  0122C6  D005               	goto	i2l182
 49503                           
 49504                           ;usb_device.c: 889: {
 49505                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 49506  0122C8  0E01               	movlw	1
 49507  0122CA  6E01               	movwf	USBConfigureEndpoint@direction,c
 49508  0122CC  500C               	movf	USBEnableEndpoint@ep,w,c
 49509  0122CE  EC79  F082         	call	_USBConfigureEndpoint
 49510  0122D2                     i2l182:
 49511                           
 49512                           ;usb_device.c: 891: }
 49513                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 49514  0122D2  500C               	movf	USBEnableEndpoint@ep,w,c
 49515  0122D4  0D01               	mullw	1
 49516  0122D6  0E26               	movlw	38
 49517  0122D8  24F3               	addwf	prodl,w,c
 49518  0122DA  6E0A               	movwf	USBEnableEndpoint@p,c
 49519  0122DC  0E0F               	movlw	15
 49520  0122DE  20F4               	addwfc	prodh,w,c
 49521  0122E0  6E0B               	movwf	USBEnableEndpoint@p+1,c
 49522                           
 49523                           ;usb_device.c: 901: *p = options;
 49524  0122E2  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 49525  0122E6  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 49526  0122EA  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 49527  0122EE  0012               	return		;funcret
 49528  0122F0                     __end_of_USBEnableEndpoint:
 49529                           	opt stack 0
 49530                           tosu	equ	0xFFF
 49531                           tosh	equ	0xFFE
 49532                           tosl	equ	0xFFD
 49533                           pclatu	equ	0xFFB
 49534                           pclath	equ	0xFFA
 49535                           tblptru	equ	0xFF8
 49536                           tblptrh	equ	0xFF7
 49537                           tblptrl	equ	0xFF6
 49538                           tablat	equ	0xFF5
 49539                           prodh	equ	0xFF4
 49540                           prodl	equ	0xFF3
 49541                           intcon	equ	0xFF2
 49542                           intcon2	equ	0xFF1
 49543                           intcon3	equ	0xFF0
 49544                           indf0	equ	0xFEF
 49545                           postinc0	equ	0xFEE
 49546                           fsr0h	equ	0xFEA
 49547                           fsr0l	equ	0xFE9
 49548                           wreg	equ	0xFE8
 49549                           indf1	equ	0xFE7
 49550                           postinc1	equ	0xFE6
 49551                           postdec1	equ	0xFE5
 49552                           plusw1	equ	0xFE3
 49553                           fsr1h	equ	0xFE2
 49554                           fsr1l	equ	0xFE1
 49555                           indf2	equ	0xFDF
 49556                           postinc2	equ	0xFDE
 49557                           postdec2	equ	0xFDD
 49558                           plusw2	equ	0xFDB
 49559                           fsr2h	equ	0xFDA
 49560                           fsr2l	equ	0xFD9
 49561                           status	equ	0xFD8
 49562                           
 49563 ;; *************** function _USBConfigureEndpoint *****************
 49564 ;; Defined at:
 49565 ;;		line 1545 in file "usb_device.c"
 49566 ;; Parameters:    Size  Location     Type
 49567 ;;  EPNum           1    wreg     unsigned char 
 49568 ;;  direction       1    0[COMRAM] unsigned char 
 49569 ;; Auto vars:     Size  Location     Type
 49570 ;;  EPNum           1    5[COMRAM] unsigned char 
 49571 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 49572 ;;		 -> BDT(48), 
 49573 ;; Return value:  Size  Location     Type
 49574 ;;                  1    wreg      void 
 49575 ;; Registers used:
 49576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49577 ;; Tracked objects:
 49578 ;;		On entry : 0/0
 49579 ;;		On exit  : 0/0
 49580 ;;		Unchanged: 0/0
 49581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49582 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49583 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49585 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49586 ;;Total ram usage:        8 bytes
 49587 ;; Hardware stack levels used:    1
 49588 ;; This function calls:
 49589 ;;		Nothing
 49590 ;; This function is called by:
 49591 ;;		_USBEnableEndpoint
 49592 ;; This function uses a non-reentrant model
 49593 ;;
 49594                           
 49595                           	psect	text245
 49596  0104F2                     __ptext245:
 49597                           	opt stack 0
 49598  0104F2                     _USBConfigureEndpoint:
 49599                           	opt stack 13
 49600                           
 49601                           ;incstack = 0
 49602                           ;USBConfigureEndpoint@EPNum stored from wreg
 49603  0104F2  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 49604                           
 49605                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 49606                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 49607  0104F4  0E00               	movlw	0
 49608  0104F6  6E07               	movwf	USBConfigureEndpoint@handle,c
 49609  0104F8  0E0D               	movlw	13
 49610  0104FA  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 49611                           
 49612                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 49613  0104FC  5001               	movf	USBConfigureEndpoint@direction,w,c
 49614  0104FE  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 49615  010500  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 49616  010502  90D8               	bcf	status,0,c
 49617  010504  3602               	rlcf	??_USBConfigureEndpoint,f,c
 49618  010506  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 49619  010508  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 49620  01050A  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 49621  01050C  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 49622  01050E  90D8               	bcf	status,0,c
 49623  010510  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 49624  010512  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 49625  010514  90D8               	bcf	status,0,c
 49626  010516  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 49627  010518  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 49628  01051A  5002               	movf	??_USBConfigureEndpoint,w,c
 49629  01051C  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 49630  01051E  5003               	movf	??_USBConfigureEndpoint+1,w,c
 49631  010520  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 49632  010522  90D8               	bcf	status,0,c
 49633  010524  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 49634  010526  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 49635  010528  90D8               	bcf	status,0,c
 49636  01052A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 49637  01052C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 49638  01052E  5004               	movf	??_USBConfigureEndpoint+2,w,c
 49639  010530  2607               	addwf	USBConfigureEndpoint@handle,f,c
 49640  010532  5005               	movf	??_USBConfigureEndpoint+3,w,c
 49641  010534  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 49642                           
 49643                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 49644  010536  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 49645  01053A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 49646  01053E  9EDF               	bcf	indf2,7,c
 49647                           
 49648                           ;usb_device.c: 1559: if(direction == 0)
 49649  010540  5001               	movf	USBConfigureEndpoint@direction,w,c
 49650  010542  A4D8               	btfss	status,2,c
 49651  010544  D007               	goto	i2l228
 49652                           
 49653                           ;usb_device.c: 1560: {
 49654                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 49655  010546  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 49656  010548  0D02               	mullw	2
 49657  01054A  0ED3               	movlw	low _pBDTEntryOut
 49658  01054C  24F3               	addwf	prodl,w,c
 49659  01054E  6ED9               	movwf	fsr2l,c
 49660  010550  0E01               	movlw	high _pBDTEntryOut
 49661  010552  D006               	goto	L68
 49662  010554                     i2l228:
 49663                           
 49664                           ;usb_device.c: 1563: else
 49665                           ;usb_device.c: 1564: {
 49666                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 49667  010554  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 49668  010556  0D02               	mullw	2
 49669  010558  0E3B               	movlw	low _pBDTEntryIn
 49670  01055A  24F3               	addwf	prodl,w,c
 49671  01055C  6ED9               	movwf	fsr2l,c
 49672  01055E  0E00               	movlw	high _pBDTEntryIn
 49673  010560                     L68:
 49674  010560  20F4               	addwfc	prodh,w,c
 49675  010562  6EDA               	movwf	fsr2h,c
 49676  010564  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 49677  010568  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 49678                           
 49679                           ;usb_device.c: 1566: }
 49680                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 49681  01056C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 49682  010570  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 49683  010574  9CDF               	bcf	indf2,6,c
 49684                           
 49685                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 49686  010576  EE20 F004          	lfsr	2,4
 49687  01057A  5007               	movf	USBConfigureEndpoint@handle,w,c
 49688  01057C  26D9               	addwf	fsr2l,f,c
 49689  01057E  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 49690  010580  22DA               	addwfc	fsr2h,f,c
 49691  010582  8CDF               	bsf	indf2,6,c
 49692  010584  0012               	return		;funcret
 49693  010586                     __end_of_USBConfigureEndpoint:
 49694                           	opt stack 0
 49695                           tosu	equ	0xFFF
 49696                           tosh	equ	0xFFE
 49697                           tosl	equ	0xFFD
 49698                           pclatu	equ	0xFFB
 49699                           pclath	equ	0xFFA
 49700                           tblptru	equ	0xFF8
 49701                           tblptrh	equ	0xFF7
 49702                           tblptrl	equ	0xFF6
 49703                           tablat	equ	0xFF5
 49704                           prodh	equ	0xFF4
 49705                           prodl	equ	0xFF3
 49706                           intcon	equ	0xFF2
 49707                           intcon2	equ	0xFF1
 49708                           intcon3	equ	0xFF0
 49709                           indf0	equ	0xFEF
 49710                           postinc0	equ	0xFEE
 49711                           fsr0h	equ	0xFEA
 49712                           fsr0l	equ	0xFE9
 49713                           wreg	equ	0xFE8
 49714                           indf1	equ	0xFE7
 49715                           postinc1	equ	0xFE6
 49716                           postdec1	equ	0xFE5
 49717                           plusw1	equ	0xFE3
 49718                           fsr1h	equ	0xFE2
 49719                           fsr1l	equ	0xFE1
 49720                           indf2	equ	0xFDF
 49721                           postinc2	equ	0xFDE
 49722                           postdec2	equ	0xFDD
 49723                           plusw2	equ	0xFDB
 49724                           fsr2h	equ	0xFDA
 49725                           fsr2l	equ	0xFD9
 49726                           status	equ	0xFD8
 49727                           
 49728 ;; *************** function _USBCtrlTrfOutHandler *****************
 49729 ;; Defined at:
 49730 ;;		line 2540 in file "usb_device.c"
 49731 ;; Parameters:    Size  Location     Type
 49732 ;;		None
 49733 ;; Auto vars:     Size  Location     Type
 49734 ;;		None
 49735 ;; Return value:  Size  Location     Type
 49736 ;;                  1    wreg      void 
 49737 ;; Registers used:
 49738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49739 ;; Tracked objects:
 49740 ;;		On entry : 0/0
 49741 ;;		On exit  : 0/0
 49742 ;;		Unchanged: 0/0
 49743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49748 ;;Total ram usage:        0 bytes
 49749 ;; Hardware stack levels used:    1
 49750 ;; Hardware stack levels required when called:    2
 49751 ;; This function calls:
 49752 ;;		_USBCtrlTrfRxService
 49753 ;; This function is called by:
 49754 ;;		_USBCtrlEPService
 49755 ;; This function uses a non-reentrant model
 49756 ;;
 49757                           
 49758                           	psect	text246
 49759  0115D2                     __ptext246:
 49760                           	opt stack 0
 49761  0115D2                     _USBCtrlTrfOutHandler:
 49762                           	opt stack 13
 49763                           
 49764                           ;usb_device.c: 2542: if(controlTransferState == 2)
 49765                           
 49766                           ;incstack = 0
 49767  0115D2  0E02               	movlw	2
 49768  0115D4  185A               	xorwf	_controlTransferState,w,c	;volatile
 49769  0115D6  A4D8               	btfss	status,2,c
 49770  0115D8  D003               	goto	i2l334
 49771                           
 49772                           ;usb_device.c: 2543: {
 49773                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 49774  0115DA  ECC7  F071         	call	_USBCtrlTrfRxService	;wreg free
 49775                           
 49776                           ;usb_device.c: 2545: }
 49777  0115DE  0012               	return	
 49778  0115E0                     i2l334:
 49779                           
 49780                           ;usb_device.c: 2546: else
 49781                           ;usb_device.c: 2547: {
 49782                           ;usb_device.c: 2550: controlTransferState = 0;
 49783  0115E0  0E00               	movlw	0
 49784  0115E2  6E5A               	movwf	_controlTransferState,c	;volatile
 49785                           
 49786                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 49787  0115E4  0101               	movlb	1	; () banked
 49788  0115E6  51FB               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 49789  0115E8  A4D8               	btfss	status,2,c
 49790  0115EA  D020               	goto	i2l336
 49791                           
 49792                           ; BSR set to: 1
 49793                           ;usb_device.c: 2558: {
 49794                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 49795  0115EC  0100               	movlb	0	; () banked
 49796  0115EE  EE20 F001          	lfsr	2,1
 49797  0115F2  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 49798  0115F4  26D9               	addwf	fsr2l,f,c
 49799  0115F6  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 49800  0115F8  22DA               	addwfc	fsr2h,f,c
 49801  0115FA  0E08               	movlw	8
 49802  0115FC  6EDF               	movwf	indf2,c
 49803                           
 49804                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49805  0115FE  EE20 F002          	lfsr	2,2
 49806  011602  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 49807  011604  26D9               	addwf	fsr2l,f,c
 49808  011606  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 49809  011608  22DA               	addwfc	fsr2h,f,c
 49810  01160A  0E30               	movlw	48
 49811  01160C  6EDE               	movwf	postinc2,c
 49812  01160E  0E0D               	movlw	13
 49813  011610  6EDD               	movwf	postdec2,c
 49814                           
 49815                           ; BSR set to: 0
 49816                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49817  011612  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49818  011616  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49819  01161A  0E0C               	movlw	12
 49820  01161C  6EDF               	movwf	indf2,c
 49821                           
 49822                           ; BSR set to: 0
 49823                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49824  01161E  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49825  011622  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49826  011626  0E00               	movlw	0
 49827  011628  8EDB               	bsf	plusw2,7,c
 49828                           
 49829                           ;usb_device.c: 2563: }
 49830  01162A  0012               	return	
 49831  01162C                     i2l336:
 49832                           
 49833                           ;usb_device.c: 2564: else
 49834                           ;usb_device.c: 2565: {
 49835                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 49836                           
 49837                           ; BSR set to: 0
 49838  01162C  0E00               	movlw	0
 49839  01162E  0101               	movlb	1	; () banked
 49840  011630  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 49841                           
 49842                           ; BSR set to: 1
 49843  011632  0012               	return	
 49844  011634                     __end_of_USBCtrlTrfOutHandler:
 49845                           	opt stack 0
 49846                           tosu	equ	0xFFF
 49847                           tosh	equ	0xFFE
 49848                           tosl	equ	0xFFD
 49849                           pclatu	equ	0xFFB
 49850                           pclath	equ	0xFFA
 49851                           tblptru	equ	0xFF8
 49852                           tblptrh	equ	0xFF7
 49853                           tblptrl	equ	0xFF6
 49854                           tablat	equ	0xFF5
 49855                           prodh	equ	0xFF4
 49856                           prodl	equ	0xFF3
 49857                           intcon	equ	0xFF2
 49858                           intcon2	equ	0xFF1
 49859                           intcon3	equ	0xFF0
 49860                           indf0	equ	0xFEF
 49861                           postinc0	equ	0xFEE
 49862                           fsr0h	equ	0xFEA
 49863                           fsr0l	equ	0xFE9
 49864                           wreg	equ	0xFE8
 49865                           indf1	equ	0xFE7
 49866                           postinc1	equ	0xFE6
 49867                           postdec1	equ	0xFE5
 49868                           plusw1	equ	0xFE3
 49869                           fsr1h	equ	0xFE2
 49870                           fsr1l	equ	0xFE1
 49871                           indf2	equ	0xFDF
 49872                           postinc2	equ	0xFDE
 49873                           postdec2	equ	0xFDD
 49874                           plusw2	equ	0xFDB
 49875                           fsr2h	equ	0xFDA
 49876                           fsr2l	equ	0xFD9
 49877                           status	equ	0xFD8
 49878                           
 49879 ;; *************** function _USBCtrlTrfRxService *****************
 49880 ;; Defined at:
 49881 ;;		line 1854 in file "usb_device.c"
 49882 ;; Parameters:    Size  Location     Type
 49883 ;;		None
 49884 ;; Auto vars:     Size  Location     Type
 49885 ;;  byteToRead      1    1[COMRAM] unsigned char 
 49886 ;;  i               1    0[COMRAM] unsigned char 
 49887 ;; Return value:  Size  Location     Type
 49888 ;;                  1    wreg      void 
 49889 ;; Registers used:
 49890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49891 ;; Tracked objects:
 49892 ;;		On entry : 0/0
 49893 ;;		On exit  : 0/0
 49894 ;;		Unchanged: 0/0
 49895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49900 ;;Total ram usage:        2 bytes
 49901 ;; Hardware stack levels used:    1
 49902 ;; Hardware stack levels required when called:    1
 49903 ;; This function calls:
 49904 ;;		_USBCtrlEPAllowStatusStage
 49905 ;; This function is called by:
 49906 ;;		_USBCtrlTrfOutHandler
 49907 ;; This function uses a non-reentrant model
 49908 ;;
 49909                           
 49910                           	psect	text247
 49911  00E38E                     __ptext247:
 49912                           	opt stack 0
 49913  00E38E                     _USBCtrlTrfRxService:
 49914                           	opt stack 13
 49915                           
 49916                           ;usb_device.c: 1856: uint8_t byteToRead;
 49917                           ;usb_device.c: 1857: uint8_t i;
 49918                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 49919                           
 49920                           ;incstack = 0
 49921  00E38E  EE20 F001          	lfsr	2,1
 49922  00E392  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 49923  00E394  26D9               	addwf	fsr2l,f,c
 49924  00E396  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49925  00E398  22DA               	addwfc	fsr2h,f,c
 49926  00E39A  50DF               	movf	indf2,w,c
 49927  00E39C  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 49928                           
 49929                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 49930  00E39E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49931  00E3A0  5C36               	subwf	_outPipes+4,w,c	;volatile
 49932  00E3A2  0E00               	movlw	0
 49933  00E3A4  5837               	subwfb	_outPipes+5,w,c	;volatile
 49934  00E3A6  A0D8               	btfss	status,0,c
 49935                           
 49936                           ;usb_device.c: 1868: {
 49937                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 49938  00E3A8  C036  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 49939                           
 49940                           ;usb_device.c: 1870: }
 49941                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 49942  00E3AC  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49943  00E3AE  5E36               	subwf	_outPipes+4,f,c	;volatile
 49944  00E3B0  0E00               	movlw	0
 49945  00E3B2  5A37               	subwfb	_outPipes+5,f,c	;volatile
 49946                           
 49947                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 49948  00E3B4  0E00               	movlw	0
 49949  00E3B6  6E01               	movwf	USBCtrlTrfRxService@i,c
 49950  00E3B8  D011               	goto	i2l262
 49951  00E3BA                     
 49952                           ;usb_device.c: 1877: {
 49953                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 49954  00E3BA  5001               	movf	USBCtrlTrfRxService@i,w,c
 49955  00E3BC  0D01               	mullw	1
 49956  00E3BE  0E38               	movlw	56
 49957  00E3C0  24F3               	addwf	prodl,w,c
 49958  00E3C2  6ED9               	movwf	fsr2l,c
 49959  00E3C4  0E0D               	movlw	13
 49960  00E3C6  20F4               	addwfc	prodh,w,c
 49961  00E3C8  6EDA               	movwf	fsr2h,c
 49962  00E3CA  C032  FFE1         	movff	_outPipes,fsr1l	;volatile
 49963  00E3CE  C033  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 49964  00E3D2  CFDF FFE7          	movff	indf2,indf1
 49965  00E3D6  4A32               	infsnz	_outPipes,f,c	;volatile
 49966  00E3D8  2A33               	incf	_outPipes+1,f,c	;volatile
 49967  00E3DA  2A01               	incf	USBCtrlTrfRxService@i,f,c
 49968  00E3DC                     i2l262:
 49969  00E3DC  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49970  00E3DE  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 49971  00E3E0  A0D8               	btfss	status,0,c
 49972  00E3E2  D7EB               	goto	i2l263
 49973                           
 49974                           ;usb_device.c: 1879: }
 49975                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 49976  00E3E4  5036               	movf	_outPipes+4,w,c	;volatile
 49977  00E3E6  1037               	iorwf	_outPipes+5,w,c	;volatile
 49978  00E3E8  B4D8               	btfsc	status,2,c
 49979  00E3EA  D033               	goto	i2l265
 49980                           
 49981                           ;usb_device.c: 1884: {
 49982                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 49983  00E3EC  0100               	movlb	0	; () banked
 49984  00E3EE  EE20 F001          	lfsr	2,1
 49985  00E3F2  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 49986  00E3F4  26D9               	addwf	fsr2l,f,c
 49987  00E3F6  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 49988  00E3F8  22DA               	addwfc	fsr2h,f,c
 49989  00E3FA  0E08               	movlw	8
 49990  00E3FC  6EDF               	movwf	indf2,c
 49991                           
 49992                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49993  00E3FE  EE20 F002          	lfsr	2,2
 49994  00E402  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 49995  00E404  26D9               	addwf	fsr2l,f,c
 49996  00E406  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 49997  00E408  22DA               	addwfc	fsr2h,f,c
 49998  00E40A  0E38               	movlw	56
 49999  00E40C  6EDE               	movwf	postinc2,c
 50000  00E40E  0E0D               	movlw	13
 50001  00E410  6EDD               	movwf	postdec2,c
 50002                           
 50003                           ; BSR set to: 0
 50004                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 50005  00E412  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50006  00E416  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50007  00E41A  BCDF               	btfsc	indf2,6,c
 50008  00E41C  D00D               	goto	i2l266
 50009                           
 50010                           ; BSR set to: 0
 50011                           ;usb_device.c: 1888: {
 50012                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 50013  00E41E  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50014  00E422  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50015  00E426  0E48               	movlw	72
 50016  00E428  6EDF               	movwf	indf2,c
 50017                           
 50018                           ; BSR set to: 0
 50019                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50020  00E42A  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50021  00E42E  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50022  00E432  0E00               	movlw	0
 50023  00E434  8EDB               	bsf	plusw2,7,c
 50024                           
 50025                           ;usb_device.c: 1891: }
 50026  00E436  0012               	return	
 50027  00E438                     i2l266:
 50028                           
 50029                           ; BSR set to: 0
 50030                           ;usb_device.c: 1892: else
 50031                           ;usb_device.c: 1893: {
 50032                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 50033                           
 50034                           ; BSR set to: 0
 50035  00E438  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50036  00E43C  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50037  00E440  0E08               	movlw	8
 50038  00E442  6EDF               	movwf	indf2,c
 50039                           
 50040                           ; BSR set to: 0
 50041                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50042  00E444  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50043  00E448  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50044  00E44C  0E00               	movlw	0
 50045  00E44E  8EDB               	bsf	plusw2,7,c
 50046                           
 50047                           ; BSR set to: 0
 50048                           ;usb_device.c: 1896: }
 50049                           ;usb_device.c: 1897: }
 50050  00E450  0012               	return	
 50051  00E452                     i2l265:
 50052                           
 50053                           ;usb_device.c: 1898: else
 50054                           ;usb_device.c: 1899: {
 50055                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 50056                           
 50057                           ; BSR set to: 0
 50058  00E452  0100               	movlb	0	; () banked
 50059  00E454  EE20 F001          	lfsr	2,1
 50060  00E458  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50061  00E45A  26D9               	addwf	fsr2l,f,c
 50062  00E45C  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50063  00E45E  22DA               	addwfc	fsr2h,f,c
 50064  00E460  0E08               	movlw	8
 50065  00E462  6EDF               	movwf	indf2,c
 50066                           
 50067                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50068  00E464  EE20 F002          	lfsr	2,2
 50069  00E468  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50070  00E46A  26D9               	addwf	fsr2l,f,c
 50071  00E46C  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50072  00E46E  22DA               	addwfc	fsr2h,f,c
 50073  00E470  0E30               	movlw	48
 50074  00E472  6EDE               	movwf	postinc2,c
 50075  00E474  0E0D               	movlw	13
 50076  00E476  6EDD               	movwf	postdec2,c
 50077                           
 50078                           ; BSR set to: 0
 50079                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 50080  00E478  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50081  00E47C  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50082  00E480  0E04               	movlw	4
 50083  00E482  6EDF               	movwf	indf2,c
 50084                           
 50085                           ; BSR set to: 0
 50086                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50087  00E484  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50088  00E488  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50089  00E48C  0E00               	movlw	0
 50090  00E48E  8EDB               	bsf	plusw2,7,c
 50091                           
 50092                           ; BSR set to: 0
 50093                           ;usb_device.c: 1928: }
 50094                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 50095                           
 50096                           ; BSR set to: 0
 50097                           ;usb_device.c: 1917: {
 50098                           ;usb_device.c: 1923: outPipes[0].pFunc();
 50099  00E490  9E35               	bcf	_outPipes+3,7,c	;volatile
 50100                           
 50101                           ; BSR set to: 0
 50102                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 50103  00E492  5055               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 50104  00E494  A4D8               	btfss	status,2,c
 50105  00E496  0012               	return	
 50106                           
 50107                           ; BSR set to: 0
 50108                           ;usb_device.c: 1944: {
 50109                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 50110  00E498  ECD8  F07D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 50111  00E49C  0012               	return	
 50112  00E49E                     __end_of_USBCtrlTrfRxService:
 50113                           	opt stack 0
 50114                           tosu	equ	0xFFF
 50115                           tosh	equ	0xFFE
 50116                           tosl	equ	0xFFD
 50117                           pclatu	equ	0xFFB
 50118                           pclath	equ	0xFFA
 50119                           tblptru	equ	0xFF8
 50120                           tblptrh	equ	0xFF7
 50121                           tblptrl	equ	0xFF6
 50122                           tablat	equ	0xFF5
 50123                           prodh	equ	0xFF4
 50124                           prodl	equ	0xFF3
 50125                           intcon	equ	0xFF2
 50126                           intcon2	equ	0xFF1
 50127                           intcon3	equ	0xFF0
 50128                           indf0	equ	0xFEF
 50129                           postinc0	equ	0xFEE
 50130                           fsr0h	equ	0xFEA
 50131                           fsr0l	equ	0xFE9
 50132                           wreg	equ	0xFE8
 50133                           indf1	equ	0xFE7
 50134                           postinc1	equ	0xFE6
 50135                           postdec1	equ	0xFE5
 50136                           plusw1	equ	0xFE3
 50137                           fsr1h	equ	0xFE2
 50138                           fsr1l	equ	0xFE1
 50139                           indf2	equ	0xFDF
 50140                           postinc2	equ	0xFDE
 50141                           postdec2	equ	0xFDD
 50142                           plusw2	equ	0xFDB
 50143                           fsr2h	equ	0xFDA
 50144                           fsr2l	equ	0xFD9
 50145                           status	equ	0xFD8
 50146                           
 50147 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 50148 ;; Defined at:
 50149 ;;		line 1418 in file "usb_device.c"
 50150 ;; Parameters:    Size  Location     Type
 50151 ;;		None
 50152 ;; Auto vars:     Size  Location     Type
 50153 ;;		None
 50154 ;; Return value:  Size  Location     Type
 50155 ;;                  1    wreg      void 
 50156 ;; Registers used:
 50157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50158 ;; Tracked objects:
 50159 ;;		On entry : 0/0
 50160 ;;		On exit  : 0/0
 50161 ;;		Unchanged: 0/0
 50162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50167 ;;Total ram usage:        0 bytes
 50168 ;; Hardware stack levels used:    1
 50169 ;; This function calls:
 50170 ;;		Nothing
 50171 ;; This function is called by:
 50172 ;;		_USBDeviceTasks
 50173 ;;		_USBCtrlEPServiceComplete
 50174 ;;		_USBCtrlTrfRxService
 50175 ;; This function uses a non-reentrant model
 50176 ;;
 50177                           
 50178                           	psect	text248
 50179  00FBB0                     __ptext248:
 50180                           	opt stack 0
 50181  00FBB0                     _USBCtrlEPAllowStatusStage:
 50182                           	opt stack 13
 50183                           
 50184                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 50185                           
 50186                           ;incstack = 0
 50187  00FBB0  0101               	movlb	1	; () banked
 50188  00FBB2  51FA               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 50189  00FBB4  A4D8               	btfss	status,2,c
 50190  00FBB6  0012               	return	
 50191                           
 50192                           ; BSR set to: 1
 50193                           ;usb_device.c: 1426: {
 50194                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 50195  00FBB8  0E01               	movlw	1
 50196  00FBBA  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50197                           
 50198                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 50199  00FBBC  51F9               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 50200  00FBBE  A4D8               	btfss	status,2,c
 50201  00FBC0  0012               	return	
 50202                           
 50203                           ; BSR set to: 1
 50204                           ;usb_device.c: 1429: {
 50205                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 50206  00FBC2  0E01               	movlw	1
 50207  00FBC4  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50208                           
 50209                           ; BSR set to: 1
 50210                           ;usb_device.c: 1434: if(controlTransferState == 2)
 50211  00FBC6  0E02               	movlw	2
 50212  00FBC8  185A               	xorwf	_controlTransferState,w,c	;volatile
 50213  00FBCA  A4D8               	btfss	status,2,c
 50214  00FBCC  D015               	goto	i2l216
 50215                           
 50216                           ; BSR set to: 1
 50217                           ;usb_device.c: 1435: {
 50218                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 50219  00FBCE  EE20 F001          	lfsr	2,1
 50220  00FBD2  503B               	movf	_pBDTEntryIn,w,c
 50221  00FBD4  26D9               	addwf	fsr2l,f,c
 50222  00FBD6  503C               	movf	_pBDTEntryIn+1,w,c
 50223  00FBD8  22DA               	addwfc	fsr2h,f,c
 50224  00FBDA  0E00               	movlw	0
 50225  00FBDC  6EDF               	movwf	indf2,c
 50226                           
 50227                           ; BSR set to: 1
 50228                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50229  00FBDE  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50230  00FBE2  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50231  00FBE6  0E48               	movlw	72
 50232  00FBE8  6EDF               	movwf	indf2,c
 50233                           
 50234                           ; BSR set to: 1
 50235                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50236  00FBEA  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50237  00FBEE  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50238  00FBF2  0E00               	movlw	0
 50239  00FBF4  8EDB               	bsf	plusw2,7,c
 50240                           
 50241                           ;usb_device.c: 1439: }
 50242  00FBF6  0012               	return	
 50243  00FBF8                     i2l216:
 50244                           
 50245                           ; BSR set to: 1
 50246                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 50247                           
 50248                           ; BSR set to: 1
 50249  00FBF8  045A               	decf	_controlTransferState,w,c	;volatile
 50250  00FBFA  A4D8               	btfss	status,2,c
 50251  00FBFC  0012               	return	
 50252                           
 50253                           ; BSR set to: 1
 50254                           ;usb_device.c: 1441: {
 50255                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 50256  00FBFE  0E00               	movlw	0
 50257  00FC00  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50258                           
 50259                           ; BSR set to: 1
 50260                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 50261  00FC02  EE20 F001          	lfsr	2,1
 50262  00FC06  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 50263  00FC08  26D9               	addwf	fsr2l,f,c
 50264  00FC0A  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50265  00FC0C  22DA               	addwfc	fsr2h,f,c
 50266  00FC0E  0E08               	movlw	8
 50267  00FC10  6EDF               	movwf	indf2,c
 50268                           
 50269                           ; BSR set to: 1
 50270                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 50271  00FC12  EE20 F002          	lfsr	2,2
 50272  00FC16  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 50273  00FC18  26D9               	addwf	fsr2l,f,c
 50274  00FC1A  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50275  00FC1C  22DA               	addwfc	fsr2h,f,c
 50276  00FC1E  0E30               	movlw	48
 50277  00FC20  6EDE               	movwf	postinc2,c
 50278  00FC22  0E0D               	movlw	13
 50279  00FC24  6EDD               	movwf	postdec2,c
 50280                           
 50281                           ; BSR set to: 1
 50282                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 50283  00FC26  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50284  00FC2A  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50285  00FC2E  0E04               	movlw	4
 50286  00FC30  6EDF               	movwf	indf2,c
 50287                           
 50288                           ; BSR set to: 1
 50289                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 50290  00FC32  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50291  00FC36  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50292  00FC3A  0E00               	movlw	0
 50293  00FC3C  8EDB               	bsf	plusw2,7,c
 50294                           
 50295                           ; BSR set to: 1
 50296                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 50297  00FC3E  0E01               	movlw	1
 50298  00FC40  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50299                           
 50300                           ; BSR set to: 1
 50301                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 50302  00FC42  0100               	movlb	0	; () banked
 50303  00FC44  EE20 F001          	lfsr	2,1
 50304  00FC48  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50305  00FC4A  26D9               	addwf	fsr2l,f,c
 50306  00FC4C  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50307  00FC4E  22DA               	addwfc	fsr2h,f,c
 50308  00FC50  0E08               	movlw	8
 50309  00FC52  6EDF               	movwf	indf2,c
 50310                           
 50311                           ; BSR set to: 0
 50312                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50313  00FC54  EE20 F002          	lfsr	2,2
 50314  00FC58  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50315  00FC5A  26D9               	addwf	fsr2l,f,c
 50316  00FC5C  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50317  00FC5E  22DA               	addwfc	fsr2h,f,c
 50318  00FC60  0E30               	movlw	48
 50319  00FC62  6EDE               	movwf	postinc2,c
 50320  00FC64  0E0D               	movlw	13
 50321  00FC66  6EDD               	movwf	postdec2,c
 50322                           
 50323                           ; BSR set to: 0
 50324                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 50325  00FC68  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50326  00FC6C  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50327  00FC70  0E80               	movlw	128
 50328  00FC72  6EDF               	movwf	indf2,c
 50329                           
 50330                           ; BSR set to: 0
 50331                           
 50332                           ; BSR set to: 0
 50333                           
 50334                           ; BSR set to: 0
 50335  00FC74  0012               	return	
 50336  00FC76                     __end_of_USBCtrlEPAllowStatusStage:
 50337                           	opt stack 0
 50338                           tosu	equ	0xFFF
 50339                           tosh	equ	0xFFE
 50340                           tosl	equ	0xFFD
 50341                           pclatu	equ	0xFFB
 50342                           pclath	equ	0xFFA
 50343                           tblptru	equ	0xFF8
 50344                           tblptrh	equ	0xFF7
 50345                           tblptrl	equ	0xFF6
 50346                           tablat	equ	0xFF5
 50347                           prodh	equ	0xFF4
 50348                           prodl	equ	0xFF3
 50349                           intcon	equ	0xFF2
 50350                           intcon2	equ	0xFF1
 50351                           intcon3	equ	0xFF0
 50352                           indf0	equ	0xFEF
 50353                           postinc0	equ	0xFEE
 50354                           fsr0h	equ	0xFEA
 50355                           fsr0l	equ	0xFE9
 50356                           wreg	equ	0xFE8
 50357                           indf1	equ	0xFE7
 50358                           postinc1	equ	0xFE6
 50359                           postdec1	equ	0xFE5
 50360                           plusw1	equ	0xFE3
 50361                           fsr1h	equ	0xFE2
 50362                           fsr1l	equ	0xFE1
 50363                           indf2	equ	0xFDF
 50364                           postinc2	equ	0xFDE
 50365                           postdec2	equ	0xFDD
 50366                           plusw2	equ	0xFDB
 50367                           fsr2h	equ	0xFDA
 50368                           fsr2l	equ	0xFD9
 50369                           status	equ	0xFD8
 50370                           
 50371 ;; *************** function _USBCtrlTrfInHandler *****************
 50372 ;; Defined at:
 50373 ;;		line 2594 in file "usb_device.c"
 50374 ;; Parameters:    Size  Location     Type
 50375 ;;		None
 50376 ;; Auto vars:     Size  Location     Type
 50377 ;;  lastDTS         1    1[COMRAM] unsigned char 
 50378 ;; Return value:  Size  Location     Type
 50379 ;;                  1    wreg      void 
 50380 ;; Registers used:
 50381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50382 ;; Tracked objects:
 50383 ;;		On entry : 0/0
 50384 ;;		On exit  : 0/0
 50385 ;;		Unchanged: 0/0
 50386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50391 ;;Total ram usage:        1 bytes
 50392 ;; Hardware stack levels used:    1
 50393 ;; Hardware stack levels required when called:    1
 50394 ;; This function calls:
 50395 ;;		_USBCtrlTrfTxService
 50396 ;; This function is called by:
 50397 ;;		_USBCtrlEPService
 50398 ;; This function uses a non-reentrant model
 50399 ;;
 50400                           
 50401                           	psect	text249
 50402  00FD38                     __ptext249:
 50403                           	opt stack 0
 50404  00FD38                     _USBCtrlTrfInHandler:
 50405                           	opt stack 14
 50406                           
 50407                           ;usb_device.c: 2596: uint8_t lastDTS;
 50408                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 50409                           
 50410                           ;incstack = 0
 50411  00FD38  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50412  00FD3C  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50413  00FD40  0E00               	movlw	0
 50414  00FD42  BCDF               	btfsc	indf2,6,c
 50415  00FD44  0E01               	movlw	1
 50416  00FD46  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 50417                           
 50418                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50419  00FD48  0E04               	movlw	4
 50420  00FD4A  183B               	xorwf	_pBDTEntryIn,w,c
 50421  00FD4C  6E3B               	movwf	_pBDTEntryIn,c
 50422  00FD4E  503C               	movf	_pBDTEntryIn+1,w,c
 50423  00FD50  6E3C               	movwf	_pBDTEntryIn+1,c
 50424                           
 50425                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 50426  00FD52  0E08               	movlw	8
 50427  00FD54  185C               	xorwf	_USBDeviceState,w,c	;volatile
 50428  00FD56  A4D8               	btfss	status,2,c
 50429  00FD58  D00C               	goto	i2l343
 50430                           
 50431                           ;usb_device.c: 2607: {
 50432                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 50433  00FD5A  010D               	movlb	13	; () banked
 50434  00FD5C  5132               	movf	50,w,b	;volatile
 50435  00FD5E  0B7F               	andlw	127
 50436  00FD60  010F               	movlb	15	; () banked
 50437  00FD62  6F38               	movwf	56,b	;volatile
 50438                           
 50439                           ; BSR set to: 15
 50440                           ;usb_device.c: 2609: if(UADDR != 0u)
 50441  00FD64  5138               	movf	56,w,b	;volatile
 50442  00FD66  B4D8               	btfsc	status,2,c
 50443  00FD68  D002               	goto	i2l342
 50444                           
 50445                           ; BSR set to: 15
 50446                           ;usb_device.c: 2610: {
 50447                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 50448  00FD6A  0E10               	movlw	16
 50449  00FD6C  D001               	goto	L69
 50450  00FD6E                     i2l342:
 50451                           
 50452                           ; BSR set to: 15
 50453                           ;usb_device.c: 2613: else
 50454                           ;usb_device.c: 2614: {
 50455                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 50456                           
 50457                           ; BSR set to: 15
 50458  00FD6E  0E04               	movlw	4
 50459  00FD70                     L69:
 50460  00FD70  6E5C               	movwf	_USBDeviceState,c	;volatile
 50461  00FD72                     i2l343:
 50462                           
 50463                           ;usb_device.c: 2616: }
 50464                           ;usb_device.c: 2617: }
 50465                           ;usb_device.c: 2620: if(controlTransferState == 1)
 50466                           
 50467                           ; BSR set to: 15
 50468                           
 50469                           ; BSR set to: 15
 50470  00FD72  045A               	decf	_controlTransferState,w,c	;volatile
 50471  00FD74  A4D8               	btfss	status,2,c
 50472  00FD76  D03A               	goto	i2l344
 50473                           
 50474                           ;usb_device.c: 2621: {
 50475                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 50476  00FD78  EE20 F002          	lfsr	2,2
 50477  00FD7C  503B               	movf	_pBDTEntryIn,w,c
 50478  00FD7E  26D9               	addwf	fsr2l,f,c
 50479  00FD80  503C               	movf	_pBDTEntryIn+1,w,c
 50480  00FD82  22DA               	addwfc	fsr2h,f,c
 50481  00FD84  0E38               	movlw	56
 50482  00FD86  6EDE               	movwf	postinc2,c
 50483  00FD88  0E0D               	movlw	13
 50484  00FD8A  6EDD               	movwf	postdec2,c
 50485                           
 50486                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 50487  00FD8C  ECDB  F07B         	call	_USBCtrlTrfTxService	;wreg free
 50488                           
 50489                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 50490  00FD90  0E02               	movlw	2
 50491  00FD92  185B               	xorwf	_shortPacketStatus,w,c	;volatile
 50492  00FD94  A4D8               	btfss	status,2,c
 50493  00FD96  D00D               	goto	i2l345
 50494                           
 50495                           ;usb_device.c: 2630: {
 50496                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 50497  00FD98  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50498  00FD9C  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50499  00FDA0  0E04               	movlw	4
 50500  00FDA2  6EDF               	movwf	indf2,c
 50501                           
 50502                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50503  00FDA4  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50504  00FDA8  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50505  00FDAC  0E00               	movlw	0
 50506  00FDAE  8EDB               	bsf	plusw2,7,c
 50507                           
 50508                           ;usb_device.c: 2635: }
 50509  00FDB0  0012               	return	
 50510  00FDB2                     i2l345:
 50511                           
 50512                           ;usb_device.c: 2636: else
 50513                           ;usb_device.c: 2637: {
 50514                           ;usb_device.c: 2638: if(lastDTS == 0)
 50515  00FDB2  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 50516  00FDB4  A4D8               	btfss	status,2,c
 50517  00FDB6  D00D               	goto	i2l347
 50518                           
 50519                           ;usb_device.c: 2639: {
 50520                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50521  00FDB8  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50522  00FDBC  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50523  00FDC0  0E48               	movlw	72
 50524  00FDC2  6EDF               	movwf	indf2,c
 50525                           
 50526                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50527  00FDC4  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50528  00FDC8  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50529  00FDCC  0E00               	movlw	0
 50530  00FDCE  8EDB               	bsf	plusw2,7,c
 50531                           
 50532                           ;usb_device.c: 2642: }
 50533  00FDD0  0012               	return	
 50534  00FDD2                     i2l347:
 50535                           
 50536                           ;usb_device.c: 2643: else
 50537                           ;usb_device.c: 2644: {
 50538                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 50539  00FDD2  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50540  00FDD6  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50541  00FDDA  0E08               	movlw	8
 50542  00FDDC  6EDF               	movwf	indf2,c
 50543                           
 50544                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50545  00FDDE  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50546  00FDE2  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50547  00FDE6  0E00               	movlw	0
 50548  00FDE8  8EDB               	bsf	plusw2,7,c
 50549                           
 50550                           ;usb_device.c: 2647: }
 50551                           ;usb_device.c: 2648: }
 50552                           ;usb_device.c: 2649: }
 50553  00FDEA  0012               	return	
 50554  00FDEC                     i2l344:
 50555                           
 50556                           ;usb_device.c: 2650: else
 50557                           ;usb_device.c: 2651: {
 50558                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 50559  00FDEC  BE35               	btfsc	_outPipes+3,7,c	;volatile
 50560                           
 50561                           ;usb_device.c: 2660: }
 50562                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 50563                           
 50564                           ;usb_device.c: 2658: {
 50565                           ;usb_device.c: 2659: outPipes[0].pFunc();
 50566  00FDEE  9E35               	bcf	_outPipes+3,7,c	;volatile
 50567                           
 50568                           ;usb_device.c: 2662: }
 50569                           ;usb_device.c: 2664: controlTransferState = 0;
 50570  00FDF0  0E00               	movlw	0
 50571  00FDF2  6E5A               	movwf	_controlTransferState,c	;volatile
 50572  00FDF4  0012               	return	
 50573  00FDF6                     __end_of_USBCtrlTrfInHandler:
 50574                           	opt stack 0
 50575                           tosu	equ	0xFFF
 50576                           tosh	equ	0xFFE
 50577                           tosl	equ	0xFFD
 50578                           pclatu	equ	0xFFB
 50579                           pclath	equ	0xFFA
 50580                           tblptru	equ	0xFF8
 50581                           tblptrh	equ	0xFF7
 50582                           tblptrl	equ	0xFF6
 50583                           tablat	equ	0xFF5
 50584                           prodh	equ	0xFF4
 50585                           prodl	equ	0xFF3
 50586                           intcon	equ	0xFF2
 50587                           intcon2	equ	0xFF1
 50588                           intcon3	equ	0xFF0
 50589                           indf0	equ	0xFEF
 50590                           postinc0	equ	0xFEE
 50591                           fsr0h	equ	0xFEA
 50592                           fsr0l	equ	0xFE9
 50593                           wreg	equ	0xFE8
 50594                           indf1	equ	0xFE7
 50595                           postinc1	equ	0xFE6
 50596                           postdec1	equ	0xFE5
 50597                           plusw1	equ	0xFE3
 50598                           fsr1h	equ	0xFE2
 50599                           fsr1l	equ	0xFE1
 50600                           indf2	equ	0xFDF
 50601                           postinc2	equ	0xFDE
 50602                           postdec2	equ	0xFDD
 50603                           plusw2	equ	0xFDB
 50604                           fsr2h	equ	0xFDA
 50605                           fsr2l	equ	0xFD9
 50606                           status	equ	0xFD8
 50607                           
 50608 ;; *************** function _USBCtrlTrfTxService *****************
 50609 ;; Defined at:
 50610 ;;		line 1773 in file "usb_device.c"
 50611 ;; Parameters:    Size  Location     Type
 50612 ;;		None
 50613 ;; Auto vars:     Size  Location     Type
 50614 ;;  byteToSend      1    0[COMRAM] unsigned char 
 50615 ;; Return value:  Size  Location     Type
 50616 ;;                  1    wreg      void 
 50617 ;; Registers used:
 50618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50619 ;; Tracked objects:
 50620 ;;		On entry : 0/0
 50621 ;;		On exit  : 0/0
 50622 ;;		Unchanged: 0/0
 50623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50628 ;;Total ram usage:        1 bytes
 50629 ;; Hardware stack levels used:    1
 50630 ;; This function calls:
 50631 ;;		Nothing
 50632 ;; This function is called by:
 50633 ;;		_USBCtrlEPAllowDataStage
 50634 ;;		_USBCtrlTrfInHandler
 50635 ;; This function uses a non-reentrant model
 50636 ;;
 50637                           
 50638                           	psect	text250
 50639  00F7B6                     __ptext250:
 50640                           	opt stack 0
 50641  00F7B6                     _USBCtrlTrfTxService:
 50642                           	opt stack 12
 50643                           
 50644                           ;usb_device.c: 1775: uint8_t byteToSend;
 50645                           ;usb_device.c: 1779: byteToSend = 8;
 50646                           
 50647                           ;incstack = 0
 50648  00F7B6  0E08               	movlw	8
 50649  00F7B8  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 50650                           
 50651                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 50652  00F7BA  0100               	movlb	0	; () banked
 50653  00F7BC  51F8               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 50654  00F7BE  E110               	bnz	i2l11686
 50655  00F7C0  0E08               	movlw	8
 50656  00F7C2  5DF7               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 50657  00F7C4  B0D8               	btfsc	status,0,c
 50658  00F7C6  D00C               	goto	i2l249
 50659                           
 50660                           ; BSR set to: 0
 50661                           ;usb_device.c: 1781: {
 50662                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 50663  00F7C8  C0F7  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 50664                           
 50665                           ; BSR set to: 0
 50666                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 50667  00F7CC  505B               	movf	_shortPacketStatus,w,c	;volatile
 50668  00F7CE  A4D8               	btfss	status,2,c
 50669  00F7D0  D002               	goto	i2l247
 50670                           
 50671                           ; BSR set to: 0
 50672                           ;usb_device.c: 1790: {
 50673                           ;usb_device.c: 1791: shortPacketStatus = 1;
 50674  00F7D2  0E01               	movlw	1
 50675  00F7D4  D004               	goto	L70
 50676  00F7D6                     i2l247:
 50677                           
 50678                           ; BSR set to: 0
 50679                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 50680                           
 50681                           ; BSR set to: 0
 50682  00F7D6  045B               	decf	_shortPacketStatus,w,c	;volatile
 50683  00F7D8  A4D8               	btfss	status,2,c
 50684  00F7DA  D002               	goto	i2l249
 50685                           
 50686                           ; BSR set to: 0
 50687                           ;usb_device.c: 1794: {
 50688                           ;usb_device.c: 1795: shortPacketStatus = 2;
 50689  00F7DC  0E02               	movlw	2
 50690  00F7DE                     L70:
 50691  00F7DE  6E5B               	movwf	_shortPacketStatus,c	;volatile
 50692  00F7E0                     i2l249:
 50693  00F7E0                     i2l11686:
 50694                           
 50695                           ; BSR set to: 0
 50696                           ;usb_device.c: 1796: }
 50697                           ;usb_device.c: 1797: }
 50698                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 50699  00F7E0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 50700  00F7E2  5FF7               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 50701  00F7E4  0E00               	movlw	0
 50702  00F7E6  5BF8               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 50703                           
 50704                           ; BSR set to: 0
 50705                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 50706  00F7E8  EE20 F001          	lfsr	2,1
 50707  00F7EC  503B               	movf	_pBDTEntryIn,w,c
 50708  00F7EE  26D9               	addwf	fsr2l,f,c
 50709  00F7F0  503C               	movf	_pBDTEntryIn+1,w,c
 50710  00F7F2  22DA               	addwfc	fsr2h,f,c
 50711  00F7F4  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 50712                           
 50713                           ; BSR set to: 0
 50714                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 50715  00F7F8  0E38               	movlw	56
 50716  00F7FA  0101               	movlb	1	; () banked
 50717  00F7FC  6FE9               	movwf	_pDst& (0+255),b
 50718  00F7FE  0E0D               	movlw	13
 50719  00F800  6FEA               	movwf	(_pDst+1)& (0+255),b
 50720                           
 50721                           ; BSR set to: 1
 50722                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 50723  00F802  0100               	movlb	0	; () banked
 50724  00F804  A1F6               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 50725  00F806  D01E               	goto	i2l251
 50726  00F808  D03E               	goto	i2l255
 50727  00F80A                     
 50728                           ;usb_device.c: 1814: {
 50729                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 50730                           
 50731                           ; BSR set to: 0
 50732  00F80A  C0F3  FFF6         	movff	_inPipes,tblptrl	;volatile
 50733  00F80E  C0F4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50734  00F812  0E00               	movlw	low (__mediumconst shr (0+16))
 50735  00F814  6EF8               	movwf	tblptru,c
 50736  00F816  C1E9  FFD9         	movff	_pDst,fsr2l
 50737  00F81A  C1EA  FFDA         	movff	_pDst+1,fsr2h
 50738  00F81E  0E0E               	movlw	(high __ramtop+-1)
 50739  00F820  64F7               	cpfsgt	tblptrh,c
 50740  00F822  D003               	bra	i2u891_47
 50741  00F824  0008               	tblrd		*
 50742  00F826  50F5               	movf	tablat,w,c
 50743  00F828  D005               	bra	i2u891_40
 50744  00F82A                     i2u891_47:
 50745  00F82A  CFF6 FFE9          	movff	tblptrl,fsr0l
 50746  00F82E  CFF7 FFEA          	movff	tblptrh,fsr0h
 50747  00F832  50EF               	movf	indf0,w,c
 50748  00F834                     i2u891_40:
 50749  00F834  6EDF               	movwf	indf2,c
 50750  00F836  0100               	movlb	0	; () banked
 50751  00F838  4BF3               	infsnz	_inPipes& (0+255),f,b	;volatile
 50752  00F83A  2BF4               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 50753                           
 50754                           ; BSR set to: 0
 50755  00F83C  0101               	movlb	1	; () banked
 50756  00F83E  4BE9               	infsnz	_pDst& (0+255),f,b
 50757  00F840  2BEA               	incf	(_pDst+1)& (0+255),f,b
 50758                           
 50759                           ; BSR set to: 1
 50760                           ;usb_device.c: 1816: byteToSend--;
 50761  00F842  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 50762  00F844                     i2l251:
 50763                           
 50764                           ; BSR set to: 1
 50765  00F844  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 50766  00F846  B4D8               	btfsc	status,2,c
 50767  00F848  0012               	return	
 50768  00F84A  D7DF               	goto	i2l252
 50769  00F84C                     
 50770                           ;usb_device.c: 1822: {
 50771                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 50772  00F84C  C0F3  FFF6         	movff	_inPipes,tblptrl	;volatile
 50773  00F850  C0F4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50774  00F854  0E00               	movlw	low (__mediumconst shr (0+16))
 50775  00F856  6EF8               	movwf	tblptru,c
 50776  00F858  C1E9  FFD9         	movff	_pDst,fsr2l
 50777  00F85C  C1EA  FFDA         	movff	_pDst+1,fsr2h
 50778  00F860  0E0E               	movlw	(high __ramtop+-1)
 50779  00F862  64F7               	cpfsgt	tblptrh,c
 50780  00F864  D003               	bra	i2u893_47
 50781  00F866  0008               	tblrd		*
 50782  00F868  50F5               	movf	tablat,w,c
 50783  00F86A  D005               	bra	i2u893_40
 50784  00F86C                     i2u893_47:
 50785  00F86C  CFF6 FFE9          	movff	tblptrl,fsr0l
 50786  00F870  CFF7 FFEA          	movff	tblptrh,fsr0h
 50787  00F874  50EF               	movf	indf0,w,c
 50788  00F876                     i2u893_40:
 50789  00F876  6EDF               	movwf	indf2,c
 50790  00F878  0100               	movlb	0	; () banked
 50791  00F87A  4BF3               	infsnz	_inPipes& (0+255),f,b	;volatile
 50792  00F87C  2BF4               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 50793                           
 50794                           ; BSR set to: 0
 50795  00F87E  0101               	movlb	1	; () banked
 50796  00F880  4BE9               	infsnz	_pDst& (0+255),f,b
 50797  00F882  2BEA               	incf	(_pDst+1)& (0+255),f,b
 50798                           
 50799                           ; BSR set to: 1
 50800                           ;usb_device.c: 1824: byteToSend--;
 50801  00F884  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 50802  00F886                     i2l255:
 50803                           
 50804                           ; BSR set to: 1
 50805  00F886  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 50806  00F888  B4D8               	btfsc	status,2,c
 50807  00F88A  0012               	return	
 50808  00F88C  D7DF               	goto	i2l256
 50809  00F88E                     __end_of_USBCtrlTrfTxService:
 50810                           	opt stack 0
 50811                           tosu	equ	0xFFF
 50812                           tosh	equ	0xFFE
 50813                           tosl	equ	0xFFD
 50814                           pclatu	equ	0xFFB
 50815                           pclath	equ	0xFFA
 50816                           tblptru	equ	0xFF8
 50817                           tblptrh	equ	0xFF7
 50818                           tblptrl	equ	0xFF6
 50819                           tablat	equ	0xFF5
 50820                           prodh	equ	0xFF4
 50821                           prodl	equ	0xFF3
 50822                           intcon	equ	0xFF2
 50823                           intcon2	equ	0xFF1
 50824                           intcon3	equ	0xFF0
 50825                           indf0	equ	0xFEF
 50826                           postinc0	equ	0xFEE
 50827                           fsr0h	equ	0xFEA
 50828                           fsr0l	equ	0xFE9
 50829                           wreg	equ	0xFE8
 50830                           indf1	equ	0xFE7
 50831                           postinc1	equ	0xFE6
 50832                           postdec1	equ	0xFE5
 50833                           plusw1	equ	0xFE3
 50834                           fsr1h	equ	0xFE2
 50835                           fsr1l	equ	0xFE1
 50836                           indf2	equ	0xFDF
 50837                           postinc2	equ	0xFDE
 50838                           postdec2	equ	0xFDD
 50839                           plusw2	equ	0xFDB
 50840                           fsr2h	equ	0xFDA
 50841                           fsr2l	equ	0xFD9
 50842                           status	equ	0xFD8
 50843                           tosu	equ	0xFFF
 50844                           tosh	equ	0xFFE
 50845                           tosl	equ	0xFFD
 50846                           pclatu	equ	0xFFB
 50847                           pclath	equ	0xFFA
 50848                           tblptru	equ	0xFF8
 50849                           tblptrh	equ	0xFF7
 50850                           tblptrl	equ	0xFF6
 50851                           tablat	equ	0xFF5
 50852                           prodh	equ	0xFF4
 50853                           prodl	equ	0xFF3
 50854                           intcon	equ	0xFF2
 50855                           intcon2	equ	0xFF1
 50856                           intcon3	equ	0xFF0
 50857                           indf0	equ	0xFEF
 50858                           postinc0	equ	0xFEE
 50859                           fsr0h	equ	0xFEA
 50860                           fsr0l	equ	0xFE9
 50861                           wreg	equ	0xFE8
 50862                           indf1	equ	0xFE7
 50863                           postinc1	equ	0xFE6
 50864                           postdec1	equ	0xFE5
 50865                           plusw1	equ	0xFE3
 50866                           fsr1h	equ	0xFE2
 50867                           fsr1l	equ	0xFE1
 50868                           indf2	equ	0xFDF
 50869                           postinc2	equ	0xFDE
 50870                           postdec2	equ	0xFDD
 50871                           plusw2	equ	0xFDB
 50872                           fsr2h	equ	0xFDA
 50873                           fsr2l	equ	0xFD9
 50874                           status	equ	0xFD8
 50875                           
 50876                           	psect	text251
 50877  000000                     __ptext251:
 50878                           	opt stack 0
 50879                           tosu	equ	0xFFF
 50880                           tosh	equ	0xFFE
 50881                           tosl	equ	0xFFD
 50882                           pclatu	equ	0xFFB
 50883                           pclath	equ	0xFFA
 50884                           tblptru	equ	0xFF8
 50885                           tblptrh	equ	0xFF7
 50886                           tblptrl	equ	0xFF6
 50887                           tablat	equ	0xFF5
 50888                           prodh	equ	0xFF4
 50889                           prodl	equ	0xFF3
 50890                           intcon	equ	0xFF2
 50891                           intcon2	equ	0xFF1
 50892                           intcon3	equ	0xFF0
 50893                           indf0	equ	0xFEF
 50894                           postinc0	equ	0xFEE
 50895                           fsr0h	equ	0xFEA
 50896                           fsr0l	equ	0xFE9
 50897                           wreg	equ	0xFE8
 50898                           indf1	equ	0xFE7
 50899                           postinc1	equ	0xFE6
 50900                           postdec1	equ	0xFE5
 50901                           plusw1	equ	0xFE3
 50902                           fsr1h	equ	0xFE2
 50903                           fsr1l	equ	0xFE1
 50904                           indf2	equ	0xFDF
 50905                           postinc2	equ	0xFDE
 50906                           postdec2	equ	0xFDD
 50907                           plusw2	equ	0xFDB
 50908                           fsr2h	equ	0xFDA
 50909                           fsr2l	equ	0xFD9
 50910                           status	equ	0xFD8
 50911                           
 50912                           	psect	rparam
 50913  0000                     tosu	equ	0xFFF
 50914                           tosh	equ	0xFFE
 50915                           tosl	equ	0xFFD
 50916                           pclatu	equ	0xFFB
 50917                           pclath	equ	0xFFA
 50918                           tblptru	equ	0xFF8
 50919                           tblptrh	equ	0xFF7
 50920                           tblptrl	equ	0xFF6
 50921                           tablat	equ	0xFF5
 50922                           prodh	equ	0xFF4
 50923                           prodl	equ	0xFF3
 50924                           intcon	equ	0xFF2
 50925                           intcon2	equ	0xFF1
 50926                           intcon3	equ	0xFF0
 50927                           indf0	equ	0xFEF
 50928                           postinc0	equ	0xFEE
 50929                           fsr0h	equ	0xFEA
 50930                           fsr0l	equ	0xFE9
 50931                           wreg	equ	0xFE8
 50932                           indf1	equ	0xFE7
 50933                           postinc1	equ	0xFE6
 50934                           postdec1	equ	0xFE5
 50935                           plusw1	equ	0xFE3
 50936                           fsr1h	equ	0xFE2
 50937                           fsr1l	equ	0xFE1
 50938                           indf2	equ	0xFDF
 50939                           postinc2	equ	0xFDE
 50940                           postdec2	equ	0xFDD
 50941                           plusw2	equ	0xFDB
 50942                           fsr2h	equ	0xFDA
 50943                           fsr2l	equ	0xFD9
 50944                           status	equ	0xFD8
 50945                           
 50946                           	psect	temp
 50947  00005F                     btemp:
 50948                           	opt stack 0
 50949  00005F                     	ds	1
 50950  0000                     int$flags	set	btemp
 50951  0000                     wtemp6	set	btemp+1
 50952                           tosu	equ	0xFFF
 50953                           tosh	equ	0xFFE
 50954                           tosl	equ	0xFFD
 50955                           pclatu	equ	0xFFB
 50956                           pclath	equ	0xFFA
 50957                           tblptru	equ	0xFF8
 50958                           tblptrh	equ	0xFF7
 50959                           tblptrl	equ	0xFF6
 50960                           tablat	equ	0xFF5
 50961                           prodh	equ	0xFF4
 50962                           prodl	equ	0xFF3
 50963                           intcon	equ	0xFF2
 50964                           intcon2	equ	0xFF1
 50965                           intcon3	equ	0xFF0
 50966                           indf0	equ	0xFEF
 50967                           postinc0	equ	0xFEE
 50968                           fsr0h	equ	0xFEA
 50969                           fsr0l	equ	0xFE9
 50970                           wreg	equ	0xFE8
 50971                           indf1	equ	0xFE7
 50972                           postinc1	equ	0xFE6
 50973                           postdec1	equ	0xFE5
 50974                           plusw1	equ	0xFE3
 50975                           fsr1h	equ	0xFE2
 50976                           fsr1l	equ	0xFE1
 50977                           indf2	equ	0xFDF
 50978                           postinc2	equ	0xFDE
 50979                           postdec2	equ	0xFDD
 50980                           plusw2	equ	0xFDB
 50981                           fsr2h	equ	0xFDA
 50982                           fsr2l	equ	0xFD9
 50983                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      94
    BANK0           160    147     160
    BANK1           256    211     256
    BANK2           256      0     252
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK0[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK0[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2729	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2695	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2694	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2641	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2640	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2272$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2272$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2272$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2272$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2272$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S2272$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2272$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2272$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S142$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S132$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S132$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S108$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S108$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S108$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S108$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_log_write_to_disk
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_correct_day->__number_of_days
    _system_init->_i2c_eeprom_read_calibration
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_i2c_eeprom_read
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bdc_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bdc_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bdc_to_decimal
    _rtcc_get_month_decimal->__rtcc_bdc_to_decimal
    _rtcc_get_day_decimal->__rtcc_bdc_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bdc_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___altoft->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  466711
                                            145 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   29573
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2538
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2562
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2562
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2584
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   19327
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     176
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1430
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1430
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     271
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     181
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   17545
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0    4303
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     6     6      0    4303
                                             25 BANK0      6     6      0
                    _i2c_eeprom_read
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     113
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      66
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    5739
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4008
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1278
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    7319
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    7319
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    2786
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    2787
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    2786
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    2787
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  195920
                                            112 BANK0     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    5922
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2     791
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4     844
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     226
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   81960
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    7752
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4    8731
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    7660
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4   99174
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   21884
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   22508
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   21504
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2     999
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     433
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     433
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    7570
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    7771
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    7883
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    7884
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0    9322
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bdc_to_decimal                                 3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    4724
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    4328
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    3622
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    3599
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3319
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     113
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3966
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     890
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3076
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    2584
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   38823
                                            114 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     459
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    1902
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    6918
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     482
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    6918
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 66    66      0   14681
                                             48 BANK0     66    66      0
                            ___aldiv
                           ___altoft
                            ___fttol
                             ___lmul
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     341
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3005
                                             14 BANK0     10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2778
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1546
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    7261
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6458
                                             24 BANK0     24    19      5
                            ___fttol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     179
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    1854
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   15342
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    6235
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0      90
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0    9107
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    3306
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     646
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     135
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2035
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1942
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    3408
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2736
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  115612
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  115612
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  109210
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   55356
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53650
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   23835
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15061
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   14716
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16476
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7894
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    7613
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    7391
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2335
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8     888
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   17596
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    3552
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    3442
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3298
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2448
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     618
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0      89
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     691
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     112
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      26
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     382
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     382
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     222
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    3536
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    3536
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    3536
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    4603
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  18    18      0   54622
                                             31 COMRAM    18    18      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___fttol
       ___lmul
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bdc_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bdc_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bdc_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4B1      31        0.0%
DATA                 0      0     6B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jul 09 23:41:42 2018

                rtcc_get_year_decimal@bcd_year 0063                                   ___altoft@exp 0076  
                                   _USB_SD_Ptr 9327                       fat_create_file@extension 009D  
       __end_of_i2c_display_send_init_sequence 258C        __size_of_i2c_display_send_init_sequence 002E  
               _i2c_display_send_init_sequence 255E                            __system_timer0_init 21BA  
                      rtcc_set_minutes@minutes 0060                                  ___altoft@sign 0077  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit D65A  
                           _USBCheckHIDRequest F51C                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day 283C  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init E9C8                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 0010           USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                  __display_efficiency@battery 00CD                                            l151 D708  
                                          l208 24C4                                            l209 24C2  
                                          l147 D6A4                                            l149 D6CC  
                  __end_of_USBStdGetDscHandler DCB6                                            l190 E880  
                                ?_i2c_adc_read 0065                                            l186 E7D8  
                                          l194 E60E                                            l188 E802  
                                          l700 D108                                            l612 DD32  
                                          l710 BB3A                                            l630 16C8  
                                          l606 C6F6                                            l623 16D0  
                                          l704 BD3E                                            l712 BB62  
                                          l640 A31C                                            l624 1696  
                                          l616 DDDE                                            l713 BBAA  
                                          l705 BA90                                            l641 A326  
                                          l617 DDD8                                            l609 C6FC  
                                          l730 EDD6                                            l722 BCF6  
                                          l714 BB84                                            l634 A670  
                                          l650 A4D4                                            l626 16B2  
                                          l707 BD60                                            l723 BD0E  
                                          l715 BBF0                                            l643 A378  
                                          l635 A300                                            l619 DDE2  
                                          l732 EDEA                                            l724 BD26  
                                          l716 BBEC                                            l708 BB36  
                                          l660 A596                                            l644 A438  
                                          l628 16BC                                            l741 EE8A  
                                          l653 A506                                            l645 A442  
                                          l629 16C2                                            l581 C62C  
                                          l901 B4A4                                            l742 EE74  
                                          l718 BC04                                            l670 A61A  
                                          l654 A532                                            l646 A466  
                                          l638 A30E                                            l574 C714  
                                          l582 C612                                            l590 C730  
                                          l910 B584                                            l902 B4CC  
                                          l735 EE24                                            l719 BC86  
                                          l671 A62E                                            l591 C64C  
                                          l583 C5EC                                            l575 C4EA  
                                          l903 B71A                                            l664 A5D2  
                                          l656 A566                                            l648 A494  
                                          l584 C5F4                                            l912 B58A  
                                          l904 B518                                            l681 FF12  
                                          l761 E2A2                                            l753 EE9C  
                                          l665 A5E6                                            l593 C658  
                                          l905 B77E                                            l921 B612  
                                          l770 E2D6                                            l738 EE30  
                                          l690 CFC8                                            l674 A668  
                                          l666 A604                                            l658 A580  
                                          l586 C608                                            l906 B52A  
                                          l771 E2E4                                            l739 EE56  
                                          l691 CFD2                                            l595 C67A  
                                          l579 C50C                                            l931 B702  
                                          l907 B530                                            l772 E2F8  
                                          l692 CFE6                                            l668 A630  
                                          l596 C67E                                            l932 B70A  
                                          l916 B5CC                                            l908 B570  
                                          _BDT 000D00                                            l773 E306  
                                          l757 EEAC                                            l685 D120  
                                          l669 A60A                                            l597 C6A4  
                                          l774 E31A                                            l694 D036  
                                          l686 CF66                                            l950 191C  
                                          l679 FEFC                                            l767 E364  
                                          l775 E356                                            l695 D060  
                                          l927 B666                                            l768 E2CE  
                                          l688 D144                                            l696 D08E  
                                          l952 1928                                            l928 B66C  
                                          l697 D0A0                                            l689 CFBC  
                                          l929 B6F2                                            l698 D0A6  
                __size_of__sector_from_cluster 0010                                            l699 D0BA  
                                          l956 193A                       __display_time@presshours 014E  
                                          l949 1958                                            l958 1946  
                                          l899 B482                                            _LBA 01D9  
                    _buck_remote_get_dutycycle 2E0A                                            _PR2 000FCB  
                     __display_time@pressmonth 013C                                            _LUN 02BF  
                                          _UIE 000F36                                            _UIR 000F62  
                         _i2c_digipot_reset_on 27CA                  __size_of_rtcc_decrement_hours 0022  
           system_calculate_output_voltage@tmp 0070                     __end_of_buck_get_dutycycle 2E1C  
                     ??_rtcc_increment_minutes 0068                  __size_of_rtcc_decrement_month 0022  
                     ??_rtcc_increment_seconds 0068                                            _idx 004C  
                                   _USBSuspend 252E                                            _now 029E  
                       __end_of_display_update 0E44                           USBStdSetCfgHandler@i 0018  
                       i2c_eeprom_read@address 0071                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                               _USBDeviceTasks DA32                            ?_USBCheckHIDRequest 0001  
                                 __CFG_IESO$ON 000000                            ?_rtcc_increment_day 0001  
                               _USBDeviceState 005C                               _rtcc_read_eeprom 1EF6  
                                 ?__write_root 0088                            _rtcc_increment_year 28AC  
                      rtcc_set_seconds@seconds 0060                          ??_USBCtrlTrfRxService 0001  
                         __read_fat@fat_sector 0089                       __size_ofi2_USBDeviceInit 0146  
                     USBEnableEndpoint@options 0009                        __buck_initial_dutycycle FDF6  
                            ??_MSDErrorHandler 0068                           ?__system_timer0_init 0001  
                     fat_create_file@root_slot 00AB                    __flash_write_to_buffer@data 0075  
                                         l1111 B0D4                                           l1103 AF1C  
                                         l1112 AFE4                                           l1113 B10A  
                                         l1105 AF3A                                           l1130 1E20  
                                         l1114 B000                                           l2010 96B2  
                                         l1123 1E70                                           l1115 B038  
                                         l2011 968C                                           l1132 1E2C  
                                         l1116 B0CE                                           l2100 CA90  
                                         l1125 1E7C                                           l2101 CA6A  
                                         l2013 9A1A                                           l2005 99EE  
                                         l2021 9750                                           l1150 F1C0  
                                         l1070 ADD4                                           l2110 CB5A  
                                         l2030 97DC                                           l2022 977C  
                                         l2014 96CA                                           l2006 9644  
                                         l1143 F210                                           l1151 F1C8  
                                         l2111 CB2A                                           l2103 CAD2  
                                         l2023 9756                                           l2015 96F6  
                                         l2007 9670                                           l1160 F20A  
                                         l1152 F1D0                                           l1144 F198  
                                         l2104 CAAC                                           l2200 D22A  
                                         l2040 98A4                                           l2032 9844  
                                         l2016 96D0                                           l2008 964A  
                                         l3000 D390                                           l1153 F1D8  
                                         l1081 AFDE                                           l1233 2C90  
                                         l2113 CB36                                           l2201 D204  
                                         l2033 981E                                           l2025 97BE  
                                         l3001 D4B8                                           l1401 2832  
                                         l1170 F0D4                                           l1410 1EC2  
                                         l1154 F1E0                                           l1146 F1A0  
                                         l1090 AE8C                                           l1082 AE24  
                                         l2114 CB42                                           l2106 CAF8  
                                         l2050 9994                                           l2042 98E2  
                                         l2026 9798                                           l2018 9738  
                                         l3002 D45A                                           l1171 F0DE  
                                         l1411 1EC8                                           l1155 F1E8  
                                         l1147 F1A8                                           l2115 CB4E  
                                         l2107 CB08                                           l2203 D286  
                                         l2051 996E                                           l2043 990E  
                                         l2035 985C                                           l2019 9712  
                                         l3003 D47C                                           l1164 F132  
                                         l1180 F128                                           l1172 F0E8  
                                         l1420 1A94                                           l1412 1ECE  
                                         l1156 F1F0                                           l1148 F1B0  
                                         l1076 AFAA                                           l2108 CB18  
                                         l2204 D260                                           l2044 98E8  
                                         l2036 9888                                           l2028 97D6  
                                         l3004 D4B2                                           l1173 F0F0  
                                         l1165 F0AC                                           l1421 1A98  
                                         l1157 F1F8                                           l1149 F1B8  
                                         l1077 ADF0                                           l2053 99D6  
                                         l2037 9862                                           l2029 9802  
                                         l3021 C742                                           l1174 F0F8  
                                         l1510 2DF0                                           l1422 1A9C  
                                         l1406 1ED2                                           l1158 F1FE  
                                         l1094 AEC0                                           l1086 AE58  
                                         l2150 BA52                                           l2206 D2E2  
                                         l2054 99B0                                           l2046 9950  
                                         l3030 C8C6                                           l1191 DEA0  
                                         l1175 F100                                           l1167 F0B6  
                                         l1407 1EB6                                           l1159 F204  
                                         l2143 B8F4                                           l2207 D2BC  
                                         l2047 992A                                           l2039 98CA  
                                         l2071 D5BC                                           l1192 DEA8  
                                         l1184 DE78                                           l1176 F108  
                                         l1168 F0C0                                           l1416 1AA0  
                                         l2152 B978                                           l2144 B8CC  
                                         l2080 D61C                                           l2072 D596  
                                         l1504 2DC8                                           l3024 C7B0  
                                         l1440 DF30                                           l1193 DEB0  
                                         l1185 DDFA                                           l2241 2C42  
                                         l1177 F110                                           l1169 F0CA  
                                         l1417 1A8C                                           l1409 1EBC  
                                         l2161 B9F8                                           l2153 B952  
                                         l2137 B8B0                                           l2049 9968  
                                         l3025 C78A                                           l1433 E054  
                                         l1194 DEB8                                           l2242 2C36  
                                         l1178 F118                                           l1418 1AC2  
                                         l1098 AEF4                                           l2162 B9D2  
                                         l2138 B88A                                           l1522 2DC0  
                                         l1195 DEC0                                           l1187 DE26  
                                         l1179 F120                                           l1419 1A90  
                                         l1099 AEF8                                           l2155 BA6E  
                                         l2075 D604                                           l2067 D566  
                                         l3027 C908                                           l2316 2D86  
                                         l1188 DED0                                           l1196 DEC8  
                                         l1540 102C                                           l2500 0F5E  
                                         l2148 B90E                                           l2180 B38A  
                                         l2076 D5DE                                           l2068 D540  
                                         l1516 2DD4                                           l3028 C828  
                                         l2260 25E4                                           l1189 DE98  
                                         l1533 1072                                           l1541 1030  
                                         l2165 BA38                                           l2157 B9B8  
                                         l2181 B364                                           l2093 C9F8  
                                         l3029 C880                                           l1373 21DA  
                                         l2253 259E                                           l2334 2D78  
                                         l1534 1024                                           l2166 BA12  
                                         l2158 B992                                           l2094 C9D2  
                                         l1374 21C8                                           l1630 E270  
                                         l2247 2C58                                           l1551 1DAA  
                                         l1543 105A                                           l1535 1088  
                                         l1615 0B34                                           l3311 1A36  
                                         l2503 0F6C                                           l2183 B400  
                                         l2079 D642                                           l1375 21EA  
                                         l1631 E212                                           l1391 E998  
                                         l2263 1346                                           l2255 25B6  
                                         l2352 2D6A                                           l2280 2D40  
                                         l2248 2C4C                                           l1552 1D8C  
                                         l1544 104C                                           l1616 0B04  
                                         l3312 1A4A                                           l2504 0F78  
                                         l2520 9F1E                                           l2184 B3DA  
                                         l1376 21D0                                           l1640 A2CE  
                                         l1632 E21A                                           l1624 E166  
                                         l1537 1034                                           l2513 25F2  
                                         l2521 9AC8                                           l2177 B348  
                                         l2097 CA4C                                           l1641 9F3E  
                                         l1633 E222                                           l1801 A8B6  
                                         l2370 2D4E                                           l1546 1050  
                                         l1538 1028                                           l2178 B322  
                                         l2098 CA26                                           l1634 E22A  
                                         l1626 E1EE                                           l2258 25CC  
                                         l1810 A91A                                           l1802 A8C2  
                                         l2603 2AD2                                           l1547 1054  
                                         l2507 0F88                                           l2515 2610  
                                         l2531 9BD4                                           l1643 9FC2  
                                         l1635 E232                                           l1803 A8CC  
                                         l1660 1DE2                                           l2620 28A6  
                                         l2460 FEAC                                           l2524 9B30  
                                         l1652 0490                                           l1396 2B26  
                                         l1644 A044                                           l1628 E242  
                                         l1636 E23A                                           l2268 1372  
                                         l1820 A96A                                           l1804 A8E2  
                   USBConfigureEndpoint@handle 0007                                           l1661 1DC2  
                                         l2613 2C16                                           l2541 9CA0  
                                         l2533 9C00                                           l2197 D1E8  
                                         l1645 A0C6                                           l1557 040E  
                                         l1629 E20A                                           l2269 1376  
                                         l1821 A974                                           l1813 A926  
                                         l2198 D1C2                                           l1646 A148  
                                         l1558 03F0                                           l1822 A982  
                                         l1814 A932                                           l1495 2DF8  
                                         l2471 1284                                           l2463 1250  
                                         l2551 9F0C                                           l2543 9DA8  
                                         l2535 9C38                                           l2527 9B64  
                                         l3263 2344                                           l1647 A1CA  
                                         l1831 A9B8                                           l1815 A93C  
                                         l1807 A8EE                                           l1751 A6DE  
                                         l2632 2628                                           l2608 2C2E  
                                         l1920 CCE2                                           l3520 FFE8  
                                         l1672 0FE8                                           l1680 0FD8  
                                         l3280 BD8A                                           l1648 A24C  
                                         l1744 A9E0                                           l1832 A9C6  
                                         l1824 A98A                                           l1816 A952  
                                         l1808 A8FA                                           l1760 A732  
                                         l1752 A6EC                                           l2633 2632  
                                         l2625 204E                                           l2457 FE16  
                                         l2553 9F16                                           l2545 9DB2  
                                         l2529 9B86                                           l1913 CC56  
                                         l3521 FFDE                                           l1585 1908  
                                         l1681 0FE0                                           l1809 A904  
                                         l1761 A73C                                           l1745 A6BA  
                                         l2634 263E                                           l2298 2D5C  
                                         l2618 289A                                           l2482 FB0E  
                                         l2562 EFCC                                           l1930 CD44  
                                         l1906 1F9A                                           l3362 F926  
                                         l3514 FF8C                                           l1586 18EA  
                                         l3282 BF8C                                           l1834 A9CE  
                                         l1826 A996                                           l1770 A794  
                                         l1762 A74C                                           l1754 A6F4  
                                         l1746 A6CA                                           l2627 2064  
                                         l2459 FE8C                                           l2467 126A  
                                         l2547 9DDE                                           l2539 9C78  
                                         l2475 13F0                                           l1923 CCC6  
                                         l3363 F934                                           l3355 F8AC  
                                         l3515 FF82                                           l1667 26D6  
                                         l1675 0FB0                                           l3283 BF98  
                                         l1827 A9A4                                           l1819 A95E  
                                         l1771 A79E                                           l1755 A6FE  
                                         l1843 EAA0                                           l1851 EA3A  
                                         l2740 06FC                                           l2484 FB66  
                                         l2572 F040                                           l2564 EFF6  
                                         l1924 CCDA                                           l1908 1FA6  
                                         l3364 F94A                                           l3356 F8C4  
                                         l1940 0A74                                           l1676 0FB8  
                                         l3284 BFA8                                           l1836 A9DA  
                                         l1780 A7F0                                           l1772 A7AE  
                                         l1764 A754                                           l1756 A708  
                                         l1748 A6D2                                           l1852 EA5A  
                                         l1844 E9CA                                           l2813 1986  
                                         l2805 1C8A                                           l2549 9E04  
                                         l2477 1414                                           l2557 F088  
                                         l2573 F054                                           l1925 CD3A  
                                         l1917 CC2E                                           l3517 FFC0  
                                         l1941 0A7E                                           l1677 0FC0  
                                         l3285 BFB8                                           l1829 A9AC  
                                         l1781 A7FA                                           l1765 A766  
                                         l1757 A718                                           l1853 EA90  
                                         l2734 1A1C                                           l2822 2A1E  
                                         l2814 1990                                           l2806 1C94  
                                         l2566 F008                                           l2558 EFB4  
                                         l2590 17C0                                           l3630 2090  
                                         l1926 CCF4                                           l1918 CC4C  
                                         l3358 F8F2                                           l3518 FFAA  
                                         l3622 ED96                                           l3614 ECFA  
                                         l1942 0A84                                           l1678 0FC8  
                                         l3286 BFC8                                           l3470 077E  
                                         l1782 A80A                                           l1774 A7B6  
                                         l1766 A770                                           l2743 0732  
                                         l2671 080E                                           l2495 0F9C  
                                         l2487 FB88                                           l2575 F070  
                                         l2567 F014                                           l2591 17C8  
                                         l1927 CD38                                           l3359 F8E6  
                                         l3623 ED8A                                           l1935 0A96  
                                         l1943 0A8A                                           l1679 0FD0  
                                         l3287 BFD8                                           l3471 0776  
                                         l1791 A85E                                           l1775 A7C2  
                                         l1767 A780                                           l1759 A720  
                                         l1847 E9E8                                           l2752 0294  
                                         l2672 07FE                                           l2664 07E6  
                                         l2496 0F3E                                           l3384 0E74  
                                         l3616 ED72                                           l1960 CE3A  
                                         l1944 0A90                                           l1936 0A5E  
                                         l3288 BFE8                                           l2760 10C0  
                                         l1792 A86A                                           l1784 A812  
                                         l1776 A7CC                                           l1848 E9FC  
                                         l2673 081E                                           l2665 07C6  
                                         l2489 FBA4                                           l2569 F02E  
                                         l2593 1800                                           l2585 17F4  
                                         l3721 1B68                                           l1929 CD74  
                                         l3385 0E68                                           l3625 EDB2  
                                         l3617 ED62                                           l3289 BFF8  
                                         l2761 10E4                                           l1793 A878  
                                         l1785 A822                                           l1777 A7DC  
                                         l1769 A788                                           l1849 EA12  
                                         l2674 0806                                           l2498 0F4A  
                                         l2578 F082                                           l2586 17EE  
                                         l3722 1B72                                           l3634 001A  
                                         l1962 CEA2                                           l1938 0A64  
                                         l2930 0C68                                           l3474 079E  
                                         l3298 1152                                           l1786 A82E  
                                         l2771 1CF0                                           l2659 2D9E  
                                         l2667 07CE                                           l2587 17D2  
                                         l3731 20DE                                           l1963 CE7C  
                                         l1939 0A6E                                           l3475 07A8  
                                         l3467 0750                                           l1795 A880  
                                         l1787 A83C                                           l1779 A7E4  
                                         l2676 0820                                           l2668 07D6  
                                         l2588 17BC                                           l3732 20E8  
                                         l3636 0056                                           l1956 CE1E  
                                         l2932 0CD0                                           l2940 276E  
                                         l3476 07B6                                           l3468 0760  
                                         l1796 A88A                                           l3741 1680  
                                         l2749 0256                                           l2669 07E0  
                                         l2589 17E6                                           l3717 1B48  
                                         l3637 0098                                           l1965 CF18  
                                         l1957 CDF8                                           l1797 A894  
                                         l1789 A844                                           l3742 1646  
                                         l3718 1B40                                           l1966 CEF2  
                                         l2950 059A                                           l1798 A8AA  
                                         l2791 0D4C                                           l3727 20C6  
                                         l1959 CE60                                           l2768 1D08  
                                         l3664 08FC                                           l3728 20BE  
                                         l2769 1CC8                                           l3665 08F0  
                                         l2953 05FE                                           l2786 0CEA  
                                         l2946 0DB8                                           l2778 1878  
                                         l2938 275C                                           l2787 0CF4  
                                         l2891 23E8                                           l3747 251A  
                                         l2779 1882                                           l3748 2508  
                                         l3668 0930                                           l2789 0D2C  
                                         l3669 093E                                           l2887 241C  
                                         l2991 FA0E                                           l3880 0B5A  
                                         l3873 2248                                           l3881 0BB2  
                                         l2985 F9B6                                           l3874 2242  
                                         l2997 D330                                           l3879 0BBC  
                                         l2999 D342                          ??i2_SYSTEM_Initialize 0001  
                                         STR_1 9478                 __fill_buffer_get_display1@cntr 0065  
                                         STR_9 9463                 __fill_buffer_get_display1@line 0066  
               __fill_buffer_get_display2@cntr 0065                 __fill_buffer_get_display2@line 0066  
                                _i2c_frequency 01F0                          ??_USBCtrlTrfTxService 0001  
                                         u8400 E28E                                           u9210 BCC2  
                                         u9028 D010                                           u9220 BCC4  
                                         u9108 BAF0                                           u9029 D024  
                                         u8165 0D00                                           u9109 BB04  
                                         u8255 199C                                           _UCFG 000F39  
                                         u8275 0ED8                                           u9340 1454  
                                         u9500 20CA                                           _UEP0 000F26  
                                         u9085 BAB8                                           _UEP1 000F27  
                                         u9350 1462                                           u9238 BCD0  
                             ?_fat_create_file 009B                                           u9239 BCE4  
                                         u9360 1470                                           u8800 EEA8  
                                         u9168 BBBA                                           u9169 BBCE  
                                         u9370 147E                                           u8730 EE70  
                                         _UEIE 000F37                                           u9380 148C  
                                         u9348 1458                                           u9390 1498  
                                         u9358 1466                                           u8830 2418  
                                         u9470 1B4C                                           u9368 1474  
                                         u8760 EE86                                           u8840 23E4  
                                         u9378 1482                                           u9396 149A  
                                         u9388 1490                                           u8780 EE98  
                                         u8950 1668                                           _UEIR 000F63  
                                         _UCON 000F65                                           u8957 165E  
                                         u8975 CF8E                                           _TMR2 000FCC  
                                         u9990 A48E                                           u9958 A388  
                                         u9959 A39C                                           u9968 A3BC  
                                         u9969 A3D0                                 ?_i2c_adc_start 006A  
                  __size_ofi2_USBStallEndpoint 0108                          _i2c_digipot_reset_off 27F0  
           __fill_buffer_get_display1@position 0067                           _system_output_toggle 2816  
                       __size_of_adc_calibrate 000C                                 ??_buck_operate 007E  
                               _ResetSenseData 14AC         USBStdFeatureReqHandler@current_ep_data 001B  
                       ?__update_modified_time 006D                                           _pDst 01E9  
                                         _main B470                                           _last 02A2  
                                 ___ftpack@arg 0060                                           _itoa 206A  
                     ??i2_USBTransferOnePacket 0005                     __end_of_fat_append_to_file C956  
                                 ___ftpack@exp 0063                    __size_of_APP_DeviceMSDTasks 0012  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                      __end_of_display_prepare 0AD6                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                              _USBDeviceAttach 249C                                           btemp 005F  
                                         _utoa 0012             __fill_buffer_get_display2@position 0067  
                   ??_ExternalFlash_SectorRead 0093                                ??_rtcc_get_year 0060  
                         __size_of__buck_start 00C6             __size_of_buck_remote_set_dutycycle 0024  
                 __display_charger@charger_off 0182                        ?_rtcc_get_hours_decimal 0001  
                 ?i2_ExternalFlash_MediaDetect 0001                      _ExternalFlash_MediaDetect 2DDA  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 90A6                __end_of_APP_DeviceMSDInitialize 2D3A  
                        _display_get_character 2644                           ??_USBCheckHIDRequest 0001  
                             ?_MSDWriteHandler 0001                           ??_rtcc_increment_day 0068  
                         _rtcc_increment_hours 2934                 ??_MSDProcessCommandMediaAbsent 00A7  
                   __end_of_USBCheckStdRequest F51C                         ??_USBCtrlTrfOutHandler 0003  
                         ?_rtcc_increment_year 0001                           _rtcc_increment_month 28F0  
                 ??__flash_copy_page_to_buffer 0076                 ?__flash_write_page_from_buffer 0073  
                                 ___param_bank 000000                      __size_of_flash_page_write 0050  
                    ??_USBStdFeatureReqHandler 0018                                   _USBOutHandle 02B4  
                     __end_of__display_charger BA8E                     __size_of_system_output_off 0056  
                              ??_buck_get_mode 0060                __size_of__flash_write_to_buffer 0052  
                     ??_USBStdGetStatusHandler 0001                                   ___fttol@exp1 006E  
                     ??_buck_remote_get_status 0060                                   ___fttol@lval 006A  
                               ?_USBDeviceInit 0001                              __flash_get_status 2434  
      __end_of_system_calculate_output_current E034       __size_of_system_calculate_output_current 0124  
             ?_system_calculate_output_current 0001              ??_system_calculate_output_current 006C  
              _system_calculate_output_current DF10                           __buck_set_sync_async 0F38  
              __flash_spi_tx_tx@command_length 0062                     __end_of_rtcc_decrement_day 2888  
                     _system_ui_inactive_count 02B2                             _buck_remote_enable 01ED  
                   __buck_initial_dutycycle@dc 006E                                  __CFG_PLLDIV$2 000000  
                              ??_rtcc_set_year 0060                  i2c_display_write_fixed@length 0067  
                                        l13112 0B5A                                          l11524 EE30  
                       ?_i2c_digipot_backlight 0001                                          l12318 A45E  
                                        l14212 C504                                          l11718 1646  
                                        l14126 2508                                          l15032 1F92  
                                        l14414 1E24                                          l14262 C62C  
                                        l15038 1F9E                                          l14408 1E18  
                                        l16120 1928                                          l13712 140C  
                                        l13624 CBC6                                          l11796 D11A  
                                        l11884 BD38                                          l16124 1946  
                                        l13724 FB06                                          l13644 CC70  
                                        l14390 1E74                                          l13902 F96A  
                                        l14384 1E68                                          l15520 9B7E  
                                        l15506 9B28                      __buck_set_sync_async@mode 0063  
                                        l13908 F97E                                          l14636 E15E  
                                        l13944 FA20                                          l13864 05FE  
                                        l13776 1092                                          l13794 2754  
                                        l13866 0602                                 ??_i2c_adc_read 0067  
                                        l15726 D47C                                          l15592 9E04  
                                        l14768 0488                                          l15754 C78A  
                                        l15940 D69C                                          l15968 D700  
                              __end_of___aldiv F95C                             ?__flash_get_status 006C  
                                        ?_main 0001                  rtcc_increment_minutes@minutes 0068  
                                        ?_itoa 0070                                __end_of___awdiv 07C0  
                                        STR_10 946F                                          STR_11 9481  
                                        STR_12 9456                          ?_i2c_digipot_reset_on 0001  
                             ??__display_clear 0060              __size_of_USBCtrlEPServiceComplete 0100  
                           _buck_remote_set_on 2C1C                          rtcc_decrement_day@day 0068  
                              __end_of___lldiv 0950                                          u10100 A638  
                                        ?_utoa 0067                                          u10008 A4B0  
                                        u10009 A4C4               MSDCheckForErrorCases@DeviceBytes 006A  
                                        u10210 127A                                          u10060 A5AA  
                                        u10070 A5BC                                          u10310 0900  
                                        u11200 2048                                          u11210 205E  
                                        u10180 1260                                          u11134 DDA8  
                                        u11118 DD72                                          u11070 DCF8  
                                        u11310 CBDA                                          u11135 DDA2  
                                        u11119 DD88                                          u11320 CC50  
                                        u10600 1342                                          u10265 188E  
                                        u10505 1BE2                                          u11058 DCC6  
                                        u12130 C4FE                                          u11059 DCDA  
                                        u11084 DD10                                          u13100 CDE6  
                              ___awdiv@divisor 0062                                          u11085 DD0A  
                                        u11094 DD4A                                          u12150 C534  
                                        u11350 CC84                                          u11095 DD44  
                                        u12320 C6D6                                          u10640 FE7C  
                                        u11440 FB4A                                          u11360 CCDE  
                                        u13200 950C                         __end_of_USBDeviceTasks DB76  
                                        u13210 9528                                          u10810 0B80  
                                        u13060 1FD2                                          u13220 9544  
                                        u12500 04B4                                          u10485 0AE4  
                              __end_of___fttol EDC4                                          u10725 11F8  
                                        u12350 1EA4                                          u13230 9560  
                                        u10735 1214                                          u14040 9BBA  
                                        u10840 FF74                                          u13080 CD90  
                                        u13240 957C                                          u13160 949C  
                                        u11560 2774                                          u11720 FA1A  
                                        u11800 235C                                          u10745 139E  
                                        u15010 AED6                                          u13090 CDAC  
                                        u13250 9598                                          u13170 94B8  
                                        u11730 FA20                                          u10755 13BA  
                                        u14140 9DF0                                          u13260 95B4  
                                        u13180 94D4                                          u13500 D5D2  
                                        u10940 0782                                          u11645 171E  
                                        u12390 1E54                                          u15030 AF0E  
                                        u14070 9C12                                          u13270 95D0  
                                        u13190 94F0                                          u11590 0DC0  
                                        u10790 0CCC                                          u15110 DF24  
                                        u11911 ECDE                                          u11655 177A  
                                        u10775 0C8E                                          u12471 2568  
                                        u14080 9C2C                                          u10880 FFF2  
                                        u13600 CA62                                          u13280 95EC  
                                        u13440 D4DA                                          u15120 E00E  
                                        u11745 D7EA                                          u14090 9C6C  
                                        u11930 ED18                                          u13290 9608  
                                        u13450 D4F6                                          u11755 D81C  
                                        u15060 AF50                                          u13700 B7EC  
                                        u11860 F8F6                                          u13540 C96C  
                                        u13460 D512                                          u11765 D84E  
                                        u15125 E004                                          u13710 B808  
                                        u13550 C988                                          u13470 D52E  
                                        u16007 0808                                          u11935 ED10  
                                        u11775 D880                                          u14440 D6C0  
                                        u13720 B824                                          u13560 C9A4  
                                        u14280 D360                                          u15240 E048  
                                        u15080 F332                                          u16017 1CE4  
                                        u11785 D8A8                                          u13730 B840  
                                        u11970 ED9C                                          u13570 C9C0  
                                        u13490 D58E                                          u14290 D38C  
                                        u15250 E132                                          u15090 F414  
                    ?_USBCtrlEPServiceComplete 0001                                          u16027 1CF4  
                                        u13740 B85C                                          u13900 D15C  
                                        u15500 B5D2                                          u16037 1CFE  
                                        u14285 D356                                          u15085 F328  
                                        u14470 D764                                          u13750 B878  
                                        u13670 B798                                          u13910 D178  
                                        u15255 E128                                          u15095 F40A  
                                        u13680 B7B4                                          u13840 B142  
                                        u13920 D194                                          u15520 B634  
                                        u15290 EF8C                                          u13690 B7D0  
                                        u13850 B15E                                          u13930 D1B0  
                                        u13860 B17A                                          u15540 B700  
                                        u15460 B49E                                          u13790 B94C  
                                        u14830 EA24                                          u15295 EF82  
                                        u14761 E8CE                                          u14930 AE06  
                                        u14771 E8F0                                          u14781 E912  
                                        u14950 AE3A                                          u14970 AE6E  
                                        u14990 AEA2                                __end_of___lwdiv 1B7C  
                 __flash_write_to_buffer@start 0073                                          u15997 0800  
                              __end_of___lwmod 20F2                                          i2l300 00D8  
                                        i2l301 00DE                                          i2l302 00FC  
                                        i2l222 01B6                                          i2l310 2130  
                                        i2l151 D994                                          i2l216 FBF8  
                                        i2l224 01D2                                          i2l233 EC4A  
                                        i2l161 DA76                                          i2l234 EBF2  
                                        i2l162 DA82                                          i2l251 F844  
                                        i2l323 0324                                          i2l147 D932  
                                        i2l171 DB0C                                          i2l252 F80A  
                                        i2l228 0554                                          i2l324 031E  
                                        i2l164 DAA8                                          i2l181 22C4  
                                        i2l309 2132                                          i2l317 23C0  
                                        i2l149 D95A                                          i2l157 DA48  
                                        i2l342 FD6E                                          i2l262 E3DC  
                                        i2l334 15E0                                          i2l182 22D2  
                                        i2l190 EB88                                          i2l430 F57C  
                                        i2l238 EC74                                          i2l318 23BE  
                                        i2l174 DB32                                          i2l166 DABC  
                                        i2l158 DA58                                          i2l255 F886  
                                        i2l247 F7D6                                          i2l343 FD72  
                                        i2l263 E3BA                                          i2l431 F556  
                                        i2l167 DAC8                                          i2l159 DA60  
                                        i2l256 F84C                                          i2l344 FDEC  
                                        i2l336 162C                                          i2l440 F5B0  
                                        i2l360 F454                                          i2l176 DB52  
                                        i2l168 DAF0                                          i2l249 F7E0  
                                        i2l345 FDB2                                          i2l265 E452  
                                        i2l441 F5C8                                          i2l361 F45A  
                                        i2l169 DAFA                                          i2l266 E438  
                                        i2l186 EAE0                                          i2l194 E716  
                                        i2l434 F5D4                                          i2l282 DC9E  
                                        i2l274 F648                                          i2l362 F460  
                                        i2l178 DB6E                                          i2l347 FDD2  
                                        i2l427 F56A                                          i2l291 DC96  
                                        i2l283 DB88                                          i2l363 F474  
                                        i2l188 EB0A                                          i2l428 F538  
                                        i2l276 F6BA                                          i2l364 F47A  
                                        i2l541 E59C                                          i2l381 C0FE  
                                        i2l285 DB9C                                          i2l357 F4D8  
                                        i2l438 F58C                                          i2l550 FC8A  
                                        i2l390 C250                                          i2l374 C026  
                                        i2l286 DC2E                                          i2l366 F480  
                                        i2l358 F44A                                          i2l439 F5A4  
                                        i2l383 C17E                                          i2l375 C02A  
                                        i2l295 0138                                          i2l367 F49E  
                                        i2l288 DC36                                          i2l296 00C8  
                                        i2l368 F4BA                                          i2l393 C20A  
                                        i2l385 C148                                          i2l377 C094  
                                        i2l289 DC8E                                          i2l538 E5A4  
                                        i2l554 FCF0                                          i2l386 C164  
                                        i2l539 E510                                          i2l395 C25C  
                                        i2l379 C0DC                                          i2l299 014E  
                                        i2l388 C1CA                                          i2l549 FD26  
                                        i2l389 C1D6                                          i2l566 FCF8  
                                        i2l830 0858                                          i2l824 087A  
                                        i2l832 0862                          rtcc_write_eeprom@date 0085  
                                        i2l834 086C                               ??__display_inout 0090  
                                        i2l828 0848                                          i2l829 0850  
                                        i2l950 1B80                                          i2l784 1AF0  
                                        i2l952 1B8A                                          _UADDR 000F38  
                                        i2l787 1B26                                          i2l956 1B9C  
                              ___awdiv@counter 0064                                          i2l949 1BBA  
                                        i2l958 1BA8                                          _TMR0H 000FD7  
                                        _TMR1H 000FCF                                          _TMR0L 000FD6  
                                        _TMR1L 000FCE        __end_of_system_calculate_output_voltage F358  
     __size_of_system_calculate_output_voltage 00E2               ?_system_calculate_output_voltage 0001  
            ??_system_calculate_output_voltage 006C                _system_calculate_output_voltage F276  
                                        _RPOR5 000EC5                                          _RPOR6 000EC6  
                                        _USTAT 000F64                               __i2c_read@length 0067  
                  ?_ExternalFlash_CapacityRead 0060                                ?_display_update 0001  
                       ??__rtcc_bdc_to_decimal 0060             __size_of_USBCtrlEPAllowStatusStage 00C6  
                              _i2c_eeprom_read 1BD0                            ___lmul@multiplicand 0064  
                     __end_of__display_outputs CB78                                ??_flash_is_busy 0071  
                             __end_of_MSDTasks C734                                     i2memcpy@d1 0001  
                               __CFG_FCMEN$OFF 000000                                __read_fat@value 008D  
                           _USBCheckMSDRequest FC76                                     i2memcpy@s1 0003  
                       ??__buck_operate_remote 0076                __end_of_USBCtrlEPAllowDataStage 0204  
                        __get_dateTime@minutes 0072                                          _sd000 9452  
                                        _sd001 937B                                          _sd002 93AF  
                                        _sd003 941E                          __get_dateTime@seconds 0073  
               ?_USBIncrement1msInternalTimers 0001                    log_generate_entry@log_entry 0078  
               __size_of_MSDTransferTerminated 0056                            ??__flash_get_status 006E  
                        _rtcc_get_year_decimal 2CDA            i2c_display_send_init_sequence@F8360 03ED  
                __end_of_MSDTransferTerminated 1B28                                   _gblCBWLength 01F3  
                          ?_buck_remote_set_on 0001                                     i2memset@p1 0001  
                       ?_MSDCheckForErrorCases 006A                          ??__system_timer0_init 0060  
                        __buck_start@dutycycle 0072              __size_of_rtcc_get_minutes_decimal 0010  
                            ?__flash_spi_tx_rx 0060                              ?__flash_spi_tx_tx 0060  
                    ?_rtcc_get_minutes_decimal 0001                          i2USBStallEndpoint@dir 0001  
                       __end_of_ResetSenseData 150E                                  ___ftpack@sign 0064  
                     __get_empty_cluster@value 008D                    rtcc_get_day_decimal@bcd_day 0063  
                   __end_of__display_usb@F8720 925B                     __end_of__display_usb@F8722 924B  
                   __end_of__display_usb@F8724 921B                     __end_of__display_usb@F8718 913B  
                   ?_log_get_number_of_samples 0060                       __parse_command_long@data 0063  
                             ??_rtcc_get_hours 0060                          ?_system_output_toggle 0001  
                rtcc_increment_seconds@seconds 0068                               ??_rtcc_get_month 0060  
            system_calculate_input_current@tmp 0070                                          pclath 000FFA  
                           ??__flash_spi_tx_rx 0068                             ??__flash_spi_tx_tx 0068  
                              __end_of_ui_init 2C74                                          tablat 000FF5  
                    __size_of_USBStallEndpoint 010A                            ?_USBCheckMSDRequest 0001  
                              _MSDCommandState 0053               __display_charger@charger_startup 0172  
                  ??_ExternalFlash_SectorWrite 008D                                          plusw1 000FE3  
                                        plusw2 000FDB                  __display_charger@charger_sync 0139  
               __end_of_rtcc_get_hours_decimal 2CDA                                __end_of_tmr_isr 03CA  
                                  ?_USBMSDInit 0001       ExternalFlash_WriteProtectStateGet@config 0060  
                __size_of__system_encoder_init 003E                                          utoa@c 006F  
                              __number_of_days 1312                                          utoa@v 006D  
                                        status 000FD8                    ?__flash_copy_page_to_buffer 0073  
                            __CFG_DSWDTPS$8192 000000                                          wtemp6 0060  
                     __end_ofi2_ResetSenseData 15D2                                __end_of_strncmp 0BD8  
              ??__fill_buffer_get_calibration1 006B                ??__fill_buffer_get_calibration2 006B  
                             __end_ofi2_memcpy 1862                    __end_of__display_efficiency B470  
                             __end_ofi2_memset 274E                 __display_temperature@external1 00A4  
               __display_temperature@external2 00B0                 ??_MSDComputeDeviceInAndResidue 0062  
                     __ic2_display_set_address 26F6                              __buck_timer2_init 2B5C  
                               _MSDReadHandler CF64                          ?_rtcc_increment_hours 0001  
                        ??_rtcc_increment_year 0068                          ?_rtcc_increment_month 0001  
                        __size_of__display_usb 0192              __end_of_buck_remote_set_dutycycle 28AC  
            __size_of_rtcc_get_seconds_decimal 0010                        __CFG_DSWDTOSC$INTOSCREF 000000  
                 __size_of_USBStdSetCfgHandler 00DE              fat_create_file@number_of_clusters 00AC  
                         flash_page_write@data 0081                  ??i2_ExternalFlash_MediaDetect 0003  
              __size_of_fat_get_empty_clusters 0092                      ?_rtcc_get_seconds_decimal 0001  
                         flash_page_write@page 007F                       __end_of_log_collect_data C002  
                              __initialization FA24                    __display_temperature@header 0090  
                         ??_buck_remote_set_on 0060                             ?__buck_timer2_init 0001  
                    __end_of__flash_get_status 2468        __end_ofi2_ExternalFlash_MediaInitialize 2B44  
     __size_ofi2_ExternalFlash_MediaInitialize 001A          __end_of_ExternalFlash_MediaInitialize 2A44  
       __size_of_ExternalFlash_MediaInitialize 0022              ??i2_ExternalFlash_MediaInitialize 0003  
             ?i2_ExternalFlash_MediaInitialize 0001                i2_ExternalFlash_MediaInitialize 2B2A  
                _ExternalFlash_MediaInitialize 2A22                                    _system_init E8C4  
               __size_of_system_encoder_enable 0010                                   __end_of_main B786  
                                 __end_of_itoa 20AE                  __end_of_system_encoder_enable 2CAA  
                             _rtcc_set_minutes 2BBC                   __size_of__rtcc_increment_bcd 002E  
                             _rtcc_set_seconds 2B8C                __end_of_i2c_display_write_fixed 1916  
                                 __end_of_utoa 00BC                    ??__fill_buffer_get_display1 0064  
                  ??__fill_buffer_get_display2 0064                       __parse_command_short@cmd 008B  
                        ?__buck_set_sync_async 0062                               __end_of_i2c_init 2D9A  
                  __end_of__rtcc_decrement_bcd 25E8                       __end_of__i2c_acknowledge 2DDA  
                                ??__i2c_open_1 0060                     __end_of__get_empty_cluster 0DCA  
                                _adc_calibrate 2D9A                           ??_USBCheckMSDRequest 000C  
                               __CFG_OSC$HSPLL 000000         MSDComputeDeviceInAndResidue@DiExpected 0060  
                      _USBCheckMSDRequest$2640 000C                        _USBCheckMSDRequest$2641 000E  
                        system_init@appendtext 0100                      __size_of_USBCtrlEPService 0098  
                          ??__buck_timer2_init 0060                                         ??_main 00F1  
                                ___fttol@sign1 0069                               __end_of__i2c_get 2DD0  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0394                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 0001  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 2E20  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 2E1C  
                                  ?_USBSuspend 0001    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year 2978                __size_of_rtcc_increment_minutes 0022  
              __size_of_rtcc_increment_seconds 0022                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes 2D72                       __end_of_rtcc_get_seconds 2D56  
                  __size_of__write_calibration 0094                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach 24CE                         __flash_write_to_buffer 1C74  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                             __end_of___altoft 0EBE                         __get_dateTime@datetime 0074  
                                       _ADRESH 000FC4                                         _ADRESL 000FC3  
                                       _CCPR1L 000FBB                                         _EECON2 000FA7  
                                       _DMABCH 000F66                                         _DMABCL 000F67  
                             ___awdiv@dividend 0060                         ?_i2c_digipot_reset_off 0001  
                              ?_ResetSenseData 0001                    ??__get_available_root_entry 008E  
                             __end_of___ftpack 0012                                     __i2c_start 2DF6  
                       SYSTEM_Initialize@state 0064                                     __i2c_write 1D68  
                                 __display_usb D4C8                               __end_of_adc_init 2ABE  
                             __end_of_adc_read 0846                                         i2l1330 038C  
                                       i2l1322 03A2                                         i2l1331 0376  
                                       i2l1332 03A0                                         i2l1324 035A  
                                       i2l1333 037C                                         i2l1325 0342  
                                       i2l1334 0382                                         i2l1326 036E  
                                       i2l1335 03AC                                         i2l1327 0348  
                                       i2l1336 03BA                                         i2l1328 0350  
                                       i2l1337 03B8                                         i2l1339 03C6  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
                                       i2l3741 1850                                         i2l3742 1818  
                                       i2l3747 273C                                         i2l3748 272C  
              ??_APP_DeviceCustomHIDInitialize 000D                       ?__fill_buffer_get_status 0001  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init 2B74                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler D14A  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                     i2USBTransferOnePacket@ep 0009                               ??__i2c_wait_idle 0060  
                            ??i2_USBDeviceInit 0009                         ?_display_get_character 0060  
                             ?_display_prepare 0001                __size_ofi2_USBTransferOnePacket 0102  
                              __read_root@slot 008E                              ?__get_input_power 006E  
                      __write_calibration@addr 0097                    fat_append_to_file@file_size 009F  
                      __write_calibration@cntr 009C                                 __CFG_WPDIS$OFF 000000  
                             __read_fat@offset 008B                               _i2c_eeprom_tasks 0FAE  
                            _shortPacketStatus 005B              fat_append_to_file@number_of_bytes 0091  
                   __get_empty_cluster@cluster 008F                                 __CFG_XINST$OFF 000000  
                             _i2c_eeprom_write 0AD6                             ??__get_input_power 0070  
                              rtcc_set_day@day 0060                   ??__parse_command_calibration 0067  
                              USBDeviceTasks@i 001F                                    i2memcpy@tmp 000B  
                                 _CCPTMRS0bits 000F52                    USBStdFeatureReqHandler@pUEP 0019  
                     USBTransferOnePacket@data 0061                     USBCtrlTrfInHandler@lastDTS 0002  
                 __end_of__flash_set_page_size 10FC                                ??_USBDeviceInit 0068  
           __flash_copy_page_to_buffer@command 0079                       __end_of_rtcc_correct_day 2A64  
                     flash_partial_read@length 0077                                         ___lmul 1A24  
                                       _gblCBW 0241                                      ??___aldiv 0068  
                           __size_of__i2c_read 0094                             __size_of__i2c_send 000A  
                       __size_of__get_dateTime 0146                                      ??___awdiv 0064  
                               __CFG_STVREN$ON 000000                             __size_of__i2c_stop 0008  
                       __size_of__get_checksum 0036                                      ??___lldiv 0068  
                                    ??___fttol 0064    i2SYSTEM_Initialize@pll_startup_counter_3284 0003  
    SYSTEM_Initialize@pll_startup_counter_3284 0062                                      ??___lwdiv 0064  
                 __size_of_flash_partial_write 006C                                 ?_adc_calibrate 0001  
                                   _SoftDetach 01F2                                      ??___lwmod 0064  
                                       _buffer 0800                              _USBEnableEndpoint 22B4  
              __size_of_USBStdGetStatusHandler 00A8                __size_of_buck_remote_get_status 002E  
                      system_output_off@output 0061                                __get_date@month 0069  
                                       _memcpy 1634                     ?_adc_calculate_temperature 006C  
                                       _memset 24FE                        __end_of_i2c_eeprom_read 1C22  
                                       clear_0 FA8C                                         clear_1 FA9E  
                                       clear_2 FAAA                                         clear_3 FAB6  
                                       clear_4 FAC2                                         clear_5 FACE  
                    _ExternalFlash_SectorWrite 23CC                                         clear_6 FADA  
                              __CFG_CLKOEC$OFF 000000                               __end_of_inq_resp 9401  
                             ___awdiv@quotient 0066                         ??_i2c_digipot_reset_on 006A  
                                       _ui_run E9C8                        ?_system_encoder_disable 0001  
                           ?_USBEnableEndpoint 0009                   __size_of__buck_operate_local 0476  
                         __end_of_buck_operate 1806                             _flash_partial_read 0EBE  
                                       _status 01EC                          i2c_display_init@F8363 03E4  
                                       _strlen 2238                        ?_rtcc_decrement_minutes 0001  
                      ?_rtcc_decrement_seconds 0001                         __size_of__buck_prepare 0066  
                       __display_outputs@F8730 922B                         __display_outputs@F8732 90EA  
                       __display_outputs@F8734 90D5                         __display_outputs@F8728 9289  
                __size_of_USBTransferOnePacket 0106                            __size_of_USBMSDInit 010E  
                  i2c_display_write_fixed@data 0065                     __end_of_log_generate_entry ADCC  
  i2c_display_send_init_sequence@init_sequence 006A                         __size_of__flash_wakeup 0052  
                      __write_root@root_sector 008B                                         itoa@cp 0076  
                       __size_of__flash_spi_tx 005A                              _i2c_set_frequency 101E  
                        system_init@extension2 017E                          __end_of_fat_find_file FA24  
       buck_remote_set_synchronous@synchronous 0060                    fat_get_empty_clusters@value 008D  
                       _fat_get_empty_clusters 0586                  __size_of__parse_command_short 00E4  
                       ?_rtcc_get_year_decimal 0001                 __display_charger@charger_async 0124  
          __size_of_get_next_eeprom_write_task 002C                                   __mediumconst 90AA  
                          __end_of__i2c_open_1 2B5C                 i2c_digipot_reset_on@data_array 006A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      __rtcc_decrement_bcd@value 0067  
                                    ??_ui_init 0060                    __end_of__display_time@F8701 91D4  
                  __end_of__display_time@F8703 9163                    __end_of__display_time@F8705 914F  
                  __end_of__display_time@F8707 926B               __size_of_APP_DeviceMSDInitialize 0010  
                  __end_of__display_time@F8681 92A5                    __end_of__display_time@F8683 9317  
                  __end_of__display_time@F8691 92EF                    __end_of__display_time@F8685 930E  
                  __end_of__display_time@F8693 92E3                    __end_of__display_time@F8687 9327  
                  __end_of__display_time@F8695 9177                    __end_of__display_time@F8689 9304  
                  __end_of__display_time@F8697 91E6                    __end_of__display_time@F8699 927B  
              ??__flash_compare_page_to_buffer 0076                            ??_USBEnableEndpoint 000A  
                           ?_i2c_set_frequency 0001              __end_of__display_efficiency@F8761 918A  
            __end_of__display_efficiency@F8763 9289              __end_of__display_efficiency@F8759 919D  
                          ?_flash_partial_read 0073                        __end_of__number_of_days 137A  
                     __size_of_flash_page_read 0028                      __fill_buffer_get_display1 1E58  
                    __fill_buffer_get_display2 1E08                                      ??_tmr_isr 0001  
                   __end_of__root_is_available 0CD4                         ??_system_output_toggle 0062  
                    __size_of_system_output_on 004E                                    _CtrlTrfData 000D38  
         __end_of_buck_remote_change_dutycycle 206A          __size_of_buck_remote_change_dutycycle 004A  
                 _buck_remote_change_dutycycle 2020                                      ??_strncmp 0066  
                         __size_of__write_root 005C             buck_remote_change_dutycycle@change 0060  
                        __end_of_ui_get_status 2E0A             __size_of_buck_remote_get_dutycycle 0006  
                       __display_outputs@line3 0060                         __display_outputs@line4 0075  
            i2ExternalFlash_MediaDetect@config 0001                ExternalFlash_MediaDetect@config 0060  
                         _controlTransferState 005A                     ??_APP_DeviceCustomHIDTasks 008C  
                        __flash_spi_tx_rx@data 0064                           __CFG_LS48MHZ$SYS48X8 000000  
                      ?_rtcc_get_month_decimal 0001                              _SYSTEM_Initialize 1916  
                __size_of__display_temperature 01C8                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization FAE0                                     ___altoft@c 006E  
            MSDCheckForErrorCases@MSDErrorCase 006F                     log_write_to_disk@log_entry 00D1  
                  ?__parse_command_calibration 0063                                ?_MSDReadHandler 0001  
                 __size_of__buck_set_dutycycle 006A                           __end_of_i2c_adc_read 1C74  
                       ??_rtcc_increment_hours 0068                             ?_SYSTEM_Initialize 0001  
                       ??_rtcc_increment_month 0068                         __size_of__display_itoa 0206  
                                ___rparam_used 000001                         __size_of__display_time 0640  
                       _rtcc_increment_minutes 2912                         _rtcc_increment_seconds 28CE  
                     __size_of_USBStallHandler 0044                   __end_of__i2c_not_acknowledge 2DC6  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle FEB0                    __end_of__parse_command_long F192  
                __size_of_rtcc_get_day_decimal 0010                             __size_of__get_date 0068  
                          __size_of_USBSuspend 0030                             __size_of__get_time 006A  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom 1F42                           ??_flash_partial_read 007B  
                                   ___fttol@f1 0060                               _flash_page_write 1D18  
                            ?__get_temperature 006E                                 __pcstackCOMRAM 0001  
                   __size_of__flash_get_status 0034                      __end_of_USBEnableEndpoint 22F0  
                            _log_write_to_disk 10FC                         ??__buck_set_sync_async 0063  
          __size_of_ExternalFlash_CapacityRead 0014                             __rtcc_write_enable 2C34  
                      _battery_voltage_maximum 02ED          __end_of__fill_buffer_get_calibration1 0C58  
       __size_of__fill_buffer_get_calibration1 0080                  __fill_buffer_get_calibration1 0BD8  
        __end_of__fill_buffer_get_calibration2 1570         __size_of__fill_buffer_get_calibration2 0062  
                __fill_buffer_get_calibration2 150E                                  __end_of_sd000 9456  
                                __end_of_sd001 93AF                                  __end_of_sd002 93DD  
                                __end_of_sd003 9438                           buck_remote_set_on@on 0060  
                                    ?_MSDTasks 0001                                   __pidataBANK2 2276  
                                 __pidataBANK3 2ADA                                   __pidataBANK4 12AA  
                          ??_SYSTEM_Initialize 0060                      __get_available_root_entry 274E  
         ExternalFlash_SectorWrite@sector_addr 0086               __size_of_USBCtrlEPAllowDataStage 00A0  
                           __buck_prepare@cntr 0060           __size_of_i2c_eeprom_read_calibration 011E  
                           ??__get_temperature 0070                      rtcc_decrement_hours@hours 0068  
                           __size_of__read_fat 004A                                _active_protocol 01FE  
                          i2USBStallEndpoint@p 0007                             ?_log_write_to_disk 0001  
               __end_of_system_encoder_disable 2E04                  __size_of_USBConfigureEndpoint 0094  
           __size_of_ExternalFlash_MediaDetect 000A                    __end_of_USBCtrlTrfInHandler FDF6  
                 ?_buck_remote_set_synchronous 0001                            _userInterfaceStatus 01EF  
               __end_of_rtcc_decrement_minutes 29DE                 __end_of_rtcc_decrement_seconds 299A  
                          display_prepare@mode 00D4                                   _gblSenseData 0260  
                              _MSDErrorHandler E276                 ?_ExternalFlash_MediaInitialize 0060  
                    __end_of_i2c_set_frequency 108E                            ?__rtcc_write_enable 0001  
                       i2_USBTransferOnePacket EACA                            system_init@filename 0168  
                 __size_of_system_output_is_on 001A                                     __buck_stop 25E8  
                          ??_log_write_to_disk 00D0               fat_get_empty_clusters@fat_sector 0089  
                 buck_remote_set_enable@remote 0060                                      ?i2_memcpy 0001  
                                    ?i2_memset 0001          __end_of_MSDProcessCommandMediaPresent A6B8  
       __size_of_MSDProcessCommandMediaPresent 03BA                  _MSDProcessCommandMediaPresent A2FE  
                       flash_partial_read@data 0079                             __size_of_buck_init 0010  
                       flash_partial_read@page 0073                                  __get_date@day 006A  
              __size_of_buck_remote_set_enable 001C                       ??_USBCtrlTrfSetupHandler 001E  
                      _USBTicksSinceSuspendEnd 01F6                                  __get_dateTime D7A6  
                                __get_checksum 232A              __flash_copy_page_to_buffer@buffer 0075  
                             ?_USBDeviceAttach 0001                      __end_of_SYSTEM_Initialize 1970  
                      ??__update_modified_time 006F                              __end_of__i2c_read 045E  
                 __size_of__rtcc_write_disable 0016                              __end_of__i2c_send 2DEE  
                       _USBStdGetStatusHandler 00BC                 __end_of_rtcc_get_month_decimal 2CFA  
                          USBStallEndpoint@dir 0060                              __end_of__i2c_stop 2DF6  
                       _buck_remote_get_status 2616                                    ?__i2c_start 0001  
                                  ?__i2c_write 0065                                     __pbssBANK0 00F3  
                                   __pbssBANK1 01D3                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0468  
                       __read_root@root_sector 008A                  fat_append_to_file@fat_cluster 00A5  
             __size_of_i2c_display_write_fixed 005A                               _USBStallEndpoint E5AC  
                                   _gblNumBLKS 02AA                  ?_buck_remote_change_dutycycle 0001  
                                    ?_i2c_init 0001                             _buck_get_dutycycle 2E16  
            __end_of_buck_remote_get_dutycycle 2E10                   __end_of__sector_from_cluster 2D1A  
                         ??__rtcc_write_enable 0060                   ??_schedule_eeprom_write_task 0060  
                                   __read_root 174E                     __size_of__buck_timer2_init 0018  
                             _mediaInformation 02BA                   __end_of_rtcc_decrement_hours 2A00  
                 __end_of_rtcc_decrement_month 29BC                                  __buck_prepare 13E2  
                                __flash_wakeup 1CC6                      rtcc_decrement_month@month 0068  
                                __flash_spi_tx 19CA                                      ?__i2c_get 0001  
                  __size_of_USBWakeFromSuspend 0036                                    _pBDTEntryIn 003B  
                    __end_of_log_write_to_disk 116A                    __size_of_i2c_display_cursor 002A  
                   __update_modified_time@root 006D               __end_of_USBCtrlEPServiceComplete ECCC  
        __end_of_APP_DeviceCustomHIDInitialize 249C         __size_of_APP_DeviceCustomHIDInitialize 0034  
                _APP_DeviceCustomHIDInitialize 2468                           log_collect_data@temp 0078  
                  MSDTransferTerminated@handle 000C                            ?_buck_get_dutycycle 0001  
           ExternalFlash_SectorSizeRead@config 0060                           USBCtrlTrfRxService@i 0001  
                              ??_adc_calibrate 0060                         __size_of_log_start_new 00DA  
                                      ?___lmul 0060                                     ??_MSDTasks 00AC  
                       __display_itoa@decimals 007A                        ??_i2c_digipot_backlight 006A  
                      __get_checksum@log_entry 0060                              ?__display_charger 0001  
               __flash_write_to_buffer@command 007A                  rtcc_decrement_minutes@minutes 0068  
                                    MSDTasks@i 00B1                                        _CCP1CON 000FBA  
                         i2c_adc_start@channel 006C                                      ?___altoft 006E  
                                      ?_memcpy 0060                             _fat_append_to_file C734  
                                      ?_memset 0060                                 ___lmul@product 0068  
                                   _device_dsc 9438                               ??_display_update 0070  
                             ?_i2c_eeprom_read 0071                                    __i2c_open_1 2B44  
                                    ?___ftpack 0060                             ??__display_charger 0090  
                             _USBCtrlEPService 029C              system_calculate_input_voltage@tmp 0070  
                                      ?_ui_run 0001                                     _ep_data_in 01E4  
                           __display_clear@col 0063                                      ?_adc_init 0001  
                                    ?_adc_read 0060                             __display_clear@row 0062  
                                      ?_strlen 0060                  fat_append_to_file@file_number 00A9  
               __parse_command_calibration@cmd 0001                  ??_buck_remote_set_synchronous 0060  
                  APP_DeviceCustomHIDTasks@idx 0096               __sector_from_cluster@fat_cluster 0060  
                  __end_of_USBCtrlTrfRxService E49E                                  __display_itoa CB78  
                                __display_time 9486                             _USBCheckStdRequest F43A  
                    __write_calibration@buffer 0087                              _configDescriptor1 933B  
                                      i2l12016 272C                                        i2l11406 F550  
                                      i2l12086 F640                                        i2l11634 1B8A  
                                      i2l14114 1818                                        i2l11638 1BA8  
                                      i2l11686 F7E0                                        i2l16074 DB04  
                                      i2l17420 08C6                                        i2l17418 0892  
                      ??_MSDCheckForErrorCases 006E                                        i2l15868 D92A  
                                      i2l15896 D98C                             __size_of_rtcc_init 001A  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 1BD0  
                                   ??i2_memcpy 0007                         fat_append_to_file@data 0093  
                                   ??i2_memset 0007                                     _flash_init 2136  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService F88E  
                            __end_of__get_date 13E2                            _USBStdSetCfgHandler F5FE  
          __size_of_schedule_eeprom_write_task 0050                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 1240  
                            ?__display_outputs 0001                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 0001                     __end_ofi2_USBStallEndpoint E7BE  
                           _rtcc_decrement_day 2862                            __rtcc_increment_bcd 258C  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes 2BD4                       __end_of_rtcc_set_seconds 2BA4  
                          ?_USBCheckStdRequest 0001                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 0140                       __display_charger@fan_off 0100  
                         __flash_set_page_size 108E                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task 26F6  
                   _get_next_eeprom_write_task 26CA                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks 2C9A                                        _UIRbits 000F62  
                            __end_of__read_fat 1F8C                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 0D50         __size_of__flash_compare_page_to_buffer 007C  
                __flash_compare_page_to_buffer 0CD4                                     __write_fat 2178  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 0001                                   ??_USBMSDInit 000C  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 0001                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 0001  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 0001                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand DCB6  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 0001  
                                   _lastSecond 01EB                           ?_USBStdSetCfgHandler 0001  
                        __end_of_rtcc_get_year 2D48                    __size_of_USBCheckHIDRequest 00E2  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 0026  
                           ??i2_ResetSenseData 0001                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01B6                              __end_of_hid_rpt01 941E  
                       _buck_remote_set_enable 2ABE                             ?_MSDProcessCommand 0001  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler E38E  
                            __end_of_buck_init 2CBA                     _MSDTransferTerminated$2729 000E  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 0098  
                    __size_of__flash_spi_tx_tx 0090           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 0001                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 0001                             __display_usb@F8720 924B  
                           __display_usb@F8722 923B                             __display_usb@F8724 920A  
                           __display_usb@F8718 9127                           ?__rtcc_increment_bcd 0064  
                        __size_of_buck_operate 005C                           ??_USBCheckStdRequest 001E  
                                      ___aldiv F88E                  __size_of_USBCtrlTrfOutHandler 0062  
        i2ExternalFlash_MediaInitialize@config 0001            ExternalFlash_MediaInitialize@config 0060  
                                      ___awdiv 073A                               _ToSendDataBuffer 03A4  
                              __size_of___lmul 0058                                        ___lldiv 08CC  
                             ??_USBDeviceTasks 001F                                        ___fttol ECCC  
                                      ___lwdiv 1B28                              ??_USBStallHandler 0001  
                                      ___lwmod 20AE                             ??_log_collect_data 0074  
                                   ??___altoft 0072                              ?__i2c_acknowledge 0001  
                        __end_of_buck_get_mode 2E16                            __size_of__i2c_start 0008  
                 __end_of__system_encoder_init 2238                                        __pcinit FA24  
                              __size_of_memcpy 0060                            __size_of__i2c_write 0050  
                                   ??___ftpack 0065                                __size_of_memset 0030  
                     __size_of_MSDWriteHandler 02D6                      __end_of_configDescriptor1 937B  
                          ??_MSDProcessCommand 00A7                                        __ramtop 0F00  
                 ExternalFlash_SectorRead@page 0093                 ?__fill_buffer_get_calibration1 0001  
               ?__fill_buffer_get_calibration2 0001                     __size_of_i2c_set_frequency 0070  
                                   ??_adc_init 0060                                     ??_adc_read 0062  
                                      __ptext0 B470                                        __ptext1 E9C8  
                                      __ptext2 2C9A                                        __ptext3 2DFE  
                                      __ptext4 255E                                        __ptext5 27CA  
                                      __ptext6 27F0                                        __ptext7 2672  
                                      __ptext8 A6B8                                        __ptext9 2816  
                               ?__display_itoa 0078                                        _inPipes 00F3  
                         ??_rtcc_decrement_day 0068                                __size_of_ui_run 0102  
                               ?__display_time 0001                          _task_list_write_index 004F  
                           __display_time@cntr 01D2              __size_of_ExternalFlash_SectorRead 0034  
                 __end_of__display_inout@F8671 920A                    _USBDeferOUTDataStagePackets 01F7  
                 __end_of__display_inout@F8673 91F8                             __display_time@mode 01CB  
                 __end_of__display_inout@F8675 9339                   __end_of__display_inout@F8677 92B3  
                           ??__i2c_acknowledge 0060                                      _T0CONbits 000FD5  
                           __display_time@year 01CC                          __end_of_rtcc_set_year 2B8C  
                    ?_ExternalFlash_SectorRead 008B                                __size_of_strlen 003E  
                  __end_of__system_timer0_init 21FA                                      _T1CONbits 000FCD  
                                  ?__buck_stop 0001                                   ??_USBSuspend 0018  
                                    _T2CONbits 000FCA                             __end_of_USBMSDInit E5AC  
                             ??_ResetSenseData 0060                        ?__flash_write_to_buffer 0073  
                      _APP_DeviceMSDInitialize 2D2A                                        _msd_cbw 000D40  
                     __end_of_i2c_eeprom_tasks 101E                               ___aldiv@dividend 0060  
                                      _msd_csw 000D80                        ??_i2c_digipot_reset_off 006A  
                         __i2c_not_acknowledge 2DBC                       __end_of_i2c_eeprom_write 0B58  
                              i2_USBDeviceInit D8EC                                        _ui_init 2C60  
                             i2USBDeviceInit@i 0009                                  _log_start_new F6DC  
           __size_of_ExternalFlash_SectorWrite 0034                        __size_of__buck_pin_init 0030  
                __size_of__rtcc_bdc_to_decimal 001E                          ?__flash_set_page_size 0001  
                                      _tmr_isr 0334                          __end_of_flash_is_busy 2A22  
                           __end_of_USB_CD_Ptr 933B                                     _msd_buffer 000600  
                           __get_empty_cluster 0D50                              ?_rtcc_get_minutes 0001  
                            ?_rtcc_get_seconds 0001                     __size_of_SYSTEM_Initialize 005A  
                             _system_output_on 1EA8                __size_of_USBCtrlTrfSetupHandler 0092  
                        __size_of_i2c_adc_read 0052                  __size_of__buck_operate_remote 00F4  
                                      _strncmp 0B58                            _flash_partial_write 116A  
                         end_of_initialization FAE0                        rtcc_decrement_year@year 0068  
                      ??_display_get_character 0061                          _MSDTransferTerminated 1AD2  
        __flash_compare_page_to_buffer@command 007B                 ?_MSDProcessCommandMediaPresent 0001  
                           __end_of_USB_SD_Ptr 932F                    __end_of_rtcc_increment_year 28CE  
                           ??_rtcc_get_minutes 0060                             ??_rtcc_get_seconds 0060  
                          i2c_eeprom_write@dat 0072                                        memcpy@d 0066  
         __size_of_buck_remote_set_synchronous 0018                                        memcpy@n 0064  
                                      memcpy@s 0068                               __write_fat@value 008A  
                 __get_temperature@temperature 006E                            _pBDTEntryEP0OutNext 00FB  
                    __end_of_MSDProcessCommand DDE6                                        itoa@buf 0070  
                                  ?__read_root 0087                                        memset@c 0062  
                                      itoa@val 0072                                        memset@n 0064  
                                      memset@p 0066                            __buck_operate_local 9AC6  
                              _USB1msTickCount 01DD                       __buck_operate_local$8729 007B  
                                 _buck_operate 17AA                            ?__get_empty_cluster 0087  
                 fat_get_empty_clusters@offset 008B                       ?_USBStdFeatureReqHandler 0001  
                i2c_eeprom_write@slave_address 0083                                      i2u1442_40 D9F0  
                                    i2u1199_40 183A                                      i2u1439_40 D94E  
                                    i2u1471_40 DB72                                      i2u1199_47 1830  
           __size_of__fill_buffer_get_display1 0050             __size_of__fill_buffer_get_display2 0050  
                     fat_append_to_file@length 00AA                               _inputCapacitySum 0282  
                     fat_append_to_file@offset 00A7                          ??_USBStdSetCfgHandler 0018  
                              ___lldiv@divisor 0064                     __size_of_log_write_to_disk 006E  
          rtcc_get_minutes_decimal@bcd_minutes 0063                       fat_append_to_file@sector 009D  
                            __end_of_rtcc_init 2B10                 ??_buck_remote_change_dutycycle 0060  
                              ___lldiv@counter 006C                            __end_of__buck_start FBB0  
                                ?_rtcc_get_day 0001            rtcc_get_seconds_decimal@bcd_seconds 0063  
                                 _averageCount 0041                          ??__rtcc_increment_bcd 0066  
                           __end_of_USBSuspend 255E                              __get_time@minutes 0069  
                            __get_time@seconds 006A                        _USBCtrlEPAllowDataStage 0164  
                   ?_buck_remote_set_dutycycle 0001                               ___aldiv@quotient 006A  
                  __size_of_buck_remote_set_on 0018                                        postdec1 000FE5  
                                      postdec2 000FDD           __end_of_ExternalFlash_SectorSizeRead 2DB2  
        __size_of_ExternalFlash_SectorSizeRead 000C                   _ExternalFlash_SectorSizeRead 2DA6  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                            rtcc_set_hours@hours 0060  
                            ?_rtcc_correct_day 0001                       __buck_operate_local@cntr 007D  
                         ?_flash_partial_write 007F                   __size_of__display_efficiency 0340  
             __size_of__fill_buffer_get_status 025C                                  ??__ui_encoder 008B  
                                ?_rtcc_set_day 0001                                        utoa@buf 0067  
                    _log_get_number_of_samples 2DB2        MSDProcessCommandMediaPresent@sectorSize 009E  
                     _USBCtrlEPServiceComplete EBCC                                        utoa@val 0069  
                 log_write_to_disk@file_number 00D0                                      _MSD_State 0054  
                                _inputPowerSum 028A                          _system_encoder_enable 2C9A  
                                      strlen@s 0060                    ??_adc_calculate_temperature 006F  
                           ??_rtcc_correct_day 0064                    __size_of_USBCheckMSDRequest 00C2  
                   _USBStatusStageEnabledFlag1 01FA                     _USBStatusStageEnabledFlag2 01F9  
                     flash_partial_write@match 0087                           ?__buck_operate_local 0001  
                           USBEnableEndpoint@p 000A                        ?_fat_get_empty_clusters 0087  
                      ??_rtcc_get_year_decimal 0063                                      _PORTAbits 000F80  
                                    _PORTBbits 000F81                        __display_outputs@header 009A  
                             _outputCurrentSum 028E                       flash_partial_write@start 0081  
                    __size_of__get_input_power 0082                           ??__get_empty_cluster 0089  
               __end_of__flash_write_to_buffer 1CC6                            __buck_set_dutycycle 1240  
                             __CFG_DSBOREN$OFF 000000                      __display_temperature@cntr 00C7  
                         __sector_from_cluster 2D0A                                   _i2c_adc_read 1C22  
                         _rtcc_decrement_hours 29DE                           _rtcc_decrement_month 299A  
           __size_of__get_available_root_entry 002A                                ??__get_dateTime 0068  
                   __end_of__write_calibration 04F2                          ?__i2c_not_acknowledge 0001  
                fat_append_to_file@new_cluster 00A3                       _rtcc_get_minutes_decimal 2CBA  
                              ??__get_checksum 0062                         fat_create_file@cluster 00AE  
                          flash_page_read@data 0089                   __size_of__rtcc_decrement_bcd 002E  
                            adc_read@adc_value 0063                                    ?_flash_init 0001  
                          flash_page_read@page 0087                               __CFG_CPUDIV$OSC1 000000  
                fat_get_empty_clusters@cluster 0091                                      _TRISAbits 000F92  
                               ?_log_start_new 0001                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96                             _ReceivedDataBuffer 0478  
                           _BothEP0OutUOWNsSet 01FB                  fat_get_empty_clusters@maximum 0087  
                     __end_of_flash_page_write 1D68                                  __pbssBIGRAMll 0800  
                             ??_MSDReadHandler 0095                      USBConfigureEndpoint@EPNum 0006  
                      _i2c_display_write_fixed 18BC                              __CFG_SOSCSEL$HIGH 000000  
                   ?_USBCtrlEPAllowStatusStage 0001                                ??__buck_prepare 0060  
                   __display_efficiency@header 0092                        __display_time@presssave 0170  
          USER_USB_CALLBACK_EVENT_HANDLER@size 0014                        __size_of__display_clear 004A  
                                    _USTATcopy 005D                                ??__flash_wakeup 0068  
                 __size_of_rtcc_decrement_year 0022                          __end_of_i2c_adc_start 232A  
           __end_of_schedule_eeprom_write_task 1E08                     _schedule_eeprom_write_task 1DB8  
MSDProcessCommandMediaPresent@NumBytesInPacket 009D                        ?_rtcc_increment_minutes 0001  
                      ?_rtcc_increment_seconds 0001                                ??__flash_spi_tx 0064  
                                  ?__write_fat 0088                     __display_efficiency@footer 00B8  
                      __size_of__display_inout 01E6                   ?_i2c_eeprom_read_calibration 0001  
                           _log_generate_entry AA4C                i2c_eeprom_read_calibration@addr 007F  
                 __end_of_USBTransferOnePacket E8C4                           ?__buck_set_dutycycle 0001  
              i2c_eeprom_read_calibration@cntr 0081                                    _CCP1CONbits 000FBA  
                     _rtcc_get_seconds_decimal 2D1A                            _system_output_is_on 2B10  
          __end_ofi2_ExternalFlash_MediaDetect 2E24                          i2c_eeprom_read@length 0075  
                  i2_ExternalFlash_MediaDetect 2E20                            rtcc_set_month@month 0060  
                   __display_efficiency@source 00A5                         i2c_display_cursor@line 006E  
                             __CFG_IOL1WAY$OFF 000000                            __get_dateTime@hours 0071  
                 __end_of__parse_command_short F276                            __get_dateTime@month 006F  
                               ??_rtcc_get_day 0060                            __size_of__buck_stop 002E  
               ?__flash_compare_page_to_buffer 0073                             __root_is_available 0C58  
                            __CFG_WPEND$PAGE_0 000000              __end_of__fill_buffer_get_display1 1EA8  
            __end_of__fill_buffer_get_display2 1E58                            ?_log_generate_entry 0078  
           __flash_compare_page_to_buffer@page 0073                            __CFG_MSSP7B_EN$MSK7 000000  
                    __rtcc_bdc_to_decimal@ones 0061                      __rtcc_bdc_to_decimal@tens 0060  
                            ?_rtcc_read_eeprom 0001                  __get_empty_cluster@fat_sector 0089  
                             ?_MSDErrorHandler 0001                        __size_of_rtcc_get_hours 000E  
                      __size_of_rtcc_get_month 000E                               __write_root@data 0088  
                       _USBCtrlTrfSetupHandler 0618                 __end_of__display_outputs@F8730 923B  
               __end_of__display_outputs@F8732 90FF                 __end_of__display_outputs@F8734 90EA  
               __end_of__display_outputs@F8728 9297         __end_of_system_calculate_input_current E158  
      __size_of_system_calculate_input_current 0124                 _system_calculate_input_current E034  
                        ??_flash_partial_write 0087                      system_output_is_on@output 0060  
                               ??_rtcc_set_day 0060                               __write_root@slot 008F  
                          __rtcc_write_disable 2C4A               ExternalFlash_CapacityRead@config 0060  
                      ?i2_USBTransferOnePacket 0001                       __size_of_display_prepare 0082  
                        __end_of_USBDeviceInit D7A6                             ??_rtcc_read_eeprom 0079  
        __end_of_USBIncrement1msInternalTimers 2A84         __size_of_USBIncrement1msInternalTimers 0020  
                _USBIncrement1msInternalTimers 2A64                   __end_of__display_temperature D312  
                               __end_of___lmul 1A7C                 __end_of_fat_get_empty_clusters 0618  
                              ??__display_itoa 007D                  ?_ExternalFlash_SectorSizeRead 0060  
                              ??__display_time 0060             __end_of__display_temperature@F8781 92FA  
                   __display_temperature@F8781 92EF             __end_of__display_temperature@F8783 92CB  
                   __display_temperature@F8783 92BF             __end_of__display_temperature@F8785 92BF  
                   __display_temperature@F8785 92B3             __end_of__display_temperature@F8779 9113  
                   __display_temperature@F8779 90FF                            ?__root_is_available 0001  
                            __size_of_MSDTasks 0256                          ??__buck_operate_local 0076  
                     __end_of_USBStallEndpoint E6B6                                      i2memcpy@d 0007  
                     ?__buck_initial_dutycycle 0001                                      i2memcpy@n 0005  
                            ??_fat_create_file 00A3                        __end_ofi2_USBDeviceInit DA32  
                                    i2memcpy@s 0009                      ??_APP_DeviceMSDInitialize 000F  
                                    i2memset@c 0003                                      i2memset@n 0005  
                                    i2memset@p 0007                          ?__sector_from_cluster 0060  
                         ?_system_output_is_on 0001                                 __end_of_memcpy 1694  
                              _MSDRetryAttempt 01F4                           i2USBStallEndpoint@ep 0006  
       __end_of_system_calculate_input_voltage F43A        __size_of_system_calculate_input_voltage 00E2  
               _system_calculate_input_voltage F358                                 __end_of_memset 252E  
                        __get_output_power@pwr 006F                          ?_rtcc_decrement_hours 0001  
                             __CFG_DSWDTEN$OFF 000000                        __parse_command_long@cmd 0064  
                        ?_rtcc_decrement_month 0001                            __size_of__read_root 005C  
                __size_of_i2c_digipot_reset_on 0026                              _USBBusIsSuspended 0058  
                    flash_partial_write@length 0083                                 __end_of_ui_run EACA  
                 __end_of_rtcc_get_day_decimal 2D0A          __get_available_root_entry@file_number 008E  
                               __end_of_strlen 2276                  __display_temperature@internal 00BC  
                          __end_of__ui_encoder AA4C                      __flash_set_page_size@size 0077  
                                _chargerOnTime 02B0                            start_initialization FA24  
                      ?_USBStdGetStatusHandler 0001                                  ??__write_root 008A  
                    __size_of__get_temperature 002C                        ?_buck_remote_get_status 0001  
                         ??_log_generate_entry 007A                       i2SYSTEM_Initialize@state 0005  
                ExternalFlash_SectorWrite@page 008D                  USBCtrlTrfRxService@byteToRead 0002  
                       ??__flash_set_page_size 0073                              ??_MSDWriteHandler 008F  
            __end_of__get_available_root_entry 2778                       ??_rtcc_get_hours_decimal 0063  
               get_next_eeprom_write_task@task 0060                              __size_ofi2_memcpy 005C  
                   i2c_display_cursor@position 006D                           ?__rtcc_write_disable 0001  
                       ?_MSDTransferTerminated 000C                              __size_ofi2_memset 002C  
                       __display_charger@F8740 91B0                         __display_charger@F8750 921B  
                       __display_charger@F8742 919D                         __display_charger@F8744 932F  
                       __display_charger@F8752 90AB                         __display_charger@F8746 9317  
                       __display_charger@F8754 9113                         __display_charger@F8738 90C0  
                       __display_charger@F8748 92CB                                _USBMSDOutHandle 0047  
             __ic2_display_set_address@address 006A                 __end_of_rtcc_increment_minutes 2934  
                 __end_of_USBConfigureEndpoint 0586                 __end_of_rtcc_increment_seconds 28F0  
                         system_init@filename2 0171                                   ??__i2c_start 0060  
                                 ??__i2c_write 0068                __end_of_USBStdFeatureReqHandler C282  
                            USBStallEndpoint@p 0066                                  _MSDHostNoData 0051  
                         _task_list_read_index 0050                      _adc_calculate_temperature EEBC  
                         ??__root_is_available 0087                 __size_of__update_modified_time 0036  
            __end_of_USBCtrlEPAllowStatusStage FC76                  __size_of_system_output_toggle 0026  
                                  __buck_start FAEA                  __end_of__update_modified_time 2396  
         fat_get_empty_clusters@empty_clusters 008F                          ??__buck_set_dutycycle 0060  
                     __end_of_USBCtrlEPService 0334                     __size_of_MSDProcessCommand 0130  
                         __system_encoder_init 21FA                                      __i2c_read 03CA  
                      __size_of_rtcc_set_hours 0018                           rtcc_read_eeprom@date 0079  
                                    __i2c_send 2DE4                        __size_of_rtcc_set_month 0018  
                                    __i2c_stop 2DEE                           __flash_spi_tx@length 0062  
      _ExternalFlash_MediaInitialize$intlevel0 2A28                  ??_i2c_eeprom_read_calibration 0079  
                            __size_of_i2c_init 000C                           __display_inout@F8671 91F8  
                         __display_inout@F8673 91E6                           __display_inout@F8675 9336  
                         __display_inout@F8677 92A5                              _rtcc_write_eeprom 1FD6  
                    ??_USBCtrlEPAllowDataStage 0002                               __buck_start@cntr 0075  
                               USBDeviceInit@i 0068                               __buck_start@mode 0073  
                       __write_calibration@ptr 0099                  __size_of_rtcc_increment_hours 0022  
                __size_of_rtcc_increment_month 0022                  __root_is_available@first_byte 008D  
                       _pBDTEntryEP0OutCurrent 0049                         __size_of_fat_find_file 00C8  
                           ?_rtcc_write_eeprom 0001                                    _DMACON1bits 000F88  
                       i2c_eeprom_write@length 006E                                    _DMACON2bits 000F86  
                          __size_of_flash_init 0042                        USBTransferOnePacket@dir 0060  
                             __flash_spi_tx_rx 0204                               __flash_spi_tx_tx 06AA  
                      USBTransferOnePacket@len 0063                              __size_of__i2c_get 000A  
                  MSDErrorHandler@OldMSD_State 0069                                  _MSDTasks$2694 00AD  
                                _MSDTasks$2695 00AF                 __end_ofi2_USBTransferOnePacket EBCC  
                  __size_of_flash_partial_read 007A                                 __get_date@date 006B  
                                     ??___lmul 0068                               _outputVoltageSum 0292  
                      flash_partial_read@start 0075                                 __get_date@year 0068  
                          _USBStdGetDscHandler DB76                         ?_system_encoder_enable 0001  
                       system_output_on@output 0060                              __CFG_ADCSEL$BIT10 000000  
            __size_of_APP_DeviceCustomHIDTasks 0364                                    __pdataBANK2 02BF  
                                  __pdataBANK3 03E4                                    __pdataBANK4 0400  
                __size_of__buck_set_sync_async 0076                      ?_APP_DeviceCustomHIDTasks 0001  
                      rtcc_increment_year@year 0068                           __size_of_system_init 0104  
               __size_of_i2c_digipot_backlight 002C                                       ??_memcpy 0066  
                      __size_of__i2c_wait_idle 0064                                       ??_memset 0066  
                         __display_inout@line1 0090                           system_init@extension 017A  
                         __display_inout@line2 00A2                   __size_of__parse_command_long 00EC  
                         __display_inout@line3 00C2                           __display_inout@line4 00B4  
                __end_of_i2c_digipot_backlight 269E                                   ?__i2c_open_1 0001  
                       __size_of_ui_get_status 0006                            ??_rtcc_write_eeprom 0085  
                        ??_system_output_is_on 0060                                       ??_ui_run 008B  
                           __end_of__i2c_start 2DFE                          __number_of_days@month 0063  
                           __end_of__i2c_write 1DB8                      __root_is_available@offset 008A  
                          __size_of__write_fat 0042                                       ??_strlen 0062  
                        __display_outputs@cntr 00A9                              __size_of___altoft 007A  
                       ??__i2c_not_acknowledge 0060                          __display_outputs@mode 00A8  
                       _USBActiveConfiguration 005E                 __end_of_USBStdGetStatusHandler 0164  
                     _buck_dutycycle_last_step 01EE                                ??_log_start_new 0064  
               __end_of_buck_remote_get_status 2644                      __buck_operate_remote$8730 0076  
                            __size_of___ftpack 00B0                              __size_of_adc_init 001C  
                            __size_of_adc_read 0086                                    __pbssCOMRAM 0032  
                              adc_read@channel 0062                     fat_append_to_file@position 00AC  
                  fat_create_file@next_cluster 00A7                                _flash_page_read 27A2  
                    ??_i2c_display_write_fixed 0068                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                   __size_of_USBCtrlTrfInHandler 00BE  
                 ??_ExternalFlash_CapacityRead 0064                 __size_of_MSDCheckForErrorCases 00F8  
                               __buck_pin_init 24CE                  __end_of_MSDCheckForErrorCases EEBC  
                        ??__rtcc_write_disable 0060                                      _gblBLKLen 02A6  
                    __size_of__display_charger 0308             __end_of_flash_command_pagesize_512 9452  
                   _flash_command_pagesize_512 944E             __end_of_flash_command_pagesize_528 944E  
                   _flash_command_pagesize_528 944A                           ?_USBStdGetDscHandler 0001  
                   i2c_set_frequency@frequency 0060                              ?_rtcc_set_minutes 0001  
                            ?_rtcc_set_seconds 0001                                      __get_date 137A  
                       __get_checksum@checksum 0064                                      __get_time 11D6  
                  ?_get_next_eeprom_write_task 0001                            __end_of__write_root 174E  
                        ?__system_encoder_init 0001                     __end_of_USBWakeFromSuspend 23CC  
                           ??_rtcc_set_minutes 0060                             ??_rtcc_set_seconds 0060  
                    __end_of_rtcc_write_eeprom 2020                     __end_of_i2c_display_cursor 27A2  
                                   ?__i2c_read 0065                    __size_of__rtcc_write_enable 0016  
                                   ?__i2c_send 0001                                _USBStallHandler 20F2  
                                 _pBDTEntryOut 01D3                                     ?__i2c_stop 0001  
                      ?_buck_remote_set_enable 0001                     ?_buck_remote_get_dutycycle 0001  
                                    __read_fat 1F42                     __rtcc_bdc_to_decimal@input 0062  
               schedule_eeprom_write_task@task 0061                       __size_of_USBDeviceAttach 0032  
                      __rtcc_decrement_bcd@max 0065                        __rtcc_decrement_bcd@min 0064  
             __end_of_ExternalFlash_SectorRead 2434                       __get_checksum@byte_array 0062  
                           i2_USBStallEndpoint E6B6                      __size_of__display_outputs 0222  
                             ___lwdiv@dividend 0060                            flash_is_busy@status 0071  
                 buck_remote_get_status@retval 0060                              fat_find_file@name 0087  
               MSDProcessCommandMediaPresent@i 00A6                            fat_find_file@buffer 008B  
                            fat_find_file@slot 0096                                      __pintcode 9008  
                    fat_create_file@root_entry 00B0                        __fill_buffer_get_status C282  
                           _APP_DeviceMSDTasks 2C88                                  __pmediumconst 90AA  
                                     ?___aldiv 0060                            fat_find_file@offset 0099  
                                     ?___awdiv 0060                                      __ptext100 D14A  
                                    __ptext101 C956                                      __ptext110 CB78  
                                    __ptext102 CD7E                                      __ptext111 2238  
                                    __ptext103 B130                                      __ptext200 2D80  
                                    __ptext120 25E8                                      __ptext112 206A  
                                    __ptext104 ECCC                                      __ptext201 2616  
                                    __ptext121 FAEA                                      __ptext113 0012  
                                    __ptext105 0E44                                      __ptext210 1634  
                                    __ptext202 2E0A                                      __ptext130 D65A  
                                    __ptext122 0F38                                      __ptext114 20AE  
                                    __ptext106 FF62                                      __ptext211 E7BE  
                                    __ptext203 2E10                                      __ptext131 24FE  
                                    __ptext123 1240                                      __ptext115 1B28  
                                    __ptext107 F88E                                      __ptext220 029C  
                                    __ptext204 2E16                                      __ptext140 2E1C  
                                    __ptext132 249C                                      __ptext124 FDF6  
                                    __ptext116 17AA                                      __ptext108 1F8C  
                                    __ptext221 1806                                      __ptext213 0334  
                                    __ptext205 1E08                                      __ptext141 23CC  
                                    __ptext133 1916                                      __ptext125 08CC  
                                    __ptext117 EFB2                                      __ptext109 B786  
                                    __ptext230 C002                                      __ptext222 0618  
                                    __ptext214 DA32                                      __ptext206 1E58  
                                    __ptext150 E5AC                                      __ptext142 1D18  
                                    __ptext134 2C88                                      __ptext126 07C0  
                                    __ptext118 13E2                                      __ptext231 0846  
                                    __ptext223 EBCC                                      __ptext215 D8EC  
                                    __ptext207 2644                                      __ptext151 14AC  
                                    __ptext143 1C74                                      __ptext135 C4DE  
                                    __ptext127 2D9A                                      __ptext119 9AC6  
                                    __ptext240 2B2A                                      __ptext232 1B7C  
                                    __ptext224 0164                                      __ptext216 2396  
                                    __ptext208 150E                                      __ptext160 FEB0  
                                    __ptext152 2400                                      __ptext144 06AA  
                                    __ptext136 DCB6                                      __ptext128 EEBC  
                                    __ptext241 2E20                                      __ptext233 FC76  
                                    __ptext225 F43A                                      __ptext217 252E  
                                    __ptext209 0BD8                                      __ptext161 2DA6  
                                    __ptext153 27A2                                      __ptext145 1970  
                                    __ptext137 1694                                      __ptext129 1A24  
                                    __ptext250 F7B6                                      __ptext242 2468  
                                    __ptext234 F51C                                      __ptext226 F5FE  
                                    __ptext218 20F2                                      __ptext170 0AD6  
                                    __ptext162 2C74                                      __ptext154 0EBE  
                                    __ptext146 0CD4                                      __ptext138 A2FE  
                                    __ptext251 0000                                      __ptext243 EACA  
                                    __ptext235 1AD2                                      __ptext227 2722  
                                    __ptext219 2A64                                      __ptext171 101E  
                                    __ptext163 2A22                                      __ptext155 2A00  
                                    __ptext147 CF64                                      __ptext139 BA8E  
                                    __ptext244 22B4                                      __ptext236 E6B6  
                                    __ptext228 00BC                                      __ptext180 2BA4  
                                    __ptext172 1D68                                      __ptext164 2DDA  
                                    __ptext156 1CC6                                      __ptext148 EDC4  
                                    __ptext245 04F2                                      __ptext237 2D2A  
                                    __ptext229 DB76                                      __ptext181 2BBC  
                                    __ptext173 1448                                      __ptext165 ADCC  
                                    __ptext157 19CA                                      __ptext149 E276  
                                    __ptext246 15D2                                      __ptext238 E49E  
                                    __ptext190 2020                                      __ptext182 2BD4  
                                    __ptext174 2DEE                                      __ptext166 F192  
                                    __ptext158 2434                                      __ptext247 E38E  
                                    __ptext239 1570                                      __ptext191 DDE6  
                                    __ptext183 2BEC                                      __ptext175 2DF6  
                                    __ptext167 1EA8                                      __ptext159 0204  
                                    __ptext248 FBB0                                      __ptext192 1DB8  
                                    __ptext184 2C34                                      __ptext176 2DE4  
                                    __ptext168 1A7C                                      __ptext249 FD38  
                                    __ptext193 C282                                      __ptext185 2C4A  
                                    __ptext177 F0A6                                      __ptext169 1FD6  
                                    __ptext194 2E04                                      __ptext186 2C04  
                                    __ptext178 2B74                                      __ptext195 2D3A  
                                    __ptext187 2C1C                                      __ptext179 2B8C  
                                    __ptext196 2D48                                      __ptext188 2ABE  
                                    __ptext197 2D56                                      __ptext189 2888  
                                    __ptext198 2D64                                      __ptext199 2D72  
                     __end_of_system_output_on 1EF6                            fat_find_file@sector 0097  
                                     ?___lldiv 0060                                       ?___fttol 0060  
                        __end_of_adc_calibrate 2DA6                                       ?___lwdiv 0060  
                                     ?___lwmod 0060                                      _hid_rpt01 9401  
                                  __ui_encoder A6B8                            ?i2_USBStallEndpoint 0001  
                       ??__sector_from_cluster 0062                                      _buck_init 2CAA  
                                    _idle_rate 01FF                         ??_rtcc_decrement_hours 0068  
                       ??_rtcc_decrement_month 0068                                 __get_time@time 006B  
                             ?i2_USBDeviceInit 0001                          _buck_remote_dutycycle 00FD  
                     __display_efficiency@cntr 00D1                                __i2c_write@data 0065  
                             __get_input_power 09D2                                __i2c_write@cntr 0069  
                          fat_create_file@name 009B                            ?_APP_DeviceMSDTasks 0001  
                    __size_ofi2_ResetSenseData 0062                           __display_time@setday 01C3  
           __flash_write_to_buffer@data_length 0077                            fat_create_file@size 009F  
                                 ??__buck_stop 0060                           _USBTransferOnePacket E7BE  
                 __flash_spi_tx_rx@data_length 0066                     ?_ExternalFlash_MediaDetect 0060  
                       __end_of__buck_pin_init 24FE                 ??_ExternalFlash_SectorSizeRead 0062  
                            ??_display_prepare 00D2                           __CFG_RTCOSC$T1OSCREF 000000  
                         __parse_command_short F192                           __end_of_rtcc_get_day 2D8E  
           __size_of_log_get_number_of_samples 000A                                  _fat_find_file F95C  
                            __display_itoa@len 008D                              __display_itoa@pos 008F  
                            __display_itoa@tmp 0083                              ?_i2c_eeprom_tasks 0001  
                    __size_of_log_collect_data 029E                                       ?_ui_init 0001  
                  __size_of_buck_get_dutycycle 0006                              ?_i2c_eeprom_write 006A  
                 __end_of_USBCtrlTrfOutHandler 1634                       __size_of_i2c_eeprom_read 0052  
                        ??_USBStdGetDscHandler 0001                 __size_of_i2c_digipot_reset_off 0026  
          __size_of__flash_copy_page_to_buffer 005A                                    _ep_data_out 01E1  
                             ___lwdiv@quotient 0064                                       ?_tmr_isr 0001  
              __size_of_rtcc_get_hours_decimal 0010                  __end_of_i2c_digipot_reset_off 2816  
                           ??_i2c_eeprom_tasks 009D                                  _MSDWriteState 0052  
                 __size_of_USBCtrlTrfRxService 0110                __parse_command_calibration@dat1 0064  
              __parse_command_calibration@dat2 0065                __parse_command_calibration@dat3 0066  
                USBConfigureEndpoint@direction 0001                                       ?_strncmp 0060  
                          __display_efficiency B130                                 __display_clear 1F8C  
                            __display_time@day 01CE                           __end_of_rtcc_set_day 2C04  
                           ??_i2c_eeprom_write 006F                      __size_of__i2c_acknowledge 000A  
                                ?__display_usb 0001                __parse_command_calibration@item 0063  
                            __display_time@tad 0180                                     ?__get_date 0064  
                            __display_time@pts 0100                           ??i2_USBStallEndpoint 0002  
              ?_i2c_display_send_init_sequence 0001               ??_i2c_display_send_init_sequence 006A  
                            __display_usb@cntr 00A5                                 __display_inout CD7E  
                                   ?__get_time 0064                                  _ui_get_status 2E04  
                 __size_ofi2_SYSTEM_Initialize 0054                 __end_of_buck_remote_set_enable 2ADA  
                         __display_temperature D14A                                ___aldiv@divisor 0064  
                 __size_of_USBCtrlTrfTxService 00D8                                   ??__read_root 0089  
                         __display_usb@usb_off 0074                 __size_of_display_get_character 002E  
                              ___aldiv@counter 0068                           ??_APP_DeviceMSDTasks 00B2  
                __end_of_display_get_character 2672                                      _extension 02F8  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                     __end_of_USBCheckHIDRequest F5FE  
               __root_is_available@file_number 008C                              __get_output_power 0950  
                   __end_of_rtcc_increment_day 2862           __flash_compare_page_to_buffer@buffer 0075  
                   ??_USBCtrlEPServiceComplete 0002                                     ?__read_fat 0087  
                     __size_of__number_of_days 0068                        __i2c_read@slave_address 006F  
                                     _IPR2bits 000FA2                                       _PIE2bits 000FA0  
                     ??_system_encoder_disable 0060                            __rtcc_decrement_bcd 25BA  
                         _rtcc_get_day_decimal 2CFA                    __size_of_fat_append_to_file 0222  
                           ?__get_output_power 006D                                    _buck_status 00FF  
                           __end_of__buck_stop 2616           __flash_compare_page_to_buffer@status 0079  
                                     _PIR1bits 000F9E                                      _task_list 0468  
                                     _PIR2bits 000FA1                       ??_rtcc_decrement_minutes 0068  
                     ??_rtcc_decrement_seconds 0068                   __end_of__rtcc_bdc_to_decimal 2AA2  
                               _rtcc_get_hours 2D72                                       i2u833_48 E534  
                                     i2u833_49 E548                                 _rtcc_get_month 2D56  
                                     i2u835_48 E55A                                       i2u860_40 FCD2  
                                     i2u835_49 E570                                       i2u837_44 E58E  
                                     i2u837_45 E588                                       i2u960_40 F674  
                                     i2u891_40 F834                                       i2u891_47 F82A  
                                     i2u964_40 DBF6                                       i2u964_47 DBEC  
                                     i2u893_40 F876                                       i2u965_40 DC28  
                                     i2u893_47 F86C                                       i2u965_47 DC1E  
                                     i2u967_40 DC82                                       _RCONbits 000FD0  
                                     i2u967_47 DC78                      __size_of_rtcc_get_minutes 000E  
                    __size_of_rtcc_get_seconds 000E                                       i2u989_40 C1F0  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote F0A6  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 002C  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks C4DE  
                   _USBDeferINDataStagePackets 01F8                      ?__ic2_display_set_address 0001  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00E2  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 0001  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init 2AF6                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous 2C1C                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous 2C04                           _USBConfigureEndpoint 04F2  
                          ??__get_output_power 006F                            _rtcc_decrement_year 2956  
                                   ?_buck_init 0001                              __i2c_write@length 0067  
                      __end_of_flash_page_read 27CA             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 0280                                 _USBMSDInHandle 0045  
                                   _ADCON0bits 000FC2                                     _ADCON1bits 000FC1  
                       __display_time@sethours 01B0                          ?_USBTransferOnePacket 0060  
                       __display_time@setmonth 01A6                              __read_root@offset 008C  
                       __display_time@pressday 0160                    __display_charger@supply_off 014D  
                  __size_of_rtcc_decrement_day 0026                              _outputCapacitySum 027E  
               __size_of_rtcc_get_year_decimal 0010            _ExternalFlash_MediaDetect$intlevel0 2DE0  
                            _SYS_InterruptHigh 9008                       ??_rtcc_get_month_decimal 0063  
                __end_of_rtcc_get_year_decimal 2CEA                             __end_of__read_root 17AA  
                        ?__parse_command_short 0001                                ?__buck_pin_init 0001  
                         ?__rtcc_decrement_bcd 0064                      i2c_display_cursor@address 006F  
                             __CFG_WPFP$PAGE_1 000000                                 ?_fat_find_file 0087  
                 i2c_eeprom_read@slave_address 0078                                   ??_flash_init 0078  
                                 _RemoteWakeup 0059              __end_of_ExternalFlash_MediaDetect 2DE4  
                           __get_dateTime@year 006E                                       i2_memcpy 1806  
                                     i2_memset 2722                               __get_temperature 269E  
            MSDCheckForErrorCases@DeviceNoData 0070                     ??_rtcc_get_seconds_decimal 0063  
                                  __write_root 16F2                             ?_SYS_InterruptHigh 0001  
                       __end_of__display_clear 1FD6                         __size_of_rtcc_get_year 000E  
                    __size_of_rtcc_correct_day 0020                        __end_of_USBStallHandler 2136  
                       __end_of__display_inout CF64                              ?_flash_page_write 007F  
            __end_of_log_get_number_of_samples 2DBC                                 __i2c_read@data 0065  
              ??__flash_write_page_from_buffer 0076                        __size_of_display_update 007A  
                               ??__display_usb 0060                                 __i2c_read@cntr 0070  
                            ___lmul@multiplier 0060                                    _INTCON2bits 000FF1  
                                  _INTCON3bits 000FF0                                      copy_data0 FA38  
                                    copy_data1 FA58                                      copy_data2 FA78  
                 __size_of__system_timer0_init 0040                                 ?_ui_get_status 0001  
                       ??__system_encoder_init 0060                    ??_USBCtrlEPAllowStatusStage 0001  
                         ?_rtcc_decrement_year 0001                   fat_create_file@cluster_count 00A9  
                  __end_of_USBStdSetCfgHandler F6DC                          ?__display_temperature 0001  
                           ??_flash_page_write 0083                                   ??__write_fat 008C  
                    __end_of__get_output_power 09D2                    ?_schedule_eeprom_write_task 0001  
                                     _i2c_init 2D8E                                   _lowPowerTime 02AE  
                          ??_SYS_InterruptHigh 0020                     __size_of_rtcc_write_eeprom 004A  
                               _rtcc_set_hours 2BD4                                 _rtcc_set_month 2BA4  
   __i2c_eeprom_load_default_calibration@index 0062                         __size_of_buck_get_mode 0006  
                                  ??__i2c_read 0068                    __end_of__rtcc_increment_bcd 25BA  
           system_calculate_output_current@tmp 0070                                    ??__i2c_send 0060  
                                 _MSDReadState 01F5                             __write_calibration 045E  
                                  ??__i2c_stop 0060             buck_remote_set_dutycycle@dutycycle 0060  
                           __write_fat@cluster 0088                             __end_of_device_dsc 944A  
           adc_calculate_temperature@adc_value 006C                             __get_checksum@cntr 0065  
                       __end_of_rtcc_get_hours 2D80                       MSDErrorHandler@ErrorCase 0068  
                       __end_of_rtcc_get_month 2D64                          ?_rtcc_get_day_decimal 0001  
                                     __i2c_get 2DC6                              i2c_adc_start@gain 006B  
                      ?_USBCtrlTrfSetupHandler 0001                                _fat_create_file D312  
                       __size_of_rtcc_set_year 0018                      ??__fill_buffer_get_status 0061  
                                   _ANCON0bits 000F48                     __end_of_buck_remote_set_on 2C34  
                                   _ANCON1bits 000F49                        USBStdGetStatusHandler@p 0002  
                                     __Hrparam 0000                            __display_itoa@value 0078  
                        __display_charger@cntr 018E                   __size_of_rtcc_increment_year 0022  
                                    memcpy@tmp 006A                                       __Lrparam 0000  
           __size_of_adc_calculate_temperature 00F6                         USBTransferOnePacket@ep 0068  
                       _rtcc_get_hours_decimal 2CCA                                 _buck_dutycycle 00FE  
                          ?__write_calibration 0001                            rtcc_correct_day@day 0064  
                                     _SetupPkt 000D30                            rtcc_correct_day@max 0065  
                           __end_of_flash_init 2178                          ??__display_efficiency 0090  
                               _TransferLength 0043                      __get_empty_cluster@offset 008B  
                   __end_of_USBCheckMSDRequest FD38                            __display_inout@cntr 00C5  
                                   ?_rtcc_init 0001                          ?_USBConfigureEndpoint 0001  
                         __number_of_days@year 0061                               __size_of___aldiv 00CE  
                     _ExternalFlash_SectorRead 2400                      display_get_character@line 0063  
                       __size_of_flash_is_busy 0022                              ??_USBDeviceAttach 0060  
                               __i2c_wait_idle 1448                                _MSDWriteHandler BA8E  
                             __size_of___awdiv 0086                           __display_outputs@low 008A  
                             __size_of___lldiv 0084                                       ___altoft 0E44  
                             __size_of___fttol 00F8                               __size_of___lwdiv 0054  
                             __size_of___lwmod 0044      ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                     ___ftpack FF62           __size_ofi2_ExternalFlash_MediaDetect 0004  
                                  _MSDCBWValid 01F1                      __end_of_SYS_InterruptHigh 90A6  
                               _buck_remote_on 004E                              ?_USBStallEndpoint 0060  
                   i2c_display_write_fixed@pos 0068                i2c_adc_start@configuration_byte 006D  
                                     _adc_init 2AA2                                       _adc_read 07C0  
                          __display_time@F8701 91C2                            __display_time@F8703 914F  
                          __display_time@F8705 913B                            __display_time@F8707 925B  
                          __display_time@F8681 9297                            __display_time@F8683 930E  
                          __display_time@F8691 92E3                            __display_time@F8685 9304  
                          __display_time@F8693 92D7                            __display_time@F8687 931F  
                          __display_time@F8695 9163                            __display_time@F8689 92FA  
                          __display_time@F8697 91D4                            __display_time@F8699 926B  
                  __size_of__get_empty_cluster 007A                             __end_of__write_fat 21BA  
                         __size_of__i2c_open_1 0018                          ??__rtcc_decrement_bcd 0066  
                           ??_USBStallEndpoint 0061                __flash_copy_page_to_buffer@page 0073  
           __end_of_ExternalFlash_CapacityRead 2C88                     _ExternalFlash_CapacityRead 2C74  
                      ??_MSDTransferTerminated 000E                  schedule_eeprom_write_task@idx 0062  
                    __size_of_rtcc_read_eeprom 004C                        __size_of_USBDeviceTasks 0144  
                              ___lwdiv@divisor 0062                ?_system_calculate_input_current 0001  
             ??_system_calculate_input_current 006C                          __end_of__get_dateTime D8EC  
                         ??__write_calibration 0085                          __end_of__get_checksum 2360  
                    _buck_remote_set_dutycycle 2888                                ?__display_clear 0001  
                     __end_of__flash_spi_tx_rx 029C                                ___lwdiv@counter 0066  
                     __end_of__flash_spi_tx_tx 073A              __buck_operate_local@tmp_dutycycle 007C  
                                     __ptext10 28AC                                       __ptext11 28CE  
                                     __ptext20 29BC                                       __ptext12 28F0  
                                     __ptext21 29DE                                       __ptext13 2912  
                                     __ptext30 F6DC                                       __ptext22 2862  
                                     __ptext14 2934                                       __ptext31 2D8E  
                                     __ptext23 25BA                                       __ptext15 283C  
                                     __ptext40 2B5C                                       __ptext32 2B44  
                                     __ptext24 2A44                                       __ptext16 258C  
                                     __ptext41 24CE                                       __ptext33 E158  
                                     __ptext25 1312                                       __ptext17 2956  
                                     __ptext50 AA4C                                       __ptext42 2AA2  
                                     __ptext34 1BD0                                       __ptext26 E8C4  
                                     __ptext18 2978                                _inputCurrentSum 0296  
                                     __ptext51 269E                                       __ptext43 21BA  
                                     __ptext35 03CA                                       __ptext27 2C60  
                                     __ptext19 299A                                       __ptext60 C734  
                                     __ptext52 073A                                       __ptext44 21FA  
                                     __ptext36 9F3C                                       __ptext28 2AF6  
                                     __ptext61 16F2                                       __ptext53 D7A6  
                                     __ptext45 F276                                       __ptext37 2136  
                                     __ptext29 1EF6                                       __ptext70 2CDA  
                                     __ptext62 2178                                       __ptext54 232A  
                                     __ptext46 DF10                                       __ptext38 108E  
                                     __ptext71 2CEA                                       __ptext63 116A  
                                     __ptext55 D312                                       __ptext47 F358  
                                     __ptext39 2CAA                                       __ptext80 2B10  
                                     __ptext72 2CFA                                       __ptext64 1862  
                                     __ptext56 0586                                       __ptext48 E034  
                                     __ptext81 2D1A                                       __ptext73 2D0A  
                                     __ptext65 2360                                       __ptext57 F95C  
                                     __ptext49 10FC                                       __ptext90 2DBC  
                                     __ptext82 2A84                                       __ptext74 0C58  
                                     __ptext66 11D6                                       __ptext58 0B58  
                                     __ptext91 2DC6                                       __ptext83 0950  
                                     __ptext75 174E                                       __ptext67 2CBA  
                                     __ptext59 274E                                       __ptext92 2DD0  
                                     __ptext84 09D2                                       __ptext76 1F42  
                                     __ptext68 2CCA                                       __ptext93 0DCA  
                                     __ptext85 0FAE                                       __ptext77 0D50  
                                     __ptext69 137A                                       __ptext94 18BC  
                                     __ptext86 26CA                                       __ptext78 2DB2  
                                     __ptext95 2778                                       __ptext87 045E  
                                     __ptext79 BD64                                       __ptext96 26F6  
                                     __ptext88 22F0                                       __ptext97 0A54  
                                     __ptext89 1C22                                       __ptext98 D4C8  
                                     __ptext99 9486                               __display_charger B786  
          __size_of__parse_command_calibration 012A                               __size_of_ui_init 0014  
                                 _SSP1CON1bits 000FC6                                ?__display_inout 0001  
                                 _SSP1CON2bits 000FC5                                       _filename 02EF  
                __buck_start@startup_dutycycle 0074                   __flash_set_page_size@command 0073  
                        ??_rtcc_decrement_year 0068                            __display_time@hours 01CF  
                       __end_of_rtcc_set_hours 2BEC                                   _SSP2CON1bits 000F72  
                             __size_of_tmr_isr 0096           __end_of_MSDProcessCommandMediaAbsent 16F2  
        __size_of_MSDProcessCommandMediaAbsent 005E                   _MSDProcessCommandMediaAbsent 1694  
                                  ??__get_date 0066                          __flash_wakeup@command 0068  
                          __display_time@month 01CD                         __end_of_rtcc_set_month 2BBC  
             __size_of__buck_initial_dutycycle 00BA                                    ??__get_time 0066  
    buck_remote_change_dutycycle@new_dutycycle 0061                               __size_of_strncmp 0080  
                                 ?__buck_start 0072                            __parse_command_long F0A6  
                          __display_usb@header 0060                     ?_ExternalFlash_SectorWrite 0084  
              ?_system_calculate_input_voltage 0001               ??_system_calculate_input_voltage 006C  
               ExternalFlash_SectorRead@config 008B                 ExternalFlash_SectorRead@buffer 0091  
            i2c_eeprom_read_calibration@buffer 007B                          __end_of__buck_prepare 1448  
           __end_of__flash_copy_page_to_buffer 18BC                     __flash_copy_page_to_buffer 1862  
                      __size_of_ResetSenseData 0062               __end_of_APP_DeviceCustomHIDTasks B130  
                 __end_of_i2c_digipot_reset_on 27F0                              ??_i2c_eeprom_read 0076  
                        __end_of__flash_wakeup 1D18                 __end_of_USBCtrlTrfSetupHandler 06AA  
                                __size_of_main 0316                              ?_USBCtrlEPService 0001  
                                __size_of_itoa 0044                          __end_of__flash_spi_tx 1A24  
                                     _inq_resp 93DD                                  __size_of_utoa 00AA  
                             __display_usb@low 0085                                    ??__read_fat 0089  
                  __end_of_flash_partial_write 11D6                                     strncmp@len 0064  
                          __display_usb@usb_on 0095                                ?_rtcc_get_hours 0001  
           __buck_set_sync_async@new_dutycycle 0062                                ?_rtcc_get_month 0001  
                   __display_time@pressminutes 0114                     __display_time@pressseconds 0128  
                           ??_USBCtrlEPService 001E                               __display_outputs C956  
                      ??_system_encoder_enable 0060                __size_of_system_encoder_disable 0006  
                          _USBCtrlTrfInHandler FD38             _MSDProcessCommandMediaPresent$2712 009B  
             __get_empty_cluster@first_cluster 0087                    __end_of__buck_operate_local 9F3C  
         __parse_command_calibration@parameter 0069                                  _rtcc_get_year 2D3A  
                        _calibrationParameters 0300                __size_of_rtcc_decrement_minutes 0022  
              __size_of_rtcc_decrement_seconds 0022                         __end_of__i2c_wait_idle 14AC  
                                     _outPipes 0032                     ?__fill_buffer_get_display1 0001  
                   ?__fill_buffer_get_display2 0001                           _USBCtrlTrfOutHandler 15D2  
                                     int$flags 005F              __end_of_adc_calculate_temperature EFB2  
                            ??__number_of_days 0060                      _USBCtrlEPAllowStatusStage FBB0  
                 __end_of_system_output_toggle 283C                           ?__parse_command_long 0063  
                            _system_output_off 1A7C                                   _SSP1STATbits 000FC7  
                                  ??_buck_init 0060                              __get_dateTime@day 0070  
                       ??_USBTransferOnePacket 0064                     i2c_digipot_backlight@level 006A  
                        __size_of_rtcc_get_day 000E                               ?_flash_page_read 0087  
                                 _SSP2STATbits 000F73                                  _buck_get_mode 2E10  
                       __size_of_i2c_adc_start 003A                          __end_of__display_itoa CD7E  
                        __end_of__display_time 9AC6                               i2_ResetSenseData 1570  
               ?_APP_DeviceCustomHIDInitialize 0001                                ??_fat_find_file 008B  
                           ?_system_output_off 0001                         ??__parse_command_short 008B  
               __end_of__display_charger@F8740 91C2                 __end_of__display_charger@F8750 922B  
               __end_of__display_charger@F8742 91B0                 __end_of__display_charger@F8744 9336  
               __end_of__display_charger@F8752 90C0                 __end_of__display_charger@F8746 931F  
               __end_of__display_charger@F8754 9127                 __end_of__display_charger@F8738 90D5  
               __end_of__display_charger@F8748 92D7          MSDProcessCommandMediaPresent@capacity 00A2  
                display_get_character@position 0060                       __size_of_MSDErrorHandler 0118  
                             system_init@F8581 02E9                               system_init@F8583 03F6  
                             system_init@F8585 02E5                               system_init@F8587 0400  
                             system_init@F8579 02DC                              rtcc_set_year@year 0060  
                    _USBDeferStatusStagePacket 0055                __end_of__fill_buffer_get_status C4DE  
                                _rtcc_set_year 2B74                   __end_of_rtcc_increment_hours 2956  
                 __end_of_rtcc_increment_month 2912                                    _OSCTUNEbits 000F9B  
                                   _INTCONbits 000FF2                __size_of_rtcc_get_month_decimal 0010  
                        __size_of_rtcc_set_day 0018                              __write_fat@offset 008E  
                         ?_USBCtrlTrfInHandler 0001                                       memcpy@d1 0060  
                                     memcpy@s1 0062                           i2c_eeprom_write@data 006C  
                             _log_collect_data BD64                           i2c_eeprom_write@cntr 0084  
                USBCtrlTrfTxService@byteToSend 0001                    __size_of_log_generate_entry 0380  
              i2c_digipot_backlight@data_array 006B                       __number_of_days@bcd_year 0062  
                                     itoa@base 0074                    __end_of__buck_set_dutycycle 12AA  
                              ??_ui_get_status 0060                                       memset@p1 0060  
                          ??_system_output_off 0060                           __rtcc_bdc_to_decimal 2A84  
         __end_of_MSDComputeDeviceInAndResidue FF62          __size_of_MSDComputeDeviceInAndResidue 00B2  
                 _MSDComputeDeviceInAndResidue FEB0                               ?_USBStallHandler 0001  
                     USBStdFeatureReqHandler@p 001C                     ?__get_available_root_entry 0001  
                 __end_of__buck_set_sync_async 0FAE                  __size_of__flash_set_page_size 006E  
                       ??__display_temperature 0090                           __buck_operate_remote EFB2  
                                _flash_is_busy 2A00                               __i2c_acknowledge 2DD0  
                              ?_rtcc_set_hours 0001                        __end_of_fat_create_file D4C8  
                              ?_rtcc_set_month 0001                                       intlevel2 0000  
                     __flash_get_status@status 006F                __flash_spi_tx_rx@command_length 0062  
                 adc_calculate_temperature@tmp 0075                     __size_of__get_output_power 0082  
                  __size_of__root_is_available 007C                         __size_of_USBDeviceInit 014C  
                ?_MSDProcessCommandMediaAbsent 0001        __end_of_USER_USB_CALLBACK_EVENT_HANDLER 08CC  
     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086              ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
             ?_USER_USB_CALLBACK_EVENT_HANDLER 0010                _USER_USB_CALLBACK_EVENT_HANDLER 0846  
                             ___lwmod@dividend 0060                   i2USBTransferOnePacket@handle 000A  
                      i2c_adc_start@resolution 006A              __end_of_ExternalFlash_SectorWrite 2400  
                             ___lldiv@dividend 0060          __end_of__flash_write_page_from_buffer 19CA  
       __size_of__flash_write_page_from_buffer 005A                  __flash_write_page_from_buffer 1970  
                     __end_of__get_input_power 0A54                         ??_rtcc_get_day_decimal 0063  
       i2SYSTEM_Initialize@pll_startup_counter 0001           SYSTEM_Initialize@pll_startup_counter 0060  
                        __update_modified_time 2360                                _display_content 0354  
                  ??_buck_remote_get_dutycycle 0060                     __end_of_flash_partial_read 0F38  
                      __end_of_MSDWriteHandler BD64                                      strncmp@s1 0060  
                                    strncmp@s2 0062                                 ?_rtcc_get_year 0001  
                      __size_of_MSDReadHandler 01E6                                   _rtcc_get_day 2D80  
                   i2USBTransferOnePacket@data 0002                                  ??_system_init 0082  
                             _rtcc_get_minutes 2D64                               _rtcc_get_seconds 2D48  
                  __end_of_system_output_is_on 2B2A                         ??_USBConfigureEndpoint 0002  
                              ?__i2c_wait_idle 0001                          ?_USBCtrlTrfOutHandler 0001  
                              _display_prepare 0A54               __end_of_rtcc_get_minutes_decimal 2CCA  
                     ??__flash_write_to_buffer 007A                      __end_of_system_output_off 1AD2  
                    __size_of_rtcc_set_minutes 0018                       ?_APP_DeviceMSDInitialize 0001  
                    __size_of_rtcc_set_seconds 0018                      __display_efficiency@F8761 9177  
                    __display_efficiency@F8763 927B                      __display_efficiency@F8759 918A  
                          _USBCtrlTrfRxService E38E                                    ??_rtcc_init 007F  
                           _USBWakeFromSuspend 2396                          ??__parse_command_long 0064  
                         __end_of__display_usb D65A                              ?_system_output_on 0001  
                                 ?__ui_encoder 0001                                   _rtcc_set_day 2BEC  
                           _i2c_display_cursor 2778                        _USBStdFeatureReqHandler C002  
                      _temperatureExternal1Sum 0276                        _temperatureExternal2Sum 0272  
                    rtcc_increment_hours@hours 0068                                 ?_buck_get_mode 0001  
                          i2_SYSTEM_Initialize 1B7C                            _USBCtrlTrfTxService F7B6  
                   __size_of_SYS_InterruptHigh 009E          __flash_write_page_from_buffer@command 0079  
                      __rtcc_increment_bcd@max 0065                             ??_system_output_on 0060  
                      __rtcc_increment_bcd@min 0064                                       utoa@base 006B  
                                   _RTCCFGbits 000F3F                                _gblMediaPresent 02B6  
                  __end_of__rtcc_write_disable 2C60                                 ?_rtcc_set_year 0001  
                              _inputVoltageSum 029A                          _i2c_digipot_backlight 2672  
          ExternalFlash_SectorRead@sector_addr 008D                            ?_USBWakeFromSuspend 0001  
                                   _PPSCONbits 000EBF                               ___lldiv@quotient 0068  
                              ___lwmod@divisor 0062                    ??_ExternalFlash_MediaDetect 0062  
                          ?_i2c_display_cursor 006D                          ??_USBCtrlTrfInHandler 0002  
                                     strlen@cp 0064                         _system_encoder_disable 2DFE  
 __end_of__i2c_eeprom_load_default_calibration A2FE  __size_of__i2c_eeprom_load_default_calibration 03C2  
       ??__i2c_eeprom_load_default_calibration 0063          ?__i2c_eeprom_load_default_calibration 0060  
         __i2c_eeprom_load_default_calibration 9F3C                   __flash_spi_tx_tx@data_length 0066  
                        _USBAlternateInterface 01FC                                ___lwmod@counter 0064  
                    __display_efficiency@panel 00C9               __end_of_rtcc_get_seconds_decimal 2D2A  
                __size_of__i2c_not_acknowledge 000A                        _buck_remote_synchronous 004D  
                                  _ptrNextData 01E7                          __end_of_log_start_new F7B6  
                                 ___aldiv@sign 0069                         _rtcc_decrement_minutes 29BC  
                       _rtcc_decrement_seconds 2978                      i2USBTransferOnePacket@dir 0001  
                    i2USBTransferOnePacket@len 0004                          ?__rtcc_bdc_to_decimal 0001  
                          USBEnableEndpoint@ep 000C                                _endpoint_number 0057  
                             _rtcc_correct_day 2A44                                 _display_update 0DCA  
                        ?__buck_operate_remote 0001                                 ?_flash_is_busy 0001  
                         ?_USBCtrlTrfRxService 0001                          _MSDCheckForErrorCases EDC4  
                         __get_input_power@pwr 0070                     __end_of__rtcc_write_enable 2C4A  
                ?_MSDComputeDeviceInAndResidue 0060               __end_of__ic2_display_set_address 2722  
          __end_of_i2c_eeprom_read_calibration E276                    _i2c_eeprom_read_calibration E158  
                         ?i2_SYSTEM_Initialize 0001                       ?_USBCtrlEPAllowDataStage 0001  
                               _MSBBufferIndex 02B8                       __flash_spi_tx_rx@command 0060  
                         ?_USBCtrlTrfTxService 0001                                  _i2c_adc_start 22F0  
                    flash_partial_read@address 0083             __end_of__parse_command_calibration DF10  
                   __parse_command_calibration DDE6                                     _USBMSDInit E49E  
                                ?_buck_operate 0001                   _USBStatusStageTimeoutCounter 0056  
              ??_ExternalFlash_MediaInitialize 0062                           ??_USBWakeFromSuspend 0018  
                   USBTransferOnePacket@handle 0069                         _rtcc_get_month_decimal 2CEA  
                         ??_i2c_display_cursor 006E                      flash_partial_read@command 007F  
                    rtcc_increment_month@month 0068                       ??_fat_get_empty_clusters 0089  
                    __size_of_i2c_eeprom_tasks 0070                                     _USB_CD_Ptr 9339  
                     __end_of__get_temperature 26CA                       __flash_spi_tx_tx@command 0060  
                    __size_of_i2c_eeprom_write 0082                                    _power_state 004B  
                                  _USBInHandle 00F9                       _APP_DeviceCustomHIDTasks ADCC  
