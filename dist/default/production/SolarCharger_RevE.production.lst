

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jul 23 22:13:41 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1,group=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	text251,global,reloc=2,class=CODE,delta=1
   275                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   276                           	psect	text252,global,reloc=2,class=CODE,delta=1
   277                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   278                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   279                           	dabs	1,0x600,512,_msd_buffer
   280                           	dabs	1,0xD00,48,_BDT
   281                           	dabs	1,0xD40,31,_msd_cbw
   282                           	dabs	1,0xD80,13,_msd_csw
   283                           	dabs	1,0xD38,8,_CtrlTrfData
   284                           	dabs	1,0xD30,8,_SetupPkt
   285  0000                     
   286                           ; Version 1.44
   287                           ; Generated 14/09/2017 GMT
   288                           ; 
   289                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   290                           ; All rights reserved.
   291                           ; 
   292                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   293                           ; 
   294                           ; Redistribution and use in source and binary forms, with or without modification, are
   295                           ; permitted provided that the following conditions are met:
   296                           ; 
   297                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   298                           ;        conditions and the following disclaimer.
   299                           ; 
   300                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   301                           ;        of conditions and the following disclaimer in the documentation and/or other
   302                           ;        materials provided with the distribution.
   303                           ; 
   304                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   305                           ;        software without specific prior written permission.
   306                           ; 
   307                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   308                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   309                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   310                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   311                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   312                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   313                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   314                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   315                           ; 
   316                           ; 
   317                           ; Code-generator required, PIC18F47J53 Definitions
   318                           ; 
   319                           ; SFR Addresses
   320  0000                     
   321                           	psect	idataBANK2
   322  0123B2                     __pidataBANK2:
   323                           	opt stack 0
   324                           
   325                           ;initializer for _LUN
   326  0123B2  5E                 	db	low _ExternalFlash_MediaInitialize
   327  0123B3  2B                 	db	high _ExternalFlash_MediaInitialize
   328  0123B4  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   329  0123B5  B0                 	db	low _ExternalFlash_CapacityRead
   330  0123B6  2D                 	db	high _ExternalFlash_CapacityRead
   331  0123B7  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   332  0123B8  E2                 	db	low _ExternalFlash_SectorSizeRead
   333  0123B9  2E                 	db	high _ExternalFlash_SectorSizeRead
   334  0123BA  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   335  0123BB  16                 	db	low _ExternalFlash_MediaDetect
   336  0123BC  2F                 	db	high _ExternalFlash_MediaDetect
   337  0123BD  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   338  0123BE  3C                 	db	low _ExternalFlash_SectorRead
   339  0123BF  25                 	db	high _ExternalFlash_SectorRead
   340  0123C0  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   341  0123C1  58                 	db	low _ExternalFlash_WriteProtectStateGet
   342  0123C2  2F                 	db	high _ExternalFlash_WriteProtectStateGet
   343  0123C3  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   344  0123C4  08                 	db	low _ExternalFlash_SectorWrite
   345  0123C5  25                 	db	high _ExternalFlash_SectorWrite
   346  0123C6  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   347  0123C7  00                 	db	0
   348  0123C8  00                 	db	0
   349  0123C9  00                 	db	0
   350  0123CA  00                 	db	0
   351  0123CB  00                 	db	0
   352  0123CC  00                 	db	0
   353  0123CD  00                 	db	0
   354  0123CE  00                 	db	0
   355                           
   356                           ;initializer for system_init@F8579
   357  0123CF  54                 	db	84
   358  0123D0  45                 	db	69
   359  0123D1  53                 	db	83
   360  0123D2  54                 	db	84
   361  0123D3  20                 	db	32
   362  0123D4  20                 	db	32
   363  0123D5  20                 	db	32
   364  0123D6  20                 	db	32
   365  0123D7  00                 	db	0
   366                           
   367                           ;initializer for system_init@F8585
   368  0123D8  54                 	db	84
   369  0123D9  58                 	db	88
   370  0123DA  54                 	db	84
   371  0123DB  00                 	db	0
   372                           
   373                           ;initializer for system_init@F8581
   374  0123DC  54                 	db	84
   375  0123DD  58                 	db	88
   376  0123DE  54                 	db	84
   377  0123DF  00                 	db	0
   378                           
   379                           ;initializer for _battery_voltage_maximum
   380  0123E0  34BC               	dw	13500
   381                           
   382                           ;initializer for _filename
   383  0123E2  4C                 	db	76
   384  0123E3  4F                 	db	79
   385  0123E4  47                 	db	71
   386  0123E5  20                 	db	32
   387  0123E6  20                 	db	32
   388  0123E7  20                 	db	32
   389  0123E8  20                 	db	32
   390  0123E9  20                 	db	32
   391  0123EA  00                 	db	0
   392                           
   393                           ;initializer for _extension
   394  0123EB  54                 	db	84
   395  0123EC  58                 	db	88
   396  0123ED  54                 	db	84
   397  0123EE  00                 	db	0
   398                           
   399                           	psect	idataBANK3
   400  012C16                     __pidataBANK3:
   401                           	opt stack 0
   402                           
   403                           ;initializer for i2c_display_init@F8363
   404  012C16  3A                 	db	58
   405  012C17  1E                 	db	30
   406  012C18  39                 	db	57
   407  012C19  0C                 	db	12
   408  012C1A  74                 	db	116
   409  012C1B  5C                 	db	92
   410  012C1C  6D                 	db	109
   411  012C1D  0C                 	db	12
   412  012C1E  01                 	db	1
   413                           
   414                           ;initializer for i2c_display_send_init_sequence@F8360
   415  012C1F  3A                 	db	58
   416  012C20  1E                 	db	30
   417  012C21  39                 	db	57
   418  012C22  0C                 	db	12
   419  012C23  74                 	db	116
   420  012C24  5C                 	db	92
   421  012C25  6D                 	db	109
   422  012C26  0C                 	db	12
   423  012C27  01                 	db	1
   424                           
   425                           ;initializer for system_init@F8583
   426  012C28  4E                 	db	78
   427  012C29  45                 	db	69
   428  012C2A  57                 	db	87
   429  012C2B  46                 	db	70
   430  012C2C  49                 	db	73
   431  012C2D  4C                 	db	76
   432  012C2E  45                 	db	69
   433  012C2F  20                 	db	32
   434  012C30  00                 	db	0
   435                           
   436                           	psect	idataBANK4
   437  0113EC                     __pidataBANK4:
   438                           	opt stack 0
   439                           
   440                           ;initializer for system_init@F8587
   441  0113EC  4A                 	db	74
   442  0113ED  75                 	db	117
   443  0113EE  73                 	db	115
   444  0113EF  74                 	db	116
   445  0113F0  20                 	db	32
   446  0113F1  61                 	db	97
   447  0113F2  70                 	db	112
   448  0113F3  70                 	db	112
   449  0113F4  65                 	db	101
   450  0113F5  6E                 	db	110
   451  0113F6  64                 	db	100
   452  0113F7  65                 	db	101
   453  0113F8  64                 	db	100
   454  0113F9  20                 	db	32
   455  0113FA  74                 	db	116
   456  0113FB  68                 	db	104
   457  0113FC  69                 	db	105
   458  0113FD  73                 	db	115
   459  0113FE  20                 	db	32
   460  0113FF  74                 	db	116
   461  011400  65                 	db	101
   462  011401  78                 	db	120
   463  011402  74                 	db	116
   464  011403  21                 	db	33
   465  011404  20                 	db	32
   466  011405  4E                 	db	78
   467  011406  6F                 	db	111
   468  011407  77                 	db	119
   469  011408  20                 	db	32
   470  011409  74                 	db	116
   471  01140A  68                 	db	104
   472  01140B  69                 	db	105
   473  01140C  73                 	db	115
   474  01140D  20                 	db	32
   475  01140E  69                 	db	105
   476  01140F  73                 	db	115
   477  011410  20                 	db	32
   478  011411  73                 	db	115
   479  011412  75                 	db	117
   480  011413  70                 	db	112
   481  011414  65                 	db	101
   482  011415  72                 	db	114
   483  011416  2D                 	db	45
   484  011417  6C                 	db	108
   485  011418  6F                 	db	111
   486  011419  6E                 	db	110
   487  01141A  67                 	db	103
   488  01141B  2E                 	db	46
   489  01141C  20                 	db	32
   490  01141D  69                 	db	105
   491  01141E  74                 	db	116
   492  01141F  20                 	db	32
   493  011420  67                 	db	103
   494  011421  6F                 	db	111
   495  011422  65                 	db	101
   496  011423  73                 	db	115
   497  011424  20                 	db	32
   498  011425  6F                 	db	111
   499  011426  6E                 	db	110
   500  011427  20                 	db	32
   501  011428  61                 	db	97
   502  011429  6E                 	db	110
   503  01142A  64                 	db	100
   504  01142B  20                 	db	32
   505  01142C  6F                 	db	111
   506  01142D  6E                 	db	110
   507  01142E  20                 	db	32
   508  01142F  61                 	db	97
   509  011430  6E                 	db	110
   510  011431  64                 	db	100
   511  011432  20                 	db	32
   512  011433  6F                 	db	111
   513  011434  6E                 	db	110
   514  011435  20                 	db	32
   515  011436  2E                 	db	46
   516  011437  2E                 	db	46
   517  011438  2E                 	db	46
   518  011439  20                 	db	32
   519  01143A  62                 	db	98
   520  01143B  75                 	db	117
   521  01143C  74                 	db	116
   522  01143D  20                 	db	32
   523  01143E  66                 	db	102
   524  01143F  69                 	db	105
   525  011440  6E                 	db	110
   526  011441  61                 	db	97
   527  011442  6C                 	db	108
   528  011443  6C                 	db	108
   529  011444  79                 	db	121
   530  011445  20                 	db	32
   531  011446  69                 	db	105
   532  011447  74                 	db	116
   533  011448  20                 	db	32
   534  011449  65                 	db	101
   535  01144A  6E                 	db	110
   536  01144B  64                 	db	100
   537  01144C  73                 	db	115
   538  01144D  20                 	db	32
   539  01144E  48                 	db	72
   540  01144F  45                 	db	69
   541  011450  52                 	db	82
   542  011451  45                 	db	69
   543  011452  2E                 	db	46
   544  011453  00                 	db	0
   545                           
   546                           	psect	mediumconst
   547  0090AA                     __pmediumconst:
   548                           	opt stack 0
   549  0090AA  00                 	db	0
   550  0090AB                     __display_charger@F8752:
   551                           	opt stack 0
   552  0090AB  43                 	db	67
   553  0090AC  68                 	db	104
   554  0090AD  61                 	db	97
   555  0090AE  72                 	db	114
   556  0090AF  67                 	db	103
   557  0090B0  65                 	db	101
   558  0090B1  72                 	db	114
   559  0090B2  20                 	db	32
   560  0090B3  41                 	db	65
   561  0090B4  73                 	db	115
   562  0090B5  79                 	db	121
   563  0090B6  6E                 	db	110
   564  0090B7  63                 	db	99
   565  0090B8  68                 	db	104
   566  0090B9  72                 	db	114
   567  0090BA  6F                 	db	111
   568  0090BB  6E                 	db	110
   569  0090BC  6F                 	db	111
   570  0090BD  75                 	db	117
   571  0090BE  73                 	db	115
   572  0090BF  00                 	db	0
   573  0090C0                     __end_of__display_charger@F8752:
   574                           	opt stack 0
   575  0090C0                     __display_charger@F8738:
   576                           	opt stack 0
   577  0090C0  4D                 	db	77
   578  0090C1  50                 	db	80
   579  0090C2  50                 	db	80
   580  0090C3  54                 	db	84
   581  0090C4  20                 	db	32
   582  0090C5  43                 	db	67
   583  0090C6  68                 	db	104
   584  0090C7  61                 	db	97
   585  0090C8  72                 	db	114
   586  0090C9  67                 	db	103
   587  0090CA  65                 	db	101
   588  0090CB  72                 	db	114
   589  0090CC  20                 	db	32
   590  0090CD  44                 	db	68
   591  0090CE  65                 	db	101
   592  0090CF  74                 	db	116
   593  0090D0  61                 	db	97
   594  0090D1  69                 	db	105
   595  0090D2  6C                 	db	108
   596  0090D3  73                 	db	115
   597  0090D4  00                 	db	0
   598  0090D5                     __end_of__display_charger@F8738:
   599                           	opt stack 0
   600  0090D5                     __display_outputs@F8734:
   601                           	opt stack 0
   602  0090D5  20                 	db	32
   603  0090D6  20                 	db	32
   604  0090D7  4F                 	db	79
   605  0090D8  75                 	db	117
   606  0090D9  74                 	db	116
   607  0090DA  33                 	db	51
   608  0090DB  20                 	db	32
   609  0090DC  6F                 	db	111
   610  0090DD  66                 	db	102
   611  0090DE  66                 	db	102
   612  0090DF  20                 	db	32
   613  0090E0  20                 	db	32
   614  0090E1  4F                 	db	79
   615  0090E2  75                 	db	117
   616  0090E3  74                 	db	116
   617  0090E4  34                 	db	52
   618  0090E5  20                 	db	32
   619  0090E6  6F                 	db	111
   620  0090E7  66                 	db	102
   621  0090E8  66                 	db	102
   622  0090E9  00                 	db	0
   623  0090EA                     __end_of__display_outputs@F8734:
   624                           	opt stack 0
   625  0090EA                     __display_outputs@F8732:
   626                           	opt stack 0
   627  0090EA  20                 	db	32
   628  0090EB  20                 	db	32
   629  0090EC  4F                 	db	79
   630  0090ED  75                 	db	117
   631  0090EE  74                 	db	116
   632  0090EF  31                 	db	49
   633  0090F0  20                 	db	32
   634  0090F1  6F                 	db	111
   635  0090F2  66                 	db	102
   636  0090F3  66                 	db	102
   637  0090F4  20                 	db	32
   638  0090F5  20                 	db	32
   639  0090F6  4F                 	db	79
   640  0090F7  75                 	db	117
   641  0090F8  74                 	db	116
   642  0090F9  32                 	db	50
   643  0090FA  20                 	db	32
   644  0090FB  6F                 	db	111
   645  0090FC  66                 	db	102
   646  0090FD  66                 	db	102
   647  0090FE  00                 	db	0
   648  0090FF                     __end_of__display_outputs@F8732:
   649                           	opt stack 0
   650  0090FF                     __display_temperature@F8779:
   651                           	opt stack 0
   652  0090FF  54                 	db	84
   653  009100  65                 	db	101
   654  009101  6D                 	db	109
   655  009102  70                 	db	112
   656  009103  65                 	db	101
   657  009104  72                 	db	114
   658  009105  61                 	db	97
   659  009106  74                 	db	116
   660  009107  75                 	db	117
   661  009108  72                 	db	114
   662  009109  65                 	db	101
   663  00910A  20                 	db	32
   664  00910B  4D                 	db	77
   665  00910C  6F                 	db	111
   666  00910D  6E                 	db	110
   667  00910E  69                 	db	105
   668  00910F  74                 	db	116
   669  009110  6F                 	db	111
   670  009111  72                 	db	114
   671  009112  00                 	db	0
   672  009113                     __end_of__display_temperature@F8779:
   673                           	opt stack 0
   674  009113                     __display_charger@F8754:
   675                           	opt stack 0
   676  009113  43                 	db	67
   677  009114  68                 	db	104
   678  009115  61                 	db	97
   679  009116  72                 	db	114
   680  009117  67                 	db	103
   681  009118  65                 	db	101
   682  009119  72                 	db	114
   683  00911A  20                 	db	32
   684  00911B  53                 	db	83
   685  00911C  79                 	db	121
   686  00911D  6E                 	db	110
   687  00911E  63                 	db	99
   688  00911F  68                 	db	104
   689  009120  72                 	db	114
   690  009121  6F                 	db	111
   691  009122  6E                 	db	110
   692  009123  6F                 	db	111
   693  009124  75                 	db	117
   694  009125  73                 	db	115
   695  009126  00                 	db	0
   696  009127                     __end_of__display_charger@F8754:
   697                           	opt stack 0
   698  009127                     __display_usb@F8718:
   699                           	opt stack 0
   700  009127  55                 	db	85
   701  009128  53                 	db	83
   702  009129  42                 	db	66
   703  00912A  20                 	db	32
   704  00912B  43                 	db	67
   705  00912C  68                 	db	104
   706  00912D  61                 	db	97
   707  00912E  72                 	db	114
   708  00912F  67                 	db	103
   709  009130  65                 	db	101
   710  009131  72                 	db	114
   711  009132  20                 	db	32
   712  009133  4F                 	db	79
   713  009134  75                 	db	117
   714  009135  74                 	db	116
   715  009136  70                 	db	112
   716  009137  75                 	db	117
   717  009138  74                 	db	116
   718  009139  73                 	db	115
   719  00913A  00                 	db	0
   720  00913B                     __end_of__display_usb@F8718:
   721                           	opt stack 0
   722  00913B                     __display_time@F8705:
   723                           	opt stack 0
   724  00913B  2D                 	db	45
   725  00913C  3E                 	db	62
   726  00913D  50                 	db	80
   727  00913E  72                 	db	114
   728  00913F  65                 	db	101
   729  009140  73                 	db	115
   730  009141  73                 	db	115
   731  009142  20                 	db	32
   732  009143  66                 	db	102
   733  009144  6F                 	db	111
   734  009145  72                 	db	114
   735  009146  20                 	db	32
   736  009147  73                 	db	115
   737  009148  65                 	db	101
   738  009149  63                 	db	99
   739  00914A  6F                 	db	111
   740  00914B  6E                 	db	110
   741  00914C  64                 	db	100
   742  00914D  73                 	db	115
   743  00914E  00                 	db	0
   744  00914F                     __end_of__display_time@F8705:
   745                           	opt stack 0
   746  00914F                     __display_time@F8703:
   747                           	opt stack 0
   748  00914F  2D                 	db	45
   749  009150  3E                 	db	62
   750  009151  50                 	db	80
   751  009152  72                 	db	114
   752  009153  65                 	db	101
   753  009154  73                 	db	115
   754  009155  73                 	db	115
   755  009156  20                 	db	32
   756  009157  66                 	db	102
   757  009158  6F                 	db	111
   758  009159  72                 	db	114
   759  00915A  20                 	db	32
   760  00915B  6D                 	db	109
   761  00915C  69                 	db	105
   762  00915D  6E                 	db	110
   763  00915E  75                 	db	117
   764  00915F  74                 	db	116
   765  009160  65                 	db	101
   766  009161  73                 	db	115
   767  009162  00                 	db	0
   768  009163                     __end_of__display_time@F8703:
   769                           	opt stack 0
   770  009163                     __display_time@F8695:
   771                           	opt stack 0
   772  009163  2D                 	db	45
   773  009164  3E                 	db	62
   774  009165  50                 	db	80
   775  009166  72                 	db	114
   776  009167  65                 	db	101
   777  009168  73                 	db	115
   778  009169  73                 	db	115
   779  00916A  20                 	db	32
   780  00916B  74                 	db	116
   781  00916C  6F                 	db	111
   782  00916D  20                 	db	32
   783  00916E  73                 	db	115
   784  00916F  65                 	db	101
   785  009170  74                 	db	116
   786  009171  20                 	db	32
   787  009172  74                 	db	116
   788  009173  69                 	db	105
   789  009174  6D                 	db	109
   790  009175  65                 	db	101
   791  009176  00                 	db	0
   792  009177                     __end_of__display_time@F8695:
   793                           	opt stack 0
   794  009177                     __display_efficiency@F8761:
   795                           	opt stack 0
   796  009177  50                 	db	80
   797  009178  61                 	db	97
   798  009179  6E                 	db	110
   799  00917A  65                 	db	101
   800  00917B  6C                 	db	108
   801  00917C  3A                 	db	58
   802  00917D  20                 	db	32
   803  00917E  20                 	db	32
   804  00917F  20                 	db	32
   805  009180  20                 	db	32
   806  009181  42                 	db	66
   807  009182  61                 	db	97
   808  009183  74                 	db	116
   809  009184  74                 	db	116
   810  009185  65                 	db	101
   811  009186  72                 	db	114
   812  009187  79                 	db	121
   813  009188  3A                 	db	58
   814  009189  00                 	db	0
   815  00918A                     __end_of__display_efficiency@F8761:
   816                           	opt stack 0
   817  00918A                     __display_efficiency@F8759:
   818                           	opt stack 0
   819  00918A  43                 	db	67
   820  00918B  68                 	db	104
   821  00918C  61                 	db	97
   822  00918D  72                 	db	114
   823  00918E  67                 	db	103
   824  00918F  65                 	db	101
   825  009190  72                 	db	114
   826  009191  20                 	db	32
   827  009192  45                 	db	69
   828  009193  66                 	db	102
   829  009194  66                 	db	102
   830  009195  69                 	db	105
   831  009196  63                 	db	99
   832  009197  69                 	db	105
   833  009198  65                 	db	101
   834  009199  6E                 	db	110
   835  00919A  63                 	db	99
   836  00919B  79                 	db	121
   837  00919C  00                 	db	0
   838  00919D                     __end_of__display_efficiency@F8759:
   839                           	opt stack 0
   840  00919D                     __display_charger@F8742:
   841                           	opt stack 0
   842  00919D  43                 	db	67
   843  00919E  68                 	db	104
   844  00919F  61                 	db	97
   845  0091A0  72                 	db	114
   846  0091A1  67                 	db	103
   847  0091A2  65                 	db	101
   848  0091A3  72                 	db	114
   849  0091A4  20                 	db	32
   850  0091A5  73                 	db	115
   851  0091A6  75                 	db	117
   852  0091A7  70                 	db	112
   853  0091A8  70                 	db	112
   854  0091A9  6C                 	db	108
   855  0091AA  79                 	db	121
   856  0091AB  20                 	db	32
   857  0091AC  6F                 	db	111
   858  0091AD  66                 	db	102
   859  0091AE  66                 	db	102
   860  0091AF  00                 	db	0
   861  0091B0                     __end_of__display_charger@F8742:
   862                           	opt stack 0
   863  0091B0                     __display_charger@F8740:
   864                           	opt stack 0
   865  0091B0  43                 	db	67
   866  0091B1  68                 	db	104
   867  0091B2  61                 	db	97
   868  0091B3  72                 	db	114
   869  0091B4  67                 	db	103
   870  0091B5  65                 	db	101
   871  0091B6  72                 	db	114
   872  0091B7  20                 	db	32
   873  0091B8  73                 	db	115
   874  0091B9  75                 	db	117
   875  0091BA  70                 	db	112
   876  0091BB  70                 	db	112
   877  0091BC  6C                 	db	108
   878  0091BD  79                 	db	121
   879  0091BE  20                 	db	32
   880  0091BF  6F                 	db	111
   881  0091C0  6E                 	db	110
   882  0091C1  00                 	db	0
   883  0091C2                     __end_of__display_charger@F8740:
   884                           	opt stack 0
   885  0091C2                     __display_time@F8701:
   886                           	opt stack 0
   887  0091C2  2D                 	db	45
   888  0091C3  3E                 	db	62
   889  0091C4  50                 	db	80
   890  0091C5  72                 	db	114
   891  0091C6  65                 	db	101
   892  0091C7  73                 	db	115
   893  0091C8  73                 	db	115
   894  0091C9  20                 	db	32
   895  0091CA  66                 	db	102
   896  0091CB  6F                 	db	111
   897  0091CC  72                 	db	114
   898  0091CD  20                 	db	32
   899  0091CE  68                 	db	104
   900  0091CF  6F                 	db	111
   901  0091D0  75                 	db	117
   902  0091D1  72                 	db	114
   903  0091D2  73                 	db	115
   904  0091D3  00                 	db	0
   905  0091D4                     __end_of__display_time@F8701:
   906                           	opt stack 0
   907  0091D4                     __display_time@F8697:
   908                           	opt stack 0
   909  0091D4  2D                 	db	45
   910  0091D5  3E                 	db	62
   911  0091D6  50                 	db	80
   912  0091D7  72                 	db	114
   913  0091D8  65                 	db	101
   914  0091D9  73                 	db	115
   915  0091DA  73                 	db	115
   916  0091DB  20                 	db	32
   917  0091DC  66                 	db	102
   918  0091DD  6F                 	db	111
   919  0091DE  72                 	db	114
   920  0091DF  20                 	db	32
   921  0091E0  6D                 	db	109
   922  0091E1  6F                 	db	111
   923  0091E2  6E                 	db	110
   924  0091E3  74                 	db	116
   925  0091E4  68                 	db	104
   926  0091E5  00                 	db	0
   927  0091E6                     __end_of__display_time@F8697:
   928                           	opt stack 0
   929  0091E6                     __display_inout@F8673:
   930                           	opt stack 0
   931  0091E6  20                 	db	32
   932  0091E7  20                 	db	32
   933  0091E8  20                 	db	32
   934  0091E9  49                 	db	73
   935  0091EA  6E                 	db	110
   936  0091EB  70                 	db	112
   937  0091EC  75                 	db	117
   938  0091ED  74                 	db	116
   939  0091EE  20                 	db	32
   940  0091EF  20                 	db	32
   941  0091F0  20                 	db	32
   942  0091F1  4F                 	db	79
   943  0091F2  75                 	db	117
   944  0091F3  74                 	db	116
   945  0091F4  70                 	db	112
   946  0091F5  75                 	db	117
   947  0091F6  74                 	db	116
   948  0091F7  00                 	db	0
   949  0091F8                     __end_of__display_inout@F8673:
   950                           	opt stack 0
   951  0091F8                     __display_inout@F8671:
   952                           	opt stack 0
   953  0091F8  56                 	db	86
   954  0091F9  6F                 	db	111
   955  0091FA  6C                 	db	108
   956  0091FB  74                 	db	116
   957  0091FC  61                 	db	97
   958  0091FD  67                 	db	103
   959  0091FE  65                 	db	101
   960  0091FF  20                 	db	32
   961  009200  26                 	db	38
   962  009201  20                 	db	32
   963  009202  43                 	db	67
   964  009203  75                 	db	117
   965  009204  72                 	db	114
   966  009205  72                 	db	114
   967  009206  65                 	db	101
   968  009207  6E                 	db	110
   969  009208  74                 	db	116
   970  009209  00                 	db	0
   971  00920A                     __end_of__display_inout@F8671:
   972                           	opt stack 0
   973  00920A                     __display_usb@F8724:
   974                           	opt stack 0
   975  00920A  55                 	db	85
   976  00920B  53                 	db	83
   977  00920C  42                 	db	66
   978  00920D  20                 	db	32
   979  00920E  63                 	db	99
   980  00920F  68                 	db	104
   981  009210  61                 	db	97
   982  009211  72                 	db	114
   983  009212  67                 	db	103
   984  009213  69                 	db	105
   985  009214  6E                 	db	110
   986  009215  67                 	db	103
   987  009216  20                 	db	32
   988  009217  6F                 	db	111
   989  009218  66                 	db	102
   990  009219  66                 	db	102
   991  00921A  00                 	db	0
   992  00921B                     __end_of__display_usb@F8724:
   993                           	opt stack 0
   994  00921B                     __display_charger@F8750:
   995                           	opt stack 0
   996  00921B  43                 	db	67
   997  00921C  68                 	db	104
   998  00921D  61                 	db	97
   999  00921E  72                 	db	114
  1000  00921F  67                 	db	103
  1001  009220  65                 	db	101
  1002  009221  72                 	db	114
  1003  009222  20                 	db	32
  1004  009223  53                 	db	83
  1005  009224  74                 	db	116
  1006  009225  61                 	db	97
  1007  009226  72                 	db	114
  1008  009227  74                 	db	116
  1009  009228  75                 	db	117
  1010  009229  70                 	db	112
  1011  00922A  00                 	db	0
  1012  00922B                     __end_of__display_charger@F8750:
  1013                           	opt stack 0
  1014  00922B                     __display_outputs@F8730:
  1015                           	opt stack 0
  1016  00922B  42                 	db	66
  1017  00922C  61                 	db	97
  1018  00922D  74                 	db	116
  1019  00922E  74                 	db	116
  1020  00922F  65                 	db	101
  1021  009230  72                 	db	114
  1022  009231  79                 	db	121
  1023  009232  20                 	db	32
  1024  009233  74                 	db	116
  1025  009234  6F                 	db	111
  1026  009235  6F                 	db	111
  1027  009236  20                 	db	32
  1028  009237  6C                 	db	108
  1029  009238  6F                 	db	111
  1030  009239  77                 	db	119
  1031  00923A  00                 	db	0
  1032  00923B                     __end_of__display_outputs@F8730:
  1033                           	opt stack 0
  1034  00923B                     __display_usb@F8722:
  1035                           	opt stack 0
  1036  00923B  55                 	db	85
  1037  00923C  53                 	db	83
  1038  00923D  42                 	db	66
  1039  00923E  20                 	db	32
  1040  00923F  63                 	db	99
  1041  009240  68                 	db	104
  1042  009241  61                 	db	97
  1043  009242  72                 	db	114
  1044  009243  67                 	db	103
  1045  009244  69                 	db	105
  1046  009245  6E                 	db	110
  1047  009246  67                 	db	103
  1048  009247  20                 	db	32
  1049  009248  6F                 	db	111
  1050  009249  6E                 	db	110
  1051  00924A  00                 	db	0
  1052  00924B                     __end_of__display_usb@F8722:
  1053                           	opt stack 0
  1054  00924B                     __display_usb@F8720:
  1055                           	opt stack 0
  1056  00924B  42                 	db	66
  1057  00924C  61                 	db	97
  1058  00924D  74                 	db	116
  1059  00924E  74                 	db	116
  1060  00924F  65                 	db	101
  1061  009250  72                 	db	114
  1062  009251  79                 	db	121
  1063  009252  20                 	db	32
  1064  009253  74                 	db	116
  1065  009254  6F                 	db	111
  1066  009255  6F                 	db	111
  1067  009256  20                 	db	32
  1068  009257  6C                 	db	108
  1069  009258  6F                 	db	111
  1070  009259  77                 	db	119
  1071  00925A  00                 	db	0
  1072  00925B                     __end_of__display_usb@F8720:
  1073                           	opt stack 0
  1074  00925B                     __display_time@F8707:
  1075                           	opt stack 0
  1076  00925B  2D                 	db	45
  1077  00925C  3E                 	db	62
  1078  00925D  50                 	db	80
  1079  00925E  72                 	db	114
  1080  00925F  65                 	db	101
  1081  009260  73                 	db	115
  1082  009261  73                 	db	115
  1083  009262  20                 	db	32
  1084  009263  74                 	db	116
  1085  009264  6F                 	db	111
  1086  009265  20                 	db	32
  1087  009266  73                 	db	115
  1088  009267  61                 	db	97
  1089  009268  76                 	db	118
  1090  009269  65                 	db	101
  1091  00926A  00                 	db	0
  1092  00926B                     __end_of__display_time@F8707:
  1093                           	opt stack 0
  1094  00926B                     __display_time@F8699:
  1095                           	opt stack 0
  1096  00926B  2D                 	db	45
  1097  00926C  3E                 	db	62
  1098  00926D  50                 	db	80
  1099  00926E  72                 	db	114
  1100  00926F  65                 	db	101
  1101  009270  73                 	db	115
  1102  009271  73                 	db	115
  1103  009272  20                 	db	32
  1104  009273  66                 	db	102
  1105  009274  6F                 	db	111
  1106  009275  72                 	db	114
  1107  009276  20                 	db	32
  1108  009277  64                 	db	100
  1109  009278  61                 	db	97
  1110  009279  79                 	db	121
  1111  00927A  00                 	db	0
  1112  00927B                     __end_of__display_time@F8699:
  1113                           	opt stack 0
  1114  00927B                     __display_efficiency@F8763:
  1115                           	opt stack 0
  1116  00927B  45                 	db	69
  1117  00927C  3A                 	db	58
  1118  00927D  20                 	db	32
  1119  00927E  20                 	db	32
  1120  00927F  20                 	db	32
  1121  009280  20                 	db	32
  1122  009281  20                 	db	32
  1123  009282  20                 	db	32
  1124  009283  20                 	db	32
  1125  009284  20                 	db	32
  1126  009285  20                 	db	32
  1127  009286  4C                 	db	76
  1128  009287  3A                 	db	58
  1129  009288  00                 	db	0
  1130  009289                     __end_of__display_efficiency@F8763:
  1131                           	opt stack 0
  1132  009289                     __display_outputs@F8728:
  1133                           	opt stack 0
  1134  009289  50                 	db	80
  1135  00928A  6F                 	db	111
  1136  00928B  77                 	db	119
  1137  00928C  65                 	db	101
  1138  00928D  72                 	db	114
  1139  00928E  20                 	db	32
  1140  00928F  4F                 	db	79
  1141  009290  75                 	db	117
  1142  009291  74                 	db	116
  1143  009292  70                 	db	112
  1144  009293  75                 	db	117
  1145  009294  74                 	db	116
  1146  009295  73                 	db	115
  1147  009296  00                 	db	0
  1148  009297                     __end_of__display_outputs@F8728:
  1149                           	opt stack 0
  1150  009297                     __display_time@F8681:
  1151                           	opt stack 0
  1152  009297  54                 	db	84
  1153  009298  69                 	db	105
  1154  009299  6D                 	db	109
  1155  00929A  65                 	db	101
  1156  00929B  20                 	db	32
  1157  00929C  61                 	db	97
  1158  00929D  6E                 	db	110
  1159  00929E  64                 	db	100
  1160  00929F  20                 	db	32
  1161  0092A0  44                 	db	68
  1162  0092A1  61                 	db	97
  1163  0092A2  74                 	db	116
  1164  0092A3  65                 	db	101
  1165  0092A4  00                 	db	0
  1166  0092A5                     __end_of__display_time@F8681:
  1167                           	opt stack 0
  1168  0092A5                     __display_inout@F8677:
  1169                           	opt stack 0
  1170  0092A5  41                 	db	65
  1171  0092A6  3A                 	db	58
  1172  0092A7  20                 	db	32
  1173  0092A8  2D                 	db	45
  1174  0092A9  2D                 	db	45
  1175  0092AA  20                 	db	32
  1176  0092AB  20                 	db	32
  1177  0092AC  20                 	db	32
  1178  0092AD  20                 	db	32
  1179  0092AE  20                 	db	32
  1180  0092AF  20                 	db	32
  1181  0092B0  2D                 	db	45
  1182  0092B1  2D                 	db	45
  1183  0092B2  00                 	db	0
  1184  0092B3                     __end_of__display_inout@F8677:
  1185                           	opt stack 0
  1186  0092B3                     __display_temperature@F8785:
  1187                           	opt stack 0
  1188  0092B3  45                 	db	69
  1189  0092B4  78                 	db	120
  1190  0092B5  74                 	db	116
  1191  0092B6  65                 	db	101
  1192  0092B7  72                 	db	114
  1193  0092B8  6E                 	db	110
  1194  0092B9  61                 	db	97
  1195  0092BA  6C                 	db	108
  1196  0092BB  20                 	db	32
  1197  0092BC  32                 	db	50
  1198  0092BD  3A                 	db	58
  1199  0092BE  00                 	db	0
  1200  0092BF                     __end_of__display_temperature@F8785:
  1201                           	opt stack 0
  1202  0092BF                     __display_temperature@F8783:
  1203                           	opt stack 0
  1204  0092BF  45                 	db	69
  1205  0092C0  78                 	db	120
  1206  0092C1  74                 	db	116
  1207  0092C2  65                 	db	101
  1208  0092C3  72                 	db	114
  1209  0092C4  6E                 	db	110
  1210  0092C5  61                 	db	97
  1211  0092C6  6C                 	db	108
  1212  0092C7  20                 	db	32
  1213  0092C8  31                 	db	49
  1214  0092C9  3A                 	db	58
  1215  0092CA  00                 	db	0
  1216  0092CB                     __end_of__display_temperature@F8783:
  1217                           	opt stack 0
  1218  0092CB                     __display_charger@F8748:
  1219                           	opt stack 0
  1220  0092CB  43                 	db	67
  1221  0092CC  68                 	db	104
  1222  0092CD  61                 	db	97
  1223  0092CE  72                 	db	114
  1224  0092CF  67                 	db	103
  1225  0092D0  65                 	db	101
  1226  0092D1  72                 	db	114
  1227  0092D2  20                 	db	32
  1228  0092D3  6F                 	db	111
  1229  0092D4  66                 	db	102
  1230  0092D5  66                 	db	102
  1231  0092D6  00                 	db	0
  1232  0092D7                     __end_of__display_charger@F8748:
  1233                           	opt stack 0
  1234  0092D7                     __display_time@F8693:
  1235                           	opt stack 0
  1236  0092D7  53                 	db	83
  1237  0092D8  65                 	db	101
  1238  0092D9  74                 	db	116
  1239  0092DA  20                 	db	32
  1240  0092DB  73                 	db	115
  1241  0092DC  65                 	db	101
  1242  0092DD  63                 	db	99
  1243  0092DE  6F                 	db	111
  1244  0092DF  6E                 	db	110
  1245  0092E0  64                 	db	100
  1246  0092E1  73                 	db	115
  1247  0092E2  00                 	db	0
  1248  0092E3                     __end_of__display_time@F8693:
  1249                           	opt stack 0
  1250  0092E3                     __display_time@F8691:
  1251                           	opt stack 0
  1252  0092E3  53                 	db	83
  1253  0092E4  65                 	db	101
  1254  0092E5  74                 	db	116
  1255  0092E6  20                 	db	32
  1256  0092E7  6D                 	db	109
  1257  0092E8  69                 	db	105
  1258  0092E9  6E                 	db	110
  1259  0092EA  75                 	db	117
  1260  0092EB  74                 	db	116
  1261  0092EC  65                 	db	101
  1262  0092ED  73                 	db	115
  1263  0092EE  00                 	db	0
  1264  0092EF                     __end_of__display_time@F8691:
  1265                           	opt stack 0
  1266  0092EF                     __display_temperature@F8781:
  1267                           	opt stack 0
  1268  0092EF  4F                 	db	79
  1269  0092F0  6E                 	db	110
  1270  0092F1  2D                 	db	45
  1271  0092F2  62                 	db	98
  1272  0092F3  6F                 	db	111
  1273  0092F4  61                 	db	97
  1274  0092F5  72                 	db	114
  1275  0092F6  64                 	db	100
  1276  0092F7  3A                 	db	58
  1277  0092F8  20                 	db	32
  1278  0092F9  00                 	db	0
  1279  0092FA                     __end_of__display_temperature@F8781:
  1280                           	opt stack 0
  1281  0092FA                     __display_time@F8689:
  1282                           	opt stack 0
  1283  0092FA  53                 	db	83
  1284  0092FB  65                 	db	101
  1285  0092FC  74                 	db	116
  1286  0092FD  20                 	db	32
  1287  0092FE  68                 	db	104
  1288  0092FF  6F                 	db	111
  1289  009300  75                 	db	117
  1290  009301  72                 	db	114
  1291  009302  73                 	db	115
  1292  009303  00                 	db	0
  1293  009304                     __end_of__display_time@F8689:
  1294                           	opt stack 0
  1295  009304                     __display_time@F8685:
  1296                           	opt stack 0
  1297  009304  53                 	db	83
  1298  009305  65                 	db	101
  1299  009306  74                 	db	116
  1300  009307  20                 	db	32
  1301  009308  6D                 	db	109
  1302  009309  6F                 	db	111
  1303  00930A  6E                 	db	110
  1304  00930B  74                 	db	116
  1305  00930C  68                 	db	104
  1306  00930D  00                 	db	0
  1307  00930E                     __end_of__display_time@F8685:
  1308                           	opt stack 0
  1309  00930E                     __display_time@F8683:
  1310                           	opt stack 0
  1311  00930E  53                 	db	83
  1312  00930F  65                 	db	101
  1313  009310  74                 	db	116
  1314  009311  20                 	db	32
  1315  009312  79                 	db	121
  1316  009313  65                 	db	101
  1317  009314  61                 	db	97
  1318  009315  72                 	db	114
  1319  009316  00                 	db	0
  1320  009317                     __end_of__display_time@F8683:
  1321                           	opt stack 0
  1322  009317                     __display_charger@F8746:
  1323                           	opt stack 0
  1324  009317  46                 	db	70
  1325  009318  61                 	db	97
  1326  009319  6E                 	db	110
  1327  00931A  20                 	db	32
  1328  00931B  6F                 	db	111
  1329  00931C  66                 	db	102
  1330  00931D  66                 	db	102
  1331  00931E  00                 	db	0
  1332  00931F                     __end_of__display_charger@F8746:
  1333                           	opt stack 0
  1334  00931F                     __display_time@F8687:
  1335                           	opt stack 0
  1336  00931F  53                 	db	83
  1337  009320  65                 	db	101
  1338  009321  74                 	db	116
  1339  009322  20                 	db	32
  1340  009323  64                 	db	100
  1341  009324  61                 	db	97
  1342  009325  79                 	db	121
  1343  009326  00                 	db	0
  1344  009327                     __end_of__display_time@F8687:
  1345                           	opt stack 0
  1346  009327                     _USB_SD_Ptr:
  1347                           	opt stack 0
  1348  009327  52                 	db	low _sd000
  1349  009328  94                 	db	high _sd000
  1350  009329  7B                 	db	low _sd001
  1351  00932A  93                 	db	high _sd001
  1352  00932B  AF                 	db	low _sd002
  1353  00932C  93                 	db	high _sd002
  1354  00932D  1E                 	db	low _sd003
  1355  00932E  94                 	db	high _sd003
  1356  00932F                     __end_of_USB_SD_Ptr:
  1357                           	opt stack 0
  1358  00932F                     __display_charger@F8744:
  1359                           	opt stack 0
  1360  00932F  46                 	db	70
  1361  009330  61                 	db	97
  1362  009331  6E                 	db	110
  1363  009332  20                 	db	32
  1364  009333  6F                 	db	111
  1365  009334  6E                 	db	110
  1366  009335  00                 	db	0
  1367  009336                     __end_of__display_charger@F8744:
  1368                           	opt stack 0
  1369  009336                     __display_inout@F8675:
  1370                           	opt stack 0
  1371  009336  56                 	db	86
  1372  009337  3A                 	db	58
  1373  009338  00                 	db	0
  1374  009339                     __end_of__display_inout@F8675:
  1375                           	opt stack 0
  1376  009339                     _USB_CD_Ptr:
  1377                           	opt stack 0
  1378  009339  3B                 	db	low _configDescriptor1
  1379  00933A  93                 	db	high _configDescriptor1
  1380  00933B                     __end_of_USB_CD_Ptr:
  1381                           	opt stack 0
  1382  00933B                     _configDescriptor1:
  1383                           	opt stack 0
  1384  00933B  09                 	db	9
  1385  00933C  02                 	db	2
  1386  00933D  40                 	db	64
  1387  00933E  00                 	db	0
  1388  00933F  02                 	db	2
  1389  009340  01                 	db	1
  1390  009341  00                 	db	0
  1391  009342  C0                 	db	192
  1392  009343  32                 	db	50
  1393  009344  09                 	db	9
  1394  009345  04                 	db	4
  1395  009346  00                 	db	0
  1396  009347  00                 	db	0
  1397  009348  02                 	db	2
  1398  009349  03                 	db	3
  1399  00934A  00                 	db	0
  1400  00934B  00                 	db	0
  1401  00934C  00                 	db	0
  1402  00934D  09                 	db	9
  1403  00934E  21                 	db	33
  1404  00934F  11                 	db	17
  1405  009350  01                 	db	1
  1406  009351  00                 	db	0
  1407  009352  01                 	db	1
  1408  009353  22                 	db	34
  1409  009354  1D                 	db	29
  1410  009355  00                 	db	0
  1411  009356  07                 	db	7
  1412  009357  05                 	db	5
  1413  009358  81                 	db	129
  1414  009359  03                 	db	3
  1415  00935A  40                 	db	64
  1416  00935B  00                 	db	0
  1417  00935C  01                 	db	1
  1418  00935D  07                 	db	7
  1419  00935E  05                 	db	5
  1420  00935F  01                 	db	1
  1421  009360  03                 	db	3
  1422  009361  40                 	db	64
  1423  009362  00                 	db	0
  1424  009363  01                 	db	1
  1425  009364  09                 	db	9
  1426  009365  04                 	db	4
  1427  009366  01                 	db	1
  1428  009367  00                 	db	0
  1429  009368  02                 	db	2
  1430  009369  08                 	db	8
  1431  00936A  06                 	db	6
  1432  00936B  50                 	db	80
  1433  00936C  00                 	db	0
  1434  00936D  07                 	db	7
  1435  00936E  05                 	db	5
  1436  00936F  82                 	db	130
  1437  009370  02                 	db	2
  1438  009371  40                 	db	64
  1439  009372  00                 	db	0
  1440  009373  01                 	db	1
  1441  009374  07                 	db	7
  1442  009375  05                 	db	5
  1443  009376  02                 	db	2
  1444  009377  02                 	db	2
  1445  009378  40                 	db	64
  1446  009379  00                 	db	0
  1447  00937A  01                 	db	1
  1448  00937B                     __end_of_configDescriptor1:
  1449                           	opt stack 0
  1450  00937B                     _sd001:
  1451                           	opt stack 0
  1452  00937B  34                 	db	52
  1453  00937C  03                 	db	3
  1454  00937D  0053               	dw	83
  1455  00937F  006F               	dw	111
  1456  009381  006C               	dw	108
  1457  009383  0064               	dw	100
  1458  009385  0065               	dw	101
  1459  009387  0072               	dw	114
  1460  009389  006E               	dw	110
  1461  00938B  0065               	dw	101
  1462  00938D  0072               	dw	114
  1463  00938F  0064               	dw	100
  1464  009391  002E               	dw	46
  1465  009393  0063               	dw	99
  1466  009395  006F               	dw	111
  1467  009397  006D               	dw	109
  1468  009399  0020               	dw	32
  1469  00939B  0020               	dw	32
  1470  00939D  0020               	dw	32
  1471  00939F  0020               	dw	32
  1472  0093A1  0020               	dw	32
  1473  0093A3  0020               	dw	32
  1474  0093A5  0020               	dw	32
  1475  0093A7  0020               	dw	32
  1476  0093A9  0020               	dw	32
  1477  0093AB  0020               	dw	32
  1478  0093AD  0020               	dw	32
  1479  0093AF                     __end_of_sd001:
  1480                           	opt stack 0
  1481  0093AF                     _sd002:
  1482                           	opt stack 0
  1483  0093AF  2E                 	db	46
  1484  0093B0  03                 	db	3
  1485  0093B1  004D               	dw	77
  1486  0093B3  0050               	dw	80
  1487  0093B5  0050               	dw	80
  1488  0093B7  0054               	dw	84
  1489  0093B9  0053               	dw	83
  1490  0093BB  006F               	dw	111
  1491  0093BD  006C               	dw	108
  1492  0093BF  0061               	dw	97
  1493  0093C1  0072               	dw	114
  1494  0093C3  0020               	dw	32
  1495  0093C5  0043               	dw	67
  1496  0093C7  0068               	dw	104
  1497  0093C9  0061               	dw	97
  1498  0093CB  0072               	dw	114
  1499  0093CD  0067               	dw	103
  1500  0093CF  0065               	dw	101
  1501  0093D1  0072               	dw	114
  1502  0093D3  0020               	dw	32
  1503  0093D5  0052               	dw	82
  1504  0093D7  0065               	dw	101
  1505  0093D9  0076               	dw	118
  1506  0093DB  0045               	dw	69
  1507  0093DD                     __end_of_sd002:
  1508                           	opt stack 0
  1509  0093DD                     _inq_resp:
  1510                           	opt stack 0
  1511  0093DD  00                 	db	0
  1512  0093DE  80                 	db	128
  1513  0093DF  04                 	db	4
  1514  0093E0  02                 	db	2
  1515  0093E1  20                 	db	32
  1516  0093E2  00                 	db	0
  1517  0093E3  00                 	db	0
  1518  0093E4  00                 	db	0
  1519  0093E5  4D                 	db	77
  1520  0093E6  69                 	db	105
  1521  0093E7  63                 	db	99
  1522  0093E8  72                 	db	114
  1523  0093E9  6F                 	db	111
  1524  0093EA  63                 	db	99
  1525  0093EB  68                 	db	104
  1526  0093EC  70                 	db	112
  1527  0093ED  4D                 	db	77
  1528  0093EE  61                 	db	97
  1529  0093EF  73                 	db	115
  1530  0093F0  73                 	db	115
  1531  0093F1  20                 	db	32
  1532  0093F2  53                 	db	83
  1533  0093F3  74                 	db	116
  1534  0093F4  6F                 	db	111
  1535  0093F5  72                 	db	114
  1536  0093F6  61                 	db	97
  1537  0093F7  67                 	db	103
  1538  0093F8  65                 	db	101
  1539  0093F9  20                 	db	32
  1540  0093FA  20                 	db	32
  1541  0093FB  20                 	db	32
  1542  0093FC  20                 	db	32
  1543  0093FD  30                 	db	48
  1544  0093FE  30                 	db	48
  1545  0093FF  30                 	db	48
  1546  009400  31                 	db	49
  1547  009401                     __end_of_inq_resp:
  1548                           	opt stack 0
  1549  009401                     _hid_rpt01:
  1550                           	opt stack 0
  1551  009401  06                 	db	6
  1552  009402  00                 	db	0
  1553  009403  FF                 	db	255
  1554  009404  09                 	db	9
  1555  009405  01                 	db	1
  1556  009406  A1                 	db	161
  1557  009407  01                 	db	1
  1558  009408  19                 	db	25
  1559  009409  01                 	db	1
  1560  00940A  29                 	db	41
  1561  00940B  40                 	db	64
  1562  00940C  15                 	db	21
  1563  00940D  00                 	db	0
  1564  00940E  26                 	db	38
  1565  00940F  FF                 	db	255
  1566  009410  00                 	db	0
  1567  009411  75                 	db	117
  1568  009412  08                 	db	8
  1569  009413  95                 	db	149
  1570  009414  40                 	db	64
  1571  009415  81                 	db	129
  1572  009416  00                 	db	0
  1573  009417  19                 	db	25
  1574  009418  01                 	db	1
  1575  009419  29                 	db	41
  1576  00941A  40                 	db	64
  1577  00941B  91                 	db	145
  1578  00941C  00                 	db	0
  1579  00941D  C0                 	db	192
  1580  00941E                     __end_of_hid_rpt01:
  1581                           	opt stack 0
  1582  00941E                     _sd003:
  1583                           	opt stack 0
  1584  00941E  1A                 	db	26
  1585  00941F  03                 	db	3
  1586  009420  0031               	dw	49
  1587  009422  0032               	dw	50
  1588  009424  0033               	dw	51
  1589  009426  0034               	dw	52
  1590  009428  0035               	dw	53
  1591  00942A  0036               	dw	54
  1592  00942C  0037               	dw	55
  1593  00942E  0038               	dw	56
  1594  009430  0039               	dw	57
  1595  009432  0030               	dw	48
  1596  009434  0039               	dw	57
  1597  009436  0039               	dw	57
  1598  009438                     __end_of_sd003:
  1599                           	opt stack 0
  1600  009438                     _device_dsc:
  1601                           	opt stack 0
  1602  009438  12                 	db	18
  1603  009439  01                 	db	1
  1604  00943A  0200               	dw	512
  1605  00943C  00                 	db	0
  1606  00943D  00                 	db	0
  1607  00943E  00                 	db	0
  1608  00943F  08                 	db	8
  1609  009440  04D8               	dw	1240
  1610  009442  F08E               	dw	61582
  1611  009444  0100               	dw	256
  1612  009446  01                 	db	1
  1613  009447  02                 	db	2
  1614  009448  00                 	db	0
  1615  009449  01                 	db	1
  1616  00944A                     __end_of_device_dsc:
  1617                           	opt stack 0
  1618  00944A                     _flash_command_pagesize_528:
  1619                           	opt stack 0
  1620  00944A  3D                 	db	61
  1621  00944B  2A                 	db	42
  1622  00944C  80                 	db	128
  1623  00944D  A7                 	db	167
  1624  00944E                     __end_of_flash_command_pagesize_528:
  1625                           	opt stack 0
  1626  00944E                     _flash_command_pagesize_512:
  1627                           	opt stack 0
  1628  00944E  3D                 	db	61
  1629  00944F  2A                 	db	42
  1630  009450  80                 	db	128
  1631  009451  A6                 	db	166
  1632  009452                     __end_of_flash_command_pagesize_512:
  1633                           	opt stack 0
  1634  009452                     _sd000:
  1635                           	opt stack 0
  1636  009452  04                 	db	4
  1637  009453  03                 	db	3
  1638  009454  0409               	dw	1033
  1639  009456                     __end_of_sd000:
  1640                           	opt stack 0
  1641  0000                     _RPINR22	set	3837
  1642  0000                     _RPOR22	set	3798
  1643  0000                     _RPOR21	set	3797
  1644  0000                     _RPINR21	set	3836
  1645  0000                     _RPOR5	set	3781
  1646  0000                     _RPOR6	set	3782
  1647  0000                     _RPINR2	set	3810
  1648  0000                     _RPINR3	set	3811
  1649  0000                     _RPINR1	set	3809
  1650  0000                     _PPSCONbits	set	3775
  1651  0000                     _CCPTMRS0bits	set	3922
  1652  0000                     _RTCVALH	set	3899
  1653  0000                     _RTCVALL	set	3898
  1654  0000                     _RTCCAL	set	3902
  1655  0000                     _RTCCFGbits	set	3903
  1656  0000                     _ANCON1bits	set	3913
  1657  0000                     _ANCON0bits	set	3912
  1658  0000                     _UEP0bits	set	3878
  1659  0000                     _UIEbits	set	3894
  1660  0000                     _UADDR	set	3896
  1661  0000                     _UIE	set	3894
  1662  0000                     _UEIE	set	3895
  1663  0000                     _UCFG	set	3897
  1664  0000                     _UEP1	set	3879
  1665  0000                     _UEP0	set	3878
  1666  0000                     _SSP2CON1bits	set	3954
  1667  0000                     _SSP2STATbits	set	3955
  1668  0000                     _RXADDRL	set	3945
  1669  0000                     _RXADDRH	set	3944
  1670  0000                     _DMABCL	set	3943
  1671  0000                     _DMABCH	set	3942
  1672  0000                     _TXADDRL	set	3947
  1673  0000                     _TXADDRH	set	3946
  1674  0000                     _DMACON2bits	set	3974
  1675  0000                     _DMACON1bits	set	3976
  1676  0000                     _ADRESL	set	4035
  1677  0000                     _ADRESH	set	4036
  1678  0000                     _ADCON1bits	set	4033
  1679  0000                     _ADCON0bits	set	4034
  1680  0000                     _CCP1CON	set	4026
  1681  0000                     _TMR2	set	4044
  1682  0000                     _PR2	set	4043
  1683  0000                     _CCPR1L	set	4027
  1684  0000                     _CCP1CONbits	set	4026
  1685  0000                     _T2CONbits	set	4042
  1686  0000                     _SSP1BUF	set	4041
  1687  0000                     _SSP1CON2bits	set	4037
  1688  0000                     _SSP1CON1bits	set	4038
  1689  0000                     _SSP1ADD	set	4040
  1690  0000                     _SSP1STATbits	set	4039
  1691  0000                     _T1CONbits	set	4045
  1692  0000                     _TMR1L	set	4046
  1693  0000                     _TMR1H	set	4047
  1694  0000                     _PIR1bits	set	3998
  1695  0000                     _LATAbits	set	3977
  1696  0000                     _TRISEbits	set	3990
  1697  0000                     _LATEbits	set	3981
  1698  0000                     _LATCbits	set	3979
  1699  0000                     _TRISAbits	set	3986
  1700  0000                     _TRISBbits	set	3987
  1701  0000                     _LATBbits	set	3978
  1702  0000                     _TRISDbits	set	3989
  1703  0000                     _TRISCbits	set	3988
  1704  0000                     _T0CONbits	set	4053
  1705  0000                     _INTCON2bits	set	4081
  1706  0000                     _EECON2	set	4007
  1707  0000                     _PORTBbits	set	3969
  1708  0000                     _INTCON3bits	set	4080
  1709  0000                     _TMR0L	set	4054
  1710  0000                     _TMR0H	set	4055
  1711  0000                     _PORTAbits	set	3968
  1712  0000                     _OSCCON	set	4051
  1713  0000                     _OSCTUNEbits	set	3995
  1714  0000                     _LATDbits	set	3980
  1715  0000                     _INTCONbits	set	4082
  1716  0000                     _IPR2bits	set	4002
  1717  0000                     _RCONbits	set	4048
  1718  0000                     _UCON	set	3941
  1719  0000                     _USTAT	set	3940
  1720  0000                     _PIR2bits	set	4001
  1721  0000                     _UIRbits	set	3938
  1722  0000                     _UCONbits	set	3941
  1723  0000                     _UIR	set	3938
  1724  0000                     _UEIR	set	3939
  1725  0000                     _PIE2bits	set	4000
  1726  009456  48                 	db	72	;'H'
  1727  009457  65                 	db	101	;'e'
  1728  009458  6C                 	db	108	;'l'
  1729  009459  6C                 	db	108	;'l'
  1730  00945A  6F                 	db	111	;'o'
  1731  00945B  20                 	db	32
  1732  00945C  57                 	db	87	;'W'
  1733  00945D  6F                 	db	111	;'o'
  1734  00945E  72                 	db	114	;'r'
  1735  00945F  6C                 	db	108	;'l'
  1736  009460  64                 	db	100	;'d'
  1737  009461  21                 	db	33
  1738  009462  00                 	db	0
  1739  009463  53                 	db	83	;'S'
  1740  009464  6F                 	db	111	;'o'
  1741  009465  6C                 	db	108	;'l'
  1742  009466  61                 	db	97	;'a'
  1743  009467  72                 	db	114	;'r'
  1744  009468  43                 	db	67	;'C'
  1745  009469  68                 	db	104	;'h'
  1746  00946A  61                 	db	97	;'a'
  1747  00946B  72                 	db	114	;'r'
  1748  00946C  67                 	db	103	;'g'
  1749  00946D  72                 	db	114	;'r'
  1750  00946E  00                 	db	0
  1751  00946F  46                 	db	70	;'F'
  1752  009470  49                 	db	73	;'I'
  1753  009471  4C                 	db	76	;'L'
  1754  009472  45                 	db	69	;'E'
  1755  009473  20                 	db	32
  1756  009474  20                 	db	32
  1757  009475  20                 	db	32
  1758  009476  20                 	db	32
  1759  009477  00                 	db	0
  1760  009478                     STR_1:
  1761  009478  4D                 	db	77	;'M'
  1762  009479  53                 	db	83	;'S'
  1763  00947A  44                 	db	68	;'D'
  1764  00947B  4F                 	db	79	;'O'
  1765  00947C  53                 	db	83	;'S'
  1766  00947D  35                 	db	53	;'5'
  1767  00947E  2E                 	db	46
  1768  00947F  30                 	db	48	;'0'
  1769  009480  00                 	db	0
  1770  009481  54                 	db	84	;'T'
  1771  009482  58                 	db	88	;'X'
  1772  009483  54                 	db	84	;'T'
  1773  009484  00                 	db	0
  1774  0000                     
  1775                           ; #config settings
  1776  009485  00                 	db	0	; dummy byte at the end
  1777  0000                     
  1778                           	psect	cinit
  1779  00FB66                     __pcinit:
  1780                           	opt stack 0
  1781  00FB66                     start_initialization:
  1782                           	opt stack 0
  1783  00FB66                     __initialization:
  1784                           	opt stack 0
  1785                           
  1786                           ; Initialize objects allocated to BANK4 (104 bytes)
  1787                           ; load TBLPTR registers with __pidataBANK4
  1788  00FB66  0EEC               	movlw	low __pidataBANK4
  1789  00FB68  6EF6               	movwf	tblptrl,c
  1790  00FB6A  0E13               	movlw	high __pidataBANK4
  1791  00FB6C  6EF7               	movwf	tblptrh,c
  1792  00FB6E  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1793  00FB70  6EF8               	movwf	tblptru,c
  1794  00FB72  EE04  F000         	lfsr	0,__pdataBANK4
  1795  00FB76  EE10 F068          	lfsr	1,104
  1796  00FB7A                     copy_data0:
  1797  00FB7A  0009               	tblrd		*+
  1798  00FB7C  CFF5 FFEE          	movff	tablat,postinc0
  1799  00FB80  50E5               	movf	postdec1,w,c
  1800  00FB82  50E1               	movf	fsr1l,w,c
  1801  00FB84  E1FA               	bnz	copy_data0
  1802                           
  1803                           ; Initialize objects allocated to BANK3 (27 bytes)
  1804                           ; load TBLPTR registers with __pidataBANK3
  1805  00FB86  0E16               	movlw	low __pidataBANK3
  1806  00FB88  6EF6               	movwf	tblptrl,c
  1807  00FB8A  0E2C               	movlw	high __pidataBANK3
  1808  00FB8C  6EF7               	movwf	tblptrh,c
  1809  00FB8E  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1810  00FB90  6EF8               	movwf	tblptru,c
  1811  00FB92  EE03  F0E4         	lfsr	0,__pdataBANK3
  1812  00FB96  EE10 F01B          	lfsr	1,27
  1813  00FB9A                     copy_data1:
  1814  00FB9A  0009               	tblrd		*+
  1815  00FB9C  CFF5 FFEE          	movff	tablat,postinc0
  1816  00FBA0  50E5               	movf	postdec1,w,c
  1817  00FBA2  50E1               	movf	fsr1l,w,c
  1818  00FBA4  E1FA               	bnz	copy_data1
  1819                           
  1820                           ; Initialize objects allocated to BANK2 (61 bytes)
  1821                           ; load TBLPTR registers with __pidataBANK2
  1822  00FBA6  0EB2               	movlw	low __pidataBANK2
  1823  00FBA8  6EF6               	movwf	tblptrl,c
  1824  00FBAA  0E23               	movlw	high __pidataBANK2
  1825  00FBAC  6EF7               	movwf	tblptrh,c
  1826  00FBAE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1827  00FBB0  6EF8               	movwf	tblptru,c
  1828  00FBB2  EE02  F0BF         	lfsr	0,__pdataBANK2
  1829  00FBB6  EE10 F03D          	lfsr	1,61
  1830  00FBBA                     copy_data2:
  1831  00FBBA  0009               	tblrd		*+
  1832  00FBBC  CFF5 FFEE          	movff	tablat,postinc0
  1833  00FBC0  50E5               	movf	postdec1,w,c
  1834  00FBC2  50E1               	movf	fsr1l,w,c
  1835  00FBC4  E1FA               	bnz	copy_data2
  1836                           
  1837                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1838  00FBC6  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1839  00FBCA  EE12 F000          	lfsr	1,512
  1840  00FBCE                     clear_0:
  1841  00FBCE  6AEE               	clrf	postinc0,c
  1842  00FBD0  50E5               	movf	postdec1,w,c
  1843  00FBD2  50E1               	movf	fsr1l,w,c
  1844  00FBD4  E1FC               	bnz	clear_0
  1845  00FBD6  50E2               	movf	fsr1h,w,c
  1846  00FBD8  E1FA               	bnz	clear_0
  1847                           
  1848                           ; Clear objects allocated to BANK4 (80 bytes)
  1849  00FBDA  EE04  F068         	lfsr	0,__pbssBANK4
  1850  00FBDE  0E50               	movlw	80
  1851  00FBE0                     clear_1:
  1852  00FBE0  6AEE               	clrf	postinc0,c
  1853  00FBE2  06E8               	decf	wreg,f,c
  1854  00FBE4  E1FD               	bnz	clear_1
  1855                           
  1856                           ; Clear objects allocated to BANK3 (228 bytes)
  1857  00FBE6  EE03  F000         	lfsr	0,__pbssBANK3
  1858  00FBEA  0EE4               	movlw	228
  1859  00FBEC                     clear_2:
  1860  00FBEC  6AEE               	clrf	postinc0,c
  1861  00FBEE  06E8               	decf	wreg,f,c
  1862  00FBF0  E1FD               	bnz	clear_2
  1863                           
  1864                           ; Clear objects allocated to BANK2 (191 bytes)
  1865  00FBF2  EE02  F000         	lfsr	0,__pbssBANK2
  1866  00FBF6  0EBF               	movlw	191
  1867  00FBF8                     clear_3:
  1868  00FBF8  6AEE               	clrf	postinc0,c
  1869  00FBFA  06E8               	decf	wreg,f,c
  1870  00FBFC  E1FD               	bnz	clear_3
  1871                           
  1872                           ; Clear objects allocated to BANK1 (45 bytes)
  1873  00FBFE  EE01  F0D3         	lfsr	0,__pbssBANK1
  1874  00FC02  0E2D               	movlw	45
  1875  00FC04                     clear_4:
  1876  00FC04  6AEE               	clrf	postinc0,c
  1877  00FC06  06E8               	decf	wreg,f,c
  1878  00FC08  E1FD               	bnz	clear_4
  1879                           
  1880                           ; Clear objects allocated to BANK0 (13 bytes)
  1881  00FC0A  EE00  F0F3         	lfsr	0,__pbssBANK0
  1882  00FC0E  0E0D               	movlw	13
  1883  00FC10                     clear_5:
  1884  00FC10  6AEE               	clrf	postinc0,c
  1885  00FC12  06E8               	decf	wreg,f,c
  1886  00FC14  E1FD               	bnz	clear_5
  1887                           
  1888                           ; Clear objects allocated to COMRAM (45 bytes)
  1889  00FC16  EE00  F032         	lfsr	0,__pbssCOMRAM
  1890  00FC1A  0E2D               	movlw	45
  1891  00FC1C                     clear_6:
  1892  00FC1C  6AEE               	clrf	postinc0,c
  1893  00FC1E  06E8               	decf	wreg,f,c
  1894  00FC20  E1FD               	bnz	clear_6
  1895  00FC22                     end_of_initialization:
  1896                           	opt stack 0
  1897  00FC22                     __end_of__initialization:
  1898                           	opt stack 0
  1899  00FC22  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1900  00FC24  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1901  00FC26  0100               	movlb	0
  1902  00FC28  EF38  F05A         	goto	_main	;jump to C main() function
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postdec1	equ	0xFE5
  1910                           fsr1h	equ	0xFE2
  1911                           fsr1l	equ	0xFE1
  1912                           
  1913                           	psect	bssCOMRAM
  1914  000032                     __pbssCOMRAM:
  1915                           	opt stack 0
  1916  000032                     _outPipes:
  1917                           	opt stack 0
  1918  000032                     	ds	9
  1919  00003B                     _pBDTEntryIn:
  1920                           	opt stack 0
  1921  00003B                     	ds	6
  1922  000041                     _averageCount:
  1923                           	opt stack 0
  1924  000041                     	ds	2
  1925  000043                     _TransferLength:
  1926                           	opt stack 0
  1927  000043                     	ds	2
  1928  000045                     _USBMSDInHandle:
  1929                           	opt stack 0
  1930  000045                     	ds	2
  1931  000047                     _USBMSDOutHandle:
  1932                           	opt stack 0
  1933  000047                     	ds	2
  1934  000049                     _pBDTEntryEP0OutCurrent:
  1935                           	opt stack 0
  1936  000049                     	ds	2
  1937  00004B                     _power_state:
  1938                           	opt stack 0
  1939  00004B                     	ds	1
  1940  00004C                     _idx:
  1941                           	opt stack 0
  1942  00004C                     	ds	1
  1943  00004D                     _buck_remote_synchronous:
  1944                           	opt stack 0
  1945  00004D                     	ds	1
  1946  00004E                     _buck_remote_on:
  1947                           	opt stack 0
  1948  00004E                     	ds	1
  1949  00004F                     _task_list_write_index:
  1950                           	opt stack 0
  1951  00004F                     	ds	1
  1952  000050                     _task_list_read_index:
  1953                           	opt stack 0
  1954  000050                     	ds	1
  1955  000051                     _MSDHostNoData:
  1956                           	opt stack 0
  1957  000051                     	ds	1
  1958  000052                     _MSDWriteState:
  1959                           	opt stack 0
  1960  000052                     	ds	1
  1961  000053                     _MSDCommandState:
  1962                           	opt stack 0
  1963  000053                     	ds	1
  1964  000054                     _MSD_State:
  1965                           	opt stack 0
  1966  000054                     	ds	1
  1967  000055                     _USBDeferStatusStagePacket:
  1968                           	opt stack 0
  1969  000055                     	ds	1
  1970  000056                     _USBStatusStageTimeoutCounter:
  1971                           	opt stack 0
  1972  000056                     	ds	1
  1973  000057                     _endpoint_number:
  1974                           	opt stack 0
  1975  000057                     	ds	1
  1976  000058                     _USBBusIsSuspended:
  1977                           	opt stack 0
  1978  000058                     	ds	1
  1979  000059                     _RemoteWakeup:
  1980                           	opt stack 0
  1981  000059                     	ds	1
  1982  00005A                     _controlTransferState:
  1983                           	opt stack 0
  1984  00005A                     	ds	1
  1985  00005B                     _shortPacketStatus:
  1986                           	opt stack 0
  1987  00005B                     	ds	1
  1988  00005C                     _USBDeviceState:
  1989                           	opt stack 0
  1990  00005C                     	ds	1
  1991  00005D                     _USTATcopy:
  1992                           	opt stack 0
  1993  00005D                     	ds	1
  1994  00005E                     _USBActiveConfiguration:
  1995                           	opt stack 0
  1996  00005E                     	ds	1
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1h	equ	0xFE2
  2005                           fsr1l	equ	0xFE1
  2006                           
  2007                           	psect	bssBANK0
  2008  0000F3                     __pbssBANK0:
  2009                           	opt stack 0
  2010  0000F3                     _inPipes:
  2011                           	opt stack 0
  2012  0000F3                     	ds	6
  2013  0000F9                     _USBInHandle:
  2014                           	opt stack 0
  2015  0000F9                     	ds	2
  2016  0000FB                     _pBDTEntryEP0OutNext:
  2017                           	opt stack 0
  2018  0000FB                     	ds	2
  2019  0000FD                     _buck_remote_dutycycle:
  2020                           	opt stack 0
  2021  0000FD                     	ds	1
  2022  0000FE                     _buck_dutycycle:
  2023                           	opt stack 0
  2024  0000FE                     	ds	1
  2025  0000FF                     _buck_status:
  2026                           	opt stack 0
  2027  0000FF                     	ds	1
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           postinc0	equ	0xFEE
  2033                           wreg	equ	0xFE8
  2034                           postdec1	equ	0xFE5
  2035                           fsr1h	equ	0xFE2
  2036                           fsr1l	equ	0xFE1
  2037                           
  2038                           	psect	bssBANK1
  2039  0001D3                     __pbssBANK1:
  2040                           	opt stack 0
  2041  0001D3                     _pBDTEntryOut:
  2042                           	opt stack 0
  2043  0001D3                     	ds	6
  2044  0001D9                     _LBA:
  2045                           	opt stack 0
  2046  0001D9                     	ds	4
  2047  0001DD                     _USB1msTickCount:
  2048                           	opt stack 0
  2049  0001DD                     	ds	4
  2050  0001E1                     _ep_data_out:
  2051                           	opt stack 0
  2052  0001E1                     	ds	3
  2053  0001E4                     _ep_data_in:
  2054                           	opt stack 0
  2055  0001E4                     	ds	3
  2056  0001E7                     _ptrNextData:
  2057                           	opt stack 0
  2058  0001E7                     	ds	2
  2059  0001E9                     _pDst:
  2060                           	opt stack 0
  2061  0001E9                     	ds	2
  2062  0001EB                     _lastSecond:
  2063                           	opt stack 0
  2064  0001EB                     	ds	1
  2065  0001EC                     _status:
  2066                           	opt stack 0
  2067  0001EC                     	ds	1
  2068  0001ED                     _buck_remote_enable:
  2069                           	opt stack 0
  2070  0001ED                     	ds	1
  2071  0001EE                     _buck_dutycycle_last_step:
  2072                           	opt stack 0
  2073  0001EE                     	ds	1
  2074  0001EF                     _userInterfaceStatus:
  2075                           	opt stack 0
  2076  0001EF                     	ds	1
  2077  0001F0                     _i2c_frequency:
  2078                           	opt stack 0
  2079  0001F0                     	ds	1
  2080  0001F1                     _MSDCBWValid:
  2081                           	opt stack 0
  2082  0001F1                     	ds	1
  2083  0001F2                     _SoftDetach:
  2084                           	opt stack 0
  2085  0001F2                     	ds	1
  2086  0001F3                     _gblCBWLength:
  2087                           	opt stack 0
  2088  0001F3                     	ds	1
  2089  0001F4                     _MSDRetryAttempt:
  2090                           	opt stack 0
  2091  0001F4                     	ds	1
  2092  0001F5                     _MSDReadState:
  2093                           	opt stack 0
  2094  0001F5                     	ds	1
  2095  0001F6                     _USBTicksSinceSuspendEnd:
  2096                           	opt stack 0
  2097  0001F6                     	ds	1
  2098  0001F7                     _USBDeferOUTDataStagePackets:
  2099                           	opt stack 0
  2100  0001F7                     	ds	1
  2101  0001F8                     _USBDeferINDataStagePackets:
  2102                           	opt stack 0
  2103  0001F8                     	ds	1
  2104  0001F9                     _USBStatusStageEnabledFlag2:
  2105                           	opt stack 0
  2106  0001F9                     	ds	1
  2107  0001FA                     _USBStatusStageEnabledFlag1:
  2108                           	opt stack 0
  2109  0001FA                     	ds	1
  2110  0001FB                     _BothEP0OutUOWNsSet:
  2111                           	opt stack 0
  2112  0001FB                     	ds	1
  2113  0001FC                     _USBAlternateInterface:
  2114                           	opt stack 0
  2115  0001FC                     	ds	2
  2116  0001FE                     _active_protocol:
  2117                           	opt stack 0
  2118  0001FE                     	ds	1
  2119  0001FF                     _idle_rate:
  2120                           	opt stack 0
  2121  0001FF                     	ds	1
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           postinc0	equ	0xFEE
  2127                           wreg	equ	0xFE8
  2128                           postdec1	equ	0xFE5
  2129                           fsr1h	equ	0xFE2
  2130                           fsr1l	equ	0xFE1
  2131                           
  2132                           	psect	bssBANK2
  2133  000200                     __pbssBANK2:
  2134                           	opt stack 0
  2135  000200                     _os:
  2136                           	opt stack 0
  2137  000200                     	ds	65
  2138  000241                     _gblCBW:
  2139                           	opt stack 0
  2140  000241                     	ds	31
  2141  000260                     _gblSenseData:
  2142                           	opt stack 0
  2143  000260                     	ds	18
  2144  000272                     _temperatureExternal2Sum:
  2145                           	opt stack 0
  2146  000272                     	ds	4
  2147  000276                     _temperatureExternal1Sum:
  2148                           	opt stack 0
  2149  000276                     	ds	4
  2150  00027A                     _temperatureOnboardSum:
  2151                           	opt stack 0
  2152  00027A                     	ds	4
  2153  00027E                     _outputCapacitySum:
  2154                           	opt stack 0
  2155  00027E                     	ds	4
  2156  000282                     _inputCapacitySum:
  2157                           	opt stack 0
  2158  000282                     	ds	4
  2159  000286                     _outputPowerSum:
  2160                           	opt stack 0
  2161  000286                     	ds	4
  2162  00028A                     _inputPowerSum:
  2163                           	opt stack 0
  2164  00028A                     	ds	4
  2165  00028E                     _outputCurrentSum:
  2166                           	opt stack 0
  2167  00028E                     	ds	4
  2168  000292                     _outputVoltageSum:
  2169                           	opt stack 0
  2170  000292                     	ds	4
  2171  000296                     _inputCurrentSum:
  2172                           	opt stack 0
  2173  000296                     	ds	4
  2174  00029A                     _inputVoltageSum:
  2175                           	opt stack 0
  2176  00029A                     	ds	4
  2177  00029E                     _now:
  2178                           	opt stack 0
  2179  00029E                     	ds	4
  2180  0002A2                     _last:
  2181                           	opt stack 0
  2182  0002A2                     	ds	4
  2183  0002A6                     _gblBLKLen:
  2184                           	opt stack 0
  2185  0002A6                     	ds	4
  2186  0002AA                     _gblNumBLKS:
  2187                           	opt stack 0
  2188  0002AA                     	ds	4
  2189  0002AE                     _lowPowerTime:
  2190                           	opt stack 0
  2191  0002AE                     	ds	2
  2192  0002B0                     _chargerOnTime:
  2193                           	opt stack 0
  2194  0002B0                     	ds	2
  2195  0002B2                     _system_ui_inactive_count:
  2196                           	opt stack 0
  2197  0002B2                     	ds	2
  2198  0002B4                     _USBOutHandle:
  2199                           	opt stack 0
  2200  0002B4                     	ds	2
  2201  0002B6                     _gblMediaPresent:
  2202                           	opt stack 0
  2203  0002B6                     	ds	2
  2204  0002B8                     _MSBBufferIndex:
  2205                           	opt stack 0
  2206  0002B8                     	ds	2
  2207  0002BA                     _mediaInformation:
  2208                           	opt stack 0
  2209  0002BA                     	ds	5
  2210                           tblptru	equ	0xFF8
  2211                           tblptrh	equ	0xFF7
  2212                           tblptrl	equ	0xFF6
  2213                           tablat	equ	0xFF5
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           postdec1	equ	0xFE5
  2217                           fsr1h	equ	0xFE2
  2218                           fsr1l	equ	0xFE1
  2219                           
  2220                           	psect	dataBANK2
  2221  0002BF                     __pdataBANK2:
  2222                           	opt stack 0
  2223  0002BF                     _LUN:
  2224                           	opt stack 0
  2225  0002BF                     	ds	29
  2226  0002DC                     system_init@F8579:
  2227                           	opt stack 0
  2228  0002DC                     	ds	9
  2229  0002E5                     system_init@F8585:
  2230                           	opt stack 0
  2231  0002E5                     	ds	4
  2232  0002E9                     system_init@F8581:
  2233                           	opt stack 0
  2234  0002E9                     	ds	4
  2235  0002ED                     _battery_voltage_maximum:
  2236                           	opt stack 0
  2237  0002ED                     	ds	2
  2238  0002EF                     _filename:
  2239                           	opt stack 0
  2240  0002EF                     	ds	9
  2241  0002F8                     _extension:
  2242                           	opt stack 0
  2243  0002F8                     	ds	4
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           postinc0	equ	0xFEE
  2249                           wreg	equ	0xFE8
  2250                           postdec1	equ	0xFE5
  2251                           fsr1h	equ	0xFE2
  2252                           fsr1l	equ	0xFE1
  2253                           
  2254                           	psect	bssBANK3
  2255  000300                     __pbssBANK3:
  2256                           	opt stack 0
  2257  000300                     _calibrationParameters:
  2258                           	opt stack 0
  2259  000300                     	ds	84
  2260  000354                     _display_content:
  2261                           	opt stack 0
  2262  000354                     	ds	80
  2263  0003A4                     _ToSendDataBuffer:
  2264                           	opt stack 0
  2265  0003A4                     	ds	64
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           postdec1	equ	0xFE5
  2273                           fsr1h	equ	0xFE2
  2274                           fsr1l	equ	0xFE1
  2275                           
  2276                           	psect	dataBANK3
  2277  0003E4                     __pdataBANK3:
  2278                           	opt stack 0
  2279  0003E4                     i2c_display_init@F8363:
  2280                           	opt stack 0
  2281  0003E4                     	ds	9
  2282  0003ED                     i2c_display_send_init_sequence@F8360:
  2283                           	opt stack 0
  2284  0003ED                     	ds	9
  2285  0003F6                     system_init@F8583:
  2286                           	opt stack 0
  2287  0003F6                     	ds	9
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           postdec1	equ	0xFE5
  2295                           fsr1h	equ	0xFE2
  2296                           fsr1l	equ	0xFE1
  2297                           
  2298                           	psect	bssBANK4
  2299  000468                     __pbssBANK4:
  2300                           	opt stack 0
  2301  000468                     _task_list:
  2302                           	opt stack 0
  2303  000468                     	ds	16
  2304  000478                     _ReceivedDataBuffer:
  2305                           	opt stack 0
  2306  000478                     	ds	64
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           postdec1	equ	0xFE5
  2314                           fsr1h	equ	0xFE2
  2315                           fsr1l	equ	0xFE1
  2316                           
  2317                           	psect	dataBANK4
  2318  000400                     __pdataBANK4:
  2319                           	opt stack 0
  2320  000400                     system_init@F8587:
  2321                           	opt stack 0
  2322  000400                     	ds	104
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           postdec1	equ	0xFE5
  2330                           fsr1h	equ	0xFE2
  2331                           fsr1l	equ	0xFE1
  2332                           
  2333                           	psect	bssBIGRAMll
  2334  000800                     __pbssBIGRAMll:
  2335                           	opt stack 0
  2336  000800                     _buffer:
  2337                           	opt stack 0
  2338  000800                     	ds	512
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           
  2349                           	psect	cstackBANK1
  2350  000100                     __pcstackBANK1:
  2351                           	opt stack 0
  2352  000100                     __display_charger@fan_off:
  2353                           	opt stack 0
  2354  000100                     __display_time@pts:
  2355                           	opt stack 0
  2356  000100                     system_init@appendtext:
  2357                           	opt stack 0
  2358                           
  2359                           ; 104 bytes @ 0x0
  2360  000100                     	ds	8
  2361  000108                     __display_charger@fan_on:
  2362                           	opt stack 0
  2363                           
  2364                           ; 7 bytes @ 0x8
  2365  000108                     	ds	7
  2366  00010F                     __display_charger@header:
  2367                           	opt stack 0
  2368                           
  2369                           ; 21 bytes @ 0xF
  2370  00010F                     	ds	5
  2371  000114                     __display_time@pressminutes:
  2372                           	opt stack 0
  2373                           
  2374                           ; 20 bytes @ 0x14
  2375  000114                     	ds	16
  2376  000124                     __display_charger@charger_async:
  2377                           	opt stack 0
  2378                           
  2379                           ; 21 bytes @ 0x24
  2380  000124                     	ds	4
  2381  000128                     __display_time@pressseconds:
  2382                           	opt stack 0
  2383                           
  2384                           ; 20 bytes @ 0x28
  2385  000128                     	ds	17
  2386  000139                     __display_charger@charger_sync:
  2387                           	opt stack 0
  2388                           
  2389                           ; 20 bytes @ 0x39
  2390  000139                     	ds	3
  2391  00013C                     __display_time@pressmonth:
  2392                           	opt stack 0
  2393                           
  2394                           ; 18 bytes @ 0x3C
  2395  00013C                     	ds	17
  2396  00014D                     __display_charger@supply_off:
  2397                           	opt stack 0
  2398                           
  2399                           ; 19 bytes @ 0x4D
  2400  00014D                     	ds	1
  2401  00014E                     __display_time@presshours:
  2402                           	opt stack 0
  2403                           
  2404                           ; 18 bytes @ 0x4E
  2405  00014E                     	ds	18
  2406  000160                     __display_time@pressday:
  2407                           	opt stack 0
  2408  000160                     __display_charger@supply_on:
  2409                           	opt stack 0
  2410                           
  2411                           ; 18 bytes @ 0x60
  2412  000160                     	ds	8
  2413  000168                     system_init@filename:
  2414                           	opt stack 0
  2415                           
  2416                           ; 9 bytes @ 0x68
  2417  000168                     	ds	8
  2418  000170                     __display_time@presssave:
  2419                           	opt stack 0
  2420                           
  2421                           ; 16 bytes @ 0x70
  2422  000170                     	ds	1
  2423  000171                     system_init@filename2:
  2424                           	opt stack 0
  2425                           
  2426                           ; 9 bytes @ 0x71
  2427  000171                     	ds	1
  2428  000172                     __display_charger@charger_startup:
  2429                           	opt stack 0
  2430                           
  2431                           ; 16 bytes @ 0x72
  2432  000172                     	ds	8
  2433  00017A                     system_init@extension:
  2434                           	opt stack 0
  2435                           
  2436                           ; 4 bytes @ 0x7A
  2437  00017A                     	ds	4
  2438  00017E                     system_init@extension2:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x7E
  2442  00017E                     	ds	2
  2443  000180                     __display_time@tad:
  2444                           	opt stack 0
  2445                           
  2446                           ; 14 bytes @ 0x80
  2447  000180                     	ds	2
  2448  000182                     __display_charger@charger_off:
  2449                           	opt stack 0
  2450                           
  2451                           ; 12 bytes @ 0x82
  2452  000182                     	ds	12
  2453  00018E                     __display_charger@cntr:
  2454                           	opt stack 0
  2455  00018E                     __display_time@setminutes:
  2456                           	opt stack 0
  2457                           
  2458                           ; 12 bytes @ 0x8E
  2459  00018E                     	ds	12
  2460  00019A                     __display_time@setseconds:
  2461                           	opt stack 0
  2462                           
  2463                           ; 12 bytes @ 0x9A
  2464  00019A                     	ds	12
  2465  0001A6                     __display_time@setmonth:
  2466                           	opt stack 0
  2467                           
  2468                           ; 10 bytes @ 0xA6
  2469  0001A6                     	ds	10
  2470  0001B0                     __display_time@sethours:
  2471                           	opt stack 0
  2472                           
  2473                           ; 10 bytes @ 0xB0
  2474  0001B0                     	ds	10
  2475  0001BA                     __display_time@setyear:
  2476                           	opt stack 0
  2477                           
  2478                           ; 9 bytes @ 0xBA
  2479  0001BA                     	ds	9
  2480  0001C3                     __display_time@setday:
  2481                           	opt stack 0
  2482                           
  2483                           ; 8 bytes @ 0xC3
  2484  0001C3                     	ds	8
  2485  0001CB                     __display_time@mode:
  2486                           	opt stack 0
  2487                           
  2488                           ; 1 bytes @ 0xCB
  2489  0001CB                     	ds	1
  2490  0001CC                     __display_time@year:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0xCC
  2494  0001CC                     	ds	1
  2495  0001CD                     __display_time@month:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0xCD
  2499  0001CD                     	ds	1
  2500  0001CE                     __display_time@day:
  2501                           	opt stack 0
  2502                           
  2503                           ; 1 bytes @ 0xCE
  2504  0001CE                     	ds	1
  2505  0001CF                     __display_time@hours:
  2506                           	opt stack 0
  2507                           
  2508                           ; 1 bytes @ 0xCF
  2509  0001CF                     	ds	1
  2510  0001D0                     __display_time@minutes:
  2511                           	opt stack 0
  2512                           
  2513                           ; 1 bytes @ 0xD0
  2514  0001D0                     	ds	1
  2515  0001D1                     __display_time@seconds:
  2516                           	opt stack 0
  2517                           
  2518                           ; 1 bytes @ 0xD1
  2519  0001D1                     	ds	1
  2520  0001D2                     __display_time@cntr:
  2521                           	opt stack 0
  2522                           
  2523                           ; 1 bytes @ 0xD2
  2524  0001D2                     	ds	1
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           postinc0	equ	0xFEE
  2530                           wreg	equ	0xFE8
  2531                           postdec1	equ	0xFE5
  2532                           fsr1h	equ	0xFE2
  2533                           fsr1l	equ	0xFE1
  2534                           
  2535                           	psect	cstackBANK0
  2536  000060                     __pcstackBANK0:
  2537                           	opt stack 0
  2538  000060                     ??_system_output_off:
  2539  000060                     ??__i2c_wait_idle:
  2540  000060                     ??__display_clear:
  2541  000060                     ??__number_of_days:
  2542  000060                     ??__buck_set_dutycycle:
  2543  000060                     ?_USBTransferOnePacket:
  2544                           	opt stack 0
  2545  000060                     ?_adc_read:
  2546                           	opt stack 0
  2547  000060                     ?_log_get_number_of_samples:
  2548                           	opt stack 0
  2549  000060                     ?_ExternalFlash_MediaInitialize:
  2550                           	opt stack 0
  2551  000060                     ?_ExternalFlash_SectorSizeRead:
  2552                           	opt stack 0
  2553  000060                     ?_strlen:
  2554                           	opt stack 0
  2555  000060                     ?_strncmp:
  2556                           	opt stack 0
  2557  000060                     ?__sector_from_cluster:
  2558                           	opt stack 0
  2559  000060                     ?___awdiv:
  2560                           	opt stack 0
  2561  000060                     ?___lwdiv:
  2562                           	opt stack 0
  2563  000060                     ?___lwmod:
  2564                           	opt stack 0
  2565  000060                     ?___ftpack:
  2566                           	opt stack 0
  2567  000060                     ?_ExternalFlash_CapacityRead:
  2568                           	opt stack 0
  2569  000060                     ?___lmul:
  2570                           	opt stack 0
  2571  000060                     ?___aldiv:
  2572                           	opt stack 0
  2573  000060                     ?___fttol:
  2574                           	opt stack 0
  2575  000060                     ?___lldiv:
  2576                           	opt stack 0
  2577  000060                     USBTransferOnePacket@dir:
  2578                           	opt stack 0
  2579  000060                     USBStallEndpoint@dir:
  2580                           	opt stack 0
  2581  000060                     system_output_is_on@output:
  2582                           	opt stack 0
  2583  000060                     system_output_on@output:
  2584                           	opt stack 0
  2585  000060                     __i2c_send@dat:
  2586                           	opt stack 0
  2587  000060                     i2c_set_frequency@frequency:
  2588                           	opt stack 0
  2589  000060                     get_next_eeprom_write_task@task:
  2590                           	opt stack 0
  2591  000060                     display_get_character@position:
  2592                           	opt stack 0
  2593  000060                     __rtcc_bcd_to_decimal@tens:
  2594                           	opt stack 0
  2595  000060                     __rtcc_verify_bcd@min:
  2596                           	opt stack 0
  2597  000060                     rtcc_set_year@year:
  2598                           	opt stack 0
  2599  000060                     rtcc_set_month@month:
  2600                           	opt stack 0
  2601  000060                     rtcc_set_day@day:
  2602                           	opt stack 0
  2603  000060                     rtcc_set_hours@hours:
  2604                           	opt stack 0
  2605  000060                     rtcc_set_minutes@minutes:
  2606                           	opt stack 0
  2607  000060                     rtcc_set_seconds@seconds:
  2608                           	opt stack 0
  2609  000060                     __buck_prepare@cntr:
  2610                           	opt stack 0
  2611  000060                     buck_remote_set_enable@remote:
  2612                           	opt stack 0
  2613  000060                     buck_remote_set_on@on:
  2614                           	opt stack 0
  2615  000060                     buck_remote_set_synchronous@synchronous:
  2616                           	opt stack 0
  2617  000060                     buck_remote_set_dutycycle@dutycycle:
  2618                           	opt stack 0
  2619  000060                     buck_remote_change_dutycycle@change:
  2620                           	opt stack 0
  2621  000060                     buck_remote_get_status@retval:
  2622                           	opt stack 0
  2623  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2624                           	opt stack 0
  2625  000060                     SYSTEM_Initialize@pll_startup_counter:
  2626                           	opt stack 0
  2627  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2628                           	opt stack 0
  2629  000060                     __flash_spi_tx@data:
  2630                           	opt stack 0
  2631  000060                     __flash_spi_tx_tx@command:
  2632                           	opt stack 0
  2633  000060                     __flash_spi_tx_rx@command:
  2634                           	opt stack 0
  2635  000060                     ExternalFlash_MediaInitialize@config:
  2636                           	opt stack 0
  2637  000060                     ExternalFlash_SectorSizeRead@config:
  2638                           	opt stack 0
  2639  000060                     ExternalFlash_CapacityRead@config:
  2640                           	opt stack 0
  2641  000060                     ExternalFlash_MediaDetect@config:
  2642                           	opt stack 0
  2643  000060                     ExternalFlash_WriteProtectStateGet@config:
  2644                           	opt stack 0
  2645  000060                     __sector_from_cluster@fat_cluster:
  2646                           	opt stack 0
  2647  000060                     __get_checksum@log_entry:
  2648                           	opt stack 0
  2649  000060                     ___awdiv@dividend:
  2650                           	opt stack 0
  2651  000060                     ___lwdiv@dividend:
  2652                           	opt stack 0
  2653  000060                     ___lwmod@dividend:
  2654                           	opt stack 0
  2655  000060                     memcpy@d1:
  2656                           	opt stack 0
  2657  000060                     memset@p1:
  2658                           	opt stack 0
  2659  000060                     strlen@s:
  2660                           	opt stack 0
  2661  000060                     strncmp@s1:
  2662                           	opt stack 0
  2663  000060                     ___ftpack@arg:
  2664                           	opt stack 0
  2665  000060                     ___fttol@f1:
  2666                           	opt stack 0
  2667  000060                     ___lmul@multiplier:
  2668                           	opt stack 0
  2669  000060                     ___aldiv@dividend:
  2670                           	opt stack 0
  2671  000060                     ___lldiv@dividend:
  2672                           	opt stack 0
  2673  000060                     __display_usb@header:
  2674                           	opt stack 0
  2675  000060                     __display_outputs@line3:
  2676                           	opt stack 0
  2677                           
  2678                           ; 21 bytes @ 0x0
  2679  000060                     	ds	1
  2680  000061                     ??__fill_buffer_get_status:
  2681  000061                     ??_display_get_character:
  2682  000061                     ??_USBStallEndpoint:
  2683  000061                     system_output_off@output:
  2684                           	opt stack 0
  2685  000061                     schedule_eeprom_write_task@task:
  2686                           	opt stack 0
  2687  000061                     __rtcc_bcd_to_decimal@ones:
  2688                           	opt stack 0
  2689  000061                     __number_of_days@year:
  2690                           	opt stack 0
  2691  000061                     __rtcc_verify_bcd@max:
  2692                           	opt stack 0
  2693  000061                     __buck_set_dutycycle@dutyCycle:
  2694                           	opt stack 0
  2695  000061                     USBTransferOnePacket@data:
  2696                           	opt stack 0
  2697  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x1
  2701  000061                     	ds	1
  2702  000062                     ??_MSDComputeDeviceInAndResidue:
  2703  000062                     ??_strlen:
  2704  000062                     ??__rtcc_verify_bcd:
  2705  000062                     system_output_toggle@output:
  2706                           	opt stack 0
  2707  000062                     __i2c_eeprom_load_default_calibration@index:
  2708                           	opt stack 0
  2709  000062                     schedule_eeprom_write_task@idx:
  2710                           	opt stack 0
  2711  000062                     __display_clear@row:
  2712                           	opt stack 0
  2713  000062                     __rtcc_bcd_to_decimal@input:
  2714                           	opt stack 0
  2715  000062                     __number_of_days@bcd_year:
  2716                           	opt stack 0
  2717  000062                     __buck_set_sync_async@new_dutycycle:
  2718                           	opt stack 0
  2719  000062                     adc_read@channel:
  2720                           	opt stack 0
  2721  000062                     SYSTEM_Initialize@pll_startup_counter_3284:
  2722                           	opt stack 0
  2723  000062                     __flash_spi_tx@length:
  2724                           	opt stack 0
  2725  000062                     __flash_spi_tx_tx@command_length:
  2726                           	opt stack 0
  2727  000062                     __flash_spi_tx_rx@command_length:
  2728                           	opt stack 0
  2729  000062                     __get_checksum@byte_array:
  2730                           	opt stack 0
  2731  000062                     ___awdiv@divisor:
  2732                           	opt stack 0
  2733  000062                     ___lwdiv@divisor:
  2734                           	opt stack 0
  2735  000062                     ___lwmod@divisor:
  2736                           	opt stack 0
  2737  000062                     memcpy@s1:
  2738                           	opt stack 0
  2739  000062                     memset@c:
  2740                           	opt stack 0
  2741  000062                     strncmp@s2:
  2742                           	opt stack 0
  2743                           
  2744                           ; 2 bytes @ 0x2
  2745  000062                     	ds	1
  2746  000063                     USBTransferOnePacket@len:
  2747                           	opt stack 0
  2748  000063                     __parse_command_long@data:
  2749                           	opt stack 0
  2750  000063                     __parse_command_calibration@item:
  2751                           	opt stack 0
  2752  000063                     display_get_character@line:
  2753                           	opt stack 0
  2754  000063                     __display_clear@col:
  2755                           	opt stack 0
  2756  000063                     __number_of_days@month:
  2757                           	opt stack 0
  2758  000063                     __rtcc_verify_bcd@value:
  2759                           	opt stack 0
  2760  000063                     rtcc_get_year_decimal@bcd_year:
  2761                           	opt stack 0
  2762  000063                     rtcc_get_month_decimal@bcd_month:
  2763                           	opt stack 0
  2764  000063                     rtcc_get_day_decimal@bcd_day:
  2765                           	opt stack 0
  2766  000063                     rtcc_get_hours_decimal@bcd_hours:
  2767                           	opt stack 0
  2768  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2769                           	opt stack 0
  2770  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2771                           	opt stack 0
  2772  000063                     __buck_set_sync_async@mode:
  2773                           	opt stack 0
  2774  000063                     ___ftpack@exp:
  2775                           	opt stack 0
  2776  000063                     adc_read@adc_value:
  2777                           	opt stack 0
  2778                           
  2779                           ; 2 bytes @ 0x3
  2780  000063                     	ds	1
  2781  000064                     ??_USBTransferOnePacket:
  2782  000064                     ??__fill_buffer_get_display1:
  2783  000064                     ??__fill_buffer_get_display2:
  2784  000064                     ??__flash_spi_tx:
  2785  000064                     ??___fttol:
  2786  000064                     ?__get_time:
  2787                           	opt stack 0
  2788  000064                     ?__get_date:
  2789                           	opt stack 0
  2790  000064                     ?__get_dateTime:
  2791                           	opt stack 0
  2792  000064                     SYSTEM_Initialize@state:
  2793                           	opt stack 0
  2794  000064                     __parse_command_long@cmd:
  2795                           	opt stack 0
  2796  000064                     __parse_command_calibration@dat1:
  2797                           	opt stack 0
  2798  000064                     __rtcc_increment_bcd@min:
  2799                           	opt stack 0
  2800  000064                     __rtcc_decrement_bcd@min:
  2801                           	opt stack 0
  2802  000064                     rtcc_correct_day@day:
  2803                           	opt stack 0
  2804  000064                     __get_checksum@checksum:
  2805                           	opt stack 0
  2806  000064                     ___awdiv@counter:
  2807                           	opt stack 0
  2808  000064                     ___ftpack@sign:
  2809                           	opt stack 0
  2810  000064                     ___lwmod@counter:
  2811                           	opt stack 0
  2812  000064                     __flash_spi_tx_tx@data:
  2813                           	opt stack 0
  2814  000064                     __flash_spi_tx_rx@data:
  2815                           	opt stack 0
  2816  000064                     ___lwdiv@quotient:
  2817                           	opt stack 0
  2818  000064                     memcpy@n:
  2819                           	opt stack 0
  2820  000064                     memset@n:
  2821                           	opt stack 0
  2822  000064                     strlen@cp:
  2823                           	opt stack 0
  2824  000064                     strncmp@len:
  2825                           	opt stack 0
  2826  000064                     ___lmul@multiplicand:
  2827                           	opt stack 0
  2828  000064                     ___aldiv@divisor:
  2829                           	opt stack 0
  2830  000064                     ___lldiv@divisor:
  2831                           	opt stack 0
  2832                           
  2833                           ; 4 bytes @ 0x4
  2834  000064                     	ds	1
  2835  000065                     ??___ftpack:
  2836  000065                     ?_i2c_adc_read:
  2837                           	opt stack 0
  2838  000065                     USBStallEndpoint@ep:
  2839                           	opt stack 0
  2840  000065                     __fill_buffer_get_display1@cntr:
  2841                           	opt stack 0
  2842  000065                     __fill_buffer_get_display2@cntr:
  2843                           	opt stack 0
  2844  000065                     __parse_command_calibration@dat2:
  2845                           	opt stack 0
  2846  000065                     __rtcc_increment_bcd@max:
  2847                           	opt stack 0
  2848  000065                     __rtcc_decrement_bcd@max:
  2849                           	opt stack 0
  2850  000065                     rtcc_correct_day@max:
  2851                           	opt stack 0
  2852  000065                     __get_checksum@cntr:
  2853                           	opt stack 0
  2854  000065                     ___awdiv@sign:
  2855                           	opt stack 0
  2856  000065                     __i2c_write@data:
  2857                           	opt stack 0
  2858  000065                     __i2c_read@data:
  2859                           	opt stack 0
  2860  000065                     i2c_display_write_fixed@data:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0x5
  2864  000065                     	ds	1
  2865  000066                     ??_strncmp:
  2866  000066                     ??__rtcc_increment_bcd:
  2867  000066                     ??__rtcc_decrement_bcd:
  2868  000066                     ??__get_time:
  2869  000066                     ??__get_date:
  2870  000066                     __fill_buffer_get_display1@line:
  2871                           	opt stack 0
  2872  000066                     __fill_buffer_get_display2@line:
  2873                           	opt stack 0
  2874  000066                     __parse_command_calibration@dat3:
  2875                           	opt stack 0
  2876  000066                     ___lwdiv@counter:
  2877                           	opt stack 0
  2878  000066                     USBStallEndpoint@p:
  2879                           	opt stack 0
  2880  000066                     __flash_spi_tx_tx@data_length:
  2881                           	opt stack 0
  2882  000066                     __flash_spi_tx_rx@data_length:
  2883                           	opt stack 0
  2884  000066                     ___awdiv@quotient:
  2885                           	opt stack 0
  2886  000066                     memcpy@d:
  2887                           	opt stack 0
  2888  000066                     memset@p:
  2889                           	opt stack 0
  2890                           
  2891                           ; 2 bytes @ 0x6
  2892  000066                     	ds	1
  2893  000067                     ??_i2c_adc_read:
  2894  000067                     ??__parse_command_calibration:
  2895  000067                     __fill_buffer_get_display1@position:
  2896                           	opt stack 0
  2897  000067                     __fill_buffer_get_display2@position:
  2898                           	opt stack 0
  2899  000067                     __i2c_write@length:
  2900                           	opt stack 0
  2901  000067                     __i2c_read@length:
  2902                           	opt stack 0
  2903  000067                     i2c_display_write_fixed@length:
  2904                           	opt stack 0
  2905  000067                     __rtcc_increment_bcd@value:
  2906                           	opt stack 0
  2907  000067                     __rtcc_decrement_bcd@value:
  2908                           	opt stack 0
  2909  000067                     utoa@buf:
  2910                           	opt stack 0
  2911                           
  2912                           ; 2 bytes @ 0x7
  2913  000067                     	ds	1
  2914  000068                     ??__i2c_read:
  2915  000068                     ??__flash_spi_tx_tx:
  2916  000068                     ??__flash_spi_tx_rx:
  2917  000068                     ??__get_dateTime:
  2918  000068                     USBDeviceInit@i:
  2919                           	opt stack 0
  2920  000068                     USBTransferOnePacket@ep:
  2921                           	opt stack 0
  2922  000068                     MSDErrorHandler@ErrorCase:
  2923                           	opt stack 0
  2924  000068                     __i2c_write@slave_address:
  2925                           	opt stack 0
  2926  000068                     i2c_display_write_fixed@pos:
  2927                           	opt stack 0
  2928  000068                     rtcc_increment_year@year:
  2929                           	opt stack 0
  2930  000068                     rtcc_decrement_year@year:
  2931                           	opt stack 0
  2932  000068                     rtcc_increment_month@month:
  2933                           	opt stack 0
  2934  000068                     rtcc_decrement_month@month:
  2935                           	opt stack 0
  2936  000068                     rtcc_increment_day@day:
  2937                           	opt stack 0
  2938  000068                     rtcc_decrement_day@day:
  2939                           	opt stack 0
  2940  000068                     rtcc_increment_hours@hours:
  2941                           	opt stack 0
  2942  000068                     rtcc_decrement_hours@hours:
  2943                           	opt stack 0
  2944  000068                     rtcc_increment_minutes@minutes:
  2945                           	opt stack 0
  2946  000068                     rtcc_decrement_minutes@minutes:
  2947                           	opt stack 0
  2948  000068                     rtcc_increment_seconds@seconds:
  2949                           	opt stack 0
  2950  000068                     rtcc_decrement_seconds@seconds:
  2951                           	opt stack 0
  2952  000068                     __flash_wakeup@command:
  2953                           	opt stack 0
  2954  000068                     __get_time@hours:
  2955                           	opt stack 0
  2956  000068                     __get_date@year:
  2957                           	opt stack 0
  2958  000068                     ___aldiv@counter:
  2959                           	opt stack 0
  2960  000068                     i2c_adc_read@result:
  2961                           	opt stack 0
  2962  000068                     memcpy@s:
  2963                           	opt stack 0
  2964  000068                     ___lmul@product:
  2965                           	opt stack 0
  2966  000068                     ___lldiv@quotient:
  2967                           	opt stack 0
  2968                           
  2969                           ; 4 bytes @ 0x8
  2970  000068                     	ds	1
  2971  000069                     MSDErrorHandler@OldMSD_State:
  2972                           	opt stack 0
  2973  000069                     __i2c_write@cntr:
  2974                           	opt stack 0
  2975  000069                     __get_time@minutes:
  2976                           	opt stack 0
  2977  000069                     __get_date@month:
  2978                           	opt stack 0
  2979  000069                     ___aldiv@sign:
  2980                           	opt stack 0
  2981  000069                     ___fttol@sign1:
  2982                           	opt stack 0
  2983  000069                     USBTransferOnePacket@handle:
  2984                           	opt stack 0
  2985  000069                     __parse_command_calibration@parameter:
  2986                           	opt stack 0
  2987  000069                     utoa@val:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x9
  2991  000069                     	ds	1
  2992  00006A                     __ic2_display_set_address@address:
  2993                           	opt stack 0
  2994  00006A                     i2c_digipot_backlight@level:
  2995                           	opt stack 0
  2996  00006A                     i2c_adc_start@resolution:
  2997                           	opt stack 0
  2998  00006A                     __get_time@seconds:
  2999                           	opt stack 0
  3000  00006A                     __get_date@day:
  3001                           	opt stack 0
  3002  00006A                     memcpy@tmp:
  3003                           	opt stack 0
  3004  00006A                     i2c_digipot_reset_on@data_array:
  3005                           	opt stack 0
  3006  00006A                     i2c_digipot_reset_off@data_array:
  3007                           	opt stack 0
  3008  00006A                     i2c_eeprom_write@address:
  3009                           	opt stack 0
  3010  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3011                           	opt stack 0
  3012  00006A                     ___aldiv@quotient:
  3013                           	opt stack 0
  3014  00006A                     ___fttol@lval:
  3015                           	opt stack 0
  3016  00006A                     i2c_display_send_init_sequence@init_sequence:
  3017                           	opt stack 0
  3018                           
  3019                           ; 9 bytes @ 0xA
  3020  00006A                     	ds	1
  3021  00006B                     i2c_adc_start@gain:
  3022                           	opt stack 0
  3023  00006B                     __ic2_display_set_address@data_array:
  3024                           	opt stack 0
  3025  00006B                     i2c_digipot_backlight@data_array:
  3026                           	opt stack 0
  3027  00006B                     __get_time@time:
  3028                           	opt stack 0
  3029  00006B                     __get_date@date:
  3030                           	opt stack 0
  3031  00006B                     utoa@base:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0xB
  3035  00006B                     	ds	1
  3036  00006C                     ??_system_calculate_output_voltage:
  3037  00006C                     ??_system_calculate_input_voltage:
  3038  00006C                     ??_system_calculate_output_current:
  3039  00006C                     ??_system_calculate_input_current:
  3040  00006C                     ?_adc_calculate_temperature:
  3041                           	opt stack 0
  3042  00006C                     ?__flash_get_status:
  3043                           	opt stack 0
  3044  00006C                     i2c_adc_start@channel:
  3045                           	opt stack 0
  3046  00006C                     ___lldiv@counter:
  3047                           	opt stack 0
  3048  00006C                     i2c_eeprom_write@data:
  3049                           	opt stack 0
  3050  00006C                     adc_calculate_temperature@adc_value:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0xC
  3054  00006C                     	ds	1
  3055  00006D                     ??__buck_initial_dutycycle:
  3056  00006D                     ?__get_output_power:
  3057                           	opt stack 0
  3058  00006D                     i2c_display_cursor@position:
  3059                           	opt stack 0
  3060  00006D                     i2c_adc_start@configuration_byte:
  3061                           	opt stack 0
  3062  00006D                     __update_modified_time@root:
  3063                           	opt stack 0
  3064  00006D                     utoa@v:
  3065                           	opt stack 0
  3066                           
  3067                           ; 2 bytes @ 0xD
  3068  00006D                     	ds	1
  3069  00006E                     ?__get_input_power:
  3070                           	opt stack 0
  3071  00006E                     ?___altoft:
  3072                           	opt stack 0
  3073  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3074                           	opt stack 0
  3075  00006E                     i2c_display_cursor@line:
  3076                           	opt stack 0
  3077  00006E                     i2c_eeprom_write@length:
  3078                           	opt stack 0
  3079  00006E                     adc_calculate_temperature@calibration:
  3080                           	opt stack 0
  3081  00006E                     __flash_get_status@command:
  3082                           	opt stack 0
  3083  00006E                     __get_dateTime@year:
  3084                           	opt stack 0
  3085  00006E                     ___fttol@exp1:
  3086                           	opt stack 0
  3087  00006E                     __get_temperature@temperature:
  3088                           	opt stack 0
  3089  00006E                     __buck_initial_dutycycle@dc:
  3090                           	opt stack 0
  3091  00006E                     ___altoft@c:
  3092                           	opt stack 0
  3093                           
  3094                           ; 4 bytes @ 0xE
  3095  00006E                     	ds	1
  3096  00006F                     ??_adc_calculate_temperature:
  3097  00006F                     ??_i2c_eeprom_write:
  3098  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  3099                           	opt stack 0
  3100  00006F                     __i2c_read@slave_address:
  3101                           	opt stack 0
  3102  00006F                     i2c_display_cursor@address:
  3103                           	opt stack 0
  3104  00006F                     __get_dateTime@month:
  3105                           	opt stack 0
  3106  00006F                     utoa@c:
  3107                           	opt stack 0
  3108  00006F                     __flash_get_status@status:
  3109                           	opt stack 0
  3110  00006F                     __get_output_power@pwr:
  3111                           	opt stack 0
  3112                           
  3113                           ; 4 bytes @ 0xF
  3114  00006F                     	ds	1
  3115  000070                     MSDCheckForErrorCases@DeviceNoData:
  3116                           	opt stack 0
  3117  000070                     __i2c_read@cntr:
  3118                           	opt stack 0
  3119  000070                     __get_dateTime@day:
  3120                           	opt stack 0
  3121  000070                     itoa@buf:
  3122                           	opt stack 0
  3123  000070                     system_calculate_input_voltage@tmp:
  3124                           	opt stack 0
  3125  000070                     system_calculate_output_voltage@tmp:
  3126                           	opt stack 0
  3127  000070                     system_calculate_input_current@tmp:
  3128                           	opt stack 0
  3129  000070                     system_calculate_output_current@tmp:
  3130                           	opt stack 0
  3131  000070                     __get_input_power@pwr:
  3132                           	opt stack 0
  3133                           
  3134                           ; 4 bytes @ 0x10
  3135  000070                     	ds	1
  3136  000071                     __get_dateTime@hours:
  3137                           	opt stack 0
  3138  000071                     i2c_eeprom_read@address:
  3139                           	opt stack 0
  3140  000071                     flash_is_busy@status:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x11
  3144  000071                     	ds	1
  3145  000072                     ??___altoft:
  3146  000072                     __buck_start@dutycycle:
  3147                           	opt stack 0
  3148  000072                     __get_dateTime@minutes:
  3149                           	opt stack 0
  3150  000072                     itoa@val:
  3151                           	opt stack 0
  3152  000072                     i2c_eeprom_write@dat:
  3153                           	opt stack 0
  3154                           
  3155                           ; 17 bytes @ 0x12
  3156  000072                     	ds	1
  3157  000073                     __buck_start@mode:
  3158                           	opt stack 0
  3159  000073                     __get_dateTime@seconds:
  3160                           	opt stack 0
  3161  000073                     i2c_eeprom_read@data:
  3162                           	opt stack 0
  3163  000073                     __flash_copy_page_to_buffer@page:
  3164                           	opt stack 0
  3165  000073                     __flash_compare_page_to_buffer@page:
  3166                           	opt stack 0
  3167  000073                     __flash_write_to_buffer@start:
  3168                           	opt stack 0
  3169  000073                     __flash_write_page_from_buffer@page:
  3170                           	opt stack 0
  3171  000073                     flash_partial_read@page:
  3172                           	opt stack 0
  3173  000073                     __flash_set_page_size@command:
  3174                           	opt stack 0
  3175                           
  3176                           ; 4 bytes @ 0x13
  3177  000073                     	ds	1
  3178  000074                     ??_log_collect_data:
  3179  000074                     __buck_start@startup_dutycycle:
  3180                           	opt stack 0
  3181  000074                     itoa@base:
  3182                           	opt stack 0
  3183  000074                     __get_dateTime@datetime:
  3184                           	opt stack 0
  3185  000074                     __display_usb@usb_off:
  3186                           	opt stack 0
  3187                           
  3188                           ; 17 bytes @ 0x14
  3189  000074                     	ds	1
  3190  000075                     i2c_eeprom_read@length:
  3191                           	opt stack 0
  3192  000075                     __buck_start@cntr:
  3193                           	opt stack 0
  3194  000075                     __flash_copy_page_to_buffer@buffer:
  3195                           	opt stack 0
  3196  000075                     __flash_compare_page_to_buffer@buffer:
  3197                           	opt stack 0
  3198  000075                     __flash_write_page_from_buffer@buffer:
  3199                           	opt stack 0
  3200  000075                     __flash_write_to_buffer@data:
  3201                           	opt stack 0
  3202  000075                     flash_partial_read@start:
  3203                           	opt stack 0
  3204  000075                     adc_calculate_temperature@tmp:
  3205                           	opt stack 0
  3206  000075                     __display_outputs@line4:
  3207                           	opt stack 0
  3208                           
  3209                           ; 21 bytes @ 0x15
  3210  000075                     	ds	1
  3211  000076                     ??_i2c_eeprom_read:
  3212  000076                     ??__buck_operate_local:
  3213  000076                     ??__flash_copy_page_to_buffer:
  3214  000076                     ??__flash_compare_page_to_buffer:
  3215  000076                     ??__flash_write_page_from_buffer:
  3216  000076                     ___altoft@exp:
  3217                           	opt stack 0
  3218  000076                     __buck_operate_remote$8740:
  3219                           	opt stack 0
  3220  000076                     itoa@cp:
  3221                           	opt stack 0
  3222                           
  3223                           ; 2 bytes @ 0x16
  3224  000076                     	ds	1
  3225  000077                     i2c_eeprom_read@addr:
  3226                           	opt stack 0
  3227  000077                     __flash_set_page_size@size:
  3228                           	opt stack 0
  3229  000077                     ___altoft@sign:
  3230                           	opt stack 0
  3231  000077                     __flash_write_to_buffer@data_length:
  3232                           	opt stack 0
  3233  000077                     flash_partial_read@length:
  3234                           	opt stack 0
  3235                           
  3236                           ; 2 bytes @ 0x17
  3237  000077                     	ds	1
  3238  000078                     i2c_eeprom_read@slave_address:
  3239                           	opt stack 0
  3240  000078                     __display_itoa@value:
  3241                           	opt stack 0
  3242  000078                     log_collect_data@temp:
  3243                           	opt stack 0
  3244  000078                     log_generate_entry@log_entry:
  3245                           	opt stack 0
  3246                           
  3247                           ; 2 bytes @ 0x18
  3248  000078                     	ds	1
  3249  000079                     ??_i2c_eeprom_read_calibration:
  3250  000079                     __flash_write_to_buffer@buffer:
  3251                           	opt stack 0
  3252  000079                     __flash_compare_page_to_buffer@status:
  3253                           	opt stack 0
  3254  000079                     flash_partial_read@data:
  3255                           	opt stack 0
  3256  000079                     __flash_copy_page_to_buffer@command:
  3257                           	opt stack 0
  3258  000079                     __flash_write_page_from_buffer@command:
  3259                           	opt stack 0
  3260                           
  3261                           ; 4 bytes @ 0x19
  3262  000079                     	ds	1
  3263  00007A                     ??_log_generate_entry:
  3264  00007A                     __display_itoa@decimals:
  3265                           	opt stack 0
  3266  00007A                     __flash_write_to_buffer@command:
  3267                           	opt stack 0
  3268                           
  3269                           ; 4 bytes @ 0x1A
  3270  00007A                     	ds	1
  3271  00007B                     ??_flash_partial_read:
  3272  00007B                     __buck_operate_local$8739:
  3273                           	opt stack 0
  3274  00007B                     __display_itoa@text:
  3275                           	opt stack 0
  3276  00007B                     i2c_eeprom_read_calibration@buffer:
  3277                           	opt stack 0
  3278  00007B                     __flash_compare_page_to_buffer@command:
  3279                           	opt stack 0
  3280                           
  3281                           ; 4 bytes @ 0x1B
  3282  00007B                     	ds	1
  3283  00007C                     __buck_operate_local@tmp_dutycycle:
  3284                           	opt stack 0
  3285                           
  3286                           ; 1 bytes @ 0x1C
  3287  00007C                     	ds	1
  3288  00007D                     ??__display_itoa:
  3289  00007D                     __buck_operate_local@cntr:
  3290                           	opt stack 0
  3291                           
  3292                           ; 1 bytes @ 0x1D
  3293  00007D                     	ds	1
  3294  00007E                     
  3295                           ; 1 bytes @ 0x1E
  3296  00007E                     	ds	1
  3297  00007F                     i2c_eeprom_read_calibration@addr:
  3298                           	opt stack 0
  3299  00007F                     flash_page_write@page:
  3300                           	opt stack 0
  3301  00007F                     flash_partial_write@page:
  3302                           	opt stack 0
  3303  00007F                     flash_partial_read@command:
  3304                           	opt stack 0
  3305                           
  3306                           ; 4 bytes @ 0x1F
  3307  00007F                     	ds	2
  3308  000081                     i2c_eeprom_read_calibration@cntr:
  3309                           	opt stack 0
  3310  000081                     flash_page_write@data:
  3311                           	opt stack 0
  3312  000081                     flash_partial_write@start:
  3313                           	opt stack 0
  3314                           
  3315                           ; 2 bytes @ 0x21
  3316  000081                     	ds	2
  3317  000083                     i2c_eeprom_write@slave_address:
  3318                           	opt stack 0
  3319  000083                     flash_page_write@match:
  3320                           	opt stack 0
  3321  000083                     flash_partial_write@length:
  3322                           	opt stack 0
  3323  000083                     flash_partial_read@address:
  3324                           	opt stack 0
  3325  000083                     __display_itoa@tmp:
  3326                           	opt stack 0
  3327                           
  3328                           ; 10 bytes @ 0x23
  3329  000083                     	ds	1
  3330  000084                     i2c_eeprom_write@cntr:
  3331                           	opt stack 0
  3332  000084                     ExternalFlash_SectorWrite@config:
  3333                           	opt stack 0
  3334                           
  3335                           ; 2 bytes @ 0x24
  3336  000084                     	ds	1
  3337  000085                     ??__write_calibration:
  3338  000085                     flash_partial_write@data:
  3339                           	opt stack 0
  3340  000085                     rtcc_write_eeprom@date:
  3341                           	opt stack 0
  3342  000085                     __display_usb@low:
  3343                           	opt stack 0
  3344                           
  3345                           ; 16 bytes @ 0x25
  3346  000085                     	ds	1
  3347  000086                     ExternalFlash_SectorWrite@sector_addr:
  3348                           	opt stack 0
  3349                           
  3350                           ; 4 bytes @ 0x26
  3351  000086                     	ds	1
  3352  000087                     ??__root_is_available:
  3353  000087                     ?__get_empty_cluster:
  3354                           	opt stack 0
  3355  000087                     ?_fat_get_empty_clusters:
  3356                           	opt stack 0
  3357  000087                     ?__read_fat:
  3358                           	opt stack 0
  3359  000087                     flash_partial_write@match:
  3360                           	opt stack 0
  3361  000087                     flash_page_read@page:
  3362                           	opt stack 0
  3363  000087                     __get_empty_cluster@first_cluster:
  3364                           	opt stack 0
  3365  000087                     fat_get_empty_clusters@maximum:
  3366                           	opt stack 0
  3367  000087                     __read_fat@cluster:
  3368                           	opt stack 0
  3369  000087                     __read_root@data:
  3370                           	opt stack 0
  3371  000087                     fat_find_file@name:
  3372                           	opt stack 0
  3373  000087                     __write_calibration@buffer:
  3374                           	opt stack 0
  3375                           
  3376                           ; 16 bytes @ 0x27
  3377  000087                     	ds	1
  3378  000088                     __root_is_available@root_sector:
  3379                           	opt stack 0
  3380  000088                     __write_fat@cluster:
  3381                           	opt stack 0
  3382  000088                     __write_root@data:
  3383                           	opt stack 0
  3384                           
  3385                           ; 2 bytes @ 0x28
  3386  000088                     	ds	1
  3387  000089                     ??__read_root:
  3388  000089                     flash_page_read@data:
  3389                           	opt stack 0
  3390  000089                     __get_empty_cluster@fat_sector:
  3391                           	opt stack 0
  3392  000089                     fat_get_empty_clusters@fat_sector:
  3393                           	opt stack 0
  3394  000089                     __read_fat@fat_sector:
  3395                           	opt stack 0
  3396  000089                     fat_find_file@extension:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x29
  3400  000089                     	ds	1
  3401  00008A                     ??__write_root:
  3402  00008A                     ExternalFlash_SectorWrite@buffer:
  3403                           	opt stack 0
  3404  00008A                     __root_is_available@offset:
  3405                           	opt stack 0
  3406  00008A                     __write_fat@value:
  3407                           	opt stack 0
  3408  00008A                     __read_root@root_sector:
  3409                           	opt stack 0
  3410  00008A                     __display_outputs@low:
  3411                           	opt stack 0
  3412                           
  3413                           ; 16 bytes @ 0x2A
  3414  00008A                     	ds	1
  3415  00008B                     __parse_command_short@cmd:
  3416                           	opt stack 0
  3417  00008B                     rtcc_read_eeprom@error_found:
  3418                           	opt stack 0
  3419  00008B                     ExternalFlash_SectorRead@config:
  3420                           	opt stack 0
  3421  00008B                     __get_empty_cluster@offset:
  3422                           	opt stack 0
  3423  00008B                     fat_get_empty_clusters@offset:
  3424                           	opt stack 0
  3425  00008B                     __read_fat@offset:
  3426                           	opt stack 0
  3427  00008B                     __write_root@root_sector:
  3428                           	opt stack 0
  3429  00008B                     fat_find_file@buffer:
  3430                           	opt stack 0
  3431                           
  3432                           ; 11 bytes @ 0x2B
  3433  00008B                     	ds	1
  3434  00008C                     ??_APP_DeviceCustomHIDTasks:
  3435  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3436                           	opt stack 0
  3437  00008C                     __root_is_available@file_number:
  3438                           	opt stack 0
  3439  00008C                     __write_fat@fat_sector:
  3440                           	opt stack 0
  3441  00008C                     __read_root@offset:
  3442                           	opt stack 0
  3443  00008C                     rtcc_read_eeprom@date:
  3444                           	opt stack 0
  3445                           
  3446                           ; 6 bytes @ 0x2C
  3447  00008C                     	ds	1
  3448  00008D                     __display_itoa@len:
  3449                           	opt stack 0
  3450  00008D                     __root_is_available@first_byte:
  3451                           	opt stack 0
  3452  00008D                     ExternalFlash_SectorWrite@page:
  3453                           	opt stack 0
  3454  00008D                     __get_empty_cluster@value:
  3455                           	opt stack 0
  3456  00008D                     fat_get_empty_clusters@value:
  3457                           	opt stack 0
  3458  00008D                     __read_fat@value:
  3459                           	opt stack 0
  3460  00008D                     __write_root@offset:
  3461                           	opt stack 0
  3462  00008D                     ExternalFlash_SectorRead@sector_addr:
  3463                           	opt stack 0
  3464                           
  3465                           ; 4 bytes @ 0x2D
  3466  00008D                     	ds	1
  3467  00008E                     __display_itoa@missing:
  3468                           	opt stack 0
  3469  00008E                     __get_available_root_entry@file_number:
  3470                           	opt stack 0
  3471  00008E                     __read_root@slot:
  3472                           	opt stack 0
  3473  00008E                     __write_fat@offset:
  3474                           	opt stack 0
  3475                           
  3476                           ; 2 bytes @ 0x2E
  3477  00008E                     	ds	1
  3478  00008F                     ??_MSDWriteHandler:
  3479  00008F                     __display_itoa@pos:
  3480                           	opt stack 0
  3481  00008F                     __write_root@slot:
  3482                           	opt stack 0
  3483  00008F                     __get_empty_cluster@cluster:
  3484                           	opt stack 0
  3485  00008F                     fat_get_empty_clusters@empty_clusters:
  3486                           	opt stack 0
  3487                           
  3488                           ; 2 bytes @ 0x2F
  3489  00008F                     	ds	1
  3490  000090                     ??__display_charger:
  3491  000090                     ??__display_efficiency:
  3492  000090                     __display_inout@line1:
  3493                           	opt stack 0
  3494  000090                     __display_temperature@header:
  3495                           	opt stack 0
  3496                           
  3497                           ; 20 bytes @ 0x30
  3498  000090                     	ds	1
  3499  000091                     ExternalFlash_SectorRead@buffer:
  3500                           	opt stack 0
  3501  000091                     fat_get_empty_clusters@cluster:
  3502                           	opt stack 0
  3503  000091                     fat_append_to_file@number_of_bytes:
  3504                           	opt stack 0
  3505                           
  3506                           ; 2 bytes @ 0x31
  3507  000091                     	ds	1
  3508  000092                     rtcc_read_eeprom@buffer:
  3509                           	opt stack 0
  3510  000092                     __display_efficiency@header:
  3511                           	opt stack 0
  3512                           
  3513                           ; 19 bytes @ 0x32
  3514  000092                     	ds	1
  3515  000093                     ExternalFlash_SectorRead@page:
  3516                           	opt stack 0
  3517  000093                     fat_append_to_file@data:
  3518                           	opt stack 0
  3519                           
  3520                           ; 2 bytes @ 0x33
  3521  000093                     	ds	1
  3522  000094                     APP_DeviceCustomHIDTasks@return_value:
  3523                           	opt stack 0
  3524                           
  3525                           ; 2 bytes @ 0x34
  3526  000094                     	ds	1
  3527  000095                     ??_MSDReadHandler:
  3528  000095                     ??_fat_append_to_file:
  3529  000095                     __display_usb@usb_on:
  3530                           	opt stack 0
  3531                           
  3532                           ; 16 bytes @ 0x35
  3533  000095                     	ds	1
  3534  000096                     APP_DeviceCustomHIDTasks@idx:
  3535                           	opt stack 0
  3536  000096                     fat_find_file@slot:
  3537                           	opt stack 0
  3538                           
  3539                           ; 1 bytes @ 0x36
  3540  000096                     	ds	1
  3541  000097                     __write_calibration@addr:
  3542                           	opt stack 0
  3543  000097                     fat_find_file@sector:
  3544                           	opt stack 0
  3545                           
  3546                           ; 2 bytes @ 0x37
  3547  000097                     	ds	2
  3548  000099                     ??_MSDProcessCommandMediaPresent:
  3549  000099                     __write_calibration@ptr:
  3550                           	opt stack 0
  3551  000099                     fat_find_file@offset:
  3552                           	opt stack 0
  3553                           
  3554                           ; 2 bytes @ 0x39
  3555  000099                     	ds	1
  3556  00009A                     __display_outputs@header:
  3557                           	opt stack 0
  3558                           
  3559                           ; 14 bytes @ 0x3A
  3560  00009A                     	ds	1
  3561  00009B                     __write_calibration@index:
  3562                           	opt stack 0
  3563  00009B                     _MSDProcessCommandMediaPresent$2712:
  3564                           	opt stack 0
  3565  00009B                     fat_create_file@name:
  3566                           	opt stack 0
  3567                           
  3568                           ; 2 bytes @ 0x3B
  3569  00009B                     	ds	1
  3570  00009C                     __write_calibration@cntr:
  3571                           	opt stack 0
  3572                           
  3573                           ; 1 bytes @ 0x3C
  3574  00009C                     	ds	1
  3575  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3576                           	opt stack 0
  3577  00009D                     fat_create_file@extension:
  3578                           	opt stack 0
  3579  00009D                     fat_append_to_file@sector:
  3580                           	opt stack 0
  3581                           
  3582                           ; 2 bytes @ 0x3D
  3583  00009D                     	ds	1
  3584  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3585                           	opt stack 0
  3586                           
  3587                           ; 4 bytes @ 0x3E
  3588  00009E                     	ds	1
  3589  00009F                     fat_create_file@size:
  3590                           	opt stack 0
  3591  00009F                     fat_append_to_file@file_size:
  3592                           	opt stack 0
  3593                           
  3594                           ; 4 bytes @ 0x3F
  3595  00009F                     	ds	3
  3596  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3597                           	opt stack 0
  3598  0000A2                     __display_inout@line2:
  3599                           	opt stack 0
  3600                           
  3601                           ; 18 bytes @ 0x42
  3602  0000A2                     	ds	1
  3603  0000A3                     ??_fat_create_file:
  3604  0000A3                     fat_append_to_file@new_cluster:
  3605                           	opt stack 0
  3606                           
  3607                           ; 2 bytes @ 0x43
  3608  0000A3                     	ds	1
  3609  0000A4                     __display_temperature@external1:
  3610                           	opt stack 0
  3611                           
  3612                           ; 12 bytes @ 0x44
  3613  0000A4                     	ds	1
  3614  0000A5                     __display_usb@cntr:
  3615                           	opt stack 0
  3616  0000A5                     fat_append_to_file@fat_cluster:
  3617                           	opt stack 0
  3618  0000A5                     __display_efficiency@source:
  3619                           	opt stack 0
  3620                           
  3621                           ; 19 bytes @ 0x45
  3622  0000A5                     	ds	1
  3623  0000A6                     MSDProcessCommandMediaPresent@i:
  3624                           	opt stack 0
  3625                           
  3626                           ; 1 bytes @ 0x46
  3627  0000A6                     	ds	1
  3628  0000A7                     ??_MSDProcessCommand:
  3629  0000A7                     fat_create_file@next_cluster:
  3630                           	opt stack 0
  3631  0000A7                     fat_append_to_file@offset:
  3632                           	opt stack 0
  3633                           
  3634                           ; 2 bytes @ 0x47
  3635  0000A7                     	ds	1
  3636  0000A8                     __display_outputs@mode:
  3637                           	opt stack 0
  3638                           
  3639                           ; 1 bytes @ 0x48
  3640  0000A8                     	ds	1
  3641  0000A9                     __display_outputs@cntr:
  3642                           	opt stack 0
  3643  0000A9                     fat_append_to_file@file_number:
  3644                           	opt stack 0
  3645  0000A9                     fat_create_file@cluster_count:
  3646                           	opt stack 0
  3647                           
  3648                           ; 2 bytes @ 0x49
  3649  0000A9                     	ds	1
  3650  0000AA                     fat_append_to_file@length:
  3651                           	opt stack 0
  3652                           
  3653                           ; 2 bytes @ 0x4A
  3654  0000AA                     	ds	1
  3655  0000AB                     fat_create_file@root_slot:
  3656                           	opt stack 0
  3657                           
  3658                           ; 1 bytes @ 0x4B
  3659  0000AB                     	ds	1
  3660  0000AC                     ??_MSDTasks:
  3661  0000AC                     fat_create_file@number_of_clusters:
  3662                           	opt stack 0
  3663  0000AC                     fat_append_to_file@position:
  3664                           	opt stack 0
  3665                           
  3666                           ; 4 bytes @ 0x4C
  3667  0000AC                     	ds	1
  3668  0000AD                     _MSDTasks$2694:
  3669                           	opt stack 0
  3670                           
  3671                           ; 2 bytes @ 0x4D
  3672  0000AD                     	ds	1
  3673  0000AE                     fat_create_file@cluster:
  3674                           	opt stack 0
  3675                           
  3676                           ; 2 bytes @ 0x4E
  3677  0000AE                     	ds	1
  3678  0000AF                     _MSDTasks$2695:
  3679                           	opt stack 0
  3680                           
  3681                           ; 2 bytes @ 0x4F
  3682  0000AF                     	ds	1
  3683  0000B0                     __display_temperature@external2:
  3684                           	opt stack 0
  3685  0000B0                     fat_create_file@root_entry:
  3686                           	opt stack 0
  3687  0000B0                     fat_append_to_file@root:
  3688                           	opt stack 0
  3689                           
  3690                           ; 32 bytes @ 0x50
  3691  0000B0                     	ds	1
  3692  0000B1                     MSDTasks@i:
  3693                           	opt stack 0
  3694                           
  3695                           ; 1 bytes @ 0x51
  3696  0000B1                     	ds	1
  3697  0000B2                     
  3698                           ; 1 bytes @ 0x52
  3699  0000B2                     	ds	2
  3700  0000B4                     __display_inout@line4:
  3701                           	opt stack 0
  3702                           
  3703                           ; 14 bytes @ 0x54
  3704  0000B4                     	ds	4
  3705  0000B8                     __display_efficiency@footer:
  3706                           	opt stack 0
  3707                           
  3708                           ; 14 bytes @ 0x58
  3709  0000B8                     	ds	4
  3710  0000BC                     __display_temperature@internal:
  3711                           	opt stack 0
  3712                           
  3713                           ; 11 bytes @ 0x5C
  3714  0000BC                     	ds	6
  3715  0000C2                     __display_inout@line3:
  3716                           	opt stack 0
  3717                           
  3718                           ; 3 bytes @ 0x62
  3719  0000C2                     	ds	3
  3720  0000C5                     __display_inout@cntr:
  3721                           	opt stack 0
  3722                           
  3723                           ; 1 bytes @ 0x65
  3724  0000C5                     	ds	1
  3725  0000C6                     __display_efficiency@efficiency:
  3726                           	opt stack 0
  3727                           
  3728                           ; 3 bytes @ 0x66
  3729  0000C6                     	ds	1
  3730  0000C7                     __display_temperature@cntr:
  3731                           	opt stack 0
  3732                           
  3733                           ; 1 bytes @ 0x67
  3734  0000C7                     	ds	2
  3735  0000C9                     __display_efficiency@panel:
  3736                           	opt stack 0
  3737                           
  3738                           ; 4 bytes @ 0x69
  3739  0000C9                     	ds	4
  3740  0000CD                     __display_efficiency@battery:
  3741                           	opt stack 0
  3742                           
  3743                           ; 4 bytes @ 0x6D
  3744  0000CD                     	ds	3
  3745  0000D0                     log_write_to_disk@file_number:
  3746                           	opt stack 0
  3747                           
  3748                           ; 1 bytes @ 0x70
  3749  0000D0                     	ds	1
  3750  0000D1                     __display_efficiency@cntr:
  3751                           	opt stack 0
  3752  0000D1                     log_write_to_disk@log_entry:
  3753                           	opt stack 0
  3754                           
  3755                           ; 32 bytes @ 0x71
  3756  0000D1                     	ds	1
  3757  0000D2                     ??_display_prepare:
  3758                           
  3759                           ; 1 bytes @ 0x72
  3760  0000D2                     	ds	2
  3761  0000D4                     display_prepare@mode:
  3762                           	opt stack 0
  3763                           
  3764                           ; 1 bytes @ 0x74
  3765  0000D4                     	ds	29
  3766  0000F1                     ??_main:
  3767                           
  3768                           ; 1 bytes @ 0x91
  3769  0000F1                     	ds	2
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           postinc0	equ	0xFEE
  3775                           wreg	equ	0xFE8
  3776                           postdec1	equ	0xFE5
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           
  3780                           	psect	cstackCOMRAM
  3781  000001                     __pcstackCOMRAM:
  3782                           	opt stack 0
  3783  000001                     ??_USBStdGetDscHandler:
  3784  000001                     ??_USBStdGetStatusHandler:
  3785  000001                     ?i2_USBTransferOnePacket:
  3786                           	opt stack 0
  3787  000001                     ?i2_ExternalFlash_MediaInitialize:
  3788                           	opt stack 0
  3789  000001                     USBConfigureEndpoint@direction:
  3790                           	opt stack 0
  3791  000001                     USBCtrlTrfTxService@byteToSend:
  3792                           	opt stack 0
  3793  000001                     USBCtrlTrfRxService@i:
  3794                           	opt stack 0
  3795  000001                     i2USBTransferOnePacket@dir:
  3796                           	opt stack 0
  3797  000001                     i2USBStallEndpoint@dir:
  3798                           	opt stack 0
  3799  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  3800                           	opt stack 0
  3801  000001                     i2ExternalFlash_MediaInitialize@config:
  3802                           	opt stack 0
  3803  000001                     i2ExternalFlash_MediaDetect@config:
  3804                           	opt stack 0
  3805  000001                     i2memcpy@d1:
  3806                           	opt stack 0
  3807  000001                     i2memset@p1:
  3808                           	opt stack 0
  3809                           
  3810                           ; 2 bytes @ 0x0
  3811  000001                     	ds	1
  3812  000002                     ??_USBConfigureEndpoint:
  3813  000002                     ??i2_USBStallEndpoint:
  3814  000002                     USBCtrlTrfRxService@byteToRead:
  3815                           	opt stack 0
  3816  000002                     USBCtrlTrfInHandler@lastDTS:
  3817                           	opt stack 0
  3818  000002                     USBStdGetStatusHandler@p:
  3819                           	opt stack 0
  3820  000002                     i2USBTransferOnePacket@data:
  3821                           	opt stack 0
  3822                           
  3823                           ; 2 bytes @ 0x1
  3824  000002                     	ds	1
  3825  000003                     i2SYSTEM_Initialize@pll_startup_counter_3284:
  3826                           	opt stack 0
  3827  000003                     i2memcpy@s1:
  3828                           	opt stack 0
  3829  000003                     i2memset@c:
  3830                           	opt stack 0
  3831                           
  3832                           ; 2 bytes @ 0x2
  3833  000003                     	ds	1
  3834  000004                     i2USBTransferOnePacket@len:
  3835                           	opt stack 0
  3836                           
  3837                           ; 1 bytes @ 0x3
  3838  000004                     	ds	1
  3839  000005                     ??i2_USBTransferOnePacket:
  3840  000005                     i2SYSTEM_Initialize@state:
  3841                           	opt stack 0
  3842  000005                     i2memcpy@n:
  3843                           	opt stack 0
  3844  000005                     i2memset@n:
  3845                           	opt stack 0
  3846                           
  3847                           ; 2 bytes @ 0x4
  3848  000005                     	ds	1
  3849  000006                     USBConfigureEndpoint@EPNum:
  3850                           	opt stack 0
  3851  000006                     i2USBStallEndpoint@ep:
  3852                           	opt stack 0
  3853                           
  3854                           ; 1 bytes @ 0x5
  3855  000006                     	ds	1
  3856  000007                     USBConfigureEndpoint@handle:
  3857                           	opt stack 0
  3858  000007                     i2USBStallEndpoint@p:
  3859                           	opt stack 0
  3860  000007                     i2memcpy@d:
  3861                           	opt stack 0
  3862  000007                     i2memset@p:
  3863                           	opt stack 0
  3864                           
  3865                           ; 2 bytes @ 0x6
  3866  000007                     	ds	2
  3867  000009                     USBEnableEndpoint@options:
  3868                           	opt stack 0
  3869  000009                     i2USBDeviceInit@i:
  3870                           	opt stack 0
  3871  000009                     i2USBTransferOnePacket@ep:
  3872                           	opt stack 0
  3873  000009                     i2memcpy@s:
  3874                           	opt stack 0
  3875                           
  3876                           ; 2 bytes @ 0x8
  3877  000009                     	ds	1
  3878  00000A                     USBEnableEndpoint@p:
  3879                           	opt stack 0
  3880  00000A                     i2USBTransferOnePacket@handle:
  3881                           	opt stack 0
  3882                           
  3883                           ; 2 bytes @ 0x9
  3884  00000A                     	ds	1
  3885  00000B                     i2memcpy@tmp:
  3886                           	opt stack 0
  3887                           
  3888                           ; 1 bytes @ 0xA
  3889  00000B                     	ds	1
  3890  00000C                     ??_USBMSDInit:
  3891  00000C                     USBEnableEndpoint@ep:
  3892                           	opt stack 0
  3893  00000C                     _USBCheckMSDRequest$2640:
  3894                           	opt stack 0
  3895  00000C                     MSDTransferTerminated@handle:
  3896                           	opt stack 0
  3897                           
  3898                           ; 2 bytes @ 0xB
  3899  00000C                     	ds	1
  3900  00000D                     
  3901                           ; 1 bytes @ 0xC
  3902  00000D                     	ds	1
  3903  00000E                     _USBCheckMSDRequest$2641:
  3904                           	opt stack 0
  3905  00000E                     _MSDTransferTerminated$2729:
  3906                           	opt stack 0
  3907                           
  3908                           ; 2 bytes @ 0xD
  3909  00000E                     	ds	1
  3910  00000F                     
  3911                           ; 1 bytes @ 0xE
  3912  00000F                     	ds	1
  3913  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3914                           	opt stack 0
  3915                           
  3916                           ; 2 bytes @ 0xF
  3917  000010                     	ds	2
  3918  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3919                           	opt stack 0
  3920                           
  3921                           ; 2 bytes @ 0x11
  3922  000012                     	ds	2
  3923  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3924                           	opt stack 0
  3925                           
  3926                           ; 2 bytes @ 0x13
  3927  000014                     	ds	2
  3928  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3929                           
  3930                           ; 1 bytes @ 0x15
  3931  000016                     	ds	2
  3932  000018                     ??_USBStdFeatureReqHandler:
  3933  000018                     USBStdSetCfgHandler@i:
  3934                           	opt stack 0
  3935                           
  3936                           ; 1 bytes @ 0x17
  3937  000018                     	ds	1
  3938  000019                     USBStdFeatureReqHandler@pUEP:
  3939                           	opt stack 0
  3940                           
  3941                           ; 2 bytes @ 0x18
  3942  000019                     	ds	2
  3943  00001B                     USBStdFeatureReqHandler@current_ep_data:
  3944                           	opt stack 0
  3945                           
  3946                           ; 1 bytes @ 0x1A
  3947  00001B                     	ds	1
  3948  00001C                     USBStdFeatureReqHandler@p:
  3949                           	opt stack 0
  3950                           
  3951                           ; 2 bytes @ 0x1B
  3952  00001C                     	ds	2
  3953  00001E                     ??_USBCtrlEPService:
  3954  00001E                     
  3955                           ; 1 bytes @ 0x1D
  3956  00001E                     	ds	1
  3957  00001F                     USBDeviceTasks@i:
  3958                           	opt stack 0
  3959                           
  3960                           ; 1 bytes @ 0x1E
  3961  00001F                     	ds	1
  3962  000020                     ??_SYS_InterruptHigh:
  3963                           
  3964                           ; 1 bytes @ 0x1F
  3965  000020                     	ds	18
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           postinc0	equ	0xFEE
  3971                           wreg	equ	0xFE8
  3972                           postdec1	equ	0xFE5
  3973                           fsr1h	equ	0xFE2
  3974                           fsr1l	equ	0xFE1
  3975                           
  3976 ;;
  3977 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3978 ;;
  3979 ;; *************** function _main *****************
  3980 ;; Defined at:
  3981 ;;		line 50 in file "main.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;Total ram usage:        2 bytes
  4000 ;; Hardware stack levels required when called:   22
  4001 ;; This function calls:
  4002 ;;		_APP_DeviceCustomHIDTasks
  4003 ;;		_APP_DeviceMSDTasks
  4004 ;;		_SYSTEM_Initialize
  4005 ;;		_USBDeviceAttach
  4006 ;;		_USBDeviceInit
  4007 ;;		_adc_calculate_temperature
  4008 ;;		_adc_calibrate
  4009 ;;		_adc_read
  4010 ;;		_buck_get_mode
  4011 ;;		_buck_operate
  4012 ;;		_display_prepare
  4013 ;;		_display_update
  4014 ;;		_i2c_adc_read
  4015 ;;		_i2c_adc_start
  4016 ;;		_i2c_eeprom_tasks
  4017 ;;		_log_collect_data
  4018 ;;		_log_get_number_of_samples
  4019 ;;		_log_start_new
  4020 ;;		_log_write_to_disk
  4021 ;;		_system_calculate_input_current
  4022 ;;		_system_calculate_input_voltage
  4023 ;;		_system_calculate_output_current
  4024 ;;		_system_calculate_output_voltage
  4025 ;;		_system_init
  4026 ;;		_system_output_off
  4027 ;;		_ui_get_status
  4028 ;;		_ui_run
  4029 ;; This function is called by:
  4030 ;;		Startup code after reset
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text0
  4035  00B470                     __ptext0:
  4036                           	opt stack 0
  4037  00B470                     _main:
  4038                           	opt stack 9
  4039                           
  4040                           ;main.c: 55: system_init();
  4041                           
  4042                           ;incstack = 0
  4043  00B470  EC03  F075         	call	_system_init	;wreg free
  4044                           
  4045                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4046  00B474  0E00               	movlw	0
  4047  00B476  EC2C  F08D         	call	_SYSTEM_Initialize
  4048                           
  4049                           ;main.c: 59: USBDeviceInit();
  4050  00B47A  EC2D  F06B         	call	_USBDeviceInit	;wreg free
  4051                           
  4052                           ;main.c: 60: USBDeviceAttach();
  4053  00B47E  ECEC  F092         	call	_USBDeviceAttach	;wreg free
  4054  00B482                     
  4055                           ;main.c: 63: {
  4056                           ;main.c: 86: APP_DeviceMSDTasks();
  4057  00B482  ECE2  F096         	call	_APP_DeviceMSDTasks	;wreg free
  4058                           
  4059                           ;main.c: 88: if(!os.done)
  4060  00B486  0102               	movlb	2	; () banked
  4061  00B488  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4062  00B48A  A4D8               	btfss	status,2,c
  4063  00B48C  D7FA               	goto	l899
  4064                           
  4065                           ; BSR set to: 2
  4066                           ;main.c: 89: {
  4067                           ;main.c: 93: if(os.output_voltage<12000)
  4068  00B48E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4069  00B490  D006               	goto	u15700
  4070  00B492  0EE0               	movlw	224
  4071  00B494  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4072  00B496  0E2E               	movlw	46
  4073  00B498  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4074  00B49A  B0D8               	btfsc	status,0,c
  4075  00B49C  D003               	goto	l901
  4076  00B49E                     u15700:
  4077                           
  4078                           ; BSR set to: 2
  4079                           ;main.c: 94: {
  4080                           ;main.c: 95: system_output_off(OUTPUT_USB);
  4081  00B49E  0E10               	movlw	16
  4082  00B4A0  ECDF  F08D         	call	_system_output_off
  4083  00B4A4                     l901:
  4084                           
  4085                           ;main.c: 96: }
  4086                           ;main.c: 97: if(os.output_voltage<-1)
  4087  00B4A4  0102               	movlb	2	; () banked
  4088  00B4A6  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4089  00B4A8  D011               	goto	l902
  4090  00B4AA  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4091  00B4AC  0EFF               	movlw	255
  4092  00B4AE  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4093  00B4B0  B0D8               	btfsc	status,0,c
  4094  00B4B2  D00C               	goto	l902
  4095                           
  4096                           ; BSR set to: 2
  4097                           ;main.c: 98: {
  4098                           ;main.c: 99: system_output_off(OUTPUT_1);
  4099  00B4B4  0E01               	movlw	1
  4100  00B4B6  ECDF  F08D         	call	_system_output_off
  4101                           
  4102                           ;main.c: 100: system_output_off(OUTPUT_2);
  4103  00B4BA  0E02               	movlw	2
  4104  00B4BC  ECDF  F08D         	call	_system_output_off
  4105                           
  4106                           ;main.c: 101: system_output_off(OUTPUT_3);
  4107  00B4C0  0E04               	movlw	4
  4108  00B4C2  ECDF  F08D         	call	_system_output_off
  4109                           
  4110                           ;main.c: 102: system_output_off(OUTPUT_4);
  4111  00B4C6  0E08               	movlw	8
  4112  00B4C8  ECDF  F08D         	call	_system_output_off
  4113  00B4CC                     l902:
  4114                           
  4115                           ;main.c: 103: }
  4116                           ;main.c: 106: i2c_eeprom_tasks();
  4117  00B4CC  EC78  F088         	call	_i2c_eeprom_tasks	;wreg free
  4118                           
  4119                           ;main.c: 109: ui_run();
  4120  00B4D0  EC85  F075         	call	_ui_run	;wreg free
  4121                           
  4122                           ;main.c: 112: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4123  00B4D4  0E00               	movlw	0
  4124  00B4D6  EC81  F084         	call	_adc_read
  4125  00B4DA  0100               	movlb	0	; () banked
  4126  00B4DC  5160               	movf	?_adc_read& (0+255),w,b
  4127  00B4DE  0102               	movlb	2	; () banked
  4128  00B4E0  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4129  00B4E2  0100               	movlb	0	; () banked
  4130  00B4E4  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4131  00B4E6  0102               	movlb	2	; () banked
  4132  00B4E8  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4133                           
  4134                           ;main.c: 113: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4135  00B4EA  0E01               	movlw	1
  4136  00B4EC  EC81  F084         	call	_adc_read
  4137  00B4F0  0100               	movlb	0	; () banked
  4138  00B4F2  5160               	movf	?_adc_read& (0+255),w,b
  4139  00B4F4  0102               	movlb	2	; () banked
  4140  00B4F6  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4141  00B4F8  0100               	movlb	0	; () banked
  4142  00B4FA  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4143  00B4FC  0102               	movlb	2	; () banked
  4144  00B4FE  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4145                           
  4146                           ;main.c: 114: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4147  00B500  0E02               	movlw	2
  4148  00B502  EC81  F084         	call	_adc_read
  4149  00B506  0100               	movlb	0	; () banked
  4150  00B508  5160               	movf	?_adc_read& (0+255),w,b
  4151  00B50A  0102               	movlb	2	; () banked
  4152  00B50C  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4153  00B50E  0100               	movlb	0	; () banked
  4154  00B510  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4155  00B512  0102               	movlb	2	; () banked
  4156  00B514  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4157                           
  4158                           ;main.c: 117: switch(os.timeSlot&0b00001111)
  4159  00B516  D101               	goto	l903
  4160  00B518                     
  4161                           ;main.c: 120: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4162                           
  4163                           ; BSR set to: 2
  4164  00B518  0E01               	movlw	1
  4165  00B51A  0100               	movlb	0	; () banked
  4166  00B51C  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4167  00B51E  0E00               	movlw	0
  4168  00B520  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4169  00B522  0E00               	movlw	0
  4170  00B524  EC16  F092         	call	_i2c_adc_start
  4171                           
  4172                           ;main.c: 121: break;
  4173  00B528  D12A               	goto	l905
  4174  00B52A                     
  4175                           ;main.c: 124: APP_DeviceCustomHIDTasks();
  4176  00B52A  ECE6  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4177                           
  4178                           ;main.c: 128: break;
  4179  00B52E  D127               	goto	l905
  4180  00B530                     
  4181                           ;main.c: 132: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4182  00B530  ECB2  F08E         	call	_i2c_adc_read	;wreg free
  4183  00B534  0102               	movlb	2	; () banked
  4184  00B536  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4185  00B538  0B0F               	andlw	15
  4186  00B53A  0B03               	andlw	3
  4187  00B53C  0100               	movlb	0	; () banked
  4188  00B53E  6FF1               	movwf	??_main& (0+255),b
  4189  00B540  6BF2               	clrf	(??_main+1)& (0+255),b
  4190  00B542  90D8               	bcf	status,0,c
  4191  00B544  37F1               	rlcf	??_main& (0+255),f,b
  4192  00B546  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4193  00B548  0E1F               	movlw	low (_os+31)
  4194  00B54A  25F1               	addwf	??_main& (0+255),w,b
  4195  00B54C  6ED9               	movwf	fsr2l,c
  4196  00B54E  0E02               	movlw	high (_os+31)
  4197  00B550  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4198  00B552  6EDA               	movwf	fsr2h,c
  4199  00B554  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4200  00B558  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 133: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4204  00B55C  0E01               	movlw	1
  4205  00B55E  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4206  00B560  0E00               	movlw	0
  4207  00B562  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4208  00B564  0E03               	movlw	3
  4209  00B566  EC16  F092         	call	_i2c_adc_start
  4210                           
  4211                           ;main.c: 134: system_calculate_output_voltage();
  4212  00B56A  ECDC  F079         	call	_system_calculate_output_voltage	;wreg free
  4213                           
  4214                           ;main.c: 135: break;
  4215  00B56E  D107               	goto	l905
  4216  00B570                     
  4217                           ;main.c: 138: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4218  00B570  ECA0  F097         	call	_ui_get_status	;wreg free
  4219  00B574  0A05               	xorlw	5
  4220  00B576  A4D8               	btfss	status,2,c
  4221  00B578  D102               	goto	l905
  4222                           
  4223                           ;main.c: 139: {
  4224                           ;main.c: 140: display_prepare(os.display_mode);
  4225  00B57A  0102               	movlb	2	; () banked
  4226  00B57C  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4227  00B57E  ECCB  F085         	call	_display_prepare
  4228                           
  4229                           ;main.c: 141: }
  4230                           ;main.c: 142: break;
  4231  00B582  D0FD               	goto	l905
  4232  00B584                     
  4233                           ;main.c: 145: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4234  00B584  ECA0  F097         	call	_ui_get_status	;wreg free
  4235                           
  4236                           ;main.c: 148: }
  4237                           ;main.c: 149: break;
  4238                           
  4239                           ;main.c: 146: {
  4240  00B588  D0FA               	goto	l905
  4241  00B58A                     
  4242                           ;main.c: 152: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4243  00B58A  ECB2  F08E         	call	_i2c_adc_read	;wreg free
  4244  00B58E  0102               	movlb	2	; () banked
  4245  00B590  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4246  00B592  0B0F               	andlw	15
  4247  00B594  0B03               	andlw	3
  4248  00B596  0100               	movlb	0	; () banked
  4249  00B598  6FF1               	movwf	??_main& (0+255),b
  4250  00B59A  6BF2               	clrf	(??_main+1)& (0+255),b
  4251  00B59C  90D8               	bcf	status,0,c
  4252  00B59E  37F1               	rlcf	??_main& (0+255),f,b
  4253  00B5A0  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4254  00B5A2  0E0A               	movlw	low (_os+10)
  4255  00B5A4  25F1               	addwf	??_main& (0+255),w,b
  4256  00B5A6  6ED9               	movwf	fsr2l,c
  4257  00B5A8  0E02               	movlw	high (_os+10)
  4258  00B5AA  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4259  00B5AC  6EDA               	movwf	fsr2h,c
  4260  00B5AE  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4261  00B5B2  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4262                           
  4263                           ;main.c: 154: {
  4264                           ;main.c: 155: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4265                           
  4266                           ; BSR set to: 0
  4267                           
  4268                           ;main.c: 153: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4269  00B5B6  0E01               	movlw	1
  4270  00B5B8  0100               	movlb	0	; () banked
  4271  00B5BA  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4272  00B5BC  0E00               	movlw	0
  4273  00B5BE  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4274  00B5C0  0E01               	movlw	1
  4275  00B5C2  EC16  F092         	call	_i2c_adc_start
  4276                           
  4277                           ;main.c: 156: }
  4278                           ;main.c: 157: system_calculate_input_voltage();
  4279  00B5C6  EC4D  F07A         	call	_system_calculate_input_voltage	;wreg free
  4280                           
  4281                           ;main.c: 158: break;
  4282  00B5CA  D0D9               	goto	l905
  4283  00B5CC                     
  4284                           ;main.c: 161: APP_DeviceCustomHIDTasks();
  4285  00B5CC  ECE6  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4286                           
  4287                           ;main.c: 162: break;
  4288  00B5D0  D0D6               	goto	l905
  4289  00B5D2                     u15740:
  4290                           
  4291                           ;main.c: 166: {
  4292                           ;main.c: 167: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4293  00B5D2  ECB2  F08E         	call	_i2c_adc_read	;wreg free
  4294  00B5D6  0102               	movlb	2	; () banked
  4295  00B5D8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4296  00B5DA  0B0F               	andlw	15
  4297  00B5DC  0B03               	andlw	3
  4298  00B5DE  0100               	movlb	0	; () banked
  4299  00B5E0  6FF1               	movwf	??_main& (0+255),b
  4300  00B5E2  6BF2               	clrf	(??_main+1)& (0+255),b
  4301  00B5E4  90D8               	bcf	status,0,c
  4302  00B5E6  37F1               	rlcf	??_main& (0+255),f,b
  4303  00B5E8  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4304  00B5EA  0E29               	movlw	low (_os+41)
  4305  00B5EC  25F1               	addwf	??_main& (0+255),w,b
  4306  00B5EE  6ED9               	movwf	fsr2l,c
  4307  00B5F0  0E02               	movlw	high (_os+41)
  4308  00B5F2  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4309  00B5F4  6EDA               	movwf	fsr2h,c
  4310  00B5F6  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4311  00B5FA  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;main.c: 168: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4315  00B5FE  0E01               	movlw	1
  4316  00B600  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4317  00B602  0E00               	movlw	0
  4318  00B604  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4319  00B606  0E02               	movlw	2
  4320  00B608  EC16  F092         	call	_i2c_adc_start
  4321                           
  4322                           ;main.c: 169: system_calculate_output_current();
  4323  00B60C  EC29  F070         	call	_system_calculate_output_current	;wreg free
  4324                           
  4325                           ;main.c: 170: }
  4326                           ;main.c: 171: break;
  4327  00B610  D0B6               	goto	l905
  4328  00B612                     
  4329                           ;main.c: 174: APP_DeviceCustomHIDTasks();
  4330  00B612  ECE6  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4331                           
  4332                           ;main.c: 175: log_collect_data();
  4333  00B616  ECB2  F05E         	call	_log_collect_data	;wreg free
  4334                           
  4335                           ;main.c: 176: if(log_get_number_of_samples() == 30)
  4336  00B61A  EC77  F097         	call	_log_get_number_of_samples	;wreg free
  4337  00B61E  0E1E               	movlw	30
  4338  00B620  0100               	movlb	0	; () banked
  4339  00B622  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4340  00B624  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4341  00B626  A4D8               	btfss	status,2,c
  4342  00B628  D0AA               	goto	l905
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;main.c: 177: {
  4346                           ;main.c: 178: log_write_to_disk();
  4347  00B62A  EC1F  F089         	call	_log_write_to_disk	;wreg free
  4348                           
  4349                           ;main.c: 179: log_start_new();
  4350  00B62E  EC0F  F07C         	call	_log_start_new	;wreg free
  4351                           
  4352                           ;main.c: 180: }
  4353                           ;main.c: 181: break;
  4354  00B632  D0A5               	goto	l905
  4355  00B634                     u15760:
  4356                           
  4357                           ;main.c: 185: {
  4358                           ;main.c: 186: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4359  00B634  ECB2  F08E         	call	_i2c_adc_read	;wreg free
  4360  00B638  0102               	movlb	2	; () banked
  4361  00B63A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4362  00B63C  0B0F               	andlw	15
  4363  00B63E  0B03               	andlw	3
  4364  00B640  0100               	movlb	0	; () banked
  4365  00B642  6FF1               	movwf	??_main& (0+255),b
  4366  00B644  6BF2               	clrf	(??_main+1)& (0+255),b
  4367  00B646  90D8               	bcf	status,0,c
  4368  00B648  37F1               	rlcf	??_main& (0+255),f,b
  4369  00B64A  37F2               	rlcf	(??_main+1)& (0+255),f,b
  4370  00B64C  0E14               	movlw	low (_os+20)
  4371  00B64E  25F1               	addwf	??_main& (0+255),w,b
  4372  00B650  6ED9               	movwf	fsr2l,c
  4373  00B652  0E02               	movlw	high (_os+20)
  4374  00B654  21F2               	addwfc	(??_main+1)& (0+255),w,b
  4375  00B656  6EDA               	movwf	fsr2h,c
  4376  00B658  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4377  00B65C  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4378                           
  4379                           ;main.c: 187: system_calculate_input_current();
  4380  00B660  ECBB  F070         	call	_system_calculate_input_current	;wreg free
  4381                           
  4382                           ;main.c: 188: }
  4383                           ;main.c: 189: break;
  4384  00B664  D08C               	goto	l905
  4385  00B666                     
  4386                           ;main.c: 192: buck_operate();
  4387  00B666  EC76  F08C         	call	_buck_operate	;wreg free
  4388                           
  4389                           ;main.c: 193: break;
  4390  00B66A  D089               	goto	l905
  4391  00B66C                     
  4392                           ;main.c: 197: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4393  00B66C  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4394  00B670  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4395  00B674  0E04               	movlw	4
  4396  00B676  0100               	movlb	0	; () banked
  4397  00B678  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4398  00B67A  ECFF  F077         	call	_adc_calculate_temperature	;wreg free
  4399  00B67E  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4400  00B682  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4401                           
  4402                           ;main.c: 198: os.temperature_onboard_adc = 0;
  4403  00B686  0E00               	movlw	0
  4404  00B688  0102               	movlb	2	; () banked
  4405  00B68A  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4406  00B68C  0E00               	movlw	0
  4407  00B68E  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4408                           
  4409                           ; BSR set to: 2
  4410                           ;main.c: 199: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4411  00B690  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4412  00B694  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4413  00B698  0E05               	movlw	5
  4414  00B69A  0100               	movlb	0	; () banked
  4415  00B69C  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4416  00B69E  ECFF  F077         	call	_adc_calculate_temperature	;wreg free
  4417  00B6A2  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4418  00B6A6  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4419                           
  4420                           ;main.c: 200: os.temperature_external_1_adc = 0;
  4421  00B6AA  0E00               	movlw	0
  4422  00B6AC  0102               	movlb	2	; () banked
  4423  00B6AE  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4424  00B6B0  0E00               	movlw	0
  4425  00B6B2  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4426                           
  4427                           ; BSR set to: 2
  4428                           ;main.c: 201: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4429  00B6B4  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4430  00B6B8  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4431  00B6BC  0E06               	movlw	6
  4432  00B6BE  0100               	movlb	0	; () banked
  4433  00B6C0  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4434  00B6C2  ECFF  F077         	call	_adc_calculate_temperature	;wreg free
  4435  00B6C6  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4436  00B6CA  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4437                           
  4438                           ;main.c: 202: os.temperature_external_2_adc = 0;
  4439  00B6CE  0E00               	movlw	0
  4440  00B6D0  0102               	movlb	2	; () banked
  4441  00B6D2  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4442  00B6D4  0E00               	movlw	0
  4443  00B6D6  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4444                           
  4445                           ; BSR set to: 2
  4446                           ;main.c: 203: adc_calibrate();
  4447  00B6D8  EC6B  F097         	call	_adc_calibrate	;wreg free
  4448                           
  4449                           ;main.c: 205: if(os.temperature_onboard>3000)
  4450  00B6DC  0102               	movlb	2	; () banked
  4451  00B6DE  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4452  00B6E0  D008               	goto	l929
  4453  00B6E2  0EB9               	movlw	185
  4454  00B6E4  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4455  00B6E6  0E0B               	movlw	11
  4456  00B6E8  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4457  00B6EA  A0D8               	btfss	status,0,c
  4458  00B6EC  D002               	goto	l929
  4459                           
  4460                           ; BSR set to: 2
  4461                           ;main.c: 206: {
  4462                           ;main.c: 207: LATDbits.LD1 = 1;
  4463  00B6EE  828C               	bsf	3980,1,c	;volatile
  4464                           
  4465                           ;main.c: 208: }
  4466  00B6F0  D008               	goto	l931
  4467  00B6F2                     l929:
  4468                           
  4469                           ; BSR set to: 2
  4470                           ;main.c: 209: else if(os.temperature_onboard<2500)
  4471                           
  4472                           ; BSR set to: 2
  4473  00B6F2  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4474  00B6F4  D005               	goto	u15780
  4475  00B6F6  0EC4               	movlw	196
  4476  00B6F8  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4477  00B6FA  0E09               	movlw	9
  4478  00B6FC  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4479  00B6FE  A0D8               	btfss	status,0,c
  4480  00B700                     u15780:
  4481                           
  4482                           ; BSR set to: 2
  4483                           ;main.c: 210: {
  4484                           ;main.c: 211: LATDbits.LD1 = 0;
  4485  00B700  928C               	bcf	3980,1,c	;volatile
  4486  00B702                     l931:
  4487                           
  4488                           ; BSR set to: 2
  4489                           ;main.c: 212: }
  4490                           ;main.c: 213: display_prepare(os.display_mode);
  4491                           
  4492                           ; BSR set to: 2
  4493                           
  4494                           ; BSR set to: 2
  4495  00B702  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4496  00B704  ECCB  F085         	call	_display_prepare
  4497                           
  4498                           ;main.c: 214: break;
  4499  00B708  D03A               	goto	l905
  4500  00B70A                     
  4501                           ;main.c: 217: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4502  00B70A  ECA0  F097         	call	_ui_get_status	;wreg free
  4503  00B70E  0A05               	xorlw	5
  4504  00B710  A4D8               	btfss	status,2,c
  4505  00B712  D035               	goto	l905
  4506                           
  4507                           ;main.c: 218: {
  4508                           ;main.c: 219: display_update();
  4509  00B714  EC86  F087         	call	_display_update	;wreg free
  4510                           
  4511                           ;main.c: 222: }
  4512                           
  4513                           ;main.c: 220: }
  4514                           ;main.c: 221: break;
  4515  00B718  D032               	goto	l905
  4516  00B71A                     l903:
  4517  00B71A  0102               	movlb	2	; () banked
  4518  00B71C  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4519  00B71E  0B0F               	andlw	15
  4520  00B720  0100               	movlb	0	; () banked
  4521  00B722  6FF1               	movwf	??_main& (0+255),b
  4522  00B724  6BF2               	clrf	(??_main+1)& (0+255),b
  4523                           
  4524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4525                           ; Switch size 1, requested type "space"
  4526                           ; Number of cases is 1, Range of values is 0 to 0
  4527                           ; switch strategies available:
  4528                           ; Name         Instructions Cycles
  4529                           ; simple_byte            4     3 (average)
  4530                           ;	Chosen strategy is simple_byte
  4531  00B726  51F2               	movf	(??_main+1)& (0+255),w,b
  4532  00B728  0A00               	xorlw	0	; case 0
  4533  00B72A  A4D8               	btfss	status,2,c
  4534  00B72C  D028               	goto	l905
  4535                           
  4536                           ; BSR set to: 0
  4537                           ; Switch size 1, requested type "space"
  4538                           ; Number of cases is 13, Range of values is 0 to 15
  4539                           ; switch strategies available:
  4540                           ; Name         Instructions Cycles
  4541                           ; simple_byte           40    21 (average)
  4542                           ;	Chosen strategy is simple_byte
  4543  00B72E  51F1               	movf	??_main& (0+255),w,b
  4544  00B730  0A00               	xorlw	0	; case 0
  4545  00B732  B4D8               	btfsc	status,2,c
  4546  00B734  D6F1               	goto	l904
  4547  00B736  0A01               	xorlw	1	; case 1
  4548  00B738  B4D8               	btfsc	status,2,c
  4549  00B73A  D6F7               	goto	l906
  4550  00B73C  0A02               	xorlw	2	; case 3
  4551  00B73E  B4D8               	btfsc	status,2,c
  4552  00B740  D6F7               	goto	l907
  4553  00B742  0A07               	xorlw	7	; case 4
  4554  00B744  B4D8               	btfsc	status,2,c
  4555  00B746  D714               	goto	l908
  4556  00B748  0A01               	xorlw	1	; case 5
  4557  00B74A  B4D8               	btfsc	status,2,c
  4558  00B74C  D71B               	goto	l910
  4559  00B74E  0A03               	xorlw	3	; case 6
  4560  00B750  B4D8               	btfsc	status,2,c
  4561  00B752  D71B               	goto	l912
  4562  00B754  0A0E               	xorlw	14	; case 8
  4563  00B756  B4D8               	btfsc	status,2,c
  4564  00B758  D739               	goto	l916
  4565  00B75A  0A01               	xorlw	1	; case 9
  4566  00B75C  B4D8               	btfsc	status,2,c
  4567  00B75E  D739               	goto	u15740
  4568  00B760  0A02               	xorlw	2	; case 11
  4569  00B762  B4D8               	btfsc	status,2,c
  4570  00B764  D756               	goto	l921
  4571  00B766  0A07               	xorlw	7	; case 12
  4572  00B768  B4D8               	btfsc	status,2,c
  4573  00B76A  D764               	goto	u15760
  4574  00B76C  0A01               	xorlw	1	; case 13
  4575  00B76E  B4D8               	btfsc	status,2,c
  4576  00B770  D77A               	goto	l927
  4577  00B772  0A03               	xorlw	3	; case 14
  4578  00B774  B4D8               	btfsc	status,2,c
  4579  00B776  D77A               	goto	l928
  4580  00B778  0A01               	xorlw	1	; case 15
  4581  00B77A  B4D8               	btfsc	status,2,c
  4582  00B77C  D7C6               	goto	l932
  4583  00B77E                     l905:
  4584                           
  4585                           ;main.c: 223: os.done = 1;
  4586                           
  4587                           ; BSR set to: 0
  4588  00B77E  0E01               	movlw	1
  4589  00B780  0102               	movlb	2	; () banked
  4590  00B782  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4591                           
  4592                           ; BSR set to: 2
  4593                           
  4594                           ; BSR set to: 2
  4595  00B784  D67E               	goto	l899
  4596  00B786                     __end_of_main:
  4597                           	opt stack 0
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           postinc0	equ	0xFEE
  4603                           wreg	equ	0xFE8
  4604                           postdec1	equ	0xFE5
  4605                           fsr1h	equ	0xFE2
  4606                           fsr1l	equ	0xFE1
  4607                           postinc2	equ	0xFDE
  4608                           postdec2	equ	0xFDD
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8
  4612                           
  4613 ;; *************** function _ui_run *****************
  4614 ;; Defined at:
  4615 ;;		line 334 in file "ui.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:   15
  4636 ;; This function calls:
  4637 ;;		__ui_encoder
  4638 ;;		_i2c_digipot_backlight
  4639 ;;		_i2c_digipot_reset_off
  4640 ;;		_i2c_digipot_reset_on
  4641 ;;		_i2c_display_send_init_sequence
  4642 ;;		_system_encoder_disable
  4643 ;;		_system_encoder_enable
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text1
  4650  00EB0A                     __ptext1:
  4651                           	opt stack 0
  4652  00EB0A                     _ui_run:
  4653                           	opt stack 15
  4654                           
  4655                           ;ui.c: 336: switch(userInterfaceStatus)
  4656                           
  4657                           ; BSR set to: 2
  4658                           ;incstack = 0
  4659  00EB0A  D06B               	goto	l1843
  4660  00EB0C                     
  4661                           ;ui.c: 339: if (os.buttonCount!=0)
  4662  00EB0C  0102               	movlb	2	; () banked
  4663  00EB0E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4664  00EB10  B4D8               	btfsc	status,2,c
  4665  00EB12  0012               	return	
  4666                           
  4667                           ; BSR set to: 2
  4668                           ;ui.c: 340: {
  4669                           ;ui.c: 342: LATCbits.LC2 = 1;
  4670  00EB14  848B               	bsf	3979,2,c	;volatile
  4671                           
  4672                           ; BSR set to: 2
  4673                           ;ui.c: 343: os.buttonCount = 0;
  4674  00EB16  0E00               	movlw	0
  4675  00EB18  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4676                           
  4677                           ;ui.c: 345: system_ui_inactive_count = 0;
  4678  00EB1A  0E00               	movlw	0
  4679  00EB1C  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4680  00EB1E  0E00               	movlw	0
  4681  00EB20  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4682                           
  4683                           ;ui.c: 346: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4684  00EB22  0E01               	movlw	1
  4685  00EB24  0101               	movlb	1	; () banked
  4686  00EB26  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4687                           
  4688                           ; BSR set to: 1
  4689                           ;ui.c: 347: }
  4690                           ;ui.c: 348: break;
  4691  00EB28  0012               	return	
  4692  00EB2A                     l1847:
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;ui.c: 357: LATDbits.LD0 = 0;
  4696  00EB2A  908C               	bcf	3980,0,c	;volatile
  4697                           
  4698                           ; BSR set to: 1
  4699                           ;ui.c: 359: system_ui_inactive_count = 0;
  4700  00EB2C  0E00               	movlw	0
  4701  00EB2E  0102               	movlb	2	; () banked
  4702  00EB30  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4703  00EB32  0E00               	movlw	0
  4704  00EB34  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4705                           
  4706                           ;ui.c: 360: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4707  00EB36  0E02               	movlw	2
  4708  00EB38  0101               	movlb	1	; () banked
  4709  00EB3A  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4710                           
  4711                           ;ui.c: 361: break;
  4712  00EB3C  0012               	return	
  4713  00EB3E                     
  4714                           ; BSR set to: 1
  4715                           ;ui.c: 365: i2c_digipot_reset_on();
  4716                           
  4717                           ; BSR set to: 1
  4718  00EB3E  EC83  F094         	call	_i2c_digipot_reset_on	;wreg free
  4719                           
  4720                           ;ui.c: 367: system_ui_inactive_count = 0;
  4721  00EB42  0E00               	movlw	0
  4722  00EB44  0102               	movlb	2	; () banked
  4723  00EB46  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4724  00EB48  0E00               	movlw	0
  4725  00EB4A  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4726                           
  4727                           ; BSR set to: 2
  4728                           ;ui.c: 368: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4729  00EB4C  0E03               	movlw	3
  4730  00EB4E  0101               	movlb	1	; () banked
  4731  00EB50  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4732                           
  4733                           ;ui.c: 369: break;
  4734  00EB52  0012               	return	
  4735  00EB54                     
  4736                           ; BSR set to: 1
  4737                           ;ui.c: 372: ++system_ui_inactive_count;
  4738                           
  4739                           ; BSR set to: 1
  4740  00EB54  0102               	movlb	2	; () banked
  4741  00EB56  4BB2               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4742  00EB58  2BB3               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4743                           
  4744                           ; BSR set to: 2
  4745                           ;ui.c: 374: if (system_ui_inactive_count>3)
  4746  00EB5A  51B3               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4747  00EB5C  E104               	bnz	u15070
  4748  00EB5E  0E04               	movlw	4
  4749  00EB60  5DB2               	subwf	_system_ui_inactive_count& (0+255),w,b
  4750  00EB62  A0D8               	btfss	status,0,c
  4751  00EB64  0012               	return	
  4752  00EB66                     u15070:
  4753                           
  4754                           ; BSR set to: 2
  4755                           ;ui.c: 375: {
  4756                           ;ui.c: 376: i2c_digipot_reset_off();
  4757  00EB66  EC96  F094         	call	_i2c_digipot_reset_off	;wreg free
  4758                           
  4759                           ;ui.c: 377: system_ui_inactive_count = 0;
  4760  00EB6A  0E00               	movlw	0
  4761  00EB6C  0102               	movlb	2	; () banked
  4762  00EB6E  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4763  00EB70  0E00               	movlw	0
  4764  00EB72  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4765                           
  4766                           ; BSR set to: 2
  4767                           ;ui.c: 378: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4768  00EB74  0E04               	movlw	4
  4769  00EB76  0101               	movlb	1	; () banked
  4770  00EB78  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4771                           
  4772                           ; BSR set to: 1
  4773                           ;ui.c: 379: }
  4774                           ;ui.c: 380: break;
  4775  00EB7A  0012               	return	
  4776  00EB7C                     
  4777                           ; BSR set to: 1
  4778                           ;ui.c: 384: i2c_display_send_init_sequence();
  4779                           
  4780                           ; BSR set to: 1
  4781  00EB7C  EC4D  F093         	call	_i2c_display_send_init_sequence	;wreg free
  4782                           
  4783                           ;ui.c: 386: i2c_digipot_backlight(150);
  4784  00EB80  0E96               	movlw	150
  4785  00EB82  ECD7  F093         	call	_i2c_digipot_backlight
  4786                           
  4787                           ;ui.c: 388: system_encoder_enable();
  4788  00EB86  ECEB  F096         	call	_system_encoder_enable	;wreg free
  4789                           
  4790                           ;ui.c: 390: system_ui_inactive_count = 0;
  4791  00EB8A  0E00               	movlw	0
  4792  00EB8C  0102               	movlb	2	; () banked
  4793  00EB8E  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4794  00EB90  0E00               	movlw	0
  4795  00EB92  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4796                           
  4797                           ; BSR set to: 2
  4798                           ;ui.c: 391: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4799  00EB94  0E05               	movlw	5
  4800  00EB96  0101               	movlb	1	; () banked
  4801  00EB98  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4802                           
  4803                           ;ui.c: 392: break;
  4804  00EB9A  0012               	return	
  4805  00EB9C                     
  4806                           ; BSR set to: 1
  4807                           ;ui.c: 395: if (os.encoderCount==0 && os.buttonCount==0)
  4808                           
  4809                           ; BSR set to: 1
  4810  00EB9C  0102               	movlb	2	; () banked
  4811  00EB9E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4812  00EBA0  A4D8               	btfss	status,2,c
  4813  00EBA2  D017               	goto	l1853
  4814                           
  4815                           ; BSR set to: 2
  4816  00EBA4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4817  00EBA6  A4D8               	btfss	status,2,c
  4818  00EBA8  D014               	goto	l1853
  4819                           
  4820                           ; BSR set to: 2
  4821                           ;ui.c: 396: {
  4822                           ;ui.c: 397: ++system_ui_inactive_count;
  4823  00EBAA  4BB2               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4824  00EBAC  2BB3               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4825                           
  4826                           ; BSR set to: 2
  4827                           ;ui.c: 398: if(system_ui_inactive_count > 20000)
  4828  00EBAE  0E21               	movlw	33
  4829  00EBB0  5DB2               	subwf	_system_ui_inactive_count& (0+255),w,b
  4830  00EBB2  0E4E               	movlw	78
  4831  00EBB4  59B3               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4832  00EBB6  A0D8               	btfss	status,0,c
  4833  00EBB8  0012               	return	
  4834                           
  4835                           ; BSR set to: 2
  4836                           ;ui.c: 399: {
  4837                           ;ui.c: 401: system_encoder_disable();
  4838  00EBBA  EC9D  F097         	call	_system_encoder_disable	;wreg free
  4839                           
  4840                           ;ui.c: 403: LATDbits.LD0 = 1;
  4841  00EBBE  808C               	bsf	3980,0,c	;volatile
  4842                           
  4843                           ;ui.c: 406: system_ui_inactive_count = 0;
  4844  00EBC0  0E00               	movlw	0
  4845  00EBC2  0102               	movlb	2	; () banked
  4846  00EBC4  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4847  00EBC6  0E00               	movlw	0
  4848  00EBC8  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4849                           
  4850                           ; BSR set to: 2
  4851                           ;ui.c: 407: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4852  00EBCA  0E00               	movlw	0
  4853  00EBCC  0101               	movlb	1	; () banked
  4854  00EBCE  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;ui.c: 408: }
  4858                           ;ui.c: 409: }
  4859  00EBD0  0012               	return	
  4860  00EBD2                     l1853:
  4861                           
  4862                           ;ui.c: 410: else
  4863                           ;ui.c: 411: {
  4864                           ;ui.c: 412: system_ui_inactive_count = 0;
  4865                           
  4866                           ; BSR set to: 1
  4867  00EBD2  0E00               	movlw	0
  4868  00EBD4  0102               	movlb	2	; () banked
  4869  00EBD6  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4870  00EBD8  0E00               	movlw	0
  4871  00EBDA  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  4872                           
  4873                           ; BSR set to: 2
  4874                           ;ui.c: 413: _ui_encoder();
  4875  00EBDC  EC5C  F053         	call	__ui_encoder	;wreg free
  4876                           
  4877                           ;ui.c: 416: }
  4878                           
  4879                           ;ui.c: 414: }
  4880                           ;ui.c: 415: break;
  4881  00EBE0  0012               	return	
  4882  00EBE2                     l1843:
  4883  00EBE2  0101               	movlb	1	; () banked
  4884  00EBE4  51EF               	movf	_userInterfaceStatus& (0+255),w,b
  4885                           
  4886                           ; Switch size 1, requested type "space"
  4887                           ; Number of cases is 6, Range of values is 0 to 5
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           19    10 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  00EBE6  0A00               	xorlw	0	; case 0
  4893  00EBE8  B4D8               	btfsc	status,2,c
  4894  00EBEA  D790               	goto	l1844
  4895  00EBEC  0A01               	xorlw	1	; case 1
  4896  00EBEE  B4D8               	btfsc	status,2,c
  4897  00EBF0  D79C               	goto	l1847
  4898  00EBF2  0A03               	xorlw	3	; case 2
  4899  00EBF4  B4D8               	btfsc	status,2,c
  4900  00EBF6  D7A3               	goto	l1848
  4901  00EBF8  0A01               	xorlw	1	; case 3
  4902  00EBFA  B4D8               	btfsc	status,2,c
  4903  00EBFC  D7AB               	goto	l1849
  4904  00EBFE  0A07               	xorlw	7	; case 4
  4905  00EC00  B4D8               	btfsc	status,2,c
  4906  00EC02  D7BC               	goto	l1851
  4907  00EC04  0A01               	xorlw	1	; case 5
  4908  00EC06  A4D8               	btfss	status,2,c
  4909  00EC08  0012               	return	
  4910  00EC0A  D7C8               	goto	l1852
  4911  00EC0C                     __end_of_ui_run:
  4912                           	opt stack 0
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           postinc0	equ	0xFEE
  4918                           wreg	equ	0xFE8
  4919                           postdec1	equ	0xFE5
  4920                           fsr1h	equ	0xFE2
  4921                           fsr1l	equ	0xFE1
  4922                           postinc2	equ	0xFDE
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function _system_encoder_enable *****************
  4929 ;; Defined at:
  4930 ;;		line 198 in file "os.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;Total ram usage:        0 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:   10
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_ui_run
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text2
  4959  012DD6                     __ptext2:
  4960                           	opt stack 0
  4961  012DD6                     _system_encoder_enable:
  4962                           	opt stack 19
  4963                           
  4964                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  4965                           
  4966                           ;incstack = 0
  4967  012DD6  92F0               	bcf	intcon3,1,c	;volatile
  4968                           
  4969                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  4970  012DD8  94F0               	bcf	intcon3,2,c	;volatile
  4971                           
  4972                           ;os.c: 205: os.encoderCount = 0;
  4973  012DDA  0E00               	movlw	0
  4974  012DDC  0102               	movlb	2	; () banked
  4975  012DDE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  4976                           
  4977                           ; BSR set to: 2
  4978                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  4979  012DE0  88F0               	bsf	intcon3,4,c	;volatile
  4980                           
  4981                           ; BSR set to: 2
  4982                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  4983  012DE2  8AF0               	bsf	intcon3,5,c	;volatile
  4984                           
  4985                           ; BSR set to: 2
  4986  012DE4  0012               	return		;funcret
  4987  012DE6                     __end_of_system_encoder_enable:
  4988                           	opt stack 0
  4989                           tblptru	equ	0xFF8
  4990                           tblptrh	equ	0xFF7
  4991                           tblptrl	equ	0xFF6
  4992                           tablat	equ	0xFF5
  4993                           intcon3	equ	0xFF0
  4994                           postinc0	equ	0xFEE
  4995                           wreg	equ	0xFE8
  4996                           postdec1	equ	0xFE5
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           postinc2	equ	0xFDE
  5000                           postdec2	equ	0xFDD
  5001                           fsr2h	equ	0xFDA
  5002                           fsr2l	equ	0xFD9
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function _system_encoder_disable *****************
  5006 ;; Defined at:
  5007 ;;		line 191 in file "os.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		None
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:   10
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_ui_run
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text3
  5036  012F3A                     __ptext3:
  5037                           	opt stack 0
  5038  012F3A                     _system_encoder_disable:
  5039                           	opt stack 19
  5040                           
  5041                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5042                           
  5043                           ; BSR set to: 2
  5044                           ;incstack = 0
  5045  012F3A  98F0               	bcf	intcon3,4,c	;volatile
  5046                           
  5047                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5048  012F3C  9AF0               	bcf	intcon3,5,c	;volatile
  5049  012F3E  0012               	return		;funcret
  5050  012F40                     __end_of_system_encoder_disable:
  5051                           	opt stack 0
  5052                           tblptru	equ	0xFF8
  5053                           tblptrh	equ	0xFF7
  5054                           tblptrl	equ	0xFF6
  5055                           tablat	equ	0xFF5
  5056                           intcon3	equ	0xFF0
  5057                           postinc0	equ	0xFEE
  5058                           wreg	equ	0xFE8
  5059                           postdec1	equ	0xFE5
  5060                           fsr1h	equ	0xFE2
  5061                           fsr1l	equ	0xFE1
  5062                           postinc2	equ	0xFDE
  5063                           postdec2	equ	0xFDD
  5064                           fsr2h	equ	0xFDA
  5065                           fsr2l	equ	0xFD9
  5066                           status	equ	0xFD8
  5067                           
  5068 ;; *************** function _i2c_display_send_init_sequence *****************
  5069 ;; Defined at:
  5070 ;;		line 248 in file "i2c.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;Total ram usage:        9 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:   12
  5091 ;; This function calls:
  5092 ;;		__i2c_write
  5093 ;;		_i2c_set_frequency
  5094 ;; This function is called by:
  5095 ;;		_ui_run
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text4
  5100  01269A                     __ptext4:
  5101                           	opt stack 0
  5102  01269A                     _i2c_display_send_init_sequence:
  5103                           	opt stack 17
  5104                           
  5105                           ;i2c.c: 250: uint8_t init_sequence[9] = {
  5106                           ;i2c.c: 251: 0x3A,
  5107                           ;i2c.c: 253: 0b00011110,
  5108                           ;i2c.c: 254: 0x39,
  5109                           ;i2c.c: 256: 0b00001100,
  5110                           ;i2c.c: 257: 0x74,
  5111                           ;i2c.c: 258: 0b1011100,
  5112                           ;i2c.c: 259: 0x6d,
  5113                           ;i2c.c: 260: 0x0c,
  5114                           ;i2c.c: 261: 0x01
  5115                           ;i2c.c: 262: };
  5116                           
  5117                           ;incstack = 0
  5118  01269A  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F8360
  5119  01269E  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5120  0126A2  0E08               	movlw	8
  5121  0126A4                     u12711:
  5122  0126A4  CFDB FFE3          	movff	plusw2,plusw1
  5123  0126A8  06E8               	decf	wreg,f,c
  5124  0126AA  E2FC               	bc	u12711
  5125                           
  5126                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5127  0126AC  0E00               	movlw	0
  5128  0126AE  ECB0  F088         	call	_i2c_set_frequency
  5129                           
  5130                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5131  0126B2  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5132  0126B4  0100               	movlb	0	; () banked
  5133  0126B6  6F65               	movwf	__i2c_write@data& (0+255),b
  5134  0126B8  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5135  0126BA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5136  0126BC  0E09               	movlw	9
  5137  0126BE  6F67               	movwf	__i2c_write@length& (0+255),b
  5138  0126C0  0E78               	movlw	120
  5139  0126C2  EC55  F08F         	call	__i2c_write
  5140  0126C6  0012               	return		;funcret
  5141  0126C8                     __end_of_i2c_display_send_init_sequence:
  5142                           	opt stack 0
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           intcon3	equ	0xFF0
  5148                           postinc0	equ	0xFEE
  5149                           wreg	equ	0xFE8
  5150                           postdec1	equ	0xFE5
  5151                           plusw1	equ	0xFE3
  5152                           fsr1h	equ	0xFE2
  5153                           fsr1l	equ	0xFE1
  5154                           postinc2	equ	0xFDE
  5155                           postdec2	equ	0xFDD
  5156                           plusw2	equ	0xFDB
  5157                           fsr2h	equ	0xFDA
  5158                           fsr2l	equ	0xFD9
  5159                           status	equ	0xFD8
  5160                           
  5161 ;; *************** function _i2c_digipot_reset_on *****************
  5162 ;; Defined at:
  5163 ;;		line 425 in file "i2c.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:   12
  5184 ;; This function calls:
  5185 ;;		__i2c_write
  5186 ;;		_i2c_set_frequency
  5187 ;; This function is called by:
  5188 ;;		_ui_run
  5189 ;;		_i2c_display_init
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text5
  5194  012906                     __ptext5:
  5195                           	opt stack 0
  5196  012906                     _i2c_digipot_reset_on:
  5197                           	opt stack 17
  5198                           
  5199                           ;i2c.c: 427: uint8_t data_array[2];
  5200                           ;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5201                           
  5202                           ;incstack = 0
  5203  012906  0E10               	movlw	16
  5204  012908  0100               	movlb	0	; () banked
  5205  01290A  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5206                           
  5207                           ;i2c.c: 430: data_array[1] = 0x00;
  5208  01290C  0E00               	movlw	0
  5209  01290E  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5213  012910  0E02               	movlw	2
  5214  012912  ECB0  F088         	call	_i2c_set_frequency
  5215                           
  5216                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5217  012916  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5218  012918  0100               	movlb	0	; () banked
  5219  01291A  6F65               	movwf	__i2c_write@data& (0+255),b
  5220  01291C  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5221  01291E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5222  012920  0E02               	movlw	2
  5223  012922  6F67               	movwf	__i2c_write@length& (0+255),b
  5224  012924  0E5C               	movlw	92
  5225  012926  EC55  F08F         	call	__i2c_write
  5226  01292A  0012               	return		;funcret
  5227  01292C                     __end_of_i2c_digipot_reset_on:
  5228                           	opt stack 0
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           intcon3	equ	0xFF0
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           postdec1	equ	0xFE5
  5237                           plusw1	equ	0xFE3
  5238                           fsr1h	equ	0xFE2
  5239                           fsr1l	equ	0xFE1
  5240                           postinc2	equ	0xFDE
  5241                           postdec2	equ	0xFDD
  5242                           plusw2	equ	0xFDB
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _i2c_digipot_reset_off *****************
  5248 ;; Defined at:
  5249 ;;		line 438 in file "i2c.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:   12
  5270 ;; This function calls:
  5271 ;;		__i2c_write
  5272 ;;		_i2c_set_frequency
  5273 ;; This function is called by:
  5274 ;;		_ui_run
  5275 ;;		_i2c_display_init
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text6
  5280  01292C                     __ptext6:
  5281                           	opt stack 0
  5282  01292C                     _i2c_digipot_reset_off:
  5283                           	opt stack 17
  5284                           
  5285                           ;i2c.c: 440: uint8_t data_array[2];
  5286                           ;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5287                           
  5288                           ;incstack = 0
  5289  01292C  0E10               	movlw	16
  5290  01292E  0100               	movlb	0	; () banked
  5291  012930  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5292                           
  5293                           ;i2c.c: 442: data_array[1] = 0x80;
  5294  012932  0E80               	movlw	128
  5295  012934  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5299  012936  0E02               	movlw	2
  5300  012938  ECB0  F088         	call	_i2c_set_frequency
  5301                           
  5302                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5303  01293C  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5304  01293E  0100               	movlb	0	; () banked
  5305  012940  6F65               	movwf	__i2c_write@data& (0+255),b
  5306  012942  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5307  012944  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5308  012946  0E02               	movlw	2
  5309  012948  6F67               	movwf	__i2c_write@length& (0+255),b
  5310  01294A  0E5C               	movlw	92
  5311  01294C  EC55  F08F         	call	__i2c_write
  5312  012950  0012               	return		;funcret
  5313  012952                     __end_of_i2c_digipot_reset_off:
  5314                           	opt stack 0
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           intcon3	equ	0xFF0
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           postdec1	equ	0xFE5
  5323                           plusw1	equ	0xFE3
  5324                           fsr1h	equ	0xFE2
  5325                           fsr1l	equ	0xFE1
  5326                           postinc2	equ	0xFDE
  5327                           postdec2	equ	0xFDD
  5328                           plusw2	equ	0xFDB
  5329                           fsr2h	equ	0xFDA
  5330                           fsr2l	equ	0xFD9
  5331                           status	equ	0xFD8
  5332                           
  5333 ;; *************** function _i2c_digipot_backlight *****************
  5334 ;; Defined at:
  5335 ;;		line 450 in file "i2c.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  level           1    wreg     unsigned char 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  level           1   10[BANK0 ] unsigned char 
  5340 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5351 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;Total ram usage:        3 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:   12
  5357 ;; This function calls:
  5358 ;;		__i2c_write
  5359 ;;		_i2c_set_frequency
  5360 ;; This function is called by:
  5361 ;;		_ui_run
  5362 ;;		_i2c_display_init
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text7
  5367  0127AE                     __ptext7:
  5368                           	opt stack 0
  5369  0127AE                     _i2c_digipot_backlight:
  5370                           	opt stack 17
  5371                           
  5372                           ;incstack = 0
  5373                           ;i2c_digipot_backlight@level stored from wreg
  5374  0127AE  0100               	movlb	0	; () banked
  5375  0127B0  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5376                           
  5377                           ;i2c.c: 452: uint8_t data_array[2];
  5378                           ;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5379  0127B2  0E00               	movlw	0
  5380  0127B4  0100               	movlb	0	; () banked
  5381  0127B6  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;i2c.c: 454: data_array[1] = level>>1;
  5385  0127B8  90D8               	bcf	status,0,c
  5386  0127BA  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5387  0127BC  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5391  0127BE  0E02               	movlw	2
  5392  0127C0  ECB0  F088         	call	_i2c_set_frequency
  5393                           
  5394                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5395  0127C4  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5396  0127C6  0100               	movlb	0	; () banked
  5397  0127C8  6F65               	movwf	__i2c_write@data& (0+255),b
  5398  0127CA  0E00               	movlw	high i2c_digipot_backlight@data_array
  5399  0127CC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5400  0127CE  0E02               	movlw	2
  5401  0127D0  6F67               	movwf	__i2c_write@length& (0+255),b
  5402  0127D2  0E5C               	movlw	92
  5403  0127D4  EC55  F08F         	call	__i2c_write
  5404  0127D8  0012               	return		;funcret
  5405  0127DA                     __end_of_i2c_digipot_backlight:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           intcon3	equ	0xFF0
  5412                           postinc0	equ	0xFEE
  5413                           wreg	equ	0xFE8
  5414                           postdec1	equ	0xFE5
  5415                           plusw1	equ	0xFE3
  5416                           fsr1h	equ	0xFE2
  5417                           fsr1l	equ	0xFE1
  5418                           postinc2	equ	0xFDE
  5419                           postdec2	equ	0xFDD
  5420                           plusw2	equ	0xFDB
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function __ui_encoder *****************
  5426 ;; Defined at:
  5427 ;;		line 17 in file "ui.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:   14
  5448 ;; This function calls:
  5449 ;;		_rtcc_correct_day
  5450 ;;		_rtcc_decrement_day
  5451 ;;		_rtcc_decrement_hours
  5452 ;;		_rtcc_decrement_minutes
  5453 ;;		_rtcc_decrement_month
  5454 ;;		_rtcc_decrement_seconds
  5455 ;;		_rtcc_decrement_year
  5456 ;;		_rtcc_increment_day
  5457 ;;		_rtcc_increment_hours
  5458 ;;		_rtcc_increment_minutes
  5459 ;;		_rtcc_increment_month
  5460 ;;		_rtcc_increment_seconds
  5461 ;;		_rtcc_increment_year
  5462 ;;		_rtcc_write_eeprom
  5463 ;;		_system_output_off
  5464 ;;		_system_output_on
  5465 ;;		_system_output_toggle
  5466 ;; This function is called by:
  5467 ;;		_ui_run
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text8
  5472  00A6B8                     __ptext8:
  5473                           	opt stack 0
  5474  00A6B8                     __ui_encoder:
  5475                           	opt stack 15
  5476                           
  5477                           ;ui.c: 19: switch(os.display_mode)
  5478                           
  5479                           ;incstack = 0
  5480  00A6B8  D193               	goto	l1744
  5481  00A6BA                     
  5482                           ;ui.c: 22: if(os.encoderCount>0)
  5483  00A6BA  0102               	movlb	2	; () banked
  5484  00A6BC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5485  00A6BE  0A80               	xorlw	128
  5486  00A6C0  0F7F               	addlw	-129
  5487  00A6C2  A0D8               	btfss	status,0,c
  5488  00A6C4  D002               	goto	l1746
  5489                           
  5490                           ; BSR set to: 2
  5491                           ;ui.c: 23: {
  5492                           ;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5493  00A6C6  0E10               	movlw	16
  5494  00A6C8  D003               	goto	L1
  5495  00A6CA                     l1746:
  5496                           
  5497                           ; BSR set to: 2
  5498                           ;ui.c: 26: else if(os.encoderCount<0)
  5499                           
  5500                           ; BSR set to: 2
  5501  00A6CA  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5502  00A6CC  D002               	goto	l1748
  5503                           
  5504                           ; BSR set to: 2
  5505                           ;ui.c: 27: {
  5506                           ;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5507  00A6CE  0E60               	movlw	96
  5508  00A6D0                     L1:
  5509  00A6D0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5510  00A6D2                     l1748:
  5511                           
  5512                           ; BSR set to: 2
  5513                           ;ui.c: 29: }
  5514                           ;ui.c: 30: if(os.buttonCount)
  5515                           
  5516                           ; BSR set to: 2
  5517  00A6D2  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5518                           
  5519                           ; BSR set to: 2
  5520                           ;ui.c: 33: }
  5521                           ;ui.c: 34: os.encoderCount = 0;
  5522                           
  5523                           ; BSR set to: 2
  5524                           
  5525                           ;ui.c: 31: {
  5526                           ;ui.c: 32: ;
  5527  00A6D4  0E00               	movlw	0
  5528  00A6D6  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5529                           
  5530                           ;ui.c: 35: os.buttonCount = 0;
  5531  00A6D8  0E00               	movlw	0
  5532  00A6DA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5533                           
  5534                           ;ui.c: 36: break;
  5535  00A6DC  0012               	return	
  5536  00A6DE                     
  5537                           ; BSR set to: 2
  5538                           ;ui.c: 39: if(os.encoderCount>0)
  5539                           
  5540                           ; BSR set to: 2
  5541  00A6DE  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5542  00A6E0  0A80               	xorlw	128
  5543  00A6E2  0F7F               	addlw	-129
  5544  00A6E4  A0D8               	btfss	status,0,c
  5545  00A6E6  D002               	goto	l1752
  5546                           
  5547                           ; BSR set to: 2
  5548                           ;ui.c: 40: {
  5549                           ;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5550  00A6E8  0E20               	movlw	32
  5551  00A6EA  D003               	goto	L2
  5552  00A6EC                     l1752:
  5553                           
  5554                           ; BSR set to: 2
  5555                           ;ui.c: 43: else if(os.encoderCount<0)
  5556                           
  5557                           ; BSR set to: 2
  5558  00A6EC  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5559  00A6EE  D002               	goto	l1754
  5560                           
  5561                           ; BSR set to: 2
  5562                           ;ui.c: 44: {
  5563                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5564  00A6F0  0E00               	movlw	0
  5565  00A6F2                     L2:
  5566  00A6F2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5567  00A6F4                     l1754:
  5568                           
  5569                           ; BSR set to: 2
  5570                           ;ui.c: 46: }
  5571                           ;ui.c: 47: if(os.buttonCount)
  5572                           
  5573                           ; BSR set to: 2
  5574  00A6F4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5575  00A6F6  B4D8               	btfsc	status,2,c
  5576  00A6F8  D002               	goto	l1755
  5577                           
  5578                           ; BSR set to: 2
  5579                           ;ui.c: 48: {
  5580                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5581  00A6FA  0E11               	movlw	17
  5582  00A6FC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5583  00A6FE                     l1755:
  5584                           
  5585                           ; BSR set to: 2
  5586                           ;ui.c: 50: }
  5587                           ;ui.c: 51: os.encoderCount = 0;
  5588  00A6FE  0E00               	movlw	0
  5589  00A700  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5590                           
  5591                           ;ui.c: 52: os.buttonCount = 0;
  5592  00A702  0E00               	movlw	0
  5593  00A704  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5594                           
  5595                           ;ui.c: 53: break;
  5596  00A706  0012               	return	
  5597  00A708                     
  5598                           ; BSR set to: 2
  5599                           ;ui.c: 56: if(os.encoderCount>0)
  5600                           
  5601                           ; BSR set to: 2
  5602  00A708  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5603  00A70A  0A80               	xorlw	128
  5604  00A70C  0F7F               	addlw	-129
  5605  00A70E  A0D8               	btfss	status,0,c
  5606  00A710  D003               	goto	l1757
  5607                           
  5608                           ; BSR set to: 2
  5609                           ;ui.c: 57: {
  5610                           ;ui.c: 58: rtcc_increment_year();
  5611  00A712  ECF4  F094         	call	_rtcc_increment_year	;wreg free
  5612                           
  5613                           ;ui.c: 59: }
  5614  00A716  D004               	goto	l1759
  5615  00A718                     l1757:
  5616                           
  5617                           ;ui.c: 60: else if(os.encoderCount<0)
  5618  00A718  0102               	movlb	2	; () banked
  5619  00A71A  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5620                           
  5621                           ; BSR set to: 2
  5622                           ;ui.c: 61: {
  5623                           ;ui.c: 62: rtcc_decrement_year();
  5624  00A71C  EC49  F095         	call	_rtcc_decrement_year	;wreg free
  5625  00A720                     l1759:
  5626                           
  5627                           ;ui.c: 63: }
  5628                           ;ui.c: 64: if(os.buttonCount)
  5629  00A720  0102               	movlb	2	; () banked
  5630  00A722  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5631  00A724  B4D8               	btfsc	status,2,c
  5632  00A726  D005               	goto	l1760
  5633                           
  5634                           ; BSR set to: 2
  5635                           ;ui.c: 65: {
  5636                           ;ui.c: 66: rtcc_correct_day();
  5637  00A728  ECC0  F095         	call	_rtcc_correct_day	;wreg free
  5638                           
  5639                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5640  00A72C  0E12               	movlw	18
  5641  00A72E  0102               	movlb	2	; () banked
  5642  00A730  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5643  00A732                     l1760:
  5644                           
  5645                           ; BSR set to: 2
  5646                           ;ui.c: 68: }
  5647                           ;ui.c: 69: os.encoderCount = 0;
  5648                           
  5649                           ; BSR set to: 2
  5650  00A732  0E00               	movlw	0
  5651  00A734  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5652                           
  5653                           ; BSR set to: 2
  5654                           ;ui.c: 70: os.buttonCount = 0;
  5655  00A736  0E00               	movlw	0
  5656  00A738  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5657                           
  5658                           ;ui.c: 71: break;
  5659  00A73A  0012               	return	
  5660  00A73C                     
  5661                           ; BSR set to: 2
  5662                           ;ui.c: 74: if(os.encoderCount>0)
  5663                           
  5664                           ; BSR set to: 2
  5665  00A73C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5666  00A73E  0A80               	xorlw	128
  5667  00A740  0F7F               	addlw	-129
  5668  00A742  A0D8               	btfss	status,0,c
  5669  00A744  D003               	goto	l1762
  5670                           
  5671                           ; BSR set to: 2
  5672                           ;ui.c: 75: {
  5673                           ;ui.c: 76: rtcc_increment_month();
  5674  00A746  EC16  F095         	call	_rtcc_increment_month	;wreg free
  5675                           
  5676                           ;ui.c: 77: }
  5677  00A74A  D004               	goto	l1764
  5678  00A74C                     l1762:
  5679                           
  5680                           ;ui.c: 78: else if(os.encoderCount<0)
  5681  00A74C  0102               	movlb	2	; () banked
  5682  00A74E  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5683                           
  5684                           ; BSR set to: 2
  5685                           ;ui.c: 79: {
  5686                           ;ui.c: 80: rtcc_decrement_month();
  5687  00A750  EC6B  F095         	call	_rtcc_decrement_month	;wreg free
  5688  00A754                     l1764:
  5689                           
  5690                           ;ui.c: 81: }
  5691                           ;ui.c: 82: if(os.buttonCount)
  5692  00A754  0102               	movlb	2	; () banked
  5693  00A756  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5694  00A758  B4D8               	btfsc	status,2,c
  5695  00A75A  D005               	goto	l1765
  5696                           
  5697                           ; BSR set to: 2
  5698                           ;ui.c: 83: {
  5699                           ;ui.c: 84: rtcc_correct_day();
  5700  00A75C  ECC0  F095         	call	_rtcc_correct_day	;wreg free
  5701                           
  5702                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5703  00A760  0E13               	movlw	19
  5704  00A762  0102               	movlb	2	; () banked
  5705  00A764  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5706  00A766                     l1765:
  5707                           
  5708                           ; BSR set to: 2
  5709                           ;ui.c: 86: }
  5710                           ;ui.c: 87: os.encoderCount = 0;
  5711                           
  5712                           ; BSR set to: 2
  5713  00A766  0E00               	movlw	0
  5714  00A768  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5715                           
  5716                           ; BSR set to: 2
  5717                           ;ui.c: 88: os.buttonCount = 0;
  5718  00A76A  0E00               	movlw	0
  5719  00A76C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5720                           
  5721                           ;ui.c: 89: break;
  5722  00A76E  0012               	return	
  5723  00A770                     
  5724                           ; BSR set to: 2
  5725                           ;ui.c: 92: if(os.encoderCount>0)
  5726                           
  5727                           ; BSR set to: 2
  5728  00A770  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5729  00A772  0A80               	xorlw	128
  5730  00A774  0F7F               	addlw	-129
  5731  00A776  A0D8               	btfss	status,0,c
  5732  00A778  D003               	goto	l1767
  5733                           
  5734                           ; BSR set to: 2
  5735                           ;ui.c: 93: {
  5736                           ;ui.c: 94: rtcc_increment_day();
  5737  00A77A  ECBC  F094         	call	_rtcc_increment_day	;wreg free
  5738                           
  5739                           ;ui.c: 95: }
  5740  00A77E  D004               	goto	l1769
  5741  00A780                     l1767:
  5742                           
  5743                           ;ui.c: 96: else if(os.encoderCount<0)
  5744  00A780  0102               	movlb	2	; () banked
  5745  00A782  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5746                           
  5747                           ; BSR set to: 2
  5748                           ;ui.c: 97: {
  5749                           ;ui.c: 98: rtcc_decrement_day();
  5750  00A784  ECCF  F094         	call	_rtcc_decrement_day	;wreg free
  5751  00A788                     l1769:
  5752                           
  5753                           ;ui.c: 99: }
  5754                           ;ui.c: 100: if(os.buttonCount)
  5755  00A788  0102               	movlb	2	; () banked
  5756  00A78A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5757  00A78C  B4D8               	btfsc	status,2,c
  5758  00A78E  D002               	goto	l1770
  5759                           
  5760                           ; BSR set to: 2
  5761                           ;ui.c: 101: {
  5762                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5763  00A790  0E14               	movlw	20
  5764  00A792  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5765  00A794                     l1770:
  5766                           
  5767                           ; BSR set to: 2
  5768                           ;ui.c: 103: }
  5769                           ;ui.c: 104: os.encoderCount = 0;
  5770  00A794  0E00               	movlw	0
  5771  00A796  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5772                           
  5773                           ;ui.c: 105: os.buttonCount = 0;
  5774  00A798  0E00               	movlw	0
  5775  00A79A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5776                           
  5777                           ;ui.c: 106: break;
  5778  00A79C  0012               	return	
  5779  00A79E                     
  5780                           ; BSR set to: 2
  5781                           ;ui.c: 109: if(os.encoderCount>0)
  5782                           
  5783                           ; BSR set to: 2
  5784  00A79E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5785  00A7A0  0A80               	xorlw	128
  5786  00A7A2  0F7F               	addlw	-129
  5787  00A7A4  A0D8               	btfss	status,0,c
  5788  00A7A6  D003               	goto	l1772
  5789                           
  5790                           ; BSR set to: 2
  5791                           ;ui.c: 110: {
  5792                           ;ui.c: 111: rtcc_increment_hours();
  5793  00A7A8  EC38  F095         	call	_rtcc_increment_hours	;wreg free
  5794                           
  5795                           ;ui.c: 112: }
  5796  00A7AC  D004               	goto	l1774
  5797  00A7AE                     l1772:
  5798                           
  5799                           ;ui.c: 113: else if(os.encoderCount<0)
  5800  00A7AE  0102               	movlb	2	; () banked
  5801  00A7B0  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5802                           
  5803                           ; BSR set to: 2
  5804                           ;ui.c: 114: {
  5805                           ;ui.c: 115: rtcc_decrement_hours();
  5806  00A7B2  EC8D  F095         	call	_rtcc_decrement_hours	;wreg free
  5807  00A7B6                     l1774:
  5808                           
  5809                           ;ui.c: 116: }
  5810                           ;ui.c: 117: if(os.buttonCount)
  5811  00A7B6  0102               	movlb	2	; () banked
  5812  00A7B8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5813  00A7BA  B4D8               	btfsc	status,2,c
  5814  00A7BC  D002               	goto	l1775
  5815                           
  5816                           ; BSR set to: 2
  5817                           ;ui.c: 118: {
  5818                           ;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5819  00A7BE  0E15               	movlw	21
  5820  00A7C0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5821  00A7C2                     l1775:
  5822                           
  5823                           ; BSR set to: 2
  5824                           ;ui.c: 120: }
  5825                           ;ui.c: 121: os.encoderCount = 0;
  5826  00A7C2  0E00               	movlw	0
  5827  00A7C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5828                           
  5829                           ;ui.c: 122: os.buttonCount = 0;
  5830  00A7C6  0E00               	movlw	0
  5831  00A7C8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5832                           
  5833                           ;ui.c: 123: break;
  5834  00A7CA  0012               	return	
  5835  00A7CC                     
  5836                           ; BSR set to: 2
  5837                           ;ui.c: 126: if(os.encoderCount>0)
  5838                           
  5839                           ; BSR set to: 2
  5840  00A7CC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5841  00A7CE  0A80               	xorlw	128
  5842  00A7D0  0F7F               	addlw	-129
  5843  00A7D2  A0D8               	btfss	status,0,c
  5844  00A7D4  D003               	goto	l1777
  5845                           
  5846                           ; BSR set to: 2
  5847                           ;ui.c: 127: {
  5848                           ;ui.c: 128: rtcc_increment_minutes();
  5849  00A7D6  EC27  F095         	call	_rtcc_increment_minutes	;wreg free
  5850                           
  5851                           ;ui.c: 129: }
  5852  00A7DA  D004               	goto	l1779
  5853  00A7DC                     l1777:
  5854                           
  5855                           ;ui.c: 130: else if(os.encoderCount<0)
  5856  00A7DC  0102               	movlb	2	; () banked
  5857  00A7DE  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5858                           
  5859                           ; BSR set to: 2
  5860                           ;ui.c: 131: {
  5861                           ;ui.c: 132: rtcc_decrement_minutes();
  5862  00A7E0  EC7C  F095         	call	_rtcc_decrement_minutes	;wreg free
  5863  00A7E4                     l1779:
  5864                           
  5865                           ;ui.c: 133: }
  5866                           ;ui.c: 134: if(os.buttonCount)
  5867  00A7E4  0102               	movlb	2	; () banked
  5868  00A7E6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5869  00A7E8  B4D8               	btfsc	status,2,c
  5870  00A7EA  D002               	goto	l1780
  5871                           
  5872                           ; BSR set to: 2
  5873                           ;ui.c: 135: {
  5874                           ;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5875  00A7EC  0E16               	movlw	22
  5876  00A7EE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5877  00A7F0                     l1780:
  5878                           
  5879                           ; BSR set to: 2
  5880                           ;ui.c: 137: }
  5881                           ;ui.c: 138: os.encoderCount = 0;
  5882  00A7F0  0E00               	movlw	0
  5883  00A7F2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5884                           
  5885                           ;ui.c: 139: os.buttonCount = 0;
  5886  00A7F4  0E00               	movlw	0
  5887  00A7F6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5888                           
  5889                           ;ui.c: 140: break;
  5890  00A7F8  0012               	return	
  5891  00A7FA                     
  5892                           ; BSR set to: 2
  5893                           ;ui.c: 143: if(os.encoderCount>0)
  5894                           
  5895                           ; BSR set to: 2
  5896  00A7FA  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5897  00A7FC  0A80               	xorlw	128
  5898  00A7FE  0F7F               	addlw	-129
  5899  00A800  A0D8               	btfss	status,0,c
  5900  00A802  D003               	goto	l1782
  5901                           
  5902                           ; BSR set to: 2
  5903                           ;ui.c: 144: {
  5904                           ;ui.c: 145: rtcc_increment_seconds();
  5905  00A804  EC05  F095         	call	_rtcc_increment_seconds	;wreg free
  5906                           
  5907                           ;ui.c: 146: }
  5908  00A808  D004               	goto	l1784
  5909  00A80A                     l1782:
  5910                           
  5911                           ;ui.c: 147: else if(os.encoderCount<0)
  5912  00A80A  0102               	movlb	2	; () banked
  5913  00A80C  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5914                           
  5915                           ; BSR set to: 2
  5916                           ;ui.c: 148: {
  5917                           ;ui.c: 149: rtcc_decrement_seconds();
  5918  00A80E  EC5A  F095         	call	_rtcc_decrement_seconds	;wreg free
  5919  00A812                     l1784:
  5920                           
  5921                           ;ui.c: 150: }
  5922                           ;ui.c: 151: if(os.buttonCount)
  5923  00A812  0102               	movlb	2	; () banked
  5924  00A814  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5925  00A816  B4D8               	btfsc	status,2,c
  5926  00A818  D004               	goto	l1785
  5927                           
  5928                           ; BSR set to: 2
  5929                           ;ui.c: 152: {
  5930                           ;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5931  00A81A  0E10               	movlw	16
  5932  00A81C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5933                           
  5934                           ; BSR set to: 2
  5935                           ;ui.c: 154: rtcc_write_eeprom();
  5936  00A81E  EC66  F090         	call	_rtcc_write_eeprom	;wreg free
  5937  00A822                     l1785:
  5938                           
  5939                           ;ui.c: 155: }
  5940                           ;ui.c: 156: os.encoderCount = 0;
  5941  00A822  0E00               	movlw	0
  5942  00A824  0102               	movlb	2	; () banked
  5943  00A826  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5944                           
  5945                           ; BSR set to: 2
  5946                           ;ui.c: 157: os.buttonCount = 0;
  5947  00A828  0E00               	movlw	0
  5948  00A82A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5949                           
  5950                           ;ui.c: 158: break;
  5951  00A82C  0012               	return	
  5952  00A82E                     
  5953                           ; BSR set to: 2
  5954                           ;ui.c: 161: if(os.encoderCount>0)
  5955                           
  5956                           ; BSR set to: 2
  5957  00A82E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5958  00A830  0A80               	xorlw	128
  5959  00A832  0F7F               	addlw	-129
  5960  00A834  A0D8               	btfss	status,0,c
  5961  00A836  D002               	goto	l1787
  5962                           
  5963                           ; BSR set to: 2
  5964                           ;ui.c: 162: {
  5965                           ;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  5966  00A838  0E30               	movlw	48
  5967  00A83A  D003               	goto	L3
  5968  00A83C                     l1787:
  5969                           
  5970                           ; BSR set to: 2
  5971                           ;ui.c: 165: else if(os.encoderCount<0)
  5972                           
  5973                           ; BSR set to: 2
  5974  00A83C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5975  00A83E  D002               	goto	l1789
  5976                           
  5977                           ; BSR set to: 2
  5978                           ;ui.c: 166: {
  5979                           ;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5980  00A840  0E10               	movlw	16
  5981  00A842                     L3:
  5982  00A842  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5983  00A844                     l1789:
  5984                           
  5985                           ; BSR set to: 2
  5986                           ;ui.c: 168: }
  5987                           ;ui.c: 169: if(os.buttonCount)
  5988                           
  5989                           ; BSR set to: 2
  5990  00A844  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5991  00A846  A4D8               	btfss	status,2,c
  5992                           
  5993                           ; BSR set to: 2
  5994                           ;ui.c: 170: {
  5995                           ;ui.c: 171: if(os.output_voltage>12000)
  5996  00A848  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  5997  00A84A  D009               	goto	l1791
  5998  00A84C  0EE1               	movlw	225
  5999  00A84E  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  6000  00A850  0E2E               	movlw	46
  6001  00A852  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  6002  00A854  A0D8               	btfss	status,0,c
  6003  00A856  D003               	goto	l1791
  6004                           
  6005                           ; BSR set to: 2
  6006                           ;ui.c: 172: {
  6007                           ;ui.c: 173: system_output_toggle(OUTPUT_USB);
  6008  00A858  0E10               	movlw	16
  6009  00A85A  ECA9  F094         	call	_system_output_toggle
  6010  00A85E                     l1791:
  6011                           
  6012                           ;ui.c: 174: }
  6013                           ;ui.c: 175: }
  6014                           ;ui.c: 176: os.encoderCount = 0;
  6015  00A85E  0E00               	movlw	0
  6016  00A860  0102               	movlb	2	; () banked
  6017  00A862  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 2
  6020                           ;ui.c: 177: os.buttonCount = 0;
  6021  00A864  0E00               	movlw	0
  6022  00A866  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6023                           
  6024                           ;ui.c: 178: break;
  6025  00A868  0012               	return	
  6026  00A86A                     
  6027                           ; BSR set to: 2
  6028                           ;ui.c: 181: if(os.encoderCount>0)
  6029                           
  6030                           ; BSR set to: 2
  6031  00A86A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6032  00A86C  0A80               	xorlw	128
  6033  00A86E  0F7F               	addlw	-129
  6034  00A870  A0D8               	btfss	status,0,c
  6035  00A872  D002               	goto	l1793
  6036                           
  6037                           ; BSR set to: 2
  6038                           ;ui.c: 182: {
  6039                           ;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6040  00A874  0E40               	movlw	64
  6041  00A876  D003               	goto	L4
  6042  00A878                     l1793:
  6043                           
  6044                           ; BSR set to: 2
  6045                           ;ui.c: 185: else if(os.encoderCount<0)
  6046                           
  6047                           ; BSR set to: 2
  6048  00A878  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6049  00A87A  D002               	goto	l1795
  6050                           
  6051                           ; BSR set to: 2
  6052                           ;ui.c: 186: {
  6053                           ;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6054  00A87C  0E20               	movlw	32
  6055  00A87E                     L4:
  6056  00A87E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6057  00A880                     l1795:
  6058                           
  6059                           ; BSR set to: 2
  6060                           ;ui.c: 188: }
  6061                           ;ui.c: 189: if(os.buttonCount)
  6062                           
  6063                           ; BSR set to: 2
  6064  00A880  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6065  00A882  B4D8               	btfsc	status,2,c
  6066  00A884  D002               	goto	l1796
  6067                           
  6068                           ; BSR set to: 2
  6069                           ;ui.c: 190: {
  6070                           ;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  6071  00A886  0E31               	movlw	49
  6072  00A888  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6073  00A88A                     l1796:
  6074                           
  6075                           ; BSR set to: 2
  6076                           ;ui.c: 192: }
  6077                           ;ui.c: 193: os.encoderCount = 0;
  6078  00A88A  0E00               	movlw	0
  6079  00A88C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6080                           
  6081                           ;ui.c: 194: os.buttonCount = 0;
  6082  00A88E  0E00               	movlw	0
  6083  00A890  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6084                           
  6085                           ;ui.c: 195: break;
  6086  00A892  0012               	return	
  6087  00A894                     
  6088                           ; BSR set to: 2
  6089                           ;ui.c: 198: if(os.encoderCount>0)
  6090                           
  6091                           ; BSR set to: 2
  6092  00A894  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6093  00A896  0A80               	xorlw	128
  6094  00A898  0F7F               	addlw	-129
  6095  00A89A  A0D8               	btfss	status,0,c
  6096  00A89C  D006               	goto	l1798
  6097                           
  6098                           ; BSR set to: 2
  6099                           ;ui.c: 199: {
  6100                           ;ui.c: 200: if(os.output_voltage>-1)
  6101  00A89E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6102  00A8A0  D00A               	goto	l1801
  6103                           
  6104                           ; BSR set to: 2
  6105                           ;ui.c: 201: system_output_on(OUTPUT_1);
  6106  00A8A2  0E01               	movlw	1
  6107  00A8A4  ECF5  F08F         	call	_system_output_on
  6108                           
  6109                           ;ui.c: 202: }
  6110  00A8A8  D006               	goto	l1801
  6111  00A8AA                     l1798:
  6112                           
  6113                           ;ui.c: 203: else if(os.encoderCount<0)
  6114  00A8AA  0102               	movlb	2	; () banked
  6115  00A8AC  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6116  00A8AE  D003               	goto	l1801
  6117                           
  6118                           ; BSR set to: 2
  6119                           ;ui.c: 204: {
  6120                           ;ui.c: 205: system_output_off(OUTPUT_1);
  6121  00A8B0  0E01               	movlw	1
  6122  00A8B2  ECDF  F08D         	call	_system_output_off
  6123  00A8B6                     l1801:
  6124                           
  6125                           ;ui.c: 206: }
  6126                           ;ui.c: 207: if(os.buttonCount)
  6127  00A8B6  0102               	movlb	2	; () banked
  6128  00A8B8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6129  00A8BA  B4D8               	btfsc	status,2,c
  6130  00A8BC  D002               	goto	l1802
  6131                           
  6132                           ; BSR set to: 2
  6133                           ;ui.c: 208: {
  6134                           ;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6135  00A8BE  0E32               	movlw	50
  6136  00A8C0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6137  00A8C2                     l1802:
  6138                           
  6139                           ; BSR set to: 2
  6140                           ;ui.c: 210: }
  6141                           ;ui.c: 211: os.encoderCount = 0;
  6142  00A8C2  0E00               	movlw	0
  6143  00A8C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6144                           
  6145                           ;ui.c: 212: os.buttonCount = 0;
  6146  00A8C6  0E00               	movlw	0
  6147  00A8C8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6148                           
  6149                           ;ui.c: 213: break;
  6150  00A8CA  0012               	return	
  6151  00A8CC                     
  6152                           ; BSR set to: 2
  6153                           ;ui.c: 216: if(os.encoderCount>0)
  6154                           
  6155                           ; BSR set to: 2
  6156  00A8CC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6157  00A8CE  0A80               	xorlw	128
  6158  00A8D0  0F7F               	addlw	-129
  6159  00A8D2  A0D8               	btfss	status,0,c
  6160  00A8D4  D006               	goto	l1804
  6161                           
  6162                           ; BSR set to: 2
  6163                           ;ui.c: 217: {
  6164                           ;ui.c: 218: if(os.output_voltage>-1)
  6165  00A8D6  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6166  00A8D8  D00A               	goto	l1807
  6167                           
  6168                           ; BSR set to: 2
  6169                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6170  00A8DA  0E02               	movlw	2
  6171  00A8DC  ECF5  F08F         	call	_system_output_on
  6172                           
  6173                           ;ui.c: 220: }
  6174  00A8E0  D006               	goto	l1807
  6175  00A8E2                     l1804:
  6176                           
  6177                           ;ui.c: 221: else if(os.encoderCount<0)
  6178  00A8E2  0102               	movlb	2	; () banked
  6179  00A8E4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6180  00A8E6  D003               	goto	l1807
  6181                           
  6182                           ; BSR set to: 2
  6183                           ;ui.c: 222: {
  6184                           ;ui.c: 223: system_output_off(OUTPUT_2);
  6185  00A8E8  0E02               	movlw	2
  6186  00A8EA  ECDF  F08D         	call	_system_output_off
  6187  00A8EE                     l1807:
  6188                           
  6189                           ;ui.c: 224: }
  6190                           ;ui.c: 225: if(os.buttonCount)
  6191  00A8EE  0102               	movlb	2	; () banked
  6192  00A8F0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6193  00A8F2  B4D8               	btfsc	status,2,c
  6194  00A8F4  D002               	goto	l1808
  6195                           
  6196                           ; BSR set to: 2
  6197                           ;ui.c: 226: {
  6198                           ;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6199  00A8F6  0E33               	movlw	51
  6200  00A8F8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6201  00A8FA                     l1808:
  6202                           
  6203                           ; BSR set to: 2
  6204                           ;ui.c: 228: }
  6205                           ;ui.c: 229: os.encoderCount = 0;
  6206  00A8FA  0E00               	movlw	0
  6207  00A8FC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6208                           
  6209                           ;ui.c: 230: os.buttonCount = 0;
  6210  00A8FE  0E00               	movlw	0
  6211  00A900  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6212                           
  6213                           ;ui.c: 231: break;
  6214  00A902  0012               	return	
  6215  00A904                     
  6216                           ; BSR set to: 2
  6217                           ;ui.c: 234: if(os.encoderCount>0)
  6218                           
  6219                           ; BSR set to: 2
  6220  00A904  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6221  00A906  0A80               	xorlw	128
  6222  00A908  0F7F               	addlw	-129
  6223  00A90A  A0D8               	btfss	status,0,c
  6224  00A90C  D006               	goto	l1810
  6225                           
  6226                           ; BSR set to: 2
  6227                           ;ui.c: 235: {
  6228                           ;ui.c: 236: if(os.output_voltage>-1)
  6229  00A90E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6230  00A910  D00A               	goto	l1813
  6231                           
  6232                           ; BSR set to: 2
  6233                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6234  00A912  0E04               	movlw	4
  6235  00A914  ECF5  F08F         	call	_system_output_on
  6236                           
  6237                           ;ui.c: 238: }
  6238  00A918  D006               	goto	l1813
  6239  00A91A                     l1810:
  6240                           
  6241                           ;ui.c: 239: else if(os.encoderCount<0)
  6242  00A91A  0102               	movlb	2	; () banked
  6243  00A91C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6244  00A91E  D003               	goto	l1813
  6245                           
  6246                           ; BSR set to: 2
  6247                           ;ui.c: 240: {
  6248                           ;ui.c: 241: system_output_off(OUTPUT_3);
  6249  00A920  0E04               	movlw	4
  6250  00A922  ECDF  F08D         	call	_system_output_off
  6251  00A926                     l1813:
  6252                           
  6253                           ;ui.c: 242: }
  6254                           ;ui.c: 243: if(os.buttonCount)
  6255  00A926  0102               	movlb	2	; () banked
  6256  00A928  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6257  00A92A  B4D8               	btfsc	status,2,c
  6258  00A92C  D002               	goto	l1814
  6259                           
  6260                           ; BSR set to: 2
  6261                           ;ui.c: 244: {
  6262                           ;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6263  00A92E  0E34               	movlw	52
  6264  00A930  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6265  00A932                     l1814:
  6266                           
  6267                           ; BSR set to: 2
  6268                           ;ui.c: 246: }
  6269                           ;ui.c: 247: os.encoderCount = 0;
  6270  00A932  0E00               	movlw	0
  6271  00A934  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6272                           
  6273                           ;ui.c: 248: os.buttonCount = 0;
  6274  00A936  0E00               	movlw	0
  6275  00A938  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6276                           
  6277                           ;ui.c: 249: break;
  6278  00A93A  0012               	return	
  6279  00A93C                     
  6280                           ; BSR set to: 2
  6281                           ;ui.c: 252: if(os.encoderCount>0)
  6282                           
  6283                           ; BSR set to: 2
  6284  00A93C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6285  00A93E  0A80               	xorlw	128
  6286  00A940  0F7F               	addlw	-129
  6287  00A942  A0D8               	btfss	status,0,c
  6288  00A944  D006               	goto	l1816
  6289                           
  6290                           ; BSR set to: 2
  6291                           ;ui.c: 253: {
  6292                           ;ui.c: 254: if(os.output_voltage>-1)
  6293  00A946  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6294  00A948  D00A               	goto	l1819
  6295                           
  6296                           ; BSR set to: 2
  6297                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6298  00A94A  0E08               	movlw	8
  6299  00A94C  ECF5  F08F         	call	_system_output_on
  6300                           
  6301                           ;ui.c: 256: }
  6302  00A950  D006               	goto	l1819
  6303  00A952                     l1816:
  6304                           
  6305                           ;ui.c: 257: else if(os.encoderCount<0)
  6306  00A952  0102               	movlb	2	; () banked
  6307  00A954  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6308  00A956  D003               	goto	l1819
  6309                           
  6310                           ; BSR set to: 2
  6311                           ;ui.c: 258: {
  6312                           ;ui.c: 259: system_output_off(OUTPUT_4);
  6313  00A958  0E08               	movlw	8
  6314  00A95A  ECDF  F08D         	call	_system_output_off
  6315  00A95E                     l1819:
  6316                           
  6317                           ;ui.c: 260: }
  6318                           ;ui.c: 261: if(os.buttonCount)
  6319  00A95E  0102               	movlb	2	; () banked
  6320  00A960  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6321  00A962  B4D8               	btfsc	status,2,c
  6322  00A964  D002               	goto	l1820
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;ui.c: 262: {
  6326                           ;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6327  00A966  0E30               	movlw	48
  6328  00A968  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6329  00A96A                     l1820:
  6330                           
  6331                           ; BSR set to: 2
  6332                           ;ui.c: 264: }
  6333                           ;ui.c: 265: os.encoderCount = 0;
  6334  00A96A  0E00               	movlw	0
  6335  00A96C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6336                           
  6337                           ;ui.c: 266: os.buttonCount = 0;
  6338  00A96E  0E00               	movlw	0
  6339  00A970  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6340                           
  6341                           ;ui.c: 267: break;
  6342  00A972  0012               	return	
  6343  00A974                     
  6344                           ; BSR set to: 2
  6345                           ;ui.c: 270: if(os.encoderCount>0)
  6346                           
  6347                           ; BSR set to: 2
  6348  00A974  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6349  00A976  0A80               	xorlw	128
  6350  00A978  0F7F               	addlw	-129
  6351  00A97A  A0D8               	btfss	status,0,c
  6352  00A97C  D002               	goto	l1822
  6353                           
  6354                           ; BSR set to: 2
  6355                           ;ui.c: 271: {
  6356                           ;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6357  00A97E  0E50               	movlw	80
  6358  00A980  D003               	goto	L5
  6359  00A982                     l1822:
  6360                           
  6361                           ; BSR set to: 2
  6362                           ;ui.c: 274: else if(os.encoderCount<0)
  6363                           
  6364                           ; BSR set to: 2
  6365  00A982  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6366  00A984  D002               	goto	l1824
  6367                           
  6368                           ; BSR set to: 2
  6369                           ;ui.c: 275: {
  6370                           ;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6371  00A986  0E30               	movlw	48
  6372  00A988                     L5:
  6373  00A988  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6374  00A98A                     l1824:
  6375                           
  6376                           ; BSR set to: 2
  6377                           ;ui.c: 277: }
  6378                           ;ui.c: 278: if(os.buttonCount)
  6379                           
  6380                           ; BSR set to: 2
  6381  00A98A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6382                           
  6383                           ; BSR set to: 2
  6384                           ;ui.c: 281: }
  6385                           ;ui.c: 282: os.encoderCount = 0;
  6386                           
  6387                           ; BSR set to: 2
  6388                           
  6389                           ;ui.c: 279: {
  6390                           ;ui.c: 280: ;
  6391  00A98C  0E00               	movlw	0
  6392  00A98E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6393                           
  6394                           ;ui.c: 283: os.buttonCount = 0;
  6395  00A990  0E00               	movlw	0
  6396  00A992  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6397                           
  6398                           ;ui.c: 284: break;
  6399  00A994  0012               	return	
  6400  00A996                     
  6401                           ; BSR set to: 2
  6402                           ;ui.c: 287: if(os.encoderCount>0)
  6403                           
  6404                           ; BSR set to: 2
  6405  00A996  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6406  00A998  0A80               	xorlw	128
  6407  00A99A  0F7F               	addlw	-129
  6408  00A99C  A0D8               	btfss	status,0,c
  6409  00A99E  D002               	goto	l1827
  6410                           
  6411                           ; BSR set to: 2
  6412                           ;ui.c: 288: {
  6413                           ;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6414  00A9A0  0E60               	movlw	96
  6415  00A9A2  D003               	goto	L6
  6416  00A9A4                     l1827:
  6417                           
  6418                           ; BSR set to: 2
  6419                           ;ui.c: 291: else if(os.encoderCount<0)
  6420                           
  6421                           ; BSR set to: 2
  6422  00A9A4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6423  00A9A6  D002               	goto	l1829
  6424                           
  6425                           ; BSR set to: 2
  6426                           ;ui.c: 292: {
  6427                           ;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6428  00A9A8  0E40               	movlw	64
  6429  00A9AA                     L6:
  6430  00A9AA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6431  00A9AC                     l1829:
  6432                           
  6433                           ; BSR set to: 2
  6434                           ;ui.c: 294: }
  6435                           ;ui.c: 295: if(os.buttonCount)
  6436                           
  6437                           ; BSR set to: 2
  6438  00A9AC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6439                           
  6440                           ; BSR set to: 2
  6441                           ;ui.c: 298: }
  6442                           ;ui.c: 299: os.encoderCount = 0;
  6443                           
  6444                           ; BSR set to: 2
  6445                           
  6446                           ;ui.c: 296: {
  6447                           ;ui.c: 297: ;
  6448  00A9AE  0E00               	movlw	0
  6449  00A9B0  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6450                           
  6451                           ;ui.c: 300: os.buttonCount = 0;
  6452  00A9B2  0E00               	movlw	0
  6453  00A9B4  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6454                           
  6455                           ;ui.c: 301: break;
  6456  00A9B6  0012               	return	
  6457  00A9B8                     
  6458                           ; BSR set to: 2
  6459                           ;ui.c: 304: if(os.encoderCount>0)
  6460                           
  6461                           ; BSR set to: 2
  6462  00A9B8  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6463  00A9BA  0A80               	xorlw	128
  6464  00A9BC  0F7F               	addlw	-129
  6465  00A9BE  A0D8               	btfss	status,0,c
  6466  00A9C0  D002               	goto	l1832
  6467                           
  6468                           ; BSR set to: 2
  6469                           ;ui.c: 305: {
  6470                           ;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6471  00A9C2  0E00               	movlw	0
  6472  00A9C4  D003               	goto	L7
  6473  00A9C6                     l1832:
  6474                           
  6475                           ; BSR set to: 2
  6476                           ;ui.c: 308: else if(os.encoderCount<0)
  6477                           
  6478                           ; BSR set to: 2
  6479  00A9C6  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6480  00A9C8  D002               	goto	l1834
  6481                           
  6482                           ; BSR set to: 2
  6483                           ;ui.c: 309: {
  6484                           ;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6485  00A9CA  0E50               	movlw	80
  6486  00A9CC                     L7:
  6487  00A9CC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6488  00A9CE                     l1834:
  6489                           
  6490                           ; BSR set to: 2
  6491                           ;ui.c: 311: }
  6492                           ;ui.c: 312: if(os.buttonCount)
  6493                           
  6494                           ; BSR set to: 2
  6495  00A9CE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6496                           
  6497                           ; BSR set to: 2
  6498                           ;ui.c: 315: }
  6499                           ;ui.c: 316: os.encoderCount = 0;
  6500                           
  6501                           ; BSR set to: 2
  6502                           
  6503                           ;ui.c: 313: {
  6504                           ;ui.c: 314: ;
  6505  00A9D0  0E00               	movlw	0
  6506  00A9D2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6507                           
  6508                           ;ui.c: 317: os.buttonCount = 0;
  6509  00A9D4  0E00               	movlw	0
  6510  00A9D6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6511                           
  6512                           ;ui.c: 318: break;
  6513  00A9D8  0012               	return	
  6514  00A9DA                     
  6515                           ; BSR set to: 2
  6516                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6517                           
  6518                           ; BSR set to: 2
  6519  00A9DA  0E00               	movlw	0
  6520  00A9DC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6521                           
  6522                           ;ui.c: 322: }
  6523  00A9DE  0012               	return	
  6524  00A9E0                     l1744:
  6525                           
  6526                           ; BSR set to: 2
  6527  00A9E0  0102               	movlb	2	; () banked
  6528  00A9E2  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6529                           
  6530                           ; Switch size 1, requested type "space"
  6531                           ; Number of cases is 17, Range of values is 0 to 96
  6532                           ; switch strategies available:
  6533                           ; Name         Instructions Cycles
  6534                           ; simple_byte           52    27 (average)
  6535                           ;	Chosen strategy is simple_byte
  6536  00A9E4  0A00               	xorlw	0	; case 0
  6537  00A9E6  B4D8               	btfsc	status,2,c
  6538  00A9E8  D668               	goto	l1745
  6539  00A9EA  0A10               	xorlw	16	; case 16
  6540  00A9EC  B4D8               	btfsc	status,2,c
  6541  00A9EE  D677               	goto	l1751
  6542  00A9F0  0A01               	xorlw	1	; case 17
  6543  00A9F2  B4D8               	btfsc	status,2,c
  6544  00A9F4  D689               	goto	l1756
  6545  00A9F6  0A03               	xorlw	3	; case 18
  6546  00A9F8  B4D8               	btfsc	status,2,c
  6547  00A9FA  D6A0               	goto	l1761
  6548  00A9FC  0A01               	xorlw	1	; case 19
  6549  00A9FE  B4D8               	btfsc	status,2,c
  6550  00AA00  D6B7               	goto	l1766
  6551  00AA02  0A07               	xorlw	7	; case 20
  6552  00AA04  B4D8               	btfsc	status,2,c
  6553  00AA06  D6CB               	goto	l1771
  6554  00AA08  0A01               	xorlw	1	; case 21
  6555  00AA0A  B4D8               	btfsc	status,2,c
  6556  00AA0C  D6DF               	goto	l1776
  6557  00AA0E  0A03               	xorlw	3	; case 22
  6558  00AA10  B4D8               	btfsc	status,2,c
  6559  00AA12  D6F3               	goto	l1781
  6560  00AA14  0A36               	xorlw	54	; case 32
  6561  00AA16  B4D8               	btfsc	status,2,c
  6562  00AA18  D70A               	goto	l1786
  6563  00AA1A  0A10               	xorlw	16	; case 48
  6564  00AA1C  B4D8               	btfsc	status,2,c
  6565  00AA1E  D725               	goto	l1792
  6566  00AA20  0A01               	xorlw	1	; case 49
  6567  00AA22  B4D8               	btfsc	status,2,c
  6568  00AA24  D737               	goto	l1797
  6569  00AA26  0A03               	xorlw	3	; case 50
  6570  00AA28  B4D8               	btfsc	status,2,c
  6571  00AA2A  D750               	goto	l1803
  6572  00AA2C  0A01               	xorlw	1	; case 51
  6573  00AA2E  B4D8               	btfsc	status,2,c
  6574  00AA30  D769               	goto	l1809
  6575  00AA32  0A07               	xorlw	7	; case 52
  6576  00AA34  B4D8               	btfsc	status,2,c
  6577  00AA36  D782               	goto	l1815
  6578  00AA38  0A74               	xorlw	116	; case 64
  6579  00AA3A  B4D8               	btfsc	status,2,c
  6580  00AA3C  D79B               	goto	l1821
  6581  00AA3E  0A10               	xorlw	16	; case 80
  6582  00AA40  B4D8               	btfsc	status,2,c
  6583  00AA42  D7A9               	goto	l1826
  6584  00AA44  0A30               	xorlw	48	; case 96
  6585  00AA46  B4D8               	btfsc	status,2,c
  6586  00AA48  D7B7               	goto	l1831
  6587  00AA4A  D7C7               	goto	l1836
  6588  00AA4C                     __end_of__ui_encoder:
  6589                           	opt stack 0
  6590                           tblptru	equ	0xFF8
  6591                           tblptrh	equ	0xFF7
  6592                           tblptrl	equ	0xFF6
  6593                           tablat	equ	0xFF5
  6594                           intcon3	equ	0xFF0
  6595                           postinc0	equ	0xFEE
  6596                           wreg	equ	0xFE8
  6597                           postdec1	equ	0xFE5
  6598                           plusw1	equ	0xFE3
  6599                           fsr1h	equ	0xFE2
  6600                           fsr1l	equ	0xFE1
  6601                           postinc2	equ	0xFDE
  6602                           postdec2	equ	0xFDD
  6603                           plusw2	equ	0xFDB
  6604                           fsr2h	equ	0xFDA
  6605                           fsr2l	equ	0xFD9
  6606                           status	equ	0xFD8
  6607                           
  6608 ;; *************** function _system_output_toggle *****************
  6609 ;; Defined at:
  6610 ;;		line 499 in file "os.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  output          1    wreg     enum E8135
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  output          1    2[BANK0 ] enum E8135
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;Total ram usage:        1 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:   11
  6631 ;; This function calls:
  6632 ;;		_system_output_is_on
  6633 ;;		_system_output_off
  6634 ;;		_system_output_on
  6635 ;; This function is called by:
  6636 ;;		__ui_encoder
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text9
  6641  012952                     __ptext9:
  6642                           	opt stack 0
  6643  012952                     _system_output_toggle:
  6644                           	opt stack 17
  6645                           
  6646                           ; BSR set to: 2
  6647                           ;incstack = 0
  6648                           ;system_output_toggle@output stored from wreg
  6649  012952  0100               	movlb	0	; () banked
  6650  012954  6F62               	movwf	system_output_toggle@output& (0+255),b
  6651                           
  6652                           ;os.c: 501: if(system_output_is_on(output))
  6653  012956  0100               	movlb	0	; () banked
  6654  012958  5162               	movf	system_output_toggle@output& (0+255),w,b
  6655  01295A  EC26  F096         	call	_system_output_is_on
  6656  01295E  0900               	iorlw	0
  6657  012960  B4D8               	btfsc	status,2,c
  6658  012962  D005               	goto	l1401
  6659                           
  6660                           ;os.c: 502: system_output_off(output);
  6661  012964  0100               	movlb	0	; () banked
  6662  012966  5162               	movf	system_output_toggle@output& (0+255),w,b
  6663  012968  ECDF  F08D         	call	_system_output_off
  6664  01296C  0012               	return	
  6665  01296E                     l1401:
  6666                           
  6667                           ;os.c: 503: else
  6668                           ;os.c: 504: system_output_on(output);
  6669  01296E  0100               	movlb	0	; () banked
  6670  012970  5162               	movf	system_output_toggle@output& (0+255),w,b
  6671  012972  ECF5  F08F         	call	_system_output_on
  6672  012976  0012               	return	
  6673  012978                     __end_of_system_output_toggle:
  6674                           	opt stack 0
  6675                           tblptru	equ	0xFF8
  6676                           tblptrh	equ	0xFF7
  6677                           tblptrl	equ	0xFF6
  6678                           tablat	equ	0xFF5
  6679                           intcon3	equ	0xFF0
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           plusw1	equ	0xFE3
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           postinc2	equ	0xFDE
  6687                           postdec2	equ	0xFDD
  6688                           plusw2	equ	0xFDB
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693 ;; *************** function _rtcc_increment_year *****************
  6694 ;; Defined at:
  6695 ;;		line 150 in file "rtcc.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  year            1    8[BANK0 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;Total ram usage:        1 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:   12
  6716 ;; This function calls:
  6717 ;;		__rtcc_increment_bcd
  6718 ;;		_rtcc_get_year
  6719 ;;		_rtcc_set_year
  6720 ;; This function is called by:
  6721 ;;		__ui_encoder
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text10
  6726  0129E8                     __ptext10:
  6727                           	opt stack 0
  6728  0129E8                     _rtcc_increment_year:
  6729                           	opt stack 16
  6730                           
  6731                           ;rtcc.c: 152: uint8_t year = rtcc_get_year();
  6732                           
  6733                           ;incstack = 0
  6734  0129E8  EC3B  F097         	call	_rtcc_get_year	;wreg free
  6735  0129EC  0100               	movlb	0	; () banked
  6736  0129EE  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;rtcc.c: 153: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6740  0129F0  0E00               	movlw	0
  6741  0129F2  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6742  0129F4  0E99               	movlw	153
  6743  0129F6  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6744  0129F8  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6745  0129FA  EC64  F093         	call	__rtcc_increment_bcd
  6746  0129FE  0100               	movlb	0	; () banked
  6747  012A00  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;rtcc.c: 154: rtcc_set_year(year);
  6751  012A02  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6752  012A04  EC58  F096         	call	_rtcc_set_year
  6753  012A08  0012               	return		;funcret
  6754  012A0A                     __end_of_rtcc_increment_year:
  6755                           	opt stack 0
  6756                           tblptru	equ	0xFF8
  6757                           tblptrh	equ	0xFF7
  6758                           tblptrl	equ	0xFF6
  6759                           tablat	equ	0xFF5
  6760                           intcon3	equ	0xFF0
  6761                           postinc0	equ	0xFEE
  6762                           wreg	equ	0xFE8
  6763                           postdec1	equ	0xFE5
  6764                           plusw1	equ	0xFE3
  6765                           fsr1h	equ	0xFE2
  6766                           fsr1l	equ	0xFE1
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           plusw2	equ	0xFDB
  6770                           fsr2h	equ	0xFDA
  6771                           fsr2l	equ	0xFD9
  6772                           status	equ	0xFD8
  6773                           
  6774 ;; *************** function _rtcc_increment_seconds *****************
  6775 ;; Defined at:
  6776 ;;		line 340 in file "rtcc.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  seconds         1    8[BANK0 ] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;Total ram usage:        1 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:   12
  6797 ;; This function calls:
  6798 ;;		__rtcc_increment_bcd
  6799 ;;		_rtcc_get_seconds
  6800 ;;		_rtcc_set_seconds
  6801 ;; This function is called by:
  6802 ;;		__ui_encoder
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text11
  6807  012A0A                     __ptext11:
  6808                           	opt stack 0
  6809  012A0A                     _rtcc_increment_seconds:
  6810                           	opt stack 16
  6811                           
  6812                           ;rtcc.c: 342: uint8_t seconds = rtcc_get_seconds();
  6813                           
  6814                           ;incstack = 0
  6815  012A0A  EC42  F097         	call	_rtcc_get_seconds	;wreg free
  6816  012A0E  0100               	movlb	0	; () banked
  6817  012A10  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;rtcc.c: 343: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6821  012A12  0E00               	movlw	0
  6822  012A14  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6823  012A16  0E59               	movlw	89
  6824  012A18  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6825  012A1A  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6826  012A1C  EC64  F093         	call	__rtcc_increment_bcd
  6827  012A20  0100               	movlb	0	; () banked
  6828  012A22  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;rtcc.c: 344: rtcc_set_seconds(seconds);
  6832  012A24  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6833  012A26  EC64  F096         	call	_rtcc_set_seconds
  6834  012A2A  0012               	return		;funcret
  6835  012A2C                     __end_of_rtcc_increment_seconds:
  6836                           	opt stack 0
  6837                           tblptru	equ	0xFF8
  6838                           tblptrh	equ	0xFF7
  6839                           tblptrl	equ	0xFF6
  6840                           tablat	equ	0xFF5
  6841                           intcon3	equ	0xFF0
  6842                           postinc0	equ	0xFEE
  6843                           wreg	equ	0xFE8
  6844                           postdec1	equ	0xFE5
  6845                           plusw1	equ	0xFE3
  6846                           fsr1h	equ	0xFE2
  6847                           fsr1l	equ	0xFE1
  6848                           postinc2	equ	0xFDE
  6849                           postdec2	equ	0xFDD
  6850                           plusw2	equ	0xFDB
  6851                           fsr2h	equ	0xFDA
  6852                           fsr2l	equ	0xFD9
  6853                           status	equ	0xFD8
  6854                           
  6855 ;; *************** function _rtcc_increment_month *****************
  6856 ;; Defined at:
  6857 ;;		line 188 in file "rtcc.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  month           1    8[BANK0 ] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:   12
  6878 ;; This function calls:
  6879 ;;		__rtcc_increment_bcd
  6880 ;;		_rtcc_get_month
  6881 ;;		_rtcc_set_month
  6882 ;; This function is called by:
  6883 ;;		__ui_encoder
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text12
  6888  012A2C                     __ptext12:
  6889                           	opt stack 0
  6890  012A2C                     _rtcc_increment_month:
  6891                           	opt stack 16
  6892                           
  6893                           ;rtcc.c: 190: uint8_t month = rtcc_get_month();
  6894                           
  6895                           ;incstack = 0
  6896  012A2C  EC49  F097         	call	_rtcc_get_month	;wreg free
  6897  012A30  0100               	movlb	0	; () banked
  6898  012A32  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;rtcc.c: 191: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  6902  012A34  0E01               	movlw	1
  6903  012A36  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6904  012A38  0E12               	movlw	18
  6905  012A3A  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6906  012A3C  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6907  012A3E  EC64  F093         	call	__rtcc_increment_bcd
  6908  012A42  0100               	movlb	0	; () banked
  6909  012A44  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;rtcc.c: 192: rtcc_set_month(month);
  6913  012A46  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6914  012A48  EC70  F096         	call	_rtcc_set_month
  6915  012A4C  0012               	return		;funcret
  6916  012A4E                     __end_of_rtcc_increment_month:
  6917                           	opt stack 0
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           intcon3	equ	0xFF0
  6923                           postinc0	equ	0xFEE
  6924                           wreg	equ	0xFE8
  6925                           postdec1	equ	0xFE5
  6926                           plusw1	equ	0xFE3
  6927                           fsr1h	equ	0xFE2
  6928                           fsr1l	equ	0xFE1
  6929                           postinc2	equ	0xFDE
  6930                           postdec2	equ	0xFDD
  6931                           plusw2	equ	0xFDB
  6932                           fsr2h	equ	0xFDA
  6933                           fsr2l	equ	0xFD9
  6934                           status	equ	0xFD8
  6935                           
  6936 ;; *************** function _rtcc_increment_minutes *****************
  6937 ;; Defined at:
  6938 ;;		line 302 in file "rtcc.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;		None
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  minutes         1    8[BANK0 ] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6956 ;;Total ram usage:        1 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:   12
  6959 ;; This function calls:
  6960 ;;		__rtcc_increment_bcd
  6961 ;;		_rtcc_get_minutes
  6962 ;;		_rtcc_set_minutes
  6963 ;; This function is called by:
  6964 ;;		__ui_encoder
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text13
  6969  012A4E                     __ptext13:
  6970                           	opt stack 0
  6971  012A4E                     _rtcc_increment_minutes:
  6972                           	opt stack 16
  6973                           
  6974                           ;rtcc.c: 304: uint8_t minutes = rtcc_get_minutes();
  6975                           
  6976                           ;incstack = 0
  6977  012A4E  EC50  F097         	call	_rtcc_get_minutes	;wreg free
  6978  012A52  0100               	movlb	0	; () banked
  6979  012A54  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;rtcc.c: 305: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  6983  012A56  0E00               	movlw	0
  6984  012A58  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6985  012A5A  0E59               	movlw	89
  6986  012A5C  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6987  012A5E  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6988  012A60  EC64  F093         	call	__rtcc_increment_bcd
  6989  012A64  0100               	movlb	0	; () banked
  6990  012A66  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;rtcc.c: 306: rtcc_set_minutes(minutes);
  6994  012A68  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6995  012A6A  EC7C  F096         	call	_rtcc_set_minutes
  6996  012A6E  0012               	return		;funcret
  6997  012A70                     __end_of_rtcc_increment_minutes:
  6998                           	opt stack 0
  6999                           tblptru	equ	0xFF8
  7000                           tblptrh	equ	0xFF7
  7001                           tblptrl	equ	0xFF6
  7002                           tablat	equ	0xFF5
  7003                           intcon3	equ	0xFF0
  7004                           postinc0	equ	0xFEE
  7005                           wreg	equ	0xFE8
  7006                           postdec1	equ	0xFE5
  7007                           plusw1	equ	0xFE3
  7008                           fsr1h	equ	0xFE2
  7009                           fsr1l	equ	0xFE1
  7010                           postinc2	equ	0xFDE
  7011                           postdec2	equ	0xFDD
  7012                           plusw2	equ	0xFDB
  7013                           fsr2h	equ	0xFDA
  7014                           fsr2l	equ	0xFD9
  7015                           status	equ	0xFD8
  7016                           
  7017 ;; *************** function _rtcc_increment_hours *****************
  7018 ;; Defined at:
  7019 ;;		line 264 in file "rtcc.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  hours           1    8[BANK0 ] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0, cstack
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;Total ram usage:        1 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; Hardware stack levels required when called:   12
  7040 ;; This function calls:
  7041 ;;		__rtcc_increment_bcd
  7042 ;;		_rtcc_get_hours
  7043 ;;		_rtcc_set_hours
  7044 ;; This function is called by:
  7045 ;;		__ui_encoder
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text14
  7050  012A70                     __ptext14:
  7051                           	opt stack 0
  7052  012A70                     _rtcc_increment_hours:
  7053                           	opt stack 16
  7054                           
  7055                           ;rtcc.c: 266: uint8_t hours = rtcc_get_hours();
  7056                           
  7057                           ;incstack = 0
  7058  012A70  EC57  F097         	call	_rtcc_get_hours	;wreg free
  7059  012A74  0100               	movlb	0	; () banked
  7060  012A76  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;rtcc.c: 267: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  7064  012A78  0E00               	movlw	0
  7065  012A7A  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7066  012A7C  0E23               	movlw	35
  7067  012A7E  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7068  012A80  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7069  012A82  EC64  F093         	call	__rtcc_increment_bcd
  7070  012A86  0100               	movlb	0	; () banked
  7071  012A88  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;rtcc.c: 268: rtcc_set_hours(hours);
  7075  012A8A  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7076  012A8C  EC88  F096         	call	_rtcc_set_hours
  7077  012A90  0012               	return		;funcret
  7078  012A92                     __end_of_rtcc_increment_hours:
  7079                           	opt stack 0
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           intcon3	equ	0xFF0
  7085                           postinc0	equ	0xFEE
  7086                           wreg	equ	0xFE8
  7087                           postdec1	equ	0xFE5
  7088                           plusw1	equ	0xFE3
  7089                           fsr1h	equ	0xFE2
  7090                           fsr1l	equ	0xFE1
  7091                           postinc2	equ	0xFDE
  7092                           postdec2	equ	0xFDD
  7093                           plusw2	equ	0xFDB
  7094                           fsr2h	equ	0xFDA
  7095                           fsr2l	equ	0xFD9
  7096                           status	equ	0xFD8
  7097                           
  7098 ;; *************** function _rtcc_increment_day *****************
  7099 ;; Defined at:
  7100 ;;		line 226 in file "rtcc.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  day             1    8[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7118 ;;Total ram usage:        1 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:   12
  7121 ;; This function calls:
  7122 ;;		__number_of_days
  7123 ;;		__rtcc_increment_bcd
  7124 ;;		_rtcc_get_day
  7125 ;;		_rtcc_set_day
  7126 ;; This function is called by:
  7127 ;;		__ui_encoder
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text15
  7132  012978                     __ptext15:
  7133                           	opt stack 0
  7134  012978                     _rtcc_increment_day:
  7135                           	opt stack 16
  7136                           
  7137                           ;rtcc.c: 228: uint8_t day = rtcc_get_day();
  7138                           
  7139                           ;incstack = 0
  7140  012978  EC5E  F097         	call	_rtcc_get_day	;wreg free
  7141  01297C  0100               	movlb	0	; () banked
  7142  01297E  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;rtcc.c: 229: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7146  012980  0E01               	movlw	1
  7147  012982  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7148  012984  EC2A  F08A         	call	__number_of_days	;wreg free
  7149  012988  0100               	movlb	0	; () banked
  7150  01298A  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7151  01298C  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7152  01298E  EC64  F093         	call	__rtcc_increment_bcd
  7153  012992  0100               	movlb	0	; () banked
  7154  012994  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;rtcc.c: 230: rtcc_set_day(day);
  7158  012996  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7159  012998  EC94  F096         	call	_rtcc_set_day
  7160  01299C  0012               	return		;funcret
  7161  01299E                     __end_of_rtcc_increment_day:
  7162                           	opt stack 0
  7163                           tblptru	equ	0xFF8
  7164                           tblptrh	equ	0xFF7
  7165                           tblptrl	equ	0xFF6
  7166                           tablat	equ	0xFF5
  7167                           intcon3	equ	0xFF0
  7168                           postinc0	equ	0xFEE
  7169                           wreg	equ	0xFE8
  7170                           postdec1	equ	0xFE5
  7171                           plusw1	equ	0xFE3
  7172                           fsr1h	equ	0xFE2
  7173                           fsr1l	equ	0xFE1
  7174                           postinc2	equ	0xFDE
  7175                           postdec2	equ	0xFDD
  7176                           plusw2	equ	0xFDB
  7177                           fsr2h	equ	0xFDA
  7178                           fsr2l	equ	0xFD9
  7179                           status	equ	0xFD8
  7180                           
  7181 ;; *************** function __rtcc_increment_bcd *****************
  7182 ;; Defined at:
  7183 ;;		line 34 in file "rtcc.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  value           1    wreg     unsigned char 
  7186 ;;  min             1    4[BANK0 ] unsigned char 
  7187 ;;  max             1    5[BANK0 ] unsigned char 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  value           1    7[BANK0 ] unsigned char 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      unsigned char 
  7192 ;; Registers used:
  7193 ;;		wreg, status,2, status,0
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;Total ram usage:        4 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:   10
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_rtcc_increment_year
  7210 ;;		_rtcc_increment_month
  7211 ;;		_rtcc_increment_day
  7212 ;;		_rtcc_increment_hours
  7213 ;;		_rtcc_increment_minutes
  7214 ;;		_rtcc_increment_seconds
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text16
  7219  0126C8                     __ptext16:
  7220                           	opt stack 0
  7221  0126C8                     __rtcc_increment_bcd:
  7222                           	opt stack 17
  7223                           
  7224                           ;incstack = 0
  7225                           ;__rtcc_increment_bcd@value stored from wreg
  7226  0126C8  0100               	movlb	0	; () banked
  7227  0126CA  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7228                           
  7229                           ;rtcc.c: 36: if(value==max)
  7230  0126CC  0100               	movlb	0	; () banked
  7231  0126CE  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7232  0126D0  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7233  0126D2  A4D8               	btfss	status,2,c
  7234  0126D4  D002               	goto	l2255
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;rtcc.c: 37: return min;
  7238  0126D6  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7239  0126D8  0012               	return	
  7240  0126DA                     l2255:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;rtcc.c: 38: ++value;
  7244                           
  7245                           ; BSR set to: 0
  7246  0126DA  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7247                           
  7248                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7249  0126DC  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7250  0126E0  0E0F               	movlw	15
  7251  0126E2  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7252  0126E4  0E09               	movlw	9
  7253  0126E6  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7254  0126E8  D004               	goto	l2257
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;rtcc.c: 40: {
  7258                           ;rtcc.c: 41: value += 0x10;
  7259  0126EA  0E10               	movlw	16
  7260  0126EC  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7261                           
  7262                           ;rtcc.c: 42: value &= 0xF0;
  7263  0126EE  0EF0               	movlw	240
  7264  0126F0  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7265  0126F2                     l2257:
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;rtcc.c: 43: }
  7269                           ;rtcc.c: 44: return value;
  7270                           
  7271                           ; BSR set to: 0
  7272  0126F2  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7273  0126F4  0012               	return	
  7274  0126F6                     __end_of__rtcc_increment_bcd:
  7275                           	opt stack 0
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           intcon3	equ	0xFF0
  7281                           postinc0	equ	0xFEE
  7282                           wreg	equ	0xFE8
  7283                           postdec1	equ	0xFE5
  7284                           plusw1	equ	0xFE3
  7285                           fsr1h	equ	0xFE2
  7286                           fsr1l	equ	0xFE1
  7287                           postinc2	equ	0xFDE
  7288                           postdec2	equ	0xFDD
  7289                           plusw2	equ	0xFDB
  7290                           fsr2h	equ	0xFDA
  7291                           fsr2l	equ	0xFD9
  7292                           status	equ	0xFD8
  7293                           
  7294 ;; *************** function _rtcc_decrement_year *****************
  7295 ;; Defined at:
  7296 ;;		line 157 in file "rtcc.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  year            1    8[BANK0 ] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;Total ram usage:        1 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:   12
  7317 ;; This function calls:
  7318 ;;		__rtcc_decrement_bcd
  7319 ;;		_rtcc_get_year
  7320 ;;		_rtcc_set_year
  7321 ;; This function is called by:
  7322 ;;		__ui_encoder
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text17
  7327  012A92                     __ptext17:
  7328                           	opt stack 0
  7329  012A92                     _rtcc_decrement_year:
  7330                           	opt stack 16
  7331                           
  7332                           ;rtcc.c: 159: uint8_t year = rtcc_get_year();
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;incstack = 0
  7336  012A92  EC3B  F097         	call	_rtcc_get_year	;wreg free
  7337  012A96  0100               	movlb	0	; () banked
  7338  012A98  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;rtcc.c: 160: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7342  012A9A  0E00               	movlw	0
  7343  012A9C  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7344  012A9E  0E99               	movlw	153
  7345  012AA0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7346  012AA2  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7347  012AA4  EC7B  F093         	call	__rtcc_decrement_bcd
  7348  012AA8  0100               	movlb	0	; () banked
  7349  012AAA  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;rtcc.c: 161: rtcc_set_year(year);
  7353  012AAC  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7354  012AAE  EC58  F096         	call	_rtcc_set_year
  7355  012AB2  0012               	return		;funcret
  7356  012AB4                     __end_of_rtcc_decrement_year:
  7357                           	opt stack 0
  7358                           tblptru	equ	0xFF8
  7359                           tblptrh	equ	0xFF7
  7360                           tblptrl	equ	0xFF6
  7361                           tablat	equ	0xFF5
  7362                           intcon3	equ	0xFF0
  7363                           postinc0	equ	0xFEE
  7364                           wreg	equ	0xFE8
  7365                           postdec1	equ	0xFE5
  7366                           plusw1	equ	0xFE3
  7367                           fsr1h	equ	0xFE2
  7368                           fsr1l	equ	0xFE1
  7369                           postinc2	equ	0xFDE
  7370                           postdec2	equ	0xFDD
  7371                           plusw2	equ	0xFDB
  7372                           fsr2h	equ	0xFDA
  7373                           fsr2l	equ	0xFD9
  7374                           status	equ	0xFD8
  7375                           
  7376 ;; *************** function _rtcc_decrement_seconds *****************
  7377 ;; Defined at:
  7378 ;;		line 347 in file "rtcc.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  seconds         1    8[BANK0 ] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;Total ram usage:        1 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:   12
  7399 ;; This function calls:
  7400 ;;		__rtcc_decrement_bcd
  7401 ;;		_rtcc_get_seconds
  7402 ;;		_rtcc_set_seconds
  7403 ;; This function is called by:
  7404 ;;		__ui_encoder
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text18
  7409  012AB4                     __ptext18:
  7410                           	opt stack 0
  7411  012AB4                     _rtcc_decrement_seconds:
  7412                           	opt stack 16
  7413                           
  7414                           ;rtcc.c: 349: uint8_t seconds = rtcc_get_seconds();
  7415                           
  7416                           ;incstack = 0
  7417  012AB4  EC42  F097         	call	_rtcc_get_seconds	;wreg free
  7418  012AB8  0100               	movlb	0	; () banked
  7419  012ABA  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;rtcc.c: 350: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7423  012ABC  0E00               	movlw	0
  7424  012ABE  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7425  012AC0  0E59               	movlw	89
  7426  012AC2  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7427  012AC4  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7428  012AC6  EC7B  F093         	call	__rtcc_decrement_bcd
  7429  012ACA  0100               	movlb	0	; () banked
  7430  012ACC  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;rtcc.c: 351: rtcc_set_seconds(seconds);
  7434  012ACE  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7435  012AD0  EC64  F096         	call	_rtcc_set_seconds
  7436  012AD4  0012               	return		;funcret
  7437  012AD6                     __end_of_rtcc_decrement_seconds:
  7438                           	opt stack 0
  7439                           tblptru	equ	0xFF8
  7440                           tblptrh	equ	0xFF7
  7441                           tblptrl	equ	0xFF6
  7442                           tablat	equ	0xFF5
  7443                           intcon3	equ	0xFF0
  7444                           postinc0	equ	0xFEE
  7445                           wreg	equ	0xFE8
  7446                           postdec1	equ	0xFE5
  7447                           plusw1	equ	0xFE3
  7448                           fsr1h	equ	0xFE2
  7449                           fsr1l	equ	0xFE1
  7450                           postinc2	equ	0xFDE
  7451                           postdec2	equ	0xFDD
  7452                           plusw2	equ	0xFDB
  7453                           fsr2h	equ	0xFDA
  7454                           fsr2l	equ	0xFD9
  7455                           status	equ	0xFD8
  7456                           
  7457 ;; *************** function _rtcc_decrement_month *****************
  7458 ;; Defined at:
  7459 ;;		line 195 in file "rtcc.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  month           1    8[BANK0 ] unsigned char 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2, status,0, cstack
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:   12
  7480 ;; This function calls:
  7481 ;;		__rtcc_decrement_bcd
  7482 ;;		_rtcc_get_month
  7483 ;;		_rtcc_set_month
  7484 ;; This function is called by:
  7485 ;;		__ui_encoder
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text19
  7490  012AD6                     __ptext19:
  7491                           	opt stack 0
  7492  012AD6                     _rtcc_decrement_month:
  7493                           	opt stack 16
  7494                           
  7495                           ;rtcc.c: 197: uint8_t month = rtcc_get_month();
  7496                           
  7497                           ;incstack = 0
  7498  012AD6  EC49  F097         	call	_rtcc_get_month	;wreg free
  7499  012ADA  0100               	movlb	0	; () banked
  7500  012ADC  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;rtcc.c: 198: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7504  012ADE  0E01               	movlw	1
  7505  012AE0  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7506  012AE2  0E12               	movlw	18
  7507  012AE4  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7508  012AE6  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7509  012AE8  EC7B  F093         	call	__rtcc_decrement_bcd
  7510  012AEC  0100               	movlb	0	; () banked
  7511  012AEE  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;rtcc.c: 199: rtcc_set_month(month);
  7515  012AF0  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7516  012AF2  EC70  F096         	call	_rtcc_set_month
  7517  012AF6  0012               	return		;funcret
  7518  012AF8                     __end_of_rtcc_decrement_month:
  7519                           	opt stack 0
  7520                           tblptru	equ	0xFF8
  7521                           tblptrh	equ	0xFF7
  7522                           tblptrl	equ	0xFF6
  7523                           tablat	equ	0xFF5
  7524                           intcon3	equ	0xFF0
  7525                           postinc0	equ	0xFEE
  7526                           wreg	equ	0xFE8
  7527                           postdec1	equ	0xFE5
  7528                           plusw1	equ	0xFE3
  7529                           fsr1h	equ	0xFE2
  7530                           fsr1l	equ	0xFE1
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           plusw2	equ	0xFDB
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _rtcc_decrement_minutes *****************
  7539 ;; Defined at:
  7540 ;;		line 309 in file "rtcc.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  minutes         1    8[BANK0 ] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, status,2, status,0, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7557 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;Total ram usage:        1 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:   12
  7561 ;; This function calls:
  7562 ;;		__rtcc_decrement_bcd
  7563 ;;		_rtcc_get_minutes
  7564 ;;		_rtcc_set_minutes
  7565 ;; This function is called by:
  7566 ;;		__ui_encoder
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text20
  7571  012AF8                     __ptext20:
  7572                           	opt stack 0
  7573  012AF8                     _rtcc_decrement_minutes:
  7574                           	opt stack 16
  7575                           
  7576                           ;rtcc.c: 311: uint8_t minutes = rtcc_get_minutes();
  7577                           
  7578                           ;incstack = 0
  7579  012AF8  EC50  F097         	call	_rtcc_get_minutes	;wreg free
  7580  012AFC  0100               	movlb	0	; () banked
  7581  012AFE  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;rtcc.c: 312: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7585  012B00  0E00               	movlw	0
  7586  012B02  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7587  012B04  0E59               	movlw	89
  7588  012B06  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7589  012B08  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7590  012B0A  EC7B  F093         	call	__rtcc_decrement_bcd
  7591  012B0E  0100               	movlb	0	; () banked
  7592  012B10  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;rtcc.c: 313: rtcc_set_minutes(minutes);
  7596  012B12  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7597  012B14  EC7C  F096         	call	_rtcc_set_minutes
  7598  012B18  0012               	return		;funcret
  7599  012B1A                     __end_of_rtcc_decrement_minutes:
  7600                           	opt stack 0
  7601                           tblptru	equ	0xFF8
  7602                           tblptrh	equ	0xFF7
  7603                           tblptrl	equ	0xFF6
  7604                           tablat	equ	0xFF5
  7605                           intcon3	equ	0xFF0
  7606                           postinc0	equ	0xFEE
  7607                           wreg	equ	0xFE8
  7608                           postdec1	equ	0xFE5
  7609                           plusw1	equ	0xFE3
  7610                           fsr1h	equ	0xFE2
  7611                           fsr1l	equ	0xFE1
  7612                           postinc2	equ	0xFDE
  7613                           postdec2	equ	0xFDD
  7614                           plusw2	equ	0xFDB
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _rtcc_decrement_hours *****************
  7620 ;; Defined at:
  7621 ;;		line 271 in file "rtcc.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  hours           1    8[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;Total ram usage:        1 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:   12
  7642 ;; This function calls:
  7643 ;;		__rtcc_decrement_bcd
  7644 ;;		_rtcc_get_hours
  7645 ;;		_rtcc_set_hours
  7646 ;; This function is called by:
  7647 ;;		__ui_encoder
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text21
  7652  012B1A                     __ptext21:
  7653                           	opt stack 0
  7654  012B1A                     _rtcc_decrement_hours:
  7655                           	opt stack 16
  7656                           
  7657                           ;rtcc.c: 273: uint8_t hours = rtcc_get_hours();
  7658                           
  7659                           ;incstack = 0
  7660  012B1A  EC57  F097         	call	_rtcc_get_hours	;wreg free
  7661  012B1E  0100               	movlb	0	; () banked
  7662  012B20  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;rtcc.c: 274: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7666  012B22  0E00               	movlw	0
  7667  012B24  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7668  012B26  0E23               	movlw	35
  7669  012B28  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7670  012B2A  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7671  012B2C  EC7B  F093         	call	__rtcc_decrement_bcd
  7672  012B30  0100               	movlb	0	; () banked
  7673  012B32  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;rtcc.c: 275: rtcc_set_hours(hours);
  7677  012B34  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7678  012B36  EC88  F096         	call	_rtcc_set_hours
  7679  012B3A  0012               	return		;funcret
  7680  012B3C                     __end_of_rtcc_decrement_hours:
  7681                           	opt stack 0
  7682                           tblptru	equ	0xFF8
  7683                           tblptrh	equ	0xFF7
  7684                           tblptrl	equ	0xFF6
  7685                           tablat	equ	0xFF5
  7686                           intcon3	equ	0xFF0
  7687                           postinc0	equ	0xFEE
  7688                           wreg	equ	0xFE8
  7689                           postdec1	equ	0xFE5
  7690                           plusw1	equ	0xFE3
  7691                           fsr1h	equ	0xFE2
  7692                           fsr1l	equ	0xFE1
  7693                           postinc2	equ	0xFDE
  7694                           postdec2	equ	0xFDD
  7695                           plusw2	equ	0xFDB
  7696                           fsr2h	equ	0xFDA
  7697                           fsr2l	equ	0xFD9
  7698                           status	equ	0xFD8
  7699                           
  7700 ;; *************** function _rtcc_decrement_day *****************
  7701 ;; Defined at:
  7702 ;;		line 233 in file "rtcc.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;		None
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  day             1    8[BANK0 ] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;Total ram usage:        1 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:   12
  7723 ;; This function calls:
  7724 ;;		__number_of_days
  7725 ;;		__rtcc_decrement_bcd
  7726 ;;		_rtcc_get_day
  7727 ;;		_rtcc_set_day
  7728 ;; This function is called by:
  7729 ;;		__ui_encoder
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text22
  7734  01299E                     __ptext22:
  7735                           	opt stack 0
  7736  01299E                     _rtcc_decrement_day:
  7737                           	opt stack 16
  7738                           
  7739                           ;rtcc.c: 235: uint8_t day = rtcc_get_day();
  7740                           
  7741                           ;incstack = 0
  7742  01299E  EC5E  F097         	call	_rtcc_get_day	;wreg free
  7743  0129A2  0100               	movlb	0	; () banked
  7744  0129A4  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;rtcc.c: 236: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7748  0129A6  0E01               	movlw	1
  7749  0129A8  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7750  0129AA  EC2A  F08A         	call	__number_of_days	;wreg free
  7751  0129AE  0100               	movlb	0	; () banked
  7752  0129B0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7753  0129B2  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7754  0129B4  EC7B  F093         	call	__rtcc_decrement_bcd
  7755  0129B8  0100               	movlb	0	; () banked
  7756  0129BA  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;rtcc.c: 237: rtcc_set_day(day);
  7760  0129BC  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7761  0129BE  EC94  F096         	call	_rtcc_set_day
  7762  0129C2  0012               	return		;funcret
  7763  0129C4                     __end_of_rtcc_decrement_day:
  7764                           	opt stack 0
  7765                           tblptru	equ	0xFF8
  7766                           tblptrh	equ	0xFF7
  7767                           tblptrl	equ	0xFF6
  7768                           tablat	equ	0xFF5
  7769                           intcon3	equ	0xFF0
  7770                           postinc0	equ	0xFEE
  7771                           wreg	equ	0xFE8
  7772                           postdec1	equ	0xFE5
  7773                           plusw1	equ	0xFE3
  7774                           fsr1h	equ	0xFE2
  7775                           fsr1l	equ	0xFE1
  7776                           postinc2	equ	0xFDE
  7777                           postdec2	equ	0xFDD
  7778                           plusw2	equ	0xFDB
  7779                           fsr2h	equ	0xFDA
  7780                           fsr2l	equ	0xFD9
  7781                           status	equ	0xFD8
  7782                           
  7783 ;; *************** function __rtcc_decrement_bcd *****************
  7784 ;; Defined at:
  7785 ;;		line 47 in file "rtcc.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  value           1    wreg     unsigned char 
  7788 ;;  min             1    4[BANK0 ] unsigned char 
  7789 ;;  max             1    5[BANK0 ] unsigned char 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  value           1    7[BANK0 ] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1    wreg      unsigned char 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;Total ram usage:        4 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:   10
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_rtcc_decrement_year
  7812 ;;		_rtcc_decrement_month
  7813 ;;		_rtcc_decrement_day
  7814 ;;		_rtcc_decrement_hours
  7815 ;;		_rtcc_decrement_minutes
  7816 ;;		_rtcc_decrement_seconds
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text23
  7821  0126F6                     __ptext23:
  7822                           	opt stack 0
  7823  0126F6                     __rtcc_decrement_bcd:
  7824                           	opt stack 17
  7825                           
  7826                           ;incstack = 0
  7827                           ;__rtcc_decrement_bcd@value stored from wreg
  7828  0126F6  0100               	movlb	0	; () banked
  7829  0126F8  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7830                           
  7831                           ;rtcc.c: 49: if(value==min)
  7832  0126FA  0100               	movlb	0	; () banked
  7833  0126FC  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7834  0126FE  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7835  012700  A4D8               	btfss	status,2,c
  7836  012702  D002               	goto	l2260
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;rtcc.c: 50: return max;
  7840  012704  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  7841  012706  0012               	return	
  7842  012708                     l2260:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;rtcc.c: 51: --value;
  7846                           
  7847                           ; BSR set to: 0
  7848  012708  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  7849                           
  7850                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  7851  01270A  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  7852  01270E  0E0F               	movlw	15
  7853  012710  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  7854  012712  0E09               	movlw	9
  7855  012714  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  7856  012716  D004               	goto	l2262
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;rtcc.c: 53: {
  7860                           ;rtcc.c: 54: value &= 0xF0;
  7861  012718  0EF0               	movlw	240
  7862  01271A  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7863                           
  7864                           ;rtcc.c: 55: value |= 0x09;
  7865  01271C  0E09               	movlw	9
  7866  01271E  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7867  012720                     l2262:
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;rtcc.c: 56: }
  7871                           ;rtcc.c: 57: return value;
  7872                           
  7873                           ; BSR set to: 0
  7874  012720  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  7875  012722  0012               	return	
  7876  012724                     __end_of__rtcc_decrement_bcd:
  7877                           	opt stack 0
  7878                           tblptru	equ	0xFF8
  7879                           tblptrh	equ	0xFF7
  7880                           tblptrl	equ	0xFF6
  7881                           tablat	equ	0xFF5
  7882                           intcon3	equ	0xFF0
  7883                           postinc0	equ	0xFEE
  7884                           wreg	equ	0xFE8
  7885                           postdec1	equ	0xFE5
  7886                           plusw1	equ	0xFE3
  7887                           fsr1h	equ	0xFE2
  7888                           fsr1l	equ	0xFE1
  7889                           postinc2	equ	0xFDE
  7890                           postdec2	equ	0xFDD
  7891                           plusw2	equ	0xFDB
  7892                           fsr2h	equ	0xFDA
  7893                           fsr2l	equ	0xFD9
  7894                           status	equ	0xFD8
  7895                           
  7896 ;; *************** function _system_init *****************
  7897 ;; Defined at:
  7898 ;;		line 250 in file "os.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  7903 ;;  temp           50    0        unsigned char [50]
  7904 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  7905 ;;  filename        9  104[BANK1 ] unsigned char [9]
  7906 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  7907 ;;  extension       4  122[BANK1 ] unsigned char [4]
  7908 ;;  file_number     1    0        unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7919 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;Total ram usage:      130 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:   16
  7925 ;; This function calls:
  7926 ;;		__system_encoder_init
  7927 ;;		__system_timer0_init
  7928 ;;		_adc_init
  7929 ;;		_buck_init
  7930 ;;		_flash_init
  7931 ;;		_i2c_eeprom_read_calibration
  7932 ;;		_i2c_init
  7933 ;;		_log_start_new
  7934 ;;		_rtcc_init
  7935 ;;		_ui_init
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text24
  7942  00EA06                     __ptext24:
  7943                           	opt stack 0
  7944  00EA06                     _system_init:
  7945                           	opt stack 14
  7946                           
  7947                           ;os.c: 252: char filename[9] = "TEST    ";
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;incstack = 0
  7951  00EA06  EE22  F0DC         	lfsr	2,system_init@F8579
  7952  00EA0A  EE11  F068         	lfsr	1,system_init@filename
  7953  00EA0E  0E08               	movlw	8
  7954  00EA10                     u15001:
  7955  00EA10  CFDB FFE3          	movff	plusw2,plusw1
  7956  00EA14  06E8               	decf	wreg,f,c
  7957  00EA16  E2FC               	bc	u15001
  7958                           
  7959                           ;os.c: 253: char extension[4] = "TXT";
  7960  00EA18  C2E9  F17A         	movff	system_init@F8581,system_init@extension
  7961  00EA1C  C2EA  F17B         	movff	system_init@F8581+1,system_init@extension+1
  7962  00EA20  C2EB  F17C         	movff	system_init@F8581+2,system_init@extension+2
  7963  00EA24  C2EC  F17D         	movff	system_init@F8581+3,system_init@extension+3
  7964                           
  7965                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  7966  00EA28  EE23  F0F6         	lfsr	2,system_init@F8583
  7967  00EA2C  EE11  F071         	lfsr	1,system_init@filename2
  7968  00EA30  0E08               	movlw	8
  7969  00EA32                     u15011:
  7970  00EA32  CFDB FFE3          	movff	plusw2,plusw1
  7971  00EA36  06E8               	decf	wreg,f,c
  7972  00EA38  E2FC               	bc	u15011
  7973                           
  7974                           ;os.c: 255: char extension2[4] = "TXT";
  7975  00EA3A  C2E5  F17E         	movff	system_init@F8585,system_init@extension2
  7976  00EA3E  C2E6  F17F         	movff	system_init@F8585+1,system_init@extension2+1
  7977  00EA42  C2E7  F180         	movff	system_init@F8585+2,system_init@extension2+2
  7978  00EA46  C2E8  F181         	movff	system_init@F8585+3,system_init@extension2+3
  7979                           
  7980                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  7981  00EA4A  EE24  F000         	lfsr	2,system_init@F8587
  7982  00EA4E  EE11  F000         	lfsr	1,system_init@appendtext
  7983  00EA52  0E67               	movlw	103
  7984  00EA54                     u15021:
  7985  00EA54  CFDB FFE3          	movff	plusw2,plusw1
  7986  00EA58  06E8               	decf	wreg,f,c
  7987  00EA5A  E2FC               	bc	u15021
  7988                           
  7989                           ;os.c: 257: uint8_t file_number;
  7990                           ;os.c: 258: uint8_t temp[50];
  7991                           ;os.c: 261: TRISCbits.TRISC2 = 0;
  7992  00EA5C  9494               	bcf	3988,2,c	;volatile
  7993                           
  7994                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  7995  00EA5E  9095               	bcf	3989,0,c	;volatile
  7996                           
  7997                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  7998  00EA60  9695               	bcf	3989,3,c	;volatile
  7999                           
  8000                           ;os.c: 265: LATDbits.LD3 = 0;
  8001  00EA62  968C               	bcf	3980,3,c	;volatile
  8002                           
  8003                           ;os.c: 268: LATDbits.LD1 = 0;
  8004  00EA64  928C               	bcf	3980,1,c	;volatile
  8005                           
  8006                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  8007  00EA66  9295               	bcf	3989,1,c	;volatile
  8008                           
  8009                           ;os.c: 272: LATBbits.LB1 = 0;
  8010  00EA68  928A               	bcf	3978,1,c	;volatile
  8011                           
  8012                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  8013  00EA6A  9293               	bcf	3987,1,c	;volatile
  8014                           
  8015                           ;os.c: 274: LATBbits.LB2 = 0;
  8016  00EA6C  948A               	bcf	3978,2,c	;volatile
  8017                           
  8018                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  8019  00EA6E  9493               	bcf	3987,2,c	;volatile
  8020                           
  8021                           ;os.c: 276: LATBbits.LB3 = 0;
  8022  00EA70  968A               	bcf	3978,3,c	;volatile
  8023                           
  8024                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  8025  00EA72  9693               	bcf	3987,3,c	;volatile
  8026                           
  8027                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  8028  00EA74  8C95               	bsf	3989,6,c	;volatile
  8029                           
  8030                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  8031  00EA76  9895               	bcf	3989,4,c	;volatile
  8032                           
  8033                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  8034  00EA78  9A95               	bcf	3989,5,c	;volatile
  8035                           
  8036                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  8037  00EA7A  9E95               	bcf	3989,7,c	;volatile
  8038                           
  8039                           ;os.c: 285: LATDbits.LD7 = 1;
  8040  00EA7C  8E8C               	bsf	3980,7,c	;volatile
  8041                           
  8042                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  8043  00EA7E  8692               	bsf	3986,3,c	;volatile
  8044                           
  8045                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  8046  00EA80  010F               	movlb	15	; () banked
  8047  00EA82  9748               	bcf	72,3,b	;volatile
  8048                           
  8049                           ; BSR set to: 15
  8050                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  8051  00EA84  8093               	bsf	3987,0,c	;volatile
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  8055  00EA86  9949               	bcf	73,4,b	;volatile
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  8059  00EA88  8292               	bsf	3986,1,c	;volatile
  8060                           
  8061                           ; BSR set to: 15
  8062                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  8063  00EA8A  9348               	bcf	72,1,b	;volatile
  8064                           
  8065                           ; BSR set to: 15
  8066                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  8067  00EA8C  8492               	bsf	3986,2,c	;volatile
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  8071  00EA8E  9548               	bcf	72,2,b	;volatile
  8072                           
  8073                           ; BSR set to: 15
  8074                           ;os.c: 298: LATCbits.LC7 = 0;
  8075  00EA90  9E8B               	bcf	3979,7,c	;volatile
  8076                           
  8077                           ; BSR set to: 15
  8078                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  8079  00EA92  9E94               	bcf	3988,7,c	;volatile
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;os.c: 300: LATEbits.LE2 = 1;
  8083  00EA94  848D               	bsf	3981,2,c	;volatile
  8084                           
  8085                           ; BSR set to: 15
  8086                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  8087  00EA96  9496               	bcf	3990,2,c	;volatile
  8088                           
  8089                           ; BSR set to: 15
  8090                           ;os.c: 302: LATEbits.LE1 = 1;
  8091  00EA98  828D               	bsf	3981,1,c	;volatile
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  8095  00EA9A  9296               	bcf	3990,1,c	;volatile
  8096                           
  8097                           ; BSR set to: 15
  8098                           ;os.c: 304: LATEbits.LE0 = 1;
  8099  00EA9C  808D               	bsf	3981,0,c	;volatile
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  8103  00EA9E  9096               	bcf	3990,0,c	;volatile
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;os.c: 306: LATAbits.LA5 = 1;
  8107  00EAA0  8A89               	bsf	3977,5,c	;volatile
  8108                           
  8109                           ; BSR set to: 15
  8110                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  8111  00EAA2  9A92               	bcf	3986,5,c	;volatile
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  8115  00EAA4  8092               	bsf	3986,0,c	;volatile
  8116                           
  8117                           ; BSR set to: 15
  8118                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  8119  00EAA6  8148               	bsf	72,0,b	;volatile
  8120                           
  8121                           ; BSR set to: 15
  8122                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  8123  00EAA8  8C93               	bsf	3987,6,c	;volatile
  8124                           
  8125                           ; BSR set to: 15
  8126                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  8127  00EAAA  8E93               	bsf	3987,7,c	;volatile
  8128                           
  8129                           ; BSR set to: 15
  8130                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  8131  00EAAC  0E02               	movlw	2
  8132  00EAAE  0102               	movlb	2	; () banked
  8133  00EAB0  6F00               	movwf	_os& (0+255),b	;volatile
  8134                           
  8135                           ; BSR set to: 2
  8136                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  8137  00EAB2  0E01               	movlw	1
  8138  00EAB4  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8139                           
  8140                           ; BSR set to: 2
  8141                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  8142  00EAB6  0E00               	movlw	0
  8143  00EAB8  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8144                           
  8145                           ; BSR set to: 2
  8146                           ;os.c: 336: os.buckDutyCycle = 0;
  8147  00EABA  0E00               	movlw	0
  8148  00EABC  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8149                           
  8150                           ; BSR set to: 2
  8151                           ;os.c: 337: os.buckLastStep = -1;
  8152  00EABE  6904               	setf	(_os+4)& (0+255),b	;volatile
  8153                           
  8154                           ; BSR set to: 2
  8155                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8156  00EAC0  0E00               	movlw	0
  8157  00EAC2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8158                           
  8159                           ; BSR set to: 2
  8160                           ;os.c: 341: os.output_voltage = 13000;
  8161  00EAC4  0E32               	movlw	50
  8162  00EAC6  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8163  00EAC8  0EC8               	movlw	200
  8164  00EACA  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8165                           
  8166                           ; BSR set to: 2
  8167                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8168  00EACC  909E               	bcf	3998,0,c	;volatile
  8169                           
  8170                           ; BSR set to: 2
  8171                           ;os.c: 347: TMR1H = 0xFC;
  8172  00EACE  0EFC               	movlw	252
  8173  00EAD0  6ECF               	movwf	4047,c	;volatile
  8174                           
  8175                           ; BSR set to: 2
  8176                           ;os.c: 348: TMR1L = 0x00;
  8177  00EAD2  0E00               	movlw	0
  8178  00EAD4  6ECE               	movwf	4046,c	;volatile
  8179                           
  8180                           ; BSR set to: 2
  8181                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8182  00EAD6  80CD               	bsf	4045,0,c	;volatile
  8183                           
  8184                           ; BSR set to: 2
  8185                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8186  00EAD8  86CD               	bsf	4045,3,c	;volatile
  8187  00EADA                     
  8188                           ; BSR set to: 2
  8189  00EADA  A09E               	btfss	3998,0,c	;volatile
  8190  00EADC  D7FE               	goto	l1391
  8191                           
  8192                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8193  00EADE  90CD               	bcf	4045,0,c	;volatile
  8194                           
  8195                           ;os.c: 359: i2c_init();
  8196  00EAE0  EC65  F097         	call	_i2c_init	;wreg free
  8197                           
  8198                           ;os.c: 361: ui_init();
  8199  00EAE4  ECCE  F096         	call	_ui_init	;wreg free
  8200                           
  8201                           ;os.c: 364: adc_init();
  8202  00EAE8  ECEF  F095         	call	_adc_init	;wreg free
  8203                           
  8204                           ;os.c: 367: rtcc_init();
  8205  00EAEC  EC19  F096         	call	_rtcc_init	;wreg free
  8206                           
  8207                           ;os.c: 370: i2c_eeprom_read_calibration();
  8208  00EAF0  EC4D  F071         	call	_i2c_eeprom_read_calibration	;wreg free
  8209                           
  8210                           ;os.c: 385: _system_timer0_init();
  8211  00EAF4  EC7B  F091         	call	__system_timer0_init	;wreg free
  8212                           
  8213                           ;os.c: 394: _system_encoder_init();
  8214  00EAF8  EC9B  F091         	call	__system_encoder_init	;wreg free
  8215                           
  8216                           ;os.c: 396: flash_init();
  8217  00EAFC  EC39  F091         	call	_flash_init	;wreg free
  8218                           
  8219                           ;os.c: 430: buck_init();
  8220  00EB00  ECF3  F096         	call	_buck_init	;wreg free
  8221                           
  8222                           ;os.c: 433: log_start_new();
  8223  00EB04  EC0F  F07C         	call	_log_start_new	;wreg free
  8224  00EB08  0012               	return		;funcret
  8225  00EB0A                     __end_of_system_init:
  8226                           	opt stack 0
  8227                           tblptru	equ	0xFF8
  8228                           tblptrh	equ	0xFF7
  8229                           tblptrl	equ	0xFF6
  8230                           tablat	equ	0xFF5
  8231                           intcon3	equ	0xFF0
  8232                           postinc0	equ	0xFEE
  8233                           wreg	equ	0xFE8
  8234                           postdec1	equ	0xFE5
  8235                           plusw1	equ	0xFE3
  8236                           fsr1h	equ	0xFE2
  8237                           fsr1l	equ	0xFE1
  8238                           postinc2	equ	0xFDE
  8239                           postdec2	equ	0xFDD
  8240                           plusw2	equ	0xFDB
  8241                           fsr2h	equ	0xFDA
  8242                           fsr2l	equ	0xFD9
  8243                           status	equ	0xFD8
  8244                           
  8245 ;; *************** function _ui_init *****************
  8246 ;; Defined at:
  8247 ;;		line 325 in file "ui.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;		None
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;		None
  8252 ;; Return value:  Size  Location     Type
  8253 ;;                  1    wreg      void 
  8254 ;; Registers used:
  8255 ;;		wreg, status,2
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;Total ram usage:        0 bytes
  8266 ;; Hardware stack levels used:    1
  8267 ;; Hardware stack levels required when called:   10
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_system_init
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text25
  8276  012D9C                     __ptext25:
  8277                           	opt stack 0
  8278  012D9C                     _ui_init:
  8279                           	opt stack 19
  8280                           
  8281                           ;ui.c: 327: system_ui_inactive_count = 0;
  8282                           
  8283                           ;incstack = 0
  8284  012D9C  0E00               	movlw	0
  8285  012D9E  0102               	movlb	2	; () banked
  8286  012DA0  6FB3               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8287  012DA2  0E00               	movlw	0
  8288  012DA4  6FB2               	movwf	_system_ui_inactive_count& (0+255),b
  8289                           
  8290                           ; BSR set to: 2
  8291                           ;ui.c: 329: LATCbits.LC2 = 1;
  8292  012DA6  848B               	bsf	3979,2,c	;volatile
  8293                           
  8294                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8295  012DA8  0E01               	movlw	1
  8296  012DAA  0101               	movlb	1	; () banked
  8297  012DAC  6FEF               	movwf	_userInterfaceStatus& (0+255),b
  8298                           
  8299                           ; BSR set to: 1
  8300  012DAE  0012               	return		;funcret
  8301  012DB0                     __end_of_ui_init:
  8302                           	opt stack 0
  8303                           tblptru	equ	0xFF8
  8304                           tblptrh	equ	0xFF7
  8305                           tblptrl	equ	0xFF6
  8306                           tablat	equ	0xFF5
  8307                           intcon3	equ	0xFF0
  8308                           postinc0	equ	0xFEE
  8309                           wreg	equ	0xFE8
  8310                           postdec1	equ	0xFE5
  8311                           plusw1	equ	0xFE3
  8312                           fsr1h	equ	0xFE2
  8313                           fsr1l	equ	0xFE1
  8314                           postinc2	equ	0xFDE
  8315                           postdec2	equ	0xFDD
  8316                           plusw2	equ	0xFDB
  8317                           fsr2h	equ	0xFDA
  8318                           fsr2l	equ	0xFD9
  8319                           status	equ	0xFD8
  8320                           
  8321 ;; *************** function _rtcc_init *****************
  8322 ;; Defined at:
  8323 ;;		line 105 in file "rtcc.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:   15
  8344 ;; This function calls:
  8345 ;;		_rtcc_read_eeprom
  8346 ;; This function is called by:
  8347 ;;		_system_init
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text26
  8352  012C32                     __ptext26:
  8353                           	opt stack 0
  8354  012C32                     _rtcc_init:
  8355                           	opt stack 14
  8356                           
  8357                           ;rtcc.c: 107: EECON2 = 0x55;
  8358                           
  8359                           ; BSR set to: 1
  8360                           ;incstack = 0
  8361  012C32  0E55               	movlw	85
  8362  012C34  6EA7               	movwf	4007,c	;volsfr
  8363                           
  8364                           ;rtcc.c: 108: EECON2 = 0xAA;
  8365  012C36  0EAA               	movlw	170
  8366  012C38  6EA7               	movwf	4007,c	;volsfr
  8367                           
  8368                           ;rtcc.c: 109: RTCCFGbits.RTCWREN = 1;
  8369  012C3A  010F               	movlb	15	; () banked
  8370  012C3C  8B3F               	bsf	63,5,b	;volatile
  8371                           
  8372                           ; BSR set to: 15
  8373                           ;rtcc.c: 110: RTCCFGbits.RTCEN = 1;
  8374  012C3E  8F3F               	bsf	63,7,b	;volatile
  8375                           
  8376                           ; BSR set to: 15
  8377                           ;rtcc.c: 111: RTCCFGbits.RTCOE = 0;
  8378  012C40  953F               	bcf	63,2,b	;volatile
  8379                           
  8380                           ;rtcc.c: 112: RTCCAL = 0x00;
  8381  012C42  0E00               	movlw	0
  8382  012C44  6F3E               	movwf	62,b	;volatile
  8383                           
  8384                           ; BSR set to: 15
  8385                           ;rtcc.c: 115: rtcc_read_eeprom();
  8386  012C46  ECBB  F06D         	call	_rtcc_read_eeprom	;wreg free
  8387  012C4A  0012               	return		;funcret
  8388  012C4C                     __end_of_rtcc_init:
  8389                           	opt stack 0
  8390                           tblptru	equ	0xFF8
  8391                           tblptrh	equ	0xFF7
  8392                           tblptrl	equ	0xFF6
  8393                           tablat	equ	0xFF5
  8394                           intcon3	equ	0xFF0
  8395                           postinc0	equ	0xFEE
  8396                           wreg	equ	0xFE8
  8397                           postdec1	equ	0xFE5
  8398                           plusw1	equ	0xFE3
  8399                           fsr1h	equ	0xFE2
  8400                           fsr1l	equ	0xFE1
  8401                           postinc2	equ	0xFDE
  8402                           postdec2	equ	0xFDD
  8403                           plusw2	equ	0xFDB
  8404                           fsr2h	equ	0xFDA
  8405                           fsr2l	equ	0xFD9
  8406                           status	equ	0xFD8
  8407                           
  8408 ;; *************** function _rtcc_read_eeprom *****************
  8409 ;; Defined at:
  8410 ;;		line 354 in file "rtcc.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  date            6   44[BANK0 ] unsigned char [6]
  8415 ;;  buffer          1   50[BANK0 ] unsigned char 
  8416 ;;  error_found     1   43[BANK0 ] unsigned char 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8427 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8429 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8430 ;;Total ram usage:        8 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:   14
  8433 ;; This function calls:
  8434 ;;		__rtcc_verify_bcd
  8435 ;;		_i2c_eeprom_read
  8436 ;;		_rtcc_correct_day
  8437 ;;		_rtcc_get_day
  8438 ;;		_rtcc_set_day
  8439 ;;		_rtcc_set_hours
  8440 ;;		_rtcc_set_minutes
  8441 ;;		_rtcc_set_month
  8442 ;;		_rtcc_set_seconds
  8443 ;;		_rtcc_set_year
  8444 ;;		_rtcc_write_eeprom
  8445 ;; This function is called by:
  8446 ;;		_rtcc_init
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text27
  8451  00DB76                     __ptext27:
  8452                           	opt stack 0
  8453  00DB76                     _rtcc_read_eeprom:
  8454                           	opt stack 14
  8455                           
  8456                           ;rtcc.c: 356: uint8_t date[6];
  8457                           ;rtcc.c: 357: uint8_t buffer;
  8458                           ;rtcc.c: 358: uint8_t error_found = 0;
  8459                           
  8460                           ;incstack = 0
  8461  00DB76  0E00               	movlw	0
  8462  00DB78  0100               	movlb	0	; () banked
  8463  00DB7A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;rtcc.c: 361: i2c_eeprom_read(0x040, &date[0], 6);
  8467  00DB7C  0E00               	movlw	0
  8468  00DB7E  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8469  00DB80  0E40               	movlw	64
  8470  00DB82  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8471  00DB84  0E8C               	movlw	low rtcc_read_eeprom@date
  8472  00DB86  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8473  00DB88  0E00               	movlw	high rtcc_read_eeprom@date
  8474  00DB8A  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8475  00DB8C  0E06               	movlw	6
  8476  00DB8E  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8477  00DB90  EC89  F08E         	call	_i2c_eeprom_read	;wreg free
  8478                           
  8479                           ;rtcc.c: 367: buffer = _rtcc_verify_bcd(date[0], 0x00, 0x99);
  8480  00DB94  0E00               	movlw	0
  8481  00DB96  0100               	movlb	0	; () banked
  8482  00DB98  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8483  00DB9A  0E99               	movlw	153
  8484  00DB9C  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8485  00DB9E  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8486  00DBA0  ECB0  F090         	call	__rtcc_verify_bcd
  8487  00DBA4  0100               	movlb	0	; () banked
  8488  00DBA6  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;rtcc.c: 368: if(buffer != date[0])
  8492  00DBA8  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8493  00DBAA  198C               	xorwf	rtcc_read_eeprom@date& (0+255),w,b
  8494  00DBAC  B4D8               	btfsc	status,2,c
  8495  00DBAE  D004               	goto	l2396
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;rtcc.c: 369: {
  8499                           ;rtcc.c: 370: date[0] = buffer;
  8500  00DBB0  C092  F08C         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;rtcc.c: 371: error_found = 1;
  8504  00DBB4  0E01               	movlw	1
  8505  00DBB6  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8506  00DBB8                     l2396:
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;rtcc.c: 372: }
  8510                           ;rtcc.c: 373: rtcc_set_year(date[0]);
  8511                           
  8512                           ; BSR set to: 0
  8513  00DBB8  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8514  00DBBA  EC58  F096         	call	_rtcc_set_year
  8515                           
  8516                           ;rtcc.c: 376: buffer = _rtcc_verify_bcd(date[1], 0x01, 0x12);
  8517  00DBBE  0E01               	movlw	1
  8518  00DBC0  0100               	movlb	0	; () banked
  8519  00DBC2  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8520  00DBC4  0E12               	movlw	18
  8521  00DBC6  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8522  00DBC8  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8523  00DBCA  ECB0  F090         	call	__rtcc_verify_bcd
  8524  00DBCE  0100               	movlb	0	; () banked
  8525  00DBD0  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8526                           
  8527                           ;rtcc.c: 377: if(buffer != date[1])
  8528  00DBD2  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8529  00DBD4  198D               	xorwf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8530  00DBD6  B4D8               	btfsc	status,2,c
  8531  00DBD8  D004               	goto	l2397
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;rtcc.c: 378: {
  8535                           ;rtcc.c: 379: date[1] = buffer;
  8536  00DBDA  C092  F08D         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+1
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;rtcc.c: 380: error_found = 1;
  8540  00DBDE  0E01               	movlw	1
  8541  00DBE0  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8542  00DBE2                     l2397:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;rtcc.c: 381: }
  8546                           ;rtcc.c: 382: rtcc_set_month(date[1]);
  8547                           
  8548                           ; BSR set to: 0
  8549  00DBE2  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8550  00DBE4  EC70  F096         	call	_rtcc_set_month
  8551                           
  8552                           ;rtcc.c: 385: buffer = _rtcc_verify_bcd(date[2], 0x01, 0x31);
  8553  00DBE8  0E01               	movlw	1
  8554  00DBEA  0100               	movlb	0	; () banked
  8555  00DBEC  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8556  00DBEE  0E31               	movlw	49
  8557  00DBF0  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8558  00DBF2  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8559  00DBF4  ECB0  F090         	call	__rtcc_verify_bcd
  8560  00DBF8  0100               	movlb	0	; () banked
  8561  00DBFA  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8562                           
  8563                           ;rtcc.c: 386: if(buffer != date[2])
  8564  00DBFC  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8565  00DBFE  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8566  00DC00  B4D8               	btfsc	status,2,c
  8567  00DC02  D004               	goto	l2398
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;rtcc.c: 387: {
  8571                           ;rtcc.c: 388: date[2] = buffer;
  8572  00DC04  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;rtcc.c: 389: error_found = 1;
  8576  00DC08  0E01               	movlw	1
  8577  00DC0A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8578  00DC0C                     l2398:
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;rtcc.c: 390: }
  8582                           ;rtcc.c: 391: rtcc_set_day(date[2]);
  8583                           
  8584                           ; BSR set to: 0
  8585  00DC0C  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8586  00DC0E  EC94  F096         	call	_rtcc_set_day
  8587                           
  8588                           ;rtcc.c: 394: rtcc_correct_day();
  8589  00DC12  ECC0  F095         	call	_rtcc_correct_day	;wreg free
  8590                           
  8591                           ;rtcc.c: 395: buffer = rtcc_get_day();
  8592  00DC16  EC5E  F097         	call	_rtcc_get_day	;wreg free
  8593  00DC1A  0100               	movlb	0	; () banked
  8594  00DC1C  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;rtcc.c: 396: if(buffer != date[2])
  8598  00DC1E  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8599  00DC20  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8600  00DC22  B4D8               	btfsc	status,2,c
  8601  00DC24  D004               	goto	l2399
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;rtcc.c: 397: {
  8605                           ;rtcc.c: 398: date[2] = buffer;
  8606  00DC26  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;rtcc.c: 399: error_found = 1;
  8610  00DC2A  0E01               	movlw	1
  8611  00DC2C  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8612  00DC2E                     l2399:
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;rtcc.c: 400: }
  8616                           ;rtcc.c: 403: buffer = _rtcc_verify_bcd(date[3], 0x00, 0x23);
  8617                           
  8618                           ; BSR set to: 0
  8619  00DC2E  0E00               	movlw	0
  8620  00DC30  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8621  00DC32  0E23               	movlw	35
  8622  00DC34  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8623  00DC36  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8624  00DC38  ECB0  F090         	call	__rtcc_verify_bcd
  8625  00DC3C  0100               	movlb	0	; () banked
  8626  00DC3E  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;rtcc.c: 404: if(buffer != date[3])
  8630  00DC40  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8631  00DC42  198F               	xorwf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8632  00DC44  B4D8               	btfsc	status,2,c
  8633  00DC46  D004               	goto	l2400
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;rtcc.c: 405: {
  8637                           ;rtcc.c: 406: date[3] = buffer;
  8638  00DC48  C092  F08F         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+3
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;rtcc.c: 407: error_found = 1;
  8642  00DC4C  0E01               	movlw	1
  8643  00DC4E  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8644  00DC50                     l2400:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;rtcc.c: 408: }
  8648                           ;rtcc.c: 409: rtcc_set_hours(date[3]);
  8649                           
  8650                           ; BSR set to: 0
  8651  00DC50  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8652  00DC52  EC88  F096         	call	_rtcc_set_hours
  8653                           
  8654                           ;rtcc.c: 412: buffer = _rtcc_verify_bcd(date[4], 0x00, 0x59);
  8655  00DC56  0E00               	movlw	0
  8656  00DC58  0100               	movlb	0	; () banked
  8657  00DC5A  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8658  00DC5C  0E59               	movlw	89
  8659  00DC5E  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8660  00DC60  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8661  00DC62  ECB0  F090         	call	__rtcc_verify_bcd
  8662  00DC66  0100               	movlb	0	; () banked
  8663  00DC68  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8664                           
  8665                           ;rtcc.c: 413: if(buffer != date[4])
  8666  00DC6A  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8667  00DC6C  1990               	xorwf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8668  00DC6E  B4D8               	btfsc	status,2,c
  8669  00DC70  D004               	goto	l2401
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;rtcc.c: 414: {
  8673                           ;rtcc.c: 415: date[4] = buffer;
  8674  00DC72  C092  F090         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+4
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;rtcc.c: 416: error_found = 1;
  8678  00DC76  0E01               	movlw	1
  8679  00DC78  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8680  00DC7A                     l2401:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;rtcc.c: 417: }
  8684                           ;rtcc.c: 418: rtcc_set_minutes(date[4]);
  8685                           
  8686                           ; BSR set to: 0
  8687  00DC7A  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8688  00DC7C  EC7C  F096         	call	_rtcc_set_minutes
  8689                           
  8690                           ;rtcc.c: 421: buffer = _rtcc_verify_bcd(date[5], 0x00, 0x59);
  8691  00DC80  0E00               	movlw	0
  8692  00DC82  0100               	movlb	0	; () banked
  8693  00DC84  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8694  00DC86  0E59               	movlw	89
  8695  00DC88  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8696  00DC8A  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8697  00DC8C  ECB0  F090         	call	__rtcc_verify_bcd
  8698  00DC90  0100               	movlb	0	; () banked
  8699  00DC92  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8700                           
  8701                           ;rtcc.c: 422: if(buffer != date[5])
  8702  00DC94  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8703  00DC96  1991               	xorwf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8704  00DC98  B4D8               	btfsc	status,2,c
  8705  00DC9A  D004               	goto	l2402
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;rtcc.c: 423: {
  8709                           ;rtcc.c: 424: date[5] = buffer;
  8710  00DC9C  C092  F091         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+5
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;rtcc.c: 425: error_found = 1;
  8714  00DCA0  0E01               	movlw	1
  8715  00DCA2  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8716  00DCA4                     l2402:
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;rtcc.c: 426: }
  8720                           ;rtcc.c: 427: rtcc_set_seconds(date[5]);
  8721                           
  8722                           ; BSR set to: 0
  8723  00DCA4  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8724  00DCA6  EC64  F096         	call	_rtcc_set_seconds
  8725                           
  8726                           ;rtcc.c: 430: if(error_found)
  8727  00DCAA  0100               	movlb	0	; () banked
  8728  00DCAC  518B               	movf	rtcc_read_eeprom@error_found& (0+255),w,b
  8729  00DCAE  B4D8               	btfsc	status,2,c
  8730  00DCB0  0012               	return	
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;rtcc.c: 431: {
  8734                           ;rtcc.c: 432: rtcc_write_eeprom();
  8735  00DCB2  EC66  F090         	call	_rtcc_write_eeprom	;wreg free
  8736  00DCB6  0012               	return	
  8737  00DCB8                     __end_of_rtcc_read_eeprom:
  8738                           	opt stack 0
  8739                           tblptru	equ	0xFF8
  8740                           tblptrh	equ	0xFF7
  8741                           tblptrl	equ	0xFF6
  8742                           tablat	equ	0xFF5
  8743                           intcon3	equ	0xFF0
  8744                           postinc0	equ	0xFEE
  8745                           wreg	equ	0xFE8
  8746                           postdec1	equ	0xFE5
  8747                           plusw1	equ	0xFE3
  8748                           fsr1h	equ	0xFE2
  8749                           fsr1l	equ	0xFE1
  8750                           postinc2	equ	0xFDE
  8751                           postdec2	equ	0xFDD
  8752                           plusw2	equ	0xFDB
  8753                           fsr2h	equ	0xFDA
  8754                           fsr2l	equ	0xFD9
  8755                           status	equ	0xFD8
  8756                           
  8757 ;; *************** function _rtcc_correct_day *****************
  8758 ;; Defined at:
  8759 ;;		line 118 in file "rtcc.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  max             1    5[BANK0 ] unsigned char 
  8764 ;;  day             1    4[BANK0 ] unsigned char 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;Total ram usage:        2 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:   12
  8781 ;; This function calls:
  8782 ;;		__number_of_days
  8783 ;;		_rtcc_get_day
  8784 ;;		_rtcc_set_day
  8785 ;; This function is called by:
  8786 ;;		__ui_encoder
  8787 ;;		_rtcc_read_eeprom
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text28
  8792  012B80                     __ptext28:
  8793                           	opt stack 0
  8794  012B80                     _rtcc_correct_day:
  8795                           	opt stack 16
  8796                           
  8797                           ;rtcc.c: 120: uint8_t day = rtcc_get_day();
  8798                           
  8799                           ;incstack = 0
  8800  012B80  EC5E  F097         	call	_rtcc_get_day	;wreg free
  8801  012B84  0100               	movlb	0	; () banked
  8802  012B86  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;rtcc.c: 121: uint8_t max = _number_of_days();
  8806  012B88  EC2A  F08A         	call	__number_of_days	;wreg free
  8807  012B8C  0100               	movlb	0	; () banked
  8808  012B8E  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;rtcc.c: 122: if(day>max)
  8812  012B90  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  8813  012B92  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  8814  012B94  B0D8               	btfsc	status,0,c
  8815  012B96  0012               	return	
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;rtcc.c: 123: rtcc_set_day(max);
  8819  012B98  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  8820  012B9A  EC94  F096         	call	_rtcc_set_day
  8821  012B9E  0012               	return	
  8822  012BA0                     __end_of_rtcc_correct_day:
  8823                           	opt stack 0
  8824                           tblptru	equ	0xFF8
  8825                           tblptrh	equ	0xFF7
  8826                           tblptrl	equ	0xFF6
  8827                           tablat	equ	0xFF5
  8828                           intcon3	equ	0xFF0
  8829                           postinc0	equ	0xFEE
  8830                           wreg	equ	0xFE8
  8831                           postdec1	equ	0xFE5
  8832                           plusw1	equ	0xFE3
  8833                           fsr1h	equ	0xFE2
  8834                           fsr1l	equ	0xFE1
  8835                           postinc2	equ	0xFDE
  8836                           postdec2	equ	0xFDD
  8837                           plusw2	equ	0xFDB
  8838                           fsr2h	equ	0xFDA
  8839                           fsr2l	equ	0xFD9
  8840                           status	equ	0xFD8
  8841                           
  8842 ;; *************** function __number_of_days *****************
  8843 ;; Defined at:
  8844 ;;		line 60 in file "rtcc.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  month           1    3[BANK0 ] unsigned char 
  8849 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  8850 ;;  year            1    1[BANK0 ] unsigned char 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      unsigned char 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;Total ram usage:        4 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:   11
  8867 ;; This function calls:
  8868 ;;		_rtcc_get_month
  8869 ;;		_rtcc_get_year
  8870 ;; This function is called by:
  8871 ;;		_rtcc_correct_day
  8872 ;;		_rtcc_increment_day
  8873 ;;		_rtcc_decrement_day
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text29
  8878  011454                     __ptext29:
  8879                           	opt stack 0
  8880  011454                     __number_of_days:
  8881                           	opt stack 16
  8882                           
  8883                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  8884                           
  8885                           ;incstack = 0
  8886  011454  EC49  F097         	call	_rtcc_get_month	;wreg free
  8887  011458  0100               	movlb	0	; () banked
  8888  01145A  6F63               	movwf	__number_of_days@month& (0+255),b
  8889                           
  8890                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  8891  01145C  EC3B  F097         	call	_rtcc_get_year	;wreg free
  8892  011460  0100               	movlb	0	; () banked
  8893  011462  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;rtcc.c: 64: uint8_t year;
  8897                           ;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || month==0x11)
  8898  011464  0E04               	movlw	4
  8899  011466  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8900  011468  B4D8               	btfsc	status,2,c
  8901  01146A  D00C               	goto	u10330
  8902                           
  8903                           ; BSR set to: 0
  8904  01146C  0E06               	movlw	6
  8905  01146E  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8906  011470  B4D8               	btfsc	status,2,c
  8907  011472  D008               	goto	u10330
  8908                           
  8909                           ; BSR set to: 0
  8910  011474  0E09               	movlw	9
  8911  011476  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8912  011478  B4D8               	btfsc	status,2,c
  8913  01147A  D004               	goto	u10330
  8914                           
  8915                           ; BSR set to: 0
  8916  01147C  0E11               	movlw	17
  8917  01147E  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8918  011480  A4D8               	btfss	status,2,c
  8919  011482  D002               	goto	l2265
  8920  011484                     u10330:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;rtcc.c: 66: return 0x30;
  8924                           
  8925                           ; BSR set to: 0
  8926  011484  0E30               	movlw	48
  8927                           
  8928                           ; BSR set to: 0
  8929  011486  0012               	return	
  8930  011488                     l2265:
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;rtcc.c: 67: if(month==0x02)
  8934                           
  8935                           ; BSR set to: 0
  8936  011488  0E02               	movlw	2
  8937  01148A  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8938  01148C  A4D8               	btfss	status,2,c
  8939  01148E  D014               	goto	l2271
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;rtcc.c: 68: {
  8943                           ;rtcc.c: 69: year = bcd_year>>4;
  8944  011490  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  8945  011492  0B0F               	andlw	15
  8946  011494  6F61               	movwf	__number_of_days@year& (0+255),b
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;rtcc.c: 70: year *= 10;
  8950  011496  0E0A               	movlw	10
  8951  011498  0361               	mulwf	__number_of_days@year& (0+255),b
  8952  01149A  50F3               	movf	prodl,w,c
  8953  01149C  6F61               	movwf	__number_of_days@year& (0+255),b
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  8957  01149E  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  8958  0114A0  0B0F               	andlw	15
  8959  0114A2  2761               	addwf	__number_of_days@year& (0+255),f,b
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;rtcc.c: 72: if(year&0b11)
  8963  0114A4  C061  F060         	movff	__number_of_days@year,??__number_of_days
  8964  0114A8  0E03               	movlw	3
  8965  0114AA  1760               	andwf	??__number_of_days& (0+255),f,b
  8966  0114AC  B4D8               	btfsc	status,2,c
  8967  0114AE  D002               	goto	l2270
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;rtcc.c: 73: return 0x28;
  8971  0114B0  0E28               	movlw	40
  8972                           
  8973                           ; BSR set to: 0
  8974  0114B2  0012               	return	
  8975  0114B4                     l2270:
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;rtcc.c: 74: else
  8979                           ;rtcc.c: 75: return 0x29;
  8980                           
  8981                           ; BSR set to: 0
  8982  0114B4  0E29               	movlw	41
  8983                           
  8984                           ; BSR set to: 0
  8985  0114B6  0012               	return	
  8986  0114B8                     l2271:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;rtcc.c: 76: }
  8990                           ;rtcc.c: 77: return 0x31;
  8991                           
  8992                           ; BSR set to: 0
  8993                           
  8994                           ; BSR set to: 0
  8995  0114B8  0E31               	movlw	49
  8996  0114BA  0012               	return	
  8997  0114BC                     __end_of__number_of_days:
  8998                           	opt stack 0
  8999                           tblptru	equ	0xFF8
  9000                           tblptrh	equ	0xFF7
  9001                           tblptrl	equ	0xFF6
  9002                           tablat	equ	0xFF5
  9003                           prodl	equ	0xFF3
  9004                           intcon3	equ	0xFF0
  9005                           postinc0	equ	0xFEE
  9006                           wreg	equ	0xFE8
  9007                           postdec1	equ	0xFE5
  9008                           plusw1	equ	0xFE3
  9009                           fsr1h	equ	0xFE2
  9010                           fsr1l	equ	0xFE1
  9011                           postinc2	equ	0xFDE
  9012                           postdec2	equ	0xFDD
  9013                           plusw2	equ	0xFDB
  9014                           fsr2h	equ	0xFDA
  9015                           fsr2l	equ	0xFD9
  9016                           status	equ	0xFD8
  9017                           
  9018 ;; *************** function __rtcc_verify_bcd *****************
  9019 ;; Defined at:
  9020 ;;		line 80 in file "rtcc.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  value           1    wreg     unsigned char 
  9023 ;;  min             1    0[BANK0 ] unsigned char 
  9024 ;;  max             1    1[BANK0 ] unsigned char 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  value           1    3[BANK0 ] unsigned char 
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      unsigned char 
  9029 ;; Registers used:
  9030 ;;		wreg, status,2, status,0
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9039 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9040 ;;Total ram usage:        4 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:   10
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_rtcc_read_eeprom
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text30
  9051  012160                     __ptext30:
  9052                           	opt stack 0
  9053  012160                     __rtcc_verify_bcd:
  9054                           	opt stack 17
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;incstack = 0
  9058                           ;__rtcc_verify_bcd@value stored from wreg
  9059  012160  0100               	movlb	0	; () banked
  9060  012162  6F63               	movwf	__rtcc_verify_bcd@value& (0+255),b
  9061                           
  9062                           ;rtcc.c: 83: if((value&0x0F)>0x09)
  9063  012164  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9064  012168  0E0F               	movlw	15
  9065  01216A  0100               	movlb	0	; () banked
  9066  01216C  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9067  01216E  0E09               	movlw	9
  9068  012170  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9069  012172  D002               	goto	l2274
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;rtcc.c: 84: {
  9073                           ;rtcc.c: 85: return min;
  9074  012174  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9075                           
  9076                           ; BSR set to: 0
  9077  012176  0012               	return	
  9078  012178                     l2274:
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;rtcc.c: 86: }
  9082                           ;rtcc.c: 87: if((value&0xF0)>0x90)
  9083                           
  9084                           ; BSR set to: 0
  9085  012178  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9086  01217C  0EF0               	movlw	240
  9087  01217E  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9088  012180  0E90               	movlw	144
  9089  012182  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9090  012184  D002               	goto	l2276
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;rtcc.c: 88: {
  9094                           ;rtcc.c: 89: return min;
  9095  012186  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9096                           
  9097                           ; BSR set to: 0
  9098  012188  0012               	return	
  9099  01218A                     l2276:
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;rtcc.c: 90: }
  9103                           ;rtcc.c: 92: if(value<min)
  9104                           
  9105                           ; BSR set to: 0
  9106  01218A  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9107  01218C  5D63               	subwf	__rtcc_verify_bcd@value& (0+255),w,b
  9108  01218E  B0D8               	btfsc	status,0,c
  9109  012190  D002               	goto	l2277
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;rtcc.c: 93: {
  9113                           ;rtcc.c: 94: return min;
  9114  012192  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9115                           
  9116                           ; BSR set to: 0
  9117  012194  0012               	return	
  9118  012196                     l2277:
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;rtcc.c: 95: }
  9122                           ;rtcc.c: 96: if(value>max)
  9123                           
  9124                           ; BSR set to: 0
  9125  012196  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9126  012198  5D61               	subwf	__rtcc_verify_bcd@max& (0+255),w,b
  9127  01219A  B0D8               	btfsc	status,0,c
  9128  01219C  D002               	goto	l2278
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;rtcc.c: 97: {
  9132                           ;rtcc.c: 98: return max;
  9133  01219E  5161               	movf	__rtcc_verify_bcd@max& (0+255),w,b
  9134                           
  9135                           ; BSR set to: 0
  9136  0121A0  0012               	return	
  9137  0121A2                     l2278:
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;rtcc.c: 99: }
  9141                           ;rtcc.c: 101: return value;
  9142                           
  9143                           ; BSR set to: 0
  9144  0121A2  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9145  0121A4  0012               	return	
  9146  0121A6                     __end_of__rtcc_verify_bcd:
  9147                           	opt stack 0
  9148                           tblptru	equ	0xFF8
  9149                           tblptrh	equ	0xFF7
  9150                           tblptrl	equ	0xFF6
  9151                           tablat	equ	0xFF5
  9152                           prodl	equ	0xFF3
  9153                           intcon3	equ	0xFF0
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           postdec1	equ	0xFE5
  9157                           plusw1	equ	0xFE3
  9158                           fsr1h	equ	0xFE2
  9159                           fsr1l	equ	0xFE1
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           plusw2	equ	0xFDB
  9163                           fsr2h	equ	0xFDA
  9164                           fsr2l	equ	0xFD9
  9165                           status	equ	0xFD8
  9166                           
  9167 ;; *************** function _log_start_new *****************
  9168 ;; Defined at:
  9169 ;;		line 71 in file "log.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;		None
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;Total ram usage:        0 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:   12
  9190 ;; This function calls:
  9191 ;;		_rtcc_get_seconds_decimal
  9192 ;; This function is called by:
  9193 ;;		_main
  9194 ;;		_system_init
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text31
  9199  00F81E                     __ptext31:
  9200                           	opt stack 0
  9201  00F81E                     _log_start_new:
  9202                           	opt stack 17
  9203                           
  9204                           ;log.c: 73: inputVoltageSum = 0;
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;incstack = 0
  9208  00F81E  0E00               	movlw	0
  9209  00F820  0102               	movlb	2	; () banked
  9210  00F822  6F9A               	movwf	_inputVoltageSum& (0+255),b
  9211  00F824  0E00               	movlw	0
  9212  00F826  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  9213  00F828  0E00               	movlw	0
  9214  00F82A  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  9215  00F82C  0E00               	movlw	0
  9216  00F82E  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  9217                           
  9218                           ;log.c: 74: inputCurrentSum = 0;
  9219  00F830  0E00               	movlw	0
  9220  00F832  6F96               	movwf	_inputCurrentSum& (0+255),b
  9221  00F834  0E00               	movlw	0
  9222  00F836  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  9223  00F838  0E00               	movlw	0
  9224  00F83A  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  9225  00F83C  0E00               	movlw	0
  9226  00F83E  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  9227                           
  9228                           ;log.c: 75: outputVoltageSum = 0;
  9229  00F840  0E00               	movlw	0
  9230  00F842  6F92               	movwf	_outputVoltageSum& (0+255),b
  9231  00F844  0E00               	movlw	0
  9232  00F846  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  9233  00F848  0E00               	movlw	0
  9234  00F84A  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  9235  00F84C  0E00               	movlw	0
  9236  00F84E  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  9237                           
  9238                           ;log.c: 76: outputCurrentSum = 0;
  9239  00F850  0E00               	movlw	0
  9240  00F852  6F8E               	movwf	_outputCurrentSum& (0+255),b
  9241  00F854  0E00               	movlw	0
  9242  00F856  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  9243  00F858  0E00               	movlw	0
  9244  00F85A  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  9245  00F85C  0E00               	movlw	0
  9246  00F85E  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  9247                           
  9248                           ;log.c: 77: inputPowerSum = 0;
  9249  00F860  0E00               	movlw	0
  9250  00F862  6F8A               	movwf	_inputPowerSum& (0+255),b
  9251  00F864  0E00               	movlw	0
  9252  00F866  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  9253  00F868  0E00               	movlw	0
  9254  00F86A  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  9255  00F86C  0E00               	movlw	0
  9256  00F86E  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  9257                           
  9258                           ;log.c: 78: outputPowerSum = 0;
  9259  00F870  0E00               	movlw	0
  9260  00F872  6F86               	movwf	_outputPowerSum& (0+255),b
  9261  00F874  0E00               	movlw	0
  9262  00F876  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  9263  00F878  0E00               	movlw	0
  9264  00F87A  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  9265  00F87C  0E00               	movlw	0
  9266  00F87E  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  9267                           
  9268                           ;log.c: 79: inputCapacitySum = 0;
  9269  00F880  0E00               	movlw	0
  9270  00F882  6F82               	movwf	_inputCapacitySum& (0+255),b
  9271  00F884  0E00               	movlw	0
  9272  00F886  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  9273  00F888  0E00               	movlw	0
  9274  00F88A  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  9275  00F88C  0E00               	movlw	0
  9276  00F88E  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  9277                           
  9278                           ;log.c: 80: outputCapacitySum = 0;
  9279  00F890  0E00               	movlw	0
  9280  00F892  6F7E               	movwf	_outputCapacitySum& (0+255),b
  9281  00F894  0E00               	movlw	0
  9282  00F896  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  9283  00F898  0E00               	movlw	0
  9284  00F89A  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  9285  00F89C  0E00               	movlw	0
  9286  00F89E  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  9287                           
  9288                           ;log.c: 81: temperatureOnboardSum = 0;
  9289  00F8A0  0E00               	movlw	0
  9290  00F8A2  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  9291  00F8A4  0E00               	movlw	0
  9292  00F8A6  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9293  00F8A8  0E00               	movlw	0
  9294  00F8AA  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9295  00F8AC  0E00               	movlw	0
  9296  00F8AE  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9297                           
  9298                           ;log.c: 82: temperatureExternal1Sum = 0;
  9299  00F8B0  0E00               	movlw	0
  9300  00F8B2  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  9301  00F8B4  0E00               	movlw	0
  9302  00F8B6  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9303  00F8B8  0E00               	movlw	0
  9304  00F8BA  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9305  00F8BC  0E00               	movlw	0
  9306  00F8BE  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9307                           
  9308                           ;log.c: 83: temperatureExternal2Sum = 0;
  9309  00F8C0  0E00               	movlw	0
  9310  00F8C2  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  9311  00F8C4  0E00               	movlw	0
  9312  00F8C6  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9313  00F8C8  0E00               	movlw	0
  9314  00F8CA  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9315  00F8CC  0E00               	movlw	0
  9316  00F8CE  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9317                           
  9318                           ;log.c: 84: chargerOnTime = 0;
  9319  00F8D0  0E00               	movlw	0
  9320  00F8D2  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  9321  00F8D4  0E00               	movlw	0
  9322  00F8D6  6FB0               	movwf	_chargerOnTime& (0+255),b
  9323                           
  9324                           ;log.c: 85: lowPowerTime = 0;
  9325  00F8D8  0E00               	movlw	0
  9326  00F8DA  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  9327  00F8DC  0E00               	movlw	0
  9328  00F8DE  6FAE               	movwf	_lowPowerTime& (0+255),b
  9329                           
  9330                           ;log.c: 86: status = 0;
  9331  00F8E0  0E00               	movlw	0
  9332  00F8E2  0101               	movlb	1	; () banked
  9333  00F8E4  6FEC               	movwf	_status& (0+255),b
  9334                           
  9335                           ;log.c: 87: averageCount = 0;
  9336  00F8E6  0E00               	movlw	0
  9337  00F8E8  6E42               	movwf	_averageCount+1,c
  9338  00F8EA  0E00               	movlw	0
  9339  00F8EC  6E41               	movwf	_averageCount,c
  9340                           
  9341                           ; BSR set to: 1
  9342                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9343  00F8EE  EC2B  F097         	call	_rtcc_get_seconds_decimal	;wreg free
  9344  00F8F2  0101               	movlb	1	; () banked
  9345  00F8F4  6FEB               	movwf	_lastSecond& (0+255),b
  9346                           
  9347                           ; BSR set to: 1
  9348  00F8F6  0012               	return		;funcret
  9349  00F8F8                     __end_of_log_start_new:
  9350                           	opt stack 0
  9351                           tblptru	equ	0xFF8
  9352                           tblptrh	equ	0xFF7
  9353                           tblptrl	equ	0xFF6
  9354                           tablat	equ	0xFF5
  9355                           prodl	equ	0xFF3
  9356                           intcon3	equ	0xFF0
  9357                           postinc0	equ	0xFEE
  9358                           wreg	equ	0xFE8
  9359                           postdec1	equ	0xFE5
  9360                           plusw1	equ	0xFE3
  9361                           fsr1h	equ	0xFE2
  9362                           fsr1l	equ	0xFE1
  9363                           postinc2	equ	0xFDE
  9364                           postdec2	equ	0xFDD
  9365                           plusw2	equ	0xFDB
  9366                           fsr2h	equ	0xFDA
  9367                           fsr2l	equ	0xFD9
  9368                           status	equ	0xFD8
  9369                           
  9370 ;; *************** function _i2c_init *****************
  9371 ;; Defined at:
  9372 ;;		line 94 in file "i2c.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;		None
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;Total ram usage:        0 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:   11
  9393 ;; This function calls:
  9394 ;;		__i2c_open_1
  9395 ;;		_i2c_set_frequency
  9396 ;; This function is called by:
  9397 ;;		_system_init
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text32
  9402  012ECA                     __ptext32:
  9403                           	opt stack 0
  9404  012ECA                     _i2c_init:
  9405                           	opt stack 18
  9406                           
  9407                           ;i2c.c: 96: _i2c_open_1();
  9408                           
  9409                           ; BSR set to: 1
  9410                           ;incstack = 0
  9411  012ECA  EC40  F096         	call	__i2c_open_1	;wreg free
  9412                           
  9413                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9414  012ECE  0E00               	movlw	0
  9415  012ED0  ECB0  F088         	call	_i2c_set_frequency
  9416  012ED4  0012               	return		;funcret
  9417  012ED6                     __end_of_i2c_init:
  9418                           	opt stack 0
  9419                           tblptru	equ	0xFF8
  9420                           tblptrh	equ	0xFF7
  9421                           tblptrl	equ	0xFF6
  9422                           tablat	equ	0xFF5
  9423                           prodl	equ	0xFF3
  9424                           intcon3	equ	0xFF0
  9425                           postinc0	equ	0xFEE
  9426                           wreg	equ	0xFE8
  9427                           postdec1	equ	0xFE5
  9428                           plusw1	equ	0xFE3
  9429                           fsr1h	equ	0xFE2
  9430                           fsr1l	equ	0xFE1
  9431                           postinc2	equ	0xFDE
  9432                           postdec2	equ	0xFDD
  9433                           plusw2	equ	0xFDB
  9434                           fsr2h	equ	0xFDA
  9435                           fsr2l	equ	0xFD9
  9436                           status	equ	0xFD8
  9437                           
  9438 ;; *************** function __i2c_open_1 *****************
  9439 ;; Defined at:
  9440 ;;		line 33 in file "i2c.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;		None
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9458 ;;Total ram usage:        0 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:   10
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_i2c_init
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text33
  9469  012C80                     __ptext33:
  9470                           	opt stack 0
  9471  012C80                     __i2c_open_1:
  9472                           	opt stack 18
  9473                           
  9474                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9475                           
  9476                           ;incstack = 0
  9477  012C80  9EC7               	bcf	4039,7,c	;volatile
  9478                           
  9479                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9480  012C82  9CC7               	bcf	4039,6,c	;volatile
  9481                           
  9482                           ;i2c.c: 37: SSP1ADD = 29;
  9483  012C84  0E1D               	movlw	29
  9484  012C86  6EC8               	movwf	4040,c	;volatile
  9485                           
  9486                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9487  012C88  9EC6               	bcf	4038,7,c	;volatile
  9488                           
  9489                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9490  012C8A  9CC6               	bcf	4038,6,c	;volatile
  9491                           
  9492                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9493  012C8C  50C6               	movf	4038,w,c	;volatile
  9494  012C8E  0BF0               	andlw	-16
  9495  012C90  0908               	iorlw	8
  9496  012C92  6EC6               	movwf	4038,c	;volatile
  9497                           
  9498                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9499  012C94  8AC6               	bsf	4038,5,c	;volatile
  9500  012C96  0012               	return		;funcret
  9501  012C98                     __end_of__i2c_open_1:
  9502                           	opt stack 0
  9503                           tblptru	equ	0xFF8
  9504                           tblptrh	equ	0xFF7
  9505                           tblptrl	equ	0xFF6
  9506                           tablat	equ	0xFF5
  9507                           prodl	equ	0xFF3
  9508                           intcon3	equ	0xFF0
  9509                           postinc0	equ	0xFEE
  9510                           wreg	equ	0xFE8
  9511                           postdec1	equ	0xFE5
  9512                           plusw1	equ	0xFE3
  9513                           fsr1h	equ	0xFE2
  9514                           fsr1l	equ	0xFE1
  9515                           postinc2	equ	0xFDE
  9516                           postdec2	equ	0xFDD
  9517                           plusw2	equ	0xFDB
  9518                           fsr2h	equ	0xFDA
  9519                           fsr2l	equ	0xFD9
  9520                           status	equ	0xFD8
  9521                           
  9522 ;; *************** function _i2c_eeprom_read_calibration *****************
  9523 ;; Defined at:
  9524 ;;		line 579 in file "i2c.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9529 ;;  addr            2   31[BANK0 ] unsigned int 
  9530 ;;  cntr            1   33[BANK0 ] unsigned char 
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9541 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;Total ram usage:        9 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:   13
  9547 ;; This function calls:
  9548 ;;		__i2c_eeprom_load_default_calibration
  9549 ;;		_i2c_eeprom_read
  9550 ;;		_schedule_eeprom_write_task
  9551 ;; This function is called by:
  9552 ;;		_system_init
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text34
  9557  00E29A                     __ptext34:
  9558                           	opt stack 0
  9559  00E29A                     _i2c_eeprom_read_calibration:
  9560                           	opt stack 16
  9561                           
  9562                           ;i2c.c: 581: uint8_t buffer[4];
  9563                           ;i2c.c: 582: uint8_t cntr;
  9564                           ;i2c.c: 583: uint16_t addr;
  9565                           ;i2c.c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9566                           
  9567                           ;incstack = 0
  9568  00E29A  0E00               	movlw	0
  9569  00E29C  0100               	movlb	0	; () banked
  9570  00E29E  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9571  00E2A0                     l14823:
  9572                           
  9573                           ; BSR set to: 0
  9574  00E2A0  0E06               	movlw	6
  9575  00E2A2  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9576  00E2A4  D001               	goto	l1624
  9577  00E2A6  0012               	return	
  9578  00E2A8                     l1624:
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;i2c.c: 586: {
  9582                           ;i2c.c: 588: addr = 0x0200 + (cntr<<4);
  9583                           
  9584                           ; BSR set to: 0
  9585  00E2A8  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9586  00E2AA  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9587  00E2AC  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9588  00E2AE  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9589  00E2B0  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9590  00E2B2  0EF0               	movlw	240
  9591  00E2B4  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9592  00E2B6  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9593  00E2B8  0B0F               	andlw	15
  9594  00E2BA  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9595  00E2BC  0EF0               	movlw	240
  9596  00E2BE  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9597  00E2C0  0E00               	movlw	0
  9598  00E2C2  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9599  00E2C4  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9600  00E2C6  0E02               	movlw	2
  9601  00E2C8  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9602  00E2CA  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9606  00E2CC  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9607  00E2D0  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9608  00E2D4  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9609  00E2D6  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9610  00E2D8  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9611  00E2DA  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9612  00E2DC  0E04               	movlw	4
  9613  00E2DE  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9614  00E2E0  EC89  F08E         	call	_i2c_eeprom_read	;wreg free
  9615                           
  9616                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9617  00E2E4  0E77               	movlw	119
  9618  00E2E6  0100               	movlb	0	; () banked
  9619  00E2E8  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9620  00E2EA  A4D8               	btfss	status,2,c
  9621  00E2EC  D021               	goto	l1626
  9622                           
  9623                           ; BSR set to: 0
  9624  00E2EE  0E55               	movlw	85
  9625  00E2F0  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9626  00E2F2  A4D8               	btfss	status,2,c
  9627  00E2F4  D01D               	goto	l1626
  9628                           
  9629                           ; BSR set to: 0
  9630  00E2F6  0E33               	movlw	51
  9631  00E2F8  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9632  00E2FA  A4D8               	btfss	status,2,c
  9633  00E2FC  D019               	goto	l1626
  9634                           
  9635                           ; BSR set to: 0
  9636  00E2FE  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9637  00E300  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9638  00E302  A4D8               	btfss	status,2,c
  9639  00E304  D015               	goto	l1626
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;i2c.c: 592: {
  9643                           ;i2c.c: 594: addr += 4;
  9644  00E306  0E04               	movlw	4
  9645  00E308  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9646  00E30A  0E00               	movlw	0
  9647  00E30C  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9651  00E30E  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9652  00E312  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9653  00E316  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9654  00E318  0D0C               	mullw	12
  9655  00E31A  0E00               	movlw	low _calibrationParameters
  9656  00E31C  24F3               	addwf	prodl,w,c
  9657  00E31E  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9658  00E320  0E03               	movlw	high _calibrationParameters
  9659  00E322  20F4               	addwfc	prodh,w,c
  9660  00E324  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9661  00E326  0E0C               	movlw	12
  9662  00E328  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9663  00E32A  EC89  F08E         	call	_i2c_eeprom_read	;wreg free
  9664                           
  9665                           ;i2c.c: 596: }
  9666  00E32E  D041               	goto	l1630
  9667  00E330                     l1626:
  9668                           
  9669                           ;i2c.c: 597: else
  9670                           ;i2c.c: 598: {
  9671                           ;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  9672  00E330  0100               	movlb	0	; () banked
  9673  00E332  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9674  00E334  0D0C               	mullw	12
  9675  00E336  0E00               	movlw	low _calibrationParameters
  9676  00E338  24F3               	addwf	prodl,w,c
  9677  00E33A  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9678  00E33C  0E03               	movlw	high _calibrationParameters
  9679  00E33E  20F4               	addwfc	prodh,w,c
  9680  00E340  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9681  00E342  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9682  00E346  EC9E  F04F         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9683                           
  9684                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9685  00E34A  D01C               	goto	l1628
  9686  00E34C                     
  9687                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9688  00E34C  0E02               	movlw	2
  9689  00E34E  EC7D  F08F         	call	_schedule_eeprom_write_task
  9690                           
  9691                           ;i2c.c: 606: break;
  9692  00E352  D02F               	goto	l1630
  9693  00E354                     
  9694                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9695  00E354  0E03               	movlw	3
  9696  00E356  EC7D  F08F         	call	_schedule_eeprom_write_task
  9697                           
  9698                           ;i2c.c: 609: break;
  9699  00E35A  D02B               	goto	l1630
  9700  00E35C                     
  9701                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9702  00E35C  0E04               	movlw	4
  9703  00E35E  EC7D  F08F         	call	_schedule_eeprom_write_task
  9704                           
  9705                           ;i2c.c: 612: break;
  9706  00E362  D027               	goto	l1630
  9707  00E364                     
  9708                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9709  00E364  0E05               	movlw	5
  9710  00E366  EC7D  F08F         	call	_schedule_eeprom_write_task
  9711                           
  9712                           ;i2c.c: 615: break;
  9713  00E36A  D023               	goto	l1630
  9714  00E36C                     
  9715                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9716  00E36C  0E06               	movlw	6
  9717  00E36E  EC7D  F08F         	call	_schedule_eeprom_write_task
  9718                           
  9719                           ;i2c.c: 618: break;
  9720  00E372  D01F               	goto	l1630
  9721  00E374                     
  9722                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9723  00E374  0E07               	movlw	7
  9724  00E376  EC7D  F08F         	call	_schedule_eeprom_write_task
  9725                           
  9726                           ;i2c.c: 621: break;
  9727  00E37A  D01B               	goto	l1630
  9728  00E37C                     
  9729                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9730  00E37C  0E08               	movlw	8
  9731  00E37E  EC7D  F08F         	call	_schedule_eeprom_write_task
  9732                           
  9733                           ;i2c.c: 625: }
  9734                           
  9735                           ;i2c.c: 624: break;
  9736  00E382  D017               	goto	l1630
  9737  00E384                     l1628:
  9738  00E384  0100               	movlb	0	; () banked
  9739  00E386  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9740                           
  9741                           ; Switch size 1, requested type "space"
  9742                           ; Number of cases is 7, Range of values is 0 to 6
  9743                           ; switch strategies available:
  9744                           ; Name         Instructions Cycles
  9745                           ; simple_byte           22    12 (average)
  9746                           ;	Chosen strategy is simple_byte
  9747  00E388  0A00               	xorlw	0	; case 0
  9748  00E38A  B4D8               	btfsc	status,2,c
  9749  00E38C  D7DF               	goto	l1629
  9750  00E38E  0A01               	xorlw	1	; case 1
  9751  00E390  B4D8               	btfsc	status,2,c
  9752  00E392  D7E0               	goto	l1631
  9753  00E394  0A03               	xorlw	3	; case 2
  9754  00E396  B4D8               	btfsc	status,2,c
  9755  00E398  D7E1               	goto	l1632
  9756  00E39A  0A01               	xorlw	1	; case 3
  9757  00E39C  B4D8               	btfsc	status,2,c
  9758  00E39E  D7E2               	goto	l1633
  9759  00E3A0  0A07               	xorlw	7	; case 4
  9760  00E3A2  B4D8               	btfsc	status,2,c
  9761  00E3A4  D7E3               	goto	l1634
  9762  00E3A6  0A01               	xorlw	1	; case 5
  9763  00E3A8  B4D8               	btfsc	status,2,c
  9764  00E3AA  D7E4               	goto	l1635
  9765  00E3AC  0A03               	xorlw	3	; case 6
  9766  00E3AE  B4D8               	btfsc	status,2,c
  9767  00E3B0  D7E5               	goto	l1636
  9768  00E3B2                     l1630:
  9769                           
  9770                           ; BSR set to: 0
  9771                           
  9772                           ; BSR set to: 0
  9773  00E3B2  0100               	movlb	0	; () banked
  9774  00E3B4  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
  9775  00E3B6  D774               	goto	l14823
  9776  00E3B8                     __end_of_i2c_eeprom_read_calibration:
  9777                           	opt stack 0
  9778                           tblptru	equ	0xFF8
  9779                           tblptrh	equ	0xFF7
  9780                           tblptrl	equ	0xFF6
  9781                           tablat	equ	0xFF5
  9782                           prodh	equ	0xFF4
  9783                           prodl	equ	0xFF3
  9784                           intcon3	equ	0xFF0
  9785                           postinc0	equ	0xFEE
  9786                           wreg	equ	0xFE8
  9787                           postdec1	equ	0xFE5
  9788                           plusw1	equ	0xFE3
  9789                           fsr1h	equ	0xFE2
  9790                           fsr1l	equ	0xFE1
  9791                           postinc2	equ	0xFDE
  9792                           postdec2	equ	0xFDD
  9793                           plusw2	equ	0xFDB
  9794                           fsr2h	equ	0xFDA
  9795                           fsr2l	equ	0xFD9
  9796                           status	equ	0xFD8
  9797                           
  9798 ;; *************** function _i2c_eeprom_read *****************
  9799 ;; Defined at:
  9800 ;;		line 563 in file "i2c.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  address         2   17[BANK0 ] unsigned int 
  9803 ;;  data            2   19[BANK0 ] PTR unsigned char 
  9804 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  9805 ;;  length          1   21[BANK0 ] unsigned char 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  9808 ;;  addr            1   23[BANK0 ] unsigned char 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9818 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;Total ram usage:        8 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:   12
  9825 ;; This function calls:
  9826 ;;		__i2c_read
  9827 ;;		__i2c_write
  9828 ;;		_i2c_set_frequency
  9829 ;; This function is called by:
  9830 ;;		_i2c_eeprom_read_calibration
  9831 ;;		_rtcc_read_eeprom
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text35
  9836  011D12                     __ptext35:
  9837                           	opt stack 0
  9838  011D12                     _i2c_eeprom_read:
  9839                           	opt stack 15
  9840                           
  9841                           ;i2c.c: 565: uint8_t slave_address;
  9842                           ;i2c.c: 566: uint8_t addr;
  9843                           ;i2c.c: 567: addr = address & 0xFF;
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;incstack = 0
  9847  011D12  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  9848                           
  9849                           ;i2c.c: 568: address &= 0b0000011100000000;
  9850  011D16  0100               	movlb	0	; () banked
  9851  011D18  0E00               	movlw	0
  9852  011D1A  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  9853  011D1C  0E07               	movlw	7
  9854  011D1E  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9855                           
  9856                           ;i2c.c: 569: address >>= 7;
  9857  011D20  0E07               	movlw	7
  9858  011D22  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  9859  011D24                     u10685:
  9860  011D24  90D8               	bcf	status,0,c
  9861  011D26  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9862  011D28  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  9863  011D2A  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  9864  011D2C  D7FB               	goto	u10685
  9865                           
  9866                           ;i2c.c: 570: slave_address = 0b10100000 | address;
  9867  011D2E  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  9868  011D30  09A0               	iorlw	160
  9869  011D32  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  9873  011D34  0E02               	movlw	2
  9874  011D36  ECB0  F088         	call	_i2c_set_frequency
  9875                           
  9876                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
  9877  011D3A  0E77               	movlw	low i2c_eeprom_read@addr
  9878  011D3C  0100               	movlb	0	; () banked
  9879  011D3E  6F65               	movwf	__i2c_write@data& (0+255),b
  9880  011D40  0E00               	movlw	high i2c_eeprom_read@addr
  9881  011D42  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9882  011D44  0E01               	movlw	1
  9883  011D46  6F67               	movwf	__i2c_write@length& (0+255),b
  9884  011D48  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9885  011D4A  EC55  F08F         	call	__i2c_write
  9886                           
  9887                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
  9888  011D4E  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  9889  011D52  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  9890  011D56  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  9891  011D5A  0100               	movlb	0	; () banked
  9892  011D5C  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9893  011D5E  EC86  F082         	call	__i2c_read
  9894  011D62  0012               	return		;funcret
  9895  011D64                     __end_of_i2c_eeprom_read:
  9896                           	opt stack 0
  9897                           tblptru	equ	0xFF8
  9898                           tblptrh	equ	0xFF7
  9899                           tblptrl	equ	0xFF6
  9900                           tablat	equ	0xFF5
  9901                           prodh	equ	0xFF4
  9902                           prodl	equ	0xFF3
  9903                           intcon3	equ	0xFF0
  9904                           postinc0	equ	0xFEE
  9905                           wreg	equ	0xFE8
  9906                           postdec1	equ	0xFE5
  9907                           plusw1	equ	0xFE3
  9908                           fsr1h	equ	0xFE2
  9909                           fsr1l	equ	0xFE1
  9910                           postinc2	equ	0xFDE
  9911                           postdec2	equ	0xFDD
  9912                           plusw2	equ	0xFDB
  9913                           fsr2h	equ	0xFDA
  9914                           fsr2l	equ	0xFD9
  9915                           status	equ	0xFD8
  9916                           
  9917 ;; *************** function __i2c_read *****************
  9918 ;; Defined at:
  9919 ;;		line 167 in file "i2c.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  slave_addres    1    wreg     unsigned char 
  9922 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9923 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  9924 ;;  length          1    7[BANK0 ] unsigned char 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  9927 ;;  cntr            1   16[BANK0 ] unsigned char 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9937 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9939 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9940 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9941 ;;Total ram usage:       12 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:   11
  9944 ;; This function calls:
  9945 ;;		__i2c_acknowledge
  9946 ;;		__i2c_get
  9947 ;;		__i2c_not_acknowledge
  9948 ;;		__i2c_send
  9949 ;;		__i2c_start
  9950 ;;		__i2c_stop
  9951 ;;		__i2c_wait_idle
  9952 ;; This function is called by:
  9953 ;;		_i2c_eeprom_read
  9954 ;;		_i2c_eeprom_readByte
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text36
  9959  01050C                     __ptext36:
  9960                           	opt stack 0
  9961  01050C                     __i2c_read:
  9962                           	opt stack 15
  9963                           
  9964                           ;incstack = 0
  9965                           ;__i2c_read@slave_address stored from wreg
  9966  01050C  0100               	movlb	0	; () banked
  9967  01050E  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  9968                           
  9969                           ;i2c.c: 169: uint8_t cntr;
  9970                           ;i2c.c: 171: _i2c_wait_idle();
  9971  010510  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
  9972                           
  9973                           ;i2c.c: 172: _i2c_start();
  9974  010514  EC99  F097         	call	__i2c_start	;wreg free
  9975                           
  9976                           ;i2c.c: 173: _i2c_wait_idle();
  9977  010518  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
  9978                           
  9979                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
  9980  01051C  0100               	movlb	0	; () banked
  9981  01051E  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  9982  010520  0901               	iorlw	1
  9983  010522  EC90  F097         	call	__i2c_send
  9984                           
  9985                           ;i2c.c: 175: _i2c_wait_idle();
  9986  010526  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
  9987                           
  9988                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
  9989  01052A  0E00               	movlw	0
  9990  01052C  0100               	movlb	0	; () banked
  9991  01052E  6F70               	movwf	__i2c_read@cntr& (0+255),b
  9992  010530  D00F               	goto	l1557
  9993  010532                     
  9994                           ; BSR set to: 0
  9995                           ;i2c.c: 186: {
  9996                           ;i2c.c: 187: data[cntr] = _i2c_get();
  9997                           
  9998                           ; BSR set to: 0
  9999  010532  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10000  010534  0D01               	mullw	1
 10001  010536  50F3               	movf	prodl,w,c
 10002  010538  2565               	addwf	__i2c_read@data& (0+255),w,b
 10003  01053A  6ED9               	movwf	fsr2l,c
 10004  01053C  50F4               	movf	prodh,w,c
 10005  01053E  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10006  010540  6EDA               	movwf	fsr2h,c
 10007  010542  EC81  F097         	call	__i2c_get	;wreg free
 10008  010546  6EDF               	movwf	indf2,c
 10009                           
 10010                           ;i2c.c: 188: _i2c_acknowledge();
 10011  010548  EC86  F097         	call	__i2c_acknowledge	;wreg free
 10012  01054C  0100               	movlb	0	; () banked
 10013  01054E  2B70               	incf	__i2c_read@cntr& (0+255),f,b
 10014  010550                     l1557:
 10015                           
 10016                           ; BSR set to: 0
 10017                           
 10018                           ; BSR set to: 0
 10019  010550  0EFF               	movlw	255
 10020  010552  6F68               	movwf	??__i2c_read& (0+255),b
 10021  010554  0EFF               	movlw	255
 10022  010556  6F69               	movwf	(??__i2c_read+1)& (0+255),b
 10023  010558  5167               	movf	__i2c_read@length& (0+255),w,b
 10024  01055A  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
 10025  01055C  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
 10026  01055E  5168               	movf	??__i2c_read& (0+255),w,b
 10027  010560  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
 10028  010562  5169               	movf	(??__i2c_read+1)& (0+255),w,b
 10029  010564  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
 10030  010566  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10031  010568  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
 10032  01056A  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
 10033  01056C  516A               	movf	(??__i2c_read+2)& (0+255),w,b
 10034  01056E  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
 10035  010570  516D               	movf	(??__i2c_read+5)& (0+255),w,b
 10036  010572  0A80               	xorlw	128
 10037  010574  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
 10038  010576  516B               	movf	(??__i2c_read+3)& (0+255),w,b
 10039  010578  0A80               	xorlw	128
 10040  01057A  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
 10041  01057C  A0D8               	btfss	status,0,c
 10042  01057E  D7D9               	goto	l1558
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;i2c.c: 189: }
 10046                           ;i2c.c: 190: data[cntr] = _i2c_get();
 10047                           
 10048                           ; BSR set to: 0
 10049  010580  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10050  010582  0D01               	mullw	1
 10051  010584  50F3               	movf	prodl,w,c
 10052  010586  2565               	addwf	__i2c_read@data& (0+255),w,b
 10053  010588  6ED9               	movwf	fsr2l,c
 10054  01058A  50F4               	movf	prodh,w,c
 10055  01058C  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10056  01058E  6EDA               	movwf	fsr2h,c
 10057  010590  EC81  F097         	call	__i2c_get	;wreg free
 10058  010594  6EDF               	movwf	indf2,c
 10059                           
 10060                           ;i2c.c: 191: _i2c_not_acknowledge();
 10061  010596  EC7C  F097         	call	__i2c_not_acknowledge	;wreg free
 10062                           
 10063                           ;i2c.c: 193: _i2c_stop();
 10064  01059A  EC95  F097         	call	__i2c_stop	;wreg free
 10065  01059E  0012               	return		;funcret
 10066  0105A0                     __end_of__i2c_read:
 10067                           	opt stack 0
 10068                           tblptru	equ	0xFF8
 10069                           tblptrh	equ	0xFF7
 10070                           tblptrl	equ	0xFF6
 10071                           tablat	equ	0xFF5
 10072                           prodh	equ	0xFF4
 10073                           prodl	equ	0xFF3
 10074                           intcon3	equ	0xFF0
 10075                           postinc0	equ	0xFEE
 10076                           wreg	equ	0xFE8
 10077                           postdec1	equ	0xFE5
 10078                           plusw1	equ	0xFE3
 10079                           fsr1h	equ	0xFE2
 10080                           fsr1l	equ	0xFE1
 10081                           indf2	equ	0xFDF
 10082                           postinc2	equ	0xFDE
 10083                           postdec2	equ	0xFDD
 10084                           plusw2	equ	0xFDB
 10085                           fsr2h	equ	0xFDA
 10086                           fsr2l	equ	0xFD9
 10087                           status	equ	0xFD8
 10088                           
 10089 ;; *************** function __i2c_eeprom_load_default_calibration *****************
 10090 ;; Defined at:
 10091 ;;		line 645 in file "i2c.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  buffer          2    0[BANK0 ] PTR struct .
 10094 ;;		 -> calibrationParameters(84), 
 10095 ;;  index           1    2[BANK0 ] enum E8148
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;		None
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10107 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;Total ram usage:        3 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:   10
 10114 ;; This function calls:
 10115 ;;		Nothing
 10116 ;; This function is called by:
 10117 ;;		_i2c_eeprom_read_calibration
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text37
 10122  009F3C                     __ptext37:
 10123                           	opt stack 0
 10124  009F3C                     __i2c_eeprom_load_default_calibration:
 10125                           	opt stack 18
 10126                           
 10127                           ;i2c.c: 647: switch(index)
 10128                           
 10129                           ;incstack = 0
 10130  009F3C  D1C8               	goto	l1640
 10131  009F3E                     
 10132                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
 10133  009F3E  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10134  009F42  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10135  009F46  0E00               	movlw	0
 10136  009F48  6EDE               	movwf	postinc2,c
 10137  009F4A  0E00               	movlw	0
 10138  009F4C  6EDD               	movwf	postdec2,c
 10139                           
 10140                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
 10141  009F4E  0100               	movlb	0	; () banked
 10142  009F50  EE20 F002          	lfsr	2,2
 10143  009F54  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10144  009F56  26D9               	addwf	fsr2l,f,c
 10145  009F58  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10146  009F5A  22DA               	addwfc	fsr2h,f,c
 10147  009F5C  0E0B               	movlw	11
 10148  009F5E  6EDE               	movwf	postinc2,c
 10149  009F60  0E00               	movlw	0
 10150  009F62  6EDD               	movwf	postdec2,c
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
 10154  009F64  EE20 F004          	lfsr	2,4
 10155  009F68  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10156  009F6A  26D9               	addwf	fsr2l,f,c
 10157  009F6C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10158  009F6E  22DA               	addwfc	fsr2h,f,c
 10159  009F70  0E04               	movlw	4
 10160  009F72  6EDF               	movwf	indf2,c
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;i2c.c: 653: (*buffer).Offset = 0;
 10164  009F74  EE20 F005          	lfsr	2,5
 10165  009F78  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10166  009F7A  26D9               	addwf	fsr2l,f,c
 10167  009F7C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10168  009F7E  22DA               	addwfc	fsr2h,f,c
 10169  009F80  0E00               	movlw	0
 10170  009F82  6EDE               	movwf	postinc2,c
 10171  009F84  0E00               	movlw	0
 10172  009F86  6EDD               	movwf	postdec2,c
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;i2c.c: 654: (*buffer).Multiplier = 11;
 10176  009F88  EE20 F007          	lfsr	2,7
 10177  009F8C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10178  009F8E  26D9               	addwf	fsr2l,f,c
 10179  009F90  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10180  009F92  22DA               	addwfc	fsr2h,f,c
 10181  009F94  0E0B               	movlw	11
 10182  009F96  6EDE               	movwf	postinc2,c
 10183  009F98  0E00               	movlw	0
 10184  009F9A  6EDD               	movwf	postdec2,c
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;i2c.c: 655: (*buffer).Shift = 4;
 10188  009F9C  EE20 F009          	lfsr	2,9
 10189  009FA0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10190  009FA2  26D9               	addwf	fsr2l,f,c
 10191  009FA4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10192  009FA6  22DA               	addwfc	fsr2h,f,c
 10193  009FA8  0E04               	movlw	4
 10194  009FAA  6EDF               	movwf	indf2,c
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
 10198  009FAC  EE20 F00A          	lfsr	2,10
 10199  009FB0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10200  009FB2  26D9               	addwf	fsr2l,f,c
 10201  009FB4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10202  009FB6  22DA               	addwfc	fsr2h,f,c
 10203  009FB8  0E00               	movlw	0
 10204  009FBA  6EDE               	movwf	postinc2,c
 10205  009FBC  0E00               	movlw	0
 10206  009FBE  6EDD               	movwf	postdec2,c
 10207                           
 10208                           ;i2c.c: 657: break;
 10209  009FC0  0012               	return	
 10210  009FC2                     
 10211                           ; BSR set to: 0
 10212                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
 10213                           
 10214                           ; BSR set to: 0
 10215  009FC2  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10216  009FC6  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10217  009FCA  0E00               	movlw	0
 10218  009FCC  6EDE               	movwf	postinc2,c
 10219  009FCE  0E00               	movlw	0
 10220  009FD0  6EDD               	movwf	postdec2,c
 10221                           
 10222                           ; BSR set to: 0
 10223                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
 10224  009FD2  EE20 F002          	lfsr	2,2
 10225  009FD6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10226  009FD8  26D9               	addwf	fsr2l,f,c
 10227  009FDA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10228  009FDC  22DA               	addwfc	fsr2h,f,c
 10229  009FDE  0E11               	movlw	17
 10230  009FE0  6EDE               	movwf	postinc2,c
 10231  009FE2  0E00               	movlw	0
 10232  009FE4  6EDD               	movwf	postdec2,c
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
 10236  009FE6  EE20 F004          	lfsr	2,4
 10237  009FEA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10238  009FEC  26D9               	addwf	fsr2l,f,c
 10239  009FEE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10240  009FF0  22DA               	addwfc	fsr2h,f,c
 10241  009FF2  0E05               	movlw	5
 10242  009FF4  6EDF               	movwf	indf2,c
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;i2c.c: 662: (*buffer).Offset = 0;
 10246  009FF6  EE20 F005          	lfsr	2,5
 10247  009FFA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10248  009FFC  26D9               	addwf	fsr2l,f,c
 10249  009FFE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10250  00A000  22DA               	addwfc	fsr2h,f,c
 10251  00A002  0E00               	movlw	0
 10252  00A004  6EDE               	movwf	postinc2,c
 10253  00A006  0E00               	movlw	0
 10254  00A008  6EDD               	movwf	postdec2,c
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;i2c.c: 663: (*buffer).Multiplier = 17;
 10258  00A00A  EE20 F007          	lfsr	2,7
 10259  00A00E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10260  00A010  26D9               	addwf	fsr2l,f,c
 10261  00A012  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10262  00A014  22DA               	addwfc	fsr2h,f,c
 10263  00A016  0E11               	movlw	17
 10264  00A018  6EDE               	movwf	postinc2,c
 10265  00A01A  0E00               	movlw	0
 10266  00A01C  6EDD               	movwf	postdec2,c
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;i2c.c: 664: (*buffer).Shift = 5;
 10270  00A01E  EE20 F009          	lfsr	2,9
 10271  00A022  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10272  00A024  26D9               	addwf	fsr2l,f,c
 10273  00A026  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10274  00A028  22DA               	addwfc	fsr2h,f,c
 10275  00A02A  0E05               	movlw	5
 10276  00A02C  6EDF               	movwf	indf2,c
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
 10280  00A02E  EE20 F00A          	lfsr	2,10
 10281  00A032  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10282  00A034  26D9               	addwf	fsr2l,f,c
 10283  00A036  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10284  00A038  22DA               	addwfc	fsr2h,f,c
 10285  00A03A  0E00               	movlw	0
 10286  00A03C  6EDE               	movwf	postinc2,c
 10287  00A03E  0E00               	movlw	0
 10288  00A040  6EDD               	movwf	postdec2,c
 10289                           
 10290                           ;i2c.c: 666: break;
 10291  00A042  0012               	return	
 10292  00A044                     
 10293                           ; BSR set to: 0
 10294                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
 10295                           
 10296                           ; BSR set to: 0
 10297  00A044  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10298  00A048  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10299  00A04C  0E00               	movlw	0
 10300  00A04E  6EDE               	movwf	postinc2,c
 10301  00A050  0E00               	movlw	0
 10302  00A052  6EDD               	movwf	postdec2,c
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
 10306  00A054  EE20 F002          	lfsr	2,2
 10307  00A058  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10308  00A05A  26D9               	addwf	fsr2l,f,c
 10309  00A05C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10310  00A05E  22DA               	addwfc	fsr2h,f,c
 10311  00A060  0EDB               	movlw	219
 10312  00A062  6EDE               	movwf	postinc2,c
 10313  00A064  0E16               	movlw	22
 10314  00A066  6EDD               	movwf	postdec2,c
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
 10318  00A068  EE20 F004          	lfsr	2,4
 10319  00A06C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10320  00A06E  26D9               	addwf	fsr2l,f,c
 10321  00A070  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10322  00A072  22DA               	addwfc	fsr2h,f,c
 10323  00A074  0E0F               	movlw	15
 10324  00A076  6EDF               	movwf	indf2,c
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;i2c.c: 671: (*buffer).Offset = 0;
 10328  00A078  EE20 F005          	lfsr	2,5
 10329  00A07C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10330  00A07E  26D9               	addwf	fsr2l,f,c
 10331  00A080  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10332  00A082  22DA               	addwfc	fsr2h,f,c
 10333  00A084  0E00               	movlw	0
 10334  00A086  6EDE               	movwf	postinc2,c
 10335  00A088  0E00               	movlw	0
 10336  00A08A  6EDD               	movwf	postdec2,c
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
 10340  00A08C  EE20 F007          	lfsr	2,7
 10341  00A090  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10342  00A092  26D9               	addwf	fsr2l,f,c
 10343  00A094  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10344  00A096  22DA               	addwfc	fsr2h,f,c
 10345  00A098  0EDB               	movlw	219
 10346  00A09A  6EDE               	movwf	postinc2,c
 10347  00A09C  0E16               	movlw	22
 10348  00A09E  6EDD               	movwf	postdec2,c
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;i2c.c: 673: (*buffer).Shift = 15;
 10352  00A0A0  EE20 F009          	lfsr	2,9
 10353  00A0A4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10354  00A0A6  26D9               	addwf	fsr2l,f,c
 10355  00A0A8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10356  00A0AA  22DA               	addwfc	fsr2h,f,c
 10357  00A0AC  0E0F               	movlw	15
 10358  00A0AE  6EDF               	movwf	indf2,c
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
 10362  00A0B0  EE20 F00A          	lfsr	2,10
 10363  00A0B4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10364  00A0B6  26D9               	addwf	fsr2l,f,c
 10365  00A0B8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10366  00A0BA  22DA               	addwfc	fsr2h,f,c
 10367  00A0BC  0E00               	movlw	0
 10368  00A0BE  6EDE               	movwf	postinc2,c
 10369  00A0C0  0E00               	movlw	0
 10370  00A0C2  6EDD               	movwf	postdec2,c
 10371                           
 10372                           ;i2c.c: 675: break;
 10373  00A0C4  0012               	return	
 10374  00A0C6                     
 10375                           ; BSR set to: 0
 10376                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
 10377                           
 10378                           ; BSR set to: 0
 10379  00A0C6  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10380  00A0CA  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10381  00A0CE  0E00               	movlw	0
 10382  00A0D0  6EDE               	movwf	postinc2,c
 10383  00A0D2  0E00               	movlw	0
 10384  00A0D4  6EDD               	movwf	postdec2,c
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
 10388  00A0D6  EE20 F002          	lfsr	2,2
 10389  00A0DA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10390  00A0DC  26D9               	addwf	fsr2l,f,c
 10391  00A0DE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10392  00A0E0  22DA               	addwfc	fsr2h,f,c
 10393  00A0E2  0EDB               	movlw	219
 10394  00A0E4  6EDE               	movwf	postinc2,c
 10395  00A0E6  0E16               	movlw	22
 10396  00A0E8  6EDD               	movwf	postdec2,c
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10400  00A0EA  EE20 F004          	lfsr	2,4
 10401  00A0EE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10402  00A0F0  26D9               	addwf	fsr2l,f,c
 10403  00A0F2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10404  00A0F4  22DA               	addwfc	fsr2h,f,c
 10405  00A0F6  0E0F               	movlw	15
 10406  00A0F8  6EDF               	movwf	indf2,c
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;i2c.c: 680: (*buffer).Offset = 0;
 10410  00A0FA  EE20 F005          	lfsr	2,5
 10411  00A0FE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10412  00A100  26D9               	addwf	fsr2l,f,c
 10413  00A102  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10414  00A104  22DA               	addwfc	fsr2h,f,c
 10415  00A106  0E00               	movlw	0
 10416  00A108  6EDE               	movwf	postinc2,c
 10417  00A10A  0E00               	movlw	0
 10418  00A10C  6EDD               	movwf	postdec2,c
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10422  00A10E  EE20 F007          	lfsr	2,7
 10423  00A112  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10424  00A114  26D9               	addwf	fsr2l,f,c
 10425  00A116  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10426  00A118  22DA               	addwfc	fsr2h,f,c
 10427  00A11A  0EDB               	movlw	219
 10428  00A11C  6EDE               	movwf	postinc2,c
 10429  00A11E  0E16               	movlw	22
 10430  00A120  6EDD               	movwf	postdec2,c
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;i2c.c: 682: (*buffer).Shift = 15;
 10434  00A122  EE20 F009          	lfsr	2,9
 10435  00A126  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10436  00A128  26D9               	addwf	fsr2l,f,c
 10437  00A12A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10438  00A12C  22DA               	addwfc	fsr2h,f,c
 10439  00A12E  0E0F               	movlw	15
 10440  00A130  6EDF               	movwf	indf2,c
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10444  00A132  EE20 F00A          	lfsr	2,10
 10445  00A136  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10446  00A138  26D9               	addwf	fsr2l,f,c
 10447  00A13A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10448  00A13C  22DA               	addwfc	fsr2h,f,c
 10449  00A13E  0E00               	movlw	0
 10450  00A140  6EDE               	movwf	postinc2,c
 10451  00A142  0E00               	movlw	0
 10452  00A144  6EDD               	movwf	postdec2,c
 10453                           
 10454                           ;i2c.c: 684: break;
 10455  00A146  0012               	return	
 10456  00A148                     
 10457                           ; BSR set to: 0
 10458                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10459                           
 10460                           ; BSR set to: 0
 10461  00A148  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10462  00A14C  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10463  00A150  0E37               	movlw	55
 10464  00A152  6EDE               	movwf	postinc2,c
 10465  00A154  0ECA               	movlw	202
 10466  00A156  6EDD               	movwf	postdec2,c
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10470  00A158  EE20 F002          	lfsr	2,2
 10471  00A15C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10472  00A15E  26D9               	addwf	fsr2l,f,c
 10473  00A160  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10474  00A162  22DA               	addwfc	fsr2h,f,c
 10475  00A164  0E29               	movlw	41
 10476  00A166  6EDE               	movwf	postinc2,c
 10477  00A168  0ED3               	movlw	211
 10478  00A16A  6EDD               	movwf	postdec2,c
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10482  00A16C  EE20 F004          	lfsr	2,4
 10483  00A170  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10484  00A172  26D9               	addwf	fsr2l,f,c
 10485  00A174  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10486  00A176  22DA               	addwfc	fsr2h,f,c
 10487  00A178  0E0D               	movlw	13
 10488  00A17A  6EDF               	movwf	indf2,c
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10492  00A17C  EE20 F005          	lfsr	2,5
 10493  00A180  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10494  00A182  26D9               	addwf	fsr2l,f,c
 10495  00A184  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10496  00A186  22DA               	addwfc	fsr2h,f,c
 10497  00A188  0E37               	movlw	55
 10498  00A18A  6EDE               	movwf	postinc2,c
 10499  00A18C  0ECA               	movlw	202
 10500  00A18E  6EDD               	movwf	postdec2,c
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10504  00A190  EE20 F007          	lfsr	2,7
 10505  00A194  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10506  00A196  26D9               	addwf	fsr2l,f,c
 10507  00A198  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10508  00A19A  22DA               	addwfc	fsr2h,f,c
 10509  00A19C  0E29               	movlw	41
 10510  00A19E  6EDE               	movwf	postinc2,c
 10511  00A1A0  0ED3               	movlw	211
 10512  00A1A2  6EDD               	movwf	postdec2,c
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;i2c.c: 691: (*buffer).Shift = 13;
 10516  00A1A4  EE20 F009          	lfsr	2,9
 10517  00A1A8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10518  00A1AA  26D9               	addwf	fsr2l,f,c
 10519  00A1AC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10520  00A1AE  22DA               	addwfc	fsr2h,f,c
 10521  00A1B0  0E0D               	movlw	13
 10522  00A1B2  6EDF               	movwf	indf2,c
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10526  00A1B4  EE20 F00A          	lfsr	2,10
 10527  00A1B8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10528  00A1BA  26D9               	addwf	fsr2l,f,c
 10529  00A1BC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10530  00A1BE  22DA               	addwfc	fsr2h,f,c
 10531  00A1C0  0E00               	movlw	0
 10532  00A1C2  6EDE               	movwf	postinc2,c
 10533  00A1C4  0E00               	movlw	0
 10534  00A1C6  6EDD               	movwf	postdec2,c
 10535                           
 10536                           ;i2c.c: 693: break;
 10537  00A1C8  0012               	return	
 10538  00A1CA                     
 10539                           ; BSR set to: 0
 10540                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10541                           
 10542                           ; BSR set to: 0
 10543  00A1CA  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10544  00A1CE  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10545  00A1D2  0E37               	movlw	55
 10546  00A1D4  6EDE               	movwf	postinc2,c
 10547  00A1D6  0ECA               	movlw	202
 10548  00A1D8  6EDD               	movwf	postdec2,c
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10552  00A1DA  EE20 F002          	lfsr	2,2
 10553  00A1DE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10554  00A1E0  26D9               	addwf	fsr2l,f,c
 10555  00A1E2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10556  00A1E4  22DA               	addwfc	fsr2h,f,c
 10557  00A1E6  0E29               	movlw	41
 10558  00A1E8  6EDE               	movwf	postinc2,c
 10559  00A1EA  0ED3               	movlw	211
 10560  00A1EC  6EDD               	movwf	postdec2,c
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10564  00A1EE  EE20 F004          	lfsr	2,4
 10565  00A1F2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10566  00A1F4  26D9               	addwf	fsr2l,f,c
 10567  00A1F6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10568  00A1F8  22DA               	addwfc	fsr2h,f,c
 10569  00A1FA  0E0D               	movlw	13
 10570  00A1FC  6EDF               	movwf	indf2,c
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10574  00A1FE  EE20 F005          	lfsr	2,5
 10575  00A202  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10576  00A204  26D9               	addwf	fsr2l,f,c
 10577  00A206  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10578  00A208  22DA               	addwfc	fsr2h,f,c
 10579  00A20A  0E37               	movlw	55
 10580  00A20C  6EDE               	movwf	postinc2,c
 10581  00A20E  0ECA               	movlw	202
 10582  00A210  6EDD               	movwf	postdec2,c
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10586  00A212  EE20 F007          	lfsr	2,7
 10587  00A216  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10588  00A218  26D9               	addwf	fsr2l,f,c
 10589  00A21A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10590  00A21C  22DA               	addwfc	fsr2h,f,c
 10591  00A21E  0E29               	movlw	41
 10592  00A220  6EDE               	movwf	postinc2,c
 10593  00A222  0ED3               	movlw	211
 10594  00A224  6EDD               	movwf	postdec2,c
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;i2c.c: 700: (*buffer).Shift = 13;
 10598  00A226  EE20 F009          	lfsr	2,9
 10599  00A22A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10600  00A22C  26D9               	addwf	fsr2l,f,c
 10601  00A22E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10602  00A230  22DA               	addwfc	fsr2h,f,c
 10603  00A232  0E0D               	movlw	13
 10604  00A234  6EDF               	movwf	indf2,c
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10608  00A236  EE20 F00A          	lfsr	2,10
 10609  00A23A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10610  00A23C  26D9               	addwf	fsr2l,f,c
 10611  00A23E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10612  00A240  22DA               	addwfc	fsr2h,f,c
 10613  00A242  0E00               	movlw	0
 10614  00A244  6EDE               	movwf	postinc2,c
 10615  00A246  0E00               	movlw	0
 10616  00A248  6EDD               	movwf	postdec2,c
 10617                           
 10618                           ;i2c.c: 702: break;
 10619  00A24A  0012               	return	
 10620  00A24C                     
 10621                           ; BSR set to: 0
 10622                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10623                           
 10624                           ; BSR set to: 0
 10625  00A24C  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10626  00A250  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10627  00A254  0E37               	movlw	55
 10628  00A256  6EDE               	movwf	postinc2,c
 10629  00A258  0ECA               	movlw	202
 10630  00A25A  6EDD               	movwf	postdec2,c
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10634  00A25C  EE20 F002          	lfsr	2,2
 10635  00A260  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10636  00A262  26D9               	addwf	fsr2l,f,c
 10637  00A264  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10638  00A266  22DA               	addwfc	fsr2h,f,c
 10639  00A268  0E29               	movlw	41
 10640  00A26A  6EDE               	movwf	postinc2,c
 10641  00A26C  0ED3               	movlw	211
 10642  00A26E  6EDD               	movwf	postdec2,c
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10646  00A270  EE20 F004          	lfsr	2,4
 10647  00A274  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10648  00A276  26D9               	addwf	fsr2l,f,c
 10649  00A278  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10650  00A27A  22DA               	addwfc	fsr2h,f,c
 10651  00A27C  0E0D               	movlw	13
 10652  00A27E  6EDF               	movwf	indf2,c
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10656  00A280  EE20 F005          	lfsr	2,5
 10657  00A284  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10658  00A286  26D9               	addwf	fsr2l,f,c
 10659  00A288  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10660  00A28A  22DA               	addwfc	fsr2h,f,c
 10661  00A28C  0E37               	movlw	55
 10662  00A28E  6EDE               	movwf	postinc2,c
 10663  00A290  0ECA               	movlw	202
 10664  00A292  6EDD               	movwf	postdec2,c
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10668  00A294  EE20 F007          	lfsr	2,7
 10669  00A298  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10670  00A29A  26D9               	addwf	fsr2l,f,c
 10671  00A29C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10672  00A29E  22DA               	addwfc	fsr2h,f,c
 10673  00A2A0  0E29               	movlw	41
 10674  00A2A2  6EDE               	movwf	postinc2,c
 10675  00A2A4  0ED3               	movlw	211
 10676  00A2A6  6EDD               	movwf	postdec2,c
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;i2c.c: 709: (*buffer).Shift = 13;
 10680  00A2A8  EE20 F009          	lfsr	2,9
 10681  00A2AC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10682  00A2AE  26D9               	addwf	fsr2l,f,c
 10683  00A2B0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10684  00A2B2  22DA               	addwfc	fsr2h,f,c
 10685  00A2B4  0E0D               	movlw	13
 10686  00A2B6  6EDF               	movwf	indf2,c
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 10690  00A2B8  EE20 F00A          	lfsr	2,10
 10691  00A2BC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10692  00A2BE  26D9               	addwf	fsr2l,f,c
 10693  00A2C0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10694  00A2C2  22DA               	addwfc	fsr2h,f,c
 10695  00A2C4  0E00               	movlw	0
 10696  00A2C6  6EDE               	movwf	postinc2,c
 10697  00A2C8  0E00               	movlw	0
 10698  00A2CA  6EDD               	movwf	postdec2,c
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;i2c.c: 712: }
 10702                           
 10703                           ;i2c.c: 711: break;
 10704  00A2CC  0012               	return	
 10705  00A2CE                     l1640:
 10706                           
 10707                           ; BSR set to: 0
 10708  00A2CE  0100               	movlb	0	; () banked
 10709  00A2D0  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 10710                           
 10711                           ; Switch size 1, requested type "space"
 10712                           ; Number of cases is 7, Range of values is 0 to 6
 10713                           ; switch strategies available:
 10714                           ; Name         Instructions Cycles
 10715                           ; simple_byte           22    12 (average)
 10716                           ;	Chosen strategy is simple_byte
 10717  00A2D2  0A00               	xorlw	0	; case 0
 10718  00A2D4  B4D8               	btfsc	status,2,c
 10719  00A2D6  D633               	goto	l1641
 10720  00A2D8  0A01               	xorlw	1	; case 1
 10721  00A2DA  B4D8               	btfsc	status,2,c
 10722  00A2DC  D672               	goto	l1643
 10723  00A2DE  0A03               	xorlw	3	; case 2
 10724  00A2E0  B4D8               	btfsc	status,2,c
 10725  00A2E2  D6B0               	goto	l1644
 10726  00A2E4  0A01               	xorlw	1	; case 3
 10727  00A2E6  B4D8               	btfsc	status,2,c
 10728  00A2E8  D6EE               	goto	l1645
 10729  00A2EA  0A07               	xorlw	7	; case 4
 10730  00A2EC  B4D8               	btfsc	status,2,c
 10731  00A2EE  D72C               	goto	l1646
 10732  00A2F0  0A01               	xorlw	1	; case 5
 10733  00A2F2  B4D8               	btfsc	status,2,c
 10734  00A2F4  D76A               	goto	l1647
 10735  00A2F6  0A03               	xorlw	3	; case 6
 10736  00A2F8  A4D8               	btfss	status,2,c
 10737  00A2FA  0012               	return	
 10738  00A2FC  D7A7               	goto	l1648
 10739  00A2FE                     __end_of__i2c_eeprom_load_default_calibration:
 10740                           	opt stack 0
 10741                           tblptru	equ	0xFF8
 10742                           tblptrh	equ	0xFF7
 10743                           tblptrl	equ	0xFF6
 10744                           tablat	equ	0xFF5
 10745                           prodh	equ	0xFF4
 10746                           prodl	equ	0xFF3
 10747                           intcon3	equ	0xFF0
 10748                           postinc0	equ	0xFEE
 10749                           wreg	equ	0xFE8
 10750                           postdec1	equ	0xFE5
 10751                           plusw1	equ	0xFE3
 10752                           fsr1h	equ	0xFE2
 10753                           fsr1l	equ	0xFE1
 10754                           indf2	equ	0xFDF
 10755                           postinc2	equ	0xFDE
 10756                           postdec2	equ	0xFDD
 10757                           plusw2	equ	0xFDB
 10758                           fsr2h	equ	0xFDA
 10759                           fsr2l	equ	0xFD9
 10760                           status	equ	0xFD8
 10761                           
 10762 ;; *************** function _flash_init *****************
 10763 ;; Defined at:
 10764 ;;		line 448 in file "flash.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;		None
 10767 ;; Auto vars:     Size  Location     Type
 10768 ;;		None
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  1    wreg      void 
 10771 ;; Registers used:
 10772 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10782 ;;Total ram usage:        0 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; Hardware stack levels required when called:   14
 10785 ;; This function calls:
 10786 ;;		__flash_set_page_size
 10787 ;; This function is called by:
 10788 ;;		_system_init
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text38
 10793  012272                     __ptext38:
 10794                           	opt stack 0
 10795  012272                     _flash_init:
 10796                           	opt stack 15
 10797                           
 10798                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;incstack = 0
 10802  012272  0E55               	movlw	85
 10803  012274  6EA7               	movwf	4007,c	;volsfr
 10804  012276  0EAA               	movlw	170
 10805  012278  6EA7               	movwf	4007,c	;volsfr
 10806  01227A  010E               	movlb	14	; () banked
 10807  01227C  91BF               	bcf	191,0,b	;volatile
 10808                           
 10809                           ;flash.c: 452: RPINR21 = 23;
 10810  01227E  0E17               	movlw	23
 10811  012280  6FFC               	movwf	252,b	;volatile
 10812                           
 10813                           ;flash.c: 453: RPOR21 = 10;
 10814  012282  0E0A               	movlw	10
 10815  012284  6FD5               	movwf	213,b	;volatile
 10816                           
 10817                           ;flash.c: 455: RPOR22 = 11;
 10818  012286  0E0B               	movlw	11
 10819  012288  6FD6               	movwf	214,b	;volatile
 10820                           
 10821                           ;flash.c: 456: RPINR22 = 22;
 10822  01228A  0E16               	movlw	22
 10823  01228C  6FFD               	movwf	253,b	;volatile
 10824                           
 10825                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 10826  01228E  0E55               	movlw	85
 10827  012290  6EA7               	movwf	4007,c	;volsfr
 10828  012292  0EAA               	movlw	170
 10829  012294  6EA7               	movwf	4007,c	;volsfr
 10830                           
 10831                           ; BSR set to: 14
 10832  012296  81BF               	bsf	191,0,b	;volatile
 10833                           
 10834                           ; BSR set to: 14
 10835                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 10836  012298  8E73               	bsf	3955,7,c	;volatile
 10837                           
 10838                           ; BSR set to: 14
 10839                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 10840  01229A  8C73               	bsf	3955,6,c	;volatile
 10841                           
 10842                           ; BSR set to: 14
 10843                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 10844  01229C  9872               	bcf	3954,4,c	;volatile
 10845                           
 10846                           ; BSR set to: 14
 10847                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 10848  01229E  9072               	bcf	3954,0,c	;volatile
 10849  0122A0  9272               	bcf	3954,1,c	;volatile
 10850  0122A2  9472               	bcf	3954,2,c	;volatile
 10851  0122A4  9672               	bcf	3954,3,c	;volatile
 10852                           
 10853                           ; BSR set to: 14
 10854                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 10855  0122A6  8A72               	bsf	3954,5,c	;volatile
 10856                           
 10857                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 10858  0122A8  0E00               	movlw	0
 10859  0122AA  6E4B               	movwf	_power_state,c
 10860                           
 10861                           ; BSR set to: 14
 10862                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 10863  0122AC  0E00               	movlw	0
 10864  0122AE  ECE8  F088         	call	__flash_set_page_size
 10865  0122B2  0012               	return		;funcret
 10866  0122B4                     __end_of_flash_init:
 10867                           	opt stack 0
 10868                           tblptru	equ	0xFF8
 10869                           tblptrh	equ	0xFF7
 10870                           tblptrl	equ	0xFF6
 10871                           tablat	equ	0xFF5
 10872                           prodh	equ	0xFF4
 10873                           prodl	equ	0xFF3
 10874                           intcon3	equ	0xFF0
 10875                           postinc0	equ	0xFEE
 10876                           wreg	equ	0xFE8
 10877                           postdec1	equ	0xFE5
 10878                           plusw1	equ	0xFE3
 10879                           fsr1h	equ	0xFE2
 10880                           fsr1l	equ	0xFE1
 10881                           indf2	equ	0xFDF
 10882                           postinc2	equ	0xFDE
 10883                           postdec2	equ	0xFDD
 10884                           plusw2	equ	0xFDB
 10885                           fsr2h	equ	0xFDA
 10886                           fsr2l	equ	0xFD9
 10887                           status	equ	0xFD8
 10888                           
 10889 ;; *************** function __flash_set_page_size *****************
 10890 ;; Defined at:
 10891 ;;		line 260 in file "flash.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  size            1    wreg     enum E8333
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  size            1   23[BANK0 ] enum E8333
 10896 ;;  command         4   19[BANK0 ] unsigned char [4]
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10907 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10909 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10910 ;;Total ram usage:        5 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:   13
 10913 ;; This function calls:
 10914 ;;		__flash_spi_tx
 10915 ;;		_flash_is_busy
 10916 ;;		_memcpy
 10917 ;; This function is called by:
 10918 ;;		_flash_init
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text39
 10923  0111D0                     __ptext39:
 10924                           	opt stack 0
 10925  0111D0                     __flash_set_page_size:
 10926                           	opt stack 15
 10927                           
 10928                           ;incstack = 0
 10929                           ;__flash_set_page_size@size stored from wreg
 10930  0111D0  0100               	movlb	0	; () banked
 10931  0111D2  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 10932  0111D4                     
 10933                           ;flash.c: 262: uint8_t command[4];
 10934                           ;flash.c: 265: while(flash_is_busy());
 10935  0111D4  EC9E  F095         	call	_flash_is_busy	;wreg free
 10936  0111D8  0900               	iorlw	0
 10937  0111DA  A4D8               	btfss	status,2,c
 10938  0111DC  D7FB               	goto	l13963
 10939                           
 10940                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 10941  0111DE  0100               	movlb	0	; () banked
 10942  0111E0  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 10943  0111E2  A4D8               	btfss	status,2,c
 10944  0111E4  D00E               	goto	l2777
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 10948  0111E6  0E73               	movlw	low __flash_set_page_size@command
 10949  0111E8  6F60               	movwf	memcpy@d1& (0+255),b
 10950  0111EA  0E00               	movlw	high __flash_set_page_size@command
 10951  0111EC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10952  0111EE  0E4E               	movlw	low _flash_command_pagesize_512
 10953  0111F0  6F62               	movwf	memcpy@s1& (0+255),b
 10954  0111F2  0E94               	movlw	high _flash_command_pagesize_512
 10955  0111F4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10956  0111F6  0E00               	movlw	0
 10957  0111F8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10958  0111FA  0E04               	movlw	4
 10959  0111FC  6F64               	movwf	memcpy@n& (0+255),b
 10960  0111FE  ECBB  F08B         	call	_memcpy	;wreg free
 10961  011202                     l2777:
 10962                           
 10963                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 10964  011202  0100               	movlb	0	; () banked
 10965  011204  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 10966  011206  A4D8               	btfss	status,2,c
 10967  011208  D00E               	goto	l2778
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 10971  01120A  0E73               	movlw	low __flash_set_page_size@command
 10972  01120C  6F60               	movwf	memcpy@d1& (0+255),b
 10973  01120E  0E00               	movlw	high __flash_set_page_size@command
 10974  011210  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10975  011212  0E4A               	movlw	low _flash_command_pagesize_528
 10976  011214  6F62               	movwf	memcpy@s1& (0+255),b
 10977  011216  0E94               	movlw	high _flash_command_pagesize_528
 10978  011218  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10979  01121A  0E00               	movlw	0
 10980  01121C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10981  01121E  0E04               	movlw	4
 10982  011220  6F64               	movwf	memcpy@n& (0+255),b
 10983  011222  ECBB  F08B         	call	_memcpy	;wreg free
 10984  011226                     l2778:
 10985                           
 10986                           ;flash.c: 274: _flash_spi_tx(command, 4);
 10987  011226  0E73               	movlw	low __flash_set_page_size@command
 10988  011228  0100               	movlb	0	; () banked
 10989  01122A  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 10990  01122C  0E00               	movlw	high __flash_set_page_size@command
 10991  01122E  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 10992  011230  0E00               	movlw	0
 10993  011232  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 10994  011234  0E04               	movlw	4
 10995  011236  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 10996  011238  EC86  F08D         	call	__flash_spi_tx	;wreg free
 10997  01123C  0012               	return		;funcret
 10998  01123E                     __end_of__flash_set_page_size:
 10999                           	opt stack 0
 11000                           tblptru	equ	0xFF8
 11001                           tblptrh	equ	0xFF7
 11002                           tblptrl	equ	0xFF6
 11003                           tablat	equ	0xFF5
 11004                           prodh	equ	0xFF4
 11005                           prodl	equ	0xFF3
 11006                           intcon3	equ	0xFF0
 11007                           postinc0	equ	0xFEE
 11008                           wreg	equ	0xFE8
 11009                           postdec1	equ	0xFE5
 11010                           plusw1	equ	0xFE3
 11011                           fsr1h	equ	0xFE2
 11012                           fsr1l	equ	0xFE1
 11013                           indf2	equ	0xFDF
 11014                           postinc2	equ	0xFDE
 11015                           postdec2	equ	0xFDD
 11016                           plusw2	equ	0xFDB
 11017                           fsr2h	equ	0xFDA
 11018                           fsr2l	equ	0xFD9
 11019                           status	equ	0xFD8
 11020                           
 11021 ;; *************** function _buck_init *****************
 11022 ;; Defined at:
 11023 ;;		line 543 in file "buck.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;		None
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;		None
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, status,2, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11041 ;;Total ram usage:        0 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:   11
 11044 ;; This function calls:
 11045 ;;		__buck_pin_init
 11046 ;;		__buck_timer2_init
 11047 ;; This function is called by:
 11048 ;;		_system_init
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text40
 11053  012DE6                     __ptext40:
 11054                           	opt stack 0
 11055  012DE6                     _buck_init:
 11056                           	opt stack 18
 11057                           
 11058                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 11059                           
 11060                           ;incstack = 0
 11061  012DE6  0E00               	movlw	0
 11062  012DE8  0100               	movlb	0	; () banked
 11063  012DEA  6FFF               	movwf	_buck_status& (0+255),b
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;buck.c: 546: _buck_timer2_init();
 11067  012DEC  EC4C  F096         	call	__buck_timer2_init	;wreg free
 11068                           
 11069                           ;buck.c: 547: _buck_pin_init();
 11070  012DF0  EC05  F093         	call	__buck_pin_init	;wreg free
 11071  012DF4  0012               	return		;funcret
 11072  012DF6                     __end_of_buck_init:
 11073                           	opt stack 0
 11074                           tblptru	equ	0xFF8
 11075                           tblptrh	equ	0xFF7
 11076                           tblptrl	equ	0xFF6
 11077                           tablat	equ	0xFF5
 11078                           prodh	equ	0xFF4
 11079                           prodl	equ	0xFF3
 11080                           intcon3	equ	0xFF0
 11081                           postinc0	equ	0xFEE
 11082                           wreg	equ	0xFE8
 11083                           postdec1	equ	0xFE5
 11084                           plusw1	equ	0xFE3
 11085                           fsr1h	equ	0xFE2
 11086                           fsr1l	equ	0xFE1
 11087                           indf2	equ	0xFDF
 11088                           postinc2	equ	0xFDE
 11089                           postdec2	equ	0xFDD
 11090                           plusw2	equ	0xFDB
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function __buck_timer2_init *****************
 11096 ;; Defined at:
 11097 ;;		line 64 in file "buck.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;		None
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;		None
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  1    wreg      void 
 11104 ;; Registers used:
 11105 ;;		None
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;Total ram usage:        0 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:   10
 11118 ;; This function calls:
 11119 ;;		Nothing
 11120 ;; This function is called by:
 11121 ;;		_buck_init
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           	psect	text41
 11126  012C98                     __ptext41:
 11127                           	opt stack 0
 11128  012C98                     __buck_timer2_init:
 11129                           	opt stack 18
 11130                           
 11131                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 11132                           
 11133                           ;incstack = 0
 11134  012C98  010F               	movlb	15	; () banked
 11135  012C9A  9152               	bcf	82,0,b	;volatile
 11136  012C9C  9352               	bcf	82,1,b	;volatile
 11137  012C9E  9552               	bcf	82,2,b	;volatile
 11138                           
 11139                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 11140  012CA0  86CA               	bsf	4042,3,c	;volatile
 11141  012CA2  88CA               	bsf	4042,4,c	;volatile
 11142  012CA4  8ACA               	bsf	4042,5,c	;volatile
 11143  012CA6  8CCA               	bsf	4042,6,c	;volatile
 11144                           
 11145                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 11146  012CA8  92CA               	bcf	4042,1,c	;volatile
 11147                           
 11148                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 11149  012CAA  90CA               	bcf	4042,0,c	;volatile
 11150                           
 11151                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 11152  012CAC  94CA               	bcf	4042,2,c	;volatile
 11153                           
 11154                           ; BSR set to: 15
 11155  012CAE  0012               	return		;funcret
 11156  012CB0                     __end_of__buck_timer2_init:
 11157                           	opt stack 0
 11158                           tblptru	equ	0xFF8
 11159                           tblptrh	equ	0xFF7
 11160                           tblptrl	equ	0xFF6
 11161                           tablat	equ	0xFF5
 11162                           prodh	equ	0xFF4
 11163                           prodl	equ	0xFF3
 11164                           intcon3	equ	0xFF0
 11165                           postinc0	equ	0xFEE
 11166                           wreg	equ	0xFE8
 11167                           postdec1	equ	0xFE5
 11168                           plusw1	equ	0xFE3
 11169                           fsr1h	equ	0xFE2
 11170                           fsr1l	equ	0xFE1
 11171                           indf2	equ	0xFDF
 11172                           postinc2	equ	0xFDE
 11173                           postdec2	equ	0xFDD
 11174                           plusw2	equ	0xFDB
 11175                           fsr2h	equ	0xFDA
 11176                           fsr2l	equ	0xFD9
 11177                           status	equ	0xFD8
 11178                           
 11179 ;; *************** function __buck_pin_init *****************
 11180 ;; Defined at:
 11181 ;;		line 41 in file "buck.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;		None
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      void 
 11188 ;; Registers used:
 11189 ;;		wreg, status,2
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11199 ;;Total ram usage:        0 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:   10
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_buck_init
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text42
 11210  01260A                     __ptext42:
 11211                           	opt stack 0
 11212  01260A                     __buck_pin_init:
 11213                           	opt stack 18
 11214                           
 11215                           ;buck.c: 44: LATBbits.LB1 = 0;
 11216                           
 11217                           ; BSR set to: 15
 11218                           ;incstack = 0
 11219  01260A  928A               	bcf	3978,1,c	;volatile
 11220                           
 11221                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 11222  01260C  9293               	bcf	3987,1,c	;volatile
 11223                           
 11224                           ;buck.c: 46: LATBbits.LB2 = 0;
 11225  01260E  948A               	bcf	3978,2,c	;volatile
 11226                           
 11227                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 11228  012610  9493               	bcf	3987,2,c	;volatile
 11229                           
 11230                           ;buck.c: 48: LATBbits.LB3 = 0;
 11231  012612  968A               	bcf	3978,3,c	;volatile
 11232                           
 11233                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 11234  012614  9693               	bcf	3987,3,c	;volatile
 11235                           
 11236                           ;buck.c: 52: LATBbits.LATB2 = 0;
 11237  012616  948A               	bcf	3978,2,c	;volatile
 11238                           
 11239                           ;buck.c: 53: LATBbits.LATB1 = 0;
 11240  012618  928A               	bcf	3978,1,c	;volatile
 11241                           
 11242                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11243  01261A  0E55               	movlw	85
 11244  01261C  6EA7               	movwf	4007,c	;volsfr
 11245  01261E  0EAA               	movlw	170
 11246  012620  6EA7               	movwf	4007,c	;volsfr
 11247  012622  010E               	movlb	14	; () banked
 11248  012624  91BF               	bcf	191,0,b	;volatile
 11249                           
 11250                           ;buck.c: 57: RPOR6 = 14;
 11251  012626  0E0E               	movlw	14
 11252  012628  6FC6               	movwf	198,b	;volatile
 11253                           
 11254                           ;buck.c: 58: RPOR5 = 15;
 11255  01262A  0E0F               	movlw	15
 11256  01262C  6FC5               	movwf	197,b	;volatile
 11257                           
 11258                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11259  01262E  0E55               	movlw	85
 11260  012630  6EA7               	movwf	4007,c	;volsfr
 11261  012632  0EAA               	movlw	170
 11262  012634  6EA7               	movwf	4007,c	;volsfr
 11263                           
 11264                           ; BSR set to: 14
 11265  012636  81BF               	bsf	191,0,b	;volatile
 11266                           
 11267                           ; BSR set to: 14
 11268  012638  0012               	return		;funcret
 11269  01263A                     __end_of__buck_pin_init:
 11270                           	opt stack 0
 11271                           tblptru	equ	0xFF8
 11272                           tblptrh	equ	0xFF7
 11273                           tblptrl	equ	0xFF6
 11274                           tablat	equ	0xFF5
 11275                           prodh	equ	0xFF4
 11276                           prodl	equ	0xFF3
 11277                           intcon3	equ	0xFF0
 11278                           postinc0	equ	0xFEE
 11279                           wreg	equ	0xFE8
 11280                           postdec1	equ	0xFE5
 11281                           plusw1	equ	0xFE3
 11282                           fsr1h	equ	0xFE2
 11283                           fsr1l	equ	0xFE1
 11284                           indf2	equ	0xFDF
 11285                           postinc2	equ	0xFDE
 11286                           postdec2	equ	0xFDD
 11287                           plusw2	equ	0xFDB
 11288                           fsr2h	equ	0xFDA
 11289                           fsr2l	equ	0xFD9
 11290                           status	equ	0xFD8
 11291                           
 11292 ;; *************** function _adc_init *****************
 11293 ;; Defined at:
 11294 ;;		line 9 in file "adc.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg, status,2
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11312 ;;Total ram usage:        0 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:   10
 11315 ;; This function calls:
 11316 ;;		Nothing
 11317 ;; This function is called by:
 11318 ;;		_system_init
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text43
 11323  012BDE                     __ptext43:
 11324                           	opt stack 0
 11325  012BDE                     _adc_init:
 11326                           	opt stack 19
 11327                           
 11328                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 11329                           
 11330                           ; BSR set to: 14
 11331                           ;incstack = 0
 11332  012BDE  9EC2               	bcf	4034,7,c	;volatile
 11333                           
 11334                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 11335  012BE0  8CC2               	bsf	4034,6,c	;volatile
 11336                           
 11337                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 11338  012BE2  50C2               	movf	4034,w,c	;volatile
 11339  012BE4  0BC3               	andlw	-61
 11340  012BE6  0930               	iorlw	48
 11341  012BE8  6EC2               	movwf	4034,c	;volatile
 11342                           
 11343                           ;adc.c: 14: ADCON0bits.ADON = 1;
 11344  012BEA  80C2               	bsf	4034,0,c	;volatile
 11345                           
 11346                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 11347  012BEC  9EC1               	bcf	4033,7,c	;volatile
 11348                           
 11349                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 11350  012BEE  9CC1               	bcf	4033,6,c	;volatile
 11351                           
 11352                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 11353  012BF0  50C1               	movf	4033,w,c	;volatile
 11354  012BF2  0BF8               	andlw	-8
 11355  012BF4  0906               	iorlw	6
 11356  012BF6  6EC1               	movwf	4033,c	;volatile
 11357  012BF8  0012               	return		;funcret
 11358  012BFA                     __end_of_adc_init:
 11359                           	opt stack 0
 11360                           tblptru	equ	0xFF8
 11361                           tblptrh	equ	0xFF7
 11362                           tblptrl	equ	0xFF6
 11363                           tablat	equ	0xFF5
 11364                           prodh	equ	0xFF4
 11365                           prodl	equ	0xFF3
 11366                           intcon3	equ	0xFF0
 11367                           postinc0	equ	0xFEE
 11368                           wreg	equ	0xFE8
 11369                           postdec1	equ	0xFE5
 11370                           plusw1	equ	0xFE3
 11371                           fsr1h	equ	0xFE2
 11372                           fsr1l	equ	0xFE1
 11373                           indf2	equ	0xFDF
 11374                           postinc2	equ	0xFDE
 11375                           postdec2	equ	0xFDD
 11376                           plusw2	equ	0xFDB
 11377                           fsr2h	equ	0xFDA
 11378                           fsr2l	equ	0xFD9
 11379                           status	equ	0xFD8
 11380                           
 11381 ;; *************** function __system_timer0_init *****************
 11382 ;; Defined at:
 11383 ;;		line 214 in file "os.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;		None
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      void 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;Total ram usage:        0 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:   10
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_system_init
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text44
 11412  0122F6                     __ptext44:
 11413                           	opt stack 0
 11414  0122F6                     __system_timer0_init:
 11415                           	opt stack 19
 11416                           
 11417                           ;os.c: 217: T0CONbits.T0CS = 0;
 11418                           
 11419                           ;incstack = 0
 11420  0122F6  9AD5               	bcf	4053,5,c	;volatile
 11421                           
 11422                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11423  0122F8  9CD5               	bcf	4053,6,c	;volatile
 11424                           
 11425                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11426  0122FA  94D5               	bcf	4053,2,c	;volatile
 11427                           
 11428                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11429  0122FC  82D5               	bsf	4053,1,c	;volatile
 11430                           
 11431                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11432  0122FE  90D5               	bcf	4053,0,c	;volatile
 11433                           
 11434                           ;os.c: 225: T0CONbits.PSA = 0;
 11435  012300  96D5               	bcf	4053,3,c	;volatile
 11436                           
 11437                           ;os.c: 227: switch(os.clockFrequency)
 11438  012302  D009               	goto	l1373
 11439  012304                     
 11440                           ;os.c: 230: TMR0H = 0xF8;
 11441  012304  0EF8               	movlw	248
 11442  012306  6ED7               	movwf	4055,c	;volatile
 11443                           
 11444                           ;os.c: 231: TMR0L = 0x30;
 11445  012308  0E30               	movlw	48
 11446  01230A  D003               	goto	L8
 11447  01230C                     
 11448                           ;os.c: 234: TMR0H = 0xD1;
 11449  01230C  0ED1               	movlw	209
 11450  01230E  6ED7               	movwf	4055,c	;volatile
 11451                           
 11452                           ;os.c: 235: TMR0L = 0x20;
 11453  012310  0E20               	movlw	32
 11454  012312                     L8:
 11455  012312  6ED6               	movwf	4054,c	;volatile
 11456                           
 11457                           ;os.c: 237: }
 11458                           
 11459                           ;os.c: 236: break;
 11460  012314  D008               	goto	l1375
 11461  012316                     l1373:
 11462  012316  0102               	movlb	2	; () banked
 11463  012318  5100               	movf	_os& (0+255),w,b	;volatile
 11464                           
 11465                           ; Switch size 1, requested type "space"
 11466                           ; Number of cases is 2, Range of values is 1 to 2
 11467                           ; switch strategies available:
 11468                           ; Name         Instructions Cycles
 11469                           ; simple_byte            7     4 (average)
 11470                           ;	Chosen strategy is simple_byte
 11471  01231A  0A01               	xorlw	1	; case 1
 11472  01231C  B4D8               	btfsc	status,2,c
 11473  01231E  D7F2               	goto	l1374
 11474  012320  0A03               	xorlw	3	; case 2
 11475  012322  B4D8               	btfsc	status,2,c
 11476  012324  D7F3               	goto	l1376
 11477  012326                     l1375:
 11478                           
 11479                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11480  012326  8ED5               	bsf	4053,7,c	;volatile
 11481                           
 11482                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11483  012328  94F2               	bcf	intcon,2,c	;volatile
 11484                           
 11485                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11486  01232A  8AF2               	bsf	intcon,5,c	;volatile
 11487                           
 11488                           ;os.c: 244: INTCONbits.GIE = 1;
 11489  01232C  8EF2               	bsf	intcon,7,c	;volatile
 11490                           
 11491                           ;os.c: 247: os.timeSlot = 0;
 11492  01232E  0E00               	movlw	0
 11493  012330  0102               	movlb	2	; () banked
 11494  012332  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11495                           
 11496                           ; BSR set to: 2
 11497  012334  0012               	return		;funcret
 11498  012336                     __end_of__system_timer0_init:
 11499                           	opt stack 0
 11500                           tblptru	equ	0xFF8
 11501                           tblptrh	equ	0xFF7
 11502                           tblptrl	equ	0xFF6
 11503                           tablat	equ	0xFF5
 11504                           prodh	equ	0xFF4
 11505                           prodl	equ	0xFF3
 11506                           intcon	equ	0xFF2
 11507                           intcon3	equ	0xFF0
 11508                           postinc0	equ	0xFEE
 11509                           wreg	equ	0xFE8
 11510                           postdec1	equ	0xFE5
 11511                           plusw1	equ	0xFE3
 11512                           fsr1h	equ	0xFE2
 11513                           fsr1l	equ	0xFE1
 11514                           indf2	equ	0xFDF
 11515                           postinc2	equ	0xFDE
 11516                           postdec2	equ	0xFDD
 11517                           plusw2	equ	0xFDB
 11518                           fsr2h	equ	0xFDA
 11519                           fsr2l	equ	0xFD9
 11520                           status	equ	0xFD8
 11521                           
 11522 ;; *************** function __system_encoder_init *****************
 11523 ;; Defined at:
 11524 ;;		line 160 in file "os.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;		None
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;		None
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  1    wreg      void 
 11531 ;; Registers used:
 11532 ;;		wreg, status,2
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11542 ;;Total ram usage:        0 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:   10
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_system_init
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           	psect	text45
 11553  012336                     __ptext45:
 11554                           	opt stack 0
 11555  012336                     __system_encoder_init:
 11556                           	opt stack 19
 11557                           
 11558                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11559                           
 11560                           ; BSR set to: 2
 11561                           ;incstack = 0
 11562  012336  0E55               	movlw	85
 11563  012338  6EA7               	movwf	4007,c	;volsfr
 11564  01233A  0EAA               	movlw	170
 11565  01233C  6EA7               	movwf	4007,c	;volsfr
 11566  01233E  010E               	movlb	14	; () banked
 11567  012340  91BF               	bcf	191,0,b	;volatile
 11568                           
 11569                           ;os.c: 163: RPINR1 = 0;
 11570  012342  0E00               	movlw	0
 11571  012344  6FE1               	movwf	225,b	;volatile
 11572                           
 11573                           ;os.c: 164: RPINR3 = 9;
 11574  012346  0E09               	movlw	9
 11575  012348  6FE3               	movwf	227,b	;volatile
 11576                           
 11577                           ;os.c: 165: RPINR2 = 10;
 11578  01234A  0E0A               	movlw	10
 11579  01234C  6FE2               	movwf	226,b	;volatile
 11580                           
 11581                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11582  01234E  0E55               	movlw	85
 11583  012350  6EA7               	movwf	4007,c	;volsfr
 11584  012352  0EAA               	movlw	170
 11585  012354  6EA7               	movwf	4007,c	;volsfr
 11586                           
 11587                           ; BSR set to: 14
 11588  012356  91BF               	bcf	191,0,b	;volatile
 11589                           
 11590                           ; BSR set to: 14
 11591                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11592  012358  9AF1               	bcf	intcon2,5,c	;volatile
 11593                           
 11594                           ; BSR set to: 14
 11595                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11596  01235A  90F0               	bcf	intcon3,0,c	;volatile
 11597                           
 11598                           ; BSR set to: 14
 11599                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11600  01235C  86F0               	bsf	intcon3,3,c	;volatile
 11601                           
 11602                           ; BSR set to: 14
 11603                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11604  01235E  88F1               	bsf	intcon2,4,c	;volatile
 11605                           
 11606                           ; BSR set to: 14
 11607                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11608  012360  92F0               	bcf	intcon3,1,c	;volatile
 11609                           
 11610                           ; BSR set to: 14
 11611                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11612  012362  86F1               	bsf	intcon2,3,c	;volatile
 11613                           
 11614                           ; BSR set to: 14
 11615                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11616  012364  94F0               	bcf	intcon3,2,c	;volatile
 11617                           
 11618                           ; BSR set to: 14
 11619                           ;os.c: 185: INTCONbits.GIE = 1;
 11620  012366  8EF2               	bsf	intcon,7,c	;volatile
 11621                           
 11622                           ;os.c: 187: os.encoderCount = 0;
 11623  012368  0E00               	movlw	0
 11624  01236A  0102               	movlb	2	; () banked
 11625  01236C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11626                           
 11627                           ;os.c: 188: os.buttonCount = 0;
 11628  01236E  0E00               	movlw	0
 11629  012370  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11630                           
 11631                           ; BSR set to: 2
 11632  012372  0012               	return		;funcret
 11633  012374                     __end_of__system_encoder_init:
 11634                           	opt stack 0
 11635                           tblptru	equ	0xFF8
 11636                           tblptrh	equ	0xFF7
 11637                           tblptrl	equ	0xFF6
 11638                           tablat	equ	0xFF5
 11639                           prodh	equ	0xFF4
 11640                           prodl	equ	0xFF3
 11641                           intcon	equ	0xFF2
 11642                           intcon2	equ	0xFF1
 11643                           intcon3	equ	0xFF0
 11644                           postinc0	equ	0xFEE
 11645                           wreg	equ	0xFE8
 11646                           postdec1	equ	0xFE5
 11647                           plusw1	equ	0xFE3
 11648                           fsr1h	equ	0xFE2
 11649                           fsr1l	equ	0xFE1
 11650                           indf2	equ	0xFDF
 11651                           postinc2	equ	0xFDE
 11652                           postdec2	equ	0xFDD
 11653                           plusw2	equ	0xFDB
 11654                           fsr2h	equ	0xFDA
 11655                           fsr2l	equ	0xFD9
 11656                           status	equ	0xFD8
 11657                           
 11658 ;; *************** function _system_calculate_output_voltage *****************
 11659 ;; Defined at:
 11660 ;;		line 587 in file "os.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;		None
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;  tmp             4   16[BANK0 ] long 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11675 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11678 ;;Total ram usage:        8 bytes
 11679 ;; Hardware stack levels used:    1
 11680 ;; Hardware stack levels required when called:   11
 11681 ;; This function calls:
 11682 ;;		___lmul
 11683 ;; This function is called by:
 11684 ;;		_main
 11685 ;; This function uses a non-reentrant model
 11686 ;;
 11687                           
 11688                           	psect	text46
 11689  00F3B8                     __ptext46:
 11690                           	opt stack 0
 11691  00F3B8                     _system_calculate_output_voltage:
 11692                           	opt stack 19
 11693                           
 11694                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 11695                           
 11696                           ; BSR set to: 2
 11697                           ;incstack = 0
 11698  00F3B8  0102               	movlb	2	; () banked
 11699  00F3BA  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 11700  00F3BC  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 11701  00F3BE  0100               	movlb	0	; () banked
 11702  00F3C0  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 11703  00F3C2  0102               	movlb	2	; () banked
 11704  00F3C4  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 11705  00F3C6  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 11706  00F3C8  0100               	movlb	0	; () banked
 11707  00F3CA  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11708  00F3CC  0102               	movlb	2	; () banked
 11709  00F3CE  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 11710  00F3D0  0100               	movlb	0	; () banked
 11711  00F3D2  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11712  00F3D4  0102               	movlb	2	; () banked
 11713  00F3D6  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 11714  00F3D8  0100               	movlb	0	; () banked
 11715  00F3DA  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11716  00F3DC  0102               	movlb	2	; () banked
 11717  00F3DE  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 11718  00F3E0  0100               	movlb	0	; () banked
 11719  00F3E2  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11720  00F3E4  0102               	movlb	2	; () banked
 11721  00F3E6  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 11722  00F3E8  0100               	movlb	0	; () banked
 11723  00F3EA  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11724  00F3EC  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 11725  00F3F0  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 11726  00F3F4  0E00               	movlw	0
 11727  00F3F6  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 11728  00F3F8  0EFF               	movlw	-1
 11729  00F3FA  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 11730  00F3FC  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 11731                           
 11732                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 11733  00F3FE  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 11734  00F402  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 11735  00F406  0E00               	movlw	0
 11736  00F408  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 11737  00F40A  0EFF               	movlw	255
 11738  00F40C  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 11739  00F40E  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 11740  00F410  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 11741  00F412  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11742  00F414  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 11743  00F416  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11744  00F418  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 11745  00F41A  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11746  00F41C  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 11747  00F41E  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 11751  00F420  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 11752  00F424  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 11753  00F428  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 11754  00F42C  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 11755  00F430  EE23  F013         	lfsr	2,_calibrationParameters+19
 11756  00F434  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11757  00F438  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11758  00F43C  0E00               	movlw	0
 11759  00F43E  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11760  00F440  0EFF               	movlw	-1
 11761  00F442  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11762  00F444  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11763  00F446  ECB3  F08D         	call	___lmul	;wreg free
 11764  00F44A  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 11765  00F44E  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 11766  00F452  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 11767  00F456  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 11768                           
 11769                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 11770  00F45A  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 11771  00F45E  0EFF               	movlw	-1
 11772  00F460  0100               	movlb	0	; () banked
 11773  00F462  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11774  00F464  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 11775  00F466  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11776  00F468  D005               	goto	u15320
 11777  00F46A                     u15325:
 11778  00F46A  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11779  00F46C  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11780  00F46E  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11781  00F470  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11782  00F472  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11783  00F474                     u15320:
 11784  00F474  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11785  00F476  D7F9               	goto	u15325
 11786                           
 11787                           ;os.c: 593: tmp += 1;
 11788  00F478  0E01               	movlw	1
 11789  00F47A  0100               	movlb	0	; () banked
 11790  00F47C  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11791  00F47E  0E00               	movlw	0
 11792  00F480  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11793  00F482  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11794  00F484  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;os.c: 594: tmp >>= 1;
 11798  00F486  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11799  00F488  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11800  00F48A  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11801  00F48C  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11802  00F48E  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11803                           
 11804                           ; BSR set to: 0
 11805                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 11806  00F490  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 11807  00F494  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 11808                           
 11809                           ; BSR set to: 0
 11810  00F498  0012               	return		;funcret
 11811  00F49A                     __end_of_system_calculate_output_voltage:
 11812                           	opt stack 0
 11813                           tblptru	equ	0xFF8
 11814                           tblptrh	equ	0xFF7
 11815                           tblptrl	equ	0xFF6
 11816                           tablat	equ	0xFF5
 11817                           prodh	equ	0xFF4
 11818                           prodl	equ	0xFF3
 11819                           intcon	equ	0xFF2
 11820                           intcon2	equ	0xFF1
 11821                           intcon3	equ	0xFF0
 11822                           postinc0	equ	0xFEE
 11823                           wreg	equ	0xFE8
 11824                           postdec1	equ	0xFE5
 11825                           plusw1	equ	0xFE3
 11826                           fsr1h	equ	0xFE2
 11827                           fsr1l	equ	0xFE1
 11828                           indf2	equ	0xFDF
 11829                           postinc2	equ	0xFDE
 11830                           postdec2	equ	0xFDD
 11831                           plusw2	equ	0xFDB
 11832                           fsr2h	equ	0xFDA
 11833                           fsr2l	equ	0xFD9
 11834                           status	equ	0xFD8
 11835                           
 11836 ;; *************** function _system_calculate_output_current *****************
 11837 ;; Defined at:
 11838 ;;		line 625 in file "os.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  tmp             4   16[BANK0 ] long 
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;Total ram usage:        8 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:   11
 11859 ;; This function calls:
 11860 ;;		___lmul
 11861 ;;		_buck_get_mode
 11862 ;; This function is called by:
 11863 ;;		_main
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text47
 11868  00E052                     __ptext47:
 11869                           	opt stack 0
 11870  00E052                     _system_calculate_output_current:
 11871                           	opt stack 19
 11872                           
 11873                           ;os.c: 627: int32_t tmp;
 11874                           ;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;incstack = 0
 11878  00E052  ECA6  F097         	call	_buck_get_mode	;wreg free
 11879  00E056  0900               	iorlw	0
 11880  00E058  B4D8               	btfsc	status,2,c
 11881  00E05A  D005               	goto	u15350
 11882  00E05C  ECA6  F097         	call	_buck_get_mode	;wreg free
 11883  00E060  0A80               	xorlw	128
 11884  00E062  A4D8               	btfss	status,2,c
 11885  00E064  D006               	goto	l1440
 11886  00E066                     u15350:
 11887                           
 11888                           ;os.c: 630: {
 11889                           ;os.c: 631: os.output_current = 0;
 11890  00E066  0E00               	movlw	0
 11891  00E068  0102               	movlb	2	; () banked
 11892  00E06A  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 11893  00E06C  0E00               	movlw	0
 11894  00E06E  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 11895                           
 11896                           ;os.c: 632: }
 11897  00E070  0012               	return	
 11898  00E072                     l1440:
 11899                           
 11900                           ;os.c: 633: else
 11901                           ;os.c: 634: {
 11902                           ;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.output_current_adc[1] + os.ou
      +                          tput_current_adc[2] + os.output_current_adc[3]);
 11903                           
 11904                           ; BSR set to: 2
 11905  00E072  0102               	movlb	2	; () banked
 11906  00E074  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 11907  00E076  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 11908  00E078  0100               	movlb	0	; () banked
 11909  00E07A  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 11910  00E07C  0102               	movlb	2	; () banked
 11911  00E07E  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 11912  00E080  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 11913  00E082  0100               	movlb	0	; () banked
 11914  00E084  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11915  00E086  0102               	movlb	2	; () banked
 11916  00E088  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 11917  00E08A  0100               	movlb	0	; () banked
 11918  00E08C  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11919  00E08E  0102               	movlb	2	; () banked
 11920  00E090  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 11921  00E092  0100               	movlb	0	; () banked
 11922  00E094  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11923  00E096  0102               	movlb	2	; () banked
 11924  00E098  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 11925  00E09A  0100               	movlb	0	; () banked
 11926  00E09C  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11927  00E09E  0102               	movlb	2	; () banked
 11928  00E0A0  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 11929  00E0A2  0100               	movlb	0	; () banked
 11930  00E0A4  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11931  00E0A6  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 11932  00E0AA  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 11933  00E0AE  0E00               	movlw	0
 11934  00E0B0  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 11935  00E0B2  0EFF               	movlw	-1
 11936  00E0B4  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 11937  00E0B6  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 11938                           
 11939                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 11940  00E0B8  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 11941  00E0BC  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 11942  00E0C0  0E00               	movlw	0
 11943  00E0C2  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11944  00E0C4  0EFF               	movlw	255
 11945  00E0C6  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11946  00E0C8  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11947  00E0CA  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11948  00E0CC  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11949  00E0CE  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11950  00E0D0  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11951  00E0D2  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11952  00E0D4  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11953  00E0D6  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11954  00E0D8  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11955                           
 11956                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 11957  00E0DA  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 11958  00E0DE  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 11959  00E0E2  0E00               	movlw	0
 11960  00E0E4  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11961  00E0E6  0EFF               	movlw	255
 11962  00E0E8  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11963  00E0EA  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11964  00E0EC  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11965  00E0EE  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11966  00E0F0  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11967  00E0F2  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11968  00E0F4  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11969  00E0F6  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11970  00E0F8  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11971  00E0FA  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 11975  00E0FC  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 11976  00E100  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 11977  00E104  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 11978  00E108  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 11979  00E10C  EE23  F02B         	lfsr	2,_calibrationParameters+43
 11980  00E110  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11981  00E114  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11982  00E118  0E00               	movlw	0
 11983  00E11A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11984  00E11C  0EFF               	movlw	-1
 11985  00E11E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11986  00E120  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11987  00E122  ECB3  F08D         	call	___lmul	;wreg free
 11988  00E126  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 11989  00E12A  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 11990  00E12E  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 11991  00E132  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 11992                           
 11993                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 11994  00E136  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 11995  00E13A  0EFF               	movlw	-1
 11996  00E13C  0100               	movlb	0	; () banked
 11997  00E13E  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11998  00E140  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 11999  00E142  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12000  00E144  D005               	goto	u15360
 12001  00E146                     u15365:
 12002  00E146  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12003  00E148  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12004  00E14A  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12005  00E14C  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12006  00E14E  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12007  00E150                     u15360:
 12008  00E150  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 12009  00E152  D7F9               	goto	u15365
 12010                           
 12011                           ;os.c: 640: tmp += 1;
 12012  00E154  0E01               	movlw	1
 12013  00E156  0100               	movlb	0	; () banked
 12014  00E158  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12015  00E15A  0E00               	movlw	0
 12016  00E15C  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12017  00E15E  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12018  00E160  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;os.c: 641: tmp >>= 1;
 12022  00E162  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12023  00E164  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12024  00E166  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12025  00E168  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12026  00E16A  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;os.c: 642: os.output_current = (int16_t) tmp;
 12030  00E16C  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 12031  00E170  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 12032  00E174  0012               	return	
 12033  00E176                     __end_of_system_calculate_output_current:
 12034                           	opt stack 0
 12035                           tblptru	equ	0xFF8
 12036                           tblptrh	equ	0xFF7
 12037                           tblptrl	equ	0xFF6
 12038                           tablat	equ	0xFF5
 12039                           prodh	equ	0xFF4
 12040                           prodl	equ	0xFF3
 12041                           intcon	equ	0xFF2
 12042                           intcon2	equ	0xFF1
 12043                           intcon3	equ	0xFF0
 12044                           postinc0	equ	0xFEE
 12045                           wreg	equ	0xFE8
 12046                           postdec1	equ	0xFE5
 12047                           plusw1	equ	0xFE3
 12048                           fsr1h	equ	0xFE2
 12049                           fsr1l	equ	0xFE1
 12050                           indf2	equ	0xFDF
 12051                           postinc2	equ	0xFDE
 12052                           postdec2	equ	0xFDD
 12053                           plusw2	equ	0xFDB
 12054                           fsr2h	equ	0xFDA
 12055                           fsr2l	equ	0xFD9
 12056                           status	equ	0xFD8
 12057                           
 12058 ;; *************** function _system_calculate_input_voltage *****************
 12059 ;; Defined at:
 12060 ;;		line 570 in file "os.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;		None
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  tmp             4   16[BANK0 ] long 
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12075 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12076 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12077 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;Total ram usage:        8 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:   11
 12081 ;; This function calls:
 12082 ;;		___lmul
 12083 ;; This function is called by:
 12084 ;;		_main
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text48
 12089  00F49A                     __ptext48:
 12090                           	opt stack 0
 12091  00F49A                     _system_calculate_input_voltage:
 12092                           	opt stack 19
 12093                           
 12094                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 12095                           
 12096                           ;incstack = 0
 12097  00F49A  0102               	movlb	2	; () banked
 12098  00F49C  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 12099  00F49E  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 12100  00F4A0  0100               	movlb	0	; () banked
 12101  00F4A2  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 12102  00F4A4  0102               	movlb	2	; () banked
 12103  00F4A6  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 12104  00F4A8  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 12105  00F4AA  0100               	movlb	0	; () banked
 12106  00F4AC  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12107  00F4AE  0102               	movlb	2	; () banked
 12108  00F4B0  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 12109  00F4B2  0100               	movlb	0	; () banked
 12110  00F4B4  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12111  00F4B6  0102               	movlb	2	; () banked
 12112  00F4B8  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 12113  00F4BA  0100               	movlb	0	; () banked
 12114  00F4BC  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12115  00F4BE  0102               	movlb	2	; () banked
 12116  00F4C0  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 12117  00F4C2  0100               	movlb	0	; () banked
 12118  00F4C4  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12119  00F4C6  0102               	movlb	2	; () banked
 12120  00F4C8  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 12121  00F4CA  0100               	movlb	0	; () banked
 12122  00F4CC  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12123  00F4CE  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 12124  00F4D2  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 12125  00F4D6  0E00               	movlw	0
 12126  00F4D8  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 12127  00F4DA  0EFF               	movlw	-1
 12128  00F4DC  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 12129  00F4DE  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 12130                           
 12131                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 12132  00F4E0  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 12133  00F4E4  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 12134  00F4E8  0E00               	movlw	0
 12135  00F4EA  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 12136  00F4EC  0EFF               	movlw	255
 12137  00F4EE  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 12138  00F4F0  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 12139  00F4F2  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 12140  00F4F4  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12141  00F4F6  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 12142  00F4F8  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12143  00F4FA  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 12144  00F4FC  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12145  00F4FE  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 12146  00F500  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 12150  00F502  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 12151  00F506  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 12152  00F50A  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 12153  00F50E  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 12154  00F512  EE23  F007         	lfsr	2,_calibrationParameters+7
 12155  00F516  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12156  00F51A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12157  00F51E  0E00               	movlw	0
 12158  00F520  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12159  00F522  0EFF               	movlw	-1
 12160  00F524  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12161  00F526  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12162  00F528  ECB3  F08D         	call	___lmul	;wreg free
 12163  00F52C  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 12164  00F530  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 12165  00F534  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 12166  00F538  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 12167                           
 12168                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 12169  00F53C  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 12170  00F540  0EFF               	movlw	-1
 12171  00F542  0100               	movlb	0	; () banked
 12172  00F544  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12173  00F546  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 12174  00F548  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12175  00F54A  D005               	goto	u15330
 12176  00F54C                     u15335:
 12177  00F54C  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12178  00F54E  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12179  00F550  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12180  00F552  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12181  00F554  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12182  00F556                     u15330:
 12183  00F556  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12184  00F558  D7F9               	goto	u15335
 12185                           
 12186                           ;os.c: 576: tmp += 1;
 12187  00F55A  0E01               	movlw	1
 12188  00F55C  0100               	movlb	0	; () banked
 12189  00F55E  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12190  00F560  0E00               	movlw	0
 12191  00F562  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12192  00F564  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12193  00F566  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;os.c: 577: tmp >>= 1;
 12197  00F568  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12198  00F56A  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12199  00F56C  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12200  00F56E  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12201  00F570  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 12205  00F572  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12206  00F576  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12207                           
 12208                           ; BSR set to: 0
 12209  00F57A  0012               	return		;funcret
 12210  00F57C                     __end_of_system_calculate_input_voltage:
 12211                           	opt stack 0
 12212                           tblptru	equ	0xFF8
 12213                           tblptrh	equ	0xFF7
 12214                           tblptrl	equ	0xFF6
 12215                           tablat	equ	0xFF5
 12216                           prodh	equ	0xFF4
 12217                           prodl	equ	0xFF3
 12218                           intcon	equ	0xFF2
 12219                           intcon2	equ	0xFF1
 12220                           intcon3	equ	0xFF0
 12221                           postinc0	equ	0xFEE
 12222                           wreg	equ	0xFE8
 12223                           postdec1	equ	0xFE5
 12224                           plusw1	equ	0xFE3
 12225                           fsr1h	equ	0xFE2
 12226                           fsr1l	equ	0xFE1
 12227                           indf2	equ	0xFDF
 12228                           postinc2	equ	0xFDE
 12229                           postdec2	equ	0xFDD
 12230                           plusw2	equ	0xFDB
 12231                           fsr2h	equ	0xFDA
 12232                           fsr2l	equ	0xFD9
 12233                           status	equ	0xFD8
 12234                           
 12235 ;; *************** function _system_calculate_input_current *****************
 12236 ;; Defined at:
 12237 ;;		line 604 in file "os.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;  tmp             4   16[BANK0 ] long 
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12252 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12254 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12255 ;;Total ram usage:        8 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:   11
 12258 ;; This function calls:
 12259 ;;		___lmul
 12260 ;;		_buck_get_mode
 12261 ;; This function is called by:
 12262 ;;		_main
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text49
 12267  00E176                     __ptext49:
 12268                           	opt stack 0
 12269  00E176                     _system_calculate_input_current:
 12270                           	opt stack 19
 12271                           
 12272                           ;os.c: 606: int32_t tmp;
 12273                           ;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;incstack = 0
 12277  00E176  ECA6  F097         	call	_buck_get_mode	;wreg free
 12278  00E17A  0900               	iorlw	0
 12279  00E17C  B4D8               	btfsc	status,2,c
 12280  00E17E  D005               	goto	u15480
 12281  00E180  ECA6  F097         	call	_buck_get_mode	;wreg free
 12282  00E184  0A80               	xorlw	128
 12283  00E186  A4D8               	btfss	status,2,c
 12284  00E188  D006               	goto	l1433
 12285  00E18A                     u15480:
 12286                           
 12287                           ;os.c: 609: {
 12288                           ;os.c: 610: os.input_current = 0;
 12289  00E18A  0E00               	movlw	0
 12290  00E18C  0102               	movlb	2	; () banked
 12291  00E18E  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 12292  00E190  0E00               	movlw	0
 12293  00E192  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 12294                           
 12295                           ;os.c: 611: }
 12296  00E194  0012               	return	
 12297  00E196                     l1433:
 12298                           
 12299                           ;os.c: 612: else
 12300                           ;os.c: 613: {
 12301                           ;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.input_current_adc[1] + os.inpu
      +                          t_current_adc[2] + os.input_current_adc[3]);
 12302                           
 12303                           ; BSR set to: 2
 12304  00E196  0102               	movlb	2	; () banked
 12305  00E198  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 12306  00E19A  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 12307  00E19C  0100               	movlb	0	; () banked
 12308  00E19E  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 12309  00E1A0  0102               	movlb	2	; () banked
 12310  00E1A2  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 12311  00E1A4  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 12312  00E1A6  0100               	movlb	0	; () banked
 12313  00E1A8  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12314  00E1AA  0102               	movlb	2	; () banked
 12315  00E1AC  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 12316  00E1AE  0100               	movlb	0	; () banked
 12317  00E1B0  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12318  00E1B2  0102               	movlb	2	; () banked
 12319  00E1B4  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 12320  00E1B6  0100               	movlb	0	; () banked
 12321  00E1B8  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12322  00E1BA  0102               	movlb	2	; () banked
 12323  00E1BC  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 12324  00E1BE  0100               	movlb	0	; () banked
 12325  00E1C0  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12326  00E1C2  0102               	movlb	2	; () banked
 12327  00E1C4  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 12328  00E1C6  0100               	movlb	0	; () banked
 12329  00E1C8  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12330  00E1CA  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 12331  00E1CE  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 12332  00E1D2  0E00               	movlw	0
 12333  00E1D4  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 12334  00E1D6  0EFF               	movlw	-1
 12335  00E1D8  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 12336  00E1DA  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 12337                           
 12338                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 12339  00E1DC  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 12340  00E1E0  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 12341  00E1E4  0E00               	movlw	0
 12342  00E1E6  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12343  00E1E8  0EFF               	movlw	255
 12344  00E1EA  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12345  00E1EC  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12346  00E1EE  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12347  00E1F0  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12348  00E1F2  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12349  00E1F4  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12350  00E1F6  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12351  00E1F8  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12352  00E1FA  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12353  00E1FC  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12354                           
 12355                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 12356  00E1FE  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 12357  00E202  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 12358  00E206  0E00               	movlw	0
 12359  00E208  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12360  00E20A  0EFF               	movlw	255
 12361  00E20C  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12362  00E20E  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12363  00E210  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12364  00E212  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12365  00E214  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12366  00E216  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12367  00E218  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12368  00E21A  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12369  00E21C  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12370  00E21E  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 12374  00E220  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 12375  00E224  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 12376  00E228  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 12377  00E22C  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 12378  00E230  EE23  F01F         	lfsr	2,_calibrationParameters+31
 12379  00E234  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12380  00E238  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12381  00E23C  0E00               	movlw	0
 12382  00E23E  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12383  00E240  0EFF               	movlw	-1
 12384  00E242  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12385  00E244  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12386  00E246  ECB3  F08D         	call	___lmul	;wreg free
 12387  00E24A  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 12388  00E24E  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 12389  00E252  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 12390  00E256  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 12391                           
 12392                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 12393  00E25A  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 12394  00E25E  0EFF               	movlw	-1
 12395  00E260  0100               	movlb	0	; () banked
 12396  00E262  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12397  00E264  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12398  00E266  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12399  00E268  D005               	goto	u15490
 12400  00E26A                     u15495:
 12401  00E26A  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12402  00E26C  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12403  00E26E  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12404  00E270  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12405  00E272  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12406  00E274                     u15490:
 12407  00E274  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12408  00E276  D7F9               	goto	u15495
 12409                           
 12410                           ;os.c: 619: tmp += 1;
 12411  00E278  0E01               	movlw	1
 12412  00E27A  0100               	movlb	0	; () banked
 12413  00E27C  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12414  00E27E  0E00               	movlw	0
 12415  00E280  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12416  00E282  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12417  00E284  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;os.c: 620: tmp >>= 1;
 12421  00E286  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12422  00E288  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12423  00E28A  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12424  00E28C  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12425  00E28E  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12429  00E290  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12430  00E294  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12431  00E298  0012               	return	
 12432  00E29A                     __end_of_system_calculate_input_current:
 12433                           	opt stack 0
 12434                           tblptru	equ	0xFF8
 12435                           tblptrh	equ	0xFF7
 12436                           tblptrl	equ	0xFF6
 12437                           tablat	equ	0xFF5
 12438                           prodh	equ	0xFF4
 12439                           prodl	equ	0xFF3
 12440                           intcon	equ	0xFF2
 12441                           intcon2	equ	0xFF1
 12442                           intcon3	equ	0xFF0
 12443                           postinc0	equ	0xFEE
 12444                           wreg	equ	0xFE8
 12445                           postdec1	equ	0xFE5
 12446                           plusw1	equ	0xFE3
 12447                           fsr1h	equ	0xFE2
 12448                           fsr1l	equ	0xFE1
 12449                           indf2	equ	0xFDF
 12450                           postinc2	equ	0xFDE
 12451                           postdec2	equ	0xFDD
 12452                           plusw2	equ	0xFDB
 12453                           fsr2h	equ	0xFDA
 12454                           fsr2l	equ	0xFD9
 12455                           status	equ	0xFD8
 12456                           
 12457 ;; *************** function _log_write_to_disk *****************
 12458 ;; Defined at:
 12459 ;;		line 199 in file "log.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;  log_entry      32  113[BANK0 ] struct .
 12464 ;;  file_number     1  112[BANK0 ] unsigned char 
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1    wreg      void 
 12467 ;; Registers used:
 12468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 0/0
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12475 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12477 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12478 ;;Total ram usage:       33 bytes
 12479 ;; Hardware stack levels used:    1
 12480 ;; Hardware stack levels required when called:   17
 12481 ;; This function calls:
 12482 ;;		_fat_append_to_file
 12483 ;;		_fat_create_file
 12484 ;;		_fat_find_file
 12485 ;;		_log_generate_entry
 12486 ;; This function is called by:
 12487 ;;		_main
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491                           	psect	text50
 12492  01123E                     __ptext50:
 12493                           	opt stack 0
 12494  01123E                     _log_write_to_disk:
 12495                           	opt stack 13
 12496                           
 12497                           ;log.c: 201: uint8_t file_number;
 12498                           ;log.c: 202: logEntry_t log_entry;
 12499                           ;log.c: 205: log_generate_entry(&log_entry);
 12500                           
 12501                           ;incstack = 0
 12502  01123E  0ED1               	movlw	low log_write_to_disk@log_entry
 12503  011240  0100               	movlb	0	; () banked
 12504  011242  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12505  011244  0E00               	movlw	high log_write_to_disk@log_entry
 12506  011246  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12507  011248  EC26  F055         	call	_log_generate_entry	;wreg free
 12508                           
 12509                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12510  01124C  0EEF               	movlw	low _filename
 12511  01124E  0100               	movlb	0	; () banked
 12512  011250  6F87               	movwf	fat_find_file@name& (0+255),b
 12513  011252  0E02               	movlw	high _filename
 12514  011254  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12515  011256  0EF8               	movlw	low _extension
 12516  011258  6F89               	movwf	fat_find_file@extension& (0+255),b
 12517  01125A  0E02               	movlw	high _extension
 12518  01125C  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12519  01125E  EC4F  F07D         	call	_fat_find_file	;wreg free
 12520  011262  0100               	movlb	0	; () banked
 12521  011264  6FD0               	movwf	log_write_to_disk@file_number& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;log.c: 209: if(file_number==0xFF)
 12525  011266  29D0               	incf	log_write_to_disk@file_number& (0+255),w,b
 12526  011268  A4D8               	btfss	status,2,c
 12527  01126A  D014               	goto	l3315
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;log.c: 210: {
 12531                           ;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12532  01126C  0EEF               	movlw	low _filename
 12533  01126E  6F9B               	movwf	fat_create_file@name& (0+255),b
 12534  011270  0E02               	movlw	high _filename
 12535  011272  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12536  011274  0EF8               	movlw	low _extension
 12537  011276  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12538  011278  0E02               	movlw	high _extension
 12539  01127A  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12540  01127C  0E00               	movlw	0
 12541  01127E  6F9F               	movwf	fat_create_file@size& (0+255),b
 12542  011280  0E00               	movlw	0
 12543  011282  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12544  011284  0E00               	movlw	0
 12545  011286  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12546  011288  0E00               	movlw	0
 12547  01128A  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12548  01128C  EC89  F069         	call	_fat_create_file	;wreg free
 12549  011290  0100               	movlb	0	; () banked
 12550  011292  6FD0               	movwf	log_write_to_disk@file_number& (0+255),b
 12551  011294                     l3315:
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;log.c: 213: }
 12555                           ;log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entry);
 12556                           
 12557                           ; BSR set to: 0
 12558  011294  0E00               	movlw	0
 12559  011296  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12560  011298  0E20               	movlw	32
 12561  01129A  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12562  01129C  0ED1               	movlw	low log_write_to_disk@log_entry
 12563  01129E  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12564  0112A0  0E00               	movlw	high log_write_to_disk@log_entry
 12565  0112A2  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12566  0112A4  51D0               	movf	log_write_to_disk@file_number& (0+255),w,b
 12567  0112A6  EC9A  F063         	call	_fat_append_to_file
 12568  0112AA  0012               	return		;funcret
 12569  0112AC                     __end_of_log_write_to_disk:
 12570                           	opt stack 0
 12571                           tblptru	equ	0xFF8
 12572                           tblptrh	equ	0xFF7
 12573                           tblptrl	equ	0xFF6
 12574                           tablat	equ	0xFF5
 12575                           prodh	equ	0xFF4
 12576                           prodl	equ	0xFF3
 12577                           intcon	equ	0xFF2
 12578                           intcon2	equ	0xFF1
 12579                           intcon3	equ	0xFF0
 12580                           postinc0	equ	0xFEE
 12581                           wreg	equ	0xFE8
 12582                           postdec1	equ	0xFE5
 12583                           plusw1	equ	0xFE3
 12584                           fsr1h	equ	0xFE2
 12585                           fsr1l	equ	0xFE1
 12586                           indf2	equ	0xFDF
 12587                           postinc2	equ	0xFDE
 12588                           postdec2	equ	0xFDD
 12589                           plusw2	equ	0xFDB
 12590                           fsr2h	equ	0xFDA
 12591                           fsr2l	equ	0xFD9
 12592                           status	equ	0xFD8
 12593                           
 12594 ;; *************** function _log_generate_entry *****************
 12595 ;; Defined at:
 12596 ;;		line 174 in file "log.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;  log_entry       2   24[BANK0 ] PTR struct .
 12599 ;;		 -> log_write_to_disk@log_entry(32), 
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1    wreg      void 
 12604 ;; Registers used:
 12605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12614 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12615 ;;Total ram usage:        4 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; Hardware stack levels required when called:   13
 12618 ;; This function calls:
 12619 ;;		___aldiv
 12620 ;;		___lldiv
 12621 ;;		__get_checksum
 12622 ;;		__get_dateTime
 12623 ;;		__get_temperature
 12624 ;; This function is called by:
 12625 ;;		_log_write_to_disk
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           	psect	text51
 12630  00AA4C                     __ptext51:
 12631                           	opt stack 0
 12632  00AA4C                     _log_generate_entry:
 12633                           	opt stack 16
 12634                           
 12635                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 12636                           
 12637                           ;incstack = 0
 12638  00AA4C  ECD3  F06B         	call	__get_dateTime	;wreg free
 12639  00AA50  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 12640  00AA54  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 12641  00AA58  0100               	movlb	0	; () banked
 12642  00AA5A  C064  FFDE         	movff	?__get_dateTime,postinc2
 12643  00AA5E  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 12644  00AA62  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 12645  00AA66  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 12649  00AA6A  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 12650  00AA6E  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 12651  00AA72  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 12652  00AA76  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 12653  00AA7A  C041  F064         	movff	_averageCount,___lldiv@divisor
 12654  00AA7E  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12655  00AA82  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12656  00AA84  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12657  00AA86  EC07  F085         	call	___lldiv	;wreg free
 12658  00AA8A  0100               	movlb	0	; () banked
 12659  00AA8C  EE20 F004          	lfsr	2,4
 12660  00AA90  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12661  00AA92  26D9               	addwf	fsr2l,f,c
 12662  00AA94  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12663  00AA96  22DA               	addwfc	fsr2h,f,c
 12664  00AA98  C060  FFDE         	movff	?___lldiv,postinc2
 12665  00AA9C  C061  FFDD         	movff	?___lldiv+1,postdec2
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 12669  00AAA0  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 12670  00AAA4  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 12671  00AAA8  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 12672  00AAAC  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 12673  00AAB0  C041  F064         	movff	_averageCount,___lldiv@divisor
 12674  00AAB4  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12675  00AAB8  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12676  00AABA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12677  00AABC  EC07  F085         	call	___lldiv	;wreg free
 12678  00AAC0  0100               	movlb	0	; () banked
 12679  00AAC2  EE20 F006          	lfsr	2,6
 12680  00AAC6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12681  00AAC8  26D9               	addwf	fsr2l,f,c
 12682  00AACA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12683  00AACC  22DA               	addwfc	fsr2h,f,c
 12684  00AACE  C060  FFDE         	movff	?___lldiv,postinc2
 12685  00AAD2  C061  FFDD         	movff	?___lldiv+1,postdec2
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 12689  00AAD6  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 12690  00AADA  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 12691  00AADE  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 12692  00AAE2  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 12693  00AAE6  C041  F064         	movff	_averageCount,___lldiv@divisor
 12694  00AAEA  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12695  00AAEE  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12696  00AAF0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12697  00AAF2  EC07  F085         	call	___lldiv	;wreg free
 12698  00AAF6  0100               	movlb	0	; () banked
 12699  00AAF8  EE20 F008          	lfsr	2,8
 12700  00AAFC  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12701  00AAFE  26D9               	addwf	fsr2l,f,c
 12702  00AB00  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12703  00AB02  22DA               	addwfc	fsr2h,f,c
 12704  00AB04  C060  FFDE         	movff	?___lldiv,postinc2
 12705  00AB08  C061  FFDD         	movff	?___lldiv+1,postdec2
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 12709  00AB0C  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 12710  00AB10  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 12711  00AB14  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 12712  00AB18  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 12713  00AB1C  C041  F064         	movff	_averageCount,___lldiv@divisor
 12714  00AB20  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12715  00AB24  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12716  00AB26  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12717  00AB28  EC07  F085         	call	___lldiv	;wreg free
 12718  00AB2C  0100               	movlb	0	; () banked
 12719  00AB2E  EE20 F00A          	lfsr	2,10
 12720  00AB32  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12721  00AB34  26D9               	addwf	fsr2l,f,c
 12722  00AB36  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12723  00AB38  22DA               	addwfc	fsr2h,f,c
 12724  00AB3A  C060  FFDE         	movff	?___lldiv,postinc2
 12725  00AB3E  C061  FFDD         	movff	?___lldiv+1,postdec2
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 12729  00AB42  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 12730  00AB46  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 12731  00AB4A  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 12732  00AB4E  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 12733  00AB52  C041  F064         	movff	_averageCount,___lldiv@divisor
 12734  00AB56  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12735  00AB5A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12736  00AB5C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12737  00AB5E  EC07  F085         	call	___lldiv	;wreg free
 12738  00AB62  0100               	movlb	0	; () banked
 12739  00AB64  EE20 F00C          	lfsr	2,12
 12740  00AB68  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12741  00AB6A  26D9               	addwf	fsr2l,f,c
 12742  00AB6C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12743  00AB6E  22DA               	addwfc	fsr2h,f,c
 12744  00AB70  C060  FFDE         	movff	?___lldiv,postinc2
 12745  00AB74  C061  FFDD         	movff	?___lldiv+1,postdec2
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 12749  00AB78  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 12750  00AB7C  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 12751  00AB80  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 12752  00AB84  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 12753  00AB88  C041  F064         	movff	_averageCount,___lldiv@divisor
 12754  00AB8C  C042  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12755  00AB90  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12756  00AB92  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12757  00AB94  EC07  F085         	call	___lldiv	;wreg free
 12758  00AB98  0100               	movlb	0	; () banked
 12759  00AB9A  EE20 F00E          	lfsr	2,14
 12760  00AB9E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12761  00ABA0  26D9               	addwf	fsr2l,f,c
 12762  00ABA2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12763  00ABA4  22DA               	addwfc	fsr2h,f,c
 12764  00ABA6  C060  FFDE         	movff	?___lldiv,postinc2
 12765  00ABAA  C061  FFDD         	movff	?___lldiv+1,postdec2
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 12769  00ABAE  0EF4               	movlw	244
 12770  00ABB0  0102               	movlb	2	; () banked
 12771  00ABB2  2582               	addwf	_inputCapacitySum& (0+255),w,b
 12772  00ABB4  0100               	movlb	0	; () banked
 12773  00ABB6  6F60               	movwf	___lldiv@dividend& (0+255),b
 12774  00ABB8  0E01               	movlw	1
 12775  00ABBA  0102               	movlb	2	; () banked
 12776  00ABBC  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 12777  00ABBE  0100               	movlb	0	; () banked
 12778  00ABC0  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12779  00ABC2  0E00               	movlw	0
 12780  00ABC4  0102               	movlb	2	; () banked
 12781  00ABC6  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 12782  00ABC8  0100               	movlb	0	; () banked
 12783  00ABCA  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12784  00ABCC  0E00               	movlw	0
 12785  00ABCE  0102               	movlb	2	; () banked
 12786  00ABD0  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 12787  00ABD2  0100               	movlb	0	; () banked
 12788  00ABD4  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12789  00ABD6  0EE8               	movlw	232
 12790  00ABD8  6F64               	movwf	___lldiv@divisor& (0+255),b
 12791  00ABDA  0E03               	movlw	3
 12792  00ABDC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12793  00ABDE  0E00               	movlw	0
 12794  00ABE0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12795  00ABE2  0E00               	movlw	0
 12796  00ABE4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12797  00ABE6  EC07  F085         	call	___lldiv	;wreg free
 12798  00ABEA  0100               	movlb	0	; () banked
 12799  00ABEC  EE20 F010          	lfsr	2,16
 12800  00ABF0  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12801  00ABF2  26D9               	addwf	fsr2l,f,c
 12802  00ABF4  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12803  00ABF6  22DA               	addwfc	fsr2h,f,c
 12804  00ABF8  C060  FFDE         	movff	?___lldiv,postinc2
 12805  00ABFC  C061  FFDD         	movff	?___lldiv+1,postdec2
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 12809  00AC00  0EF4               	movlw	244
 12810  00AC02  0102               	movlb	2	; () banked
 12811  00AC04  257E               	addwf	_outputCapacitySum& (0+255),w,b
 12812  00AC06  0100               	movlb	0	; () banked
 12813  00AC08  6F60               	movwf	___lldiv@dividend& (0+255),b
 12814  00AC0A  0E01               	movlw	1
 12815  00AC0C  0102               	movlb	2	; () banked
 12816  00AC0E  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 12817  00AC10  0100               	movlb	0	; () banked
 12818  00AC12  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12819  00AC14  0E00               	movlw	0
 12820  00AC16  0102               	movlb	2	; () banked
 12821  00AC18  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 12822  00AC1A  0100               	movlb	0	; () banked
 12823  00AC1C  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12824  00AC1E  0E00               	movlw	0
 12825  00AC20  0102               	movlb	2	; () banked
 12826  00AC22  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 12827  00AC24  0100               	movlb	0	; () banked
 12828  00AC26  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12829  00AC28  0EE8               	movlw	232
 12830  00AC2A  6F64               	movwf	___lldiv@divisor& (0+255),b
 12831  00AC2C  0E03               	movlw	3
 12832  00AC2E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12833  00AC30  0E00               	movlw	0
 12834  00AC32  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12835  00AC34  0E00               	movlw	0
 12836  00AC36  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12837  00AC38  EC07  F085         	call	___lldiv	;wreg free
 12838  00AC3C  0100               	movlb	0	; () banked
 12839  00AC3E  EE20 F012          	lfsr	2,18
 12840  00AC42  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12841  00AC44  26D9               	addwf	fsr2l,f,c
 12842  00AC46  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12843  00AC48  22DA               	addwfc	fsr2h,f,c
 12844  00AC4A  C060  FFDE         	movff	?___lldiv,postinc2
 12845  00AC4E  C061  FFDD         	movff	?___lldiv+1,postdec2
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 12849  00AC52  EE20 F014          	lfsr	2,20
 12850  00AC56  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12851  00AC58  26D9               	addwf	fsr2l,f,c
 12852  00AC5A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12853  00AC5C  22DA               	addwfc	fsr2h,f,c
 12854  00AC5E  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 12855  00AC62  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 12856  00AC66  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 12857  00AC6A  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 12858  00AC6E  C041  F064         	movff	_averageCount,___aldiv@divisor
 12859  00AC72  C042  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12860  00AC76  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12861  00AC78  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12862  00AC7A  ECE8  F07C         	call	___aldiv	;wreg free
 12863  00AC7E  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12864  00AC82  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12865  00AC86  ECED  F093         	call	__get_temperature	;wreg free
 12866  00AC8A  6EDF               	movwf	indf2,c
 12867                           
 12868                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 12869  00AC8C  0100               	movlb	0	; () banked
 12870  00AC8E  EE20 F015          	lfsr	2,21
 12871  00AC92  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12872  00AC94  26D9               	addwf	fsr2l,f,c
 12873  00AC96  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12874  00AC98  22DA               	addwfc	fsr2h,f,c
 12875  00AC9A  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 12876  00AC9E  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 12877  00ACA2  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 12878  00ACA6  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 12879  00ACAA  C041  F064         	movff	_averageCount,___aldiv@divisor
 12880  00ACAE  C042  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12881  00ACB2  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12882  00ACB4  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12883  00ACB6  ECE8  F07C         	call	___aldiv	;wreg free
 12884  00ACBA  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12885  00ACBE  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12886  00ACC2  ECED  F093         	call	__get_temperature	;wreg free
 12887  00ACC6  6EDF               	movwf	indf2,c
 12888                           
 12889                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 12890  00ACC8  0100               	movlb	0	; () banked
 12891  00ACCA  EE20 F016          	lfsr	2,22
 12892  00ACCE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12893  00ACD0  26D9               	addwf	fsr2l,f,c
 12894  00ACD2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12895  00ACD4  22DA               	addwfc	fsr2h,f,c
 12896  00ACD6  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 12897  00ACDA  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 12898  00ACDE  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 12899  00ACE2  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 12900  00ACE6  C041  F064         	movff	_averageCount,___aldiv@divisor
 12901  00ACEA  C042  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12902  00ACEE  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12903  00ACF0  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12904  00ACF2  ECE8  F07C         	call	___aldiv	;wreg free
 12905  00ACF6  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12906  00ACFA  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12907  00ACFE  ECED  F093         	call	__get_temperature	;wreg free
 12908  00AD02  6EDF               	movwf	indf2,c
 12909                           
 12910                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 12911  00AD04  0100               	movlb	0	; () banked
 12912  00AD06  EE20 F017          	lfsr	2,23
 12913  00AD0A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12914  00AD0C  26D9               	addwf	fsr2l,f,c
 12915  00AD0E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12916  00AD10  22DA               	addwfc	fsr2h,f,c
 12917  00AD12  90D8               	bcf	status,0,c
 12918  00AD14  0102               	movlb	2	; () banked
 12919  00AD16  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 12920  00AD18  0100               	movlb	0	; () banked
 12921  00AD1A  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12922  00AD1C  0102               	movlb	2	; () banked
 12923  00AD1E  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 12924  00AD20  0100               	movlb	0	; () banked
 12925  00AD22  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12926  00AD24  517A               	movf	??_log_generate_entry& (0+255),w,b
 12927  00AD26  6EDF               	movwf	indf2,c
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 12931  00AD28  EE20 F018          	lfsr	2,24
 12932  00AD2C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12933  00AD2E  26D9               	addwf	fsr2l,f,c
 12934  00AD30  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12935  00AD32  22DA               	addwfc	fsr2h,f,c
 12936  00AD34  90D8               	bcf	status,0,c
 12937  00AD36  0102               	movlb	2	; () banked
 12938  00AD38  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 12939  00AD3A  0100               	movlb	0	; () banked
 12940  00AD3C  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12941  00AD3E  0102               	movlb	2	; () banked
 12942  00AD40  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 12943  00AD42  0100               	movlb	0	; () banked
 12944  00AD44  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12945  00AD46  517A               	movf	??_log_generate_entry& (0+255),w,b
 12946  00AD48  6EDF               	movwf	indf2,c
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;log.c: 190: log_entry->unused[0] = 0x00;
 12950  00AD4A  EE20 F019          	lfsr	2,25
 12951  00AD4E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12952  00AD50  26D9               	addwf	fsr2l,f,c
 12953  00AD52  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12954  00AD54  22DA               	addwfc	fsr2h,f,c
 12955  00AD56  0E00               	movlw	0
 12956  00AD58  6EDF               	movwf	indf2,c
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;log.c: 191: log_entry->unused[1] = 0x00;
 12960  00AD5A  EE20 F01A          	lfsr	2,26
 12961  00AD5E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12962  00AD60  26D9               	addwf	fsr2l,f,c
 12963  00AD62  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12964  00AD64  22DA               	addwfc	fsr2h,f,c
 12965  00AD66  0E00               	movlw	0
 12966  00AD68  6EDF               	movwf	indf2,c
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;log.c: 192: log_entry->unused[2] = 0x00;
 12970  00AD6A  EE20 F01B          	lfsr	2,27
 12971  00AD6E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12972  00AD70  26D9               	addwf	fsr2l,f,c
 12973  00AD72  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12974  00AD74  22DA               	addwfc	fsr2h,f,c
 12975  00AD76  0E00               	movlw	0
 12976  00AD78  6EDF               	movwf	indf2,c
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;log.c: 193: log_entry->unused[3] = 0x00;
 12980  00AD7A  EE20 F01C          	lfsr	2,28
 12981  00AD7E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12982  00AD80  26D9               	addwf	fsr2l,f,c
 12983  00AD82  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12984  00AD84  22DA               	addwfc	fsr2h,f,c
 12985  00AD86  0E00               	movlw	0
 12986  00AD88  6EDF               	movwf	indf2,c
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;log.c: 194: log_entry->unused[4] = 0x00;
 12990  00AD8A  EE20 F01D          	lfsr	2,29
 12991  00AD8E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12992  00AD90  26D9               	addwf	fsr2l,f,c
 12993  00AD92  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12994  00AD94  22DA               	addwfc	fsr2h,f,c
 12995  00AD96  0E00               	movlw	0
 12996  00AD98  6EDF               	movwf	indf2,c
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;log.c: 195: log_entry->status = status;
 13000  00AD9A  EE20 F01E          	lfsr	2,30
 13001  00AD9E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13002  00ADA0  26D9               	addwf	fsr2l,f,c
 13003  00ADA2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13004  00ADA4  22DA               	addwfc	fsr2h,f,c
 13005  00ADA6  C1EC  FFDF         	movff	_status,indf2
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 13009  00ADAA  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 13010  00ADAE  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 13011  00ADB2  EC33  F092         	call	__get_checksum	;wreg free
 13012  00ADB6  0100               	movlb	0	; () banked
 13013  00ADB8  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13014  00ADBA  EE20 F01F          	lfsr	2,31
 13015  00ADBE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13016  00ADC0  26D9               	addwf	fsr2l,f,c
 13017  00ADC2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13018  00ADC4  22DA               	addwfc	fsr2h,f,c
 13019  00ADC6  C07A  FFDF         	movff	??_log_generate_entry,indf2
 13020                           
 13021                           ; BSR set to: 0
 13022  00ADCA  0012               	return		;funcret
 13023  00ADCC                     __end_of_log_generate_entry:
 13024                           	opt stack 0
 13025                           tblptru	equ	0xFF8
 13026                           tblptrh	equ	0xFF7
 13027                           tblptrl	equ	0xFF6
 13028                           tablat	equ	0xFF5
 13029                           prodh	equ	0xFF4
 13030                           prodl	equ	0xFF3
 13031                           intcon	equ	0xFF2
 13032                           intcon2	equ	0xFF1
 13033                           intcon3	equ	0xFF0
 13034                           postinc0	equ	0xFEE
 13035                           wreg	equ	0xFE8
 13036                           postdec1	equ	0xFE5
 13037                           plusw1	equ	0xFE3
 13038                           fsr1h	equ	0xFE2
 13039                           fsr1l	equ	0xFE1
 13040                           indf2	equ	0xFDF
 13041                           postinc2	equ	0xFDE
 13042                           postdec2	equ	0xFDD
 13043                           plusw2	equ	0xFDB
 13044                           fsr2h	equ	0xFDA
 13045                           fsr2l	equ	0xFD9
 13046                           status	equ	0xFD8
 13047                           
 13048 ;; *************** function __get_temperature *****************
 13049 ;; Defined at:
 13050 ;;		line 107 in file "log.c"
 13051 ;; Parameters:    Size  Location     Type
 13052 ;;  temperature     2   14[BANK0 ] int 
 13053 ;; Auto vars:     Size  Location     Type
 13054 ;;		None
 13055 ;; Return value:  Size  Location     Type
 13056 ;;                  1    wreg      unsigned char 
 13057 ;; Registers used:
 13058 ;;		wreg, status,2, status,0, cstack
 13059 ;; Tracked objects:
 13060 ;;		On entry : 0/0
 13061 ;;		On exit  : 0/0
 13062 ;;		Unchanged: 0/0
 13063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13068 ;;Total ram usage:        2 bytes
 13069 ;; Hardware stack levels used:    1
 13070 ;; Hardware stack levels required when called:   11
 13071 ;; This function calls:
 13072 ;;		___awdiv
 13073 ;; This function is called by:
 13074 ;;		_log_generate_entry
 13075 ;; This function uses a non-reentrant model
 13076 ;;
 13077                           
 13078                           	psect	text52
 13079  0127DA                     __ptext52:
 13080                           	opt stack 0
 13081  0127DA                     __get_temperature:
 13082                           	opt stack 17
 13083                           
 13084                           ;log.c: 109: temperature += 4025;
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;incstack = 0
 13088  0127DA  0100               	movlb	0	; () banked
 13089  0127DC  0EB9               	movlw	185
 13090  0127DE  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 13091  0127E0  0E0F               	movlw	15
 13092  0127E2  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;log.c: 110: temperature /= 50;
 13096  0127E4  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 13097  0127E8  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 13098  0127EC  0E00               	movlw	0
 13099  0127EE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 13100  0127F0  0E32               	movlw	50
 13101  0127F2  6F62               	movwf	___awdiv@divisor& (0+255),b
 13102  0127F4  EC3E  F084         	call	___awdiv	;wreg free
 13103  0127F8  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 13104  0127FC  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 13105                           
 13106                           ;log.c: 111: return (uint8_t) temperature;
 13107  012800  0100               	movlb	0	; () banked
 13108  012802  516E               	movf	__get_temperature@temperature& (0+255),w,b
 13109  012804  0012               	return	
 13110  012806                     __end_of__get_temperature:
 13111                           	opt stack 0
 13112                           tblptru	equ	0xFF8
 13113                           tblptrh	equ	0xFF7
 13114                           tblptrl	equ	0xFF6
 13115                           tablat	equ	0xFF5
 13116                           prodh	equ	0xFF4
 13117                           prodl	equ	0xFF3
 13118                           intcon	equ	0xFF2
 13119                           intcon2	equ	0xFF1
 13120                           intcon3	equ	0xFF0
 13121                           postinc0	equ	0xFEE
 13122                           wreg	equ	0xFE8
 13123                           postdec1	equ	0xFE5
 13124                           plusw1	equ	0xFE3
 13125                           fsr1h	equ	0xFE2
 13126                           fsr1l	equ	0xFE1
 13127                           indf2	equ	0xFDF
 13128                           postinc2	equ	0xFDE
 13129                           postdec2	equ	0xFDD
 13130                           plusw2	equ	0xFDB
 13131                           fsr2h	equ	0xFDA
 13132                           fsr2l	equ	0xFD9
 13133                           status	equ	0xFD8
 13134                           
 13135 ;; *************** function ___awdiv *****************
 13136 ;; Defined at:
 13137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  dividend        2    0[BANK0 ] int 
 13140 ;;  divisor         2    2[BANK0 ] int 
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;  quotient        2    6[BANK0 ] int 
 13143 ;;  sign            1    5[BANK0 ] unsigned char 
 13144 ;;  counter         1    4[BANK0 ] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  2    0[BANK0 ] int 
 13147 ;; Registers used:
 13148 ;;		wreg, status,2, status,0
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13157 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13158 ;;Total ram usage:        8 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:   10
 13161 ;; This function calls:
 13162 ;;		Nothing
 13163 ;; This function is called by:
 13164 ;;		__get_temperature
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text53
 13169  01087C                     __ptext53:
 13170                           	opt stack 0
 13171  01087C                     ___awdiv:
 13172                           	opt stack 17
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;incstack = 0
 13176  01087C  0E00               	movlw	0
 13177  01087E  0100               	movlb	0	; () banked
 13178  010880  6F65               	movwf	___awdiv@sign& (0+255),b
 13179                           
 13180                           ; BSR set to: 0
 13181  010882  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13182  010884  D006               	goto	l3484
 13183                           
 13184                           ; BSR set to: 0
 13185  010886  6D62               	negf	___awdiv@divisor& (0+255),b
 13186  010888  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13187  01088A  B0D8               	btfsc	status,0,c
 13188  01088C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13189                           
 13190                           ; BSR set to: 0
 13191  01088E  0E01               	movlw	1
 13192  010890  6F65               	movwf	___awdiv@sign& (0+255),b
 13193  010892                     l3484:
 13194                           
 13195                           ; BSR set to: 0
 13196                           
 13197                           ; BSR set to: 0
 13198  010892  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13199  010894  D006               	goto	l3485
 13200                           
 13201                           ; BSR set to: 0
 13202  010896  6D60               	negf	___awdiv@dividend& (0+255),b
 13203  010898  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13204  01089A  B0D8               	btfsc	status,0,c
 13205  01089C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13206                           
 13207                           ; BSR set to: 0
 13208  01089E  0E01               	movlw	1
 13209  0108A0  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13210  0108A2                     l3485:
 13211                           
 13212                           ; BSR set to: 0
 13213                           
 13214                           ; BSR set to: 0
 13215  0108A2  0E00               	movlw	0
 13216  0108A4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13217  0108A6  0E00               	movlw	0
 13218  0108A8  6F66               	movwf	___awdiv@quotient& (0+255),b
 13219                           
 13220                           ; BSR set to: 0
 13221  0108AA  5162               	movf	___awdiv@divisor& (0+255),w,b
 13222  0108AC  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13223  0108AE  B4D8               	btfsc	status,2,c
 13224  0108B0  D01C               	goto	l3492
 13225                           
 13226                           ; BSR set to: 0
 13227  0108B2  0E01               	movlw	1
 13228  0108B4  6F64               	movwf	___awdiv@counter& (0+255),b
 13229  0108B6  D004               	goto	l3487
 13230  0108B8                     
 13231                           ; BSR set to: 0
 13232                           
 13233                           ; BSR set to: 0
 13234  0108B8  90D8               	bcf	status,0,c
 13235  0108BA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13236  0108BC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13237  0108BE  2B64               	incf	___awdiv@counter& (0+255),f,b
 13238  0108C0                     l3487:
 13239                           
 13240                           ; BSR set to: 0
 13241                           
 13242                           ; BSR set to: 0
 13243  0108C0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13244  0108C2  D7FA               	goto	l3488
 13245  0108C4                     u11110:
 13246                           
 13247                           ; BSR set to: 0
 13248                           
 13249                           ; BSR set to: 0
 13250                           
 13251                           ; BSR set to: 0
 13252  0108C4  90D8               	bcf	status,0,c
 13253  0108C6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13254  0108C8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13255                           
 13256                           ; BSR set to: 0
 13257  0108CA  5162               	movf	___awdiv@divisor& (0+255),w,b
 13258  0108CC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13259  0108CE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13260  0108D0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13261  0108D2  A0D8               	btfss	status,0,c
 13262  0108D4  D005               	goto	l3491
 13263                           
 13264                           ; BSR set to: 0
 13265  0108D6  5162               	movf	___awdiv@divisor& (0+255),w,b
 13266  0108D8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13267  0108DA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13268  0108DC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13269                           
 13270                           ; BSR set to: 0
 13271  0108DE  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13272  0108E0                     l3491:
 13273                           
 13274                           ; BSR set to: 0
 13275                           
 13276                           ; BSR set to: 0
 13277  0108E0  90D8               	bcf	status,0,c
 13278  0108E2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13279  0108E4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13280                           
 13281                           ; BSR set to: 0
 13282  0108E6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13283  0108E8  D7ED               	goto	u11110
 13284  0108EA                     l3492:
 13285                           
 13286                           ; BSR set to: 0
 13287                           
 13288                           ; BSR set to: 0
 13289                           
 13290                           ; BSR set to: 0
 13291  0108EA  5165               	movf	___awdiv@sign& (0+255),w,b
 13292  0108EC  B4D8               	btfsc	status,2,c
 13293  0108EE  D004               	goto	l3493
 13294                           
 13295                           ; BSR set to: 0
 13296  0108F0  6D66               	negf	___awdiv@quotient& (0+255),b
 13297  0108F2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13298  0108F4  B0D8               	btfsc	status,0,c
 13299  0108F6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13300  0108F8                     l3493:
 13301                           
 13302                           ; BSR set to: 0
 13303                           
 13304                           ; BSR set to: 0
 13305  0108F8  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13306  0108FC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13307  010900  0012               	return	
 13308  010902                     __end_of___awdiv:
 13309                           	opt stack 0
 13310                           tblptru	equ	0xFF8
 13311                           tblptrh	equ	0xFF7
 13312                           tblptrl	equ	0xFF6
 13313                           tablat	equ	0xFF5
 13314                           prodh	equ	0xFF4
 13315                           prodl	equ	0xFF3
 13316                           intcon	equ	0xFF2
 13317                           intcon2	equ	0xFF1
 13318                           intcon3	equ	0xFF0
 13319                           postinc0	equ	0xFEE
 13320                           wreg	equ	0xFE8
 13321                           postdec1	equ	0xFE5
 13322                           plusw1	equ	0xFE3
 13323                           fsr1h	equ	0xFE2
 13324                           fsr1l	equ	0xFE1
 13325                           indf2	equ	0xFDF
 13326                           postinc2	equ	0xFDE
 13327                           postdec2	equ	0xFDD
 13328                           plusw2	equ	0xFDB
 13329                           fsr2h	equ	0xFDA
 13330                           fsr2l	equ	0xFD9
 13331                           status	equ	0xFD8
 13332                           
 13333 ;; *************** function __get_dateTime *****************
 13334 ;; Defined at:
 13335 ;;		line 39 in file "log.c"
 13336 ;; Parameters:    Size  Location     Type
 13337 ;;		None
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;  datetime        4   20[BANK0 ] unsigned long 
 13340 ;;  seconds         1   19[BANK0 ] unsigned char 
 13341 ;;  minutes         1   18[BANK0 ] unsigned char 
 13342 ;;  hours           1   17[BANK0 ] unsigned char 
 13343 ;;  day             1   16[BANK0 ] unsigned char 
 13344 ;;  month           1   15[BANK0 ] unsigned char 
 13345 ;;  year            1   14[BANK0 ] unsigned char 
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  4    4[BANK0 ] unsigned long 
 13348 ;; Registers used:
 13349 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13355 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13356 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13357 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13358 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13359 ;;Total ram usage:       20 bytes
 13360 ;; Hardware stack levels used:    1
 13361 ;; Hardware stack levels required when called:   12
 13362 ;; This function calls:
 13363 ;;		_rtcc_get_day_decimal
 13364 ;;		_rtcc_get_hours_decimal
 13365 ;;		_rtcc_get_minutes_decimal
 13366 ;;		_rtcc_get_month_decimal
 13367 ;;		_rtcc_get_seconds_decimal
 13368 ;;		_rtcc_get_year_decimal
 13369 ;; This function is called by:
 13370 ;;		_log_generate_entry
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text54
 13375  00D7A6                     __ptext54:
 13376                           	opt stack 0
 13377  00D7A6                     __get_dateTime:
 13378                           	opt stack 16
 13379                           
 13380                           ;log.c: 41: uint32_t datetime;
 13381                           ;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;incstack = 0
 13385  00D7A6  EC0B  F097         	call	_rtcc_get_year_decimal	;wreg free
 13386  00D7AA  0100               	movlb	0	; () banked
 13387  00D7AC  6F6E               	movwf	__get_dateTime@year& (0+255),b
 13388                           
 13389                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 13390  00D7AE  EC13  F097         	call	_rtcc_get_month_decimal	;wreg free
 13391  00D7B2  0100               	movlb	0	; () banked
 13392  00D7B4  6F6F               	movwf	__get_dateTime@month& (0+255),b
 13393                           
 13394                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13395  00D7B6  EC1B  F097         	call	_rtcc_get_day_decimal	;wreg free
 13396  00D7BA  0100               	movlb	0	; () banked
 13397  00D7BC  6F70               	movwf	__get_dateTime@day& (0+255),b
 13398                           
 13399                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13400  00D7BE  EC03  F097         	call	_rtcc_get_hours_decimal	;wreg free
 13401  00D7C2  0100               	movlb	0	; () banked
 13402  00D7C4  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13403                           
 13404                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13405  00D7C6  ECFB  F096         	call	_rtcc_get_minutes_decimal	;wreg free
 13406  00D7CA  0100               	movlb	0	; () banked
 13407  00D7CC  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13408                           
 13409                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13410  00D7CE  EC2B  F097         	call	_rtcc_get_seconds_decimal	;wreg free
 13411  00D7D2  0100               	movlb	0	; () banked
 13412  00D7D4  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13416  00D7D6  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13417  00D7DA  0E3F               	movlw	63
 13418  00D7DC  1768               	andwf	??__get_dateTime& (0+255),f,b
 13419  00D7DE  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13420  00D7E2  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13421  00D7E4  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13422  00D7E6  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13423  00D7E8  0E1A               	movlw	26
 13424  00D7EA                     u11985:
 13425  00D7EA  90D8               	bcf	status,0,c
 13426  00D7EC  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13427  00D7EE  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13428  00D7F0  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13429  00D7F2  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13430  00D7F4  2EE8               	decfsz	wreg,f,c
 13431  00D7F6  D7F9               	goto	u11985
 13432  00D7F8  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13433  00D7FC  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13434  00D800  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13435  00D804  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13439  00D808  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13440  00D80C  0E0F               	movlw	15
 13441  00D80E  1768               	andwf	??__get_dateTime& (0+255),f,b
 13442  00D810  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13443  00D814  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13444  00D816  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13445  00D818  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13446  00D81A  0E16               	movlw	22
 13447  00D81C                     u11995:
 13448  00D81C  90D8               	bcf	status,0,c
 13449  00D81E  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13450  00D820  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13451  00D822  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13452  00D824  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13453  00D826  2EE8               	decfsz	wreg,f,c
 13454  00D828  D7F9               	goto	u11995
 13455  00D82A  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13456  00D82C  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13457  00D82E  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13458  00D830  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13459  00D832  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13460  00D834  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13461  00D836  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13462  00D838  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13466  00D83A  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13467  00D83E  0E1F               	movlw	31
 13468  00D840  1768               	andwf	??__get_dateTime& (0+255),f,b
 13469  00D842  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13470  00D846  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13471  00D848  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13472  00D84A  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13473  00D84C  0E11               	movlw	17
 13474  00D84E                     u12005:
 13475  00D84E  90D8               	bcf	status,0,c
 13476  00D850  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13477  00D852  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13478  00D854  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13479  00D856  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13480  00D858  2EE8               	decfsz	wreg,f,c
 13481  00D85A  D7F9               	goto	u12005
 13482  00D85C  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13483  00D85E  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13484  00D860  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13485  00D862  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13486  00D864  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13487  00D866  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13488  00D868  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13489  00D86A  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 13493  00D86C  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 13494  00D870  0E1F               	movlw	31
 13495  00D872  1768               	andwf	??__get_dateTime& (0+255),f,b
 13496  00D874  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13497  00D878  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13498  00D87A  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13499  00D87C  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13500  00D87E  0E0C               	movlw	12
 13501  00D880                     u12015:
 13502  00D880  90D8               	bcf	status,0,c
 13503  00D882  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13504  00D884  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13505  00D886  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13506  00D888  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13507  00D88A  2EE8               	decfsz	wreg,f,c
 13508  00D88C  D7F9               	goto	u12015
 13509  00D88E  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13510  00D890  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13511  00D892  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13512  00D894  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13513  00D896  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13514  00D898  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13515  00D89A  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13516  00D89C  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 13520  00D89E  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 13521  00D8A0  0B3F               	andlw	63
 13522  00D8A2  6F68               	movwf	??__get_dateTime& (0+255),b
 13523  00D8A4  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 13524  00D8A6  0E06               	movlw	6
 13525  00D8A8                     u12025:
 13526  00D8A8  90D8               	bcf	status,0,c
 13527  00D8AA  3768               	rlcf	??__get_dateTime& (0+255),f,b
 13528  00D8AC  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13529  00D8AE  2EE8               	decfsz	wreg,f,c
 13530  00D8B0  D7FB               	goto	u12025
 13531  00D8B2  5168               	movf	??__get_dateTime& (0+255),w,b
 13532  00D8B4  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 13533  00D8B6  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13534  00D8B8  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 13535  00D8BA  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13536  00D8BC  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 13537  00D8BE  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13538  00D8C0  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13539  00D8C2  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13540  00D8C4  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13541  00D8C6  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13542  00D8C8  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13543  00D8CA  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 13544  00D8CC  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;log.c: 53: datetime |= (seconds&0b111111);
 13548  00D8CE  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 13549  00D8D2  0E3F               	movlw	63
 13550  00D8D4  1768               	andwf	??__get_dateTime& (0+255),f,b
 13551  00D8D6  5168               	movf	??__get_dateTime& (0+255),w,b
 13552  00D8D8  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;log.c: 54: return datetime;
 13556  00D8DA  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 13557  00D8DE  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 13558  00D8E2  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 13559  00D8E6  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 13560  00D8EA  0012               	return	
 13561  00D8EC                     __end_of__get_dateTime:
 13562                           	opt stack 0
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           intcon2	equ	0xFF1
 13571                           intcon3	equ	0xFF0
 13572                           postinc0	equ	0xFEE
 13573                           wreg	equ	0xFE8
 13574                           postdec1	equ	0xFE5
 13575                           plusw1	equ	0xFE3
 13576                           fsr1h	equ	0xFE2
 13577                           fsr1l	equ	0xFE1
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           postdec2	equ	0xFDD
 13581                           plusw2	equ	0xFDB
 13582                           fsr2h	equ	0xFDA
 13583                           fsr2l	equ	0xFD9
 13584                           status	equ	0xFD8
 13585                           
 13586 ;; *************** function __get_checksum *****************
 13587 ;; Defined at:
 13588 ;;		line 57 in file "log.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;  log_entry       2    0[BANK0 ] PTR struct .
 13591 ;;		 -> log_write_to_disk@log_entry(32), 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 13594 ;;		 -> log_write_to_disk@log_entry(32), 
 13595 ;;  cntr            1    5[BANK0 ] unsigned char 
 13596 ;;  checksum        1    4[BANK0 ] unsigned char 
 13597 ;; Return value:  Size  Location     Type
 13598 ;;                  1    wreg      unsigned char 
 13599 ;; Registers used:
 13600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13601 ;; Tracked objects:
 13602 ;;		On entry : 0/0
 13603 ;;		On exit  : 0/0
 13604 ;;		Unchanged: 0/0
 13605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13607 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13610 ;;Total ram usage:        6 bytes
 13611 ;; Hardware stack levels used:    1
 13612 ;; Hardware stack levels required when called:   10
 13613 ;; This function calls:
 13614 ;;		Nothing
 13615 ;; This function is called by:
 13616 ;;		_log_generate_entry
 13617 ;; This function uses a non-reentrant model
 13618 ;;
 13619                           
 13620                           	psect	text55
 13621  012466                     __ptext55:
 13622                           	opt stack 0
 13623  012466                     __get_checksum:
 13624                           	opt stack 18
 13625                           
 13626                           ;log.c: 59: uint8_t checksum;
 13627                           ;log.c: 60: uint8_t *byte_array;
 13628                           ;log.c: 61: uint8_t cntr;
 13629                           ;log.c: 62: byte_array = (uint8_t*) log_entry;
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;incstack = 0
 13633  012466  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 13634  01246A  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 13635                           
 13636                           ;log.c: 63: checksum = 0x00;
 13637  01246E  0E00               	movlw	0
 13638  012470  0100               	movlb	0	; () banked
 13639  012472  6F64               	movwf	__get_checksum@checksum& (0+255),b
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 13643  012474  0E00               	movlw	0
 13644  012476  6F65               	movwf	__get_checksum@cntr& (0+255),b
 13645  012478  0E1E               	movlw	30
 13646  01247A  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 13647  01247C  D001               	goto	l3280
 13648  01247E  D00C               	goto	u12040
 13649  012480                     l3280:
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;log.c: 65: {
 13653                           ;log.c: 66: checksum ^= byte_array[cntr];
 13654                           
 13655                           ; BSR set to: 0
 13656  012480  5165               	movf	__get_checksum@cntr& (0+255),w,b
 13657  012482  0D01               	mullw	1
 13658  012484  50F3               	movf	prodl,w,c
 13659  012486  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 13660  012488  6ED9               	movwf	fsr2l,c
 13661  01248A  50F4               	movf	prodh,w,c
 13662  01248C  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 13663  01248E  6EDA               	movwf	fsr2h,c
 13664  012490  50DF               	movf	indf2,w,c
 13665  012492  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 13666                           
 13667                           ; BSR set to: 0
 13668  012494  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 13669  012496  D7F0               	goto	L9
 13670  012498                     u12040:
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;log.c: 67: }
 13674                           ;log.c: 68: return checksum;
 13675                           
 13676                           ; BSR set to: 0
 13677  012498  5164               	movf	__get_checksum@checksum& (0+255),w,b
 13678  01249A  0012               	return	
 13679  01249C                     __end_of__get_checksum:
 13680                           	opt stack 0
 13681                           tblptru	equ	0xFF8
 13682                           tblptrh	equ	0xFF7
 13683                           tblptrl	equ	0xFF6
 13684                           tablat	equ	0xFF5
 13685                           prodh	equ	0xFF4
 13686                           prodl	equ	0xFF3
 13687                           intcon	equ	0xFF2
 13688                           intcon2	equ	0xFF1
 13689                           intcon3	equ	0xFF0
 13690                           postinc0	equ	0xFEE
 13691                           wreg	equ	0xFE8
 13692                           postdec1	equ	0xFE5
 13693                           plusw1	equ	0xFE3
 13694                           fsr1h	equ	0xFE2
 13695                           fsr1l	equ	0xFE1
 13696                           indf2	equ	0xFDF
 13697                           postinc2	equ	0xFDE
 13698                           postdec2	equ	0xFDD
 13699                           plusw2	equ	0xFDB
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8
 13703                           
 13704 ;; *************** function _fat_create_file *****************
 13705 ;; Defined at:
 13706 ;;		line 321 in file "fat16.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  name            2   59[BANK0 ] PTR unsigned char 
 13709 ;;		 -> filename(9), 
 13710 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 13711 ;;		 -> extension(4), 
 13712 ;;  size            4   63[BANK0 ] unsigned long 
 13713 ;; Auto vars:     Size  Location     Type
 13714 ;;  root_entry     32   80[BANK0 ] struct .
 13715 ;;  cluster         2   78[BANK0 ] unsigned int 
 13716 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 13717 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 13718 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 13719 ;;  root_slot       1   75[BANK0 ] unsigned char 
 13720 ;; Return value:  Size  Location     Type
 13721 ;;                  1    wreg      unsigned char 
 13722 ;; Registers used:
 13723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13724 ;; Tracked objects:
 13725 ;;		On entry : 0/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13729 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13730 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13731 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13732 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13733 ;;Total ram usage:       53 bytes
 13734 ;; Hardware stack levels used:    1
 13735 ;; Hardware stack levels required when called:   16
 13736 ;; This function calls:
 13737 ;;		__get_available_root_entry
 13738 ;;		__get_date
 13739 ;;		__get_empty_cluster
 13740 ;;		__get_time
 13741 ;;		__write_fat
 13742 ;;		__write_root
 13743 ;;		_fat_find_file
 13744 ;;		_fat_get_empty_clusters
 13745 ;;		_memcpy
 13746 ;; This function is called by:
 13747 ;;		_log_write_to_disk
 13748 ;; This function uses a non-reentrant model
 13749 ;;
 13750                           
 13751                           	psect	text56
 13752  00D312                     __ptext56:
 13753                           	opt stack 0
 13754  00D312                     _fat_create_file:
 13755                           	opt stack 13
 13756                           
 13757                           ;fat16.c: 323: uint8_t root_slot;
 13758                           ;fat16.c: 324: rootEntry_t root_entry;
 13759                           ;fat16.c: 325: uint16_t cluster;
 13760                           ;fat16.c: 326: uint16_t next_cluster;
 13761                           ;fat16.c: 327: uint16_t number_of_clusters;
 13762                           ;fat16.c: 328: uint16_t cluster_count;
 13763                           ;fat16.c: 332: if(fat_find_file(name, extension) != 0xFF)
 13764                           
 13765                           ; BSR set to: 0
 13766                           ;incstack = 0
 13767  00D312  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 13768  00D316  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 13769  00D31A  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 13770  00D31E  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13771  00D322  EC4F  F07D         	call	_fat_find_file	;wreg free
 13772  00D326  0AFF               	xorlw	255
 13773  00D328  B4D8               	btfsc	status,2,c
 13774  00D32A  D002               	goto	l3014
 13775                           
 13776                           ;fat16.c: 333: {
 13777                           ;fat16.c: 336: return 0xFF;
 13778  00D32C  0EFF               	movlw	255
 13779  00D32E  0012               	return	
 13780  00D330                     l3014:
 13781                           
 13782                           ;fat16.c: 337: }
 13783                           ;fat16.c: 341: root_slot = _get_available_root_entry();
 13784  00D330  EC45  F094         	call	__get_available_root_entry	;wreg free
 13785  00D334  0100               	movlb	0	; () banked
 13786  00D336  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;fat16.c: 342: if(root_slot == 0xFF)
 13790  00D338  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 13791  00D33A  A4D8               	btfss	status,2,c
 13792  00D33C  D002               	goto	l3016
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;fat16.c: 343: {
 13796                           ;fat16.c: 346: return 0xFE;
 13797  00D33E  0EFE               	movlw	254
 13798                           
 13799                           ; BSR set to: 0
 13800  00D340  0012               	return	
 13801  00D342                     l3016:
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;fat16.c: 347: }
 13805                           ;fat16.c: 350: number_of_clusters = (size>>9) + 1;
 13806                           
 13807                           ; BSR set to: 0
 13808  00D342  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 13809  00D346  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 13810  00D34A  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 13811  00D34E  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 13812  00D352  0E0A               	movlw	10
 13813  00D354  D005               	goto	u14520
 13814  00D356                     u14525:
 13815  00D356  90D8               	bcf	status,0,c
 13816  00D358  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13817  00D35A  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13818  00D35C  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13819  00D35E  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 13820  00D360                     u14520:
 13821  00D360  2EE8               	decfsz	wreg,f,c
 13822  00D362  D7F9               	goto	u14525
 13823  00D364  0E01               	movlw	1
 13824  00D366  25A3               	addwf	??_fat_create_file& (0+255),w,b
 13825  00D368  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 13826  00D36A  0E00               	movlw	0
 13827  00D36C  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 13828  00D36E  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 13832  00D370  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 13833  00D374  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 13834  00D378  EC64  F083         	call	_fat_get_empty_clusters	;wreg free
 13835  00D37C  0100               	movlb	0	; () banked
 13836  00D37E  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13837  00D380  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 13838  00D382  E104               	bnz	u14530
 13839  00D384  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13840  00D386  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 13841  00D388  B4D8               	btfsc	status,2,c
 13842  00D38A  D002               	goto	l3017
 13843  00D38C                     u14530:
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;fat16.c: 352: {
 13847                           ;fat16.c: 355: return 0xFD;
 13848  00D38C  0EFD               	movlw	253
 13849                           
 13850                           ; BSR set to: 0
 13851  00D38E  0012               	return	
 13852  00D390                     l3017:
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;fat16.c: 356: }
 13856                           ;fat16.c: 359: cluster = _get_empty_cluster(2);
 13857                           
 13858                           ; BSR set to: 0
 13859  00D390  0E00               	movlw	0
 13860  00D392  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13861  00D394  0E02               	movlw	2
 13862  00D396  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13863  00D398  EC49  F087         	call	__get_empty_cluster	;wreg free
 13864  00D39C  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 13865  00D3A0  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 13866                           
 13867                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 13868  00D3A4  0EB0               	movlw	low fat_create_file@root_entry
 13869  00D3A6  0100               	movlb	0	; () banked
 13870  00D3A8  6F60               	movwf	memcpy@d1& (0+255),b
 13871  00D3AA  0E00               	movlw	high fat_create_file@root_entry
 13872  00D3AC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13873  00D3AE  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 13874  00D3B2  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13875  00D3B6  0E00               	movlw	0
 13876  00D3B8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13877  00D3BA  0E08               	movlw	8
 13878  00D3BC  6F64               	movwf	memcpy@n& (0+255),b
 13879  00D3BE  ECBB  F08B         	call	_memcpy	;wreg free
 13880                           
 13881                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 13882  00D3C2  0EB8               	movlw	low (fat_create_file@root_entry+8)
 13883  00D3C4  0100               	movlb	0	; () banked
 13884  00D3C6  6F60               	movwf	memcpy@d1& (0+255),b
 13885  00D3C8  0E00               	movlw	high (fat_create_file@root_entry+8)
 13886  00D3CA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13887  00D3CC  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 13888  00D3D0  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13889  00D3D4  0E00               	movlw	0
 13890  00D3D6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13891  00D3D8  0E03               	movlw	3
 13892  00D3DA  6F64               	movwf	memcpy@n& (0+255),b
 13893  00D3DC  ECBB  F08B         	call	_memcpy	;wreg free
 13894                           
 13895                           ;fat16.c: 364: root_entry.attributes = 0x00;
 13896  00D3E0  0E00               	movlw	0
 13897  00D3E2  0100               	movlb	0	; () banked
 13898  00D3E4  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 13902  00D3E6  0E00               	movlw	0
 13903  00D3E8  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 13907  00D3EA  0E00               	movlw	0
 13908  00D3EC  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 13912  00D3EE  EC8C  F089         	call	__get_time	;wreg free
 13913  00D3F2  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 13914  00D3F6  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 13915                           
 13916                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 13917  00D3FA  EC5E  F08A         	call	__get_date	;wreg free
 13918  00D3FE  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 13919  00D402  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 13920                           
 13921                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 13922  00D406  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13923  00D40A  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13924                           
 13925                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 13926  00D40E  0E00               	movlw	0
 13927  00D410  0100               	movlb	0	; () banked
 13928  00D412  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13929  00D414  0E00               	movlw	0
 13930  00D416  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 13934  00D418  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13935  00D41C  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 13939  00D420  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13940  00D424  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 13944  00D428  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 13945  00D42C  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;fat16.c: 374: root_entry.fileSize = size;
 13949  00D430  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13950  00D434  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13951  00D438  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13952  00D43C  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13953                           
 13954                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 13955  00D440  0EB0               	movlw	low fat_create_file@root_entry
 13956  00D442  6F88               	movwf	__write_root@data& (0+255),b
 13957  00D444  0E00               	movlw	high fat_create_file@root_entry
 13958  00D446  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13959  00D448  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13960  00D44A  EC1A  F08C         	call	__write_root
 13961                           
 13962                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 13963  00D44E  0E00               	movlw	0
 13964  00D450  0100               	movlb	0	; () banked
 13965  00D452  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 13966  00D454  0E01               	movlw	1
 13967  00D456  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 13968  00D458  D02F               	goto	l3018
 13969  00D45A                     
 13970                           ; BSR set to: 0
 13971                           ;fat16.c: 383: {
 13972                           ;fat16.c: 385: if(cluster_count==number_of_clusters)
 13973                           
 13974                           ; BSR set to: 0
 13975  00D45A  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13976  00D45C  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 13977  00D45E  E10E               	bnz	l15913
 13978  00D460  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13979  00D462  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13980  00D464  A4D8               	btfss	status,2,c
 13981  00D466  D00A               	goto	l3020
 13982                           
 13983                           ; BSR set to: 0
 13984                           ;fat16.c: 386: {
 13985                           ;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 13986  00D468  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13987  00D46C  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13988  00D470  0EFF               	movlw	255
 13989  00D472  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 13990  00D474  698A               	setf	__write_fat@value& (0+255),b
 13991  00D476  EC5A  F091         	call	__write_fat	;wreg free
 13992                           
 13993                           ;fat16.c: 389: }
 13994  00D47A  D01B               	goto	l3021
 13995  00D47C                     l3020:
 13996  00D47C                     l15913:
 13997                           
 13998                           ;fat16.c: 390: else
 13999                           ;fat16.c: 391: {
 14000                           ;fat16.c: 393: next_cluster = _get_empty_cluster(cluster+1);
 14001  00D47C  0E01               	movlw	1
 14002  00D47E  0100               	movlb	0	; () banked
 14003  00D480  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 14004  00D482  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14005  00D484  0E00               	movlw	0
 14006  00D486  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 14007  00D488  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14008  00D48A  EC49  F087         	call	__get_empty_cluster	;wreg free
 14009  00D48E  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 14010  00D492  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 14011                           
 14012                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 14013  00D496  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14014  00D49A  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14015  00D49E  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 14016  00D4A2  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 14017  00D4A6  EC5A  F091         	call	__write_fat	;wreg free
 14018                           
 14019                           ;fat16.c: 397: cluster = next_cluster;
 14020  00D4AA  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 14021  00D4AE  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 14022  00D4B2                     l3021:
 14023  00D4B2  0100               	movlb	0	; () banked
 14024  00D4B4  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 14025  00D4B6  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 14026  00D4B8                     l3018:
 14027                           
 14028                           ; BSR set to: 0
 14029                           
 14030                           ; BSR set to: 0
 14031  00D4B8  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 14032  00D4BA  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 14033  00D4BC  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14034  00D4BE  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14035  00D4C0  B0D8               	btfsc	status,0,c
 14036  00D4C2  D7CB               	goto	l3019
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;fat16.c: 398: }
 14040                           ;fat16.c: 399: }
 14041                           ;fat16.c: 400: return root_slot;
 14042                           
 14043                           ; BSR set to: 0
 14044  00D4C4  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14045  00D4C6  0012               	return	
 14046  00D4C8                     __end_of_fat_create_file:
 14047                           	opt stack 0
 14048                           tblptru	equ	0xFF8
 14049                           tblptrh	equ	0xFF7
 14050                           tblptrl	equ	0xFF6
 14051                           tablat	equ	0xFF5
 14052                           prodh	equ	0xFF4
 14053                           prodl	equ	0xFF3
 14054                           intcon	equ	0xFF2
 14055                           intcon2	equ	0xFF1
 14056                           intcon3	equ	0xFF0
 14057                           postinc0	equ	0xFEE
 14058                           wreg	equ	0xFE8
 14059                           postdec1	equ	0xFE5
 14060                           plusw1	equ	0xFE3
 14061                           fsr1h	equ	0xFE2
 14062                           fsr1l	equ	0xFE1
 14063                           indf2	equ	0xFDF
 14064                           postinc2	equ	0xFDE
 14065                           postdec2	equ	0xFDD
 14066                           plusw2	equ	0xFDB
 14067                           fsr2h	equ	0xFDA
 14068                           fsr2l	equ	0xFD9
 14069                           status	equ	0xFD8
 14070                           
 14071 ;; *************** function _fat_get_empty_clusters *****************
 14072 ;; Defined at:
 14073 ;;		line 132 in file "fat16.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;  maximum         2   39[BANK0 ] unsigned int 
 14076 ;; Auto vars:     Size  Location     Type
 14077 ;;  cluster         2   49[BANK0 ] unsigned int 
 14078 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 14079 ;;  value           2   45[BANK0 ] unsigned int 
 14080 ;;  offset          2   43[BANK0 ] unsigned int 
 14081 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  2   39[BANK0 ] unsigned int 
 14084 ;; Registers used:
 14085 ;;		wreg, status,2, status,0, cstack
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14092 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14094 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14095 ;;Total ram usage:       12 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:   14
 14098 ;; This function calls:
 14099 ;;		_flash_partial_read
 14100 ;; This function is called by:
 14101 ;;		_fat_create_file
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           	psect	text57
 14106  0106C8                     __ptext57:
 14107                           	opt stack 0
 14108  0106C8                     _fat_get_empty_clusters:
 14109                           	opt stack 14
 14110                           
 14111                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 14112                           
 14113                           ;incstack = 0
 14114  0106C8  0E00               	movlw	0
 14115  0106CA  0100               	movlb	0	; () banked
 14116  0106CC  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 14117  0106CE  0E00               	movlw	0
 14118  0106D0  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 14119                           
 14120                           ;fat16.c: 135: uint16_t cluster;
 14121                           ;fat16.c: 136: uint16_t fat_sector;
 14122                           ;fat16.c: 137: uint16_t offset;
 14123                           ;fat16.c: 138: uint16_t value;
 14124                           ;fat16.c: 141: for(cluster=2; cluster<(4074+2); ++cluster)
 14125  0106D2  0E00               	movlw	0
 14126  0106D4  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 14127  0106D6  0E02               	movlw	2
 14128  0106D8  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 14129  0106DA  D034               	goto	l14053
 14130  0106DC                     
 14131                           ; BSR set to: 0
 14132                           ;fat16.c: 142: {
 14133                           ;fat16.c: 143: fat_sector = cluster>>8;
 14134                           
 14135                           ; BSR set to: 0
 14136  0106DC  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14137  0106DE  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 14138  0106E0  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 14139                           
 14140                           ; BSR set to: 0
 14141                           ;fat16.c: 144: fat_sector += 2;
 14142  0106E2  0E02               	movlw	2
 14143  0106E4  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 14144  0106E6  0E00               	movlw	0
 14145  0106E8  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;fat16.c: 145: offset = cluster & 0xFF;
 14149  0106EA  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 14150  0106EC  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 14151  0106EE  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;fat16.c: 146: offset <<= 1;
 14155  0106F0  90D8               	bcf	status,0,c
 14156  0106F2  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 14157  0106F4  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 14161  0106F6  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 14162  0106FA  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 14163  0106FE  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 14164  010702  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 14165  010706  0E00               	movlw	0
 14166  010708  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14167  01070A  0E02               	movlw	2
 14168  01070C  6F77               	movwf	flash_partial_read@length& (0+255),b
 14169  01070E  0E8D               	movlw	low fat_get_empty_clusters@value
 14170  010710  6F79               	movwf	flash_partial_read@data& (0+255),b
 14171  010712  0E00               	movlw	high fat_get_empty_clusters@value
 14172  010714  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14173  010716  EC00  F088         	call	_flash_partial_read	;wreg free
 14174                           
 14175                           ;fat16.c: 148: if(value==0x0000)
 14176  01071A  0100               	movlb	0	; () banked
 14177  01071C  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 14178  01071E  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 14179  010720  A4D8               	btfss	status,2,c
 14180  010722  D00E               	goto	l2970
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;fat16.c: 149: {
 14184                           ;fat16.c: 150: ++empty_clusters;
 14185  010724  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 14186  010726  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;fat16.c: 151: if(empty_clusters==maximum)
 14190  010728  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 14191  01072A  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 14192  01072C  E109               	bnz	l14051
 14193  01072E  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 14194  010730  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 14195  010732  A4D8               	btfss	status,2,c
 14196  010734  D005               	goto	l2970
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;fat16.c: 152: {
 14200                           ;fat16.c: 153: return empty_clusters;
 14201  010736  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14202  01073A  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14203  01073E  0012               	return	
 14204  010740                     l2970:
 14205  010740                     l14051:
 14206                           
 14207                           ; BSR set to: 0
 14208  010740  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 14209  010742  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 14210  010744                     l14053:
 14211                           
 14212                           ; BSR set to: 0
 14213  010744  0EEC               	movlw	236
 14214  010746  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 14215  010748  0E0F               	movlw	15
 14216  01074A  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14217  01074C  A0D8               	btfss	status,0,c
 14218  01074E  D7C6               	goto	l2967
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;fat16.c: 154: }
 14222                           ;fat16.c: 155: }
 14223                           ;fat16.c: 156: }
 14224                           ;fat16.c: 157: return empty_clusters;
 14225  010750  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14226  010754  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14227                           
 14228                           ; BSR set to: 0
 14229  010758  0012               	return		;funcret
 14230  01075A                     __end_of_fat_get_empty_clusters:
 14231                           	opt stack 0
 14232                           tblptru	equ	0xFF8
 14233                           tblptrh	equ	0xFF7
 14234                           tblptrl	equ	0xFF6
 14235                           tablat	equ	0xFF5
 14236                           prodh	equ	0xFF4
 14237                           prodl	equ	0xFF3
 14238                           intcon	equ	0xFF2
 14239                           intcon2	equ	0xFF1
 14240                           intcon3	equ	0xFF0
 14241                           postinc0	equ	0xFEE
 14242                           wreg	equ	0xFE8
 14243                           postdec1	equ	0xFE5
 14244                           plusw1	equ	0xFE3
 14245                           fsr1h	equ	0xFE2
 14246                           fsr1l	equ	0xFE1
 14247                           indf2	equ	0xFDF
 14248                           postinc2	equ	0xFDE
 14249                           postdec2	equ	0xFDD
 14250                           plusw2	equ	0xFDB
 14251                           fsr2h	equ	0xFDA
 14252                           fsr2l	equ	0xFD9
 14253                           status	equ	0xFD8
 14254                           
 14255 ;; *************** function _fat_find_file *****************
 14256 ;; Defined at:
 14257 ;;		line 262 in file "fat16.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  name            2   39[BANK0 ] PTR unsigned char 
 14260 ;;		 -> filename(9), 
 14261 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 14262 ;;		 -> extension(4), 
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 14265 ;;  offset          2   57[BANK0 ] unsigned int 
 14266 ;;  sector          2   55[BANK0 ] unsigned int 
 14267 ;;  slot            1   54[BANK0 ] unsigned char 
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  1    wreg      unsigned char 
 14270 ;; Registers used:
 14271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14278 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14280 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14281 ;;Total ram usage:       20 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:   14
 14284 ;; This function calls:
 14285 ;;		_flash_partial_read
 14286 ;;		_strncmp
 14287 ;; This function is called by:
 14288 ;;		_fat_create_file
 14289 ;;		_log_write_to_disk
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text58
 14294  00FA9E                     __ptext58:
 14295                           	opt stack 0
 14296  00FA9E                     _fat_find_file:
 14297                           	opt stack 15
 14298                           
 14299                           ;fat16.c: 264: uint8_t slot;
 14300                           ;fat16.c: 265: uint16_t sector;
 14301                           ;fat16.c: 266: uint16_t offset;
 14302                           ;fat16.c: 267: uint8_t buffer[11];
 14303                           ;fat16.c: 268: slot = 0;
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;incstack = 0
 14307  00FA9E  0E00               	movlw	0
 14308  00FAA0  0100               	movlb	0	; () banked
 14309  00FAA2  6F96               	movwf	fat_find_file@slot& (0+255),b
 14310                           
 14311                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 14312  00FAA4  0E00               	movlw	0
 14313  00FAA6  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 14314  00FAA8  0E12               	movlw	18
 14315  00FAAA  6F97               	movwf	fat_find_file@sector& (0+255),b
 14316  00FAAC                     l14089:
 14317                           
 14318                           ; BSR set to: 0
 14319  00FAAC  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 14320  00FAAE  E159               	bnz	l14131
 14321  00FAB0  0E16               	movlw	22
 14322  00FAB2  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 14323  00FAB4  B0D8               	btfsc	status,0,c
 14324  00FAB6  D055               	goto	u11970
 14325                           
 14326                           ; BSR set to: 0
 14327                           ;fat16.c: 270: {
 14328                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 14329                           
 14330                           ; BSR set to: 0
 14331                           
 14332                           ; BSR set to: 0
 14333  00FAB8  0E00               	movlw	0
 14334  00FABA  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 14335  00FABC  0E00               	movlw	0
 14336  00FABE  6F99               	movwf	fat_find_file@offset& (0+255),b
 14337  00FAC0                     l14095:
 14338                           
 14339                           ; BSR set to: 0
 14340  00FAC0  0E02               	movlw	2
 14341  00FAC2  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 14342  00FAC4  B0D8               	btfsc	status,0,c
 14343  00FAC6  D04A               	goto	u11960
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;fat16.c: 272: {
 14347                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 14348                           
 14349                           ; BSR set to: 0
 14350                           
 14351                           ; BSR set to: 0
 14352  00FAC8  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 14353  00FACC  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 14354  00FAD0  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 14355  00FAD4  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 14356  00FAD8  0E00               	movlw	0
 14357  00FADA  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14358  00FADC  0E0B               	movlw	11
 14359  00FADE  6F77               	movwf	flash_partial_read@length& (0+255),b
 14360  00FAE0  0E8B               	movlw	low fat_find_file@buffer
 14361  00FAE2  6F79               	movwf	flash_partial_read@data& (0+255),b
 14362  00FAE4  0E00               	movlw	high fat_find_file@buffer
 14363  00FAE6  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14364  00FAE8  EC00  F088         	call	_flash_partial_read	;wreg free
 14365                           
 14366                           ;fat16.c: 274: if(buffer[0]==0x00)
 14367  00FAEC  0100               	movlb	0	; () banked
 14368  00FAEE  518B               	movf	fat_find_file@buffer& (0+255),w,b
 14369  00FAF0  A4D8               	btfss	status,2,c
 14370  00FAF2  D002               	goto	l3002
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;fat16.c: 275: {
 14374                           ;fat16.c: 278: return 0xFF;
 14375  00FAF4  0EFF               	movlw	255
 14376                           
 14377                           ; BSR set to: 0
 14378  00FAF6  0012               	return	
 14379  00FAF8                     l3002:
 14380                           
 14381                           ; BSR set to: 0
 14382                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 14383                           
 14384                           ; BSR set to: 0
 14385  00FAF8  0EE5               	movlw	229
 14386  00FAFA  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 14387  00FAFC  B4D8               	btfsc	status,2,c
 14388  00FAFE  D028               	goto	l3008
 14389                           
 14390                           ; BSR set to: 0
 14391                           ;fat16.c: 286: else
 14392                           ;fat16.c: 287: {
 14393                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 14394                           
 14395                           ; BSR set to: 0
 14396                           
 14397                           ; BSR set to: 0
 14398                           ;fat16.c: 281: {
 14399                           ;fat16.c: 285: }
 14400  00FB00  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14401  00FB04  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 14402  00FB08  0E8B               	movlw	low fat_find_file@buffer
 14403  00FB0A  6F62               	movwf	strncmp@s2& (0+255),b
 14404  00FB0C  0E00               	movlw	high fat_find_file@buffer
 14405  00FB0E  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14406  00FB10  0E00               	movlw	0
 14407  00FB12  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14408  00FB14  0E08               	movlw	8
 14409  00FB16  6F64               	movwf	strncmp@len& (0+255),b
 14410  00FB18  EC4D  F086         	call	_strncmp	;wreg free
 14411  00FB1C  0100               	movlb	0	; () banked
 14412  00FB1E  5160               	movf	?_strncmp& (0+255),w,b
 14413  00FB20  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14414  00FB22  A4D8               	btfss	status,2,c
 14415  00FB24  D015               	goto	l3008
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;fat16.c: 290: {
 14419                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 14420  00FB26  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 14421  00FB2A  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 14422  00FB2E  0E93               	movlw	low (fat_find_file@buffer+8)
 14423  00FB30  6F62               	movwf	strncmp@s2& (0+255),b
 14424  00FB32  0E00               	movlw	high (fat_find_file@buffer+8)
 14425  00FB34  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14426  00FB36  0E00               	movlw	0
 14427  00FB38  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14428  00FB3A  0E03               	movlw	3
 14429  00FB3C  6F64               	movwf	strncmp@len& (0+255),b
 14430  00FB3E  EC4D  F086         	call	_strncmp	;wreg free
 14431  00FB42  0100               	movlb	0	; () banked
 14432  00FB44  5160               	movf	?_strncmp& (0+255),w,b
 14433  00FB46  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14434  00FB48  A4D8               	btfss	status,2,c
 14435  00FB4A  D002               	goto	l3008
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;fat16.c: 293: {
 14439                           ;fat16.c: 296: return slot;
 14440  00FB4C  5196               	movf	fat_find_file@slot& (0+255),w,b
 14441                           
 14442                           ; BSR set to: 0
 14443  00FB4E  0012               	return	
 14444  00FB50                     l3008:
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;fat16.c: 297: }
 14448                           ;fat16.c: 298: }
 14449                           ;fat16.c: 299: }
 14450                           ;fat16.c: 300: ++slot;
 14451                           
 14452                           ; BSR set to: 0
 14453                           
 14454                           ; BSR set to: 0
 14455                           
 14456                           ; BSR set to: 0
 14457                           
 14458                           ; BSR set to: 0
 14459  00FB50  2B96               	incf	fat_find_file@slot& (0+255),f,b
 14460                           
 14461                           ; BSR set to: 0
 14462  00FB52  0E20               	movlw	32
 14463  00FB54  2799               	addwf	fat_find_file@offset& (0+255),f,b
 14464  00FB56  0E00               	movlw	0
 14465  00FB58  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 14466  00FB5A  D7B2               	goto	l14095
 14467  00FB5C                     u11960:
 14468                           
 14469                           ; BSR set to: 0
 14470                           
 14471                           ; BSR set to: 0
 14472  00FB5C  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 14473  00FB5E  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 14474  00FB60  D7A5               	goto	l14089
 14475  00FB62                     u11970:
 14476  00FB62                     l14131:
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;fat16.c: 301: }
 14480                           ;fat16.c: 302: }
 14481                           ;fat16.c: 303: return 0xFF;
 14482  00FB62  0EFF               	movlw	255
 14483  00FB64  0012               	return	
 14484  00FB66                     __end_of_fat_find_file:
 14485                           	opt stack 0
 14486                           tblptru	equ	0xFF8
 14487                           tblptrh	equ	0xFF7
 14488                           tblptrl	equ	0xFF6
 14489                           tablat	equ	0xFF5
 14490                           prodh	equ	0xFF4
 14491                           prodl	equ	0xFF3
 14492                           intcon	equ	0xFF2
 14493                           intcon2	equ	0xFF1
 14494                           intcon3	equ	0xFF0
 14495                           postinc0	equ	0xFEE
 14496                           wreg	equ	0xFE8
 14497                           postdec1	equ	0xFE5
 14498                           plusw1	equ	0xFE3
 14499                           fsr1h	equ	0xFE2
 14500                           fsr1l	equ	0xFE1
 14501                           indf2	equ	0xFDF
 14502                           postinc2	equ	0xFDE
 14503                           postdec2	equ	0xFDD
 14504                           plusw2	equ	0xFDB
 14505                           fsr2h	equ	0xFDA
 14506                           fsr2l	equ	0xFD9
 14507                           status	equ	0xFD8
 14508                           
 14509 ;; *************** function _strncmp *****************
 14510 ;; Defined at:
 14511 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 14514 ;;		 -> extension(4), filename(9), 
 14515 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 14516 ;;		 -> fat_find_file@buffer(11), 
 14517 ;;  len             2    4[BANK0 ] unsigned int 
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;		None
 14520 ;; Return value:  Size  Location     Type
 14521 ;;                  2    0[BANK0 ] int 
 14522 ;; Registers used:
 14523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14529 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14531 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14532 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14533 ;;Total ram usage:        9 bytes
 14534 ;; Hardware stack levels used:    1
 14535 ;; Hardware stack levels required when called:   10
 14536 ;; This function calls:
 14537 ;;		Nothing
 14538 ;; This function is called by:
 14539 ;;		_fat_find_file
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text59
 14544  010C9A                     __ptext59:
 14545                           	opt stack 0
 14546  010C9A                     _strncmp:
 14547                           	opt stack 18
 14548                           
 14549                           ; BSR set to: 0
 14550                           ;incstack = 0
 14551  010C9A  D031               	goto	l3896
 14552  010C9C                     l13255:
 14553  010C9C  C060  FFD9         	movff	strncmp@s1,fsr2l
 14554  010CA0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14555  010CA4  50DF               	movf	indf2,w,c
 14556  010CA6  B4D8               	btfsc	status,2,c
 14557  010CA8  D00C               	goto	u10980
 14558  010CAA  C062  FFD9         	movff	strncmp@s2,fsr2l
 14559  010CAE  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14560  010CB2  C060  FFE1         	movff	strncmp@s1,fsr1l
 14561  010CB6  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 14562  010CBA  50DE               	movf	postinc2,w,c
 14563  010CBC  18E6               	xorwf	postinc1,w,c
 14564  010CBE  B4D8               	btfsc	status,2,c
 14565  010CC0  D019               	goto	l3898
 14566  010CC2                     u10980:
 14567  010CC2  C062  FFD9         	movff	strncmp@s2,fsr2l
 14568  010CC6  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14569  010CCA  50DF               	movf	indf2,w,c
 14570  010CCC  0100               	movlb	0	; () banked
 14571  010CCE  6F66               	movwf	??_strncmp& (0+255),b
 14572  010CD0  6B67               	clrf	(??_strncmp+1)& (0+255),b
 14573  010CD2  1F66               	comf	??_strncmp& (0+255),f,b
 14574  010CD4  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 14575  010CD6  4B66               	infsnz	??_strncmp& (0+255),f,b
 14576  010CD8  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 14577  010CDA  C060  FFD9         	movff	strncmp@s1,fsr2l
 14578  010CDE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14579  010CE2  50DF               	movf	indf2,w,c
 14580  010CE4  6F68               	movwf	(??_strncmp+2)& (0+255),b
 14581  010CE6  5168               	movf	(??_strncmp+2)& (0+255),w,b
 14582  010CE8  2566               	addwf	??_strncmp& (0+255),w,b
 14583  010CEA  6F60               	movwf	?_strncmp& (0+255),b
 14584  010CEC  0E00               	movlw	0
 14585  010CEE  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 14586  010CF0  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14587                           
 14588                           ; BSR set to: 0
 14589  010CF2  0012               	return	
 14590  010CF4                     l3898:
 14591                           
 14592                           ; BSR set to: 0
 14593  010CF4  0100               	movlb	0	; () banked
 14594  010CF6  4B60               	infsnz	strncmp@s1& (0+255),f,b
 14595  010CF8  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 14596  010CFA  4B62               	infsnz	strncmp@s2& (0+255),f,b
 14597  010CFC  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 14598  010CFE                     l3896:
 14599                           
 14600                           ; BSR set to: 0
 14601  010CFE  0100               	movlb	0	; () banked
 14602  010D00  0764               	decf	strncmp@len& (0+255),f,b
 14603  010D02  A0D8               	btfss	status,0,c
 14604  010D04  0765               	decf	(strncmp@len+1)& (0+255),f,b
 14605  010D06  2964               	incf	strncmp@len& (0+255),w,b
 14606  010D08  E1C9               	bnz	l13255
 14607  010D0A  2965               	incf	(strncmp@len+1)& (0+255),w,b
 14608  010D0C  A4D8               	btfss	status,2,c
 14609  010D0E  D7C6               	goto	l3897
 14610                           
 14611                           ; BSR set to: 0
 14612                           
 14613                           ; BSR set to: 0
 14614  010D10  0E00               	movlw	0
 14615  010D12  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14616  010D14  0E00               	movlw	0
 14617  010D16  6F60               	movwf	?_strncmp& (0+255),b
 14618  010D18  0012               	return	
 14619  010D1A                     __end_of_strncmp:
 14620                           	opt stack 0
 14621                           tblptru	equ	0xFF8
 14622                           tblptrh	equ	0xFF7
 14623                           tblptrl	equ	0xFF6
 14624                           tablat	equ	0xFF5
 14625                           prodh	equ	0xFF4
 14626                           prodl	equ	0xFF3
 14627                           intcon	equ	0xFF2
 14628                           intcon2	equ	0xFF1
 14629                           intcon3	equ	0xFF0
 14630                           postinc0	equ	0xFEE
 14631                           wreg	equ	0xFE8
 14632                           postinc1	equ	0xFE6
 14633                           postdec1	equ	0xFE5
 14634                           plusw1	equ	0xFE3
 14635                           fsr1h	equ	0xFE2
 14636                           fsr1l	equ	0xFE1
 14637                           indf2	equ	0xFDF
 14638                           postinc2	equ	0xFDE
 14639                           postdec2	equ	0xFDD
 14640                           plusw2	equ	0xFDB
 14641                           fsr2h	equ	0xFDA
 14642                           fsr2l	equ	0xFD9
 14643                           status	equ	0xFD8
 14644                           
 14645 ;; *************** function __get_available_root_entry *****************
 14646 ;; Defined at:
 14647 ;;		line 96 in file "fat16.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;		None
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;  file_number     1   46[BANK0 ] unsigned char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  1    wreg      unsigned char 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0, cstack
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14664 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14665 ;;Total ram usage:        1 bytes
 14666 ;; Hardware stack levels used:    1
 14667 ;; Hardware stack levels required when called:   15
 14668 ;; This function calls:
 14669 ;;		__root_is_available
 14670 ;; This function is called by:
 14671 ;;		_fat_create_file
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           	psect	text60
 14676  01288A                     __ptext60:
 14677                           	opt stack 0
 14678  01288A                     __get_available_root_entry:
 14679                           	opt stack 13
 14680                           
 14681                           ;fat16.c: 98: uint8_t file_number;
 14682                           ;fat16.c: 99: for(file_number=0; file_number<64; ++file_number)
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;incstack = 0
 14686  01288A  0E00               	movlw	0
 14687  01288C  0100               	movlb	0	; () banked
 14688  01288E  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 14689  012890                     l13981:
 14690                           
 14691                           ; BSR set to: 0
 14692  012890  0E3F               	movlw	63
 14693  012892  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14694  012894  D001               	goto	l2955
 14695  012896  D00C               	goto	u11800
 14696  012898                     l2955:
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;fat16.c: 100: {
 14700                           ;fat16.c: 101: if(_root_is_available(file_number))
 14701                           
 14702                           ; BSR set to: 0
 14703  012898  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14704  01289A  ECCD  F086         	call	__root_is_available
 14705  01289E  0900               	iorlw	0
 14706  0128A0  B4D8               	btfsc	status,2,c
 14707  0128A2  D003               	goto	l2957
 14708                           
 14709                           ;fat16.c: 102: {
 14710                           ;fat16.c: 103: return file_number;
 14711  0128A4  0100               	movlb	0	; () banked
 14712  0128A6  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14713                           
 14714                           ; BSR set to: 0
 14715  0128A8  0012               	return	
 14716  0128AA                     l2957:
 14717                           
 14718                           ; BSR set to: 0
 14719  0128AA  0100               	movlb	0	; () banked
 14720  0128AC  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14721  0128AE  D7F0               	goto	l13981
 14722  0128B0                     u11800:
 14723                           
 14724                           ; BSR set to: 0
 14725                           ;fat16.c: 104: }
 14726                           ;fat16.c: 105: }
 14727                           ;fat16.c: 106: return 0xFF;
 14728                           
 14729                           ; BSR set to: 0
 14730  0128B0  0EFF               	movlw	255
 14731  0128B2  0012               	return	
 14732  0128B4                     __end_of__get_available_root_entry:
 14733                           	opt stack 0
 14734                           tblptru	equ	0xFF8
 14735                           tblptrh	equ	0xFF7
 14736                           tblptrl	equ	0xFF6
 14737                           tablat	equ	0xFF5
 14738                           prodh	equ	0xFF4
 14739                           prodl	equ	0xFF3
 14740                           intcon	equ	0xFF2
 14741                           intcon2	equ	0xFF1
 14742                           intcon3	equ	0xFF0
 14743                           postinc0	equ	0xFEE
 14744                           wreg	equ	0xFE8
 14745                           postinc1	equ	0xFE6
 14746                           postdec1	equ	0xFE5
 14747                           plusw1	equ	0xFE3
 14748                           fsr1h	equ	0xFE2
 14749                           fsr1l	equ	0xFE1
 14750                           indf2	equ	0xFDF
 14751                           postinc2	equ	0xFDE
 14752                           postdec2	equ	0xFDD
 14753                           plusw2	equ	0xFDB
 14754                           fsr2h	equ	0xFDA
 14755                           fsr2l	equ	0xFD9
 14756                           status	equ	0xFD8
 14757                           
 14758 ;; *************** function _fat_append_to_file *****************
 14759 ;; Defined at:
 14760 ;;		line 460 in file "fat16.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;  file_number     1    wreg     unsigned char 
 14763 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 14764 ;;  data            2   51[BANK0 ] PTR unsigned char 
 14765 ;;		 -> log_write_to_disk@log_entry(32), 
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;  file_number     1   73[BANK0 ] unsigned char 
 14768 ;;  root           32   80[BANK0 ] struct .
 14769 ;;  position        4   76[BANK0 ] unsigned long 
 14770 ;;  file_size       4   63[BANK0 ] unsigned long 
 14771 ;;  length          2   74[BANK0 ] unsigned int 
 14772 ;;  offset          2   71[BANK0 ] unsigned int 
 14773 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 14774 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 14775 ;;  sector          2   61[BANK0 ] unsigned int 
 14776 ;; Return value:  Size  Location     Type
 14777 ;;                  1    wreg      unsigned char 
 14778 ;; Registers used:
 14779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14780 ;; Tracked objects:
 14781 ;;		On entry : 0/0
 14782 ;;		On exit  : 0/0
 14783 ;;		Unchanged: 0/0
 14784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14786 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14787 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14788 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14789 ;;Total ram usage:       63 bytes
 14790 ;; Hardware stack levels used:    1
 14791 ;; Hardware stack levels required when called:   16
 14792 ;; This function calls:
 14793 ;;		__get_empty_cluster
 14794 ;;		__read_fat
 14795 ;;		__read_root
 14796 ;;		__root_is_available
 14797 ;;		__sector_from_cluster
 14798 ;;		__update_modified_time
 14799 ;;		__write_fat
 14800 ;;		__write_root
 14801 ;;		_flash_partial_write
 14802 ;; This function is called by:
 14803 ;;		_log_write_to_disk
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text61
 14808  00C734                     __ptext61:
 14809                           	opt stack 0
 14810  00C734                     _fat_append_to_file:
 14811                           	opt stack 13
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;incstack = 0
 14815                           ;fat_append_to_file@file_number stored from wreg
 14816  00C734  0100               	movlb	0	; () banked
 14817  00C736  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 14818                           
 14819                           ;fat16.c: 462: rootEntry_t root;
 14820                           ;fat16.c: 463: uint32_t file_size;
 14821                           ;fat16.c: 464: uint16_t fat_cluster;
 14822                           ;fat16.c: 465: uint16_t new_cluster;
 14823                           ;fat16.c: 466: uint32_t position;
 14824                           ;fat16.c: 467: uint16_t offset;
 14825                           ;fat16.c: 468: uint16_t sector;
 14826                           ;fat16.c: 469: uint16_t length;
 14827                           ;fat16.c: 472: if(file_number>=64)
 14828  00C738  0E3F               	movlw	63
 14829  00C73A  0100               	movlb	0	; () banked
 14830  00C73C  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 14831  00C73E  D001               	goto	l3038
 14832  00C740  0012               	return	
 14833  00C742                     l3038:
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;fat16.c: 476: }
 14837                           ;fat16.c: 479: if(_root_is_available(file_number))
 14838                           
 14839                           ; BSR set to: 0
 14840  00C742  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14841  00C744  ECCD  F086         	call	__root_is_available
 14842  00C748  0900               	iorlw	0
 14843  00C74A  A4D8               	btfss	status,2,c
 14844  00C74C  0012               	return	
 14845                           
 14846                           ;fat16.c: 483: }
 14847                           ;fat16.c: 486: _read_root(file_number, &root);
 14848                           
 14849                           ;fat16.c: 480: {
 14850                           ;fat16.c: 482: return 0xFE;
 14851                           ;	Return value of _fat_append_to_file is never used
 14852  00C74E  0EB0               	movlw	low fat_append_to_file@root
 14853  00C750  0100               	movlb	0	; () banked
 14854  00C752  6F87               	movwf	__read_root@data& (0+255),b
 14855  00C754  0E00               	movlw	high fat_append_to_file@root
 14856  00C756  6F88               	movwf	(__read_root@data+1)& (0+255),b
 14857  00C758  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14858  00C75A  EC48  F08C         	call	__read_root
 14859                           
 14860                           ;fat16.c: 487: file_size = root.fileSize;
 14861  00C75E  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 14862  00C762  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 14863  00C766  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 14864  00C76A  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 14865                           
 14866                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 14867  00C76E  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 14868  00C772  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 14869                           
 14870                           ;fat16.c: 491: position = 0;
 14871  00C776  0E00               	movlw	0
 14872  00C778  0100               	movlb	0	; () banked
 14873  00C77A  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14874  00C77C  0E00               	movlw	0
 14875  00C77E  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14876  00C780  0E00               	movlw	0
 14877  00C782  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14878  00C784  0E00               	movlw	0
 14879  00C786  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14880                           
 14881                           ;fat16.c: 492: while((file_size-position)>512)
 14882  00C788  D013               	goto	l3041
 14883  00C78A                     l15941:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;fat16.c: 493: {
 14887                           ;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 14888  00C78A  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 14889  00C78E  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 14890  00C792  EC1C  F090         	call	__read_fat	;wreg free
 14891  00C796  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 14892  00C79A  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 14893                           
 14894                           ;fat16.c: 495: position += 512;
 14895  00C79E  0E00               	movlw	0
 14896  00C7A0  0100               	movlb	0	; () banked
 14897  00C7A2  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14898  00C7A4  0E02               	movlw	2
 14899  00C7A6  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14900  00C7A8  0E00               	movlw	0
 14901  00C7AA  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14902  00C7AC  0E00               	movlw	0
 14903  00C7AE  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14904  00C7B0                     l3041:
 14905                           
 14906                           ; BSR set to: 0
 14907                           
 14908                           ; BSR set to: 0
 14909  00C7B0  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14910  00C7B4  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14911  00C7B8  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 14912  00C7BC  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 14913  00C7C0  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14914  00C7C2  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14915  00C7C4  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 14916  00C7C6  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 14917  00C7C8  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 14918  00C7CA  0E00               	movlw	0
 14919  00C7CC  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 14920  00C7CE  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 14921  00C7D0  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 14922  00C7D2  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14923  00C7D4  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14924  00C7D6  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 14925  00C7D8  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14926  00C7DA  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14927  00C7DC  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 14928  00C7DE  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 14929  00C7E0  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 14930  00C7E2  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 14931  00C7E4  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 14932  00C7E6  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 14933  00C7E8  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 14934  00C7EA  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 14935  00C7EC  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 14936  00C7EE  E1CD               	bnz	l15941
 14937  00C7F0  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 14938  00C7F2  0E02               	movlw	2
 14939  00C7F4  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 14940  00C7F6  B0D8               	btfsc	status,0,c
 14941  00C7F8  D7C8               	goto	l3042
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;fat16.c: 496: }
 14945                           ;fat16.c: 499: offset = file_size - position;
 14946                           
 14947                           ; BSR set to: 0
 14948  00C7FA  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14949  00C7FE  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14950  00C802  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14951  00C804  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14952  00C806  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14953  00C808  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14954  00C80A  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14955  00C80C  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14956  00C80E  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14957  00C810  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14958  00C812  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14959  00C814  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;fat16.c: 502: position = 0;
 14963  00C816  0E00               	movlw	0
 14964  00C818  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14965  00C81A  0E00               	movlw	0
 14966  00C81C  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14967  00C81E  0E00               	movlw	0
 14968  00C820  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14969  00C822  0E00               	movlw	0
 14970  00C824  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14971                           
 14972                           ;fat16.c: 503: while(position < number_of_bytes)
 14973  00C826  D070               	goto	l3044
 14974  00C828                     
 14975                           ; BSR set to: 0
 14976                           ;fat16.c: 504: {
 14977                           ;fat16.c: 506: if(offset==512)
 14978                           
 14979                           ; BSR set to: 0
 14980  00C828  0E02               	movlw	2
 14981  00C82A  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 14982  00C82C  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 14983  00C82E  A4D8               	btfss	status,2,c
 14984  00C830  D027               	goto	l3046
 14985                           
 14986                           ; BSR set to: 0
 14987                           ;fat16.c: 507: {
 14988                           ;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 14989  00C832  0E00               	movlw	0
 14990  00C834  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14991  00C836  0E00               	movlw	0
 14992  00C838  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14993  00C83A  EC49  F087         	call	__get_empty_cluster	;wreg free
 14994  00C83E  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 14995  00C842  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 14996                           
 14997                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 14998  00C846  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 14999  00C84A  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 15000  00C84E  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 15001  00C852  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 15002  00C856  EC5A  F091         	call	__write_fat	;wreg free
 15003                           
 15004                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 15005  00C85A  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 15006  00C85E  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 15007  00C862  0EFF               	movlw	255
 15008  00C864  0100               	movlb	0	; () banked
 15009  00C866  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 15010  00C868  698A               	setf	__write_fat@value& (0+255),b
 15011  00C86A  EC5A  F091         	call	__write_fat	;wreg free
 15012                           
 15013                           ;fat16.c: 516: fat_cluster = new_cluster;
 15014  00C86E  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 15015  00C872  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 15016                           
 15017                           ;fat16.c: 517: offset = 0;
 15018  00C876  0E00               	movlw	0
 15019  00C878  0100               	movlb	0	; () banked
 15020  00C87A  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15021  00C87C  0E00               	movlw	0
 15022  00C87E  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15023  00C880                     l3046:
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;fat16.c: 518: }
 15027                           ;fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 15028                           
 15029                           ; BSR set to: 0
 15030  00C880  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 15031  00C884  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 15032  00C888  EC23  F097         	call	__sector_from_cluster	;wreg free
 15033  00C88C  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 15034  00C890  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 15035                           
 15036                           ;fat16.c: 524: length = 512 - offset;
 15037  00C894  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 15038  00C898  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 15039  00C89C  0100               	movlb	0	; () banked
 15040  00C89E  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15041  00C8A0  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15042  00C8A2  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15043  00C8A4  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15044  00C8A6  0E00               	movlw	0
 15045  00C8A8  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15046  00C8AA  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 15047  00C8AC  0E02               	movlw	2
 15048  00C8AE  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15049  00C8B0  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;fat16.c: 525: if(length>number_of_bytes)
 15053  00C8B2  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15054  00C8B4  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15055  00C8B6  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15056  00C8B8  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15057  00C8BA  B0D8               	btfsc	status,0,c
 15058  00C8BC  D004               	goto	l3047
 15059                           
 15060                           ; BSR set to: 0
 15061                           ;fat16.c: 526: {
 15062                           ;fat16.c: 527: length = number_of_bytes;
 15063  00C8BE  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 15064  00C8C2  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 15065  00C8C6                     l3047:
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;fat16.c: 528: }
 15069                           ;fat16.c: 531: flash_partial_write(sector, offset, length, &data[position]);
 15070                           
 15071                           ; BSR set to: 0
 15072  00C8C6  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 15073  00C8CA  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 15074  00C8CE  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 15075  00C8D2  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 15076  00C8D6  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 15077  00C8DA  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 15078  00C8DE  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 15079  00C8E0  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 15080  00C8E2  6F85               	movwf	flash_partial_write@data& (0+255),b
 15081  00C8E4  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 15082  00C8E6  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 15083  00C8E8  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15084  00C8EA  EC56  F089         	call	_flash_partial_write	;wreg free
 15085                           
 15086                           ;fat16.c: 534: position += length;
 15087  00C8EE  0100               	movlb	0	; () banked
 15088  00C8F0  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15089  00C8F2  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15090  00C8F4  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15091  00C8F6  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15092  00C8F8  0E00               	movlw	0
 15093  00C8FA  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15094  00C8FC  0E00               	movlw	0
 15095  00C8FE  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15096                           
 15097                           ; BSR set to: 0
 15098                           ;fat16.c: 535: offset += length;
 15099  00C900  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15100  00C902  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 15101  00C904  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15102  00C906  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 15103  00C908                     l3044:
 15104                           
 15105                           ; BSR set to: 0
 15106                           
 15107                           ; BSR set to: 0
 15108  00C908  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15109  00C90A  6F95               	movwf	??_fat_append_to_file& (0+255),b
 15110  00C90C  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15111  00C90E  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 15112  00C910  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 15113  00C912  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 15114  00C914  5195               	movf	??_fat_append_to_file& (0+255),w,b
 15115  00C916  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 15116  00C918  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 15117  00C91A  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 15118  00C91C  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 15119  00C91E  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 15120  00C920  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 15121  00C922  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 15122  00C924  A0D8               	btfss	status,0,c
 15123  00C926  D780               	goto	l3045
 15124                           
 15125                           ; BSR set to: 0
 15126                           ;fat16.c: 536: }
 15127                           ;fat16.c: 540: root.fileSize += number_of_bytes;
 15128                           
 15129                           ; BSR set to: 0
 15130  00C928  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15131  00C92A  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 15132  00C92C  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15133  00C92E  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 15134  00C930  0E00               	movlw	0
 15135  00C932  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 15136  00C934  0E00               	movlw	0
 15137  00C936  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 15138                           
 15139                           ; BSR set to: 0
 15140                           ;fat16.c: 541: _update_modified_time(&root);
 15141  00C938  0EB0               	movlw	low fat_append_to_file@root
 15142  00C93A  6F6D               	movwf	__update_modified_time@root& (0+255),b
 15143  00C93C  0E00               	movlw	high fat_append_to_file@root
 15144  00C93E  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 15145  00C940  EC4E  F092         	call	__update_modified_time	;wreg free
 15146                           
 15147                           ;fat16.c: 542: _write_root(file_number, &root);
 15148  00C944  0EB0               	movlw	low fat_append_to_file@root
 15149  00C946  0100               	movlb	0	; () banked
 15150  00C948  6F88               	movwf	__write_root@data& (0+255),b
 15151  00C94A  0E00               	movlw	high fat_append_to_file@root
 15152  00C94C  6F89               	movwf	(__write_root@data+1)& (0+255),b
 15153  00C94E  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15154  00C950  EC1A  F08C         	call	__write_root
 15155  00C954  0012               	return	
 15156  00C956                     __end_of_fat_append_to_file:
 15157                           	opt stack 0
 15158                           tblptru	equ	0xFF8
 15159                           tblptrh	equ	0xFF7
 15160                           tblptrl	equ	0xFF6
 15161                           tablat	equ	0xFF5
 15162                           prodh	equ	0xFF4
 15163                           prodl	equ	0xFF3
 15164                           intcon	equ	0xFF2
 15165                           intcon2	equ	0xFF1
 15166                           intcon3	equ	0xFF0
 15167                           postinc0	equ	0xFEE
 15168                           wreg	equ	0xFE8
 15169                           postinc1	equ	0xFE6
 15170                           postdec1	equ	0xFE5
 15171                           plusw1	equ	0xFE3
 15172                           fsr1h	equ	0xFE2
 15173                           fsr1l	equ	0xFE1
 15174                           indf2	equ	0xFDF
 15175                           postinc2	equ	0xFDE
 15176                           postdec2	equ	0xFDD
 15177                           plusw2	equ	0xFDB
 15178                           fsr2h	equ	0xFDA
 15179                           fsr2l	equ	0xFD9
 15180                           status	equ	0xFD8
 15181                           
 15182 ;; *************** function __write_root *****************
 15183 ;; Defined at:
 15184 ;;		line 184 in file "fat16.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;  slot            1    wreg     unsigned char 
 15187 ;;  data            2   40[BANK0 ] PTR struct .
 15188 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;  slot            1   47[BANK0 ] unsigned char 
 15191 ;;  offset          2   45[BANK0 ] unsigned int 
 15192 ;;  root_sector     2   43[BANK0 ] unsigned int 
 15193 ;; Return value:  Size  Location     Type
 15194 ;;                  1    wreg      void 
 15195 ;; Registers used:
 15196 ;;		wreg, status,2, status,0, cstack
 15197 ;; Tracked objects:
 15198 ;;		On entry : 0/0
 15199 ;;		On exit  : 0/0
 15200 ;;		Unchanged: 0/0
 15201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15203 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15205 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15206 ;;Total ram usage:        8 bytes
 15207 ;; Hardware stack levels used:    1
 15208 ;; Hardware stack levels required when called:   15
 15209 ;; This function calls:
 15210 ;;		_flash_partial_write
 15211 ;; This function is called by:
 15212 ;;		_fat_create_file
 15213 ;;		_fat_append_to_file
 15214 ;;		_fat_rename_file
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218                           	psect	text62
 15219  011834                     __ptext62:
 15220                           	opt stack 0
 15221  011834                     __write_root:
 15222                           	opt stack 13
 15223                           
 15224                           ;incstack = 0
 15225                           ;__write_root@slot stored from wreg
 15226  011834  0100               	movlb	0	; () banked
 15227  011836  6F8F               	movwf	__write_root@slot& (0+255),b
 15228                           
 15229                           ;fat16.c: 186: uint16_t root_sector;
 15230                           ;fat16.c: 187: uint16_t offset;
 15231                           ;fat16.c: 188: root_sector = (slot >> 4) + 18;
 15232  011838  C08F  F08A         	movff	__write_root@slot,??__write_root
 15233  01183C  0100               	movlb	0	; () banked
 15234  01183E  3B8A               	swapf	??__write_root& (0+255),f,b
 15235  011840  0E0F               	movlw	15
 15236  011842  178A               	andwf	??__write_root& (0+255),f,b
 15237  011844  0E12               	movlw	18
 15238  011846  258A               	addwf	??__write_root& (0+255),w,b
 15239  011848  6F8B               	movwf	__write_root@root_sector& (0+255),b
 15240  01184A  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 15241  01184C  0E00               	movlw	0
 15242  01184E  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 15243                           
 15244                           ;fat16.c: 189: offset = (slot & 0b1111);
 15245  011850  C08F  F08A         	movff	__write_root@slot,??__write_root
 15246  011854  0E0F               	movlw	15
 15247  011856  178A               	andwf	??__write_root& (0+255),f,b
 15248  011858  518A               	movf	??__write_root& (0+255),w,b
 15249  01185A  6F8D               	movwf	__write_root@offset& (0+255),b
 15250  01185C  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 15251                           
 15252                           ;fat16.c: 190: offset <<= 5;
 15253  01185E  0E05               	movlw	5
 15254  011860                     u11885:
 15255  011860  90D8               	bcf	status,0,c
 15256  011862  378D               	rlcf	__write_root@offset& (0+255),f,b
 15257  011864  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 15258  011866  2EE8               	decfsz	wreg,f,c
 15259  011868  D7FB               	goto	u11885
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 15263  01186A  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 15264  01186E  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 15265  011872  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 15266  011876  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 15267  01187A  0E00               	movlw	0
 15268  01187C  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15269  01187E  0E20               	movlw	32
 15270  011880  6F83               	movwf	flash_partial_write@length& (0+255),b
 15271  011882  C088  F085         	movff	__write_root@data,flash_partial_write@data
 15272  011886  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 15273  01188A  EC56  F089         	call	_flash_partial_write	;wreg free
 15274  01188E  0012               	return		;funcret
 15275  011890                     __end_of__write_root:
 15276                           	opt stack 0
 15277                           tblptru	equ	0xFF8
 15278                           tblptrh	equ	0xFF7
 15279                           tblptrl	equ	0xFF6
 15280                           tablat	equ	0xFF5
 15281                           prodh	equ	0xFF4
 15282                           prodl	equ	0xFF3
 15283                           intcon	equ	0xFF2
 15284                           intcon2	equ	0xFF1
 15285                           intcon3	equ	0xFF0
 15286                           postinc0	equ	0xFEE
 15287                           wreg	equ	0xFE8
 15288                           postinc1	equ	0xFE6
 15289                           postdec1	equ	0xFE5
 15290                           plusw1	equ	0xFE3
 15291                           fsr1h	equ	0xFE2
 15292                           fsr1l	equ	0xFE1
 15293                           indf2	equ	0xFDF
 15294                           postinc2	equ	0xFDE
 15295                           postdec2	equ	0xFDD
 15296                           plusw2	equ	0xFDB
 15297                           fsr2h	equ	0xFDA
 15298                           fsr2l	equ	0xFD9
 15299                           status	equ	0xFD8
 15300                           
 15301 ;; *************** function __write_fat *****************
 15302 ;; Defined at:
 15303 ;;		line 160 in file "fat16.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;  cluster         2   40[BANK0 ] unsigned int 
 15306 ;;  value           2   42[BANK0 ] unsigned int 
 15307 ;; Auto vars:     Size  Location     Type
 15308 ;;  offset          2   46[BANK0 ] unsigned int 
 15309 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 15310 ;; Return value:  Size  Location     Type
 15311 ;;                  1    wreg      void 
 15312 ;; Registers used:
 15313 ;;		wreg, status,2, status,0, cstack
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15320 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15322 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15323 ;;Total ram usage:        8 bytes
 15324 ;; Hardware stack levels used:    1
 15325 ;; Hardware stack levels required when called:   15
 15326 ;; This function calls:
 15327 ;;		_flash_partial_write
 15328 ;; This function is called by:
 15329 ;;		_fat_create_file
 15330 ;;		_fat_append_to_file
 15331 ;;		_fat_delete_file
 15332 ;; This function uses a non-reentrant model
 15333 ;;
 15334                           
 15335                           	psect	text63
 15336  0122B4                     __ptext63:
 15337                           	opt stack 0
 15338  0122B4                     __write_fat:
 15339                           	opt stack 13
 15340                           
 15341                           ;fat16.c: 162: uint16_t fat_sector;
 15342                           ;fat16.c: 163: uint16_t offset;
 15343                           ;fat16.c: 164: fat_sector = cluster>>8;
 15344                           
 15345                           ;incstack = 0
 15346  0122B4  0100               	movlb	0	; () banked
 15347  0122B6  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 15348  0122B8  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 15349  0122BA  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 15350                           
 15351                           ; BSR set to: 0
 15352                           ;fat16.c: 165: fat_sector += 2;
 15353  0122BC  0E02               	movlw	2
 15354  0122BE  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 15355  0122C0  0E00               	movlw	0
 15356  0122C2  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;fat16.c: 166: offset = cluster & 0xFF;
 15360  0122C4  5188               	movf	__write_fat@cluster& (0+255),w,b
 15361  0122C6  6F8E               	movwf	__write_fat@offset& (0+255),b
 15362  0122C8  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 15363                           
 15364                           ; BSR set to: 0
 15365                           ;fat16.c: 167: offset <<= 1;
 15366  0122CA  90D8               	bcf	status,0,c
 15367  0122CC  378E               	rlcf	__write_fat@offset& (0+255),f,b
 15368  0122CE  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 15372  0122D0  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 15373  0122D4  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 15374  0122D8  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 15375  0122DC  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 15376  0122E0  0E00               	movlw	0
 15377  0122E2  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15378  0122E4  0E02               	movlw	2
 15379  0122E6  6F83               	movwf	flash_partial_write@length& (0+255),b
 15380  0122E8  0E8A               	movlw	low __write_fat@value
 15381  0122EA  6F85               	movwf	flash_partial_write@data& (0+255),b
 15382  0122EC  0E00               	movlw	high __write_fat@value
 15383  0122EE  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15384  0122F0  EC56  F089         	call	_flash_partial_write	;wreg free
 15385  0122F4  0012               	return		;funcret
 15386  0122F6                     __end_of__write_fat:
 15387                           	opt stack 0
 15388                           tblptru	equ	0xFF8
 15389                           tblptrh	equ	0xFF7
 15390                           tblptrl	equ	0xFF6
 15391                           tablat	equ	0xFF5
 15392                           prodh	equ	0xFF4
 15393                           prodl	equ	0xFF3
 15394                           intcon	equ	0xFF2
 15395                           intcon2	equ	0xFF1
 15396                           intcon3	equ	0xFF0
 15397                           postinc0	equ	0xFEE
 15398                           wreg	equ	0xFE8
 15399                           postinc1	equ	0xFE6
 15400                           postdec1	equ	0xFE5
 15401                           plusw1	equ	0xFE3
 15402                           fsr1h	equ	0xFE2
 15403                           fsr1l	equ	0xFE1
 15404                           indf2	equ	0xFDF
 15405                           postinc2	equ	0xFDE
 15406                           postdec2	equ	0xFDD
 15407                           plusw2	equ	0xFDB
 15408                           fsr2h	equ	0xFDA
 15409                           fsr2l	equ	0xFD9
 15410                           status	equ	0xFD8
 15411                           
 15412 ;; *************** function _flash_partial_write *****************
 15413 ;; Defined at:
 15414 ;;		line 589 in file "flash.c"
 15415 ;; Parameters:    Size  Location     Type
 15416 ;;  page            2   31[BANK0 ] unsigned int 
 15417 ;;  start           2   33[BANK0 ] unsigned int 
 15418 ;;  length          2   35[BANK0 ] unsigned int 
 15419 ;;  data            2   37[BANK0 ] PTR unsigned char 
 15420 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 15421 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 15422 ;; Auto vars:     Size  Location     Type
 15423 ;;  match           1   39[BANK0 ] enum E8341
 15424 ;; Return value:  Size  Location     Type
 15425 ;;                  1    wreg      void 
 15426 ;; Registers used:
 15427 ;;		wreg, status,2, status,0, cstack
 15428 ;; Tracked objects:
 15429 ;;		On entry : 0/0
 15430 ;;		On exit  : 0/0
 15431 ;;		Unchanged: 0/0
 15432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15433 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15436 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15437 ;;Total ram usage:        9 bytes
 15438 ;; Hardware stack levels used:    1
 15439 ;; Hardware stack levels required when called:   14
 15440 ;; This function calls:
 15441 ;;		__flash_compare_page_to_buffer
 15442 ;;		__flash_copy_page_to_buffer
 15443 ;;		__flash_write_page_from_buffer
 15444 ;;		__flash_write_to_buffer
 15445 ;;		_flash_is_busy
 15446 ;; This function is called by:
 15447 ;;		__write_fat
 15448 ;;		__write_root
 15449 ;;		_fat_append_to_file
 15450 ;;		__delete_root
 15451 ;;		__write_file_size
 15452 ;; This function uses a non-reentrant model
 15453 ;;
 15454                           
 15455                           	psect	text64
 15456  0112AC                     __ptext64:
 15457                           	opt stack 0
 15458  0112AC                     _flash_partial_write:
 15459                           	opt stack 13
 15460                           
 15461                           ;flash.c: 591: flashMatchResult_t match;
 15462                           ;flash.c: 594: while(flash_is_busy());
 15463                           
 15464                           ;incstack = 0
 15465  0112AC  EC9E  F095         	call	_flash_is_busy	;wreg free
 15466  0112B0  0900               	iorlw	0
 15467  0112B2  A4D8               	btfss	status,2,c
 15468  0112B4  D7FB               	goto	_flash_partial_write
 15469                           
 15470                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 15471  0112B6  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 15472  0112BA  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 15473  0112BE  0E00               	movlw	0
 15474  0112C0  0100               	movlb	0	; () banked
 15475  0112C2  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 15476  0112C4  ECD2  F08C         	call	__flash_copy_page_to_buffer	;wreg free
 15477                           
 15478                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 15479  0112C8  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 15480  0112CC  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 15481  0112D0  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 15482  0112D4  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 15483  0112D8  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 15484  0112DC  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 15485  0112E0  0E00               	movlw	0
 15486  0112E2  0100               	movlb	0	; () banked
 15487  0112E4  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 15488  0112E6  ECDB  F08E         	call	__flash_write_to_buffer	;wreg free
 15489                           
 15490                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 15491  0112EA  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 15492  0112EE  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 15493  0112F2  0E00               	movlw	0
 15494  0112F4  0100               	movlb	0	; () banked
 15495  0112F6  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 15496  0112F8  EC0B  F087         	call	__flash_compare_page_to_buffer	;wreg free
 15497  0112FC  0100               	movlb	0	; () banked
 15498  0112FE  6F87               	movwf	flash_partial_write@match& (0+255),b
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 15502  011300  0587               	decf	flash_partial_write@match& (0+255),w,b
 15503  011302  A4D8               	btfss	status,2,c
 15504  011304  0012               	return	
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;flash.c: 607: {
 15508                           ;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 15509  011306  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 15510  01130A  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 15511  01130E  0E00               	movlw	0
 15512  011310  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 15513  011312  EC59  F08D         	call	__flash_write_page_from_buffer	;wreg free
 15514  011316  0012               	return	
 15515  011318                     __end_of_flash_partial_write:
 15516                           	opt stack 0
 15517                           tblptru	equ	0xFF8
 15518                           tblptrh	equ	0xFF7
 15519                           tblptrl	equ	0xFF6
 15520                           tablat	equ	0xFF5
 15521                           prodh	equ	0xFF4
 15522                           prodl	equ	0xFF3
 15523                           intcon	equ	0xFF2
 15524                           intcon2	equ	0xFF1
 15525                           intcon3	equ	0xFF0
 15526                           postinc0	equ	0xFEE
 15527                           wreg	equ	0xFE8
 15528                           postinc1	equ	0xFE6
 15529                           postdec1	equ	0xFE5
 15530                           plusw1	equ	0xFE3
 15531                           fsr1h	equ	0xFE2
 15532                           fsr1l	equ	0xFE1
 15533                           indf2	equ	0xFDF
 15534                           postinc2	equ	0xFDE
 15535                           postdec2	equ	0xFDD
 15536                           plusw2	equ	0xFDB
 15537                           fsr2h	equ	0xFDA
 15538                           fsr2l	equ	0xFD9
 15539                           status	equ	0xFD8
 15540                           
 15541 ;; *************** function __flash_copy_page_to_buffer *****************
 15542 ;; Defined at:
 15543 ;;		line 315 in file "flash.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;  page            2   19[BANK0 ] unsigned int 
 15546 ;;  buffer          1   21[BANK0 ] enum E8337
 15547 ;; Auto vars:     Size  Location     Type
 15548 ;;  command         4   25[BANK0 ] unsigned char [4]
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  1    wreg      void 
 15551 ;; Registers used:
 15552 ;;		wreg, status,2, status,0, cstack
 15553 ;; Tracked objects:
 15554 ;;		On entry : 0/0
 15555 ;;		On exit  : 0/0
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15558 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15559 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15560 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15561 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15562 ;;Total ram usage:       10 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; Hardware stack levels required when called:   13
 15565 ;; This function calls:
 15566 ;;		__flash_spi_tx
 15567 ;;		_flash_is_busy
 15568 ;; This function is called by:
 15569 ;;		_flash_partial_write
 15570 ;; This function uses a non-reentrant model
 15571 ;;
 15572                           
 15573                           	psect	text65
 15574  0119A4                     __ptext65:
 15575                           	opt stack 0
 15576  0119A4                     __flash_copy_page_to_buffer:
 15577                           	opt stack 13
 15578                           
 15579                           ;flash.c: 317: uint8_t command[4];
 15580                           ;flash.c: 320: while(flash_is_busy());
 15581                           
 15582                           ;incstack = 0
 15583  0119A4  EC9E  F095         	call	_flash_is_busy	;wreg free
 15584  0119A8  0900               	iorlw	0
 15585  0119AA  A4D8               	btfss	status,2,c
 15586  0119AC  D7FB               	goto	__flash_copy_page_to_buffer
 15587                           
 15588                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 15589  0119AE  0100               	movlb	0	; () banked
 15590  0119B0  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15591  0119B2  A4D8               	btfss	status,2,c
 15592  0119B4  D002               	goto	l2795
 15593                           
 15594                           ; BSR set to: 0
 15595                           ;flash.c: 324: command[0] = 0x53;
 15596  0119B6  0E53               	movlw	83
 15597  0119B8  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15598  0119BA                     l2795:
 15599                           
 15600                           ; BSR set to: 0
 15601                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 15602                           
 15603                           ; BSR set to: 0
 15604  0119BA  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15605  0119BC  A4D8               	btfss	status,2,c
 15606  0119BE  D002               	goto	l2796
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;flash.c: 326: command[0] = 0x55;
 15610  0119C0  0E55               	movlw	85
 15611  0119C2  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15612  0119C4                     l2796:
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 15616                           
 15617                           ; BSR set to: 0
 15618  0119C4  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 15619  0119C8  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 15620  0119CC  0E07               	movlw	7
 15621  0119CE  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 15622  0119D0                     u10465:
 15623  0119D0  90D8               	bcf	status,0,c
 15624  0119D2  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 15625  0119D4  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 15626  0119D6  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 15627  0119D8  D7FB               	goto	u10465
 15628  0119DA  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 15629  0119DC  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 15630                           
 15631                           ; BSR set to: 0
 15632                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 15633  0119DE  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15634  0119E0  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15635  0119E2  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 15636                           
 15637                           ;flash.c: 330: command[3] = 0x00;
 15638  0119E4  0E00               	movlw	0
 15639  0119E6  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 15640                           
 15641                           ; BSR set to: 0
 15642                           ;flash.c: 333: _flash_spi_tx(command, 4);
 15643  0119E8  0E79               	movlw	low __flash_copy_page_to_buffer@command
 15644  0119EA  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 15645  0119EC  0E00               	movlw	high __flash_copy_page_to_buffer@command
 15646  0119EE  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 15647  0119F0  0E00               	movlw	0
 15648  0119F2  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 15649  0119F4  0E04               	movlw	4
 15650  0119F6  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 15651  0119F8  EC86  F08D         	call	__flash_spi_tx	;wreg free
 15652  0119FC  0012               	return		;funcret
 15653  0119FE                     __end_of__flash_copy_page_to_buffer:
 15654                           	opt stack 0
 15655                           tblptru	equ	0xFF8
 15656                           tblptrh	equ	0xFF7
 15657                           tblptrl	equ	0xFF6
 15658                           tablat	equ	0xFF5
 15659                           prodh	equ	0xFF4
 15660                           prodl	equ	0xFF3
 15661                           intcon	equ	0xFF2
 15662                           intcon2	equ	0xFF1
 15663                           intcon3	equ	0xFF0
 15664                           postinc0	equ	0xFEE
 15665                           wreg	equ	0xFE8
 15666                           postinc1	equ	0xFE6
 15667                           postdec1	equ	0xFE5
 15668                           plusw1	equ	0xFE3
 15669                           fsr1h	equ	0xFE2
 15670                           fsr1l	equ	0xFE1
 15671                           indf2	equ	0xFDF
 15672                           postinc2	equ	0xFDE
 15673                           postdec2	equ	0xFDD
 15674                           plusw2	equ	0xFDB
 15675                           fsr2h	equ	0xFDA
 15676                           fsr2l	equ	0xFD9
 15677                           status	equ	0xFD8
 15678                           
 15679 ;; *************** function __update_modified_time *****************
 15680 ;; Defined at:
 15681 ;;		line 55 in file "fat16.c"
 15682 ;; Parameters:    Size  Location     Type
 15683 ;;  root            2   13[BANK0 ] PTR struct .
 15684 ;;		 -> fat_append_to_file@root(32), 
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;		None
 15687 ;; Return value:  Size  Location     Type
 15688 ;;                  1    wreg      void 
 15689 ;; Registers used:
 15690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15691 ;; Tracked objects:
 15692 ;;		On entry : 0/0
 15693 ;;		On exit  : 0/0
 15694 ;;		Unchanged: 0/0
 15695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15700 ;;Total ram usage:        2 bytes
 15701 ;; Hardware stack levels used:    1
 15702 ;; Hardware stack levels required when called:   13
 15703 ;; This function calls:
 15704 ;;		__get_date
 15705 ;;		__get_time
 15706 ;; This function is called by:
 15707 ;;		_fat_append_to_file
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711                           	psect	text66
 15712  01249C                     __ptext66:
 15713                           	opt stack 0
 15714  01249C                     __update_modified_time:
 15715                           	opt stack 15
 15716                           
 15717                           ;fat16.c: 57: root->modifiedDate = _get_date();
 15718                           
 15719                           ;incstack = 0
 15720  01249C  EC5E  F08A         	call	__get_date	;wreg free
 15721  0124A0  0100               	movlb	0	; () banked
 15722  0124A2  EE20 F018          	lfsr	2,24
 15723  0124A6  516D               	movf	__update_modified_time@root& (0+255),w,b
 15724  0124A8  26D9               	addwf	fsr2l,f,c
 15725  0124AA  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15726  0124AC  22DA               	addwfc	fsr2h,f,c
 15727  0124AE  C064  FFDE         	movff	?__get_date,postinc2
 15728  0124B2  C065  FFDD         	movff	?__get_date+1,postdec2
 15729                           
 15730                           ;fat16.c: 58: root->modifiedTime = _get_time();
 15731  0124B6  EC8C  F089         	call	__get_time	;wreg free
 15732  0124BA  0100               	movlb	0	; () banked
 15733  0124BC  EE20 F016          	lfsr	2,22
 15734  0124C0  516D               	movf	__update_modified_time@root& (0+255),w,b
 15735  0124C2  26D9               	addwf	fsr2l,f,c
 15736  0124C4  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15737  0124C6  22DA               	addwfc	fsr2h,f,c
 15738  0124C8  C064  FFDE         	movff	?__get_time,postinc2
 15739  0124CC  C065  FFDD         	movff	?__get_time+1,postdec2
 15740                           
 15741                           ; BSR set to: 0
 15742  0124D0  0012               	return		;funcret
 15743  0124D2                     __end_of__update_modified_time:
 15744                           	opt stack 0
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           intcon	equ	0xFF2
 15752                           intcon2	equ	0xFF1
 15753                           intcon3	equ	0xFF0
 15754                           postinc0	equ	0xFEE
 15755                           wreg	equ	0xFE8
 15756                           postinc1	equ	0xFE6
 15757                           postdec1	equ	0xFE5
 15758                           plusw1	equ	0xFE3
 15759                           fsr1h	equ	0xFE2
 15760                           fsr1l	equ	0xFE1
 15761                           indf2	equ	0xFDF
 15762                           postinc2	equ	0xFDE
 15763                           postdec2	equ	0xFDD
 15764                           plusw2	equ	0xFDB
 15765                           fsr2h	equ	0xFDA
 15766                           fsr2l	equ	0xFD9
 15767                           status	equ	0xFD8
 15768                           
 15769 ;; *************** function __get_time *****************
 15770 ;; Defined at:
 15771 ;;		line 31 in file "fat16.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;		None
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;  time            2   11[BANK0 ] unsigned int 
 15776 ;;  seconds         1   10[BANK0 ] unsigned char 
 15777 ;;  minutes         1    9[BANK0 ] unsigned char 
 15778 ;;  hours           1    8[BANK0 ] unsigned char 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  2    4[BANK0 ] unsigned int 
 15781 ;; Registers used:
 15782 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15789 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15791 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15792 ;;Total ram usage:        9 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; Hardware stack levels required when called:   12
 15795 ;; This function calls:
 15796 ;;		_rtcc_get_hours_decimal
 15797 ;;		_rtcc_get_minutes_decimal
 15798 ;;		_rtcc_get_seconds_decimal
 15799 ;; This function is called by:
 15800 ;;		__update_modified_time
 15801 ;;		_fat_create_file
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805                           	psect	text67
 15806  011318                     __ptext67:
 15807                           	opt stack 0
 15808  011318                     __get_time:
 15809                           	opt stack 16
 15810                           
 15811                           ;fat16.c: 33: uint16_t time;
 15812                           ;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 15813                           
 15814                           ; BSR set to: 0
 15815                           ;incstack = 0
 15816  011318  EC03  F097         	call	_rtcc_get_hours_decimal	;wreg free
 15817  01131C  0100               	movlb	0	; () banked
 15818  01131E  6F68               	movwf	__get_time@hours& (0+255),b
 15819                           
 15820                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 15821  011320  ECFB  F096         	call	_rtcc_get_minutes_decimal	;wreg free
 15822  011324  0100               	movlb	0	; () banked
 15823  011326  6F69               	movwf	__get_time@minutes& (0+255),b
 15824                           
 15825                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 15826  011328  EC2B  F097         	call	_rtcc_get_seconds_decimal	;wreg free
 15827  01132C  0100               	movlb	0	; () banked
 15828  01132E  6F6A               	movwf	__get_time@seconds& (0+255),b
 15829                           
 15830                           ; BSR set to: 0
 15831                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 15832  011330  5168               	movf	__get_time@hours& (0+255),w,b
 15833  011332  0B1F               	andlw	31
 15834  011334  6F66               	movwf	??__get_time& (0+255),b
 15835  011336  6B67               	clrf	(??__get_time+1)& (0+255),b
 15836  011338  0E0B               	movlw	11
 15837  01133A                     u10895:
 15838  01133A  90D8               	bcf	status,0,c
 15839  01133C  3766               	rlcf	??__get_time& (0+255),f,b
 15840  01133E  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15841  011340  2EE8               	decfsz	wreg,f,c
 15842  011342  D7FB               	goto	u10895
 15843  011344  C066  F06B         	movff	??__get_time,__get_time@time
 15844  011348  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 15848  01134C  5169               	movf	__get_time@minutes& (0+255),w,b
 15849  01134E  0B3F               	andlw	63
 15850  011350  6F66               	movwf	??__get_time& (0+255),b
 15851  011352  6B67               	clrf	(??__get_time+1)& (0+255),b
 15852  011354  0E05               	movlw	5
 15853  011356                     u10905:
 15854  011356  90D8               	bcf	status,0,c
 15855  011358  3766               	rlcf	??__get_time& (0+255),f,b
 15856  01135A  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15857  01135C  2EE8               	decfsz	wreg,f,c
 15858  01135E  D7FB               	goto	u10905
 15859  011360  5166               	movf	??__get_time& (0+255),w,b
 15860  011362  136B               	iorwf	__get_time@time& (0+255),f,b
 15861  011364  5167               	movf	(??__get_time+1)& (0+255),w,b
 15862  011366  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 15863                           
 15864                           ; BSR set to: 0
 15865                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 15866  011368  C06A  F066         	movff	__get_time@seconds,??__get_time
 15867  01136C  90D8               	bcf	status,0,c
 15868  01136E  3366               	rrcf	??__get_time& (0+255),f,b
 15869  011370  0E1F               	movlw	31
 15870  011372  1766               	andwf	??__get_time& (0+255),f,b
 15871  011374  5166               	movf	??__get_time& (0+255),w,b
 15872  011376  136B               	iorwf	__get_time@time& (0+255),f,b
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;fat16.c: 40: return time;
 15876  011378  C06B  F064         	movff	__get_time@time,?__get_time
 15877  01137C  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 15878  011380  0012               	return	
 15879  011382                     __end_of__get_time:
 15880                           	opt stack 0
 15881                           tblptru	equ	0xFF8
 15882                           tblptrh	equ	0xFF7
 15883                           tblptrl	equ	0xFF6
 15884                           tablat	equ	0xFF5
 15885                           prodh	equ	0xFF4
 15886                           prodl	equ	0xFF3
 15887                           intcon	equ	0xFF2
 15888                           intcon2	equ	0xFF1
 15889                           intcon3	equ	0xFF0
 15890                           postinc0	equ	0xFEE
 15891                           wreg	equ	0xFE8
 15892                           postinc1	equ	0xFE6
 15893                           postdec1	equ	0xFE5
 15894                           plusw1	equ	0xFE3
 15895                           fsr1h	equ	0xFE2
 15896                           fsr1l	equ	0xFE1
 15897                           indf2	equ	0xFDF
 15898                           postinc2	equ	0xFDE
 15899                           postdec2	equ	0xFDD
 15900                           plusw2	equ	0xFDB
 15901                           fsr2h	equ	0xFDA
 15902                           fsr2l	equ	0xFD9
 15903                           status	equ	0xFD8
 15904                           
 15905 ;; *************** function _rtcc_get_minutes_decimal *****************
 15906 ;; Defined at:
 15907 ;;		line 287 in file "rtcc.c"
 15908 ;; Parameters:    Size  Location     Type
 15909 ;;		None
 15910 ;; Auto vars:     Size  Location     Type
 15911 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 15912 ;; Return value:  Size  Location     Type
 15913 ;;                  1    wreg      unsigned char 
 15914 ;; Registers used:
 15915 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15916 ;; Tracked objects:
 15917 ;;		On entry : 0/0
 15918 ;;		On exit  : 0/0
 15919 ;;		Unchanged: 0/0
 15920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15924 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15925 ;;Total ram usage:        1 bytes
 15926 ;; Hardware stack levels used:    1
 15927 ;; Hardware stack levels required when called:   11
 15928 ;; This function calls:
 15929 ;;		__rtcc_bcd_to_decimal
 15930 ;;		_rtcc_get_minutes
 15931 ;; This function is called by:
 15932 ;;		__get_time
 15933 ;;		__get_dateTime
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937                           	psect	text68
 15938  012DF6                     __ptext68:
 15939                           	opt stack 0
 15940  012DF6                     _rtcc_get_minutes_decimal:
 15941                           	opt stack 16
 15942                           
 15943                           ;rtcc.c: 289: uint8_t bcd_minutes = rtcc_get_minutes();
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;incstack = 0
 15947  012DF6  EC50  F097         	call	_rtcc_get_minutes	;wreg free
 15948  012DFA  0100               	movlb	0	; () banked
 15949  012DFC  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;rtcc.c: 290: return _rtcc_bcd_to_decimal(bcd_minutes);
 15953  012DFE  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 15954  012E00  ECE0  F095         	call	__rtcc_bcd_to_decimal
 15955  012E04  0012               	return	
 15956  012E06                     __end_of_rtcc_get_minutes_decimal:
 15957                           	opt stack 0
 15958                           tblptru	equ	0xFF8
 15959                           tblptrh	equ	0xFF7
 15960                           tblptrl	equ	0xFF6
 15961                           tablat	equ	0xFF5
 15962                           prodh	equ	0xFF4
 15963                           prodl	equ	0xFF3
 15964                           intcon	equ	0xFF2
 15965                           intcon2	equ	0xFF1
 15966                           intcon3	equ	0xFF0
 15967                           postinc0	equ	0xFEE
 15968                           wreg	equ	0xFE8
 15969                           postinc1	equ	0xFE6
 15970                           postdec1	equ	0xFE5
 15971                           plusw1	equ	0xFE3
 15972                           fsr1h	equ	0xFE2
 15973                           fsr1l	equ	0xFE1
 15974                           indf2	equ	0xFDF
 15975                           postinc2	equ	0xFDE
 15976                           postdec2	equ	0xFDD
 15977                           plusw2	equ	0xFDB
 15978                           fsr2h	equ	0xFDA
 15979                           fsr2l	equ	0xFD9
 15980                           status	equ	0xFD8
 15981                           
 15982 ;; *************** function _rtcc_get_hours_decimal *****************
 15983 ;; Defined at:
 15984 ;;		line 249 in file "rtcc.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;		None
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 15989 ;; Return value:  Size  Location     Type
 15990 ;;                  1    wreg      unsigned char 
 15991 ;; Registers used:
 15992 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15993 ;; Tracked objects:
 15994 ;;		On entry : 0/0
 15995 ;;		On exit  : 0/0
 15996 ;;		Unchanged: 0/0
 15997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16002 ;;Total ram usage:        1 bytes
 16003 ;; Hardware stack levels used:    1
 16004 ;; Hardware stack levels required when called:   11
 16005 ;; This function calls:
 16006 ;;		__rtcc_bcd_to_decimal
 16007 ;;		_rtcc_get_hours
 16008 ;; This function is called by:
 16009 ;;		__get_time
 16010 ;;		__get_dateTime
 16011 ;; This function uses a non-reentrant model
 16012 ;;
 16013                           
 16014                           	psect	text69
 16015  012E06                     __ptext69:
 16016                           	opt stack 0
 16017  012E06                     _rtcc_get_hours_decimal:
 16018                           	opt stack 16
 16019                           
 16020                           ;rtcc.c: 251: uint8_t bcd_hours = rtcc_get_hours();
 16021                           
 16022                           ;incstack = 0
 16023  012E06  EC57  F097         	call	_rtcc_get_hours	;wreg free
 16024  012E0A  0100               	movlb	0	; () banked
 16025  012E0C  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 16026                           
 16027                           ; BSR set to: 0
 16028                           ;rtcc.c: 252: return _rtcc_bcd_to_decimal(bcd_hours);
 16029  012E0E  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 16030  012E10  ECE0  F095         	call	__rtcc_bcd_to_decimal
 16031  012E14  0012               	return	
 16032  012E16                     __end_of_rtcc_get_hours_decimal:
 16033                           	opt stack 0
 16034                           tblptru	equ	0xFF8
 16035                           tblptrh	equ	0xFF7
 16036                           tblptrl	equ	0xFF6
 16037                           tablat	equ	0xFF5
 16038                           prodh	equ	0xFF4
 16039                           prodl	equ	0xFF3
 16040                           intcon	equ	0xFF2
 16041                           intcon2	equ	0xFF1
 16042                           intcon3	equ	0xFF0
 16043                           postinc0	equ	0xFEE
 16044                           wreg	equ	0xFE8
 16045                           postinc1	equ	0xFE6
 16046                           postdec1	equ	0xFE5
 16047                           plusw1	equ	0xFE3
 16048                           fsr1h	equ	0xFE2
 16049                           fsr1l	equ	0xFE1
 16050                           indf2	equ	0xFDF
 16051                           postinc2	equ	0xFDE
 16052                           postdec2	equ	0xFDD
 16053                           plusw2	equ	0xFDB
 16054                           fsr2h	equ	0xFDA
 16055                           fsr2l	equ	0xFD9
 16056                           status	equ	0xFD8
 16057                           
 16058 ;; *************** function __get_date *****************
 16059 ;; Defined at:
 16060 ;;		line 43 in file "fat16.c"
 16061 ;; Parameters:    Size  Location     Type
 16062 ;;		None
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;  date            2   11[BANK0 ] unsigned int 
 16065 ;;  day             1   10[BANK0 ] unsigned char 
 16066 ;;  month           1    9[BANK0 ] unsigned char 
 16067 ;;  year            1    8[BANK0 ] unsigned char 
 16068 ;; Return value:  Size  Location     Type
 16069 ;;                  2    4[BANK0 ] unsigned int 
 16070 ;; Registers used:
 16071 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16072 ;; Tracked objects:
 16073 ;;		On entry : 0/0
 16074 ;;		On exit  : 0/0
 16075 ;;		Unchanged: 0/0
 16076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16078 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16080 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16081 ;;Total ram usage:        9 bytes
 16082 ;; Hardware stack levels used:    1
 16083 ;; Hardware stack levels required when called:   12
 16084 ;; This function calls:
 16085 ;;		_rtcc_get_day_decimal
 16086 ;;		_rtcc_get_month_decimal
 16087 ;;		_rtcc_get_year_decimal
 16088 ;; This function is called by:
 16089 ;;		__update_modified_time
 16090 ;;		_fat_create_file
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text70
 16095  0114BC                     __ptext70:
 16096                           	opt stack 0
 16097  0114BC                     __get_date:
 16098                           	opt stack 16
 16099                           
 16100                           ;fat16.c: 45: uint16_t date;
 16101                           ;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 16102                           
 16103                           ;incstack = 0
 16104  0114BC  EC0B  F097         	call	_rtcc_get_year_decimal	;wreg free
 16105  0114C0  0100               	movlb	0	; () banked
 16106  0114C2  6F68               	movwf	__get_date@year& (0+255),b
 16107                           
 16108                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 16109  0114C4  EC13  F097         	call	_rtcc_get_month_decimal	;wreg free
 16110  0114C8  0100               	movlb	0	; () banked
 16111  0114CA  6F69               	movwf	__get_date@month& (0+255),b
 16112                           
 16113                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 16114  0114CC  EC1B  F097         	call	_rtcc_get_day_decimal	;wreg free
 16115  0114D0  0100               	movlb	0	; () banked
 16116  0114D2  6F6A               	movwf	__get_date@day& (0+255),b
 16117                           
 16118                           ; BSR set to: 0
 16119                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 16120  0114D4  5168               	movf	__get_date@year& (0+255),w,b
 16121  0114D6  0F14               	addlw	20
 16122  0114D8  0B7F               	andlw	127
 16123  0114DA  6F66               	movwf	??__get_date& (0+255),b
 16124  0114DC  6B67               	clrf	(??__get_date+1)& (0+255),b
 16125  0114DE  0E09               	movlw	9
 16126  0114E0                     u10915:
 16127  0114E0  90D8               	bcf	status,0,c
 16128  0114E2  3766               	rlcf	??__get_date& (0+255),f,b
 16129  0114E4  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16130  0114E6  2EE8               	decfsz	wreg,f,c
 16131  0114E8  D7FB               	goto	u10915
 16132  0114EA  C066  F06B         	movff	??__get_date,__get_date@date
 16133  0114EE  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 16134                           
 16135                           ; BSR set to: 0
 16136                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 16137  0114F2  5169               	movf	__get_date@month& (0+255),w,b
 16138  0114F4  0B0F               	andlw	15
 16139  0114F6  6F66               	movwf	??__get_date& (0+255),b
 16140  0114F8  6B67               	clrf	(??__get_date+1)& (0+255),b
 16141  0114FA  0E05               	movlw	5
 16142  0114FC                     u10925:
 16143  0114FC  90D8               	bcf	status,0,c
 16144  0114FE  3766               	rlcf	??__get_date& (0+255),f,b
 16145  011500  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16146  011502  2EE8               	decfsz	wreg,f,c
 16147  011504  D7FB               	goto	u10925
 16148  011506  5166               	movf	??__get_date& (0+255),w,b
 16149  011508  136B               	iorwf	__get_date@date& (0+255),f,b
 16150  01150A  5167               	movf	(??__get_date+1)& (0+255),w,b
 16151  01150C  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;fat16.c: 51: date |= (day&0b11111);
 16155  01150E  C06A  F066         	movff	__get_date@day,??__get_date
 16156  011512  0E1F               	movlw	31
 16157  011514  1766               	andwf	??__get_date& (0+255),f,b
 16158  011516  5166               	movf	??__get_date& (0+255),w,b
 16159  011518  136B               	iorwf	__get_date@date& (0+255),f,b
 16160                           
 16161                           ; BSR set to: 0
 16162                           ;fat16.c: 52: return date;
 16163  01151A  C06B  F064         	movff	__get_date@date,?__get_date
 16164  01151E  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 16165  011522  0012               	return	
 16166  011524                     __end_of__get_date:
 16167                           	opt stack 0
 16168                           tblptru	equ	0xFF8
 16169                           tblptrh	equ	0xFF7
 16170                           tblptrl	equ	0xFF6
 16171                           tablat	equ	0xFF5
 16172                           prodh	equ	0xFF4
 16173                           prodl	equ	0xFF3
 16174                           intcon	equ	0xFF2
 16175                           intcon2	equ	0xFF1
 16176                           intcon3	equ	0xFF0
 16177                           postinc0	equ	0xFEE
 16178                           wreg	equ	0xFE8
 16179                           postinc1	equ	0xFE6
 16180                           postdec1	equ	0xFE5
 16181                           plusw1	equ	0xFE3
 16182                           fsr1h	equ	0xFE2
 16183                           fsr1l	equ	0xFE1
 16184                           indf2	equ	0xFDF
 16185                           postinc2	equ	0xFDE
 16186                           postdec2	equ	0xFDD
 16187                           plusw2	equ	0xFDB
 16188                           fsr2h	equ	0xFDA
 16189                           fsr2l	equ	0xFD9
 16190                           status	equ	0xFD8
 16191                           
 16192 ;; *************** function _rtcc_get_year_decimal *****************
 16193 ;; Defined at:
 16194 ;;		line 135 in file "rtcc.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;		None
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      unsigned char 
 16201 ;; Registers used:
 16202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16211 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16212 ;;Total ram usage:        1 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:   11
 16215 ;; This function calls:
 16216 ;;		__rtcc_bcd_to_decimal
 16217 ;;		_rtcc_get_year
 16218 ;; This function is called by:
 16219 ;;		__get_date
 16220 ;;		__get_dateTime
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text71
 16225  012E16                     __ptext71:
 16226                           	opt stack 0
 16227  012E16                     _rtcc_get_year_decimal:
 16228                           	opt stack 16
 16229                           
 16230                           ;rtcc.c: 137: uint8_t bcd_year = rtcc_get_year();
 16231                           
 16232                           ; BSR set to: 0
 16233                           ;incstack = 0
 16234  012E16  EC3B  F097         	call	_rtcc_get_year	;wreg free
 16235  012E1A  0100               	movlb	0	; () banked
 16236  012E1C  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;rtcc.c: 138: return _rtcc_bcd_to_decimal(bcd_year);
 16240  012E1E  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 16241  012E20  ECE0  F095         	call	__rtcc_bcd_to_decimal
 16242  012E24  0012               	return	
 16243  012E26                     __end_of_rtcc_get_year_decimal:
 16244                           	opt stack 0
 16245                           tblptru	equ	0xFF8
 16246                           tblptrh	equ	0xFF7
 16247                           tblptrl	equ	0xFF6
 16248                           tablat	equ	0xFF5
 16249                           prodh	equ	0xFF4
 16250                           prodl	equ	0xFF3
 16251                           intcon	equ	0xFF2
 16252                           intcon2	equ	0xFF1
 16253                           intcon3	equ	0xFF0
 16254                           postinc0	equ	0xFEE
 16255                           wreg	equ	0xFE8
 16256                           postinc1	equ	0xFE6
 16257                           postdec1	equ	0xFE5
 16258                           plusw1	equ	0xFE3
 16259                           fsr1h	equ	0xFE2
 16260                           fsr1l	equ	0xFE1
 16261                           indf2	equ	0xFDF
 16262                           postinc2	equ	0xFDE
 16263                           postdec2	equ	0xFDD
 16264                           plusw2	equ	0xFDB
 16265                           fsr2h	equ	0xFDA
 16266                           fsr2l	equ	0xFD9
 16267                           status	equ	0xFD8
 16268                           
 16269 ;; *************** function _rtcc_get_month_decimal *****************
 16270 ;; Defined at:
 16271 ;;		line 173 in file "rtcc.c"
 16272 ;; Parameters:    Size  Location     Type
 16273 ;;		None
 16274 ;; Auto vars:     Size  Location     Type
 16275 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 16276 ;; Return value:  Size  Location     Type
 16277 ;;                  1    wreg      unsigned char 
 16278 ;; Registers used:
 16279 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16280 ;; Tracked objects:
 16281 ;;		On entry : 0/0
 16282 ;;		On exit  : 0/0
 16283 ;;		Unchanged: 0/0
 16284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16288 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16289 ;;Total ram usage:        1 bytes
 16290 ;; Hardware stack levels used:    1
 16291 ;; Hardware stack levels required when called:   11
 16292 ;; This function calls:
 16293 ;;		__rtcc_bcd_to_decimal
 16294 ;;		_rtcc_get_month
 16295 ;; This function is called by:
 16296 ;;		__get_date
 16297 ;;		__get_dateTime
 16298 ;; This function uses a non-reentrant model
 16299 ;;
 16300                           
 16301                           	psect	text72
 16302  012E26                     __ptext72:
 16303                           	opt stack 0
 16304  012E26                     _rtcc_get_month_decimal:
 16305                           	opt stack 16
 16306                           
 16307                           ;rtcc.c: 175: uint8_t bcd_month = rtcc_get_month();
 16308                           
 16309                           ;incstack = 0
 16310  012E26  EC49  F097         	call	_rtcc_get_month	;wreg free
 16311  012E2A  0100               	movlb	0	; () banked
 16312  012E2C  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;rtcc.c: 176: return _rtcc_bcd_to_decimal(bcd_month);
 16316  012E2E  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 16317  012E30  ECE0  F095         	call	__rtcc_bcd_to_decimal
 16318  012E34  0012               	return	
 16319  012E36                     __end_of_rtcc_get_month_decimal:
 16320                           	opt stack 0
 16321                           tblptru	equ	0xFF8
 16322                           tblptrh	equ	0xFF7
 16323                           tblptrl	equ	0xFF6
 16324                           tablat	equ	0xFF5
 16325                           prodh	equ	0xFF4
 16326                           prodl	equ	0xFF3
 16327                           intcon	equ	0xFF2
 16328                           intcon2	equ	0xFF1
 16329                           intcon3	equ	0xFF0
 16330                           postinc0	equ	0xFEE
 16331                           wreg	equ	0xFE8
 16332                           postinc1	equ	0xFE6
 16333                           postdec1	equ	0xFE5
 16334                           plusw1	equ	0xFE3
 16335                           fsr1h	equ	0xFE2
 16336                           fsr1l	equ	0xFE1
 16337                           indf2	equ	0xFDF
 16338                           postinc2	equ	0xFDE
 16339                           postdec2	equ	0xFDD
 16340                           plusw2	equ	0xFDB
 16341                           fsr2h	equ	0xFDA
 16342                           fsr2l	equ	0xFD9
 16343                           status	equ	0xFD8
 16344                           
 16345 ;; *************** function _rtcc_get_day_decimal *****************
 16346 ;; Defined at:
 16347 ;;		line 211 in file "rtcc.c"
 16348 ;; Parameters:    Size  Location     Type
 16349 ;;		None
 16350 ;; Auto vars:     Size  Location     Type
 16351 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 16352 ;; Return value:  Size  Location     Type
 16353 ;;                  1    wreg      unsigned char 
 16354 ;; Registers used:
 16355 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16356 ;; Tracked objects:
 16357 ;;		On entry : 0/0
 16358 ;;		On exit  : 0/0
 16359 ;;		Unchanged: 0/0
 16360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16365 ;;Total ram usage:        1 bytes
 16366 ;; Hardware stack levels used:    1
 16367 ;; Hardware stack levels required when called:   11
 16368 ;; This function calls:
 16369 ;;		__rtcc_bcd_to_decimal
 16370 ;;		_rtcc_get_day
 16371 ;; This function is called by:
 16372 ;;		__get_date
 16373 ;;		__get_dateTime
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           	psect	text73
 16378  012E36                     __ptext73:
 16379                           	opt stack 0
 16380  012E36                     _rtcc_get_day_decimal:
 16381                           	opt stack 16
 16382                           
 16383                           ;rtcc.c: 213: uint8_t bcd_day = rtcc_get_day();
 16384                           
 16385                           ;incstack = 0
 16386  012E36  EC5E  F097         	call	_rtcc_get_day	;wreg free
 16387  012E3A  0100               	movlb	0	; () banked
 16388  012E3C  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;rtcc.c: 214: return _rtcc_bcd_to_decimal(bcd_day);
 16392  012E3E  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 16393  012E40  ECE0  F095         	call	__rtcc_bcd_to_decimal
 16394  012E44  0012               	return	
 16395  012E46                     __end_of_rtcc_get_day_decimal:
 16396                           	opt stack 0
 16397                           tblptru	equ	0xFF8
 16398                           tblptrh	equ	0xFF7
 16399                           tblptrl	equ	0xFF6
 16400                           tablat	equ	0xFF5
 16401                           prodh	equ	0xFF4
 16402                           prodl	equ	0xFF3
 16403                           intcon	equ	0xFF2
 16404                           intcon2	equ	0xFF1
 16405                           intcon3	equ	0xFF0
 16406                           postinc0	equ	0xFEE
 16407                           wreg	equ	0xFE8
 16408                           postinc1	equ	0xFE6
 16409                           postdec1	equ	0xFE5
 16410                           plusw1	equ	0xFE3
 16411                           fsr1h	equ	0xFE2
 16412                           fsr1l	equ	0xFE1
 16413                           indf2	equ	0xFDF
 16414                           postinc2	equ	0xFDE
 16415                           postdec2	equ	0xFDD
 16416                           plusw2	equ	0xFDB
 16417                           fsr2h	equ	0xFDA
 16418                           fsr2l	equ	0xFD9
 16419                           status	equ	0xFD8
 16420                           
 16421 ;; *************** function __sector_from_cluster *****************
 16422 ;; Defined at:
 16423 ;;		line 455 in file "fat16.c"
 16424 ;; Parameters:    Size  Location     Type
 16425 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16426 ;; Auto vars:     Size  Location     Type
 16427 ;;		None
 16428 ;; Return value:  Size  Location     Type
 16429 ;;                  2    0[BANK0 ] unsigned int 
 16430 ;; Registers used:
 16431 ;;		wreg, status,2, status,0
 16432 ;; Tracked objects:
 16433 ;;		On entry : 0/0
 16434 ;;		On exit  : 0/0
 16435 ;;		Unchanged: 0/0
 16436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16441 ;;Total ram usage:        2 bytes
 16442 ;; Hardware stack levels used:    1
 16443 ;; Hardware stack levels required when called:   10
 16444 ;; This function calls:
 16445 ;;		Nothing
 16446 ;; This function is called by:
 16447 ;;		_fat_append_to_file
 16448 ;;		_fat_read_from_file
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           	psect	text74
 16453  012E46                     __ptext74:
 16454                           	opt stack 0
 16455  012E46                     __sector_from_cluster:
 16456                           	opt stack 18
 16457                           
 16458                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 16459                           
 16460                           ;incstack = 0
 16461  012E46  0E14               	movlw	20
 16462  012E48  0100               	movlb	0	; () banked
 16463  012E4A  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 16464  012E4C  6F60               	movwf	?__sector_from_cluster& (0+255),b
 16465  012E4E  0E00               	movlw	0
 16466  012E50  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16467  012E52  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 16468  012E54  0012               	return	
 16469  012E56                     __end_of__sector_from_cluster:
 16470                           	opt stack 0
 16471                           tblptru	equ	0xFF8
 16472                           tblptrh	equ	0xFF7
 16473                           tblptrl	equ	0xFF6
 16474                           tablat	equ	0xFF5
 16475                           prodh	equ	0xFF4
 16476                           prodl	equ	0xFF3
 16477                           intcon	equ	0xFF2
 16478                           intcon2	equ	0xFF1
 16479                           intcon3	equ	0xFF0
 16480                           postinc0	equ	0xFEE
 16481                           wreg	equ	0xFE8
 16482                           postinc1	equ	0xFE6
 16483                           postdec1	equ	0xFE5
 16484                           plusw1	equ	0xFE3
 16485                           fsr1h	equ	0xFE2
 16486                           fsr1l	equ	0xFE1
 16487                           indf2	equ	0xFDF
 16488                           postinc2	equ	0xFDE
 16489                           postdec2	equ	0xFDD
 16490                           plusw2	equ	0xFDB
 16491                           fsr2h	equ	0xFDA
 16492                           fsr2l	equ	0xFD9
 16493                           status	equ	0xFD8
 16494                           
 16495 ;; *************** function __root_is_available *****************
 16496 ;; Defined at:
 16497 ;;		line 61 in file "fat16.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;  file_number     1    wreg     unsigned char 
 16500 ;; Auto vars:     Size  Location     Type
 16501 ;;  file_number     1   44[BANK0 ] unsigned char 
 16502 ;;  offset          2   42[BANK0 ] unsigned int 
 16503 ;;  root_sector     2   40[BANK0 ] unsigned int 
 16504 ;;  first_byte      1   45[BANK0 ] unsigned char 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      unsigned char 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16516 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16517 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16518 ;;Total ram usage:        7 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:   14
 16521 ;; This function calls:
 16522 ;;		_flash_partial_read
 16523 ;; This function is called by:
 16524 ;;		__get_available_root_entry
 16525 ;;		_fat_append_to_file
 16526 ;;		_fat_delete_file
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           	psect	text75
 16531  010D9A                     __ptext75:
 16532                           	opt stack 0
 16533  010D9A                     __root_is_available:
 16534                           	opt stack 13
 16535                           
 16536                           ; BSR set to: 0
 16537                           ;incstack = 0
 16538                           ;__root_is_available@file_number stored from wreg
 16539  010D9A  0100               	movlb	0	; () banked
 16540  010D9C  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 16541                           
 16542                           ;fat16.c: 63: uint16_t root_sector;
 16543                           ;fat16.c: 64: uint16_t offset;
 16544                           ;fat16.c: 65: uint8_t first_byte;
 16545                           ;fat16.c: 69: if(file_number>=64)
 16546  010D9E  0E3F               	movlw	63
 16547  010DA0  0100               	movlb	0	; () banked
 16548  010DA2  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 16549  010DA4  D002               	goto	l2947
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;fat16.c: 70: {
 16553                           ;fat16.c: 72: return 0;
 16554  010DA6  0E00               	movlw	0
 16555                           
 16556                           ; BSR set to: 0
 16557  010DA8  0012               	return	
 16558  010DAA                     l2947:
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;fat16.c: 73: }
 16562                           ;fat16.c: 76: root_sector = (file_number >> 4) + 18;
 16563                           
 16564                           ; BSR set to: 0
 16565  010DAA  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16566  010DAE  3B87               	swapf	??__root_is_available& (0+255),f,b
 16567  010DB0  0E0F               	movlw	15
 16568  010DB2  1787               	andwf	??__root_is_available& (0+255),f,b
 16569  010DB4  0E12               	movlw	18
 16570  010DB6  2587               	addwf	??__root_is_available& (0+255),w,b
 16571  010DB8  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 16572  010DBA  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 16573  010DBC  0E00               	movlw	0
 16574  010DBE  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 16575                           
 16576                           ;fat16.c: 77: offset = (file_number & 0b1111);
 16577  010DC0  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16578  010DC4  0E0F               	movlw	15
 16579  010DC6  1787               	andwf	??__root_is_available& (0+255),f,b
 16580  010DC8  5187               	movf	??__root_is_available& (0+255),w,b
 16581  010DCA  6F8A               	movwf	__root_is_available@offset& (0+255),b
 16582  010DCC  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 16583                           
 16584                           ;fat16.c: 78: offset <<= 5;
 16585  010DCE  0E05               	movlw	5
 16586  010DD0                     u10945:
 16587  010DD0  90D8               	bcf	status,0,c
 16588  010DD2  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 16589  010DD4  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 16590  010DD6  2EE8               	decfsz	wreg,f,c
 16591  010DD8  D7FB               	goto	u10945
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 16595  010DDA  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 16596  010DDE  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 16597  010DE2  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 16598  010DE6  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 16599  010DEA  0E00               	movlw	0
 16600  010DEC  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16601  010DEE  0E01               	movlw	1
 16602  010DF0  6F77               	movwf	flash_partial_read@length& (0+255),b
 16603  010DF2  0E8D               	movlw	low __root_is_available@first_byte
 16604  010DF4  6F79               	movwf	flash_partial_read@data& (0+255),b
 16605  010DF6  0E00               	movlw	high __root_is_available@first_byte
 16606  010DF8  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16607  010DFA  EC00  F088         	call	_flash_partial_read	;wreg free
 16608                           
 16609                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 16610  010DFE  0100               	movlb	0	; () banked
 16611  010E00  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 16612  010E02  B4D8               	btfsc	status,2,c
 16613  010E04  D004               	goto	u10960
 16614                           
 16615                           ; BSR set to: 0
 16616  010E06  0EE5               	movlw	229
 16617  010E08  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 16618  010E0A  A4D8               	btfss	status,2,c
 16619  010E0C  D002               	goto	l2949
 16620  010E0E                     u10960:
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;fat16.c: 85: {
 16624                           ;fat16.c: 87: return 1;
 16625                           
 16626                           ; BSR set to: 0
 16627  010E0E  0E01               	movlw	1
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;fat16.c: 88: }
 16631                           
 16632                           ; BSR set to: 0
 16633  010E10  0012               	return	
 16634  010E12                     l2949:
 16635                           
 16636                           ; BSR set to: 0
 16637                           ;fat16.c: 89: else
 16638                           ;fat16.c: 90: {
 16639                           ;fat16.c: 92: return 0;
 16640                           
 16641                           ; BSR set to: 0
 16642  010E12  0E00               	movlw	0
 16643                           
 16644                           ; BSR set to: 0
 16645  010E14  0012               	return	
 16646  010E16                     __end_of__root_is_available:
 16647                           	opt stack 0
 16648                           tblptru	equ	0xFF8
 16649                           tblptrh	equ	0xFF7
 16650                           tblptrl	equ	0xFF6
 16651                           tablat	equ	0xFF5
 16652                           prodh	equ	0xFF4
 16653                           prodl	equ	0xFF3
 16654                           intcon	equ	0xFF2
 16655                           intcon2	equ	0xFF1
 16656                           intcon3	equ	0xFF0
 16657                           postinc0	equ	0xFEE
 16658                           wreg	equ	0xFE8
 16659                           postinc1	equ	0xFE6
 16660                           postdec1	equ	0xFE5
 16661                           plusw1	equ	0xFE3
 16662                           fsr1h	equ	0xFE2
 16663                           fsr1l	equ	0xFE1
 16664                           indf2	equ	0xFDF
 16665                           postinc2	equ	0xFDE
 16666                           postdec2	equ	0xFDD
 16667                           plusw2	equ	0xFDB
 16668                           fsr2h	equ	0xFDA
 16669                           fsr2l	equ	0xFD9
 16670                           status	equ	0xFD8
 16671                           
 16672 ;; *************** function __read_root *****************
 16673 ;; Defined at:
 16674 ;;		line 194 in file "fat16.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  slot            1    wreg     unsigned char 
 16677 ;;  data            2   39[BANK0 ] PTR struct .
 16678 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;  slot            1   46[BANK0 ] unsigned char 
 16681 ;;  offset          2   44[BANK0 ] unsigned int 
 16682 ;;  root_sector     2   42[BANK0 ] unsigned int 
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  1    wreg      void 
 16685 ;; Registers used:
 16686 ;;		wreg, status,2, status,0, cstack
 16687 ;; Tracked objects:
 16688 ;;		On entry : 0/0
 16689 ;;		On exit  : 0/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16693 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16695 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16696 ;;Total ram usage:        8 bytes
 16697 ;; Hardware stack levels used:    1
 16698 ;; Hardware stack levels required when called:   14
 16699 ;; This function calls:
 16700 ;;		_flash_partial_read
 16701 ;; This function is called by:
 16702 ;;		_fat_append_to_file
 16703 ;;		_fat_rename_file
 16704 ;;		_fat_read_from_file
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           
 16708                           	psect	text76
 16709  011890                     __ptext76:
 16710                           	opt stack 0
 16711  011890                     __read_root:
 16712                           	opt stack 14
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;incstack = 0
 16716                           ;__read_root@slot stored from wreg
 16717  011890  0100               	movlb	0	; () banked
 16718  011892  6F8E               	movwf	__read_root@slot& (0+255),b
 16719                           
 16720                           ;fat16.c: 196: uint16_t root_sector;
 16721                           ;fat16.c: 197: uint16_t offset;
 16722                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 16723  011894  C08E  F089         	movff	__read_root@slot,??__read_root
 16724  011898  0100               	movlb	0	; () banked
 16725  01189A  3B89               	swapf	??__read_root& (0+255),f,b
 16726  01189C  0E0F               	movlw	15
 16727  01189E  1789               	andwf	??__read_root& (0+255),f,b
 16728  0118A0  0E12               	movlw	18
 16729  0118A2  2589               	addwf	??__read_root& (0+255),w,b
 16730  0118A4  6F8A               	movwf	__read_root@root_sector& (0+255),b
 16731  0118A6  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 16732  0118A8  0E00               	movlw	0
 16733  0118AA  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 16734                           
 16735                           ;fat16.c: 199: offset = (slot & 0b1111);
 16736  0118AC  C08E  F089         	movff	__read_root@slot,??__read_root
 16737  0118B0  0E0F               	movlw	15
 16738  0118B2  1789               	andwf	??__read_root& (0+255),f,b
 16739  0118B4  5189               	movf	??__read_root& (0+255),w,b
 16740  0118B6  6F8C               	movwf	__read_root@offset& (0+255),b
 16741  0118B8  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 16742                           
 16743                           ;fat16.c: 200: offset <<= 5;
 16744  0118BA  0E05               	movlw	5
 16745  0118BC                     u11895:
 16746  0118BC  90D8               	bcf	status,0,c
 16747  0118BE  378C               	rlcf	__read_root@offset& (0+255),f,b
 16748  0118C0  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 16749  0118C2  2EE8               	decfsz	wreg,f,c
 16750  0118C4  D7FB               	goto	u11895
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 16754  0118C6  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 16755  0118CA  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 16756  0118CE  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 16757  0118D2  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 16758  0118D6  0E00               	movlw	0
 16759  0118D8  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16760  0118DA  0E20               	movlw	32
 16761  0118DC  6F77               	movwf	flash_partial_read@length& (0+255),b
 16762  0118DE  C087  F079         	movff	__read_root@data,flash_partial_read@data
 16763  0118E2  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 16764  0118E6  EC00  F088         	call	_flash_partial_read	;wreg free
 16765  0118EA  0012               	return		;funcret
 16766  0118EC                     __end_of__read_root:
 16767                           	opt stack 0
 16768                           tblptru	equ	0xFF8
 16769                           tblptrh	equ	0xFF7
 16770                           tblptrl	equ	0xFF6
 16771                           tablat	equ	0xFF5
 16772                           prodh	equ	0xFF4
 16773                           prodl	equ	0xFF3
 16774                           intcon	equ	0xFF2
 16775                           intcon2	equ	0xFF1
 16776                           intcon3	equ	0xFF0
 16777                           postinc0	equ	0xFEE
 16778                           wreg	equ	0xFE8
 16779                           postinc1	equ	0xFE6
 16780                           postdec1	equ	0xFE5
 16781                           plusw1	equ	0xFE3
 16782                           fsr1h	equ	0xFE2
 16783                           fsr1l	equ	0xFE1
 16784                           indf2	equ	0xFDF
 16785                           postinc2	equ	0xFDE
 16786                           postdec2	equ	0xFDD
 16787                           plusw2	equ	0xFDB
 16788                           fsr2h	equ	0xFDA
 16789                           fsr2l	equ	0xFD9
 16790                           status	equ	0xFD8
 16791                           
 16792 ;; *************** function __read_fat *****************
 16793 ;; Defined at:
 16794 ;;		line 171 in file "fat16.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;  cluster         2   39[BANK0 ] unsigned int 
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;  value           2   45[BANK0 ] unsigned int 
 16799 ;;  offset          2   43[BANK0 ] unsigned int 
 16800 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16801 ;; Return value:  Size  Location     Type
 16802 ;;                  2   39[BANK0 ] unsigned int 
 16803 ;; Registers used:
 16804 ;;		wreg, status,2, status,0, cstack
 16805 ;; Tracked objects:
 16806 ;;		On entry : 0/0
 16807 ;;		On exit  : 0/0
 16808 ;;		Unchanged: 0/0
 16809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16811 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16813 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16814 ;;Total ram usage:        8 bytes
 16815 ;; Hardware stack levels used:    1
 16816 ;; Hardware stack levels required when called:   14
 16817 ;; This function calls:
 16818 ;;		_flash_partial_read
 16819 ;; This function is called by:
 16820 ;;		_fat_append_to_file
 16821 ;;		_fat_delete_file
 16822 ;;		_fat_read_from_file
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           	psect	text77
 16827  012038                     __ptext77:
 16828                           	opt stack 0
 16829  012038                     __read_fat:
 16830                           	opt stack 14
 16831                           
 16832                           ;fat16.c: 173: uint16_t fat_sector;
 16833                           ;fat16.c: 174: uint16_t offset;
 16834                           ;fat16.c: 175: uint16_t value;
 16835                           ;fat16.c: 176: fat_sector = cluster>>8;
 16836                           
 16837                           ;incstack = 0
 16838  012038  0100               	movlb	0	; () banked
 16839  01203A  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 16840  01203C  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 16841  01203E  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;fat16.c: 177: fat_sector += 2;
 16845  012040  0E02               	movlw	2
 16846  012042  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 16847  012044  0E00               	movlw	0
 16848  012046  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;fat16.c: 178: offset = cluster & 0xFF;
 16852  012048  5187               	movf	__read_fat@cluster& (0+255),w,b
 16853  01204A  6F8B               	movwf	__read_fat@offset& (0+255),b
 16854  01204C  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;fat16.c: 179: offset <<= 1;
 16858  01204E  90D8               	bcf	status,0,c
 16859  012050  378B               	rlcf	__read_fat@offset& (0+255),f,b
 16860  012052  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 16861                           
 16862                           ; BSR set to: 0
 16863                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 16864  012054  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 16865  012058  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 16866  01205C  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 16867  012060  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16868  012064  0E00               	movlw	0
 16869  012066  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16870  012068  0E02               	movlw	2
 16871  01206A  6F77               	movwf	flash_partial_read@length& (0+255),b
 16872  01206C  0E8D               	movlw	low __read_fat@value
 16873  01206E  6F79               	movwf	flash_partial_read@data& (0+255),b
 16874  012070  0E00               	movlw	high __read_fat@value
 16875  012072  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16876  012074  EC00  F088         	call	_flash_partial_read	;wreg free
 16877                           
 16878                           ;fat16.c: 181: return value;
 16879  012078  C08D  F087         	movff	__read_fat@value,?__read_fat
 16880  01207C  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 16881  012080  0012               	return	
 16882  012082                     __end_of__read_fat:
 16883                           	opt stack 0
 16884                           tblptru	equ	0xFF8
 16885                           tblptrh	equ	0xFF7
 16886                           tblptrl	equ	0xFF6
 16887                           tablat	equ	0xFF5
 16888                           prodh	equ	0xFF4
 16889                           prodl	equ	0xFF3
 16890                           intcon	equ	0xFF2
 16891                           intcon2	equ	0xFF1
 16892                           intcon3	equ	0xFF0
 16893                           postinc0	equ	0xFEE
 16894                           wreg	equ	0xFE8
 16895                           postinc1	equ	0xFE6
 16896                           postdec1	equ	0xFE5
 16897                           plusw1	equ	0xFE3
 16898                           fsr1h	equ	0xFE2
 16899                           fsr1l	equ	0xFE1
 16900                           indf2	equ	0xFDF
 16901                           postinc2	equ	0xFDE
 16902                           postdec2	equ	0xFDD
 16903                           plusw2	equ	0xFDB
 16904                           fsr2h	equ	0xFDA
 16905                           fsr2l	equ	0xFD9
 16906                           status	equ	0xFD8
 16907                           
 16908 ;; *************** function __get_empty_cluster *****************
 16909 ;; Defined at:
 16910 ;;		line 109 in file "fat16.c"
 16911 ;; Parameters:    Size  Location     Type
 16912 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;  cluster         2   47[BANK0 ] unsigned int 
 16915 ;;  value           2   45[BANK0 ] unsigned int 
 16916 ;;  offset          2   43[BANK0 ] unsigned int 
 16917 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16918 ;; Return value:  Size  Location     Type
 16919 ;;                  2   39[BANK0 ] unsigned int 
 16920 ;; Registers used:
 16921 ;;		wreg, status,2, status,0, cstack
 16922 ;; Tracked objects:
 16923 ;;		On entry : 0/0
 16924 ;;		On exit  : 0/0
 16925 ;;		Unchanged: 0/0
 16926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16928 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16930 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16931 ;;Total ram usage:       10 bytes
 16932 ;; Hardware stack levels used:    1
 16933 ;; Hardware stack levels required when called:   14
 16934 ;; This function calls:
 16935 ;;		_flash_partial_read
 16936 ;; This function is called by:
 16937 ;;		_fat_create_file
 16938 ;;		_fat_append_to_file
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text78
 16943  010E92                     __ptext78:
 16944                           	opt stack 0
 16945  010E92                     __get_empty_cluster:
 16946                           	opt stack 14
 16947                           
 16948                           ;fat16.c: 111: uint16_t cluster;
 16949                           ;fat16.c: 112: uint16_t fat_sector;
 16950                           ;fat16.c: 113: uint16_t offset;
 16951                           ;fat16.c: 114: uint16_t value;
 16952                           ;fat16.c: 117: for(cluster=first_cluster; cluster<(4074+2); ++cluster)
 16953                           
 16954                           ;incstack = 0
 16955  010E92  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 16956  010E96  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 16957  010E9A  0EEC               	movlw	236
 16958  010E9C  0100               	movlb	0	; () banked
 16959  010E9E  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 16960  010EA0  0E0F               	movlw	15
 16961  010EA2  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16962  010EA4  B0D8               	btfsc	status,0,c
 16963  010EA6  D02D               	goto	u11830
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;fat16.c: 118: {
 16967                           ;fat16.c: 119: fat_sector = cluster>>8;
 16968                           
 16969                           ; BSR set to: 0
 16970                           
 16971                           ; BSR set to: 0
 16972  010EA8  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16973  010EAA  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 16974  010EAC  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;fat16.c: 120: fat_sector += 2;
 16978  010EAE  0E02               	movlw	2
 16979  010EB0  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 16980  010EB2  0E00               	movlw	0
 16981  010EB4  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;fat16.c: 121: offset = cluster & 0xFF;
 16985  010EB6  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 16986  010EB8  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 16987  010EBA  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 16988                           
 16989                           ; BSR set to: 0
 16990                           ;fat16.c: 122: offset <<= 1;
 16991  010EBC  90D8               	bcf	status,0,c
 16992  010EBE  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 16993  010EC0  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 16997  010EC2  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 16998  010EC6  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 16999  010ECA  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 17000  010ECE  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 17001  010ED2  0E00               	movlw	0
 17002  010ED4  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17003  010ED6  0E02               	movlw	2
 17004  010ED8  6F77               	movwf	flash_partial_read@length& (0+255),b
 17005  010EDA  0E8D               	movlw	low __get_empty_cluster@value
 17006  010EDC  6F79               	movwf	flash_partial_read@data& (0+255),b
 17007  010EDE  0E00               	movlw	high __get_empty_cluster@value
 17008  010EE0  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17009  010EE2  EC00  F088         	call	_flash_partial_read	;wreg free
 17010                           
 17011                           ;fat16.c: 124: if(value==0x0000)
 17012  010EE6  0100               	movlb	0	; () banked
 17013  010EE8  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 17014  010EEA  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 17015  010EEC  A4D8               	btfss	status,2,c
 17016  010EEE  D005               	goto	l2963
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;fat16.c: 125: {
 17020                           ;fat16.c: 126: return cluster;
 17021  010EF0  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 17022  010EF4  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 17023  010EF8  0012               	return	
 17024  010EFA                     l2963:
 17025                           
 17026                           ; BSR set to: 0
 17027                           
 17028                           ; BSR set to: 0
 17029  010EFA  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 17030  010EFC  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 17031                           
 17032                           ; BSR set to: 0
 17033  010EFE  0EEC               	movlw	236
 17034  010F00  D7CE               	goto	L10
 17035  010F02                     u11830:
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;fat16.c: 127: }
 17039                           ;fat16.c: 128: }
 17040                           ;fat16.c: 129: return 0x0000;
 17041                           
 17042                           ; BSR set to: 0
 17043  010F02  0E00               	movlw	0
 17044  010F04  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 17045  010F06  0E00               	movlw	0
 17046  010F08  6F87               	movwf	?__get_empty_cluster& (0+255),b
 17047  010F0A  0012               	return	
 17048  010F0C                     __end_of__get_empty_cluster:
 17049                           	opt stack 0
 17050                           tblptru	equ	0xFF8
 17051                           tblptrh	equ	0xFF7
 17052                           tblptrl	equ	0xFF6
 17053                           tablat	equ	0xFF5
 17054                           prodh	equ	0xFF4
 17055                           prodl	equ	0xFF3
 17056                           intcon	equ	0xFF2
 17057                           intcon2	equ	0xFF1
 17058                           intcon3	equ	0xFF0
 17059                           postinc0	equ	0xFEE
 17060                           wreg	equ	0xFE8
 17061                           postinc1	equ	0xFE6
 17062                           postdec1	equ	0xFE5
 17063                           plusw1	equ	0xFE3
 17064                           fsr1h	equ	0xFE2
 17065                           fsr1l	equ	0xFE1
 17066                           indf2	equ	0xFDF
 17067                           postinc2	equ	0xFDE
 17068                           postdec2	equ	0xFDD
 17069                           plusw2	equ	0xFDB
 17070                           fsr2h	equ	0xFDA
 17071                           fsr2l	equ	0xFD9
 17072                           status	equ	0xFD8
 17073                           
 17074 ;; *************** function _log_get_number_of_samples *****************
 17075 ;; Defined at:
 17076 ;;		line 169 in file "log.c"
 17077 ;; Parameters:    Size  Location     Type
 17078 ;;		None
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;		None
 17081 ;; Return value:  Size  Location     Type
 17082 ;;                  2    0[BANK0 ] unsigned int 
 17083 ;; Registers used:
 17084 ;;		None
 17085 ;; Tracked objects:
 17086 ;;		On entry : 0/0
 17087 ;;		On exit  : 0/0
 17088 ;;		Unchanged: 0/0
 17089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17094 ;;Total ram usage:        2 bytes
 17095 ;; Hardware stack levels used:    1
 17096 ;; Hardware stack levels required when called:   10
 17097 ;; This function calls:
 17098 ;;		Nothing
 17099 ;; This function is called by:
 17100 ;;		_main
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           	psect	text79
 17105  012EEE                     __ptext79:
 17106                           	opt stack 0
 17107  012EEE                     _log_get_number_of_samples:
 17108                           	opt stack 20
 17109                           
 17110                           ;log.c: 171: return averageCount;
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;incstack = 0
 17114  012EEE  C041  F060         	movff	_averageCount,?_log_get_number_of_samples
 17115  012EF2  C042  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 17116  012EF6  0012               	return		;funcret
 17117  012EF8                     __end_of_log_get_number_of_samples:
 17118                           	opt stack 0
 17119                           tblptru	equ	0xFF8
 17120                           tblptrh	equ	0xFF7
 17121                           tblptrl	equ	0xFF6
 17122                           tablat	equ	0xFF5
 17123                           prodh	equ	0xFF4
 17124                           prodl	equ	0xFF3
 17125                           intcon	equ	0xFF2
 17126                           intcon2	equ	0xFF1
 17127                           intcon3	equ	0xFF0
 17128                           postinc0	equ	0xFEE
 17129                           wreg	equ	0xFE8
 17130                           postinc1	equ	0xFE6
 17131                           postdec1	equ	0xFE5
 17132                           plusw1	equ	0xFE3
 17133                           fsr1h	equ	0xFE2
 17134                           fsr1l	equ	0xFE1
 17135                           indf2	equ	0xFDF
 17136                           postinc2	equ	0xFDE
 17137                           postdec2	equ	0xFDD
 17138                           plusw2	equ	0xFDB
 17139                           fsr2h	equ	0xFDA
 17140                           fsr2l	equ	0xFD9
 17141                           status	equ	0xFD8
 17142                           
 17143 ;; *************** function _log_collect_data *****************
 17144 ;; Defined at:
 17145 ;;		line 114 in file "log.c"
 17146 ;; Parameters:    Size  Location     Type
 17147 ;;		None
 17148 ;; Auto vars:     Size  Location     Type
 17149 ;;  temp            2   24[BANK0 ] unsigned int 
 17150 ;; Return value:  Size  Location     Type
 17151 ;;                  1    wreg      void 
 17152 ;; Registers used:
 17153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17154 ;; Tracked objects:
 17155 ;;		On entry : 0/0
 17156 ;;		On exit  : 0/0
 17157 ;;		Unchanged: 0/0
 17158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17163 ;;Total ram usage:        6 bytes
 17164 ;; Hardware stack levels used:    1
 17165 ;; Hardware stack levels required when called:   12
 17166 ;; This function calls:
 17167 ;;		__get_input_power
 17168 ;;		__get_output_power
 17169 ;;		_buck_get_mode
 17170 ;;		_rtcc_get_seconds_decimal
 17171 ;;		_system_output_is_on
 17172 ;; This function is called by:
 17173 ;;		_main
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text80
 17178  00BD64                     __ptext80:
 17179                           	opt stack 0
 17180  00BD64                     _log_collect_data:
 17181                           	opt stack 18
 17182                           
 17183                           ;log.c: 116: uint16_t temp;
 17184                           ;log.c: 119: temp = rtcc_get_seconds_decimal();
 17185                           
 17186                           ;incstack = 0
 17187  00BD64  EC2B  F097         	call	_rtcc_get_seconds_decimal	;wreg free
 17188  00BD68  0100               	movlb	0	; () banked
 17189  00BD6A  6F74               	movwf	??_log_collect_data& (0+255),b
 17190  00BD6C  5174               	movf	??_log_collect_data& (0+255),w,b
 17191  00BD6E  6F78               	movwf	log_collect_data@temp& (0+255),b
 17192  00BD70  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;log.c: 120: if(lastSecond==temp)
 17196  00BD72  0101               	movlb	1	; () banked
 17197  00BD74  51EB               	movf	_lastSecond& (0+255),w,b
 17198  00BD76  0100               	movlb	0	; () banked
 17199  00BD78  6F74               	movwf	??_log_collect_data& (0+255),b
 17200  00BD7A  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 17201  00BD7C  5178               	movf	log_collect_data@temp& (0+255),w,b
 17202  00BD7E  1974               	xorwf	??_log_collect_data& (0+255),w,b
 17203  00BD80  E104               	bnz	l3297
 17204  00BD82  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17205  00BD84  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 17206  00BD86  B4D8               	btfsc	status,2,c
 17207  00BD88  0012               	return	
 17208  00BD8A                     l3297:
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;log.c: 123: }
 17212                           ;log.c: 126: lastSecond = (uint8_t) temp;
 17213  00BD8A  C078  F1EB         	movff	log_collect_data@temp,_lastSecond
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 17217  00BD8E  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 17218  00BD92  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 17219  00BD96  0E00               	movlw	0
 17220  00BD98  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17221  00BD9A  0EFF               	movlw	255
 17222  00BD9C  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17223  00BD9E  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17224  00BDA0  5174               	movf	??_log_collect_data& (0+255),w,b
 17225  00BDA2  0102               	movlb	2	; () banked
 17226  00BDA4  279A               	addwf	_inputVoltageSum& (0+255),f,b
 17227  00BDA6  0100               	movlb	0	; () banked
 17228  00BDA8  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17229  00BDAA  0102               	movlb	2	; () banked
 17230  00BDAC  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 17231  00BDAE  0100               	movlb	0	; () banked
 17232  00BDB0  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17233  00BDB2  0102               	movlb	2	; () banked
 17234  00BDB4  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 17235  00BDB6  0100               	movlb	0	; () banked
 17236  00BDB8  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17237  00BDBA  0102               	movlb	2	; () banked
 17238  00BDBC  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 17239                           
 17240                           ;log.c: 130: inputCurrentSum += os.input_current;
 17241  00BDBE  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 17242  00BDC2  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 17243  00BDC6  0E00               	movlw	0
 17244  00BDC8  0100               	movlb	0	; () banked
 17245  00BDCA  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17246  00BDCC  0EFF               	movlw	255
 17247  00BDCE  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17248  00BDD0  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17249  00BDD2  5174               	movf	??_log_collect_data& (0+255),w,b
 17250  00BDD4  0102               	movlb	2	; () banked
 17251  00BDD6  2796               	addwf	_inputCurrentSum& (0+255),f,b
 17252  00BDD8  0100               	movlb	0	; () banked
 17253  00BDDA  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17254  00BDDC  0102               	movlb	2	; () banked
 17255  00BDDE  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 17256  00BDE0  0100               	movlb	0	; () banked
 17257  00BDE2  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17258  00BDE4  0102               	movlb	2	; () banked
 17259  00BDE6  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 17260  00BDE8  0100               	movlb	0	; () banked
 17261  00BDEA  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17262  00BDEC  0102               	movlb	2	; () banked
 17263  00BDEE  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 17264                           
 17265                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 17266  00BDF0  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 17267  00BDF4  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 17268  00BDF8  0E00               	movlw	0
 17269  00BDFA  0100               	movlb	0	; () banked
 17270  00BDFC  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17271  00BDFE  0EFF               	movlw	255
 17272  00BE00  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17273  00BE02  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17274  00BE04  5174               	movf	??_log_collect_data& (0+255),w,b
 17275  00BE06  0102               	movlb	2	; () banked
 17276  00BE08  2792               	addwf	_outputVoltageSum& (0+255),f,b
 17277  00BE0A  0100               	movlb	0	; () banked
 17278  00BE0C  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17279  00BE0E  0102               	movlb	2	; () banked
 17280  00BE10  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 17281  00BE12  0100               	movlb	0	; () banked
 17282  00BE14  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17283  00BE16  0102               	movlb	2	; () banked
 17284  00BE18  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 17285  00BE1A  0100               	movlb	0	; () banked
 17286  00BE1C  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17287  00BE1E  0102               	movlb	2	; () banked
 17288  00BE20  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 17289                           
 17290                           ;log.c: 132: outputCurrentSum += os.output_current;
 17291  00BE22  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 17292  00BE26  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 17293  00BE2A  0E00               	movlw	0
 17294  00BE2C  0100               	movlb	0	; () banked
 17295  00BE2E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17296  00BE30  0EFF               	movlw	255
 17297  00BE32  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17298  00BE34  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17299  00BE36  5174               	movf	??_log_collect_data& (0+255),w,b
 17300  00BE38  0102               	movlb	2	; () banked
 17301  00BE3A  278E               	addwf	_outputCurrentSum& (0+255),f,b
 17302  00BE3C  0100               	movlb	0	; () banked
 17303  00BE3E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17304  00BE40  0102               	movlb	2	; () banked
 17305  00BE42  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 17306  00BE44  0100               	movlb	0	; () banked
 17307  00BE46  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17308  00BE48  0102               	movlb	2	; () banked
 17309  00BE4A  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 17310  00BE4C  0100               	movlb	0	; () banked
 17311  00BE4E  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17312  00BE50  0102               	movlb	2	; () banked
 17313  00BE52  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 17314                           
 17315                           ; BSR set to: 2
 17316                           ;log.c: 133: temp = _get_input_power();
 17317  00BE54  EC8A  F085         	call	__get_input_power	;wreg free
 17318  00BE58  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 17319  00BE5C  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 17320                           
 17321                           ;log.c: 134: inputPowerSum += temp>>1;
 17322  00BE60  90D8               	bcf	status,0,c
 17323  00BE62  0100               	movlb	0	; () banked
 17324  00BE64  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17325  00BE66  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17326  00BE68  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17327  00BE6A  6F74               	movwf	??_log_collect_data& (0+255),b
 17328  00BE6C  5174               	movf	??_log_collect_data& (0+255),w,b
 17329  00BE6E  0102               	movlb	2	; () banked
 17330  00BE70  278A               	addwf	_inputPowerSum& (0+255),f,b
 17331  00BE72  0100               	movlb	0	; () banked
 17332  00BE74  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17333  00BE76  0102               	movlb	2	; () banked
 17334  00BE78  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 17335  00BE7A  0E00               	movlw	0
 17336  00BE7C  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 17337  00BE7E  0E00               	movlw	0
 17338  00BE80  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 17339                           
 17340                           ; BSR set to: 2
 17341                           ;log.c: 135: inputCapacitySum += temp;
 17342  00BE82  0100               	movlb	0	; () banked
 17343  00BE84  5178               	movf	log_collect_data@temp& (0+255),w,b
 17344  00BE86  0102               	movlb	2	; () banked
 17345  00BE88  2782               	addwf	_inputCapacitySum& (0+255),f,b
 17346  00BE8A  0100               	movlb	0	; () banked
 17347  00BE8C  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17348  00BE8E  0102               	movlb	2	; () banked
 17349  00BE90  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 17350  00BE92  0E00               	movlw	0
 17351  00BE94  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 17352  00BE96  0E00               	movlw	0
 17353  00BE98  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 17354                           
 17355                           ; BSR set to: 2
 17356                           ;log.c: 136: temp = _get_output_power();
 17357  00BE9A  EC49  F085         	call	__get_output_power	;wreg free
 17358  00BE9E  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 17359  00BEA2  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 17360                           
 17361                           ;log.c: 137: outputPowerSum += temp>>1;
 17362  00BEA6  90D8               	bcf	status,0,c
 17363  00BEA8  0100               	movlb	0	; () banked
 17364  00BEAA  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17365  00BEAC  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17366  00BEAE  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17367  00BEB0  6F74               	movwf	??_log_collect_data& (0+255),b
 17368  00BEB2  5174               	movf	??_log_collect_data& (0+255),w,b
 17369  00BEB4  0102               	movlb	2	; () banked
 17370  00BEB6  2786               	addwf	_outputPowerSum& (0+255),f,b
 17371  00BEB8  0100               	movlb	0	; () banked
 17372  00BEBA  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17373  00BEBC  0102               	movlb	2	; () banked
 17374  00BEBE  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 17375  00BEC0  0E00               	movlw	0
 17376  00BEC2  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 17377  00BEC4  0E00               	movlw	0
 17378  00BEC6  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 17379                           
 17380                           ; BSR set to: 2
 17381                           ;log.c: 138: outputCapacitySum += temp;
 17382  00BEC8  0100               	movlb	0	; () banked
 17383  00BECA  5178               	movf	log_collect_data@temp& (0+255),w,b
 17384  00BECC  0102               	movlb	2	; () banked
 17385  00BECE  277E               	addwf	_outputCapacitySum& (0+255),f,b
 17386  00BED0  0100               	movlb	0	; () banked
 17387  00BED2  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17388  00BED4  0102               	movlb	2	; () banked
 17389  00BED6  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 17390  00BED8  0E00               	movlw	0
 17391  00BEDA  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 17392  00BEDC  0E00               	movlw	0
 17393  00BEDE  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 17394                           
 17395                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 17396  00BEE0  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 17397  00BEE4  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 17398  00BEE8  0E00               	movlw	0
 17399  00BEEA  0100               	movlb	0	; () banked
 17400  00BEEC  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17401  00BEEE  0EFF               	movlw	255
 17402  00BEF0  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17403  00BEF2  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17404  00BEF4  5174               	movf	??_log_collect_data& (0+255),w,b
 17405  00BEF6  0102               	movlb	2	; () banked
 17406  00BEF8  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 17407  00BEFA  0100               	movlb	0	; () banked
 17408  00BEFC  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17409  00BEFE  0102               	movlb	2	; () banked
 17410  00BF00  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 17411  00BF02  0100               	movlb	0	; () banked
 17412  00BF04  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17413  00BF06  0102               	movlb	2	; () banked
 17414  00BF08  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 17415  00BF0A  0100               	movlb	0	; () banked
 17416  00BF0C  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17417  00BF0E  0102               	movlb	2	; () banked
 17418  00BF10  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 17419                           
 17420                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 17421  00BF12  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 17422  00BF16  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 17423  00BF1A  0E00               	movlw	0
 17424  00BF1C  0100               	movlb	0	; () banked
 17425  00BF1E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17426  00BF20  0EFF               	movlw	255
 17427  00BF22  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17428  00BF24  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17429  00BF26  5174               	movf	??_log_collect_data& (0+255),w,b
 17430  00BF28  0102               	movlb	2	; () banked
 17431  00BF2A  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 17432  00BF2C  0100               	movlb	0	; () banked
 17433  00BF2E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17434  00BF30  0102               	movlb	2	; () banked
 17435  00BF32  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 17436  00BF34  0100               	movlb	0	; () banked
 17437  00BF36  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17438  00BF38  0102               	movlb	2	; () banked
 17439  00BF3A  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 17440  00BF3C  0100               	movlb	0	; () banked
 17441  00BF3E  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17442  00BF40  0102               	movlb	2	; () banked
 17443  00BF42  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 17444                           
 17445                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 17446  00BF44  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 17447  00BF48  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 17448  00BF4C  0E00               	movlw	0
 17449  00BF4E  0100               	movlb	0	; () banked
 17450  00BF50  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17451  00BF52  0EFF               	movlw	255
 17452  00BF54  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17453  00BF56  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17454  00BF58  5174               	movf	??_log_collect_data& (0+255),w,b
 17455  00BF5A  0102               	movlb	2	; () banked
 17456  00BF5C  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 17457  00BF5E  0100               	movlb	0	; () banked
 17458  00BF60  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17459  00BF62  0102               	movlb	2	; () banked
 17460  00BF64  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 17461  00BF66  0100               	movlb	0	; () banked
 17462  00BF68  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17463  00BF6A  0102               	movlb	2	; () banked
 17464  00BF6C  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 17465  00BF6E  0100               	movlb	0	; () banked
 17466  00BF70  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17467  00BF72  0102               	movlb	2	; () banked
 17468  00BF74  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 17469                           
 17470                           ; BSR set to: 2
 17471                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 17472  00BF76  ECA6  F097         	call	_buck_get_mode	;wreg free
 17473  00BF7A  0100               	movlb	0	; () banked
 17474  00BF7C  6F74               	movwf	??_log_collect_data& (0+255),b
 17475  00BF7E  0E7F               	movlw	127
 17476  00BF80  1774               	andwf	??_log_collect_data& (0+255),f,b
 17477  00BF82  B4D8               	btfsc	status,2,c
 17478  00BF84  D003               	goto	l3299
 17479                           
 17480                           ; BSR set to: 0
 17481                           ;log.c: 143: {
 17482                           ;log.c: 144: ++chargerOnTime;
 17483  00BF86  0102               	movlb	2	; () banked
 17484  00BF88  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 17485  00BF8A  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 17486  00BF8C                     l3299:
 17487                           
 17488                           ;log.c: 145: }
 17489                           ;log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 17490                           
 17491                           ; BSR set to: 2
 17492  00BF8C  0102               	movlb	2	; () banked
 17493  00BF8E  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 17494  00BF90  A4D8               	btfss	status,2,c
 17495  00BF92  D002               	goto	l3300
 17496                           
 17497                           ; BSR set to: 2
 17498                           ;log.c: 147: {
 17499                           ;log.c: 148: ++lowPowerTime;
 17500  00BF94  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 17501  00BF96  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 17502  00BF98                     l3300:
 17503                           
 17504                           ; BSR set to: 2
 17505                           ;log.c: 149: }
 17506                           ;log.c: 150: if(system_output_is_on(OUTPUT_1))
 17507                           
 17508                           ; BSR set to: 2
 17509  00BF98  0E01               	movlw	1
 17510  00BF9A  EC26  F096         	call	_system_output_is_on
 17511  00BF9E  0900               	iorlw	0
 17512  00BFA0  B4D8               	btfsc	status,2,c
 17513  00BFA2  D002               	goto	l3301
 17514                           
 17515                           ;log.c: 151: status |= 0b10000000;
 17516  00BFA4  0101               	movlb	1	; () banked
 17517  00BFA6  8FEC               	bsf	_status& (0+255),7,b
 17518  00BFA8                     l3301:
 17519                           
 17520                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 17521                           
 17522                           ; BSR set to: 1
 17523  00BFA8  0E02               	movlw	2
 17524  00BFAA  EC26  F096         	call	_system_output_is_on
 17525  00BFAE  0900               	iorlw	0
 17526  00BFB0  B4D8               	btfsc	status,2,c
 17527  00BFB2  D002               	goto	l3302
 17528                           
 17529                           ;log.c: 153: status |= 0b01000000;
 17530  00BFB4  0101               	movlb	1	; () banked
 17531  00BFB6  8DEC               	bsf	_status& (0+255),6,b
 17532  00BFB8                     l3302:
 17533                           
 17534                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 17535                           
 17536                           ; BSR set to: 1
 17537  00BFB8  0E04               	movlw	4
 17538  00BFBA  EC26  F096         	call	_system_output_is_on
 17539  00BFBE  0900               	iorlw	0
 17540  00BFC0  B4D8               	btfsc	status,2,c
 17541  00BFC2  D002               	goto	l3303
 17542                           
 17543                           ;log.c: 155: status |= 0b00100000;
 17544  00BFC4  0101               	movlb	1	; () banked
 17545  00BFC6  8BEC               	bsf	_status& (0+255),5,b
 17546  00BFC8                     l3303:
 17547                           
 17548                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 17549                           
 17550                           ; BSR set to: 1
 17551  00BFC8  0E08               	movlw	8
 17552  00BFCA  EC26  F096         	call	_system_output_is_on
 17553  00BFCE  0900               	iorlw	0
 17554  00BFD0  B4D8               	btfsc	status,2,c
 17555  00BFD2  D002               	goto	l3304
 17556                           
 17557                           ;log.c: 157: status |= 0b00010000;
 17558  00BFD4  0101               	movlb	1	; () banked
 17559  00BFD6  89EC               	bsf	_status& (0+255),4,b
 17560  00BFD8                     l3304:
 17561                           
 17562                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 17563                           
 17564                           ; BSR set to: 1
 17565  00BFD8  0E10               	movlw	16
 17566  00BFDA  EC26  F096         	call	_system_output_is_on
 17567  00BFDE  0900               	iorlw	0
 17568  00BFE0  B4D8               	btfsc	status,2,c
 17569  00BFE2  D002               	goto	l3305
 17570                           
 17571                           ;log.c: 159: status |= 0b00001000;
 17572  00BFE4  0101               	movlb	1	; () banked
 17573  00BFE6  87EC               	bsf	_status& (0+255),3,b
 17574  00BFE8                     l3305:
 17575                           
 17576                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 17577                           
 17578                           ; BSR set to: 1
 17579  00BFE8  0E20               	movlw	32
 17580  00BFEA  EC26  F096         	call	_system_output_is_on
 17581  00BFEE  0900               	iorlw	0
 17582  00BFF0  B4D8               	btfsc	status,2,c
 17583  00BFF2  D002               	goto	l3306
 17584                           
 17585                           ;log.c: 161: status |= 0b00000100;
 17586  00BFF4  0101               	movlb	1	; () banked
 17587  00BFF6  85EC               	bsf	_status& (0+255),2,b
 17588  00BFF8                     l3306:
 17589                           
 17590                           ;log.c: 163: status |= 0b00000010;
 17591  00BFF8  0101               	movlb	1	; () banked
 17592  00BFFA  83EC               	bsf	_status& (0+255),1,b
 17593                           
 17594                           ;log.c: 164: ++averageCount;
 17595  00BFFC  4A41               	infsnz	_averageCount,f,c
 17596  00BFFE  2A42               	incf	_averageCount+1,f,c
 17597  00C000  0012               	return		;funcret
 17598  00C002                     __end_of_log_collect_data:
 17599                           	opt stack 0
 17600                           tblptru	equ	0xFF8
 17601                           tblptrh	equ	0xFF7
 17602                           tblptrl	equ	0xFF6
 17603                           tablat	equ	0xFF5
 17604                           prodh	equ	0xFF4
 17605                           prodl	equ	0xFF3
 17606                           intcon	equ	0xFF2
 17607                           intcon2	equ	0xFF1
 17608                           intcon3	equ	0xFF0
 17609                           postinc0	equ	0xFEE
 17610                           wreg	equ	0xFE8
 17611                           postinc1	equ	0xFE6
 17612                           postdec1	equ	0xFE5
 17613                           plusw1	equ	0xFE3
 17614                           fsr1h	equ	0xFE2
 17615                           fsr1l	equ	0xFE1
 17616                           indf2	equ	0xFDF
 17617                           postinc2	equ	0xFDE
 17618                           postdec2	equ	0xFDD
 17619                           plusw2	equ	0xFDB
 17620                           fsr2h	equ	0xFDA
 17621                           fsr2l	equ	0xFD9
 17622                           status	equ	0xFD8
 17623                           
 17624 ;; *************** function _system_output_is_on *****************
 17625 ;; Defined at:
 17626 ;;		line 491 in file "os.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;  output          1    wreg     enum E8135
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;  output          1    0[BANK0 ] enum E8135
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  1    wreg      unsigned char 
 17633 ;; Registers used:
 17634 ;;		wreg, status,2, status,0
 17635 ;; Tracked objects:
 17636 ;;		On entry : 0/0
 17637 ;;		On exit  : 0/0
 17638 ;;		Unchanged: 0/0
 17639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17644 ;;Total ram usage:        1 bytes
 17645 ;; Hardware stack levels used:    1
 17646 ;; Hardware stack levels required when called:   10
 17647 ;; This function calls:
 17648 ;;		Nothing
 17649 ;; This function is called by:
 17650 ;;		_system_output_toggle
 17651 ;;		_log_collect_data
 17652 ;; This function uses a non-reentrant model
 17653 ;;
 17654                           
 17655                           	psect	text81
 17656  012C4C                     __ptext81:
 17657                           	opt stack 0
 17658  012C4C                     _system_output_is_on:
 17659                           	opt stack 17
 17660                           
 17661                           ;incstack = 0
 17662                           ;system_output_is_on@output stored from wreg
 17663  012C4C  0100               	movlb	0	; () banked
 17664  012C4E  6F60               	movwf	system_output_is_on@output& (0+255),b
 17665                           
 17666                           ;os.c: 493: if(os.outputs&output)
 17667  012C50  0102               	movlb	2	; () banked
 17668  012C52  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 17669  012C54  0100               	movlb	0	; () banked
 17670  012C56  1560               	andwf	system_output_is_on@output& (0+255),w,b
 17671  012C58  0900               	iorlw	0
 17672  012C5A  B4D8               	btfsc	status,2,c
 17673  012C5C  D002               	goto	l1396
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;os.c: 494: return 1;
 17677  012C5E  0E01               	movlw	1
 17678                           
 17679                           ; BSR set to: 0
 17680                           
 17681                           ; BSR set to: 0
 17682  012C60  0012               	return	
 17683  012C62                     l1396:
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;os.c: 495: else
 17687                           ;os.c: 496: return 0;
 17688                           
 17689                           ; BSR set to: 0
 17690  012C62  0E00               	movlw	0
 17691                           
 17692                           ; BSR set to: 0
 17693  012C64  0012               	return	
 17694  012C66                     __end_of_system_output_is_on:
 17695                           	opt stack 0
 17696                           tblptru	equ	0xFF8
 17697                           tblptrh	equ	0xFF7
 17698                           tblptrl	equ	0xFF6
 17699                           tablat	equ	0xFF5
 17700                           prodh	equ	0xFF4
 17701                           prodl	equ	0xFF3
 17702                           intcon	equ	0xFF2
 17703                           intcon2	equ	0xFF1
 17704                           intcon3	equ	0xFF0
 17705                           postinc0	equ	0xFEE
 17706                           wreg	equ	0xFE8
 17707                           postinc1	equ	0xFE6
 17708                           postdec1	equ	0xFE5
 17709                           plusw1	equ	0xFE3
 17710                           fsr1h	equ	0xFE2
 17711                           fsr1l	equ	0xFE1
 17712                           indf2	equ	0xFDF
 17713                           postinc2	equ	0xFDE
 17714                           postdec2	equ	0xFDD
 17715                           plusw2	equ	0xFDB
 17716                           fsr2h	equ	0xFDA
 17717                           fsr2l	equ	0xFD9
 17718                           status	equ	0xFD8
 17719                           
 17720 ;; *************** function _rtcc_get_seconds_decimal *****************
 17721 ;; Defined at:
 17722 ;;		line 325 in file "rtcc.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;		None
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 17727 ;; Return value:  Size  Location     Type
 17728 ;;                  1    wreg      unsigned char 
 17729 ;; Registers used:
 17730 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17731 ;; Tracked objects:
 17732 ;;		On entry : 0/0
 17733 ;;		On exit  : 0/0
 17734 ;;		Unchanged: 0/0
 17735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17739 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17740 ;;Total ram usage:        1 bytes
 17741 ;; Hardware stack levels used:    1
 17742 ;; Hardware stack levels required when called:   11
 17743 ;; This function calls:
 17744 ;;		__rtcc_bcd_to_decimal
 17745 ;;		_rtcc_get_seconds
 17746 ;; This function is called by:
 17747 ;;		__get_time
 17748 ;;		__get_dateTime
 17749 ;;		_log_start_new
 17750 ;;		_log_collect_data
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text82
 17755  012E56                     __ptext82:
 17756                           	opt stack 0
 17757  012E56                     _rtcc_get_seconds_decimal:
 17758                           	opt stack 17
 17759                           
 17760                           ;rtcc.c: 327: uint8_t bcd_seconds = rtcc_get_seconds();
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;incstack = 0
 17764  012E56  EC42  F097         	call	_rtcc_get_seconds	;wreg free
 17765  012E5A  0100               	movlb	0	; () banked
 17766  012E5C  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;rtcc.c: 328: return _rtcc_bcd_to_decimal(bcd_seconds);
 17770  012E5E  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 17771  012E60  ECE0  F095         	call	__rtcc_bcd_to_decimal
 17772  012E64  0012               	return	
 17773  012E66                     __end_of_rtcc_get_seconds_decimal:
 17774                           	opt stack 0
 17775                           tblptru	equ	0xFF8
 17776                           tblptrh	equ	0xFF7
 17777                           tblptrl	equ	0xFF6
 17778                           tablat	equ	0xFF5
 17779                           prodh	equ	0xFF4
 17780                           prodl	equ	0xFF3
 17781                           intcon	equ	0xFF2
 17782                           intcon2	equ	0xFF1
 17783                           intcon3	equ	0xFF0
 17784                           postinc0	equ	0xFEE
 17785                           wreg	equ	0xFE8
 17786                           postinc1	equ	0xFE6
 17787                           postdec1	equ	0xFE5
 17788                           plusw1	equ	0xFE3
 17789                           fsr1h	equ	0xFE2
 17790                           fsr1l	equ	0xFE1
 17791                           indf2	equ	0xFDF
 17792                           postinc2	equ	0xFDE
 17793                           postdec2	equ	0xFDD
 17794                           plusw2	equ	0xFDB
 17795                           fsr2h	equ	0xFDA
 17796                           fsr2l	equ	0xFD9
 17797                           status	equ	0xFD8
 17798                           
 17799 ;; *************** function __rtcc_bcd_to_decimal *****************
 17800 ;; Defined at:
 17801 ;;		line 7 in file "rtcc.c"
 17802 ;; Parameters:    Size  Location     Type
 17803 ;;  input           1    wreg     unsigned char 
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;  input           1    2[BANK0 ] unsigned char 
 17806 ;;  ones            1    1[BANK0 ] unsigned char 
 17807 ;;  tens            1    0[BANK0 ] unsigned char 
 17808 ;; Return value:  Size  Location     Type
 17809 ;;                  1    wreg      unsigned char 
 17810 ;; Registers used:
 17811 ;;		wreg, status,2, status,0, prodl, prodh
 17812 ;; Tracked objects:
 17813 ;;		On entry : 0/0
 17814 ;;		On exit  : 0/0
 17815 ;;		Unchanged: 0/0
 17816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17818 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17821 ;;Total ram usage:        3 bytes
 17822 ;; Hardware stack levels used:    1
 17823 ;; Hardware stack levels required when called:   10
 17824 ;; This function calls:
 17825 ;;		Nothing
 17826 ;; This function is called by:
 17827 ;;		_rtcc_get_year_decimal
 17828 ;;		_rtcc_get_month_decimal
 17829 ;;		_rtcc_get_day_decimal
 17830 ;;		_rtcc_get_hours_decimal
 17831 ;;		_rtcc_get_minutes_decimal
 17832 ;;		_rtcc_get_seconds_decimal
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836                           	psect	text83
 17837  012BC0                     __ptext83:
 17838                           	opt stack 0
 17839  012BC0                     __rtcc_bcd_to_decimal:
 17840                           	opt stack 17
 17841                           
 17842                           ;incstack = 0
 17843                           ;__rtcc_bcd_to_decimal@input stored from wreg
 17844  012BC0  0100               	movlb	0	; () banked
 17845  012BC2  6F62               	movwf	__rtcc_bcd_to_decimal@input& (0+255),b
 17846                           
 17847                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 17848  012BC4  0100               	movlb	0	; () banked
 17849  012BC6  3962               	swapf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 17850  012BC8  0B0F               	andlw	15
 17851  012BCA  0B0F               	andlw	15
 17852  012BCC  6F60               	movwf	__rtcc_bcd_to_decimal@tens& (0+255),b
 17853                           
 17854                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 17855  012BCE  5162               	movf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 17856  012BD0  0B0F               	andlw	15
 17857  012BD2  6F61               	movwf	__rtcc_bcd_to_decimal@ones& (0+255),b
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;rtcc.c: 11: return ((10*tens) + ones);
 17861  012BD4  5160               	movf	__rtcc_bcd_to_decimal@tens& (0+255),w,b
 17862  012BD6  0D0A               	mullw	10
 17863  012BD8  50F3               	movf	prodl,w,c
 17864  012BDA  2561               	addwf	__rtcc_bcd_to_decimal@ones& (0+255),w,b
 17865  012BDC  0012               	return	
 17866  012BDE                     __end_of__rtcc_bcd_to_decimal:
 17867                           	opt stack 0
 17868                           tblptru	equ	0xFF8
 17869                           tblptrh	equ	0xFF7
 17870                           tblptrl	equ	0xFF6
 17871                           tablat	equ	0xFF5
 17872                           prodh	equ	0xFF4
 17873                           prodl	equ	0xFF3
 17874                           intcon	equ	0xFF2
 17875                           intcon2	equ	0xFF1
 17876                           intcon3	equ	0xFF0
 17877                           postinc0	equ	0xFEE
 17878                           wreg	equ	0xFE8
 17879                           postinc1	equ	0xFE6
 17880                           postdec1	equ	0xFE5
 17881                           plusw1	equ	0xFE3
 17882                           fsr1h	equ	0xFE2
 17883                           fsr1l	equ	0xFE1
 17884                           indf2	equ	0xFDF
 17885                           postinc2	equ	0xFDE
 17886                           postdec2	equ	0xFDD
 17887                           plusw2	equ	0xFDB
 17888                           fsr2h	equ	0xFDA
 17889                           fsr2l	equ	0xFD9
 17890                           status	equ	0xFD8
 17891                           
 17892 ;; *************** function __get_output_power *****************
 17893 ;; Defined at:
 17894 ;;		line 99 in file "log.c"
 17895 ;; Parameters:    Size  Location     Type
 17896 ;;		None
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;  pwr             4   15[BANK0 ] unsigned long 
 17899 ;; Return value:  Size  Location     Type
 17900 ;;                  2   13[BANK0 ] unsigned int 
 17901 ;; Registers used:
 17902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17903 ;; Tracked objects:
 17904 ;;		On entry : 0/0
 17905 ;;		On exit  : 0/0
 17906 ;;		Unchanged: 0/0
 17907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17909 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17911 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17912 ;;Total ram usage:        6 bytes
 17913 ;; Hardware stack levels used:    1
 17914 ;; Hardware stack levels required when called:   11
 17915 ;; This function calls:
 17916 ;;		___lldiv
 17917 ;;		___lmul
 17918 ;; This function is called by:
 17919 ;;		_log_collect_data
 17920 ;; This function uses a non-reentrant model
 17921 ;;
 17922                           
 17923                           	psect	text84
 17924  010A92                     __ptext84:
 17925                           	opt stack 0
 17926  010A92                     __get_output_power:
 17927                           	opt stack 18
 17928                           
 17929                           ;log.c: 101: uint32_t pwr;
 17930                           ;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) os.output_current);
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;incstack = 0
 17934  010A92  EE22  F027         	lfsr	2,_os+39	;volatile
 17935  010A96  CFDE F060          	movff	postinc2,___lmul@multiplier
 17936  010A9A  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17937  010A9E  0100               	movlb	0	; () banked
 17938  010AA0  0E00               	movlw	0
 17939  010AA2  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17940  010AA4  0EFF               	movlw	-1
 17941  010AA6  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17942  010AA8  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17943  010AAA  EE22  F032         	lfsr	2,_os+50	;volatile
 17944  010AAE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17945  010AB2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17946  010AB6  0E00               	movlw	0
 17947  010AB8  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17948  010ABA  0EFF               	movlw	-1
 17949  010ABC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17950  010ABE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17951  010AC0  ECB3  F08D         	call	___lmul	;wreg free
 17952  010AC4  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 17953  010AC8  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 17954  010ACC  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 17955  010AD0  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 17956                           
 17957                           ;log.c: 103: pwr /= 1000;
 17958  010AD4  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 17959  010AD8  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 17960  010ADC  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 17961  010AE0  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 17962  010AE4  0EE8               	movlw	232
 17963  010AE6  0100               	movlb	0	; () banked
 17964  010AE8  6F64               	movwf	___lldiv@divisor& (0+255),b
 17965  010AEA  0E03               	movlw	3
 17966  010AEC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 17967  010AEE  0E00               	movlw	0
 17968  010AF0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 17969  010AF2  0E00               	movlw	0
 17970  010AF4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 17971  010AF6  EC07  F085         	call	___lldiv	;wreg free
 17972  010AFA  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 17973  010AFE  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 17974  010B02  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 17975  010B06  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 17976                           
 17977                           ;log.c: 104: return (uint16_t) pwr;
 17978  010B0A  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 17979  010B0E  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 17980  010B12  0012               	return	
 17981  010B14                     __end_of__get_output_power:
 17982                           	opt stack 0
 17983                           tblptru	equ	0xFF8
 17984                           tblptrh	equ	0xFF7
 17985                           tblptrl	equ	0xFF6
 17986                           tablat	equ	0xFF5
 17987                           prodh	equ	0xFF4
 17988                           prodl	equ	0xFF3
 17989                           intcon	equ	0xFF2
 17990                           intcon2	equ	0xFF1
 17991                           intcon3	equ	0xFF0
 17992                           postinc0	equ	0xFEE
 17993                           wreg	equ	0xFE8
 17994                           postinc1	equ	0xFE6
 17995                           postdec1	equ	0xFE5
 17996                           plusw1	equ	0xFE3
 17997                           fsr1h	equ	0xFE2
 17998                           fsr1l	equ	0xFE1
 17999                           indf2	equ	0xFDF
 18000                           postinc2	equ	0xFDE
 18001                           postdec2	equ	0xFDD
 18002                           plusw2	equ	0xFDB
 18003                           fsr2h	equ	0xFDA
 18004                           fsr2l	equ	0xFD9
 18005                           status	equ	0xFD8
 18006                           
 18007 ;; *************** function __get_input_power *****************
 18008 ;; Defined at:
 18009 ;;		line 91 in file "log.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;		None
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;  pwr             4   16[BANK0 ] long 
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  2   14[BANK0 ] unsigned int 
 18016 ;; Registers used:
 18017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18018 ;; Tracked objects:
 18019 ;;		On entry : 0/0
 18020 ;;		On exit  : 0/0
 18021 ;;		Unchanged: 0/0
 18022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18026 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18027 ;;Total ram usage:        6 bytes
 18028 ;; Hardware stack levels used:    1
 18029 ;; Hardware stack levels required when called:   11
 18030 ;; This function calls:
 18031 ;;		___aldiv
 18032 ;;		___lmul
 18033 ;; This function is called by:
 18034 ;;		_log_collect_data
 18035 ;; This function uses a non-reentrant model
 18036 ;;
 18037                           
 18038                           	psect	text85
 18039  010B14                     __ptext85:
 18040                           	opt stack 0
 18041  010B14                     __get_input_power:
 18042                           	opt stack 18
 18043                           
 18044                           ;log.c: 93: int32_t pwr;
 18045                           ;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.input_current);
 18046                           
 18047                           ;incstack = 0
 18048  010B14  EE22  F012         	lfsr	2,_os+18	;volatile
 18049  010B18  CFDE F060          	movff	postinc2,___lmul@multiplier
 18050  010B1C  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18051  010B20  0100               	movlb	0	; () banked
 18052  010B22  0E00               	movlw	0
 18053  010B24  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18054  010B26  0EFF               	movlw	-1
 18055  010B28  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18056  010B2A  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18057  010B2C  EE22  F01D         	lfsr	2,_os+29	;volatile
 18058  010B30  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18059  010B34  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18060  010B38  0E00               	movlw	0
 18061  010B3A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18062  010B3C  0EFF               	movlw	-1
 18063  010B3E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18064  010B40  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18065  010B42  ECB3  F08D         	call	___lmul	;wreg free
 18066  010B46  C060  F070         	movff	?___lmul,__get_input_power@pwr
 18067  010B4A  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 18068  010B4E  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 18069  010B52  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 18070                           
 18071                           ;log.c: 95: pwr /= 1000;
 18072  010B56  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 18073  010B5A  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 18074  010B5E  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 18075  010B62  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 18076  010B66  0EE8               	movlw	232
 18077  010B68  0100               	movlb	0	; () banked
 18078  010B6A  6F64               	movwf	___aldiv@divisor& (0+255),b
 18079  010B6C  0E03               	movlw	3
 18080  010B6E  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 18081  010B70  0E00               	movlw	0
 18082  010B72  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 18083  010B74  0E00               	movlw	0
 18084  010B76  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 18085  010B78  ECE8  F07C         	call	___aldiv	;wreg free
 18086  010B7C  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 18087  010B80  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 18088  010B84  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 18089  010B88  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 18090                           
 18091                           ;log.c: 96: return (uint16_t) pwr;
 18092  010B8C  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 18093  010B90  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 18094  010B94  0012               	return	
 18095  010B96                     __end_of__get_input_power:
 18096                           	opt stack 0
 18097                           tblptru	equ	0xFF8
 18098                           tblptrh	equ	0xFF7
 18099                           tblptrl	equ	0xFF6
 18100                           tablat	equ	0xFF5
 18101                           prodh	equ	0xFF4
 18102                           prodl	equ	0xFF3
 18103                           intcon	equ	0xFF2
 18104                           intcon2	equ	0xFF1
 18105                           intcon3	equ	0xFF0
 18106                           postinc0	equ	0xFEE
 18107                           wreg	equ	0xFE8
 18108                           postinc1	equ	0xFE6
 18109                           postdec1	equ	0xFE5
 18110                           plusw1	equ	0xFE3
 18111                           fsr1h	equ	0xFE2
 18112                           fsr1l	equ	0xFE1
 18113                           indf2	equ	0xFDF
 18114                           postinc2	equ	0xFDE
 18115                           postdec2	equ	0xFDD
 18116                           plusw2	equ	0xFDB
 18117                           fsr2h	equ	0xFDA
 18118                           fsr2l	equ	0xFD9
 18119                           status	equ	0xFD8
 18120                           
 18121 ;; *************** function _i2c_eeprom_tasks *****************
 18122 ;; Defined at:
 18123 ;;		line 779 in file "i2c.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;		None
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;		None
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  1    wreg      void 
 18130 ;; Registers used:
 18131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18141 ;;Total ram usage:        0 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:   14
 18144 ;; This function calls:
 18145 ;;		__write_calibration
 18146 ;;		_get_next_eeprom_write_task
 18147 ;; This function is called by:
 18148 ;;		_main
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           	psect	text86
 18153  0110F0                     __ptext86:
 18154                           	opt stack 0
 18155  0110F0                     _i2c_eeprom_tasks:
 18156                           	opt stack 16
 18157                           
 18158                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 18159                           
 18160                           ;incstack = 0
 18161  0110F0  D01C               	goto	l1672
 18162  0110F2                     
 18163                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 18164  0110F2  0E00               	movlw	0
 18165  0110F4  ECD0  F082         	call	__write_calibration
 18166                           
 18167                           ;i2c.c: 787: break;
 18168  0110F8  0012               	return	
 18169  0110FA                     
 18170                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 18171  0110FA  0E01               	movlw	1
 18172  0110FC  ECD0  F082         	call	__write_calibration
 18173                           
 18174                           ;i2c.c: 790: break;
 18175  011100  0012               	return	
 18176  011102                     
 18177                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 18178  011102  0E02               	movlw	2
 18179  011104  ECD0  F082         	call	__write_calibration
 18180                           
 18181                           ;i2c.c: 793: break;
 18182  011108  0012               	return	
 18183  01110A                     
 18184                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 18185  01110A  0E03               	movlw	3
 18186  01110C  ECD0  F082         	call	__write_calibration
 18187                           
 18188                           ;i2c.c: 796: break;
 18189  011110  0012               	return	
 18190  011112                     
 18191                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 18192  011112  0E04               	movlw	4
 18193  011114  ECD0  F082         	call	__write_calibration
 18194                           
 18195                           ;i2c.c: 799: break;
 18196  011118  0012               	return	
 18197  01111A                     
 18198                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 18199  01111A  0E05               	movlw	5
 18200  01111C  ECD0  F082         	call	__write_calibration
 18201                           
 18202                           ;i2c.c: 802: break;
 18203  011120  0012               	return	
 18204  011122                     
 18205                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 18206  011122  0E06               	movlw	6
 18207  011124  ECD0  F082         	call	__write_calibration
 18208                           
 18209                           ;i2c.c: 806: }
 18210                           
 18211                           ;i2c.c: 805: break;
 18212  011128  0012               	return	
 18213  01112A                     l1672:
 18214  01112A  EC03  F094         	call	_get_next_eeprom_write_task	;wreg free
 18215                           
 18216                           ; Switch size 1, requested type "space"
 18217                           ; Number of cases is 8, Range of values is 1 to 8
 18218                           ; switch strategies available:
 18219                           ; Name         Instructions Cycles
 18220                           ; simple_byte           25    13 (average)
 18221                           ;	Chosen strategy is simple_byte
 18222  01112E  0A01               	xorlw	1	; case 1
 18223  011130  B4D8               	btfsc	status,2,c
 18224  011132  0012               	return	
 18225  011134  0A03               	xorlw	3	; case 2
 18226  011136  B4D8               	btfsc	status,2,c
 18227  011138  D7DC               	goto	l1675
 18228  01113A  0A01               	xorlw	1	; case 3
 18229  01113C  B4D8               	btfsc	status,2,c
 18230  01113E  D7DD               	goto	l1676
 18231  011140  0A07               	xorlw	7	; case 4
 18232  011142  B4D8               	btfsc	status,2,c
 18233  011144  D7DE               	goto	l1677
 18234  011146  0A01               	xorlw	1	; case 5
 18235  011148  B4D8               	btfsc	status,2,c
 18236  01114A  D7DF               	goto	l1678
 18237  01114C  0A03               	xorlw	3	; case 6
 18238  01114E  B4D8               	btfsc	status,2,c
 18239  011150  D7E0               	goto	l1679
 18240  011152  0A01               	xorlw	1	; case 7
 18241  011154  B4D8               	btfsc	status,2,c
 18242  011156  D7E1               	goto	l1680
 18243  011158  0A0F               	xorlw	15	; case 8
 18244  01115A  A4D8               	btfss	status,2,c
 18245  01115C  0012               	return	
 18246  01115E  D7E1               	goto	l1681
 18247  011160                     __end_of_i2c_eeprom_tasks:
 18248                           	opt stack 0
 18249                           tblptru	equ	0xFF8
 18250                           tblptrh	equ	0xFF7
 18251                           tblptrl	equ	0xFF6
 18252                           tablat	equ	0xFF5
 18253                           prodh	equ	0xFF4
 18254                           prodl	equ	0xFF3
 18255                           intcon	equ	0xFF2
 18256                           intcon2	equ	0xFF1
 18257                           intcon3	equ	0xFF0
 18258                           postinc0	equ	0xFEE
 18259                           wreg	equ	0xFE8
 18260                           postinc1	equ	0xFE6
 18261                           postdec1	equ	0xFE5
 18262                           plusw1	equ	0xFE3
 18263                           fsr1h	equ	0xFE2
 18264                           fsr1l	equ	0xFE1
 18265                           indf2	equ	0xFDF
 18266                           postinc2	equ	0xFDE
 18267                           postdec2	equ	0xFDD
 18268                           plusw2	equ	0xFDB
 18269                           fsr2h	equ	0xFDA
 18270                           fsr2l	equ	0xFD9
 18271                           status	equ	0xFD8
 18272                           
 18273 ;; *************** function _get_next_eeprom_write_task *****************
 18274 ;; Defined at:
 18275 ;;		line 759 in file "i2c.c"
 18276 ;; Parameters:    Size  Location     Type
 18277 ;;		None
 18278 ;; Auto vars:     Size  Location     Type
 18279 ;;  task            1    0[BANK0 ] enum E8258
 18280 ;; Return value:  Size  Location     Type
 18281 ;;                  1    wreg      enum E8258
 18282 ;; Registers used:
 18283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18284 ;; Tracked objects:
 18285 ;;		On entry : 0/0
 18286 ;;		On exit  : 0/0
 18287 ;;		Unchanged: 0/0
 18288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18292 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18293 ;;Total ram usage:        1 bytes
 18294 ;; Hardware stack levels used:    1
 18295 ;; Hardware stack levels required when called:   10
 18296 ;; This function calls:
 18297 ;;		Nothing
 18298 ;; This function is called by:
 18299 ;;		_i2c_eeprom_tasks
 18300 ;; This function uses a non-reentrant model
 18301 ;;
 18302                           
 18303                           	psect	text87
 18304  012806                     __ptext87:
 18305                           	opt stack 0
 18306  012806                     _get_next_eeprom_write_task:
 18307                           	opt stack 19
 18308                           
 18309                           ;i2c.c: 761: eeprom_write_task_t task;
 18310                           ;i2c.c: 762: if (task_list_read_index == task_list_write_index)
 18311                           
 18312                           ;incstack = 0
 18313  012806  504F               	movf	_task_list_write_index,w,c
 18314  012808  1850               	xorwf	_task_list_read_index,w,c
 18315  01280A  A4D8               	btfss	status,2,c
 18316  01280C  D002               	goto	l1667
 18317                           
 18318                           ;i2c.c: 763: {
 18319                           ;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 18320  01280E  0E00               	movlw	0
 18321                           
 18322                           ;i2c.c: 766: }
 18323  012810  0012               	return	
 18324  012812                     l1667:
 18325                           
 18326                           ;i2c.c: 767: else
 18327                           ;i2c.c: 768: {
 18328                           ;i2c.c: 770: task = task_list[task_list_read_index];
 18329  012812  5050               	movf	_task_list_read_index,w,c
 18330  012814  0D01               	mullw	1
 18331  012816  0E68               	movlw	low _task_list
 18332  012818  24F3               	addwf	prodl,w,c
 18333  01281A  6ED9               	movwf	fsr2l,c
 18334  01281C  0E04               	movlw	high _task_list
 18335  01281E  20F4               	addwfc	prodh,w,c
 18336  012820  6EDA               	movwf	fsr2h,c
 18337  012822  50DF               	movf	indf2,w,c
 18338  012824  0100               	movlb	0	; () banked
 18339  012826  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 18340                           
 18341                           ; BSR set to: 0
 18342                           ;i2c.c: 772: ++task_list_read_index;
 18343  012828  2A50               	incf	_task_list_read_index,f,c
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 18347  01282A  0E0F               	movlw	15
 18348  01282C  1650               	andwf	_task_list_read_index,f,c
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;i2c.c: 775: return task;
 18352  01282E  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 18353                           
 18354                           ; BSR set to: 0
 18355  012830  0012               	return	
 18356  012832                     __end_of_get_next_eeprom_write_task:
 18357                           	opt stack 0
 18358                           tblptru	equ	0xFF8
 18359                           tblptrh	equ	0xFF7
 18360                           tblptrl	equ	0xFF6
 18361                           tablat	equ	0xFF5
 18362                           prodh	equ	0xFF4
 18363                           prodl	equ	0xFF3
 18364                           intcon	equ	0xFF2
 18365                           intcon2	equ	0xFF1
 18366                           intcon3	equ	0xFF0
 18367                           postinc0	equ	0xFEE
 18368                           wreg	equ	0xFE8
 18369                           postinc1	equ	0xFE6
 18370                           postdec1	equ	0xFE5
 18371                           plusw1	equ	0xFE3
 18372                           fsr1h	equ	0xFE2
 18373                           fsr1l	equ	0xFE1
 18374                           indf2	equ	0xFDF
 18375                           postinc2	equ	0xFDE
 18376                           postdec2	equ	0xFDD
 18377                           plusw2	equ	0xFDB
 18378                           fsr2h	equ	0xFDA
 18379                           fsr2l	equ	0xFD9
 18380                           status	equ	0xFD8
 18381                           
 18382 ;; *************** function __write_calibration *****************
 18383 ;; Defined at:
 18384 ;;		line 715 in file "i2c.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;  index           1    wreg     enum E8148
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;  index           1   59[BANK0 ] enum E8148
 18389 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 18390 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 18391 ;;		 -> calibrationParameters(84), 
 18392 ;;  addr            2   55[BANK0 ] unsigned int 
 18393 ;;  cntr            1   60[BANK0 ] unsigned char 
 18394 ;; Return value:  Size  Location     Type
 18395 ;;                  1    wreg      void 
 18396 ;; Registers used:
 18397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18398 ;; Tracked objects:
 18399 ;;		On entry : 0/0
 18400 ;;		On exit  : 0/0
 18401 ;;		Unchanged: 0/0
 18402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18404 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18406 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18407 ;;Total ram usage:       24 bytes
 18408 ;; Hardware stack levels used:    1
 18409 ;; Hardware stack levels required when called:   13
 18410 ;; This function calls:
 18411 ;;		_i2c_eeprom_write
 18412 ;; This function is called by:
 18413 ;;		_i2c_eeprom_tasks
 18414 ;; This function uses a non-reentrant model
 18415 ;;
 18416                           
 18417                           	psect	text88
 18418  0105A0                     __ptext88:
 18419                           	opt stack 0
 18420  0105A0                     __write_calibration:
 18421                           	opt stack 16
 18422                           
 18423                           ;incstack = 0
 18424                           ;__write_calibration@index stored from wreg
 18425  0105A0  0100               	movlb	0	; () banked
 18426  0105A2  6F9B               	movwf	__write_calibration@index& (0+255),b
 18427                           
 18428                           ;i2c.c: 717: uint8_t buffer[16];
 18429                           ;i2c.c: 718: uint8_t *ptr;
 18430                           ;i2c.c: 719: uint8_t cntr;
 18431                           ;i2c.c: 720: uint16_t addr;
 18432                           ;i2c.c: 721: buffer[0] = 0x77;
 18433  0105A4  0E77               	movlw	119
 18434  0105A6  0100               	movlb	0	; () banked
 18435  0105A8  6F87               	movwf	__write_calibration@buffer& (0+255),b
 18436                           
 18437                           ;i2c.c: 722: buffer[1] = 0x55;
 18438  0105AA  0E55               	movlw	85
 18439  0105AC  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 18440                           
 18441                           ;i2c.c: 723: buffer[2] = 0x33;
 18442  0105AE  0E33               	movlw	51
 18443  0105B0  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 18447  0105B2  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 18451  0105B6  519B               	movf	__write_calibration@index& (0+255),w,b
 18452  0105B8  0D0C               	mullw	12
 18453  0105BA  0E00               	movlw	low _calibrationParameters
 18454  0105BC  24F3               	addwf	prodl,w,c
 18455  0105BE  6F99               	movwf	__write_calibration@ptr& (0+255),b
 18456  0105C0  0E03               	movlw	high _calibrationParameters
 18457  0105C2  20F4               	addwfc	prodh,w,c
 18458  0105C4  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 18459                           
 18460                           ; BSR set to: 0
 18461                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 18462  0105C6  0E04               	movlw	4
 18463  0105C8  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 18464  0105CA                     l14955:
 18465                           
 18466                           ; BSR set to: 0
 18467  0105CA  0E0F               	movlw	15
 18468  0105CC  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 18469  0105CE  D001               	goto	l1652
 18470  0105D0  D012               	goto	u12740
 18471  0105D2                     l1652:
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;i2c.c: 727: {
 18475                           ;i2c.c: 728: buffer[cntr] = *ptr;
 18476                           
 18477                           ; BSR set to: 0
 18478  0105D2  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 18479  0105D6  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 18480  0105DA  519C               	movf	__write_calibration@cntr& (0+255),w,b
 18481  0105DC  0D01               	mullw	1
 18482  0105DE  0E87               	movlw	low __write_calibration@buffer
 18483  0105E0  24F3               	addwf	prodl,w,c
 18484  0105E2  6EE1               	movwf	fsr1l,c
 18485  0105E4  0E00               	movlw	high __write_calibration@buffer
 18486  0105E6  20F4               	addwfc	prodh,w,c
 18487  0105E8  6EE2               	movwf	fsr1h,c
 18488  0105EA  CFDF FFE7          	movff	indf2,indf1
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;i2c.c: 729: ++ptr;
 18492  0105EE  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 18493  0105F0  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 18494                           
 18495                           ; BSR set to: 0
 18496  0105F2  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 18497  0105F4  D7EA               	goto	l14955
 18498  0105F6                     u12740:
 18499                           
 18500                           ; BSR set to: 0
 18501                           ;i2c.c: 730: }
 18502                           ;i2c.c: 731: addr = 0x0200 + (index<<4);
 18503                           
 18504                           ; BSR set to: 0
 18505  0105F6  519B               	movf	__write_calibration@index& (0+255),w,b
 18506  0105F8  6F85               	movwf	??__write_calibration& (0+255),b
 18507  0105FA  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 18508  0105FC  3B85               	swapf	??__write_calibration& (0+255),f,b
 18509  0105FE  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 18510  010600  0EF0               	movlw	240
 18511  010602  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 18512  010604  5185               	movf	??__write_calibration& (0+255),w,b
 18513  010606  0B0F               	andlw	15
 18514  010608  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 18515  01060A  0EF0               	movlw	240
 18516  01060C  1785               	andwf	??__write_calibration& (0+255),f,b
 18517  01060E  0E00               	movlw	0
 18518  010610  2585               	addwf	??__write_calibration& (0+255),w,b
 18519  010612  6F97               	movwf	__write_calibration@addr& (0+255),b
 18520  010614  0E02               	movlw	2
 18521  010616  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 18522  010618  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 18523                           
 18524                           ; BSR set to: 0
 18525                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 18526  01061A  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 18527  01061E  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 18528  010622  0E87               	movlw	low __write_calibration@buffer
 18529  010624  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 18530  010626  0E00               	movlw	high __write_calibration@buffer
 18531  010628  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 18532  01062A  0E10               	movlw	16
 18533  01062C  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 18534  01062E  EC0C  F086         	call	_i2c_eeprom_write	;wreg free
 18535  010632  0012               	return		;funcret
 18536  010634                     __end_of__write_calibration:
 18537                           	opt stack 0
 18538                           tblptru	equ	0xFF8
 18539                           tblptrh	equ	0xFF7
 18540                           tblptrl	equ	0xFF6
 18541                           tablat	equ	0xFF5
 18542                           prodh	equ	0xFF4
 18543                           prodl	equ	0xFF3
 18544                           intcon	equ	0xFF2
 18545                           intcon2	equ	0xFF1
 18546                           intcon3	equ	0xFF0
 18547                           postinc0	equ	0xFEE
 18548                           wreg	equ	0xFE8
 18549                           indf1	equ	0xFE7
 18550                           postinc1	equ	0xFE6
 18551                           postdec1	equ	0xFE5
 18552                           plusw1	equ	0xFE3
 18553                           fsr1h	equ	0xFE2
 18554                           fsr1l	equ	0xFE1
 18555                           indf2	equ	0xFDF
 18556                           postinc2	equ	0xFDE
 18557                           postdec2	equ	0xFDD
 18558                           plusw2	equ	0xFDB
 18559                           fsr2h	equ	0xFDA
 18560                           fsr2l	equ	0xFD9
 18561                           status	equ	0xFD8
 18562                           
 18563 ;; *************** function _i2c_adc_start *****************
 18564 ;; Defined at:
 18565 ;;		line 467 in file "i2c.c"
 18566 ;; Parameters:    Size  Location     Type
 18567 ;;  channel         1    wreg     enum E8230
 18568 ;;  resolution      1   10[BANK0 ] enum E8236
 18569 ;;  gain            1   11[BANK0 ] enum E8242
 18570 ;; Auto vars:     Size  Location     Type
 18571 ;;  channel         1   12[BANK0 ] enum E8230
 18572 ;;  configuratio    1   13[BANK0 ] unsigned char 
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  1    wreg      void 
 18575 ;; Registers used:
 18576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18586 ;;Total ram usage:        4 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:   12
 18589 ;; This function calls:
 18590 ;;		__i2c_write
 18591 ;;		_i2c_set_frequency
 18592 ;; This function is called by:
 18593 ;;		_main
 18594 ;; This function uses a non-reentrant model
 18595 ;;
 18596                           
 18597                           	psect	text89
 18598  01242C                     __ptext89:
 18599                           	opt stack 0
 18600  01242C                     _i2c_adc_start:
 18601                           	opt stack 18
 18602                           
 18603                           ;incstack = 0
 18604                           ;i2c_adc_start@channel stored from wreg
 18605  01242C  0100               	movlb	0	; () banked
 18606  01242E  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 18607                           
 18608                           ;i2c.c: 469: uint8_t configuration_byte;
 18609                           ;i2c.c: 470: configuration_byte = 0b10000000;
 18610  012430  0E80               	movlw	128
 18611  012432  0100               	movlb	0	; () banked
 18612  012434  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 18616  012436  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 18617  012438  46E8               	rlncf	wreg,f,c
 18618  01243A  0BE0               	andlw	224
 18619  01243C  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 18623  01243E  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 18624  012440  46E8               	rlncf	wreg,f,c
 18625  012442  0BFC               	andlw	252
 18626  012444  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;i2c.c: 473: configuration_byte |= gain;
 18630  012446  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 18631  012448  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18632                           
 18633                           ; BSR set to: 0
 18634                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18635  01244A  0E02               	movlw	2
 18636  01244C  ECB0  F088         	call	_i2c_set_frequency
 18637                           
 18638                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 18639  012450  0E6D               	movlw	low i2c_adc_start@configuration_byte
 18640  012452  0100               	movlb	0	; () banked
 18641  012454  6F65               	movwf	__i2c_write@data& (0+255),b
 18642  012456  0E00               	movlw	high i2c_adc_start@configuration_byte
 18643  012458  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 18644  01245A  0E01               	movlw	1
 18645  01245C  6F67               	movwf	__i2c_write@length& (0+255),b
 18646  01245E  0ED0               	movlw	208
 18647  012460  EC55  F08F         	call	__i2c_write
 18648  012464  0012               	return		;funcret
 18649  012466                     __end_of_i2c_adc_start:
 18650                           	opt stack 0
 18651                           tblptru	equ	0xFF8
 18652                           tblptrh	equ	0xFF7
 18653                           tblptrl	equ	0xFF6
 18654                           tablat	equ	0xFF5
 18655                           prodh	equ	0xFF4
 18656                           prodl	equ	0xFF3
 18657                           intcon	equ	0xFF2
 18658                           intcon2	equ	0xFF1
 18659                           intcon3	equ	0xFF0
 18660                           postinc0	equ	0xFEE
 18661                           wreg	equ	0xFE8
 18662                           indf1	equ	0xFE7
 18663                           postinc1	equ	0xFE6
 18664                           postdec1	equ	0xFE5
 18665                           plusw1	equ	0xFE3
 18666                           fsr1h	equ	0xFE2
 18667                           fsr1l	equ	0xFE1
 18668                           indf2	equ	0xFDF
 18669                           postinc2	equ	0xFDE
 18670                           postdec2	equ	0xFDD
 18671                           plusw2	equ	0xFDB
 18672                           fsr2h	equ	0xFDA
 18673                           fsr2l	equ	0xFD9
 18674                           status	equ	0xFD8
 18675                           
 18676 ;; *************** function _i2c_adc_read *****************
 18677 ;; Defined at:
 18678 ;;		line 481 in file "i2c.c"
 18679 ;; Parameters:    Size  Location     Type
 18680 ;;		None
 18681 ;; Auto vars:     Size  Location     Type
 18682 ;;  result          2    8[BANK0 ] int 
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  2    5[BANK0 ] int 
 18685 ;; Registers used:
 18686 ;;		wreg, status,2, status,0, cstack
 18687 ;; Tracked objects:
 18688 ;;		On entry : 0/0
 18689 ;;		On exit  : 0/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18695 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18696 ;;Total ram usage:        5 bytes
 18697 ;; Hardware stack levels used:    1
 18698 ;; Hardware stack levels required when called:   11
 18699 ;; This function calls:
 18700 ;;		__i2c_acknowledge
 18701 ;;		__i2c_get
 18702 ;;		__i2c_not_acknowledge
 18703 ;;		__i2c_send
 18704 ;;		__i2c_start
 18705 ;;		__i2c_stop
 18706 ;;		__i2c_wait_idle
 18707 ;;		_i2c_set_frequency
 18708 ;; This function is called by:
 18709 ;;		_main
 18710 ;; This function uses a non-reentrant model
 18711 ;;
 18712                           
 18713                           	psect	text90
 18714  011D64                     __ptext90:
 18715                           	opt stack 0
 18716  011D64                     _i2c_adc_read:
 18717                           	opt stack 19
 18718                           
 18719                           ;i2c.c: 483: int16_t result;
 18720                           ;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18721                           
 18722                           ;incstack = 0
 18723  011D64  0E02               	movlw	2
 18724  011D66  ECB0  F088         	call	_i2c_set_frequency
 18725                           
 18726                           ;i2c.c: 488: _i2c_wait_idle();
 18727  011D6A  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 18728                           
 18729                           ;i2c.c: 489: _i2c_start();
 18730  011D6E  EC99  F097         	call	__i2c_start	;wreg free
 18731                           
 18732                           ;i2c.c: 490: _i2c_wait_idle();
 18733  011D72  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 18734                           
 18735                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 18736  011D76  0ED1               	movlw	209
 18737  011D78  EC90  F097         	call	__i2c_send
 18738                           
 18739                           ;i2c.c: 492: _i2c_wait_idle();
 18740  011D7C  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 18741                           
 18742                           ;i2c.c: 493: result = _i2c_get();
 18743  011D80  EC81  F097         	call	__i2c_get	;wreg free
 18744  011D84  0100               	movlb	0	; () banked
 18745  011D86  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18746  011D88  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18747  011D8A  6F68               	movwf	i2c_adc_read@result& (0+255),b
 18748  011D8C  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 18749                           
 18750                           ; BSR set to: 0
 18751                           ;i2c.c: 494: result <<= 8;
 18752  011D8E  5168               	movf	i2c_adc_read@result& (0+255),w,b
 18753  011D90  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 18754  011D92  6B68               	clrf	i2c_adc_read@result& (0+255),b
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;i2c.c: 495: _i2c_acknowledge();
 18758  011D94  EC86  F097         	call	__i2c_acknowledge	;wreg free
 18759                           
 18760                           ;i2c.c: 496: result |= _i2c_get();
 18761  011D98  EC81  F097         	call	__i2c_get	;wreg free
 18762  011D9C  0100               	movlb	0	; () banked
 18763  011D9E  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18764  011DA0  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18765  011DA2  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 18766                           
 18767                           ; BSR set to: 0
 18768                           ;i2c.c: 497: _i2c_not_acknowledge();
 18769  011DA4  EC7C  F097         	call	__i2c_not_acknowledge	;wreg free
 18770                           
 18771                           ;i2c.c: 498: _i2c_stop();
 18772  011DA8  EC95  F097         	call	__i2c_stop	;wreg free
 18773                           
 18774                           ;i2c.c: 500: return result;
 18775  011DAC  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 18776  011DB0  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 18777  011DB4  0012               	return	
 18778  011DB6                     __end_of_i2c_adc_read:
 18779                           	opt stack 0
 18780                           tblptru	equ	0xFF8
 18781                           tblptrh	equ	0xFF7
 18782                           tblptrl	equ	0xFF6
 18783                           tablat	equ	0xFF5
 18784                           prodh	equ	0xFF4
 18785                           prodl	equ	0xFF3
 18786                           intcon	equ	0xFF2
 18787                           intcon2	equ	0xFF1
 18788                           intcon3	equ	0xFF0
 18789                           postinc0	equ	0xFEE
 18790                           wreg	equ	0xFE8
 18791                           indf1	equ	0xFE7
 18792                           postinc1	equ	0xFE6
 18793                           postdec1	equ	0xFE5
 18794                           plusw1	equ	0xFE3
 18795                           fsr1h	equ	0xFE2
 18796                           fsr1l	equ	0xFE1
 18797                           indf2	equ	0xFDF
 18798                           postinc2	equ	0xFDE
 18799                           postdec2	equ	0xFDD
 18800                           plusw2	equ	0xFDB
 18801                           fsr2h	equ	0xFDA
 18802                           fsr2l	equ	0xFD9
 18803                           status	equ	0xFD8
 18804                           
 18805 ;; *************** function __i2c_not_acknowledge *****************
 18806 ;; Defined at:
 18807 ;;		line 87 in file "i2c.c"
 18808 ;; Parameters:    Size  Location     Type
 18809 ;;		None
 18810 ;; Auto vars:     Size  Location     Type
 18811 ;;		None
 18812 ;; Return value:  Size  Location     Type
 18813 ;;                  1    wreg      void 
 18814 ;; Registers used:
 18815 ;;		None
 18816 ;; Tracked objects:
 18817 ;;		On entry : 0/0
 18818 ;;		On exit  : 0/0
 18819 ;;		Unchanged: 0/0
 18820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18825 ;;Total ram usage:        0 bytes
 18826 ;; Hardware stack levels used:    1
 18827 ;; Hardware stack levels required when called:   10
 18828 ;; This function calls:
 18829 ;;		Nothing
 18830 ;; This function is called by:
 18831 ;;		__i2c_read
 18832 ;;		_i2c_adc_read
 18833 ;; This function uses a non-reentrant model
 18834 ;;
 18835                           
 18836                           	psect	text91
 18837  012EF8                     __ptext91:
 18838                           	opt stack 0
 18839  012EF8                     __i2c_not_acknowledge:
 18840                           	opt stack 15
 18841                           
 18842                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 18843                           
 18844                           ;incstack = 0
 18845  012EF8  8AC5               	bsf	4037,5,c	;volatile
 18846                           
 18847                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 18848  012EFA  88C5               	bsf	4037,4,c	;volatile
 18849  012EFC  A8C5               	btfss	4037,4,c	;volatile
 18850  012EFE  0012               	return	
 18851  012F00  D7FD               	goto	l1522
 18852  012F02                     __end_of__i2c_not_acknowledge:
 18853                           	opt stack 0
 18854                           tblptru	equ	0xFF8
 18855                           tblptrh	equ	0xFF7
 18856                           tblptrl	equ	0xFF6
 18857                           tablat	equ	0xFF5
 18858                           prodh	equ	0xFF4
 18859                           prodl	equ	0xFF3
 18860                           intcon	equ	0xFF2
 18861                           intcon2	equ	0xFF1
 18862                           intcon3	equ	0xFF0
 18863                           postinc0	equ	0xFEE
 18864                           wreg	equ	0xFE8
 18865                           indf1	equ	0xFE7
 18866                           postinc1	equ	0xFE6
 18867                           postdec1	equ	0xFE5
 18868                           plusw1	equ	0xFE3
 18869                           fsr1h	equ	0xFE2
 18870                           fsr1l	equ	0xFE1
 18871                           indf2	equ	0xFDF
 18872                           postinc2	equ	0xFDE
 18873                           postdec2	equ	0xFDD
 18874                           plusw2	equ	0xFDB
 18875                           fsr2h	equ	0xFDA
 18876                           fsr2l	equ	0xFD9
 18877                           status	equ	0xFD8
 18878                           
 18879 ;; *************** function __i2c_get *****************
 18880 ;; Defined at:
 18881 ;;		line 64 in file "i2c.c"
 18882 ;; Parameters:    Size  Location     Type
 18883 ;;		None
 18884 ;; Auto vars:     Size  Location     Type
 18885 ;;		None
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  1    wreg      unsigned char 
 18888 ;; Registers used:
 18889 ;;		wreg, status,2
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18899 ;;Total ram usage:        0 bytes
 18900 ;; Hardware stack levels used:    1
 18901 ;; Hardware stack levels required when called:   10
 18902 ;; This function calls:
 18903 ;;		Nothing
 18904 ;; This function is called by:
 18905 ;;		__i2c_read
 18906 ;;		_i2c_adc_read
 18907 ;; This function uses a non-reentrant model
 18908 ;;
 18909                           
 18910                           	psect	text92
 18911  012F02                     __ptext92:
 18912                           	opt stack 0
 18913  012F02                     __i2c_get:
 18914                           	opt stack 15
 18915                           
 18916                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 18917                           
 18918                           ;incstack = 0
 18919  012F02  86C5               	bsf	4037,3,c	;volatile
 18920  012F04  B6C5               	btfsc	4037,3,c	;volatile
 18921  012F06  D7FE               	goto	l1504
 18922                           
 18923                           ;i2c.c: 68: return SSP1BUF;
 18924  012F08  50C9               	movf	4041,w,c	;volatile
 18925  012F0A  0012               	return	
 18926  012F0C                     __end_of__i2c_get:
 18927                           	opt stack 0
 18928                           tblptru	equ	0xFF8
 18929                           tblptrh	equ	0xFF7
 18930                           tblptrl	equ	0xFF6
 18931                           tablat	equ	0xFF5
 18932                           prodh	equ	0xFF4
 18933                           prodl	equ	0xFF3
 18934                           intcon	equ	0xFF2
 18935                           intcon2	equ	0xFF1
 18936                           intcon3	equ	0xFF0
 18937                           postinc0	equ	0xFEE
 18938                           wreg	equ	0xFE8
 18939                           indf1	equ	0xFE7
 18940                           postinc1	equ	0xFE6
 18941                           postdec1	equ	0xFE5
 18942                           plusw1	equ	0xFE3
 18943                           fsr1h	equ	0xFE2
 18944                           fsr1l	equ	0xFE1
 18945                           indf2	equ	0xFDF
 18946                           postinc2	equ	0xFDE
 18947                           postdec2	equ	0xFDD
 18948                           plusw2	equ	0xFDB
 18949                           fsr2h	equ	0xFDA
 18950                           fsr2l	equ	0xFD9
 18951                           status	equ	0xFD8
 18952                           
 18953 ;; *************** function __i2c_acknowledge *****************
 18954 ;; Defined at:
 18955 ;;		line 79 in file "i2c.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;		None
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;		None
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      void 
 18962 ;; Registers used:
 18963 ;;		None
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18973 ;;Total ram usage:        0 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:   10
 18976 ;; This function calls:
 18977 ;;		Nothing
 18978 ;; This function is called by:
 18979 ;;		__i2c_read
 18980 ;;		_i2c_adc_read
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           	psect	text93
 18985  012F0C                     __ptext93:
 18986                           	opt stack 0
 18987  012F0C                     __i2c_acknowledge:
 18988                           	opt stack 15
 18989                           
 18990                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 18991                           
 18992                           ;incstack = 0
 18993  012F0C  9AC5               	bcf	4037,5,c	;volatile
 18994                           
 18995                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 18996  012F0E  88C5               	bsf	4037,4,c	;volatile
 18997  012F10  A8C5               	btfss	4037,4,c	;volatile
 18998  012F12  0012               	return	
 18999  012F14  D7FD               	goto	l1516
 19000  012F16                     __end_of__i2c_acknowledge:
 19001                           	opt stack 0
 19002                           tblptru	equ	0xFF8
 19003                           tblptrh	equ	0xFF7
 19004                           tblptrl	equ	0xFF6
 19005                           tablat	equ	0xFF5
 19006                           prodh	equ	0xFF4
 19007                           prodl	equ	0xFF3
 19008                           intcon	equ	0xFF2
 19009                           intcon2	equ	0xFF1
 19010                           intcon3	equ	0xFF0
 19011                           postinc0	equ	0xFEE
 19012                           wreg	equ	0xFE8
 19013                           indf1	equ	0xFE7
 19014                           postinc1	equ	0xFE6
 19015                           postdec1	equ	0xFE5
 19016                           plusw1	equ	0xFE3
 19017                           fsr1h	equ	0xFE2
 19018                           fsr1l	equ	0xFE1
 19019                           indf2	equ	0xFDF
 19020                           postinc2	equ	0xFDE
 19021                           postdec2	equ	0xFDD
 19022                           plusw2	equ	0xFDB
 19023                           fsr2h	equ	0xFDA
 19024                           fsr2l	equ	0xFD9
 19025                           status	equ	0xFD8
 19026                           
 19027 ;; *************** function _display_update *****************
 19028 ;; Defined at:
 19029 ;;		line 174 in file "display.c"
 19030 ;; Parameters:    Size  Location     Type
 19031 ;;		None
 19032 ;; Auto vars:     Size  Location     Type
 19033 ;;		None
 19034 ;; Return value:  Size  Location     Type
 19035 ;;                  1    wreg      void 
 19036 ;; Registers used:
 19037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19038 ;; Tracked objects:
 19039 ;;		On entry : 0/0
 19040 ;;		On exit  : 0/0
 19041 ;;		Unchanged: 0/0
 19042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19047 ;;Total ram usage:        0 bytes
 19048 ;; Hardware stack levels used:    1
 19049 ;; Hardware stack levels required when called:   14
 19050 ;; This function calls:
 19051 ;;		_i2c_display_cursor
 19052 ;;		_i2c_display_write_fixed
 19053 ;; This function is called by:
 19054 ;;		_main
 19055 ;; This function uses a non-reentrant model
 19056 ;;
 19057                           
 19058                           	psect	text94
 19059  010F0C                     __ptext94:
 19060                           	opt stack 0
 19061  010F0C                     _display_update:
 19062                           	opt stack 16
 19063                           
 19064                           ;display.c: 176: i2c_display_cursor(0, 0);
 19065                           
 19066                           ;incstack = 0
 19067  010F0C  0E00               	movlw	0
 19068  010F0E  0100               	movlb	0	; () banked
 19069  010F10  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19070  010F12  0E00               	movlw	0
 19071  010F14  EC5A  F094         	call	_i2c_display_cursor
 19072                           
 19073                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 19074  010F18  0E54               	movlw	low _display_content
 19075  010F1A  0100               	movlb	0	; () banked
 19076  010F1C  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19077  010F1E  0E03               	movlw	high _display_content
 19078  010F20  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19079  010F22  0E14               	movlw	20
 19080  010F24  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19081  010F26  ECFF  F08C         	call	_i2c_display_write_fixed	;wreg free
 19082                           
 19083                           ;display.c: 178: i2c_display_cursor(1, 0);
 19084  010F2A  0E00               	movlw	0
 19085  010F2C  0100               	movlb	0	; () banked
 19086  010F2E  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19087  010F30  0E01               	movlw	1
 19088  010F32  EC5A  F094         	call	_i2c_display_cursor
 19089                           
 19090                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 19091  010F36  0E68               	movlw	low (_display_content+20)
 19092  010F38  0100               	movlb	0	; () banked
 19093  010F3A  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19094  010F3C  0E03               	movlw	high (_display_content+20)
 19095  010F3E  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19096  010F40  0E14               	movlw	20
 19097  010F42  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19098  010F44  ECFF  F08C         	call	_i2c_display_write_fixed	;wreg free
 19099                           
 19100                           ;display.c: 180: i2c_display_cursor(2, 0);
 19101  010F48  0E00               	movlw	0
 19102  010F4A  0100               	movlb	0	; () banked
 19103  010F4C  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19104  010F4E  0E02               	movlw	2
 19105  010F50  EC5A  F094         	call	_i2c_display_cursor
 19106                           
 19107                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 19108  010F54  0E7C               	movlw	low (_display_content+40)
 19109  010F56  0100               	movlb	0	; () banked
 19110  010F58  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19111  010F5A  0E03               	movlw	high (_display_content+40)
 19112  010F5C  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19113  010F5E  0E14               	movlw	20
 19114  010F60  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19115  010F62  ECFF  F08C         	call	_i2c_display_write_fixed	;wreg free
 19116                           
 19117                           ;display.c: 182: i2c_display_cursor(3, 0);
 19118  010F66  0E00               	movlw	0
 19119  010F68  0100               	movlb	0	; () banked
 19120  010F6A  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19121  010F6C  0E03               	movlw	3
 19122  010F6E  EC5A  F094         	call	_i2c_display_cursor
 19123                           
 19124                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 19125  010F72  0E90               	movlw	low (_display_content+60)
 19126  010F74  0100               	movlb	0	; () banked
 19127  010F76  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19128  010F78  0E03               	movlw	high (_display_content+60)
 19129  010F7A  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19130  010F7C  0E14               	movlw	20
 19131  010F7E  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19132  010F80  ECFF  F08C         	call	_i2c_display_write_fixed	;wreg free
 19133  010F84  0012               	return		;funcret
 19134  010F86                     __end_of_display_update:
 19135                           	opt stack 0
 19136                           tblptru	equ	0xFF8
 19137                           tblptrh	equ	0xFF7
 19138                           tblptrl	equ	0xFF6
 19139                           tablat	equ	0xFF5
 19140                           prodh	equ	0xFF4
 19141                           prodl	equ	0xFF3
 19142                           intcon	equ	0xFF2
 19143                           intcon2	equ	0xFF1
 19144                           intcon3	equ	0xFF0
 19145                           postinc0	equ	0xFEE
 19146                           wreg	equ	0xFE8
 19147                           indf1	equ	0xFE7
 19148                           postinc1	equ	0xFE6
 19149                           postdec1	equ	0xFE5
 19150                           plusw1	equ	0xFE3
 19151                           fsr1h	equ	0xFE2
 19152                           fsr1l	equ	0xFE1
 19153                           indf2	equ	0xFDF
 19154                           postinc2	equ	0xFDE
 19155                           postdec2	equ	0xFDD
 19156                           plusw2	equ	0xFDB
 19157                           fsr2h	equ	0xFDA
 19158                           fsr2l	equ	0xFD9
 19159                           status	equ	0xFD8
 19160                           
 19161 ;; *************** function _i2c_display_write_fixed *****************
 19162 ;; Defined at:
 19163 ;;		line 364 in file "i2c.c"
 19164 ;; Parameters:    Size  Location     Type
 19165 ;;  data            2    5[BANK0 ] PTR unsigned char 
 19166 ;;		 -> display_content(80), 
 19167 ;;  length          1    7[BANK0 ] unsigned char 
 19168 ;; Auto vars:     Size  Location     Type
 19169 ;;  pos             1    8[BANK0 ] unsigned char 
 19170 ;; Return value:  Size  Location     Type
 19171 ;;                  1    wreg      void 
 19172 ;; Registers used:
 19173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19174 ;; Tracked objects:
 19175 ;;		On entry : 0/0
 19176 ;;		On exit  : 0/0
 19177 ;;		Unchanged: 0/0
 19178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19179 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19182 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19183 ;;Total ram usage:        4 bytes
 19184 ;; Hardware stack levels used:    1
 19185 ;; Hardware stack levels required when called:   11
 19186 ;; This function calls:
 19187 ;;		__i2c_send
 19188 ;;		__i2c_start
 19189 ;;		__i2c_stop
 19190 ;;		__i2c_wait_idle
 19191 ;;		_i2c_set_frequency
 19192 ;; This function is called by:
 19193 ;;		_display_update
 19194 ;; This function uses a non-reentrant model
 19195 ;;
 19196                           
 19197                           	psect	text95
 19198  0119FE                     __ptext95:
 19199                           	opt stack 0
 19200  0119FE                     _i2c_display_write_fixed:
 19201                           	opt stack 18
 19202                           
 19203                           ;i2c.c: 366: uint8_t pos;
 19204                           ;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19205                           
 19206                           ;incstack = 0
 19207  0119FE  0E00               	movlw	0
 19208  011A00  ECB0  F088         	call	_i2c_set_frequency
 19209                           
 19210                           ;i2c.c: 371: _i2c_wait_idle();
 19211  011A04  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 19212                           
 19213                           ;i2c.c: 372: _i2c_start();
 19214  011A08  EC99  F097         	call	__i2c_start	;wreg free
 19215                           
 19216                           ;i2c.c: 373: _i2c_wait_idle();
 19217  011A0C  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 19218                           
 19219                           ;i2c.c: 374: _i2c_send(0b01111000);
 19220  011A10  0E78               	movlw	120
 19221  011A12  EC90  F097         	call	__i2c_send
 19222                           
 19223                           ;i2c.c: 375: _i2c_wait_idle();
 19224  011A16  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 19225                           
 19226                           ;i2c.c: 376: _i2c_send(0b01000000);
 19227  011A1A  0E40               	movlw	64
 19228  011A1C  EC90  F097         	call	__i2c_send
 19229                           
 19230                           ;i2c.c: 377: _i2c_wait_idle();
 19231  011A20  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 19232                           
 19233                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 19234  011A24  0E00               	movlw	0
 19235  011A26  0100               	movlb	0	; () banked
 19236  011A28  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 19237  011A2A  D00F               	goto	l1585
 19238  011A2C                     
 19239                           ; BSR set to: 0
 19240                           ;i2c.c: 381: {
 19241                           ;i2c.c: 382: _i2c_send(data[pos]);
 19242                           
 19243                           ; BSR set to: 0
 19244  011A2C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 19245  011A2E  0D01               	mullw	1
 19246  011A30  50F3               	movf	prodl,w,c
 19247  011A32  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 19248  011A34  6ED9               	movwf	fsr2l,c
 19249  011A36  50F4               	movf	prodh,w,c
 19250  011A38  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 19251  011A3A  6EDA               	movwf	fsr2h,c
 19252  011A3C  50DF               	movf	indf2,w,c
 19253  011A3E  EC90  F097         	call	__i2c_send
 19254                           
 19255                           ;i2c.c: 383: _i2c_wait_idle();
 19256  011A42  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 19257  011A46  0100               	movlb	0	; () banked
 19258  011A48  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 19259  011A4A                     l1585:
 19260                           
 19261                           ; BSR set to: 0
 19262                           
 19263                           ; BSR set to: 0
 19264  011A4A  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 19265  011A4C  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 19266  011A4E  A0D8               	btfss	status,0,c
 19267  011A50  D7ED               	goto	l1586
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;i2c.c: 384: }
 19271                           ;i2c.c: 386: _i2c_stop();
 19272                           
 19273                           ; BSR set to: 0
 19274  011A52  EC95  F097         	call	__i2c_stop	;wreg free
 19275  011A56  0012               	return		;funcret
 19276  011A58                     __end_of_i2c_display_write_fixed:
 19277                           	opt stack 0
 19278                           tblptru	equ	0xFF8
 19279                           tblptrh	equ	0xFF7
 19280                           tblptrl	equ	0xFF6
 19281                           tablat	equ	0xFF5
 19282                           prodh	equ	0xFF4
 19283                           prodl	equ	0xFF3
 19284                           intcon	equ	0xFF2
 19285                           intcon2	equ	0xFF1
 19286                           intcon3	equ	0xFF0
 19287                           postinc0	equ	0xFEE
 19288                           wreg	equ	0xFE8
 19289                           indf1	equ	0xFE7
 19290                           postinc1	equ	0xFE6
 19291                           postdec1	equ	0xFE5
 19292                           plusw1	equ	0xFE3
 19293                           fsr1h	equ	0xFE2
 19294                           fsr1l	equ	0xFE1
 19295                           indf2	equ	0xFDF
 19296                           postinc2	equ	0xFDE
 19297                           postdec2	equ	0xFDD
 19298                           plusw2	equ	0xFDB
 19299                           fsr2h	equ	0xFDA
 19300                           fsr2l	equ	0xFD9
 19301                           status	equ	0xFD8
 19302                           
 19303 ;; *************** function _i2c_display_cursor *****************
 19304 ;; Defined at:
 19305 ;;		line 324 in file "i2c.c"
 19306 ;; Parameters:    Size  Location     Type
 19307 ;;  line            1    wreg     unsigned char 
 19308 ;;  position        1   13[BANK0 ] unsigned char 
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;  line            1   14[BANK0 ] unsigned char 
 19311 ;;  address         1   15[BANK0 ] unsigned char 
 19312 ;; Return value:  Size  Location     Type
 19313 ;;                  1    wreg      void 
 19314 ;; Registers used:
 19315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19316 ;; Tracked objects:
 19317 ;;		On entry : 0/0
 19318 ;;		On exit  : 0/0
 19319 ;;		Unchanged: 0/0
 19320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19321 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19324 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19325 ;;Total ram usage:        3 bytes
 19326 ;; Hardware stack levels used:    1
 19327 ;; Hardware stack levels required when called:   13
 19328 ;; This function calls:
 19329 ;;		__ic2_display_set_address
 19330 ;;		_i2c_set_frequency
 19331 ;; This function is called by:
 19332 ;;		_display_update
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text96
 19337  0128B4                     __ptext96:
 19338                           	opt stack 0
 19339  0128B4                     _i2c_display_cursor:
 19340                           	opt stack 16
 19341                           
 19342                           ;incstack = 0
 19343                           ;i2c_display_cursor@line stored from wreg
 19344  0128B4  0100               	movlb	0	; () banked
 19345  0128B6  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 19346                           
 19347                           ;i2c.c: 326: uint8_t address;
 19348                           ;i2c.c: 329: line &= 0b11;
 19349  0128B8  0E03               	movlw	3
 19350  0128BA  0100               	movlb	0	; () banked
 19351  0128BC  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 19352                           
 19353                           ;i2c.c: 330: address = line<<5;
 19354  0128BE  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 19355  0128C0  46E8               	rlncf	wreg,f,c
 19356  0128C2  0BE0               	andlw	224
 19357  0128C4  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 19358                           
 19359                           ;i2c.c: 331: position &= 0b11111;
 19360  0128C6  0E1F               	movlw	31
 19361  0128C8  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 19362                           
 19363                           ;i2c.c: 332: address |= position;
 19364  0128CA  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 19365  0128CC  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 19366                           
 19367                           ; BSR set to: 0
 19368                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19369  0128CE  0E00               	movlw	0
 19370  0128D0  ECB0  F088         	call	_i2c_set_frequency
 19371                           
 19372                           ;i2c.c: 338: _ic2_display_set_address(address);
 19373  0128D4  0100               	movlb	0	; () banked
 19374  0128D6  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 19375  0128D8  EC19  F094         	call	__ic2_display_set_address
 19376  0128DC  0012               	return		;funcret
 19377  0128DE                     __end_of_i2c_display_cursor:
 19378                           	opt stack 0
 19379                           tblptru	equ	0xFF8
 19380                           tblptrh	equ	0xFF7
 19381                           tblptrl	equ	0xFF6
 19382                           tablat	equ	0xFF5
 19383                           prodh	equ	0xFF4
 19384                           prodl	equ	0xFF3
 19385                           intcon	equ	0xFF2
 19386                           intcon2	equ	0xFF1
 19387                           intcon3	equ	0xFF0
 19388                           postinc0	equ	0xFEE
 19389                           wreg	equ	0xFE8
 19390                           indf1	equ	0xFE7
 19391                           postinc1	equ	0xFE6
 19392                           postdec1	equ	0xFE5
 19393                           plusw1	equ	0xFE3
 19394                           fsr1h	equ	0xFE2
 19395                           fsr1l	equ	0xFE1
 19396                           indf2	equ	0xFDF
 19397                           postinc2	equ	0xFDE
 19398                           postdec2	equ	0xFDD
 19399                           plusw2	equ	0xFDB
 19400                           fsr2h	equ	0xFDA
 19401                           fsr2l	equ	0xFD9
 19402                           status	equ	0xFD8
 19403                           
 19404 ;; *************** function __ic2_display_set_address *****************
 19405 ;; Defined at:
 19406 ;;		line 311 in file "i2c.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;  address         1    wreg     unsigned char 
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;  address         1   10[BANK0 ] unsigned char 
 19411 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  1    wreg      void 
 19414 ;; Registers used:
 19415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19416 ;; Tracked objects:
 19417 ;;		On entry : 0/0
 19418 ;;		On exit  : 0/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19424 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19425 ;;Total ram usage:        3 bytes
 19426 ;; Hardware stack levels used:    1
 19427 ;; Hardware stack levels required when called:   12
 19428 ;; This function calls:
 19429 ;;		__i2c_write
 19430 ;;		_i2c_set_frequency
 19431 ;; This function is called by:
 19432 ;;		_i2c_display_cursor
 19433 ;; This function uses a non-reentrant model
 19434 ;;
 19435                           
 19436                           	psect	text97
 19437  012832                     __ptext97:
 19438                           	opt stack 0
 19439  012832                     __ic2_display_set_address:
 19440                           	opt stack 16
 19441                           
 19442                           ;incstack = 0
 19443                           ;__ic2_display_set_address@address stored from wreg
 19444  012832  0100               	movlb	0	; () banked
 19445  012834  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 19446                           
 19447                           ;i2c.c: 313: uint8_t data_array[2];
 19448                           ;i2c.c: 314: data_array[0] = 0b00000000;
 19449  012836  0E00               	movlw	0
 19450  012838  0100               	movlb	0	; () banked
 19451  01283A  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 19455  01283C  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 19456  01283E  0980               	iorlw	128
 19457  012840  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19461  012842  0E00               	movlw	0
 19462  012844  ECB0  F088         	call	_i2c_set_frequency
 19463                           
 19464                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 19465  012848  0E6B               	movlw	low __ic2_display_set_address@data_array
 19466  01284A  0100               	movlb	0	; () banked
 19467  01284C  6F65               	movwf	__i2c_write@data& (0+255),b
 19468  01284E  0E00               	movlw	high __ic2_display_set_address@data_array
 19469  012850  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19470  012852  0E02               	movlw	2
 19471  012854  6F67               	movwf	__i2c_write@length& (0+255),b
 19472  012856  0E78               	movlw	120
 19473  012858  EC55  F08F         	call	__i2c_write
 19474  01285C  0012               	return		;funcret
 19475  01285E                     __end_of__ic2_display_set_address:
 19476                           	opt stack 0
 19477                           tblptru	equ	0xFF8
 19478                           tblptrh	equ	0xFF7
 19479                           tblptrl	equ	0xFF6
 19480                           tablat	equ	0xFF5
 19481                           prodh	equ	0xFF4
 19482                           prodl	equ	0xFF3
 19483                           intcon	equ	0xFF2
 19484                           intcon2	equ	0xFF1
 19485                           intcon3	equ	0xFF0
 19486                           postinc0	equ	0xFEE
 19487                           wreg	equ	0xFE8
 19488                           indf1	equ	0xFE7
 19489                           postinc1	equ	0xFE6
 19490                           postdec1	equ	0xFE5
 19491                           plusw1	equ	0xFE3
 19492                           fsr1h	equ	0xFE2
 19493                           fsr1l	equ	0xFE1
 19494                           indf2	equ	0xFDF
 19495                           postinc2	equ	0xFDE
 19496                           postdec2	equ	0xFDD
 19497                           plusw2	equ	0xFDB
 19498                           fsr2h	equ	0xFDA
 19499                           fsr2l	equ	0xFD9
 19500                           status	equ	0xFD8
 19501                           
 19502 ;; *************** function _display_prepare *****************
 19503 ;; Defined at:
 19504 ;;		line 108 in file "display.c"
 19505 ;; Parameters:    Size  Location     Type
 19506 ;;  mode            1    wreg     unsigned char 
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;  mode            1  116[BANK0 ] unsigned char 
 19509 ;; Return value:  Size  Location     Type
 19510 ;;                  1    wreg      void 
 19511 ;; Registers used:
 19512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19513 ;; Tracked objects:
 19514 ;;		On entry : 0/0
 19515 ;;		On exit  : 0/0
 19516 ;;		Unchanged: 0/0
 19517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19519 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19520 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19521 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19522 ;;Total ram usage:        3 bytes
 19523 ;; Hardware stack levels used:    1
 19524 ;; Hardware stack levels required when called:   15
 19525 ;; This function calls:
 19526 ;;		__display_charger
 19527 ;;		__display_clear
 19528 ;;		__display_efficiency
 19529 ;;		__display_inout
 19530 ;;		__display_outputs
 19531 ;;		__display_temperature
 19532 ;;		__display_time
 19533 ;;		__display_usb
 19534 ;; This function is called by:
 19535 ;;		_main
 19536 ;; This function uses a non-reentrant model
 19537 ;;
 19538                           
 19539                           	psect	text98
 19540  010B96                     __ptext98:
 19541                           	opt stack 0
 19542  010B96                     _display_prepare:
 19543                           	opt stack 15
 19544                           
 19545                           ;incstack = 0
 19546                           ;display_prepare@mode stored from wreg
 19547  010B96  0100               	movlb	0	; () banked
 19548  010B98  6FD4               	movwf	display_prepare@mode& (0+255),b
 19549                           
 19550                           ;display.c: 110: _display_clear();
 19551  010B9A  EC41  F090         	call	__display_clear	;wreg free
 19552                           
 19553                           ;display.c: 112: switch(mode&0xF0)
 19554  010B9E  D01C               	goto	l1935
 19555  010BA0                     
 19556                           ;display.c: 115: _display_inout();
 19557  010BA0  ECBF  F066         	call	__display_inout	;wreg free
 19558                           
 19559                           ;display.c: 116: break;
 19560  010BA4  0012               	return	
 19561  010BA6                     
 19562                           ;display.c: 118: _display_time(mode);
 19563  010BA6  0100               	movlb	0	; () banked
 19564  010BA8  51D4               	movf	display_prepare@mode& (0+255),w,b
 19565  010BAA  EC43  F04A         	call	__display_time
 19566                           
 19567                           ;display.c: 119: break;
 19568  010BAE  0012               	return	
 19569  010BB0                     
 19570                           ;display.c: 121: _display_usb();
 19571  010BB0  EC64  F06A         	call	__display_usb	;wreg free
 19572                           
 19573                           ;display.c: 122: break;
 19574  010BB4  0012               	return	
 19575  010BB6                     
 19576                           ;display.c: 124: _display_outputs(mode);
 19577  010BB6  0100               	movlb	0	; () banked
 19578  010BB8  51D4               	movf	display_prepare@mode& (0+255),w,b
 19579  010BBA  ECAB  F064         	call	__display_outputs
 19580                           
 19581                           ;display.c: 125: break;
 19582  010BBE  0012               	return	
 19583  010BC0                     
 19584                           ;display.c: 127: _display_charger();
 19585  010BC0  ECC3  F05B         	call	__display_charger	;wreg free
 19586                           
 19587                           ;display.c: 128: break;
 19588  010BC4  0012               	return	
 19589  010BC6                     
 19590                           ;display.c: 130: _display_efficiency();
 19591  010BC6  EC98  F058         	call	__display_efficiency	;wreg free
 19592                           
 19593                           ;display.c: 131: break;
 19594  010BCA  0012               	return	
 19595  010BCC                     
 19596                           ;display.c: 133: _display_temperature();
 19597  010BCC  ECA5  F068         	call	__display_temperature	;wreg free
 19598                           
 19599                           ;display.c: 134: break;
 19600  010BD0  0012               	return	
 19601  010BD2                     
 19602                           ;display.c: 136: _display_inout();
 19603  010BD2  ECBF  F066         	call	__display_inout	;wreg free
 19604                           
 19605                           ;display.c: 137: }
 19606  010BD6  0012               	return	
 19607  010BD8                     l1935:
 19608  010BD8  0100               	movlb	0	; () banked
 19609  010BDA  51D4               	movf	display_prepare@mode& (0+255),w,b
 19610  010BDC  0BF0               	andlw	240
 19611  010BDE  6FD2               	movwf	??_display_prepare& (0+255),b
 19612  010BE0  6BD3               	clrf	(??_display_prepare+1)& (0+255),b
 19613                           
 19614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19615                           ; Switch size 1, requested type "space"
 19616                           ; Number of cases is 1, Range of values is 0 to 0
 19617                           ; switch strategies available:
 19618                           ; Name         Instructions Cycles
 19619                           ; simple_byte            4     3 (average)
 19620                           ;	Chosen strategy is simple_byte
 19621  010BE2  51D3               	movf	(??_display_prepare+1)& (0+255),w,b
 19622  010BE4  0A00               	xorlw	0	; case 0
 19623  010BE6  A4D8               	btfss	status,2,c
 19624  010BE8  D7F4               	goto	l1944
 19625                           
 19626                           ; BSR set to: 0
 19627                           ; Switch size 1, requested type "space"
 19628                           ; Number of cases is 7, Range of values is 0 to 96
 19629                           ; switch strategies available:
 19630                           ; Name         Instructions Cycles
 19631                           ; simple_byte           22    12 (average)
 19632                           ;	Chosen strategy is simple_byte
 19633  010BEA  51D2               	movf	??_display_prepare& (0+255),w,b
 19634  010BEC  0A00               	xorlw	0	; case 0
 19635  010BEE  B4D8               	btfsc	status,2,c
 19636  010BF0  D7D7               	goto	l1936
 19637  010BF2  0A10               	xorlw	16	; case 16
 19638  010BF4  B4D8               	btfsc	status,2,c
 19639  010BF6  D7D7               	goto	l1938
 19640  010BF8  0A30               	xorlw	48	; case 32
 19641  010BFA  B4D8               	btfsc	status,2,c
 19642  010BFC  D7D9               	goto	l1939
 19643  010BFE  0A10               	xorlw	16	; case 48
 19644  010C00  B4D8               	btfsc	status,2,c
 19645  010C02  D7D9               	goto	l1940
 19646  010C04  0A70               	xorlw	112	; case 64
 19647  010C06  B4D8               	btfsc	status,2,c
 19648  010C08  D7DB               	goto	l1941
 19649  010C0A  0A10               	xorlw	16	; case 80
 19650  010C0C  B4D8               	btfsc	status,2,c
 19651  010C0E  D7DB               	goto	l1942
 19652  010C10  0A30               	xorlw	48	; case 96
 19653  010C12  B4D8               	btfsc	status,2,c
 19654  010C14  D7DB               	goto	l1943
 19655  010C16  D7DD               	goto	l1944
 19656  010C18                     __end_of_display_prepare:
 19657                           	opt stack 0
 19658                           tblptru	equ	0xFF8
 19659                           tblptrh	equ	0xFF7
 19660                           tblptrl	equ	0xFF6
 19661                           tablat	equ	0xFF5
 19662                           prodh	equ	0xFF4
 19663                           prodl	equ	0xFF3
 19664                           intcon	equ	0xFF2
 19665                           intcon2	equ	0xFF1
 19666                           intcon3	equ	0xFF0
 19667                           postinc0	equ	0xFEE
 19668                           wreg	equ	0xFE8
 19669                           indf1	equ	0xFE7
 19670                           postinc1	equ	0xFE6
 19671                           postdec1	equ	0xFE5
 19672                           plusw1	equ	0xFE3
 19673                           fsr1h	equ	0xFE2
 19674                           fsr1l	equ	0xFE1
 19675                           indf2	equ	0xFDF
 19676                           postinc2	equ	0xFDE
 19677                           postdec2	equ	0xFDD
 19678                           plusw2	equ	0xFDB
 19679                           fsr2h	equ	0xFDA
 19680                           fsr2l	equ	0xFD9
 19681                           status	equ	0xFD8
 19682                           
 19683 ;; *************** function __display_usb *****************
 19684 ;; Defined at:
 19685 ;;		line 303 in file "display.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;		None
 19688 ;; Auto vars:     Size  Location     Type
 19689 ;;  header         20    0[BANK0 ] const unsigned char [20]
 19690 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 19691 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 19692 ;;  low            16   37[BANK0 ] const unsigned char [16]
 19693 ;;  cntr            1   69[BANK0 ] unsigned char 
 19694 ;; Return value:  Size  Location     Type
 19695 ;;                  1    wreg      void 
 19696 ;; Registers used:
 19697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19698 ;; Tracked objects:
 19699 ;;		On entry : 0/0
 19700 ;;		On exit  : 0/0
 19701 ;;		Unchanged: 0/0
 19702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19704 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19706 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19707 ;;Total ram usage:       70 bytes
 19708 ;; Hardware stack levels used:    1
 19709 ;; Hardware stack levels required when called:   10
 19710 ;; This function calls:
 19711 ;;		Nothing
 19712 ;; This function is called by:
 19713 ;;		_display_prepare
 19714 ;; This function uses a non-reentrant model
 19715 ;;
 19716                           
 19717                           	psect	text99
 19718  00D4C8                     __ptext99:
 19719                           	opt stack 0
 19720  00D4C8                     __display_usb:
 19721                           	opt stack 19
 19722                           
 19723                           ;display.c: 305: uint8_t cntr;
 19724                           ;display.c: 306: const char header[] = "USB Charger Outputs";
 19725                           
 19726                           ;incstack = 0
 19727  00D4C8  0E27               	movlw	low __display_usb@F8718
 19728  00D4CA  6EF6               	movwf	tblptrl,c
 19729  00D4CC                     	if	1	;There is more than 1 active tblptr byte
 19730  00D4CC  0E91               	movlw	high __display_usb@F8718
 19731  00D4CE  6EF7               	movwf	tblptrh,c
 19732  00D4D0                     	endif
 19733  00D4D0                     	if	1	;There are 3 active tblptr bytes
 19734  00D4D0  0E00               	movlw	low (__display_usb@F8718 shr (0+16))
 19735  00D4D2  6EF8               	movwf	tblptru,c
 19736  00D4D4                     	endif
 19737  00D4D4  EE20  F060         	lfsr	2,__display_usb@header
 19738  00D4D8  0E13               	movlw	19
 19739  00D4DA                     u13680:
 19740  00D4DA  0009               	tblrd		*+
 19741  00D4DC  CFF5 FFDE          	movff	tablat,postinc2
 19742  00D4E0  06E8               	decf	wreg,f,c
 19743  00D4E2  E2FB               	bc	u13680
 19744                           
 19745                           ;display.c: 307: const char low[] = "Battery too low";
 19746  00D4E4  0E4B               	movlw	low __display_usb@F8720
 19747  00D4E6  6EF6               	movwf	tblptrl,c
 19748  00D4E8                     	if	1	;There is more than 1 active tblptr byte
 19749  00D4E8  0E92               	movlw	high __display_usb@F8720
 19750  00D4EA  6EF7               	movwf	tblptrh,c
 19751  00D4EC                     	endif
 19752  00D4EC                     	if	1	;There are 3 active tblptr bytes
 19753  00D4EC  0E00               	movlw	low (__display_usb@F8720 shr (0+16))
 19754  00D4EE  6EF8               	movwf	tblptru,c
 19755  00D4F0                     	endif
 19756  00D4F0  EE20  F085         	lfsr	2,__display_usb@low
 19757  00D4F4  0E0F               	movlw	15
 19758  00D4F6                     u13690:
 19759  00D4F6  0009               	tblrd		*+
 19760  00D4F8  CFF5 FFDE          	movff	tablat,postinc2
 19761  00D4FC  06E8               	decf	wreg,f,c
 19762  00D4FE  E2FB               	bc	u13690
 19763                           
 19764                           ;display.c: 308: const char usb_on[] = "USB charging on";
 19765  00D500  0E3B               	movlw	low __display_usb@F8722
 19766  00D502  6EF6               	movwf	tblptrl,c
 19767  00D504                     	if	1	;There is more than 1 active tblptr byte
 19768  00D504  0E92               	movlw	high __display_usb@F8722
 19769  00D506  6EF7               	movwf	tblptrh,c
 19770  00D508                     	endif
 19771  00D508                     	if	1	;There are 3 active tblptr bytes
 19772  00D508  0E00               	movlw	low (__display_usb@F8722 shr (0+16))
 19773  00D50A  6EF8               	movwf	tblptru,c
 19774  00D50C                     	endif
 19775  00D50C  EE20  F095         	lfsr	2,__display_usb@usb_on
 19776  00D510  0E0F               	movlw	15
 19777  00D512                     u13700:
 19778  00D512  0009               	tblrd		*+
 19779  00D514  CFF5 FFDE          	movff	tablat,postinc2
 19780  00D518  06E8               	decf	wreg,f,c
 19781  00D51A  E2FB               	bc	u13700
 19782                           
 19783                           ;display.c: 309: const char usb_off[] = "USB charging off";
 19784  00D51C  0E0A               	movlw	low __display_usb@F8724
 19785  00D51E  6EF6               	movwf	tblptrl,c
 19786  00D520                     	if	1	;There is more than 1 active tblptr byte
 19787  00D520  0E92               	movlw	high __display_usb@F8724
 19788  00D522  6EF7               	movwf	tblptrh,c
 19789  00D524                     	endif
 19790  00D524                     	if	1	;There are 3 active tblptr bytes
 19791  00D524  0E00               	movlw	low (__display_usb@F8724 shr (0+16))
 19792  00D526  6EF8               	movwf	tblptru,c
 19793  00D528                     	endif
 19794  00D528  EE20  F074         	lfsr	2,__display_usb@usb_off
 19795  00D52C  0E10               	movlw	16
 19796  00D52E                     u13710:
 19797  00D52E  0009               	tblrd		*+
 19798  00D530  CFF5 FFDE          	movff	tablat,postinc2
 19799  00D534  06E8               	decf	wreg,f,c
 19800  00D536  E2FB               	bc	u13710
 19801                           
 19802                           ;display.c: 312: cntr = 0;
 19803  00D538  0E00               	movlw	0
 19804  00D53A  0100               	movlb	0	; () banked
 19805  00D53C  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19806                           
 19807                           ;display.c: 313: while(header[cntr])
 19808  00D53E  D013               	goto	l2067
 19809  00D540                     
 19810                           ; BSR set to: 0
 19811                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 19812                           
 19813                           ; BSR set to: 0
 19814  00D540  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19815  00D542  0D01               	mullw	1
 19816  00D544  0E60               	movlw	low __display_usb@header
 19817  00D546  24F3               	addwf	prodl,w,c
 19818  00D548  6ED9               	movwf	fsr2l,c
 19819  00D54A  0E00               	movlw	high __display_usb@header
 19820  00D54C  20F4               	addwfc	prodh,w,c
 19821  00D54E  6EDA               	movwf	fsr2h,c
 19822  00D550  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19823  00D552  0D01               	mullw	1
 19824  00D554  0E54               	movlw	low _display_content
 19825  00D556  24F3               	addwf	prodl,w,c
 19826  00D558  6EE1               	movwf	fsr1l,c
 19827  00D55A  0E03               	movlw	high _display_content
 19828  00D55C  20F4               	addwfc	prodh,w,c
 19829  00D55E  6EE2               	movwf	fsr1h,c
 19830  00D560  CFDF FFE7          	movff	indf2,indf1
 19831                           
 19832                           ; BSR set to: 0
 19833  00D564  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19834  00D566                     l2067:
 19835                           
 19836                           ; BSR set to: 0
 19837                           
 19838                           ; BSR set to: 0
 19839  00D566  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19840  00D568  0D01               	mullw	1
 19841  00D56A  0E60               	movlw	low __display_usb@header
 19842  00D56C  24F3               	addwf	prodl,w,c
 19843  00D56E  6ED9               	movwf	fsr2l,c
 19844  00D570  0E00               	movlw	high __display_usb@header
 19845  00D572  20F4               	addwfc	prodh,w,c
 19846  00D574  6EDA               	movwf	fsr2h,c
 19847  00D576  50DF               	movf	indf2,w,c
 19848  00D578  A4D8               	btfss	status,2,c
 19849  00D57A  D7E2               	goto	l2068
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;display.c: 316: if(os.output_voltage<12000)
 19853                           
 19854                           ; BSR set to: 0
 19855  00D57C  0102               	movlb	2	; () banked
 19856  00D57E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 19857  00D580  D006               	goto	u13730
 19858  00D582  0EE0               	movlw	224
 19859  00D584  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 19860  00D586  0E2E               	movlw	46
 19861  00D588  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 19862  00D58A  B0D8               	btfsc	status,0,c
 19863  00D58C  D022               	goto	u13740
 19864  00D58E                     u13730:
 19865                           
 19866                           ; BSR set to: 2
 19867                           ;display.c: 317: {
 19868                           ;display.c: 318: cntr = 0;
 19869  00D58E  0E00               	movlw	0
 19870  00D590  0100               	movlb	0	; () banked
 19871  00D592  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19872                           
 19873                           ;display.c: 319: while(low[cntr])
 19874  00D594  D013               	goto	l2071
 19875  00D596                     
 19876                           ; BSR set to: 0
 19877                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 19878                           
 19879                           ; BSR set to: 0
 19880  00D596  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19881  00D598  0D01               	mullw	1
 19882  00D59A  0E85               	movlw	low __display_usb@low
 19883  00D59C  24F3               	addwf	prodl,w,c
 19884  00D59E  6ED9               	movwf	fsr2l,c
 19885  00D5A0  0E00               	movlw	high __display_usb@low
 19886  00D5A2  20F4               	addwfc	prodh,w,c
 19887  00D5A4  6EDA               	movwf	fsr2h,c
 19888  00D5A6  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19889  00D5A8  0D01               	mullw	1
 19890  00D5AA  0E7C               	movlw	low (_display_content+40)
 19891  00D5AC  24F3               	addwf	prodl,w,c
 19892  00D5AE  6EE1               	movwf	fsr1l,c
 19893  00D5B0  0E03               	movlw	high (_display_content+40)
 19894  00D5B2  20F4               	addwfc	prodh,w,c
 19895  00D5B4  6EE2               	movwf	fsr1h,c
 19896  00D5B6  CFDF FFE7          	movff	indf2,indf1
 19897                           
 19898                           ; BSR set to: 0
 19899  00D5BA  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19900  00D5BC                     l2071:
 19901                           
 19902                           ; BSR set to: 0
 19903                           
 19904                           ; BSR set to: 0
 19905  00D5BC  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19906  00D5BE  0D01               	mullw	1
 19907  00D5C0  0E85               	movlw	low __display_usb@low
 19908  00D5C2  24F3               	addwf	prodl,w,c
 19909  00D5C4  6ED9               	movwf	fsr2l,c
 19910  00D5C6  0E00               	movlw	high __display_usb@low
 19911  00D5C8  20F4               	addwfc	prodh,w,c
 19912  00D5CA  6EDA               	movwf	fsr2h,c
 19913  00D5CC  50DF               	movf	indf2,w,c
 19914  00D5CE  A4D8               	btfss	status,2,c
 19915  00D5D0  D7E2               	goto	l2072
 19916  00D5D2                     u13740:
 19917                           
 19918                           ;display.c: 321: }
 19919                           ;display.c: 323: cntr = 0;
 19920                           
 19921                           ; BSR set to: 0
 19922                           
 19923                           ; BSR set to: 0
 19924  00D5D2  0E00               	movlw	0
 19925  00D5D4  0100               	movlb	0	; () banked
 19926  00D5D6  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;display.c: 324: if(LATDbits.LD3)
 19930  00D5D8  B68C               	btfsc	3980,3,c	;volatile
 19931  00D5DA  D014               	goto	l2075
 19932  00D5DC  D032               	goto	l2079
 19933  00D5DE                     
 19934                           ; BSR set to: 0
 19935                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 19936                           
 19937                           ; BSR set to: 0
 19938  00D5DE  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19939  00D5E0  0D01               	mullw	1
 19940  00D5E2  0E95               	movlw	low __display_usb@usb_on
 19941  00D5E4  24F3               	addwf	prodl,w,c
 19942  00D5E6  6ED9               	movwf	fsr2l,c
 19943  00D5E8  0E00               	movlw	high __display_usb@usb_on
 19944  00D5EA  20F4               	addwfc	prodh,w,c
 19945  00D5EC  6EDA               	movwf	fsr2h,c
 19946  00D5EE  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19947  00D5F0  0D01               	mullw	1
 19948  00D5F2  0E90               	movlw	low (_display_content+60)
 19949  00D5F4  24F3               	addwf	prodl,w,c
 19950  00D5F6  6EE1               	movwf	fsr1l,c
 19951  00D5F8  0E03               	movlw	high (_display_content+60)
 19952  00D5FA  20F4               	addwfc	prodh,w,c
 19953  00D5FC  6EE2               	movwf	fsr1h,c
 19954  00D5FE  CFDF FFE7          	movff	indf2,indf1
 19955                           
 19956                           ; BSR set to: 0
 19957  00D602  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19958  00D604                     l2075:
 19959                           
 19960                           ; BSR set to: 0
 19961                           
 19962                           ; BSR set to: 0
 19963  00D604  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19964  00D606  0D01               	mullw	1
 19965  00D608  0E95               	movlw	low __display_usb@usb_on
 19966  00D60A  24F3               	addwf	prodl,w,c
 19967  00D60C  6ED9               	movwf	fsr2l,c
 19968  00D60E  0E00               	movlw	high __display_usb@usb_on
 19969  00D610  20F4               	addwfc	prodh,w,c
 19970  00D612  6EDA               	movwf	fsr2h,c
 19971  00D614  50DF               	movf	indf2,w,c
 19972  00D616  B4D8               	btfsc	status,2,c
 19973  00D618  0012               	return	
 19974  00D61A  D7E1               	goto	l2076
 19975  00D61C                     
 19976                           ; BSR set to: 0
 19977                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 19978                           
 19979                           ; BSR set to: 0
 19980  00D61C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19981  00D61E  0D01               	mullw	1
 19982  00D620  0E74               	movlw	low __display_usb@usb_off
 19983  00D622  24F3               	addwf	prodl,w,c
 19984  00D624  6ED9               	movwf	fsr2l,c
 19985  00D626  0E00               	movlw	high __display_usb@usb_off
 19986  00D628  20F4               	addwfc	prodh,w,c
 19987  00D62A  6EDA               	movwf	fsr2h,c
 19988  00D62C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19989  00D62E  0D01               	mullw	1
 19990  00D630  0E90               	movlw	low (_display_content+60)
 19991  00D632  24F3               	addwf	prodl,w,c
 19992  00D634  6EE1               	movwf	fsr1l,c
 19993  00D636  0E03               	movlw	high (_display_content+60)
 19994  00D638  20F4               	addwfc	prodh,w,c
 19995  00D63A  6EE2               	movwf	fsr1h,c
 19996  00D63C  CFDF FFE7          	movff	indf2,indf1
 19997                           
 19998                           ; BSR set to: 0
 19999  00D640  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20000  00D642                     l2079:
 20001                           
 20002                           ; BSR set to: 0
 20003                           
 20004                           ; BSR set to: 0
 20005  00D642  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20006  00D644  0D01               	mullw	1
 20007  00D646  0E74               	movlw	low __display_usb@usb_off
 20008  00D648  24F3               	addwf	prodl,w,c
 20009  00D64A  6ED9               	movwf	fsr2l,c
 20010  00D64C  0E00               	movlw	high __display_usb@usb_off
 20011  00D64E  20F4               	addwfc	prodh,w,c
 20012  00D650  6EDA               	movwf	fsr2h,c
 20013  00D652  50DF               	movf	indf2,w,c
 20014  00D654  B4D8               	btfsc	status,2,c
 20015  00D656  0012               	return	
 20016  00D658  D7E1               	goto	l2080
 20017  00D65A                     __end_of__display_usb:
 20018                           	opt stack 0
 20019                           tblptru	equ	0xFF8
 20020                           tblptrh	equ	0xFF7
 20021                           tblptrl	equ	0xFF6
 20022                           tablat	equ	0xFF5
 20023                           prodh	equ	0xFF4
 20024                           prodl	equ	0xFF3
 20025                           intcon	equ	0xFF2
 20026                           intcon2	equ	0xFF1
 20027                           intcon3	equ	0xFF0
 20028                           postinc0	equ	0xFEE
 20029                           wreg	equ	0xFE8
 20030                           indf1	equ	0xFE7
 20031                           postinc1	equ	0xFE6
 20032                           postdec1	equ	0xFE5
 20033                           plusw1	equ	0xFE3
 20034                           fsr1h	equ	0xFE2
 20035                           fsr1l	equ	0xFE1
 20036                           indf2	equ	0xFDF
 20037                           postinc2	equ	0xFDE
 20038                           postdec2	equ	0xFDD
 20039                           plusw2	equ	0xFDB
 20040                           fsr2h	equ	0xFDA
 20041                           fsr2l	equ	0xFD9
 20042                           status	equ	0xFD8
 20043                           
 20044 ;; *************** function __display_time *****************
 20045 ;; Defined at:
 20046 ;;		line 186 in file "display.c"
 20047 ;; Parameters:    Size  Location     Type
 20048 ;;  mode            1    wreg     unsigned char 
 20049 ;; Auto vars:     Size  Location     Type
 20050 ;;  mode            1  203[BANK1 ] unsigned char 
 20051 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 20052 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 20053 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 20054 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 20055 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 20056 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 20057 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 20058 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 20059 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 20060 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 20061 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 20062 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 20063 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 20064 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 20065 ;;  cntr            1  210[BANK1 ] unsigned char 
 20066 ;;  seconds         1  209[BANK1 ] unsigned char 
 20067 ;;  minutes         1  208[BANK1 ] unsigned char 
 20068 ;;  hours           1  207[BANK1 ] unsigned char 
 20069 ;;  day             1  206[BANK1 ] unsigned char 
 20070 ;;  month           1  205[BANK1 ] unsigned char 
 20071 ;;  year            1  204[BANK1 ] unsigned char 
 20072 ;; Return value:  Size  Location     Type
 20073 ;;                  1    wreg      void 
 20074 ;; Registers used:
 20075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20076 ;; Tracked objects:
 20077 ;;		On entry : 0/0
 20078 ;;		On exit  : 0/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20082 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20084 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20085 ;;Total ram usage:      211 bytes
 20086 ;; Hardware stack levels used:    1
 20087 ;; Hardware stack levels required when called:   11
 20088 ;; This function calls:
 20089 ;;		_rtcc_get_day
 20090 ;;		_rtcc_get_hours
 20091 ;;		_rtcc_get_minutes
 20092 ;;		_rtcc_get_month
 20093 ;;		_rtcc_get_seconds
 20094 ;;		_rtcc_get_year
 20095 ;; This function is called by:
 20096 ;;		_display_prepare
 20097 ;; This function uses a non-reentrant model
 20098 ;;
 20099                           
 20100                           	psect	text100
 20101  009486                     __ptext100:
 20102                           	opt stack 0
 20103  009486                     __display_time:
 20104                           	opt stack 18
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;incstack = 0
 20108                           ;__display_time@mode stored from wreg
 20109  009486  0101               	movlb	1	; () banked
 20110  009488  6FCB               	movwf	__display_time@mode& (0+255),b
 20111                           
 20112                           ;display.c: 188: const char tad[] = "Time and Date";
 20113  00948A  0E97               	movlw	low __display_time@F8681
 20114  00948C  6EF6               	movwf	tblptrl,c
 20115  00948E                     	if	1	;There is more than 1 active tblptr byte
 20116  00948E  0E92               	movlw	high __display_time@F8681
 20117  009490  6EF7               	movwf	tblptrh,c
 20118  009492                     	endif
 20119  009492                     	if	1	;There are 3 active tblptr bytes
 20120  009492  0E00               	movlw	low (__display_time@F8681 shr (0+16))
 20121  009494  6EF8               	movwf	tblptru,c
 20122  009496                     	endif
 20123  009496  EE21  F080         	lfsr	2,__display_time@tad
 20124  00949A  0E0D               	movlw	13
 20125  00949C                     u13400:
 20126  00949C  0009               	tblrd		*+
 20127  00949E  CFF5 FFDE          	movff	tablat,postinc2
 20128  0094A2  06E8               	decf	wreg,f,c
 20129  0094A4  E2FB               	bc	u13400
 20130                           
 20131                           ;display.c: 189: const char setyear[] = "Set year";
 20132  0094A6  0E0E               	movlw	low __display_time@F8683
 20133  0094A8  6EF6               	movwf	tblptrl,c
 20134  0094AA                     	if	1	;There is more than 1 active tblptr byte
 20135  0094AA  0E93               	movlw	high __display_time@F8683
 20136  0094AC  6EF7               	movwf	tblptrh,c
 20137  0094AE                     	endif
 20138  0094AE                     	if	1	;There are 3 active tblptr bytes
 20139  0094AE  0E00               	movlw	low (__display_time@F8683 shr (0+16))
 20140  0094B0  6EF8               	movwf	tblptru,c
 20141  0094B2                     	endif
 20142  0094B2  EE21  F0BA         	lfsr	2,__display_time@setyear
 20143  0094B6  0E08               	movlw	8
 20144  0094B8                     u13410:
 20145  0094B8  0009               	tblrd		*+
 20146  0094BA  CFF5 FFDE          	movff	tablat,postinc2
 20147  0094BE  06E8               	decf	wreg,f,c
 20148  0094C0  E2FB               	bc	u13410
 20149                           
 20150                           ;display.c: 190: const char setmonth[] = "Set month";
 20151  0094C2  0E04               	movlw	low __display_time@F8685
 20152  0094C4  6EF6               	movwf	tblptrl,c
 20153  0094C6                     	if	1	;There is more than 1 active tblptr byte
 20154  0094C6  0E93               	movlw	high __display_time@F8685
 20155  0094C8  6EF7               	movwf	tblptrh,c
 20156  0094CA                     	endif
 20157  0094CA                     	if	1	;There are 3 active tblptr bytes
 20158  0094CA  0E00               	movlw	low (__display_time@F8685 shr (0+16))
 20159  0094CC  6EF8               	movwf	tblptru,c
 20160  0094CE                     	endif
 20161  0094CE  EE21  F0A6         	lfsr	2,__display_time@setmonth
 20162  0094D2  0E09               	movlw	9
 20163  0094D4                     u13420:
 20164  0094D4  0009               	tblrd		*+
 20165  0094D6  CFF5 FFDE          	movff	tablat,postinc2
 20166  0094DA  06E8               	decf	wreg,f,c
 20167  0094DC  E2FB               	bc	u13420
 20168                           
 20169                           ;display.c: 191: const char setday[] = "Set day";
 20170  0094DE  0E1F               	movlw	low __display_time@F8687
 20171  0094E0  6EF6               	movwf	tblptrl,c
 20172  0094E2                     	if	1	;There is more than 1 active tblptr byte
 20173  0094E2  0E93               	movlw	high __display_time@F8687
 20174  0094E4  6EF7               	movwf	tblptrh,c
 20175  0094E6                     	endif
 20176  0094E6                     	if	1	;There are 3 active tblptr bytes
 20177  0094E6  0E00               	movlw	low (__display_time@F8687 shr (0+16))
 20178  0094E8  6EF8               	movwf	tblptru,c
 20179  0094EA                     	endif
 20180  0094EA  EE21  F0C3         	lfsr	2,__display_time@setday
 20181  0094EE  0E07               	movlw	7
 20182  0094F0                     u13430:
 20183  0094F0  0009               	tblrd		*+
 20184  0094F2  CFF5 FFDE          	movff	tablat,postinc2
 20185  0094F6  06E8               	decf	wreg,f,c
 20186  0094F8  E2FB               	bc	u13430
 20187                           
 20188                           ;display.c: 192: const char sethours[] = "Set hours";
 20189  0094FA  0EFA               	movlw	low __display_time@F8689
 20190  0094FC  6EF6               	movwf	tblptrl,c
 20191  0094FE                     	if	1	;There is more than 1 active tblptr byte
 20192  0094FE  0E92               	movlw	high __display_time@F8689
 20193  009500  6EF7               	movwf	tblptrh,c
 20194  009502                     	endif
 20195  009502                     	if	1	;There are 3 active tblptr bytes
 20196  009502  0E00               	movlw	low (__display_time@F8689 shr (0+16))
 20197  009504  6EF8               	movwf	tblptru,c
 20198  009506                     	endif
 20199  009506  EE21  F0B0         	lfsr	2,__display_time@sethours
 20200  00950A  0E09               	movlw	9
 20201  00950C                     u13440:
 20202  00950C  0009               	tblrd		*+
 20203  00950E  CFF5 FFDE          	movff	tablat,postinc2
 20204  009512  06E8               	decf	wreg,f,c
 20205  009514  E2FB               	bc	u13440
 20206                           
 20207                           ;display.c: 193: const char setminutes[] = "Set minutes";
 20208  009516  0EE3               	movlw	low __display_time@F8691
 20209  009518  6EF6               	movwf	tblptrl,c
 20210  00951A                     	if	1	;There is more than 1 active tblptr byte
 20211  00951A  0E92               	movlw	high __display_time@F8691
 20212  00951C  6EF7               	movwf	tblptrh,c
 20213  00951E                     	endif
 20214  00951E                     	if	1	;There are 3 active tblptr bytes
 20215  00951E  0E00               	movlw	low (__display_time@F8691 shr (0+16))
 20216  009520  6EF8               	movwf	tblptru,c
 20217  009522                     	endif
 20218  009522  EE21  F08E         	lfsr	2,__display_time@setminutes
 20219  009526  0E0B               	movlw	11
 20220  009528                     u13450:
 20221  009528  0009               	tblrd		*+
 20222  00952A  CFF5 FFDE          	movff	tablat,postinc2
 20223  00952E  06E8               	decf	wreg,f,c
 20224  009530  E2FB               	bc	u13450
 20225                           
 20226                           ;display.c: 194: const char setseconds[] = "Set seconds";
 20227  009532  0ED7               	movlw	low __display_time@F8693
 20228  009534  6EF6               	movwf	tblptrl,c
 20229  009536                     	if	1	;There is more than 1 active tblptr byte
 20230  009536  0E92               	movlw	high __display_time@F8693
 20231  009538  6EF7               	movwf	tblptrh,c
 20232  00953A                     	endif
 20233  00953A                     	if	1	;There are 3 active tblptr bytes
 20234  00953A  0E00               	movlw	low (__display_time@F8693 shr (0+16))
 20235  00953C  6EF8               	movwf	tblptru,c
 20236  00953E                     	endif
 20237  00953E  EE21  F09A         	lfsr	2,__display_time@setseconds
 20238  009542  0E0B               	movlw	11
 20239  009544                     u13460:
 20240  009544  0009               	tblrd		*+
 20241  009546  CFF5 FFDE          	movff	tablat,postinc2
 20242  00954A  06E8               	decf	wreg,f,c
 20243  00954C  E2FB               	bc	u13460
 20244                           
 20245                           ;display.c: 195: const char pts[] = "->Press to set time";
 20246  00954E  0E63               	movlw	low __display_time@F8695
 20247  009550  6EF6               	movwf	tblptrl,c
 20248  009552                     	if	1	;There is more than 1 active tblptr byte
 20249  009552  0E91               	movlw	high __display_time@F8695
 20250  009554  6EF7               	movwf	tblptrh,c
 20251  009556                     	endif
 20252  009556                     	if	1	;There are 3 active tblptr bytes
 20253  009556  0E00               	movlw	low (__display_time@F8695 shr (0+16))
 20254  009558  6EF8               	movwf	tblptru,c
 20255  00955A                     	endif
 20256  00955A  EE21  F000         	lfsr	2,__display_time@pts
 20257  00955E  0E13               	movlw	19
 20258  009560                     u13470:
 20259  009560  0009               	tblrd		*+
 20260  009562  CFF5 FFDE          	movff	tablat,postinc2
 20261  009566  06E8               	decf	wreg,f,c
 20262  009568  E2FB               	bc	u13470
 20263                           
 20264                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 20265  00956A  0ED4               	movlw	low __display_time@F8697
 20266  00956C  6EF6               	movwf	tblptrl,c
 20267  00956E                     	if	1	;There is more than 1 active tblptr byte
 20268  00956E  0E91               	movlw	high __display_time@F8697
 20269  009570  6EF7               	movwf	tblptrh,c
 20270  009572                     	endif
 20271  009572                     	if	1	;There are 3 active tblptr bytes
 20272  009572  0E00               	movlw	low (__display_time@F8697 shr (0+16))
 20273  009574  6EF8               	movwf	tblptru,c
 20274  009576                     	endif
 20275  009576  EE21  F03C         	lfsr	2,__display_time@pressmonth
 20276  00957A  0E11               	movlw	17
 20277  00957C                     u13480:
 20278  00957C  0009               	tblrd		*+
 20279  00957E  CFF5 FFDE          	movff	tablat,postinc2
 20280  009582  06E8               	decf	wreg,f,c
 20281  009584  E2FB               	bc	u13480
 20282                           
 20283                           ;display.c: 197: const char pressday[] = "->Press for day";
 20284  009586  0E6B               	movlw	low __display_time@F8699
 20285  009588  6EF6               	movwf	tblptrl,c
 20286  00958A                     	if	1	;There is more than 1 active tblptr byte
 20287  00958A  0E92               	movlw	high __display_time@F8699
 20288  00958C  6EF7               	movwf	tblptrh,c
 20289  00958E                     	endif
 20290  00958E                     	if	1	;There are 3 active tblptr bytes
 20291  00958E  0E00               	movlw	low (__display_time@F8699 shr (0+16))
 20292  009590  6EF8               	movwf	tblptru,c
 20293  009592                     	endif
 20294  009592  EE21  F060         	lfsr	2,__display_time@pressday
 20295  009596  0E0F               	movlw	15
 20296  009598                     u13490:
 20297  009598  0009               	tblrd		*+
 20298  00959A  CFF5 FFDE          	movff	tablat,postinc2
 20299  00959E  06E8               	decf	wreg,f,c
 20300  0095A0  E2FB               	bc	u13490
 20301                           
 20302                           ;display.c: 198: const char presshours[] = "->Press for hours";
 20303  0095A2  0EC2               	movlw	low __display_time@F8701
 20304  0095A4  6EF6               	movwf	tblptrl,c
 20305  0095A6                     	if	1	;There is more than 1 active tblptr byte
 20306  0095A6  0E91               	movlw	high __display_time@F8701
 20307  0095A8  6EF7               	movwf	tblptrh,c
 20308  0095AA                     	endif
 20309  0095AA                     	if	1	;There are 3 active tblptr bytes
 20310  0095AA  0E00               	movlw	low (__display_time@F8701 shr (0+16))
 20311  0095AC  6EF8               	movwf	tblptru,c
 20312  0095AE                     	endif
 20313  0095AE  EE21  F04E         	lfsr	2,__display_time@presshours
 20314  0095B2  0E11               	movlw	17
 20315  0095B4                     u13500:
 20316  0095B4  0009               	tblrd		*+
 20317  0095B6  CFF5 FFDE          	movff	tablat,postinc2
 20318  0095BA  06E8               	decf	wreg,f,c
 20319  0095BC  E2FB               	bc	u13500
 20320                           
 20321                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 20322  0095BE  0E4F               	movlw	low __display_time@F8703
 20323  0095C0  6EF6               	movwf	tblptrl,c
 20324  0095C2                     	if	1	;There is more than 1 active tblptr byte
 20325  0095C2  0E91               	movlw	high __display_time@F8703
 20326  0095C4  6EF7               	movwf	tblptrh,c
 20327  0095C6                     	endif
 20328  0095C6                     	if	1	;There are 3 active tblptr bytes
 20329  0095C6  0E00               	movlw	low (__display_time@F8703 shr (0+16))
 20330  0095C8  6EF8               	movwf	tblptru,c
 20331  0095CA                     	endif
 20332  0095CA  EE21  F014         	lfsr	2,__display_time@pressminutes
 20333  0095CE  0E13               	movlw	19
 20334  0095D0                     u13510:
 20335  0095D0  0009               	tblrd		*+
 20336  0095D2  CFF5 FFDE          	movff	tablat,postinc2
 20337  0095D6  06E8               	decf	wreg,f,c
 20338  0095D8  E2FB               	bc	u13510
 20339                           
 20340                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 20341  0095DA  0E3B               	movlw	low __display_time@F8705
 20342  0095DC  6EF6               	movwf	tblptrl,c
 20343  0095DE                     	if	1	;There is more than 1 active tblptr byte
 20344  0095DE  0E91               	movlw	high __display_time@F8705
 20345  0095E0  6EF7               	movwf	tblptrh,c
 20346  0095E2                     	endif
 20347  0095E2                     	if	1	;There are 3 active tblptr bytes
 20348  0095E2  0E00               	movlw	low (__display_time@F8705 shr (0+16))
 20349  0095E4  6EF8               	movwf	tblptru,c
 20350  0095E6                     	endif
 20351  0095E6  EE21  F028         	lfsr	2,__display_time@pressseconds
 20352  0095EA  0E13               	movlw	19
 20353  0095EC                     u13520:
 20354  0095EC  0009               	tblrd		*+
 20355  0095EE  CFF5 FFDE          	movff	tablat,postinc2
 20356  0095F2  06E8               	decf	wreg,f,c
 20357  0095F4  E2FB               	bc	u13520
 20358                           
 20359                           ;display.c: 201: const char presssave[] = "->Press to save";
 20360  0095F6  0E5B               	movlw	low __display_time@F8707
 20361  0095F8  6EF6               	movwf	tblptrl,c
 20362  0095FA                     	if	1	;There is more than 1 active tblptr byte
 20363  0095FA  0E92               	movlw	high __display_time@F8707
 20364  0095FC  6EF7               	movwf	tblptrh,c
 20365  0095FE                     	endif
 20366  0095FE                     	if	1	;There are 3 active tblptr bytes
 20367  0095FE  0E00               	movlw	low (__display_time@F8707 shr (0+16))
 20368  009600  6EF8               	movwf	tblptru,c
 20369  009602                     	endif
 20370  009602  EE21  F070         	lfsr	2,__display_time@presssave
 20371  009606  0E0F               	movlw	15
 20372  009608                     u13530:
 20373  009608  0009               	tblrd		*+
 20374  00960A  CFF5 FFDE          	movff	tablat,postinc2
 20375  00960E  06E8               	decf	wreg,f,c
 20376  009610  E2FB               	bc	u13530
 20377                           
 20378                           ;display.c: 203: uint8_t cntr;
 20379                           ;display.c: 204: uint8_t year = rtcc_get_year();
 20380  009612  EC3B  F097         	call	_rtcc_get_year	;wreg free
 20381  009616  0101               	movlb	1	; () banked
 20382  009618  6FCC               	movwf	__display_time@year& (0+255),b
 20383                           
 20384                           ; BSR set to: 1
 20385                           ;display.c: 205: uint8_t month = rtcc_get_month();
 20386  00961A  EC49  F097         	call	_rtcc_get_month	;wreg free
 20387  00961E  0101               	movlb	1	; () banked
 20388  009620  6FCD               	movwf	__display_time@month& (0+255),b
 20389                           
 20390                           ; BSR set to: 1
 20391                           ;display.c: 206: uint8_t day = rtcc_get_day();
 20392  009622  EC5E  F097         	call	_rtcc_get_day	;wreg free
 20393  009626  0101               	movlb	1	; () banked
 20394  009628  6FCE               	movwf	__display_time@day& (0+255),b
 20395                           
 20396                           ; BSR set to: 1
 20397                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 20398  00962A  EC57  F097         	call	_rtcc_get_hours	;wreg free
 20399  00962E  0101               	movlb	1	; () banked
 20400  009630  6FCF               	movwf	__display_time@hours& (0+255),b
 20401                           
 20402                           ; BSR set to: 1
 20403                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 20404  009632  EC50  F097         	call	_rtcc_get_minutes	;wreg free
 20405  009636  0101               	movlb	1	; () banked
 20406  009638  6FD0               	movwf	__display_time@minutes& (0+255),b
 20407                           
 20408                           ; BSR set to: 1
 20409                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 20410  00963A  EC42  F097         	call	_rtcc_get_seconds	;wreg free
 20411  00963E  0101               	movlb	1	; () banked
 20412  009640  6FD1               	movwf	__display_time@seconds& (0+255),b
 20413                           
 20414                           ;display.c: 211: switch(mode)
 20415  009642  D1D5               	goto	l2005
 20416  009644                     
 20417                           ; BSR set to: 1
 20418                           ;display.c: 214: cntr = 0;
 20419                           
 20420                           ; BSR set to: 1
 20421  009644  0E00               	movlw	0
 20422  009646  6FD2               	movwf	__display_time@cntr& (0+255),b
 20423                           
 20424                           ;display.c: 215: while(tad[cntr])
 20425  009648  D013               	goto	l2007
 20426  00964A                     
 20427                           ; BSR set to: 1
 20428                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 20429                           
 20430                           ; BSR set to: 1
 20431  00964A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20432  00964C  0D01               	mullw	1
 20433  00964E  0E80               	movlw	low __display_time@tad
 20434  009650  24F3               	addwf	prodl,w,c
 20435  009652  6ED9               	movwf	fsr2l,c
 20436  009654  0E01               	movlw	high __display_time@tad
 20437  009656  20F4               	addwfc	prodh,w,c
 20438  009658  6EDA               	movwf	fsr2h,c
 20439  00965A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20440  00965C  0D01               	mullw	1
 20441  00965E  0E54               	movlw	low _display_content
 20442  009660  24F3               	addwf	prodl,w,c
 20443  009662  6EE1               	movwf	fsr1l,c
 20444  009664  0E03               	movlw	high _display_content
 20445  009666  20F4               	addwfc	prodh,w,c
 20446  009668  6EE2               	movwf	fsr1h,c
 20447  00966A  CFDF FFE7          	movff	indf2,indf1
 20448                           
 20449                           ; BSR set to: 1
 20450  00966E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20451  009670                     l2007:
 20452                           
 20453                           ; BSR set to: 1
 20454                           
 20455                           ; BSR set to: 1
 20456  009670  51D2               	movf	__display_time@cntr& (0+255),w,b
 20457  009672  0D01               	mullw	1
 20458  009674  0E80               	movlw	low __display_time@tad
 20459  009676  24F3               	addwf	prodl,w,c
 20460  009678  6ED9               	movwf	fsr2l,c
 20461  00967A  0E01               	movlw	high __display_time@tad
 20462  00967C  20F4               	addwfc	prodh,w,c
 20463  00967E  6EDA               	movwf	fsr2h,c
 20464  009680  50DF               	movf	indf2,w,c
 20465  009682  A4D8               	btfss	status,2,c
 20466  009684  D7E2               	goto	l2008
 20467                           
 20468                           ; BSR set to: 1
 20469                           ;display.c: 217: cntr = 0;
 20470                           
 20471                           ; BSR set to: 1
 20472  009686  0E00               	movlw	0
 20473  009688  6FD2               	movwf	__display_time@cntr& (0+255),b
 20474                           
 20475                           ;display.c: 218: while(pts[cntr])
 20476  00968A  D013               	goto	l2010
 20477  00968C                     
 20478                           ; BSR set to: 1
 20479                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 20480                           
 20481                           ; BSR set to: 1
 20482  00968C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20483  00968E  0D01               	mullw	1
 20484  009690  0E00               	movlw	low __display_time@pts
 20485  009692  24F3               	addwf	prodl,w,c
 20486  009694  6ED9               	movwf	fsr2l,c
 20487  009696  0E01               	movlw	high __display_time@pts
 20488  009698  20F4               	addwfc	prodh,w,c
 20489  00969A  6EDA               	movwf	fsr2h,c
 20490  00969C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20491  00969E  0D01               	mullw	1
 20492  0096A0  0E90               	movlw	low (_display_content+60)
 20493  0096A2  24F3               	addwf	prodl,w,c
 20494  0096A4  6EE1               	movwf	fsr1l,c
 20495  0096A6  0E03               	movlw	high (_display_content+60)
 20496  0096A8  20F4               	addwfc	prodh,w,c
 20497  0096AA  6EE2               	movwf	fsr1h,c
 20498  0096AC  CFDF FFE7          	movff	indf2,indf1
 20499                           
 20500                           ; BSR set to: 1
 20501  0096B0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20502  0096B2                     l2010:
 20503                           
 20504                           ; BSR set to: 1
 20505                           
 20506                           ; BSR set to: 1
 20507  0096B2  51D2               	movf	__display_time@cntr& (0+255),w,b
 20508  0096B4  0D01               	mullw	1
 20509  0096B6  0E00               	movlw	low __display_time@pts
 20510  0096B8  24F3               	addwf	prodl,w,c
 20511  0096BA  6ED9               	movwf	fsr2l,c
 20512  0096BC  0E01               	movlw	high __display_time@pts
 20513  0096BE  20F4               	addwfc	prodh,w,c
 20514  0096C0  6EDA               	movwf	fsr2h,c
 20515  0096C2  50DF               	movf	indf2,w,c
 20516  0096C4  B4D8               	btfsc	status,2,c
 20517  0096C6  D1A9               	goto	l2013
 20518  0096C8  D7E1               	goto	l2011
 20519  0096CA                     
 20520                           ; BSR set to: 1
 20521                           ;display.c: 223: cntr = 0;
 20522                           
 20523                           ; BSR set to: 1
 20524  0096CA  0E00               	movlw	0
 20525  0096CC  6FD2               	movwf	__display_time@cntr& (0+255),b
 20526                           
 20527                           ;display.c: 224: while(setyear[cntr])
 20528  0096CE  D013               	goto	l2015
 20529  0096D0                     
 20530                           ; BSR set to: 1
 20531                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 20532                           
 20533                           ; BSR set to: 1
 20534  0096D0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20535  0096D2  0D01               	mullw	1
 20536  0096D4  0EBA               	movlw	low __display_time@setyear
 20537  0096D6  24F3               	addwf	prodl,w,c
 20538  0096D8  6ED9               	movwf	fsr2l,c
 20539  0096DA  0E01               	movlw	high __display_time@setyear
 20540  0096DC  20F4               	addwfc	prodh,w,c
 20541  0096DE  6EDA               	movwf	fsr2h,c
 20542  0096E0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20543  0096E2  0D01               	mullw	1
 20544  0096E4  0E54               	movlw	low _display_content
 20545  0096E6  24F3               	addwf	prodl,w,c
 20546  0096E8  6EE1               	movwf	fsr1l,c
 20547  0096EA  0E03               	movlw	high _display_content
 20548  0096EC  20F4               	addwfc	prodh,w,c
 20549  0096EE  6EE2               	movwf	fsr1h,c
 20550  0096F0  CFDF FFE7          	movff	indf2,indf1
 20551                           
 20552                           ; BSR set to: 1
 20553  0096F4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20554  0096F6                     l2015:
 20555                           
 20556                           ; BSR set to: 1
 20557                           
 20558                           ; BSR set to: 1
 20559  0096F6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20560  0096F8  0D01               	mullw	1
 20561  0096FA  0EBA               	movlw	low __display_time@setyear
 20562  0096FC  24F3               	addwf	prodl,w,c
 20563  0096FE  6ED9               	movwf	fsr2l,c
 20564  009700  0E01               	movlw	high __display_time@setyear
 20565  009702  20F4               	addwfc	prodh,w,c
 20566  009704  6EDA               	movwf	fsr2h,c
 20567  009706  50DF               	movf	indf2,w,c
 20568  009708  A4D8               	btfss	status,2,c
 20569  00970A  D7E2               	goto	l2016
 20570                           
 20571                           ; BSR set to: 1
 20572                           ;display.c: 226: cntr = 0;
 20573                           
 20574                           ; BSR set to: 1
 20575  00970C  0E00               	movlw	0
 20576  00970E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20577                           
 20578                           ;display.c: 227: while(pressmonth[cntr])
 20579  009710  D013               	goto	l2018
 20580  009712                     
 20581                           ; BSR set to: 1
 20582                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 20583                           
 20584                           ; BSR set to: 1
 20585  009712  51D2               	movf	__display_time@cntr& (0+255),w,b
 20586  009714  0D01               	mullw	1
 20587  009716  0E3C               	movlw	low __display_time@pressmonth
 20588  009718  24F3               	addwf	prodl,w,c
 20589  00971A  6ED9               	movwf	fsr2l,c
 20590  00971C  0E01               	movlw	high __display_time@pressmonth
 20591  00971E  20F4               	addwfc	prodh,w,c
 20592  009720  6EDA               	movwf	fsr2h,c
 20593  009722  51D2               	movf	__display_time@cntr& (0+255),w,b
 20594  009724  0D01               	mullw	1
 20595  009726  0E90               	movlw	low (_display_content+60)
 20596  009728  24F3               	addwf	prodl,w,c
 20597  00972A  6EE1               	movwf	fsr1l,c
 20598  00972C  0E03               	movlw	high (_display_content+60)
 20599  00972E  20F4               	addwfc	prodh,w,c
 20600  009730  6EE2               	movwf	fsr1h,c
 20601  009732  CFDF FFE7          	movff	indf2,indf1
 20602                           
 20603                           ; BSR set to: 1
 20604  009736  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20605  009738                     l2018:
 20606                           
 20607                           ; BSR set to: 1
 20608                           
 20609                           ; BSR set to: 1
 20610  009738  51D2               	movf	__display_time@cntr& (0+255),w,b
 20611  00973A  0D01               	mullw	1
 20612  00973C  0E3C               	movlw	low __display_time@pressmonth
 20613  00973E  24F3               	addwf	prodl,w,c
 20614  009740  6ED9               	movwf	fsr2l,c
 20615  009742  0E01               	movlw	high __display_time@pressmonth
 20616  009744  20F4               	addwfc	prodh,w,c
 20617  009746  6EDA               	movwf	fsr2h,c
 20618  009748  50DF               	movf	indf2,w,c
 20619  00974A  B4D8               	btfsc	status,2,c
 20620  00974C  D166               	goto	l2013
 20621  00974E  D7E1               	goto	l2019
 20622  009750                     
 20623                           ; BSR set to: 1
 20624                           ;display.c: 232: cntr = 0;
 20625                           
 20626                           ; BSR set to: 1
 20627  009750  0E00               	movlw	0
 20628  009752  6FD2               	movwf	__display_time@cntr& (0+255),b
 20629                           
 20630                           ;display.c: 233: while(setmonth[cntr])
 20631  009754  D013               	goto	l2022
 20632  009756                     
 20633                           ; BSR set to: 1
 20634                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 20635                           
 20636                           ; BSR set to: 1
 20637  009756  51D2               	movf	__display_time@cntr& (0+255),w,b
 20638  009758  0D01               	mullw	1
 20639  00975A  0EA6               	movlw	low __display_time@setmonth
 20640  00975C  24F3               	addwf	prodl,w,c
 20641  00975E  6ED9               	movwf	fsr2l,c
 20642  009760  0E01               	movlw	high __display_time@setmonth
 20643  009762  20F4               	addwfc	prodh,w,c
 20644  009764  6EDA               	movwf	fsr2h,c
 20645  009766  51D2               	movf	__display_time@cntr& (0+255),w,b
 20646  009768  0D01               	mullw	1
 20647  00976A  0E54               	movlw	low _display_content
 20648  00976C  24F3               	addwf	prodl,w,c
 20649  00976E  6EE1               	movwf	fsr1l,c
 20650  009770  0E03               	movlw	high _display_content
 20651  009772  20F4               	addwfc	prodh,w,c
 20652  009774  6EE2               	movwf	fsr1h,c
 20653  009776  CFDF FFE7          	movff	indf2,indf1
 20654                           
 20655                           ; BSR set to: 1
 20656  00977A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20657  00977C                     l2022:
 20658                           
 20659                           ; BSR set to: 1
 20660                           
 20661                           ; BSR set to: 1
 20662  00977C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20663  00977E  0D01               	mullw	1
 20664  009780  0EA6               	movlw	low __display_time@setmonth
 20665  009782  24F3               	addwf	prodl,w,c
 20666  009784  6ED9               	movwf	fsr2l,c
 20667  009786  0E01               	movlw	high __display_time@setmonth
 20668  009788  20F4               	addwfc	prodh,w,c
 20669  00978A  6EDA               	movwf	fsr2h,c
 20670  00978C  50DF               	movf	indf2,w,c
 20671  00978E  A4D8               	btfss	status,2,c
 20672  009790  D7E2               	goto	l2023
 20673                           
 20674                           ; BSR set to: 1
 20675                           ;display.c: 235: cntr = 0;
 20676                           
 20677                           ; BSR set to: 1
 20678  009792  0E00               	movlw	0
 20679  009794  6FD2               	movwf	__display_time@cntr& (0+255),b
 20680                           
 20681                           ;display.c: 236: while(pressday[cntr])
 20682  009796  D013               	goto	l2025
 20683  009798                     
 20684                           ; BSR set to: 1
 20685                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 20686                           
 20687                           ; BSR set to: 1
 20688  009798  51D2               	movf	__display_time@cntr& (0+255),w,b
 20689  00979A  0D01               	mullw	1
 20690  00979C  0E60               	movlw	low __display_time@pressday
 20691  00979E  24F3               	addwf	prodl,w,c
 20692  0097A0  6ED9               	movwf	fsr2l,c
 20693  0097A2  0E01               	movlw	high __display_time@pressday
 20694  0097A4  20F4               	addwfc	prodh,w,c
 20695  0097A6  6EDA               	movwf	fsr2h,c
 20696  0097A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20697  0097AA  0D01               	mullw	1
 20698  0097AC  0E90               	movlw	low (_display_content+60)
 20699  0097AE  24F3               	addwf	prodl,w,c
 20700  0097B0  6EE1               	movwf	fsr1l,c
 20701  0097B2  0E03               	movlw	high (_display_content+60)
 20702  0097B4  20F4               	addwfc	prodh,w,c
 20703  0097B6  6EE2               	movwf	fsr1h,c
 20704  0097B8  CFDF FFE7          	movff	indf2,indf1
 20705                           
 20706                           ; BSR set to: 1
 20707  0097BC  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20708  0097BE                     l2025:
 20709                           
 20710                           ; BSR set to: 1
 20711                           
 20712                           ; BSR set to: 1
 20713  0097BE  51D2               	movf	__display_time@cntr& (0+255),w,b
 20714  0097C0  0D01               	mullw	1
 20715  0097C2  0E60               	movlw	low __display_time@pressday
 20716  0097C4  24F3               	addwf	prodl,w,c
 20717  0097C6  6ED9               	movwf	fsr2l,c
 20718  0097C8  0E01               	movlw	high __display_time@pressday
 20719  0097CA  20F4               	addwfc	prodh,w,c
 20720  0097CC  6EDA               	movwf	fsr2h,c
 20721  0097CE  50DF               	movf	indf2,w,c
 20722  0097D0  B4D8               	btfsc	status,2,c
 20723  0097D2  D123               	goto	l2013
 20724  0097D4  D7E1               	goto	l2026
 20725  0097D6                     
 20726                           ; BSR set to: 1
 20727                           ;display.c: 241: cntr = 0;
 20728                           
 20729                           ; BSR set to: 1
 20730  0097D6  0E00               	movlw	0
 20731  0097D8  6FD2               	movwf	__display_time@cntr& (0+255),b
 20732                           
 20733                           ;display.c: 242: while(setday[cntr])
 20734  0097DA  D013               	goto	l2029
 20735  0097DC                     
 20736                           ; BSR set to: 1
 20737                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 20738                           
 20739                           ; BSR set to: 1
 20740  0097DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20741  0097DE  0D01               	mullw	1
 20742  0097E0  0EC3               	movlw	low __display_time@setday
 20743  0097E2  24F3               	addwf	prodl,w,c
 20744  0097E4  6ED9               	movwf	fsr2l,c
 20745  0097E6  0E01               	movlw	high __display_time@setday
 20746  0097E8  20F4               	addwfc	prodh,w,c
 20747  0097EA  6EDA               	movwf	fsr2h,c
 20748  0097EC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20749  0097EE  0D01               	mullw	1
 20750  0097F0  0E54               	movlw	low _display_content
 20751  0097F2  24F3               	addwf	prodl,w,c
 20752  0097F4  6EE1               	movwf	fsr1l,c
 20753  0097F6  0E03               	movlw	high _display_content
 20754  0097F8  20F4               	addwfc	prodh,w,c
 20755  0097FA  6EE2               	movwf	fsr1h,c
 20756  0097FC  CFDF FFE7          	movff	indf2,indf1
 20757                           
 20758                           ; BSR set to: 1
 20759  009800  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20760  009802                     l2029:
 20761                           
 20762                           ; BSR set to: 1
 20763                           
 20764                           ; BSR set to: 1
 20765  009802  51D2               	movf	__display_time@cntr& (0+255),w,b
 20766  009804  0D01               	mullw	1
 20767  009806  0EC3               	movlw	low __display_time@setday
 20768  009808  24F3               	addwf	prodl,w,c
 20769  00980A  6ED9               	movwf	fsr2l,c
 20770  00980C  0E01               	movlw	high __display_time@setday
 20771  00980E  20F4               	addwfc	prodh,w,c
 20772  009810  6EDA               	movwf	fsr2h,c
 20773  009812  50DF               	movf	indf2,w,c
 20774  009814  A4D8               	btfss	status,2,c
 20775  009816  D7E2               	goto	l2030
 20776                           
 20777                           ; BSR set to: 1
 20778                           ;display.c: 244: cntr = 0;
 20779                           
 20780                           ; BSR set to: 1
 20781  009818  0E00               	movlw	0
 20782  00981A  6FD2               	movwf	__display_time@cntr& (0+255),b
 20783                           
 20784                           ;display.c: 245: while(presshours[cntr])
 20785  00981C  D013               	goto	l2032
 20786  00981E                     
 20787                           ; BSR set to: 1
 20788                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 20789                           
 20790                           ; BSR set to: 1
 20791  00981E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20792  009820  0D01               	mullw	1
 20793  009822  0E4E               	movlw	low __display_time@presshours
 20794  009824  24F3               	addwf	prodl,w,c
 20795  009826  6ED9               	movwf	fsr2l,c
 20796  009828  0E01               	movlw	high __display_time@presshours
 20797  00982A  20F4               	addwfc	prodh,w,c
 20798  00982C  6EDA               	movwf	fsr2h,c
 20799  00982E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20800  009830  0D01               	mullw	1
 20801  009832  0E90               	movlw	low (_display_content+60)
 20802  009834  24F3               	addwf	prodl,w,c
 20803  009836  6EE1               	movwf	fsr1l,c
 20804  009838  0E03               	movlw	high (_display_content+60)
 20805  00983A  20F4               	addwfc	prodh,w,c
 20806  00983C  6EE2               	movwf	fsr1h,c
 20807  00983E  CFDF FFE7          	movff	indf2,indf1
 20808                           
 20809                           ; BSR set to: 1
 20810  009842  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20811  009844                     l2032:
 20812                           
 20813                           ; BSR set to: 1
 20814                           
 20815                           ; BSR set to: 1
 20816  009844  51D2               	movf	__display_time@cntr& (0+255),w,b
 20817  009846  0D01               	mullw	1
 20818  009848  0E4E               	movlw	low __display_time@presshours
 20819  00984A  24F3               	addwf	prodl,w,c
 20820  00984C  6ED9               	movwf	fsr2l,c
 20821  00984E  0E01               	movlw	high __display_time@presshours
 20822  009850  20F4               	addwfc	prodh,w,c
 20823  009852  6EDA               	movwf	fsr2h,c
 20824  009854  50DF               	movf	indf2,w,c
 20825  009856  B4D8               	btfsc	status,2,c
 20826  009858  D0E0               	goto	l2013
 20827  00985A  D7E1               	goto	l2033
 20828  00985C                     
 20829                           ; BSR set to: 1
 20830                           ;display.c: 250: cntr = 0;
 20831                           
 20832                           ; BSR set to: 1
 20833  00985C  0E00               	movlw	0
 20834  00985E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20835                           
 20836                           ;display.c: 251: while(sethours[cntr])
 20837  009860  D013               	goto	l2036
 20838  009862                     
 20839                           ; BSR set to: 1
 20840                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 20841                           
 20842                           ; BSR set to: 1
 20843  009862  51D2               	movf	__display_time@cntr& (0+255),w,b
 20844  009864  0D01               	mullw	1
 20845  009866  0EB0               	movlw	low __display_time@sethours
 20846  009868  24F3               	addwf	prodl,w,c
 20847  00986A  6ED9               	movwf	fsr2l,c
 20848  00986C  0E01               	movlw	high __display_time@sethours
 20849  00986E  20F4               	addwfc	prodh,w,c
 20850  009870  6EDA               	movwf	fsr2h,c
 20851  009872  51D2               	movf	__display_time@cntr& (0+255),w,b
 20852  009874  0D01               	mullw	1
 20853  009876  0E54               	movlw	low _display_content
 20854  009878  24F3               	addwf	prodl,w,c
 20855  00987A  6EE1               	movwf	fsr1l,c
 20856  00987C  0E03               	movlw	high _display_content
 20857  00987E  20F4               	addwfc	prodh,w,c
 20858  009880  6EE2               	movwf	fsr1h,c
 20859  009882  CFDF FFE7          	movff	indf2,indf1
 20860                           
 20861                           ; BSR set to: 1
 20862  009886  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20863  009888                     l2036:
 20864                           
 20865                           ; BSR set to: 1
 20866                           
 20867                           ; BSR set to: 1
 20868  009888  51D2               	movf	__display_time@cntr& (0+255),w,b
 20869  00988A  0D01               	mullw	1
 20870  00988C  0EB0               	movlw	low __display_time@sethours
 20871  00988E  24F3               	addwf	prodl,w,c
 20872  009890  6ED9               	movwf	fsr2l,c
 20873  009892  0E01               	movlw	high __display_time@sethours
 20874  009894  20F4               	addwfc	prodh,w,c
 20875  009896  6EDA               	movwf	fsr2h,c
 20876  009898  50DF               	movf	indf2,w,c
 20877  00989A  A4D8               	btfss	status,2,c
 20878  00989C  D7E2               	goto	l2037
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;display.c: 253: cntr = 0;
 20882                           
 20883                           ; BSR set to: 1
 20884  00989E  0E00               	movlw	0
 20885  0098A0  6FD2               	movwf	__display_time@cntr& (0+255),b
 20886                           
 20887                           ;display.c: 254: while(pressminutes[cntr])
 20888  0098A2  D013               	goto	l2039
 20889  0098A4                     
 20890                           ; BSR set to: 1
 20891                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 20892                           
 20893                           ; BSR set to: 1
 20894  0098A4  51D2               	movf	__display_time@cntr& (0+255),w,b
 20895  0098A6  0D01               	mullw	1
 20896  0098A8  0E14               	movlw	low __display_time@pressminutes
 20897  0098AA  24F3               	addwf	prodl,w,c
 20898  0098AC  6ED9               	movwf	fsr2l,c
 20899  0098AE  0E01               	movlw	high __display_time@pressminutes
 20900  0098B0  20F4               	addwfc	prodh,w,c
 20901  0098B2  6EDA               	movwf	fsr2h,c
 20902  0098B4  51D2               	movf	__display_time@cntr& (0+255),w,b
 20903  0098B6  0D01               	mullw	1
 20904  0098B8  0E90               	movlw	low (_display_content+60)
 20905  0098BA  24F3               	addwf	prodl,w,c
 20906  0098BC  6EE1               	movwf	fsr1l,c
 20907  0098BE  0E03               	movlw	high (_display_content+60)
 20908  0098C0  20F4               	addwfc	prodh,w,c
 20909  0098C2  6EE2               	movwf	fsr1h,c
 20910  0098C4  CFDF FFE7          	movff	indf2,indf1
 20911                           
 20912                           ; BSR set to: 1
 20913  0098C8  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20914  0098CA                     l2039:
 20915                           
 20916                           ; BSR set to: 1
 20917                           
 20918                           ; BSR set to: 1
 20919  0098CA  51D2               	movf	__display_time@cntr& (0+255),w,b
 20920  0098CC  0D01               	mullw	1
 20921  0098CE  0E14               	movlw	low __display_time@pressminutes
 20922  0098D0  24F3               	addwf	prodl,w,c
 20923  0098D2  6ED9               	movwf	fsr2l,c
 20924  0098D4  0E01               	movlw	high __display_time@pressminutes
 20925  0098D6  20F4               	addwfc	prodh,w,c
 20926  0098D8  6EDA               	movwf	fsr2h,c
 20927  0098DA  50DF               	movf	indf2,w,c
 20928  0098DC  B4D8               	btfsc	status,2,c
 20929  0098DE  D09D               	goto	l2013
 20930  0098E0  D7E1               	goto	l2040
 20931  0098E2                     
 20932                           ; BSR set to: 1
 20933                           ;display.c: 259: cntr = 0;
 20934                           
 20935                           ; BSR set to: 1
 20936  0098E2  0E00               	movlw	0
 20937  0098E4  6FD2               	movwf	__display_time@cntr& (0+255),b
 20938                           
 20939                           ;display.c: 260: while(setminutes[cntr])
 20940  0098E6  D013               	goto	l2043
 20941  0098E8                     
 20942                           ; BSR set to: 1
 20943                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 20944                           
 20945                           ; BSR set to: 1
 20946  0098E8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20947  0098EA  0D01               	mullw	1
 20948  0098EC  0E8E               	movlw	low __display_time@setminutes
 20949  0098EE  24F3               	addwf	prodl,w,c
 20950  0098F0  6ED9               	movwf	fsr2l,c
 20951  0098F2  0E01               	movlw	high __display_time@setminutes
 20952  0098F4  20F4               	addwfc	prodh,w,c
 20953  0098F6  6EDA               	movwf	fsr2h,c
 20954  0098F8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20955  0098FA  0D01               	mullw	1
 20956  0098FC  0E54               	movlw	low _display_content
 20957  0098FE  24F3               	addwf	prodl,w,c
 20958  009900  6EE1               	movwf	fsr1l,c
 20959  009902  0E03               	movlw	high _display_content
 20960  009904  20F4               	addwfc	prodh,w,c
 20961  009906  6EE2               	movwf	fsr1h,c
 20962  009908  CFDF FFE7          	movff	indf2,indf1
 20963                           
 20964                           ; BSR set to: 1
 20965  00990C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20966  00990E                     l2043:
 20967                           
 20968                           ; BSR set to: 1
 20969                           
 20970                           ; BSR set to: 1
 20971  00990E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20972  009910  0D01               	mullw	1
 20973  009912  0E8E               	movlw	low __display_time@setminutes
 20974  009914  24F3               	addwf	prodl,w,c
 20975  009916  6ED9               	movwf	fsr2l,c
 20976  009918  0E01               	movlw	high __display_time@setminutes
 20977  00991A  20F4               	addwfc	prodh,w,c
 20978  00991C  6EDA               	movwf	fsr2h,c
 20979  00991E  50DF               	movf	indf2,w,c
 20980  009920  A4D8               	btfss	status,2,c
 20981  009922  D7E2               	goto	l2044
 20982                           
 20983                           ; BSR set to: 1
 20984                           ;display.c: 262: cntr = 0;
 20985                           
 20986                           ; BSR set to: 1
 20987  009924  0E00               	movlw	0
 20988  009926  6FD2               	movwf	__display_time@cntr& (0+255),b
 20989                           
 20990                           ;display.c: 263: while(pressseconds[cntr])
 20991  009928  D013               	goto	l2046
 20992  00992A                     
 20993                           ; BSR set to: 1
 20994                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 20995                           
 20996                           ; BSR set to: 1
 20997  00992A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20998  00992C  0D01               	mullw	1
 20999  00992E  0E28               	movlw	low __display_time@pressseconds
 21000  009930  24F3               	addwf	prodl,w,c
 21001  009932  6ED9               	movwf	fsr2l,c
 21002  009934  0E01               	movlw	high __display_time@pressseconds
 21003  009936  20F4               	addwfc	prodh,w,c
 21004  009938  6EDA               	movwf	fsr2h,c
 21005  00993A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21006  00993C  0D01               	mullw	1
 21007  00993E  0E90               	movlw	low (_display_content+60)
 21008  009940  24F3               	addwf	prodl,w,c
 21009  009942  6EE1               	movwf	fsr1l,c
 21010  009944  0E03               	movlw	high (_display_content+60)
 21011  009946  20F4               	addwfc	prodh,w,c
 21012  009948  6EE2               	movwf	fsr1h,c
 21013  00994A  CFDF FFE7          	movff	indf2,indf1
 21014                           
 21015                           ; BSR set to: 1
 21016  00994E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21017  009950                     l2046:
 21018                           
 21019                           ; BSR set to: 1
 21020                           
 21021                           ; BSR set to: 1
 21022  009950  51D2               	movf	__display_time@cntr& (0+255),w,b
 21023  009952  0D01               	mullw	1
 21024  009954  0E28               	movlw	low __display_time@pressseconds
 21025  009956  24F3               	addwf	prodl,w,c
 21026  009958  6ED9               	movwf	fsr2l,c
 21027  00995A  0E01               	movlw	high __display_time@pressseconds
 21028  00995C  20F4               	addwfc	prodh,w,c
 21029  00995E  6EDA               	movwf	fsr2h,c
 21030  009960  50DF               	movf	indf2,w,c
 21031  009962  B4D8               	btfsc	status,2,c
 21032  009964  D05A               	goto	l2013
 21033  009966  D7E1               	goto	l2047
 21034  009968                     
 21035                           ; BSR set to: 1
 21036                           ;display.c: 268: cntr = 0;
 21037                           
 21038                           ; BSR set to: 1
 21039  009968  0E00               	movlw	0
 21040  00996A  6FD2               	movwf	__display_time@cntr& (0+255),b
 21041                           
 21042                           ;display.c: 269: while(setseconds[cntr])
 21043  00996C  D013               	goto	l2050
 21044  00996E                     
 21045                           ; BSR set to: 1
 21046                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 21047                           
 21048                           ; BSR set to: 1
 21049  00996E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21050  009970  0D01               	mullw	1
 21051  009972  0E9A               	movlw	low __display_time@setseconds
 21052  009974  24F3               	addwf	prodl,w,c
 21053  009976  6ED9               	movwf	fsr2l,c
 21054  009978  0E01               	movlw	high __display_time@setseconds
 21055  00997A  20F4               	addwfc	prodh,w,c
 21056  00997C  6EDA               	movwf	fsr2h,c
 21057  00997E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21058  009980  0D01               	mullw	1
 21059  009982  0E54               	movlw	low _display_content
 21060  009984  24F3               	addwf	prodl,w,c
 21061  009986  6EE1               	movwf	fsr1l,c
 21062  009988  0E03               	movlw	high _display_content
 21063  00998A  20F4               	addwfc	prodh,w,c
 21064  00998C  6EE2               	movwf	fsr1h,c
 21065  00998E  CFDF FFE7          	movff	indf2,indf1
 21066                           
 21067                           ; BSR set to: 1
 21068  009992  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21069  009994                     l2050:
 21070                           
 21071                           ; BSR set to: 1
 21072                           
 21073                           ; BSR set to: 1
 21074  009994  51D2               	movf	__display_time@cntr& (0+255),w,b
 21075  009996  0D01               	mullw	1
 21076  009998  0E9A               	movlw	low __display_time@setseconds
 21077  00999A  24F3               	addwf	prodl,w,c
 21078  00999C  6ED9               	movwf	fsr2l,c
 21079  00999E  0E01               	movlw	high __display_time@setseconds
 21080  0099A0  20F4               	addwfc	prodh,w,c
 21081  0099A2  6EDA               	movwf	fsr2h,c
 21082  0099A4  50DF               	movf	indf2,w,c
 21083  0099A6  A4D8               	btfss	status,2,c
 21084  0099A8  D7E2               	goto	l2051
 21085                           
 21086                           ; BSR set to: 1
 21087                           ;display.c: 271: cntr = 0;
 21088                           
 21089                           ; BSR set to: 1
 21090  0099AA  0E00               	movlw	0
 21091  0099AC  6FD2               	movwf	__display_time@cntr& (0+255),b
 21092                           
 21093                           ;display.c: 272: while(presssave[cntr])
 21094  0099AE  D013               	goto	l2053
 21095  0099B0                     
 21096                           ; BSR set to: 1
 21097                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 21098                           
 21099                           ; BSR set to: 1
 21100  0099B0  51D2               	movf	__display_time@cntr& (0+255),w,b
 21101  0099B2  0D01               	mullw	1
 21102  0099B4  0E70               	movlw	low __display_time@presssave
 21103  0099B6  24F3               	addwf	prodl,w,c
 21104  0099B8  6ED9               	movwf	fsr2l,c
 21105  0099BA  0E01               	movlw	high __display_time@presssave
 21106  0099BC  20F4               	addwfc	prodh,w,c
 21107  0099BE  6EDA               	movwf	fsr2h,c
 21108  0099C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 21109  0099C2  0D01               	mullw	1
 21110  0099C4  0E90               	movlw	low (_display_content+60)
 21111  0099C6  24F3               	addwf	prodl,w,c
 21112  0099C8  6EE1               	movwf	fsr1l,c
 21113  0099CA  0E03               	movlw	high (_display_content+60)
 21114  0099CC  20F4               	addwfc	prodh,w,c
 21115  0099CE  6EE2               	movwf	fsr1h,c
 21116  0099D0  CFDF FFE7          	movff	indf2,indf1
 21117                           
 21118                           ; BSR set to: 1
 21119  0099D4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21120  0099D6                     l2053:
 21121                           
 21122                           ; BSR set to: 1
 21123                           
 21124                           ; BSR set to: 1
 21125  0099D6  51D2               	movf	__display_time@cntr& (0+255),w,b
 21126  0099D8  0D01               	mullw	1
 21127  0099DA  0E70               	movlw	low __display_time@presssave
 21128  0099DC  24F3               	addwf	prodl,w,c
 21129  0099DE  6ED9               	movwf	fsr2l,c
 21130  0099E0  0E01               	movlw	high __display_time@presssave
 21131  0099E2  20F4               	addwfc	prodh,w,c
 21132  0099E4  6EDA               	movwf	fsr2h,c
 21133  0099E6  50DF               	movf	indf2,w,c
 21134  0099E8  B4D8               	btfsc	status,2,c
 21135  0099EA  D017               	goto	l2013
 21136  0099EC  D7E1               	goto	l2054
 21137  0099EE                     l2005:
 21138                           
 21139                           ; BSR set to: 1
 21140                           
 21141                           ; BSR set to: 1
 21142  0099EE  51CB               	movf	__display_time@mode& (0+255),w,b
 21143                           
 21144                           ; Switch size 1, requested type "space"
 21145                           ; Number of cases is 7, Range of values is 16 to 22
 21146                           ; switch strategies available:
 21147                           ; Name         Instructions Cycles
 21148                           ; simple_byte           22    12 (average)
 21149                           ;	Chosen strategy is simple_byte
 21150  0099F0  0A10               	xorlw	16	; case 16
 21151  0099F2  B4D8               	btfsc	status,2,c
 21152  0099F4  D627               	goto	l2006
 21153  0099F6  0A01               	xorlw	1	; case 17
 21154  0099F8  B4D8               	btfsc	status,2,c
 21155  0099FA  D667               	goto	l2014
 21156  0099FC  0A03               	xorlw	3	; case 18
 21157  0099FE  B4D8               	btfsc	status,2,c
 21158  009A00  D6A7               	goto	l2021
 21159  009A02  0A01               	xorlw	1	; case 19
 21160  009A04  B4D8               	btfsc	status,2,c
 21161  009A06  D6E7               	goto	l2028
 21162  009A08  0A07               	xorlw	7	; case 20
 21163  009A0A  B4D8               	btfsc	status,2,c
 21164  009A0C  D727               	goto	l2035
 21165  009A0E  0A01               	xorlw	1	; case 21
 21166  009A10  B4D8               	btfsc	status,2,c
 21167  009A12  D767               	goto	l2042
 21168  009A14  0A03               	xorlw	3	; case 22
 21169  009A16  B4D8               	btfsc	status,2,c
 21170  009A18  D7A7               	goto	l2049
 21171  009A1A                     l2013:
 21172                           
 21173                           ; BSR set to: 1
 21174                           ;display.c: 278: display_content[1][0] = '2';
 21175                           
 21176                           ; BSR set to: 1
 21177  009A1A  0E32               	movlw	50
 21178  009A1C  0103               	movlb	3	; () banked
 21179  009A1E  6F68               	movwf	(_display_content+20)& (0+255),b
 21180                           
 21181                           ;display.c: 279: display_content[1][1] = '0';
 21182  009A20  0E30               	movlw	48
 21183  009A22  6F69               	movwf	(_display_content+21)& (0+255),b
 21184                           
 21185                           ; BSR set to: 3
 21186                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 21187  009A24  0101               	movlb	1	; () banked
 21188  009A26  39CC               	swapf	__display_time@year& (0+255),w,b
 21189  009A28  0B0F               	andlw	15
 21190  009A2A  0F30               	addlw	48
 21191  009A2C  0103               	movlb	3	; () banked
 21192  009A2E  6F6A               	movwf	(_display_content+22)& (0+255),b
 21193                           
 21194                           ; BSR set to: 3
 21195                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 21196  009A30  0101               	movlb	1	; () banked
 21197  009A32  51CC               	movf	__display_time@year& (0+255),w,b
 21198  009A34  0B0F               	andlw	15
 21199  009A36  0F30               	addlw	48
 21200  009A38  0103               	movlb	3	; () banked
 21201  009A3A  6F6B               	movwf	(_display_content+23)& (0+255),b
 21202                           
 21203                           ;display.c: 283: display_content[1][4] = '-';
 21204  009A3C  0E2D               	movlw	45
 21205  009A3E  6F6C               	movwf	(_display_content+24)& (0+255),b
 21206                           
 21207                           ; BSR set to: 3
 21208                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 21209  009A40  0101               	movlb	1	; () banked
 21210  009A42  39CD               	swapf	__display_time@month& (0+255),w,b
 21211  009A44  0B0F               	andlw	15
 21212  009A46  0F30               	addlw	48
 21213  009A48  0103               	movlb	3	; () banked
 21214  009A4A  6F6D               	movwf	(_display_content+25)& (0+255),b
 21215                           
 21216                           ; BSR set to: 3
 21217                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 21218  009A4C  0101               	movlb	1	; () banked
 21219  009A4E  51CD               	movf	__display_time@month& (0+255),w,b
 21220  009A50  0B0F               	andlw	15
 21221  009A52  0F30               	addlw	48
 21222  009A54  0103               	movlb	3	; () banked
 21223  009A56  6F6E               	movwf	(_display_content+26)& (0+255),b
 21224                           
 21225                           ;display.c: 287: display_content[1][7] = '-';
 21226  009A58  0E2D               	movlw	45
 21227  009A5A  6F6F               	movwf	(_display_content+27)& (0+255),b
 21228                           
 21229                           ; BSR set to: 3
 21230                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 21231  009A5C  0101               	movlb	1	; () banked
 21232  009A5E  39CE               	swapf	__display_time@day& (0+255),w,b
 21233  009A60  0B0F               	andlw	15
 21234  009A62  0F30               	addlw	48
 21235  009A64  0103               	movlb	3	; () banked
 21236  009A66  6F70               	movwf	(_display_content+28)& (0+255),b
 21237                           
 21238                           ; BSR set to: 3
 21239                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 21240  009A68  0101               	movlb	1	; () banked
 21241  009A6A  51CE               	movf	__display_time@day& (0+255),w,b
 21242  009A6C  0B0F               	andlw	15
 21243  009A6E  0F30               	addlw	48
 21244  009A70  0103               	movlb	3	; () banked
 21245  009A72  6F71               	movwf	(_display_content+29)& (0+255),b
 21246                           
 21247                           ; BSR set to: 3
 21248                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 21249  009A74  0101               	movlb	1	; () banked
 21250  009A76  39CF               	swapf	__display_time@hours& (0+255),w,b
 21251  009A78  0B0F               	andlw	15
 21252  009A7A  0F30               	addlw	48
 21253  009A7C  0103               	movlb	3	; () banked
 21254  009A7E  6F7C               	movwf	(_display_content+40)& (0+255),b
 21255                           
 21256                           ; BSR set to: 3
 21257                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 21258  009A80  0101               	movlb	1	; () banked
 21259  009A82  51CF               	movf	__display_time@hours& (0+255),w,b
 21260  009A84  0B0F               	andlw	15
 21261  009A86  0F30               	addlw	48
 21262  009A88  0103               	movlb	3	; () banked
 21263  009A8A  6F7D               	movwf	(_display_content+41)& (0+255),b
 21264                           
 21265                           ;display.c: 294: display_content[2][2] = ':';
 21266  009A8C  0E3A               	movlw	58
 21267  009A8E  6F7E               	movwf	(_display_content+42)& (0+255),b
 21268                           
 21269                           ; BSR set to: 3
 21270                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 21271  009A90  0101               	movlb	1	; () banked
 21272  009A92  39D0               	swapf	__display_time@minutes& (0+255),w,b
 21273  009A94  0B0F               	andlw	15
 21274  009A96  0F30               	addlw	48
 21275  009A98  0103               	movlb	3	; () banked
 21276  009A9A  6F7F               	movwf	(_display_content+43)& (0+255),b
 21277                           
 21278                           ; BSR set to: 3
 21279                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 21280  009A9C  0101               	movlb	1	; () banked
 21281  009A9E  51D0               	movf	__display_time@minutes& (0+255),w,b
 21282  009AA0  0B0F               	andlw	15
 21283  009AA2  0F30               	addlw	48
 21284  009AA4  0103               	movlb	3	; () banked
 21285  009AA6  6F80               	movwf	(_display_content+44)& (0+255),b
 21286                           
 21287                           ;display.c: 298: display_content[2][5] = ':';
 21288  009AA8  0E3A               	movlw	58
 21289  009AAA  6F81               	movwf	(_display_content+45)& (0+255),b
 21290                           
 21291                           ; BSR set to: 3
 21292                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 21293  009AAC  0101               	movlb	1	; () banked
 21294  009AAE  39D1               	swapf	__display_time@seconds& (0+255),w,b
 21295  009AB0  0B0F               	andlw	15
 21296  009AB2  0F30               	addlw	48
 21297  009AB4  0103               	movlb	3	; () banked
 21298  009AB6  6F82               	movwf	(_display_content+46)& (0+255),b
 21299                           
 21300                           ; BSR set to: 3
 21301                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 21302  009AB8  0101               	movlb	1	; () banked
 21303  009ABA  51D1               	movf	__display_time@seconds& (0+255),w,b
 21304  009ABC  0B0F               	andlw	15
 21305  009ABE  0F30               	addlw	48
 21306  009AC0  0103               	movlb	3	; () banked
 21307  009AC2  6F83               	movwf	(_display_content+47)& (0+255),b
 21308                           
 21309                           ; BSR set to: 3
 21310  009AC4  0012               	return		;funcret
 21311  009AC6                     __end_of__display_time:
 21312                           	opt stack 0
 21313                           tblptru	equ	0xFF8
 21314                           tblptrh	equ	0xFF7
 21315                           tblptrl	equ	0xFF6
 21316                           tablat	equ	0xFF5
 21317                           prodh	equ	0xFF4
 21318                           prodl	equ	0xFF3
 21319                           intcon	equ	0xFF2
 21320                           intcon2	equ	0xFF1
 21321                           intcon3	equ	0xFF0
 21322                           postinc0	equ	0xFEE
 21323                           wreg	equ	0xFE8
 21324                           indf1	equ	0xFE7
 21325                           postinc1	equ	0xFE6
 21326                           postdec1	equ	0xFE5
 21327                           plusw1	equ	0xFE3
 21328                           fsr1h	equ	0xFE2
 21329                           fsr1l	equ	0xFE1
 21330                           indf2	equ	0xFDF
 21331                           postinc2	equ	0xFDE
 21332                           postdec2	equ	0xFDD
 21333                           plusw2	equ	0xFDB
 21334                           fsr2h	equ	0xFDA
 21335                           fsr2l	equ	0xFD9
 21336                           status	equ	0xFD8
 21337                           
 21338 ;; *************** function __display_temperature *****************
 21339 ;; Defined at:
 21340 ;;		line 513 in file "display.c"
 21341 ;; Parameters:    Size  Location     Type
 21342 ;;		None
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;  header         20   48[BANK0 ] const unsigned char [20]
 21345 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 21346 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 21347 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 21348 ;;  cntr            1  103[BANK0 ] unsigned char 
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  1    wreg      void 
 21351 ;; Registers used:
 21352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21353 ;; Tracked objects:
 21354 ;;		On entry : 0/0
 21355 ;;		On exit  : 0/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21359 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21361 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21362 ;;Total ram usage:       56 bytes
 21363 ;; Hardware stack levels used:    1
 21364 ;; Hardware stack levels required when called:   14
 21365 ;; This function calls:
 21366 ;;		__display_itoa
 21367 ;; This function is called by:
 21368 ;;		_display_prepare
 21369 ;; This function uses a non-reentrant model
 21370 ;;
 21371                           
 21372                           	psect	text101
 21373  00D14A                     __ptext101:
 21374                           	opt stack 0
 21375  00D14A                     __display_temperature:
 21376                           	opt stack 15
 21377                           
 21378                           ;display.c: 515: uint8_t cntr;
 21379                           ;display.c: 516: const char header[] = "Temperature Monitor";
 21380                           
 21381                           ; BSR set to: 3
 21382                           ;incstack = 0
 21383  00D14A  0EFF               	movlw	low __display_temperature@F8779
 21384  00D14C  6EF6               	movwf	tblptrl,c
 21385  00D14E                     	if	1	;There is more than 1 active tblptr byte
 21386  00D14E  0E90               	movlw	high __display_temperature@F8779
 21387  00D150  6EF7               	movwf	tblptrh,c
 21388  00D152                     	endif
 21389  00D152                     	if	1	;There are 3 active tblptr bytes
 21390  00D152  0E00               	movlw	low (__display_temperature@F8779 shr (0+16))
 21391  00D154  6EF8               	movwf	tblptru,c
 21392  00D156                     	endif
 21393  00D156  EE20  F090         	lfsr	2,__display_temperature@header
 21394  00D15A  0E13               	movlw	19
 21395  00D15C                     u14140:
 21396  00D15C  0009               	tblrd		*+
 21397  00D15E  CFF5 FFDE          	movff	tablat,postinc2
 21398  00D162  06E8               	decf	wreg,f,c
 21399  00D164  E2FB               	bc	u14140
 21400                           
 21401                           ;display.c: 517: const char internal[] = "On-board: ";
 21402  00D166  0EEF               	movlw	low __display_temperature@F8781
 21403  00D168  6EF6               	movwf	tblptrl,c
 21404  00D16A                     	if	1	;There is more than 1 active tblptr byte
 21405  00D16A  0E92               	movlw	high __display_temperature@F8781
 21406  00D16C  6EF7               	movwf	tblptrh,c
 21407  00D16E                     	endif
 21408  00D16E                     	if	1	;There are 3 active tblptr bytes
 21409  00D16E  0E00               	movlw	low (__display_temperature@F8781 shr (0+16))
 21410  00D170  6EF8               	movwf	tblptru,c
 21411  00D172                     	endif
 21412  00D172  EE20  F0BC         	lfsr	2,__display_temperature@internal
 21413  00D176  0E0A               	movlw	10
 21414  00D178                     u14150:
 21415  00D178  0009               	tblrd		*+
 21416  00D17A  CFF5 FFDE          	movff	tablat,postinc2
 21417  00D17E  06E8               	decf	wreg,f,c
 21418  00D180  E2FB               	bc	u14150
 21419                           
 21420                           ;display.c: 518: const char external1[] = "External 1:";
 21421  00D182  0EBF               	movlw	low __display_temperature@F8783
 21422  00D184  6EF6               	movwf	tblptrl,c
 21423  00D186                     	if	1	;There is more than 1 active tblptr byte
 21424  00D186  0E92               	movlw	high __display_temperature@F8783
 21425  00D188  6EF7               	movwf	tblptrh,c
 21426  00D18A                     	endif
 21427  00D18A                     	if	1	;There are 3 active tblptr bytes
 21428  00D18A  0E00               	movlw	low (__display_temperature@F8783 shr (0+16))
 21429  00D18C  6EF8               	movwf	tblptru,c
 21430  00D18E                     	endif
 21431  00D18E  EE20  F0A4         	lfsr	2,__display_temperature@external1
 21432  00D192  0E0B               	movlw	11
 21433  00D194                     u14160:
 21434  00D194  0009               	tblrd		*+
 21435  00D196  CFF5 FFDE          	movff	tablat,postinc2
 21436  00D19A  06E8               	decf	wreg,f,c
 21437  00D19C  E2FB               	bc	u14160
 21438                           
 21439                           ;display.c: 519: const char external2[] = "External 2:";
 21440  00D19E  0EB3               	movlw	low __display_temperature@F8785
 21441  00D1A0  6EF6               	movwf	tblptrl,c
 21442  00D1A2                     	if	1	;There is more than 1 active tblptr byte
 21443  00D1A2  0E92               	movlw	high __display_temperature@F8785
 21444  00D1A4  6EF7               	movwf	tblptrh,c
 21445  00D1A6                     	endif
 21446  00D1A6                     	if	1	;There are 3 active tblptr bytes
 21447  00D1A6  0E00               	movlw	low (__display_temperature@F8785 shr (0+16))
 21448  00D1A8  6EF8               	movwf	tblptru,c
 21449  00D1AA                     	endif
 21450  00D1AA  EE20  F0B0         	lfsr	2,__display_temperature@external2
 21451  00D1AE  0E0B               	movlw	11
 21452  00D1B0                     u14170:
 21453  00D1B0  0009               	tblrd		*+
 21454  00D1B2  CFF5 FFDE          	movff	tablat,postinc2
 21455  00D1B6  06E8               	decf	wreg,f,c
 21456  00D1B8  E2FB               	bc	u14170
 21457                           
 21458                           ;display.c: 521: cntr = 0;
 21459  00D1BA  0E00               	movlw	0
 21460  00D1BC  0100               	movlb	0	; () banked
 21461  00D1BE  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21462                           
 21463                           ;display.c: 522: while(header[cntr])
 21464  00D1C0  D013               	goto	l2197
 21465  00D1C2                     
 21466                           ; BSR set to: 0
 21467                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 21468                           
 21469                           ; BSR set to: 0
 21470  00D1C2  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21471  00D1C4  0D01               	mullw	1
 21472  00D1C6  0E90               	movlw	low __display_temperature@header
 21473  00D1C8  24F3               	addwf	prodl,w,c
 21474  00D1CA  6ED9               	movwf	fsr2l,c
 21475  00D1CC  0E00               	movlw	high __display_temperature@header
 21476  00D1CE  20F4               	addwfc	prodh,w,c
 21477  00D1D0  6EDA               	movwf	fsr2h,c
 21478  00D1D2  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21479  00D1D4  0D01               	mullw	1
 21480  00D1D6  0E54               	movlw	low _display_content
 21481  00D1D8  24F3               	addwf	prodl,w,c
 21482  00D1DA  6EE1               	movwf	fsr1l,c
 21483  00D1DC  0E03               	movlw	high _display_content
 21484  00D1DE  20F4               	addwfc	prodh,w,c
 21485  00D1E0  6EE2               	movwf	fsr1h,c
 21486  00D1E2  CFDF FFE7          	movff	indf2,indf1
 21487                           
 21488                           ; BSR set to: 0
 21489  00D1E6  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21490  00D1E8                     l2197:
 21491                           
 21492                           ; BSR set to: 0
 21493                           
 21494                           ; BSR set to: 0
 21495  00D1E8  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21496  00D1EA  0D01               	mullw	1
 21497  00D1EC  0E90               	movlw	low __display_temperature@header
 21498  00D1EE  24F3               	addwf	prodl,w,c
 21499  00D1F0  6ED9               	movwf	fsr2l,c
 21500  00D1F2  0E00               	movlw	high __display_temperature@header
 21501  00D1F4  20F4               	addwfc	prodh,w,c
 21502  00D1F6  6EDA               	movwf	fsr2h,c
 21503  00D1F8  50DF               	movf	indf2,w,c
 21504  00D1FA  A4D8               	btfss	status,2,c
 21505  00D1FC  D7E2               	goto	l2198
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;display.c: 525: cntr = 0;
 21509                           
 21510                           ; BSR set to: 0
 21511  00D1FE  0E00               	movlw	0
 21512  00D200  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21513                           
 21514                           ;display.c: 526: while(internal[cntr])
 21515  00D202  D013               	goto	l2200
 21516  00D204                     
 21517                           ; BSR set to: 0
 21518                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 21519                           
 21520                           ; BSR set to: 0
 21521  00D204  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21522  00D206  0D01               	mullw	1
 21523  00D208  0EBC               	movlw	low __display_temperature@internal
 21524  00D20A  24F3               	addwf	prodl,w,c
 21525  00D20C  6ED9               	movwf	fsr2l,c
 21526  00D20E  0E00               	movlw	high __display_temperature@internal
 21527  00D210  20F4               	addwfc	prodh,w,c
 21528  00D212  6EDA               	movwf	fsr2h,c
 21529  00D214  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21530  00D216  0D01               	mullw	1
 21531  00D218  0E68               	movlw	low (_display_content+20)
 21532  00D21A  24F3               	addwf	prodl,w,c
 21533  00D21C  6EE1               	movwf	fsr1l,c
 21534  00D21E  0E03               	movlw	high (_display_content+20)
 21535  00D220  20F4               	addwfc	prodh,w,c
 21536  00D222  6EE2               	movwf	fsr1h,c
 21537  00D224  CFDF FFE7          	movff	indf2,indf1
 21538                           
 21539                           ; BSR set to: 0
 21540  00D228  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21541  00D22A                     l2200:
 21542                           
 21543                           ; BSR set to: 0
 21544                           
 21545                           ; BSR set to: 0
 21546  00D22A  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21547  00D22C  0D01               	mullw	1
 21548  00D22E  0EBC               	movlw	low __display_temperature@internal
 21549  00D230  24F3               	addwf	prodl,w,c
 21550  00D232  6ED9               	movwf	fsr2l,c
 21551  00D234  0E00               	movlw	high __display_temperature@internal
 21552  00D236  20F4               	addwfc	prodh,w,c
 21553  00D238  6EDA               	movwf	fsr2h,c
 21554  00D23A  50DF               	movf	indf2,w,c
 21555  00D23C  A4D8               	btfss	status,2,c
 21556  00D23E  D7E2               	goto	l2201
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 21560                           
 21561                           ; BSR set to: 0
 21562  00D240  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 21563  00D244  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 21564  00D248  0E02               	movlw	2
 21565  00D24A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21566  00D24C  0E74               	movlw	low (_display_content+32)
 21567  00D24E  6F7B               	movwf	__display_itoa@text& (0+255),b
 21568  00D250  0E03               	movlw	high (_display_content+32)
 21569  00D252  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21570  00D254  ECBC  F065         	call	__display_itoa	;wreg free
 21571                           
 21572                           ;display.c: 531: cntr = 0;
 21573  00D258  0E00               	movlw	0
 21574  00D25A  0100               	movlb	0	; () banked
 21575  00D25C  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21576                           
 21577                           ;display.c: 532: while(external1[cntr])
 21578  00D25E  D013               	goto	l2203
 21579  00D260                     
 21580                           ; BSR set to: 0
 21581                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 21582                           
 21583                           ; BSR set to: 0
 21584  00D260  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21585  00D262  0D01               	mullw	1
 21586  00D264  0EA4               	movlw	low __display_temperature@external1
 21587  00D266  24F3               	addwf	prodl,w,c
 21588  00D268  6ED9               	movwf	fsr2l,c
 21589  00D26A  0E00               	movlw	high __display_temperature@external1
 21590  00D26C  20F4               	addwfc	prodh,w,c
 21591  00D26E  6EDA               	movwf	fsr2h,c
 21592  00D270  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21593  00D272  0D01               	mullw	1
 21594  00D274  0E7C               	movlw	low (_display_content+40)
 21595  00D276  24F3               	addwf	prodl,w,c
 21596  00D278  6EE1               	movwf	fsr1l,c
 21597  00D27A  0E03               	movlw	high (_display_content+40)
 21598  00D27C  20F4               	addwfc	prodh,w,c
 21599  00D27E  6EE2               	movwf	fsr1h,c
 21600  00D280  CFDF FFE7          	movff	indf2,indf1
 21601                           
 21602                           ; BSR set to: 0
 21603  00D284  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21604  00D286                     l2203:
 21605                           
 21606                           ; BSR set to: 0
 21607                           
 21608                           ; BSR set to: 0
 21609  00D286  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21610  00D288  0D01               	mullw	1
 21611  00D28A  0EA4               	movlw	low __display_temperature@external1
 21612  00D28C  24F3               	addwf	prodl,w,c
 21613  00D28E  6ED9               	movwf	fsr2l,c
 21614  00D290  0E00               	movlw	high __display_temperature@external1
 21615  00D292  20F4               	addwfc	prodh,w,c
 21616  00D294  6EDA               	movwf	fsr2h,c
 21617  00D296  50DF               	movf	indf2,w,c
 21618  00D298  A4D8               	btfss	status,2,c
 21619  00D29A  D7E2               	goto	l2204
 21620                           
 21621                           ; BSR set to: 0
 21622                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 21623                           
 21624                           ; BSR set to: 0
 21625  00D29C  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 21626  00D2A0  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 21627  00D2A4  0E02               	movlw	2
 21628  00D2A6  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21629  00D2A8  0E88               	movlw	low (_display_content+52)
 21630  00D2AA  6F7B               	movwf	__display_itoa@text& (0+255),b
 21631  00D2AC  0E03               	movlw	high (_display_content+52)
 21632  00D2AE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21633  00D2B0  ECBC  F065         	call	__display_itoa	;wreg free
 21634                           
 21635                           ;display.c: 537: cntr = 0;
 21636  00D2B4  0E00               	movlw	0
 21637  00D2B6  0100               	movlb	0	; () banked
 21638  00D2B8  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21639                           
 21640                           ;display.c: 538: while(external2[cntr])
 21641  00D2BA  D013               	goto	l2206
 21642  00D2BC                     
 21643                           ; BSR set to: 0
 21644                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 21645                           
 21646                           ; BSR set to: 0
 21647  00D2BC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21648  00D2BE  0D01               	mullw	1
 21649  00D2C0  0EB0               	movlw	low __display_temperature@external2
 21650  00D2C2  24F3               	addwf	prodl,w,c
 21651  00D2C4  6ED9               	movwf	fsr2l,c
 21652  00D2C6  0E00               	movlw	high __display_temperature@external2
 21653  00D2C8  20F4               	addwfc	prodh,w,c
 21654  00D2CA  6EDA               	movwf	fsr2h,c
 21655  00D2CC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21656  00D2CE  0D01               	mullw	1
 21657  00D2D0  0E90               	movlw	low (_display_content+60)
 21658  00D2D2  24F3               	addwf	prodl,w,c
 21659  00D2D4  6EE1               	movwf	fsr1l,c
 21660  00D2D6  0E03               	movlw	high (_display_content+60)
 21661  00D2D8  20F4               	addwfc	prodh,w,c
 21662  00D2DA  6EE2               	movwf	fsr1h,c
 21663  00D2DC  CFDF FFE7          	movff	indf2,indf1
 21664                           
 21665                           ; BSR set to: 0
 21666  00D2E0  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21667  00D2E2                     l2206:
 21668                           
 21669                           ; BSR set to: 0
 21670                           
 21671                           ; BSR set to: 0
 21672  00D2E2  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21673  00D2E4  0D01               	mullw	1
 21674  00D2E6  0EB0               	movlw	low __display_temperature@external2
 21675  00D2E8  24F3               	addwf	prodl,w,c
 21676  00D2EA  6ED9               	movwf	fsr2l,c
 21677  00D2EC  0E00               	movlw	high __display_temperature@external2
 21678  00D2EE  20F4               	addwfc	prodh,w,c
 21679  00D2F0  6EDA               	movwf	fsr2h,c
 21680  00D2F2  50DF               	movf	indf2,w,c
 21681  00D2F4  A4D8               	btfss	status,2,c
 21682  00D2F6  D7E2               	goto	l2207
 21683                           
 21684                           ; BSR set to: 0
 21685                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 21686                           
 21687                           ; BSR set to: 0
 21688  00D2F8  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 21689  00D2FC  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 21690  00D300  0E02               	movlw	2
 21691  00D302  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21692  00D304  0E9C               	movlw	low (_display_content+72)
 21693  00D306  6F7B               	movwf	__display_itoa@text& (0+255),b
 21694  00D308  0E03               	movlw	high (_display_content+72)
 21695  00D30A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21696  00D30C  ECBC  F065         	call	__display_itoa	;wreg free
 21697  00D310  0012               	return		;funcret
 21698  00D312                     __end_of__display_temperature:
 21699                           	opt stack 0
 21700                           tblptru	equ	0xFF8
 21701                           tblptrh	equ	0xFF7
 21702                           tblptrl	equ	0xFF6
 21703                           tablat	equ	0xFF5
 21704                           prodh	equ	0xFF4
 21705                           prodl	equ	0xFF3
 21706                           intcon	equ	0xFF2
 21707                           intcon2	equ	0xFF1
 21708                           intcon3	equ	0xFF0
 21709                           postinc0	equ	0xFEE
 21710                           wreg	equ	0xFE8
 21711                           indf1	equ	0xFE7
 21712                           postinc1	equ	0xFE6
 21713                           postdec1	equ	0xFE5
 21714                           plusw1	equ	0xFE3
 21715                           fsr1h	equ	0xFE2
 21716                           fsr1l	equ	0xFE1
 21717                           indf2	equ	0xFDF
 21718                           postinc2	equ	0xFDE
 21719                           postdec2	equ	0xFDD
 21720                           plusw2	equ	0xFDB
 21721                           fsr2h	equ	0xFDA
 21722                           fsr2l	equ	0xFD9
 21723                           status	equ	0xFD8
 21724                           
 21725 ;; *************** function __display_outputs *****************
 21726 ;; Defined at:
 21727 ;;		line 336 in file "display.c"
 21728 ;; Parameters:    Size  Location     Type
 21729 ;;  mode            1    wreg     unsigned char 
 21730 ;; Auto vars:     Size  Location     Type
 21731 ;;  mode            1   72[BANK0 ] unsigned char 
 21732 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 21733 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 21734 ;;  low            16   42[BANK0 ] const unsigned char [16]
 21735 ;;  header         14   58[BANK0 ] const unsigned char [14]
 21736 ;;  cntr            1   73[BANK0 ] unsigned char 
 21737 ;; Return value:  Size  Location     Type
 21738 ;;                  1    wreg      void 
 21739 ;; Registers used:
 21740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21741 ;; Tracked objects:
 21742 ;;		On entry : 0/0
 21743 ;;		On exit  : 0/0
 21744 ;;		Unchanged: 0/0
 21745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21747 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21749 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21750 ;;Total ram usage:       74 bytes
 21751 ;; Hardware stack levels used:    1
 21752 ;; Hardware stack levels required when called:   10
 21753 ;; This function calls:
 21754 ;;		Nothing
 21755 ;; This function is called by:
 21756 ;;		_display_prepare
 21757 ;; This function uses a non-reentrant model
 21758 ;;
 21759                           
 21760                           	psect	text102
 21761  00C956                     __ptext102:
 21762                           	opt stack 0
 21763  00C956                     __display_outputs:
 21764                           	opt stack 19
 21765                           
 21766                           ;incstack = 0
 21767                           ;__display_outputs@mode stored from wreg
 21768  00C956  0100               	movlb	0	; () banked
 21769  00C958  6FA8               	movwf	__display_outputs@mode& (0+255),b
 21770                           
 21771                           ;display.c: 338: uint8_t cntr;
 21772                           ;display.c: 339: const char header[] = "Power Outputs";
 21773  00C95A  0E89               	movlw	low __display_outputs@F8728
 21774  00C95C  6EF6               	movwf	tblptrl,c
 21775  00C95E                     	if	1	;There is more than 1 active tblptr byte
 21776  00C95E  0E92               	movlw	high __display_outputs@F8728
 21777  00C960  6EF7               	movwf	tblptrh,c
 21778  00C962                     	endif
 21779  00C962                     	if	1	;There are 3 active tblptr bytes
 21780  00C962  0E00               	movlw	low (__display_outputs@F8728 shr (0+16))
 21781  00C964  6EF8               	movwf	tblptru,c
 21782  00C966                     	endif
 21783  00C966  EE20  F09A         	lfsr	2,__display_outputs@header
 21784  00C96A  0E0D               	movlw	13
 21785  00C96C                     u13780:
 21786  00C96C  0009               	tblrd		*+
 21787  00C96E  CFF5 FFDE          	movff	tablat,postinc2
 21788  00C972  06E8               	decf	wreg,f,c
 21789  00C974  E2FB               	bc	u13780
 21790                           
 21791                           ;display.c: 340: const char low[] = "Battery too low";
 21792  00C976  0E2B               	movlw	low __display_outputs@F8730
 21793  00C978  6EF6               	movwf	tblptrl,c
 21794  00C97A                     	if	1	;There is more than 1 active tblptr byte
 21795  00C97A  0E92               	movlw	high __display_outputs@F8730
 21796  00C97C  6EF7               	movwf	tblptrh,c
 21797  00C97E                     	endif
 21798  00C97E                     	if	1	;There are 3 active tblptr bytes
 21799  00C97E  0E00               	movlw	low (__display_outputs@F8730 shr (0+16))
 21800  00C980  6EF8               	movwf	tblptru,c
 21801  00C982                     	endif
 21802  00C982  EE20  F08A         	lfsr	2,__display_outputs@low
 21803  00C986  0E0F               	movlw	15
 21804  00C988                     u13790:
 21805  00C988  0009               	tblrd		*+
 21806  00C98A  CFF5 FFDE          	movff	tablat,postinc2
 21807  00C98E  06E8               	decf	wreg,f,c
 21808  00C990  E2FB               	bc	u13790
 21809                           
 21810                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 21811  00C992  0EEA               	movlw	low __display_outputs@F8732
 21812  00C994  6EF6               	movwf	tblptrl,c
 21813  00C996                     	if	1	;There is more than 1 active tblptr byte
 21814  00C996  0E90               	movlw	high __display_outputs@F8732
 21815  00C998  6EF7               	movwf	tblptrh,c
 21816  00C99A                     	endif
 21817  00C99A                     	if	1	;There are 3 active tblptr bytes
 21818  00C99A  0E00               	movlw	low (__display_outputs@F8732 shr (0+16))
 21819  00C99C  6EF8               	movwf	tblptru,c
 21820  00C99E                     	endif
 21821  00C99E  EE20  F060         	lfsr	2,__display_outputs@line3
 21822  00C9A2  0E14               	movlw	20
 21823  00C9A4                     u13800:
 21824  00C9A4  0009               	tblrd		*+
 21825  00C9A6  CFF5 FFDE          	movff	tablat,postinc2
 21826  00C9AA  06E8               	decf	wreg,f,c
 21827  00C9AC  E2FB               	bc	u13800
 21828                           
 21829                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 21830  00C9AE  0ED5               	movlw	low __display_outputs@F8734
 21831  00C9B0  6EF6               	movwf	tblptrl,c
 21832  00C9B2                     	if	1	;There is more than 1 active tblptr byte
 21833  00C9B2  0E90               	movlw	high __display_outputs@F8734
 21834  00C9B4  6EF7               	movwf	tblptrh,c
 21835  00C9B6                     	endif
 21836  00C9B6                     	if	1	;There are 3 active tblptr bytes
 21837  00C9B6  0E00               	movlw	low (__display_outputs@F8734 shr (0+16))
 21838  00C9B8  6EF8               	movwf	tblptru,c
 21839  00C9BA                     	endif
 21840  00C9BA  EE20  F075         	lfsr	2,__display_outputs@line4
 21841  00C9BE  0E14               	movlw	20
 21842  00C9C0                     u13810:
 21843  00C9C0  0009               	tblrd		*+
 21844  00C9C2  CFF5 FFDE          	movff	tablat,postinc2
 21845  00C9C6  06E8               	decf	wreg,f,c
 21846  00C9C8  E2FB               	bc	u13810
 21847                           
 21848                           ;display.c: 344: cntr = 0;
 21849  00C9CA  0E00               	movlw	0
 21850  00C9CC  0100               	movlb	0	; () banked
 21851  00C9CE  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21852                           
 21853                           ;display.c: 345: while(header[cntr])
 21854  00C9D0  D013               	goto	l2093
 21855  00C9D2                     
 21856                           ; BSR set to: 0
 21857                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 21858                           
 21859                           ; BSR set to: 0
 21860  00C9D2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21861  00C9D4  0D01               	mullw	1
 21862  00C9D6  0E9A               	movlw	low __display_outputs@header
 21863  00C9D8  24F3               	addwf	prodl,w,c
 21864  00C9DA  6ED9               	movwf	fsr2l,c
 21865  00C9DC  0E00               	movlw	high __display_outputs@header
 21866  00C9DE  20F4               	addwfc	prodh,w,c
 21867  00C9E0  6EDA               	movwf	fsr2h,c
 21868  00C9E2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21869  00C9E4  0D01               	mullw	1
 21870  00C9E6  0E54               	movlw	low _display_content
 21871  00C9E8  24F3               	addwf	prodl,w,c
 21872  00C9EA  6EE1               	movwf	fsr1l,c
 21873  00C9EC  0E03               	movlw	high _display_content
 21874  00C9EE  20F4               	addwfc	prodh,w,c
 21875  00C9F0  6EE2               	movwf	fsr1h,c
 21876  00C9F2  CFDF FFE7          	movff	indf2,indf1
 21877                           
 21878                           ; BSR set to: 0
 21879  00C9F6  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21880  00C9F8                     l2093:
 21881                           
 21882                           ; BSR set to: 0
 21883                           
 21884                           ; BSR set to: 0
 21885  00C9F8  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21886  00C9FA  0D01               	mullw	1
 21887  00C9FC  0E9A               	movlw	low __display_outputs@header
 21888  00C9FE  24F3               	addwf	prodl,w,c
 21889  00CA00  6ED9               	movwf	fsr2l,c
 21890  00CA02  0E00               	movlw	high __display_outputs@header
 21891  00CA04  20F4               	addwfc	prodh,w,c
 21892  00CA06  6EDA               	movwf	fsr2h,c
 21893  00CA08  50DF               	movf	indf2,w,c
 21894  00CA0A  A4D8               	btfss	status,2,c
 21895  00CA0C  D7E2               	goto	l2094
 21896                           
 21897                           ; BSR set to: 0
 21898                           ;display.c: 348: if(os.output_voltage<-1)
 21899                           
 21900                           ; BSR set to: 0
 21901  00CA0E  0102               	movlb	2	; () banked
 21902  00CA10  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 21903  00CA12  D027               	goto	u13840
 21904  00CA14  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 21905  00CA16  0EFF               	movlw	255
 21906  00CA18  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 21907  00CA1A  B0D8               	btfsc	status,0,c
 21908  00CA1C  D022               	goto	u13840
 21909                           
 21910                           ; BSR set to: 2
 21911                           ;display.c: 349: {
 21912                           ;display.c: 350: cntr = 0;
 21913  00CA1E  0E00               	movlw	0
 21914  00CA20  0100               	movlb	0	; () banked
 21915  00CA22  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21916                           
 21917                           ;display.c: 351: while(low[cntr])
 21918  00CA24  D013               	goto	l2097
 21919  00CA26                     
 21920                           ; BSR set to: 0
 21921                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 21922                           
 21923                           ; BSR set to: 0
 21924  00CA26  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21925  00CA28  0D01               	mullw	1
 21926  00CA2A  0E8A               	movlw	low __display_outputs@low
 21927  00CA2C  24F3               	addwf	prodl,w,c
 21928  00CA2E  6ED9               	movwf	fsr2l,c
 21929  00CA30  0E00               	movlw	high __display_outputs@low
 21930  00CA32  20F4               	addwfc	prodh,w,c
 21931  00CA34  6EDA               	movwf	fsr2h,c
 21932  00CA36  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21933  00CA38  0D01               	mullw	1
 21934  00CA3A  0E68               	movlw	low (_display_content+20)
 21935  00CA3C  24F3               	addwf	prodl,w,c
 21936  00CA3E  6EE1               	movwf	fsr1l,c
 21937  00CA40  0E03               	movlw	high (_display_content+20)
 21938  00CA42  20F4               	addwfc	prodh,w,c
 21939  00CA44  6EE2               	movwf	fsr1h,c
 21940  00CA46  CFDF FFE7          	movff	indf2,indf1
 21941                           
 21942                           ; BSR set to: 0
 21943  00CA4A  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21944  00CA4C                     l2097:
 21945                           
 21946                           ; BSR set to: 0
 21947                           
 21948                           ; BSR set to: 0
 21949  00CA4C  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21950  00CA4E  0D01               	mullw	1
 21951  00CA50  0E8A               	movlw	low __display_outputs@low
 21952  00CA52  24F3               	addwf	prodl,w,c
 21953  00CA54  6ED9               	movwf	fsr2l,c
 21954  00CA56  0E00               	movlw	high __display_outputs@low
 21955  00CA58  20F4               	addwfc	prodh,w,c
 21956  00CA5A  6EDA               	movwf	fsr2h,c
 21957  00CA5C  50DF               	movf	indf2,w,c
 21958  00CA5E  A4D8               	btfss	status,2,c
 21959  00CA60  D7E2               	goto	l2098
 21960  00CA62                     u13840:
 21961                           
 21962                           ;display.c: 353: }
 21963                           ;display.c: 355: cntr = 0;
 21964                           
 21965                           ; BSR set to: 0
 21966                           
 21967                           ; BSR set to: 0
 21968  00CA62  0E00               	movlw	0
 21969  00CA64  0100               	movlb	0	; () banked
 21970  00CA66  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21971                           
 21972                           ;display.c: 356: while(line3[cntr])
 21973  00CA68  D013               	goto	l2100
 21974  00CA6A                     
 21975                           ; BSR set to: 0
 21976                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 21977                           
 21978                           ; BSR set to: 0
 21979  00CA6A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21980  00CA6C  0D01               	mullw	1
 21981  00CA6E  0E60               	movlw	low __display_outputs@line3
 21982  00CA70  24F3               	addwf	prodl,w,c
 21983  00CA72  6ED9               	movwf	fsr2l,c
 21984  00CA74  0E00               	movlw	high __display_outputs@line3
 21985  00CA76  20F4               	addwfc	prodh,w,c
 21986  00CA78  6EDA               	movwf	fsr2h,c
 21987  00CA7A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21988  00CA7C  0D01               	mullw	1
 21989  00CA7E  0E7C               	movlw	low (_display_content+40)
 21990  00CA80  24F3               	addwf	prodl,w,c
 21991  00CA82  6EE1               	movwf	fsr1l,c
 21992  00CA84  0E03               	movlw	high (_display_content+40)
 21993  00CA86  20F4               	addwfc	prodh,w,c
 21994  00CA88  6EE2               	movwf	fsr1h,c
 21995  00CA8A  CFDF FFE7          	movff	indf2,indf1
 21996                           
 21997                           ; BSR set to: 0
 21998  00CA8E  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21999  00CA90                     l2100:
 22000                           
 22001                           ; BSR set to: 0
 22002                           
 22003                           ; BSR set to: 0
 22004  00CA90  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22005  00CA92  0D01               	mullw	1
 22006  00CA94  0E60               	movlw	low __display_outputs@line3
 22007  00CA96  24F3               	addwf	prodl,w,c
 22008  00CA98  6ED9               	movwf	fsr2l,c
 22009  00CA9A  0E00               	movlw	high __display_outputs@line3
 22010  00CA9C  20F4               	addwfc	prodh,w,c
 22011  00CA9E  6EDA               	movwf	fsr2h,c
 22012  00CAA0  50DF               	movf	indf2,w,c
 22013  00CAA2  A4D8               	btfss	status,2,c
 22014  00CAA4  D7E2               	goto	l2101
 22015                           
 22016                           ; BSR set to: 0
 22017                           ;display.c: 359: cntr = 0;
 22018                           
 22019                           ; BSR set to: 0
 22020  00CAA6  0E00               	movlw	0
 22021  00CAA8  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22022                           
 22023                           ;display.c: 360: while(line4[cntr])
 22024  00CAAA  D013               	goto	l2103
 22025  00CAAC                     
 22026                           ; BSR set to: 0
 22027                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 22028                           
 22029                           ; BSR set to: 0
 22030  00CAAC  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22031  00CAAE  0D01               	mullw	1
 22032  00CAB0  0E75               	movlw	low __display_outputs@line4
 22033  00CAB2  24F3               	addwf	prodl,w,c
 22034  00CAB4  6ED9               	movwf	fsr2l,c
 22035  00CAB6  0E00               	movlw	high __display_outputs@line4
 22036  00CAB8  20F4               	addwfc	prodh,w,c
 22037  00CABA  6EDA               	movwf	fsr2h,c
 22038  00CABC  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22039  00CABE  0D01               	mullw	1
 22040  00CAC0  0E90               	movlw	low (_display_content+60)
 22041  00CAC2  24F3               	addwf	prodl,w,c
 22042  00CAC4  6EE1               	movwf	fsr1l,c
 22043  00CAC6  0E03               	movlw	high (_display_content+60)
 22044  00CAC8  20F4               	addwfc	prodh,w,c
 22045  00CACA  6EE2               	movwf	fsr1h,c
 22046  00CACC  CFDF FFE7          	movff	indf2,indf1
 22047                           
 22048                           ; BSR set to: 0
 22049  00CAD0  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22050  00CAD2                     l2103:
 22051                           
 22052                           ; BSR set to: 0
 22053                           
 22054                           ; BSR set to: 0
 22055  00CAD2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22056  00CAD4  0D01               	mullw	1
 22057  00CAD6  0E75               	movlw	low __display_outputs@line4
 22058  00CAD8  24F3               	addwf	prodl,w,c
 22059  00CADA  6ED9               	movwf	fsr2l,c
 22060  00CADC  0E00               	movlw	high __display_outputs@line4
 22061  00CADE  20F4               	addwfc	prodh,w,c
 22062  00CAE0  6EDA               	movwf	fsr2h,c
 22063  00CAE2  50DF               	movf	indf2,w,c
 22064  00CAE4  A4D8               	btfss	status,2,c
 22065  00CAE6  D7E2               	goto	l2104
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 22069  00CAE8  0102               	movlb	2	; () banked
 22070  00CAEA  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 22071  00CAEC  D005               	goto	l2106
 22072                           
 22073                           ; BSR set to: 2
 22074                           ;display.c: 364: {
 22075                           ;display.c: 365: display_content[2][8] = 'n';
 22076  00CAEE  0E6E               	movlw	110
 22077  00CAF0  0103               	movlb	3	; () banked
 22078  00CAF2  6F84               	movwf	(_display_content+48)& (0+255),b
 22079                           
 22080                           ;display.c: 366: display_content[2][9] = ' ';
 22081  00CAF4  0E20               	movlw	32
 22082  00CAF6  6F85               	movwf	(_display_content+49)& (0+255),b
 22083  00CAF8                     l2106:
 22084                           
 22085                           ;display.c: 367: }
 22086                           ;display.c: 368: if(os.outputs & OUTPUT_2)
 22087                           
 22088                           ; BSR set to: 3
 22089  00CAF8  0102               	movlb	2	; () banked
 22090  00CAFA  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 22091  00CAFC  D005               	goto	l2107
 22092                           
 22093                           ; BSR set to: 2
 22094                           ;display.c: 369: {
 22095                           ;display.c: 370: display_content[2][18] = 'n';
 22096  00CAFE  0E6E               	movlw	110
 22097  00CB00  0103               	movlb	3	; () banked
 22098  00CB02  6F8E               	movwf	(_display_content+58)& (0+255),b
 22099                           
 22100                           ;display.c: 371: display_content[2][19] = ' ';
 22101  00CB04  0E20               	movlw	32
 22102  00CB06  6F8F               	movwf	(_display_content+59)& (0+255),b
 22103  00CB08                     l2107:
 22104                           
 22105                           ;display.c: 372: }
 22106                           ;display.c: 373: if(os.outputs & OUTPUT_3)
 22107                           
 22108                           ; BSR set to: 3
 22109  00CB08  0102               	movlb	2	; () banked
 22110  00CB0A  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 22111  00CB0C  D005               	goto	l2108
 22112                           
 22113                           ; BSR set to: 2
 22114                           ;display.c: 374: {
 22115                           ;display.c: 375: display_content[3][8] = 'n';
 22116  00CB0E  0E6E               	movlw	110
 22117  00CB10  0103               	movlb	3	; () banked
 22118  00CB12  6F98               	movwf	(_display_content+68)& (0+255),b
 22119                           
 22120                           ;display.c: 376: display_content[3][9] = ' ';
 22121  00CB14  0E20               	movlw	32
 22122  00CB16  6F99               	movwf	(_display_content+69)& (0+255),b
 22123  00CB18                     l2108:
 22124                           
 22125                           ;display.c: 377: }
 22126                           ;display.c: 378: if(os.outputs & OUTPUT_4)
 22127                           
 22128                           ; BSR set to: 3
 22129  00CB18  0102               	movlb	2	; () banked
 22130  00CB1A  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 22131  00CB1C  D01E               	goto	l2110
 22132                           
 22133                           ; BSR set to: 2
 22134                           ;display.c: 379: {
 22135                           ;display.c: 380: display_content[3][18] = 'n';
 22136  00CB1E  0E6E               	movlw	110
 22137  00CB20  0103               	movlb	3	; () banked
 22138  00CB22  6FA2               	movwf	(_display_content+78)& (0+255),b
 22139                           
 22140                           ;display.c: 381: display_content[3][19] = ' ';
 22141  00CB24  0E20               	movlw	32
 22142  00CB26  6FA3               	movwf	(_display_content+79)& (0+255),b
 22143                           
 22144                           ; BSR set to: 3
 22145                           ;display.c: 382: }
 22146                           ;display.c: 384: switch(mode)
 22147  00CB28  D018               	goto	l2110
 22148  00CB2A                     
 22149                           ;display.c: 387: display_content[2][0] = '-';
 22150                           
 22151                           ; BSR set to: 3
 22152  00CB2A  0E2D               	movlw	45
 22153  00CB2C  0103               	movlb	3	; () banked
 22154  00CB2E  6F7C               	movwf	(_display_content+40)& (0+255),b
 22155                           
 22156                           ;display.c: 388: display_content[2][1] = '>';
 22157  00CB30  0E3E               	movlw	62
 22158  00CB32  6F7D               	movwf	(_display_content+41)& (0+255),b
 22159                           
 22160                           ;display.c: 389: break;
 22161  00CB34  0012               	return	
 22162  00CB36                     
 22163                           ;display.c: 391: display_content[2][10] = '-';
 22164                           
 22165                           ; BSR set to: 3
 22166  00CB36  0E2D               	movlw	45
 22167  00CB38  0103               	movlb	3	; () banked
 22168  00CB3A  6F86               	movwf	(_display_content+50)& (0+255),b
 22169                           
 22170                           ;display.c: 392: display_content[2][11] = '>';
 22171  00CB3C  0E3E               	movlw	62
 22172  00CB3E  6F87               	movwf	(_display_content+51)& (0+255),b
 22173                           
 22174                           ;display.c: 393: break;
 22175  00CB40  0012               	return	
 22176  00CB42                     
 22177                           ;display.c: 395: display_content[3][0] = '-';
 22178                           
 22179                           ; BSR set to: 3
 22180  00CB42  0E2D               	movlw	45
 22181  00CB44  0103               	movlb	3	; () banked
 22182  00CB46  6F90               	movwf	(_display_content+60)& (0+255),b
 22183                           
 22184                           ;display.c: 396: display_content[3][1] = '>';
 22185  00CB48  0E3E               	movlw	62
 22186  00CB4A  6F91               	movwf	(_display_content+61)& (0+255),b
 22187                           
 22188                           ;display.c: 397: break;
 22189  00CB4C  0012               	return	
 22190  00CB4E                     
 22191                           ;display.c: 399: display_content[3][10] = '-';
 22192                           
 22193                           ; BSR set to: 3
 22194  00CB4E  0E2D               	movlw	45
 22195  00CB50  0103               	movlb	3	; () banked
 22196  00CB52  6F9A               	movwf	(_display_content+70)& (0+255),b
 22197                           
 22198                           ;display.c: 400: display_content[3][11] = '>';
 22199  00CB54  0E3E               	movlw	62
 22200  00CB56  6F9B               	movwf	(_display_content+71)& (0+255),b
 22201                           
 22202                           ; BSR set to: 3
 22203                           ;display.c: 402: }
 22204                           
 22205                           ;display.c: 401: break;
 22206  00CB58  0012               	return	
 22207  00CB5A                     l2110:
 22208                           
 22209                           ; BSR set to: 3
 22210  00CB5A  0100               	movlb	0	; () banked
 22211  00CB5C  51A8               	movf	__display_outputs@mode& (0+255),w,b
 22212                           
 22213                           ; Switch size 1, requested type "space"
 22214                           ; Number of cases is 4, Range of values is 49 to 52
 22215                           ; switch strategies available:
 22216                           ; Name         Instructions Cycles
 22217                           ; simple_byte           13     7 (average)
 22218                           ;	Chosen strategy is simple_byte
 22219  00CB5E  0A31               	xorlw	49	; case 49
 22220  00CB60  B4D8               	btfsc	status,2,c
 22221  00CB62  D7E3               	goto	l2111
 22222  00CB64  0A03               	xorlw	3	; case 50
 22223  00CB66  B4D8               	btfsc	status,2,c
 22224  00CB68  D7E6               	goto	l2113
 22225  00CB6A  0A01               	xorlw	1	; case 51
 22226  00CB6C  B4D8               	btfsc	status,2,c
 22227  00CB6E  D7E9               	goto	l2114
 22228  00CB70  0A07               	xorlw	7	; case 52
 22229  00CB72  A4D8               	btfss	status,2,c
 22230  00CB74  0012               	return	
 22231  00CB76  D7EB               	goto	l2115
 22232  00CB78                     __end_of__display_outputs:
 22233                           	opt stack 0
 22234                           tblptru	equ	0xFF8
 22235                           tblptrh	equ	0xFF7
 22236                           tblptrl	equ	0xFF6
 22237                           tablat	equ	0xFF5
 22238                           prodh	equ	0xFF4
 22239                           prodl	equ	0xFF3
 22240                           intcon	equ	0xFF2
 22241                           intcon2	equ	0xFF1
 22242                           intcon3	equ	0xFF0
 22243                           postinc0	equ	0xFEE
 22244                           wreg	equ	0xFE8
 22245                           indf1	equ	0xFE7
 22246                           postinc1	equ	0xFE6
 22247                           postdec1	equ	0xFE5
 22248                           plusw1	equ	0xFE3
 22249                           fsr1h	equ	0xFE2
 22250                           fsr1l	equ	0xFE1
 22251                           indf2	equ	0xFDF
 22252                           postinc2	equ	0xFDE
 22253                           postdec2	equ	0xFDD
 22254                           plusw2	equ	0xFDB
 22255                           fsr2h	equ	0xFDA
 22256                           fsr2l	equ	0xFD9
 22257                           status	equ	0xFD8
 22258                           
 22259 ;; *************** function __display_inout *****************
 22260 ;; Defined at:
 22261 ;;		line 141 in file "display.c"
 22262 ;; Parameters:    Size  Location     Type
 22263 ;;		None
 22264 ;; Auto vars:     Size  Location     Type
 22265 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 22266 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 22267 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 22268 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 22269 ;;  cntr            1  101[BANK0 ] unsigned char 
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  1    wreg      void 
 22272 ;; Registers used:
 22273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/0
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22280 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22282 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22283 ;;Total ram usage:       54 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:   14
 22286 ;; This function calls:
 22287 ;;		__display_itoa
 22288 ;;		_buck_get_mode
 22289 ;; This function is called by:
 22290 ;;		_display_prepare
 22291 ;; This function uses a non-reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text103
 22295  00CD7E                     __ptext103:
 22296                           	opt stack 0
 22297  00CD7E                     __display_inout:
 22298                           	opt stack 15
 22299                           
 22300                           ;display.c: 143: uint8_t cntr;
 22301                           ;display.c: 144: const char line1[] = "Voltage & Current";
 22302                           
 22303                           ;incstack = 0
 22304  00CD7E  0EF8               	movlw	low __display_inout@F8671
 22305  00CD80  6EF6               	movwf	tblptrl,c
 22306  00CD82                     	if	1	;There is more than 1 active tblptr byte
 22307  00CD82  0E91               	movlw	high __display_inout@F8671
 22308  00CD84  6EF7               	movwf	tblptrh,c
 22309  00CD86                     	endif
 22310  00CD86                     	if	1	;There are 3 active tblptr bytes
 22311  00CD86  0E00               	movlw	low (__display_inout@F8671 shr (0+16))
 22312  00CD88  6EF8               	movwf	tblptru,c
 22313  00CD8A                     	endif
 22314  00CD8A  EE20  F090         	lfsr	2,__display_inout@line1
 22315  00CD8E  0E11               	movlw	17
 22316  00CD90                     u13320:
 22317  00CD90  0009               	tblrd		*+
 22318  00CD92  CFF5 FFDE          	movff	tablat,postinc2
 22319  00CD96  06E8               	decf	wreg,f,c
 22320  00CD98  E2FB               	bc	u13320
 22321                           
 22322                           ;display.c: 145: const char line2[] = "   Input   Output";
 22323  00CD9A  0EE6               	movlw	low __display_inout@F8673
 22324  00CD9C  6EF6               	movwf	tblptrl,c
 22325  00CD9E                     	if	1	;There is more than 1 active tblptr byte
 22326  00CD9E  0E91               	movlw	high __display_inout@F8673
 22327  00CDA0  6EF7               	movwf	tblptrh,c
 22328  00CDA2                     	endif
 22329  00CDA2                     	if	1	;There are 3 active tblptr bytes
 22330  00CDA2  0E00               	movlw	low (__display_inout@F8673 shr (0+16))
 22331  00CDA4  6EF8               	movwf	tblptru,c
 22332  00CDA6                     	endif
 22333  00CDA6  EE20  F0A2         	lfsr	2,__display_inout@line2
 22334  00CDAA  0E11               	movlw	17
 22335  00CDAC                     u13330:
 22336  00CDAC  0009               	tblrd		*+
 22337  00CDAE  CFF5 FFDE          	movff	tablat,postinc2
 22338  00CDB2  06E8               	decf	wreg,f,c
 22339  00CDB4  E2FB               	bc	u13330
 22340                           
 22341                           ;display.c: 146: const char line3[] = "V:";
 22342  00CDB6  0E36               	movlw	low __display_inout@F8675
 22343  00CDB8  6EF6               	movwf	tblptrl,c
 22344  00CDBA                     	if	1	;There is more than 1 active tblptr byte
 22345  00CDBA  0E93               	movlw	high __display_inout@F8675
 22346  00CDBC  6EF7               	movwf	tblptrh,c
 22347  00CDBE                     	endif
 22348  00CDBE                     	if	1	;There are 3 active tblptr bytes
 22349  00CDBE  0E00               	movlw	low (__display_inout@F8675 shr (0+16))
 22350  00CDC0  6EF8               	movwf	tblptru,c
 22351  00CDC2                     	endif
 22352  00CDC2  0009               	tblrd		*+
 22353  00CDC4  CFF5 F0C2          	movff	tablat,__display_inout@line3
 22354  00CDC8  0009               	tblrd		*+
 22355  00CDCA  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 22356  00CDCE  000A               	tblrd		*-
 22357  00CDD0  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 22358                           
 22359                           ;display.c: 147: const char line4[] = "A: --      --";
 22360  00CDD4  0EA5               	movlw	low __display_inout@F8677
 22361  00CDD6  6EF6               	movwf	tblptrl,c
 22362  00CDD8                     	if	1	;There is more than 1 active tblptr byte
 22363  00CDD8  0E92               	movlw	high __display_inout@F8677
 22364  00CDDA  6EF7               	movwf	tblptrh,c
 22365  00CDDC                     	endif
 22366  00CDDC                     	if	1	;There are 3 active tblptr bytes
 22367  00CDDC  0E00               	movlw	low (__display_inout@F8677 shr (0+16))
 22368  00CDDE  6EF8               	movwf	tblptru,c
 22369  00CDE0                     	endif
 22370  00CDE0  EE20  F0B4         	lfsr	2,__display_inout@line4
 22371  00CDE4  0E0D               	movlw	13
 22372  00CDE6                     u13340:
 22373  00CDE6  0009               	tblrd		*+
 22374  00CDE8  CFF5 FFDE          	movff	tablat,postinc2
 22375  00CDEC  06E8               	decf	wreg,f,c
 22376  00CDEE  E2FB               	bc	u13340
 22377                           
 22378                           ;display.c: 149: cntr = 0;
 22379  00CDF0  0E00               	movlw	0
 22380  00CDF2  0100               	movlb	0	; () banked
 22381  00CDF4  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22382                           
 22383                           ;display.c: 150: while(line1[cntr])
 22384  00CDF6  D013               	goto	l1956
 22385  00CDF8                     
 22386                           ; BSR set to: 0
 22387                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 22388                           
 22389                           ; BSR set to: 0
 22390  00CDF8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22391  00CDFA  0D01               	mullw	1
 22392  00CDFC  0E90               	movlw	low __display_inout@line1
 22393  00CDFE  24F3               	addwf	prodl,w,c
 22394  00CE00  6ED9               	movwf	fsr2l,c
 22395  00CE02  0E00               	movlw	high __display_inout@line1
 22396  00CE04  20F4               	addwfc	prodh,w,c
 22397  00CE06  6EDA               	movwf	fsr2h,c
 22398  00CE08  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22399  00CE0A  0D01               	mullw	1
 22400  00CE0C  0E54               	movlw	low _display_content
 22401  00CE0E  24F3               	addwf	prodl,w,c
 22402  00CE10  6EE1               	movwf	fsr1l,c
 22403  00CE12  0E03               	movlw	high _display_content
 22404  00CE14  20F4               	addwfc	prodh,w,c
 22405  00CE16  6EE2               	movwf	fsr1h,c
 22406  00CE18  CFDF FFE7          	movff	indf2,indf1
 22407                           
 22408                           ; BSR set to: 0
 22409  00CE1C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22410  00CE1E                     l1956:
 22411                           
 22412                           ; BSR set to: 0
 22413                           
 22414                           ; BSR set to: 0
 22415  00CE1E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22416  00CE20  0D01               	mullw	1
 22417  00CE22  0E90               	movlw	low __display_inout@line1
 22418  00CE24  24F3               	addwf	prodl,w,c
 22419  00CE26  6ED9               	movwf	fsr2l,c
 22420  00CE28  0E00               	movlw	high __display_inout@line1
 22421  00CE2A  20F4               	addwfc	prodh,w,c
 22422  00CE2C  6EDA               	movwf	fsr2h,c
 22423  00CE2E  50DF               	movf	indf2,w,c
 22424  00CE30  A4D8               	btfss	status,2,c
 22425  00CE32  D7E2               	goto	l1957
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;display.c: 153: cntr = 0;
 22429                           
 22430                           ; BSR set to: 0
 22431  00CE34  0E00               	movlw	0
 22432  00CE36  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22433                           
 22434                           ;display.c: 154: while(line2[cntr])
 22435  00CE38  D013               	goto	l1959
 22436  00CE3A                     
 22437                           ; BSR set to: 0
 22438                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 22439                           
 22440                           ; BSR set to: 0
 22441  00CE3A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22442  00CE3C  0D01               	mullw	1
 22443  00CE3E  0EA2               	movlw	low __display_inout@line2
 22444  00CE40  24F3               	addwf	prodl,w,c
 22445  00CE42  6ED9               	movwf	fsr2l,c
 22446  00CE44  0E00               	movlw	high __display_inout@line2
 22447  00CE46  20F4               	addwfc	prodh,w,c
 22448  00CE48  6EDA               	movwf	fsr2h,c
 22449  00CE4A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22450  00CE4C  0D01               	mullw	1
 22451  00CE4E  0E68               	movlw	low (_display_content+20)
 22452  00CE50  24F3               	addwf	prodl,w,c
 22453  00CE52  6EE1               	movwf	fsr1l,c
 22454  00CE54  0E03               	movlw	high (_display_content+20)
 22455  00CE56  20F4               	addwfc	prodh,w,c
 22456  00CE58  6EE2               	movwf	fsr1h,c
 22457  00CE5A  CFDF FFE7          	movff	indf2,indf1
 22458                           
 22459                           ; BSR set to: 0
 22460  00CE5E  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22461  00CE60                     l1959:
 22462                           
 22463                           ; BSR set to: 0
 22464                           
 22465                           ; BSR set to: 0
 22466  00CE60  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22467  00CE62  0D01               	mullw	1
 22468  00CE64  0EA2               	movlw	low __display_inout@line2
 22469  00CE66  24F3               	addwf	prodl,w,c
 22470  00CE68  6ED9               	movwf	fsr2l,c
 22471  00CE6A  0E00               	movlw	high __display_inout@line2
 22472  00CE6C  20F4               	addwfc	prodh,w,c
 22473  00CE6E  6EDA               	movwf	fsr2h,c
 22474  00CE70  50DF               	movf	indf2,w,c
 22475  00CE72  A4D8               	btfss	status,2,c
 22476  00CE74  D7E2               	goto	l1960
 22477                           
 22478                           ; BSR set to: 0
 22479                           ;display.c: 157: cntr = 0;
 22480                           
 22481                           ; BSR set to: 0
 22482  00CE76  0E00               	movlw	0
 22483  00CE78  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22484                           
 22485                           ;display.c: 158: while(line3[cntr])
 22486  00CE7A  D013               	goto	l1962
 22487  00CE7C                     
 22488                           ; BSR set to: 0
 22489                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 22490                           
 22491                           ; BSR set to: 0
 22492  00CE7C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22493  00CE7E  0D01               	mullw	1
 22494  00CE80  0EC2               	movlw	low __display_inout@line3
 22495  00CE82  24F3               	addwf	prodl,w,c
 22496  00CE84  6ED9               	movwf	fsr2l,c
 22497  00CE86  0E00               	movlw	high __display_inout@line3
 22498  00CE88  20F4               	addwfc	prodh,w,c
 22499  00CE8A  6EDA               	movwf	fsr2h,c
 22500  00CE8C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22501  00CE8E  0D01               	mullw	1
 22502  00CE90  0E7C               	movlw	low (_display_content+40)
 22503  00CE92  24F3               	addwf	prodl,w,c
 22504  00CE94  6EE1               	movwf	fsr1l,c
 22505  00CE96  0E03               	movlw	high (_display_content+40)
 22506  00CE98  20F4               	addwfc	prodh,w,c
 22507  00CE9A  6EE2               	movwf	fsr1h,c
 22508  00CE9C  CFDF FFE7          	movff	indf2,indf1
 22509                           
 22510                           ; BSR set to: 0
 22511  00CEA0  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22512  00CEA2                     l1962:
 22513                           
 22514                           ; BSR set to: 0
 22515                           
 22516                           ; BSR set to: 0
 22517  00CEA2  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22518  00CEA4  0D01               	mullw	1
 22519  00CEA6  0EC2               	movlw	low __display_inout@line3
 22520  00CEA8  24F3               	addwf	prodl,w,c
 22521  00CEAA  6ED9               	movwf	fsr2l,c
 22522  00CEAC  0E00               	movlw	high __display_inout@line3
 22523  00CEAE  20F4               	addwfc	prodh,w,c
 22524  00CEB0  6EDA               	movwf	fsr2h,c
 22525  00CEB2  50DF               	movf	indf2,w,c
 22526  00CEB4  A4D8               	btfss	status,2,c
 22527  00CEB6  D7E2               	goto	l1963
 22528                           
 22529                           ; BSR set to: 0
 22530                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 22531                           
 22532                           ; BSR set to: 0
 22533  00CEB8  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 22534  00CEBC  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 22535  00CEC0  0E03               	movlw	3
 22536  00CEC2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22537  00CEC4  0E7F               	movlw	low (_display_content+43)
 22538  00CEC6  6F7B               	movwf	__display_itoa@text& (0+255),b
 22539  00CEC8  0E03               	movlw	high (_display_content+43)
 22540  00CECA  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22541  00CECC  ECBC  F065         	call	__display_itoa	;wreg free
 22542                           
 22543                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 22544  00CED0  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 22545  00CED4  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 22546  00CED8  0E03               	movlw	3
 22547  00CEDA  0100               	movlb	0	; () banked
 22548  00CEDC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22549  00CEDE  0E87               	movlw	low (_display_content+51)
 22550  00CEE0  6F7B               	movwf	__display_itoa@text& (0+255),b
 22551  00CEE2  0E03               	movlw	high (_display_content+51)
 22552  00CEE4  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22553  00CEE6  ECBC  F065         	call	__display_itoa	;wreg free
 22554                           
 22555                           ;display.c: 163: cntr = 0;
 22556  00CEEA  0E00               	movlw	0
 22557  00CEEC  0100               	movlb	0	; () banked
 22558  00CEEE  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22559                           
 22560                           ;display.c: 164: while(line4[cntr])
 22561  00CEF0  D013               	goto	l1965
 22562  00CEF2                     
 22563                           ; BSR set to: 0
 22564                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 22565                           
 22566                           ; BSR set to: 0
 22567  00CEF2  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22568  00CEF4  0D01               	mullw	1
 22569  00CEF6  0EB4               	movlw	low __display_inout@line4
 22570  00CEF8  24F3               	addwf	prodl,w,c
 22571  00CEFA  6ED9               	movwf	fsr2l,c
 22572  00CEFC  0E00               	movlw	high __display_inout@line4
 22573  00CEFE  20F4               	addwfc	prodh,w,c
 22574  00CF00  6EDA               	movwf	fsr2h,c
 22575  00CF02  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22576  00CF04  0D01               	mullw	1
 22577  00CF06  0E90               	movlw	low (_display_content+60)
 22578  00CF08  24F3               	addwf	prodl,w,c
 22579  00CF0A  6EE1               	movwf	fsr1l,c
 22580  00CF0C  0E03               	movlw	high (_display_content+60)
 22581  00CF0E  20F4               	addwfc	prodh,w,c
 22582  00CF10  6EE2               	movwf	fsr1h,c
 22583  00CF12  CFDF FFE7          	movff	indf2,indf1
 22584                           
 22585                           ; BSR set to: 0
 22586  00CF16  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22587  00CF18                     l1965:
 22588                           
 22589                           ; BSR set to: 0
 22590                           
 22591                           ; BSR set to: 0
 22592  00CF18  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22593  00CF1A  0D01               	mullw	1
 22594  00CF1C  0EB4               	movlw	low __display_inout@line4
 22595  00CF1E  24F3               	addwf	prodl,w,c
 22596  00CF20  6ED9               	movwf	fsr2l,c
 22597  00CF22  0E00               	movlw	high __display_inout@line4
 22598  00CF24  20F4               	addwfc	prodh,w,c
 22599  00CF26  6EDA               	movwf	fsr2h,c
 22600  00CF28  50DF               	movf	indf2,w,c
 22601  00CF2A  A4D8               	btfss	status,2,c
 22602  00CF2C  D7E2               	goto	l1966
 22603                           
 22604                           ;display.c: 167: {
 22605                           ;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3][3]);
 22606                           
 22607                           ; BSR set to: 0
 22608                           
 22609                           ; BSR set to: 0
 22610                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 22611  00CF2E  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 22612  00CF32  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 22613  00CF36  0E03               	movlw	3
 22614  00CF38  0100               	movlb	0	; () banked
 22615  00CF3A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22616  00CF3C  0E93               	movlw	low (_display_content+63)
 22617  00CF3E  6F7B               	movwf	__display_itoa@text& (0+255),b
 22618  00CF40  0E03               	movlw	high (_display_content+63)
 22619  00CF42  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22620  00CF44  ECBC  F065         	call	__display_itoa	;wreg free
 22621                           
 22622                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 22623  00CF48  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 22624  00CF4C  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 22625  00CF50  0E03               	movlw	3
 22626  00CF52  0100               	movlb	0	; () banked
 22627  00CF54  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22628  00CF56  0E9B               	movlw	low (_display_content+71)
 22629  00CF58  6F7B               	movwf	__display_itoa@text& (0+255),b
 22630  00CF5A  0E03               	movlw	high (_display_content+71)
 22631  00CF5C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22632  00CF5E  ECBC  F065         	call	__display_itoa	;wreg free
 22633  00CF62  0012               	return	
 22634  00CF64                     __end_of__display_inout:
 22635                           	opt stack 0
 22636                           tblptru	equ	0xFF8
 22637                           tblptrh	equ	0xFF7
 22638                           tblptrl	equ	0xFF6
 22639                           tablat	equ	0xFF5
 22640                           prodh	equ	0xFF4
 22641                           prodl	equ	0xFF3
 22642                           intcon	equ	0xFF2
 22643                           intcon2	equ	0xFF1
 22644                           intcon3	equ	0xFF0
 22645                           postinc0	equ	0xFEE
 22646                           wreg	equ	0xFE8
 22647                           indf1	equ	0xFE7
 22648                           postinc1	equ	0xFE6
 22649                           postdec1	equ	0xFE5
 22650                           plusw1	equ	0xFE3
 22651                           fsr1h	equ	0xFE2
 22652                           fsr1l	equ	0xFE1
 22653                           indf2	equ	0xFDF
 22654                           postinc2	equ	0xFDE
 22655                           postdec2	equ	0xFDD
 22656                           plusw2	equ	0xFDB
 22657                           fsr2h	equ	0xFDA
 22658                           fsr2l	equ	0xFD9
 22659                           status	equ	0xFD8
 22660                           
 22661 ;; *************** function __display_efficiency *****************
 22662 ;; Defined at:
 22663 ;;		line 475 in file "display.c"
 22664 ;; Parameters:    Size  Location     Type
 22665 ;;		None
 22666 ;; Auto vars:     Size  Location     Type
 22667 ;;  source         19   69[BANK0 ] const unsigned char [19]
 22668 ;;  header         19   50[BANK0 ] const unsigned char [19]
 22669 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 22670 ;;  battery         4  109[BANK0 ] long 
 22671 ;;  panel           4  105[BANK0 ] long 
 22672 ;;  efficiency      3  102[BANK0 ] float 
 22673 ;;  cntr            1  113[BANK0 ] unsigned char 
 22674 ;; Return value:  Size  Location     Type
 22675 ;;                  1    wreg      void 
 22676 ;; Registers used:
 22677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22678 ;; Tracked objects:
 22679 ;;		On entry : 0/0
 22680 ;;		On exit  : 0/0
 22681 ;;		Unchanged: 0/0
 22682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22684 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22686 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22687 ;;Total ram usage:       66 bytes
 22688 ;; Hardware stack levels used:    1
 22689 ;; Hardware stack levels required when called:   14
 22690 ;; This function calls:
 22691 ;;		___aldiv
 22692 ;;		___altoft
 22693 ;;		___fttol
 22694 ;;		___lmul
 22695 ;;		__display_itoa
 22696 ;; This function is called by:
 22697 ;;		_display_prepare
 22698 ;; This function uses a non-reentrant model
 22699 ;;
 22700                           
 22701                           	psect	text104
 22702  00B130                     __ptext104:
 22703                           	opt stack 0
 22704  00B130                     __display_efficiency:
 22705                           	opt stack 15
 22706                           
 22707                           ;display.c: 477: uint8_t cntr;
 22708                           ;display.c: 478: const char header[] = "Charger Efficiency";
 22709                           
 22710                           ;incstack = 0
 22711  00B130  0E8A               	movlw	low __display_efficiency@F8759
 22712  00B132  6EF6               	movwf	tblptrl,c
 22713  00B134                     	if	1	;There is more than 1 active tblptr byte
 22714  00B134  0E91               	movlw	high __display_efficiency@F8759
 22715  00B136  6EF7               	movwf	tblptrh,c
 22716  00B138                     	endif
 22717  00B138                     	if	1	;There are 3 active tblptr bytes
 22718  00B138  0E00               	movlw	low (__display_efficiency@F8759 shr (0+16))
 22719  00B13A  6EF8               	movwf	tblptru,c
 22720  00B13C                     	endif
 22721  00B13C  EE20  F092         	lfsr	2,__display_efficiency@header
 22722  00B140  0E12               	movlw	18
 22723  00B142                     u14080:
 22724  00B142  0009               	tblrd		*+
 22725  00B144  CFF5 FFDE          	movff	tablat,postinc2
 22726  00B148  06E8               	decf	wreg,f,c
 22727  00B14A  E2FB               	bc	u14080
 22728                           
 22729                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 22730  00B14C  0E77               	movlw	low __display_efficiency@F8761
 22731  00B14E  6EF6               	movwf	tblptrl,c
 22732  00B150                     	if	1	;There is more than 1 active tblptr byte
 22733  00B150  0E91               	movlw	high __display_efficiency@F8761
 22734  00B152  6EF7               	movwf	tblptrh,c
 22735  00B154                     	endif
 22736  00B154                     	if	1	;There are 3 active tblptr bytes
 22737  00B154  0E00               	movlw	low (__display_efficiency@F8761 shr (0+16))
 22738  00B156  6EF8               	movwf	tblptru,c
 22739  00B158                     	endif
 22740  00B158  EE20  F0A5         	lfsr	2,__display_efficiency@source
 22741  00B15C  0E12               	movlw	18
 22742  00B15E                     u14090:
 22743  00B15E  0009               	tblrd		*+
 22744  00B160  CFF5 FFDE          	movff	tablat,postinc2
 22745  00B164  06E8               	decf	wreg,f,c
 22746  00B166  E2FB               	bc	u14090
 22747                           
 22748                           ;display.c: 480: const char footer[] = "E:         L:";
 22749  00B168  0E7B               	movlw	low __display_efficiency@F8763
 22750  00B16A  6EF6               	movwf	tblptrl,c
 22751  00B16C                     	if	1	;There is more than 1 active tblptr byte
 22752  00B16C  0E92               	movlw	high __display_efficiency@F8763
 22753  00B16E  6EF7               	movwf	tblptrh,c
 22754  00B170                     	endif
 22755  00B170                     	if	1	;There are 3 active tblptr bytes
 22756  00B170  0E00               	movlw	low (__display_efficiency@F8763 shr (0+16))
 22757  00B172  6EF8               	movwf	tblptru,c
 22758  00B174                     	endif
 22759  00B174  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 22760  00B178  0E0D               	movlw	13
 22761  00B17A                     u14100:
 22762  00B17A  0009               	tblrd		*+
 22763  00B17C  CFF5 FFDE          	movff	tablat,postinc2
 22764  00B180  06E8               	decf	wreg,f,c
 22765  00B182  E2FB               	bc	u14100
 22766                           
 22767                           ;display.c: 481: int32_t panel;
 22768                           ;display.c: 482: int32_t battery = (int32_t) os.output_voltage * (int32_t) os.output_cur
      +                          rent;
 22769  00B184  EE22  F027         	lfsr	2,_os+39	;volatile
 22770  00B188  CFDE F060          	movff	postinc2,___lmul@multiplier
 22771  00B18C  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 22772  00B190  0100               	movlb	0	; () banked
 22773  00B192  0E00               	movlw	0
 22774  00B194  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22775  00B196  0EFF               	movlw	-1
 22776  00B198  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 22777  00B19A  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 22778  00B19C  EE22  F032         	lfsr	2,_os+50	;volatile
 22779  00B1A0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22780  00B1A4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22781  00B1A8  0E00               	movlw	0
 22782  00B1AA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22783  00B1AC  0EFF               	movlw	-1
 22784  00B1AE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22785  00B1B0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22786  00B1B2  ECB3  F08D         	call	___lmul	;wreg free
 22787  00B1B6  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 22788  00B1BA  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 22789  00B1BE  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 22790  00B1C2  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 22791                           
 22792                           ;display.c: 483: float efficiency;
 22793                           ;display.c: 485: panel = (int32_t) os.input_voltage;
 22794  00B1C6  EE22  F012         	lfsr	2,_os+18	;volatile
 22795  00B1CA  CFDE F0C9          	movff	postinc2,__display_efficiency@panel
 22796  00B1CE  CFDD F0CA          	movff	postdec2,__display_efficiency@panel+1
 22797  00B1D2  0100               	movlb	0	; () banked
 22798  00B1D4  0E00               	movlw	0
 22799  00B1D6  BFCA               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 22800  00B1D8  0EFF               	movlw	-1
 22801  00B1DA  6FCB               	movwf	(__display_efficiency@panel+2)& (0+255),b
 22802  00B1DC  6FCC               	movwf	(__display_efficiency@panel+3)& (0+255),b
 22803                           
 22804                           ; BSR set to: 0
 22805                           ;display.c: 486: panel *= (int32_t) os.input_current;
 22806  00B1DE  C0C9  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 22807  00B1E2  C0CA  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 22808  00B1E6  C0CB  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 22809  00B1EA  C0CC  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 22810  00B1EE  EE22  F01D         	lfsr	2,_os+29	;volatile
 22811  00B1F2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22812  00B1F6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22813  00B1FA  0E00               	movlw	0
 22814  00B1FC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22815  00B1FE  0EFF               	movlw	-1
 22816  00B200  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22817  00B202  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22818  00B204  ECB3  F08D         	call	___lmul	;wreg free
 22819  00B208  C060  F0C9         	movff	?___lmul,__display_efficiency@panel
 22820  00B20C  C061  F0CA         	movff	?___lmul+1,__display_efficiency@panel+1
 22821  00B210  C062  F0CB         	movff	?___lmul+2,__display_efficiency@panel+2
 22822  00B214  C063  F0CC         	movff	?___lmul+3,__display_efficiency@panel+3
 22823                           
 22824                           ;display.c: 487: panel /= 1000;
 22825  00B218  C0C9  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 22826  00B21C  C0CA  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 22827  00B220  C0CB  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 22828  00B224  C0CC  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 22829  00B228  0EE8               	movlw	232
 22830  00B22A  0100               	movlb	0	; () banked
 22831  00B22C  6F64               	movwf	___aldiv@divisor& (0+255),b
 22832  00B22E  0E03               	movlw	3
 22833  00B230  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22834  00B232  0E00               	movlw	0
 22835  00B234  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22836  00B236  0E00               	movlw	0
 22837  00B238  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22838  00B23A  ECE8  F07C         	call	___aldiv	;wreg free
 22839  00B23E  C060  F0C9         	movff	?___aldiv,__display_efficiency@panel
 22840  00B242  C061  F0CA         	movff	?___aldiv+1,__display_efficiency@panel+1
 22841  00B246  C062  F0CB         	movff	?___aldiv+2,__display_efficiency@panel+2
 22842  00B24A  C063  F0CC         	movff	?___aldiv+3,__display_efficiency@panel+3
 22843                           
 22844                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 22845  00B24E  EE22  F027         	lfsr	2,_os+39	;volatile
 22846  00B252  CFDE F0CD          	movff	postinc2,__display_efficiency@battery
 22847  00B256  CFDD F0CE          	movff	postdec2,__display_efficiency@battery+1
 22848  00B25A  0100               	movlb	0	; () banked
 22849  00B25C  0E00               	movlw	0
 22850  00B25E  BFCE               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 22851  00B260  0EFF               	movlw	-1
 22852  00B262  6FCF               	movwf	(__display_efficiency@battery+2)& (0+255),b
 22853  00B264  6FD0               	movwf	(__display_efficiency@battery+3)& (0+255),b
 22854                           
 22855                           ; BSR set to: 0
 22856                           ;display.c: 490: battery *= os.output_current;
 22857  00B266  C0CD  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 22858  00B26A  C0CE  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 22859  00B26E  C0CF  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 22860  00B272  C0D0  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 22861  00B276  EE22  F032         	lfsr	2,_os+50	;volatile
 22862  00B27A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22863  00B27E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22864  00B282  0E00               	movlw	0
 22865  00B284  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22866  00B286  0EFF               	movlw	-1
 22867  00B288  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22868  00B28A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22869  00B28C  ECB3  F08D         	call	___lmul	;wreg free
 22870  00B290  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 22871  00B294  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 22872  00B298  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 22873  00B29C  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 22874                           
 22875                           ;display.c: 491: efficiency = battery / panel;
 22876  00B2A0  C0C9  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 22877  00B2A4  C0CA  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 22878  00B2A8  C0CB  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 22879  00B2AC  C0CC  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 22880  00B2B0  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22881  00B2B4  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22882  00B2B8  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22883  00B2BC  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22884  00B2C0  ECE8  F07C         	call	___aldiv	;wreg free
 22885  00B2C4  C060  F06E         	movff	?___aldiv,___altoft@c
 22886  00B2C8  C061  F06F         	movff	?___aldiv+1,___altoft@c+1
 22887  00B2CC  C062  F070         	movff	?___aldiv+2,___altoft@c+2
 22888  00B2D0  C063  F071         	movff	?___aldiv+3,___altoft@c+3
 22889  00B2D4  ECC3  F087         	call	___altoft	;wreg free
 22890  00B2D8  C06E  F0C6         	movff	?___altoft,__display_efficiency@efficiency
 22891  00B2DC  C06F  F0C7         	movff	?___altoft+1,__display_efficiency@efficiency+1
 22892  00B2E0  C070  F0C8         	movff	?___altoft+2,__display_efficiency@efficiency+2
 22893                           
 22894                           ;display.c: 492: battery /= 1000;
 22895  00B2E4  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22896  00B2E8  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22897  00B2EC  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22898  00B2F0  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22899  00B2F4  0EE8               	movlw	232
 22900  00B2F6  0100               	movlb	0	; () banked
 22901  00B2F8  6F64               	movwf	___aldiv@divisor& (0+255),b
 22902  00B2FA  0E03               	movlw	3
 22903  00B2FC  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22904  00B2FE  0E00               	movlw	0
 22905  00B300  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22906  00B302  0E00               	movlw	0
 22907  00B304  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22908  00B306  ECE8  F07C         	call	___aldiv	;wreg free
 22909  00B30A  C060  F0CD         	movff	?___aldiv,__display_efficiency@battery
 22910  00B30E  C061  F0CE         	movff	?___aldiv+1,__display_efficiency@battery+1
 22911  00B312  C062  F0CF         	movff	?___aldiv+2,__display_efficiency@battery+2
 22912  00B316  C063  F0D0         	movff	?___aldiv+3,__display_efficiency@battery+3
 22913                           
 22914                           ;display.c: 494: cntr = 0;
 22915  00B31A  0E00               	movlw	0
 22916  00B31C  0100               	movlb	0	; () banked
 22917  00B31E  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22918                           
 22919                           ;display.c: 495: while(header[cntr])
 22920  00B320  D013               	goto	l2177
 22921  00B322                     
 22922                           ; BSR set to: 0
 22923                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 22924                           
 22925                           ; BSR set to: 0
 22926  00B322  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22927  00B324  0D01               	mullw	1
 22928  00B326  0E92               	movlw	low __display_efficiency@header
 22929  00B328  24F3               	addwf	prodl,w,c
 22930  00B32A  6ED9               	movwf	fsr2l,c
 22931  00B32C  0E00               	movlw	high __display_efficiency@header
 22932  00B32E  20F4               	addwfc	prodh,w,c
 22933  00B330  6EDA               	movwf	fsr2h,c
 22934  00B332  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22935  00B334  0D01               	mullw	1
 22936  00B336  0E54               	movlw	low _display_content
 22937  00B338  24F3               	addwf	prodl,w,c
 22938  00B33A  6EE1               	movwf	fsr1l,c
 22939  00B33C  0E03               	movlw	high _display_content
 22940  00B33E  20F4               	addwfc	prodh,w,c
 22941  00B340  6EE2               	movwf	fsr1h,c
 22942  00B342  CFDF FFE7          	movff	indf2,indf1
 22943                           
 22944                           ; BSR set to: 0
 22945  00B346  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22946  00B348                     l2177:
 22947                           
 22948                           ; BSR set to: 0
 22949                           
 22950                           ; BSR set to: 0
 22951  00B348  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22952  00B34A  0D01               	mullw	1
 22953  00B34C  0E92               	movlw	low __display_efficiency@header
 22954  00B34E  24F3               	addwf	prodl,w,c
 22955  00B350  6ED9               	movwf	fsr2l,c
 22956  00B352  0E00               	movlw	high __display_efficiency@header
 22957  00B354  20F4               	addwfc	prodh,w,c
 22958  00B356  6EDA               	movwf	fsr2h,c
 22959  00B358  50DF               	movf	indf2,w,c
 22960  00B35A  A4D8               	btfss	status,2,c
 22961  00B35C  D7E2               	goto	l2178
 22962                           
 22963                           ; BSR set to: 0
 22964                           ;display.c: 498: cntr = 0;
 22965                           
 22966                           ; BSR set to: 0
 22967  00B35E  0E00               	movlw	0
 22968  00B360  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22969                           
 22970                           ;display.c: 499: while(source[cntr])
 22971  00B362  D013               	goto	l2180
 22972  00B364                     
 22973                           ; BSR set to: 0
 22974                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 22975                           
 22976                           ; BSR set to: 0
 22977  00B364  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22978  00B366  0D01               	mullw	1
 22979  00B368  0EA5               	movlw	low __display_efficiency@source
 22980  00B36A  24F3               	addwf	prodl,w,c
 22981  00B36C  6ED9               	movwf	fsr2l,c
 22982  00B36E  0E00               	movlw	high __display_efficiency@source
 22983  00B370  20F4               	addwfc	prodh,w,c
 22984  00B372  6EDA               	movwf	fsr2h,c
 22985  00B374  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22986  00B376  0D01               	mullw	1
 22987  00B378  0E68               	movlw	low (_display_content+20)
 22988  00B37A  24F3               	addwf	prodl,w,c
 22989  00B37C  6EE1               	movwf	fsr1l,c
 22990  00B37E  0E03               	movlw	high (_display_content+20)
 22991  00B380  20F4               	addwfc	prodh,w,c
 22992  00B382  6EE2               	movwf	fsr1h,c
 22993  00B384  CFDF FFE7          	movff	indf2,indf1
 22994                           
 22995                           ; BSR set to: 0
 22996  00B388  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22997  00B38A                     l2180:
 22998                           
 22999                           ; BSR set to: 0
 23000                           
 23001                           ; BSR set to: 0
 23002  00B38A  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23003  00B38C  0D01               	mullw	1
 23004  00B38E  0EA5               	movlw	low __display_efficiency@source
 23005  00B390  24F3               	addwf	prodl,w,c
 23006  00B392  6ED9               	movwf	fsr2l,c
 23007  00B394  0E00               	movlw	high __display_efficiency@source
 23008  00B396  20F4               	addwfc	prodh,w,c
 23009  00B398  6EDA               	movwf	fsr2h,c
 23010  00B39A  50DF               	movf	indf2,w,c
 23011  00B39C  A4D8               	btfss	status,2,c
 23012  00B39E  D7E2               	goto	l2181
 23013                           
 23014                           ; BSR set to: 0
 23015                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 23016                           
 23017                           ; BSR set to: 0
 23018  00B3A0  C0C9  F078         	movff	__display_efficiency@panel,__display_itoa@value
 23019  00B3A4  C0CA  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 23020  00B3A8  0E03               	movlw	3
 23021  00B3AA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23022  00B3AC  0E7C               	movlw	low (_display_content+40)
 23023  00B3AE  6F7B               	movwf	__display_itoa@text& (0+255),b
 23024  00B3B0  0E03               	movlw	high (_display_content+40)
 23025  00B3B2  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23026  00B3B4  ECBC  F065         	call	__display_itoa	;wreg free
 23027                           
 23028                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 23029  00B3B8  C0CD  F078         	movff	__display_efficiency@battery,__display_itoa@value
 23030  00B3BC  C0CE  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 23031  00B3C0  0E03               	movlw	3
 23032  00B3C2  0100               	movlb	0	; () banked
 23033  00B3C4  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23034  00B3C6  0E86               	movlw	low (_display_content+50)
 23035  00B3C8  6F7B               	movwf	__display_itoa@text& (0+255),b
 23036  00B3CA  0E03               	movlw	high (_display_content+50)
 23037  00B3CC  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23038  00B3CE  ECBC  F065         	call	__display_itoa	;wreg free
 23039                           
 23040                           ;display.c: 505: cntr = 0;
 23041  00B3D2  0E00               	movlw	0
 23042  00B3D4  0100               	movlb	0	; () banked
 23043  00B3D6  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23044                           
 23045                           ;display.c: 506: while(footer[cntr])
 23046  00B3D8  D013               	goto	l2183
 23047  00B3DA                     
 23048                           ; BSR set to: 0
 23049                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 23050                           
 23051                           ; BSR set to: 0
 23052  00B3DA  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23053  00B3DC  0D01               	mullw	1
 23054  00B3DE  0EB8               	movlw	low __display_efficiency@footer
 23055  00B3E0  24F3               	addwf	prodl,w,c
 23056  00B3E2  6ED9               	movwf	fsr2l,c
 23057  00B3E4  0E00               	movlw	high __display_efficiency@footer
 23058  00B3E6  20F4               	addwfc	prodh,w,c
 23059  00B3E8  6EDA               	movwf	fsr2h,c
 23060  00B3EA  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23061  00B3EC  0D01               	mullw	1
 23062  00B3EE  0E90               	movlw	low (_display_content+60)
 23063  00B3F0  24F3               	addwf	prodl,w,c
 23064  00B3F2  6EE1               	movwf	fsr1l,c
 23065  00B3F4  0E03               	movlw	high (_display_content+60)
 23066  00B3F6  20F4               	addwfc	prodh,w,c
 23067  00B3F8  6EE2               	movwf	fsr1h,c
 23068  00B3FA  CFDF FFE7          	movff	indf2,indf1
 23069                           
 23070                           ; BSR set to: 0
 23071  00B3FE  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23072  00B400                     l2183:
 23073                           
 23074                           ; BSR set to: 0
 23075                           
 23076                           ; BSR set to: 0
 23077  00B400  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23078  00B402  0D01               	mullw	1
 23079  00B404  0EB8               	movlw	low __display_efficiency@footer
 23080  00B406  24F3               	addwf	prodl,w,c
 23081  00B408  6ED9               	movwf	fsr2l,c
 23082  00B40A  0E00               	movlw	high __display_efficiency@footer
 23083  00B40C  20F4               	addwfc	prodh,w,c
 23084  00B40E  6EDA               	movwf	fsr2h,c
 23085  00B410  50DF               	movf	indf2,w,c
 23086  00B412  A4D8               	btfss	status,2,c
 23087  00B414  D7E2               	goto	l2184
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 23091                           
 23092                           ; BSR set to: 0
 23093  00B416  C0C6  F060         	movff	__display_efficiency@efficiency,___fttol@f1
 23094  00B41A  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fttol@f1+1
 23095  00B41E  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fttol@f1+2
 23096  00B422  EC07  F077         	call	___fttol	;wreg free
 23097  00B426  C060  F078         	movff	?___fttol,__display_itoa@value
 23098  00B42A  C061  F079         	movff	?___fttol+1,__display_itoa@value+1
 23099  00B42E  0E01               	movlw	1
 23100  00B430  0100               	movlb	0	; () banked
 23101  00B432  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23102  00B434  0E93               	movlw	low (_display_content+63)
 23103  00B436  6F7B               	movwf	__display_itoa@text& (0+255),b
 23104  00B438  0E03               	movlw	high (_display_content+63)
 23105  00B43A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23106  00B43C  ECBC  F065         	call	__display_itoa	;wreg free
 23107                           
 23108                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 23109  00B440  C0CD  F090         	movff	__display_efficiency@battery,??__display_efficiency
 23110  00B444  C0CE  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 23111  00B448  0100               	movlb	0	; () banked
 23112  00B44A  1F90               	comf	??__display_efficiency& (0+255),f,b
 23113  00B44C  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 23114  00B44E  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 23115  00B450  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 23116  00B452  51C9               	movf	__display_efficiency@panel& (0+255),w,b
 23117  00B454  2590               	addwf	??__display_efficiency& (0+255),w,b
 23118  00B456  6F78               	movwf	__display_itoa@value& (0+255),b
 23119  00B458  51CA               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 23120  00B45A  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 23121  00B45C  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 23122  00B45E  0E03               	movlw	3
 23123  00B460  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23124  00B462  0E9E               	movlw	low (_display_content+74)
 23125  00B464  6F7B               	movwf	__display_itoa@text& (0+255),b
 23126  00B466  0E03               	movlw	high (_display_content+74)
 23127  00B468  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23128  00B46A  ECBC  F065         	call	__display_itoa	;wreg free
 23129  00B46E  0012               	return		;funcret
 23130  00B470                     __end_of__display_efficiency:
 23131                           	opt stack 0
 23132                           tblptru	equ	0xFF8
 23133                           tblptrh	equ	0xFF7
 23134                           tblptrl	equ	0xFF6
 23135                           tablat	equ	0xFF5
 23136                           prodh	equ	0xFF4
 23137                           prodl	equ	0xFF3
 23138                           intcon	equ	0xFF2
 23139                           intcon2	equ	0xFF1
 23140                           intcon3	equ	0xFF0
 23141                           postinc0	equ	0xFEE
 23142                           wreg	equ	0xFE8
 23143                           indf1	equ	0xFE7
 23144                           postinc1	equ	0xFE6
 23145                           postdec1	equ	0xFE5
 23146                           plusw1	equ	0xFE3
 23147                           fsr1h	equ	0xFE2
 23148                           fsr1l	equ	0xFE1
 23149                           indf2	equ	0xFDF
 23150                           postinc2	equ	0xFDE
 23151                           postdec2	equ	0xFDD
 23152                           plusw2	equ	0xFDB
 23153                           fsr2h	equ	0xFDA
 23154                           fsr2l	equ	0xFD9
 23155                           status	equ	0xFD8
 23156                           
 23157 ;; *************** function ___fttol *****************
 23158 ;; Defined at:
 23159 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 23160 ;; Parameters:    Size  Location     Type
 23161 ;;  f1              3    0[BANK0 ] float 
 23162 ;; Auto vars:     Size  Location     Type
 23163 ;;  lval            4   10[BANK0 ] unsigned long 
 23164 ;;  exp1            1   14[BANK0 ] unsigned char 
 23165 ;;  sign1           1    9[BANK0 ] unsigned char 
 23166 ;; Return value:  Size  Location     Type
 23167 ;;                  4    0[BANK0 ] long 
 23168 ;; Registers used:
 23169 ;;		wreg, status,2, status,0
 23170 ;; Tracked objects:
 23171 ;;		On entry : 0/0
 23172 ;;		On exit  : 0/0
 23173 ;;		Unchanged: 0/0
 23174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23175 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23176 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23177 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23178 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23179 ;;Total ram usage:       15 bytes
 23180 ;; Hardware stack levels used:    1
 23181 ;; Hardware stack levels required when called:   10
 23182 ;; This function calls:
 23183 ;;		Nothing
 23184 ;; This function is called by:
 23185 ;;		__display_efficiency
 23186 ;; This function uses a non-reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text105
 23190  00EE0E                     __ptext105:
 23191                           	opt stack 0
 23192  00EE0E                     ___fttol:
 23193                           	opt stack 18
 23194                           
 23195                           ;incstack = 0
 23196  00EE0E  C062  F064         	movff	___fttol@f1+2,??___fttol
 23197  00EE12  0100               	movlb	0	; () banked
 23198  00EE14  6B65               	clrf	(??___fttol+1)& (0+255),b
 23199  00EE16  6B66               	clrf	(??___fttol+2)& (0+255),b
 23200  00EE18  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
 23201  00EE1A  3764               	rlcf	??___fttol& (0+255),f,b
 23202  00EE1C  E301               	bnc	u12151
 23203  00EE1E  8165               	bsf	(??___fttol+1)& (0+255),0,b
 23204  00EE20                     u12151:
 23205  00EE20  5164               	movf	??___fttol& (0+255),w,b
 23206  00EE22  6F6E               	movwf	___fttol@exp1& (0+255),b
 23207  00EE24  516E               	movf	___fttol@exp1& (0+255),w,b
 23208  00EE26  A4D8               	btfss	status,2,c
 23209  00EE28  D009               	goto	l3631
 23210                           
 23211                           ; BSR set to: 0
 23212  00EE2A  0E00               	movlw	0
 23213  00EE2C  6F60               	movwf	?___fttol& (0+255),b
 23214  00EE2E  0E00               	movlw	0
 23215  00EE30  6F61               	movwf	(?___fttol+1)& (0+255),b
 23216  00EE32  0E00               	movlw	0
 23217  00EE34  6F62               	movwf	(?___fttol+2)& (0+255),b
 23218  00EE36  0E00               	movlw	0
 23219  00EE38  6F63               	movwf	(?___fttol+3)& (0+255),b
 23220                           
 23221                           ; BSR set to: 0
 23222  00EE3A  0012               	return	
 23223  00EE3C                     l3631:
 23224                           
 23225                           ; BSR set to: 0
 23226                           
 23227                           ; BSR set to: 0
 23228  00EE3C  0E17               	movlw	23
 23229  00EE3E  6F64               	movwf	??___fttol& (0+255),b
 23230  00EE40  C060  F065         	movff	___fttol@f1,??___fttol+1
 23231  00EE44  C061  F066         	movff	___fttol@f1+1,??___fttol+2
 23232  00EE48  C062  F067         	movff	___fttol@f1+2,??___fttol+3
 23233  00EE4C  2964               	incf	??___fttol& (0+255),w,b
 23234  00EE4E  6F68               	movwf	(??___fttol+4)& (0+255),b
 23235  00EE50  D004               	goto	u12170
 23236  00EE52                     u12175:
 23237  00EE52  90D8               	bcf	status,0,c
 23238  00EE54  3367               	rrcf	(??___fttol+3)& (0+255),f,b
 23239  00EE56  3366               	rrcf	(??___fttol+2)& (0+255),f,b
 23240  00EE58  3365               	rrcf	(??___fttol+1)& (0+255),f,b
 23241  00EE5A                     u12170:
 23242  00EE5A  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
 23243  00EE5C  D7FA               	goto	u12175
 23244  00EE5E  0100               	movlb	0	; () banked
 23245  00EE60  5165               	movf	(??___fttol+1)& (0+255),w,b
 23246  00EE62  6F69               	movwf	___fttol@sign1& (0+255),b
 23247                           
 23248                           ; BSR set to: 0
 23249  00EE64  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
 23250                           
 23251                           ; BSR set to: 0
 23252  00EE66  0EFF               	movlw	255
 23253  00EE68  1760               	andwf	___fttol@f1& (0+255),f,b
 23254  00EE6A  0EFF               	movlw	255
 23255  00EE6C  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
 23256  00EE6E  0E00               	movlw	0
 23257  00EE70  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
 23258                           
 23259                           ; BSR set to: 0
 23260  00EE72  5160               	movf	___fttol@f1& (0+255),w,b
 23261  00EE74  6F6A               	movwf	___fttol@lval& (0+255),b
 23262  00EE76  5161               	movf	(___fttol@f1+1)& (0+255),w,b
 23263  00EE78  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
 23264  00EE7A  5162               	movf	(___fttol@f1+2)& (0+255),w,b
 23265  00EE7C  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
 23266  00EE7E  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
 23267                           
 23268                           ; BSR set to: 0
 23269  00EE80  0E8E               	movlw	142
 23270  00EE82  5F6E               	subwf	___fttol@exp1& (0+255),f,b
 23271                           
 23272                           ; BSR set to: 0
 23273  00EE84  AF6E               	btfss	___fttol@exp1& (0+255),7,b
 23274  00EE86  D016               	goto	l3633
 23275                           
 23276                           ; BSR set to: 0
 23277  00EE88  516E               	movf	___fttol@exp1& (0+255),w,b
 23278  00EE8A  0A80               	xorlw	128
 23279  00EE8C  0F8F               	addlw	143
 23280  00EE8E  B0D8               	btfsc	status,0,c
 23281  00EE90  D009               	goto	l3634
 23282                           
 23283                           ; BSR set to: 0
 23284  00EE92  0E00               	movlw	0
 23285  00EE94  6F60               	movwf	?___fttol& (0+255),b
 23286  00EE96  0E00               	movlw	0
 23287  00EE98  6F61               	movwf	(?___fttol+1)& (0+255),b
 23288  00EE9A  0E00               	movlw	0
 23289  00EE9C  6F62               	movwf	(?___fttol+2)& (0+255),b
 23290  00EE9E  0E00               	movlw	0
 23291  00EEA0  6F63               	movwf	(?___fttol+3)& (0+255),b
 23292                           
 23293                           ; BSR set to: 0
 23294  00EEA2  0012               	return	
 23295  00EEA4                     l3634:
 23296                           
 23297                           ; BSR set to: 0
 23298                           
 23299                           ; BSR set to: 0
 23300                           
 23301                           ; BSR set to: 0
 23302  00EEA4  90D8               	bcf	status,0,c
 23303  00EEA6  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 23304  00EEA8  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 23305  00EEAA  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 23306  00EEAC  336A               	rrcf	___fttol@lval& (0+255),f,b
 23307                           
 23308                           ; BSR set to: 0
 23309  00EEAE  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
 23310  00EEB0  D7F9               	goto	l3634
 23311                           
 23312                           ; BSR set to: 0
 23313  00EEB2  D015               	goto	u12210
 23314  00EEB4                     l3633:
 23315                           
 23316                           ; BSR set to: 0
 23317                           
 23318                           ; BSR set to: 0
 23319  00EEB4  0E17               	movlw	23
 23320  00EEB6  656E               	cpfsgt	___fttol@exp1& (0+255),b
 23321  00EEB8  D00F               	goto	l3639
 23322                           
 23323                           ; BSR set to: 0
 23324  00EEBA  0E00               	movlw	0
 23325  00EEBC  6F60               	movwf	?___fttol& (0+255),b
 23326  00EEBE  0E00               	movlw	0
 23327  00EEC0  6F61               	movwf	(?___fttol+1)& (0+255),b
 23328  00EEC2  0E00               	movlw	0
 23329  00EEC4  6F62               	movwf	(?___fttol+2)& (0+255),b
 23330  00EEC6  0E00               	movlw	0
 23331  00EEC8  6F63               	movwf	(?___fttol+3)& (0+255),b
 23332                           
 23333                           ; BSR set to: 0
 23334  00EECA  0012               	return	
 23335  00EECC                     
 23336                           ; BSR set to: 0
 23337                           
 23338                           ; BSR set to: 0
 23339  00EECC  90D8               	bcf	status,0,c
 23340  00EECE  376A               	rlcf	___fttol@lval& (0+255),f,b
 23341  00EED0  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 23342  00EED2  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 23343  00EED4  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 23344  00EED6  076E               	decf	___fttol@exp1& (0+255),f,b
 23345  00EED8                     l3639:
 23346                           
 23347                           ; BSR set to: 0
 23348                           
 23349                           ; BSR set to: 0
 23350  00EED8  516E               	movf	___fttol@exp1& (0+255),w,b
 23351  00EEDA  A4D8               	btfss	status,2,c
 23352  00EEDC  D7F7               	goto	l3640
 23353  00EEDE                     u12210:
 23354                           
 23355                           ; BSR set to: 0
 23356                           
 23357                           ; BSR set to: 0
 23358                           
 23359                           ; BSR set to: 0
 23360  00EEDE  5169               	movf	___fttol@sign1& (0+255),w,b
 23361  00EEE0  B4D8               	btfsc	status,2,c
 23362  00EEE2  D008               	goto	l3642
 23363                           
 23364                           ; BSR set to: 0
 23365  00EEE4  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
 23366  00EEE6  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
 23367  00EEE8  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
 23368  00EEEA  6D6A               	negf	___fttol@lval& (0+255),b
 23369  00EEEC  0E00               	movlw	0
 23370  00EEEE  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 23371  00EEF0  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 23372  00EEF2  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 23373  00EEF4                     l3642:
 23374                           
 23375                           ; BSR set to: 0
 23376                           
 23377                           ; BSR set to: 0
 23378  00EEF4  C06A  F060         	movff	___fttol@lval,?___fttol
 23379  00EEF8  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 23380  00EEFC  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 23381  00EF00  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 23382  00EF04  0012               	return	
 23383  00EF06                     __end_of___fttol:
 23384                           	opt stack 0
 23385                           tblptru	equ	0xFF8
 23386                           tblptrh	equ	0xFF7
 23387                           tblptrl	equ	0xFF6
 23388                           tablat	equ	0xFF5
 23389                           prodh	equ	0xFF4
 23390                           prodl	equ	0xFF3
 23391                           intcon	equ	0xFF2
 23392                           intcon2	equ	0xFF1
 23393                           intcon3	equ	0xFF0
 23394                           postinc0	equ	0xFEE
 23395                           wreg	equ	0xFE8
 23396                           indf1	equ	0xFE7
 23397                           postinc1	equ	0xFE6
 23398                           postdec1	equ	0xFE5
 23399                           plusw1	equ	0xFE3
 23400                           fsr1h	equ	0xFE2
 23401                           fsr1l	equ	0xFE1
 23402                           indf2	equ	0xFDF
 23403                           postinc2	equ	0xFDE
 23404                           postdec2	equ	0xFDD
 23405                           plusw2	equ	0xFDB
 23406                           fsr2h	equ	0xFDA
 23407                           fsr2l	equ	0xFD9
 23408                           status	equ	0xFD8
 23409                           
 23410 ;; *************** function ___altoft *****************
 23411 ;; Defined at:
 23412 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\altoft.c"
 23413 ;; Parameters:    Size  Location     Type
 23414 ;;  c               4   14[BANK0 ] long 
 23415 ;; Auto vars:     Size  Location     Type
 23416 ;;  sign            1   23[BANK0 ] unsigned char 
 23417 ;;  exp             1   22[BANK0 ] unsigned char 
 23418 ;; Return value:  Size  Location     Type
 23419 ;;                  3   14[BANK0 ] float 
 23420 ;; Registers used:
 23421 ;;		wreg, status,2, status,0, cstack
 23422 ;; Tracked objects:
 23423 ;;		On entry : 0/0
 23424 ;;		On exit  : 0/0
 23425 ;;		Unchanged: 0/0
 23426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23430 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23431 ;;Total ram usage:       10 bytes
 23432 ;; Hardware stack levels used:    1
 23433 ;; Hardware stack levels required when called:   11
 23434 ;; This function calls:
 23435 ;;		___ftpack
 23436 ;; This function is called by:
 23437 ;;		__display_efficiency
 23438 ;; This function uses a non-reentrant model
 23439 ;;
 23440                           
 23441                           	psect	text106
 23442  010F86                     __ptext106:
 23443                           	opt stack 0
 23444  010F86                     ___altoft:
 23445                           	opt stack 17
 23446                           
 23447                           ; BSR set to: 0
 23448                           ;incstack = 0
 23449  010F86  0E00               	movlw	0
 23450  010F88  0100               	movlb	0	; () banked
 23451  010F8A  6F77               	movwf	___altoft@sign& (0+255),b
 23452  010F8C  0E8E               	movlw	142
 23453  010F8E  6F76               	movwf	___altoft@exp& (0+255),b
 23454                           
 23455                           ; BSR set to: 0
 23456  010F90  AF71               	btfss	(___altoft@c+3)& (0+255),7,b
 23457  010F92  D011               	goto	l3401
 23458                           
 23459                           ; BSR set to: 0
 23460  010F94  1F71               	comf	(___altoft@c+3)& (0+255),f,b
 23461  010F96  1F70               	comf	(___altoft@c+2)& (0+255),f,b
 23462  010F98  1F6F               	comf	(___altoft@c+1)& (0+255),f,b
 23463  010F9A  6D6E               	negf	___altoft@c& (0+255),b
 23464  010F9C  0E00               	movlw	0
 23465  010F9E  236F               	addwfc	(___altoft@c+1)& (0+255),f,b
 23466  010FA0  2370               	addwfc	(___altoft@c+2)& (0+255),f,b
 23467  010FA2  2371               	addwfc	(___altoft@c+3)& (0+255),f,b
 23468                           
 23469                           ; BSR set to: 0
 23470  010FA4  0E01               	movlw	1
 23471  010FA6  6F77               	movwf	___altoft@sign& (0+255),b
 23472                           
 23473                           ; BSR set to: 0
 23474  010FA8  D006               	goto	l3401
 23475  010FAA                     
 23476                           ; BSR set to: 0
 23477                           
 23478                           ; BSR set to: 0
 23479  010FAA  90D8               	bcf	status,0,c
 23480  010FAC  3371               	rrcf	(___altoft@c+3)& (0+255),f,b
 23481  010FAE  3370               	rrcf	(___altoft@c+2)& (0+255),f,b
 23482  010FB0  336F               	rrcf	(___altoft@c+1)& (0+255),f,b
 23483  010FB2  336E               	rrcf	___altoft@c& (0+255),f,b
 23484  010FB4  2B76               	incf	___altoft@exp& (0+255),f,b
 23485  010FB6                     l3401:
 23486                           
 23487                           ; BSR set to: 0
 23488                           
 23489                           ; BSR set to: 0
 23490  010FB6  0E00               	movlw	0
 23491  010FB8  156E               	andwf	___altoft@c& (0+255),w,b
 23492  010FBA  6F72               	movwf	??___altoft& (0+255),b
 23493  010FBC  0E00               	movlw	0
 23494  010FBE  156F               	andwf	(___altoft@c+1)& (0+255),w,b
 23495  010FC0  6F73               	movwf	(??___altoft+1)& (0+255),b
 23496  010FC2  0E00               	movlw	0
 23497  010FC4  1570               	andwf	(___altoft@c+2)& (0+255),w,b
 23498  010FC6  6F74               	movwf	(??___altoft+2)& (0+255),b
 23499  010FC8  0EFF               	movlw	255
 23500  010FCA  1571               	andwf	(___altoft@c+3)& (0+255),w,b
 23501  010FCC  6F75               	movwf	(??___altoft+3)& (0+255),b
 23502  010FCE  5172               	movf	??___altoft& (0+255),w,b
 23503  010FD0  1173               	iorwf	(??___altoft+1)& (0+255),w,b
 23504  010FD2  1174               	iorwf	(??___altoft+2)& (0+255),w,b
 23505  010FD4  1175               	iorwf	(??___altoft+3)& (0+255),w,b
 23506  010FD6  A4D8               	btfss	status,2,c
 23507  010FD8  D7E8               	goto	l3402
 23508                           
 23509                           ; BSR set to: 0
 23510                           
 23511                           ; BSR set to: 0
 23512  010FDA  C06E  F060         	movff	___altoft@c,___ftpack@arg
 23513  010FDE  C06F  F061         	movff	___altoft@c+1,___ftpack@arg+1
 23514  010FE2  C070  F062         	movff	___altoft@c+2,___ftpack@arg+2
 23515  010FE6  C076  F063         	movff	___altoft@exp,___ftpack@exp
 23516  010FEA  C077  F064         	movff	___altoft@sign,___ftpack@sign
 23517  010FEE  EC52  F080         	call	___ftpack	;wreg free
 23518  010FF2  C060  F06E         	movff	?___ftpack,?___altoft
 23519  010FF6  C061  F06F         	movff	?___ftpack+1,?___altoft+1
 23520  010FFA  C062  F070         	movff	?___ftpack+2,?___altoft+2
 23521  010FFE  0012               	return	
 23522  011000                     __end_of___altoft:
 23523                           	opt stack 0
 23524                           tblptru	equ	0xFF8
 23525                           tblptrh	equ	0xFF7
 23526                           tblptrl	equ	0xFF6
 23527                           tablat	equ	0xFF5
 23528                           prodh	equ	0xFF4
 23529                           prodl	equ	0xFF3
 23530                           intcon	equ	0xFF2
 23531                           intcon2	equ	0xFF1
 23532                           intcon3	equ	0xFF0
 23533                           postinc0	equ	0xFEE
 23534                           wreg	equ	0xFE8
 23535                           indf1	equ	0xFE7
 23536                           postinc1	equ	0xFE6
 23537                           postdec1	equ	0xFE5
 23538                           plusw1	equ	0xFE3
 23539                           fsr1h	equ	0xFE2
 23540                           fsr1l	equ	0xFE1
 23541                           indf2	equ	0xFDF
 23542                           postinc2	equ	0xFDE
 23543                           postdec2	equ	0xFDD
 23544                           plusw2	equ	0xFDB
 23545                           fsr2h	equ	0xFDA
 23546                           fsr2l	equ	0xFD9
 23547                           status	equ	0xFD8
 23548                           
 23549 ;; *************** function ___ftpack *****************
 23550 ;; Defined at:
 23551 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 23552 ;; Parameters:    Size  Location     Type
 23553 ;;  arg             3    0[BANK0 ] unsigned um
 23554 ;;  exp             1    3[BANK0 ] unsigned char 
 23555 ;;  sign            1    4[BANK0 ] unsigned char 
 23556 ;; Auto vars:     Size  Location     Type
 23557 ;;		None
 23558 ;; Return value:  Size  Location     Type
 23559 ;;                  3    0[BANK0 ] float 
 23560 ;; Registers used:
 23561 ;;		wreg, status,2, status,0
 23562 ;; Tracked objects:
 23563 ;;		On entry : 0/0
 23564 ;;		On exit  : 0/0
 23565 ;;		Unchanged: 0/0
 23566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23567 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23569 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23570 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23571 ;;Total ram usage:        8 bytes
 23572 ;; Hardware stack levels used:    1
 23573 ;; Hardware stack levels required when called:   10
 23574 ;; This function calls:
 23575 ;;		Nothing
 23576 ;; This function is called by:
 23577 ;;		___altoft
 23578 ;; This function uses a non-reentrant model
 23579 ;;
 23580                           
 23581                           	psect	text107
 23582  0100A4                     __ptext107:
 23583                           	opt stack 0
 23584  0100A4                     ___ftpack:
 23585                           	opt stack 17
 23586                           
 23587                           ;incstack = 0
 23588  0100A4  0100               	movlb	0	; () banked
 23589  0100A6  5163               	movf	___ftpack@exp& (0+255),w,b
 23590  0100A8  B4D8               	btfsc	status,2,c
 23591  0100AA  D005               	goto	u11010
 23592                           
 23593                           ; BSR set to: 0
 23594  0100AC  5160               	movf	___ftpack@arg& (0+255),w,b
 23595  0100AE  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 23596  0100B0  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 23597  0100B2  A4D8               	btfss	status,2,c
 23598  0100B4  D00C               	goto	l3531
 23599  0100B6                     u11010:
 23600                           
 23601                           ; BSR set to: 0
 23602                           
 23603                           ; BSR set to: 0
 23604  0100B6  0E00               	movlw	0
 23605  0100B8  6F60               	movwf	?___ftpack& (0+255),b
 23606  0100BA  0E00               	movlw	0
 23607  0100BC  6F61               	movwf	(?___ftpack+1)& (0+255),b
 23608  0100BE  0E00               	movlw	0
 23609  0100C0  6F62               	movwf	(?___ftpack+2)& (0+255),b
 23610                           
 23611                           ; BSR set to: 0
 23612  0100C2  0012               	return	
 23613  0100C4                     
 23614                           ; BSR set to: 0
 23615                           
 23616                           ; BSR set to: 0
 23617  0100C4  2B63               	incf	___ftpack@exp& (0+255),f,b
 23618  0100C6  90D8               	bcf	status,0,c
 23619  0100C8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23620  0100CA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23621  0100CC  3360               	rrcf	___ftpack@arg& (0+255),f,b
 23622  0100CE                     l3531:
 23623                           
 23624                           ; BSR set to: 0
 23625                           
 23626                           ; BSR set to: 0
 23627  0100CE  0E00               	movlw	0
 23628  0100D0  1560               	andwf	___ftpack@arg& (0+255),w,b
 23629  0100D2  6F65               	movwf	??___ftpack& (0+255),b
 23630  0100D4  0E00               	movlw	0
 23631  0100D6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23632  0100D8  6F66               	movwf	(??___ftpack+1)& (0+255),b
 23633  0100DA  0EFE               	movlw	254
 23634  0100DC  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23635  0100DE  6F67               	movwf	(??___ftpack+2)& (0+255),b
 23636  0100E0  5165               	movf	??___ftpack& (0+255),w,b
 23637  0100E2  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 23638  0100E4  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 23639  0100E6  B4D8               	btfsc	status,2,c
 23640  0100E8  D00C               	goto	l3534
 23641  0100EA  D7EC               	goto	l3532
 23642  0100EC                     
 23643                           ; BSR set to: 0
 23644                           
 23645                           ; BSR set to: 0
 23646  0100EC  2B63               	incf	___ftpack@exp& (0+255),f,b
 23647                           
 23648                           ; BSR set to: 0
 23649  0100EE  0E01               	movlw	1
 23650  0100F0  2760               	addwf	___ftpack@arg& (0+255),f,b
 23651  0100F2  0E00               	movlw	0
 23652  0100F4  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 23653  0100F6  0E00               	movlw	0
 23654  0100F8  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 23655  0100FA  90D8               	bcf	status,0,c
 23656  0100FC  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23657  0100FE  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23658  010100  3360               	rrcf	___ftpack@arg& (0+255),f,b
 23659  010102                     l3534:
 23660                           
 23661                           ; BSR set to: 0
 23662                           
 23663                           ; BSR set to: 0
 23664  010102  0E00               	movlw	0
 23665  010104  1560               	andwf	___ftpack@arg& (0+255),w,b
 23666  010106  6F65               	movwf	??___ftpack& (0+255),b
 23667  010108  0E00               	movlw	0
 23668  01010A  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23669  01010C  6F66               	movwf	(??___ftpack+1)& (0+255),b
 23670  01010E  0EFF               	movlw	255
 23671  010110  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23672  010112  6F67               	movwf	(??___ftpack+2)& (0+255),b
 23673  010114  5165               	movf	??___ftpack& (0+255),w,b
 23674  010116  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 23675  010118  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 23676  01011A  B4D8               	btfsc	status,2,c
 23677  01011C  D006               	goto	l3537
 23678  01011E  D7E6               	goto	l3535
 23679  010120                     
 23680                           ; BSR set to: 0
 23681                           
 23682                           ; BSR set to: 0
 23683  010120  0763               	decf	___ftpack@exp& (0+255),f,b
 23684  010122  90D8               	bcf	status,0,c
 23685  010124  3760               	rlcf	___ftpack@arg& (0+255),f,b
 23686  010126  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 23687  010128  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 23688  01012A                     l3537:
 23689                           
 23690                           ; BSR set to: 0
 23691                           
 23692                           ; BSR set to: 0
 23693  01012A  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 23694  01012C  D003               	goto	u11050
 23695                           
 23696                           ; BSR set to: 0
 23697  01012E  0E02               	movlw	2
 23698  010130  6163               	cpfslt	___ftpack@exp& (0+255),b
 23699  010132  D7F6               	goto	l3538
 23700  010134                     u11050:
 23701                           
 23702                           ; BSR set to: 0
 23703                           
 23704                           ; BSR set to: 0
 23705  010134  A163               	btfss	___ftpack@exp& (0+255),0,b
 23706                           
 23707                           ; BSR set to: 0
 23708  010136  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 23709                           
 23710                           ; BSR set to: 0
 23711                           
 23712                           ; BSR set to: 0
 23713  010138  90D8               	bcf	status,0,c
 23714  01013A  3363               	rrcf	___ftpack@exp& (0+255),f,b
 23715  01013C  5163               	movf	___ftpack@exp& (0+255),w,b
 23716  01013E  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 23717                           
 23718                           ; BSR set to: 0
 23719  010140  5164               	movf	___ftpack@sign& (0+255),w,b
 23720  010142  A4D8               	btfss	status,2,c
 23721                           
 23722                           ; BSR set to: 0
 23723  010144  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 23724                           
 23725                           ; BSR set to: 0
 23726                           
 23727                           ; BSR set to: 0
 23728  010146  C060  F060         	movff	___ftpack@arg,?___ftpack
 23729  01014A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 23730  01014E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 23731  010152  0012               	return	
 23732  010154                     __end_of___ftpack:
 23733                           	opt stack 0
 23734                           tblptru	equ	0xFF8
 23735                           tblptrh	equ	0xFF7
 23736                           tblptrl	equ	0xFF6
 23737                           tablat	equ	0xFF5
 23738                           prodh	equ	0xFF4
 23739                           prodl	equ	0xFF3
 23740                           intcon	equ	0xFF2
 23741                           intcon2	equ	0xFF1
 23742                           intcon3	equ	0xFF0
 23743                           postinc0	equ	0xFEE
 23744                           wreg	equ	0xFE8
 23745                           indf1	equ	0xFE7
 23746                           postinc1	equ	0xFE6
 23747                           postdec1	equ	0xFE5
 23748                           plusw1	equ	0xFE3
 23749                           fsr1h	equ	0xFE2
 23750                           fsr1l	equ	0xFE1
 23751                           indf2	equ	0xFDF
 23752                           postinc2	equ	0xFDE
 23753                           postdec2	equ	0xFDD
 23754                           plusw2	equ	0xFDB
 23755                           fsr2h	equ	0xFDA
 23756                           fsr2l	equ	0xFD9
 23757                           status	equ	0xFD8
 23758                           
 23759 ;; *************** function ___aldiv *****************
 23760 ;; Defined at:
 23761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
 23762 ;; Parameters:    Size  Location     Type
 23763 ;;  dividend        4    0[BANK0 ] long 
 23764 ;;  divisor         4    4[BANK0 ] long 
 23765 ;; Auto vars:     Size  Location     Type
 23766 ;;  quotient        4   10[BANK0 ] long 
 23767 ;;  sign            1    9[BANK0 ] unsigned char 
 23768 ;;  counter         1    8[BANK0 ] unsigned char 
 23769 ;; Return value:  Size  Location     Type
 23770 ;;                  4    0[BANK0 ] long 
 23771 ;; Registers used:
 23772 ;;		wreg, status,2, status,0
 23773 ;; Tracked objects:
 23774 ;;		On entry : 0/0
 23775 ;;		On exit  : 0/0
 23776 ;;		Unchanged: 0/0
 23777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23778 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23779 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23781 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23782 ;;Total ram usage:       14 bytes
 23783 ;; Hardware stack levels used:    1
 23784 ;; Hardware stack levels required when called:   10
 23785 ;; This function calls:
 23786 ;;		Nothing
 23787 ;; This function is called by:
 23788 ;;		__display_efficiency
 23789 ;;		__get_input_power
 23790 ;;		_log_generate_entry
 23791 ;; This function uses a non-reentrant model
 23792 ;;
 23793                           
 23794                           	psect	text108
 23795  00F9D0                     __ptext108:
 23796                           	opt stack 0
 23797  00F9D0                     ___aldiv:
 23798                           	opt stack 18
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;incstack = 0
 23802  00F9D0  0E00               	movlw	0
 23803  00F9D2  0100               	movlb	0	; () banked
 23804  00F9D4  6F69               	movwf	___aldiv@sign& (0+255),b
 23805                           
 23806                           ; BSR set to: 0
 23807  00F9D6  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23808  00F9D8  D00A               	goto	l3372
 23809                           
 23810                           ; BSR set to: 0
 23811  00F9DA  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 23812  00F9DC  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 23813  00F9DE  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 23814  00F9E0  6D64               	negf	___aldiv@divisor& (0+255),b
 23815  00F9E2  0E00               	movlw	0
 23816  00F9E4  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 23817  00F9E6  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 23818  00F9E8  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 23819                           
 23820                           ; BSR set to: 0
 23821  00F9EA  0E01               	movlw	1
 23822  00F9EC  6F69               	movwf	___aldiv@sign& (0+255),b
 23823  00F9EE                     l3372:
 23824                           
 23825                           ; BSR set to: 0
 23826                           
 23827                           ; BSR set to: 0
 23828  00F9EE  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 23829  00F9F0  D00A               	goto	l3373
 23830                           
 23831                           ; BSR set to: 0
 23832  00F9F2  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 23833  00F9F4  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 23834  00F9F6  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 23835  00F9F8  6D60               	negf	___aldiv@dividend& (0+255),b
 23836  00F9FA  0E00               	movlw	0
 23837  00F9FC  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 23838  00F9FE  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 23839  00FA00  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 23840                           
 23841                           ; BSR set to: 0
 23842  00FA02  0E01               	movlw	1
 23843  00FA04  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 23844  00FA06                     l3373:
 23845                           
 23846                           ; BSR set to: 0
 23847                           
 23848                           ; BSR set to: 0
 23849  00FA06  0E00               	movlw	0
 23850  00FA08  6F6A               	movwf	___aldiv@quotient& (0+255),b
 23851  00FA0A  0E00               	movlw	0
 23852  00FA0C  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 23853  00FA0E  0E00               	movlw	0
 23854  00FA10  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 23855  00FA12  0E00               	movlw	0
 23856  00FA14  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 23857                           
 23858                           ; BSR set to: 0
 23859  00FA16  5164               	movf	___aldiv@divisor& (0+255),w,b
 23860  00FA18  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 23861  00FA1A  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 23862  00FA1C  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 23863  00FA1E  B4D8               	btfsc	status,2,c
 23864  00FA20  D02A               	goto	l3380
 23865                           
 23866                           ; BSR set to: 0
 23867  00FA22  0E01               	movlw	1
 23868  00FA24  6F68               	movwf	___aldiv@counter& (0+255),b
 23869  00FA26  D006               	goto	l3375
 23870  00FA28                     
 23871                           ; BSR set to: 0
 23872                           
 23873                           ; BSR set to: 0
 23874  00FA28  90D8               	bcf	status,0,c
 23875  00FA2A  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 23876  00FA2C  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 23877  00FA2E  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 23878  00FA30  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 23879  00FA32  2B68               	incf	___aldiv@counter& (0+255),f,b
 23880  00FA34                     l3375:
 23881                           
 23882                           ; BSR set to: 0
 23883                           
 23884                           ; BSR set to: 0
 23885  00FA34  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23886  00FA36  D7F8               	goto	l3376
 23887  00FA38                     u12100:
 23888                           
 23889                           ; BSR set to: 0
 23890                           
 23891                           ; BSR set to: 0
 23892                           
 23893                           ; BSR set to: 0
 23894  00FA38  90D8               	bcf	status,0,c
 23895  00FA3A  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 23896  00FA3C  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 23897  00FA3E  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 23898  00FA40  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 23899                           
 23900                           ; BSR set to: 0
 23901  00FA42  5164               	movf	___aldiv@divisor& (0+255),w,b
 23902  00FA44  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 23903  00FA46  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23904  00FA48  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 23905  00FA4A  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23906  00FA4C  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 23907  00FA4E  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23908  00FA50  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 23909  00FA52  A0D8               	btfss	status,0,c
 23910  00FA54  D009               	goto	l3379
 23911                           
 23912                           ; BSR set to: 0
 23913  00FA56  5164               	movf	___aldiv@divisor& (0+255),w,b
 23914  00FA58  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 23915  00FA5A  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23916  00FA5C  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 23917  00FA5E  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23918  00FA60  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 23919  00FA62  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23920  00FA64  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 23921                           
 23922                           ; BSR set to: 0
 23923  00FA66  816A               	bsf	___aldiv@quotient& (0+255),0,b
 23924  00FA68                     l3379:
 23925                           
 23926                           ; BSR set to: 0
 23927                           
 23928                           ; BSR set to: 0
 23929  00FA68  90D8               	bcf	status,0,c
 23930  00FA6A  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 23931  00FA6C  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 23932  00FA6E  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 23933  00FA70  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 23934                           
 23935                           ; BSR set to: 0
 23936  00FA72  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 23937  00FA74  D7E1               	goto	u12100
 23938  00FA76                     l3380:
 23939                           
 23940                           ; BSR set to: 0
 23941                           
 23942                           ; BSR set to: 0
 23943                           
 23944                           ; BSR set to: 0
 23945  00FA76  5169               	movf	___aldiv@sign& (0+255),w,b
 23946  00FA78  B4D8               	btfsc	status,2,c
 23947  00FA7A  D008               	goto	l3381
 23948                           
 23949                           ; BSR set to: 0
 23950  00FA7C  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 23951  00FA7E  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 23952  00FA80  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 23953  00FA82  6D6A               	negf	___aldiv@quotient& (0+255),b
 23954  00FA84  0E00               	movlw	0
 23955  00FA86  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 23956  00FA88  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 23957  00FA8A  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 23958  00FA8C                     l3381:
 23959                           
 23960                           ; BSR set to: 0
 23961                           
 23962                           ; BSR set to: 0
 23963  00FA8C  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 23964  00FA90  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 23965  00FA94  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 23966  00FA98  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 23967  00FA9C  0012               	return	
 23968  00FA9E                     __end_of___aldiv:
 23969                           	opt stack 0
 23970                           tblptru	equ	0xFF8
 23971                           tblptrh	equ	0xFF7
 23972                           tblptrl	equ	0xFF6
 23973                           tablat	equ	0xFF5
 23974                           prodh	equ	0xFF4
 23975                           prodl	equ	0xFF3
 23976                           intcon	equ	0xFF2
 23977                           intcon2	equ	0xFF1
 23978                           intcon3	equ	0xFF0
 23979                           postinc0	equ	0xFEE
 23980                           wreg	equ	0xFE8
 23981                           indf1	equ	0xFE7
 23982                           postinc1	equ	0xFE6
 23983                           postdec1	equ	0xFE5
 23984                           plusw1	equ	0xFE3
 23985                           fsr1h	equ	0xFE2
 23986                           fsr1l	equ	0xFE1
 23987                           indf2	equ	0xFDF
 23988                           postinc2	equ	0xFDE
 23989                           postdec2	equ	0xFDD
 23990                           plusw2	equ	0xFDB
 23991                           fsr2h	equ	0xFDA
 23992                           fsr2l	equ	0xFD9
 23993                           status	equ	0xFD8
 23994                           
 23995 ;; *************** function __display_clear *****************
 23996 ;; Defined at:
 23997 ;;		line 28 in file "display.c"
 23998 ;; Parameters:    Size  Location     Type
 23999 ;;		None
 24000 ;; Auto vars:     Size  Location     Type
 24001 ;;  col             1    3[BANK0 ] unsigned char 
 24002 ;;  row             1    2[BANK0 ] unsigned char 
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  1    wreg      void 
 24005 ;; Registers used:
 24006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24007 ;; Tracked objects:
 24008 ;;		On entry : 0/0
 24009 ;;		On exit  : 0/0
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24015 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24016 ;;Total ram usage:        4 bytes
 24017 ;; Hardware stack levels used:    1
 24018 ;; Hardware stack levels required when called:   10
 24019 ;; This function calls:
 24020 ;;		Nothing
 24021 ;; This function is called by:
 24022 ;;		_display_prepare
 24023 ;; This function uses a non-reentrant model
 24024 ;;
 24025                           
 24026                           	psect	text109
 24027  012082                     __ptext109:
 24028                           	opt stack 0
 24029  012082                     __display_clear:
 24030                           	opt stack 19
 24031                           
 24032                           ;display.c: 30: uint8_t row;
 24033                           ;display.c: 31: uint8_t col;
 24034                           ;display.c: 32: for(row=0;row<4;++row)
 24035                           
 24036                           ; BSR set to: 0
 24037                           ;incstack = 0
 24038  012082  0E00               	movlw	0
 24039  012084  0100               	movlb	0	; () banked
 24040  012086  6F62               	movwf	__display_clear@row& (0+255),b
 24041  012088                     l15219:
 24042                           
 24043                           ; BSR set to: 0
 24044  012088  0E03               	movlw	3
 24045  01208A  6562               	cpfsgt	__display_clear@row& (0+255),b
 24046  01208C  D001               	goto	l1906
 24047  01208E  0012               	return	
 24048  012090                     l1906:
 24049                           
 24050                           ; BSR set to: 0
 24051                           ;display.c: 33: {
 24052                           ;display.c: 34: for(col=0;col<20;++col)
 24053                           
 24054                           ; BSR set to: 0
 24055  012090  0E00               	movlw	0
 24056  012092  6F63               	movwf	__display_clear@col& (0+255),b
 24057  012094                     l15225:
 24058                           
 24059                           ; BSR set to: 0
 24060  012094  0E13               	movlw	19
 24061  012096  6563               	cpfsgt	__display_clear@col& (0+255),b
 24062  012098  D001               	goto	l1908
 24063  01209A  D016               	goto	u13300
 24064  01209C                     l1908:
 24065                           
 24066                           ; BSR set to: 0
 24067                           ;display.c: 35: {
 24068                           ;display.c: 36: display_content[row][col] = ' ';
 24069                           
 24070                           ; BSR set to: 0
 24071  01209C  5162               	movf	__display_clear@row& (0+255),w,b
 24072  01209E  0D14               	mullw	20
 24073  0120A0  0E54               	movlw	low _display_content
 24074  0120A2  6F60               	movwf	??__display_clear& (0+255),b
 24075  0120A4  0E03               	movlw	high _display_content
 24076  0120A6  6F61               	movwf	(??__display_clear+1)& (0+255),b
 24077  0120A8  50F3               	movf	prodl,w,c
 24078  0120AA  2760               	addwf	??__display_clear& (0+255),f,b
 24079  0120AC  50F4               	movf	prodh,w,c
 24080  0120AE  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 24081  0120B0  5163               	movf	__display_clear@col& (0+255),w,b
 24082  0120B2  0D01               	mullw	1
 24083  0120B4  50F3               	movf	prodl,w,c
 24084  0120B6  2560               	addwf	??__display_clear& (0+255),w,b
 24085  0120B8  6ED9               	movwf	fsr2l,c
 24086  0120BA  50F4               	movf	prodh,w,c
 24087  0120BC  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 24088  0120BE  6EDA               	movwf	fsr2h,c
 24089  0120C0  0E20               	movlw	32
 24090  0120C2  6EDF               	movwf	indf2,c
 24091                           
 24092                           ; BSR set to: 0
 24093  0120C4  2B63               	incf	__display_clear@col& (0+255),f,b
 24094  0120C6  D7E6               	goto	l15225
 24095  0120C8                     u13300:
 24096                           
 24097                           ; BSR set to: 0
 24098                           
 24099                           ; BSR set to: 0
 24100  0120C8  2B62               	incf	__display_clear@row& (0+255),f,b
 24101  0120CA  D7DE               	goto	l15219
 24102  0120CC                     __end_of__display_clear:
 24103                           	opt stack 0
 24104                           tblptru	equ	0xFF8
 24105                           tblptrh	equ	0xFF7
 24106                           tblptrl	equ	0xFF6
 24107                           tablat	equ	0xFF5
 24108                           prodh	equ	0xFF4
 24109                           prodl	equ	0xFF3
 24110                           intcon	equ	0xFF2
 24111                           intcon2	equ	0xFF1
 24112                           intcon3	equ	0xFF0
 24113                           postinc0	equ	0xFEE
 24114                           wreg	equ	0xFE8
 24115                           indf1	equ	0xFE7
 24116                           postinc1	equ	0xFE6
 24117                           postdec1	equ	0xFE5
 24118                           plusw1	equ	0xFE3
 24119                           fsr1h	equ	0xFE2
 24120                           fsr1l	equ	0xFE1
 24121                           indf2	equ	0xFDF
 24122                           postinc2	equ	0xFDE
 24123                           postdec2	equ	0xFDD
 24124                           plusw2	equ	0xFDB
 24125                           fsr2h	equ	0xFDA
 24126                           fsr2l	equ	0xFD9
 24127                           status	equ	0xFD8
 24128                           
 24129 ;; *************** function __display_charger *****************
 24130 ;; Defined at:
 24131 ;;		line 405 in file "display.c"
 24132 ;; Parameters:    Size  Location     Type
 24133 ;;		None
 24134 ;; Auto vars:     Size  Location     Type
 24135 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 24136 ;;  header         21   15[BANK1 ] const unsigned char [21]
 24137 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 24138 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 24139 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 24140 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 24141 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 24142 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 24143 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 24144 ;;  cntr            1  142[BANK1 ] unsigned char 
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  1    wreg      void 
 24147 ;; Registers used:
 24148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24149 ;; Tracked objects:
 24150 ;;		On entry : 0/0
 24151 ;;		On exit  : 0/0
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24155 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24157 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24158 ;;Total ram usage:      144 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:   14
 24161 ;; This function calls:
 24162 ;;		__display_itoa
 24163 ;;		_buck_get_dutycycle
 24164 ;;		_buck_get_mode
 24165 ;; This function is called by:
 24166 ;;		_display_prepare
 24167 ;; This function uses a non-reentrant model
 24168 ;;
 24169                           
 24170                           	psect	text110
 24171  00B786                     __ptext110:
 24172                           	opt stack 0
 24173  00B786                     __display_charger:
 24174                           	opt stack 15
 24175                           
 24176                           ;display.c: 407: uint8_t cntr;
 24177                           ;display.c: 408: const char header[] = "MPPT Charger Details";
 24178                           
 24179                           ; BSR set to: 0
 24180                           ;incstack = 0
 24181  00B786  0EC0               	movlw	low __display_charger@F8738
 24182  00B788  6EF6               	movwf	tblptrl,c
 24183  00B78A                     	if	1	;There is more than 1 active tblptr byte
 24184  00B78A  0E90               	movlw	high __display_charger@F8738
 24185  00B78C  6EF7               	movwf	tblptrh,c
 24186  00B78E                     	endif
 24187  00B78E                     	if	1	;There are 3 active tblptr bytes
 24188  00B78E  0E00               	movlw	low (__display_charger@F8738 shr (0+16))
 24189  00B790  6EF8               	movwf	tblptru,c
 24190  00B792                     	endif
 24191  00B792  EE21  F00F         	lfsr	2,__display_charger@header
 24192  00B796  0E14               	movlw	20
 24193  00B798                     u13910:
 24194  00B798  0009               	tblrd		*+
 24195  00B79A  CFF5 FFDE          	movff	tablat,postinc2
 24196  00B79E  06E8               	decf	wreg,f,c
 24197  00B7A0  E2FB               	bc	u13910
 24198                           
 24199                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 24200  00B7A2  0EB0               	movlw	low __display_charger@F8740
 24201  00B7A4  6EF6               	movwf	tblptrl,c
 24202  00B7A6                     	if	1	;There is more than 1 active tblptr byte
 24203  00B7A6  0E91               	movlw	high __display_charger@F8740
 24204  00B7A8  6EF7               	movwf	tblptrh,c
 24205  00B7AA                     	endif
 24206  00B7AA                     	if	1	;There are 3 active tblptr bytes
 24207  00B7AA  0E00               	movlw	low (__display_charger@F8740 shr (0+16))
 24208  00B7AC  6EF8               	movwf	tblptru,c
 24209  00B7AE                     	endif
 24210  00B7AE  EE21  F060         	lfsr	2,__display_charger@supply_on
 24211  00B7B2  0E11               	movlw	17
 24212  00B7B4                     u13920:
 24213  00B7B4  0009               	tblrd		*+
 24214  00B7B6  CFF5 FFDE          	movff	tablat,postinc2
 24215  00B7BA  06E8               	decf	wreg,f,c
 24216  00B7BC  E2FB               	bc	u13920
 24217                           
 24218                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 24219  00B7BE  0E9D               	movlw	low __display_charger@F8742
 24220  00B7C0  6EF6               	movwf	tblptrl,c
 24221  00B7C2                     	if	1	;There is more than 1 active tblptr byte
 24222  00B7C2  0E91               	movlw	high __display_charger@F8742
 24223  00B7C4  6EF7               	movwf	tblptrh,c
 24224  00B7C6                     	endif
 24225  00B7C6                     	if	1	;There are 3 active tblptr bytes
 24226  00B7C6  0E00               	movlw	low (__display_charger@F8742 shr (0+16))
 24227  00B7C8  6EF8               	movwf	tblptru,c
 24228  00B7CA                     	endif
 24229  00B7CA  EE21  F04D         	lfsr	2,__display_charger@supply_off
 24230  00B7CE  0E12               	movlw	18
 24231  00B7D0                     u13930:
 24232  00B7D0  0009               	tblrd		*+
 24233  00B7D2  CFF5 FFDE          	movff	tablat,postinc2
 24234  00B7D6  06E8               	decf	wreg,f,c
 24235  00B7D8  E2FB               	bc	u13930
 24236                           
 24237                           ;display.c: 411: const char fan_on[] = "Fan on";
 24238  00B7DA  0E2F               	movlw	low __display_charger@F8744
 24239  00B7DC  6EF6               	movwf	tblptrl,c
 24240  00B7DE                     	if	1	;There is more than 1 active tblptr byte
 24241  00B7DE  0E93               	movlw	high __display_charger@F8744
 24242  00B7E0  6EF7               	movwf	tblptrh,c
 24243  00B7E2                     	endif
 24244  00B7E2                     	if	1	;There are 3 active tblptr bytes
 24245  00B7E2  0E00               	movlw	low (__display_charger@F8744 shr (0+16))
 24246  00B7E4  6EF8               	movwf	tblptru,c
 24247  00B7E6                     	endif
 24248  00B7E6  EE21  F008         	lfsr	2,__display_charger@fan_on
 24249  00B7EA  0E06               	movlw	6
 24250  00B7EC                     u13940:
 24251  00B7EC  0009               	tblrd		*+
 24252  00B7EE  CFF5 FFDE          	movff	tablat,postinc2
 24253  00B7F2  06E8               	decf	wreg,f,c
 24254  00B7F4  E2FB               	bc	u13940
 24255                           
 24256                           ;display.c: 412: const char fan_off[] = "Fan off";
 24257  00B7F6  0E17               	movlw	low __display_charger@F8746
 24258  00B7F8  6EF6               	movwf	tblptrl,c
 24259  00B7FA                     	if	1	;There is more than 1 active tblptr byte
 24260  00B7FA  0E93               	movlw	high __display_charger@F8746
 24261  00B7FC  6EF7               	movwf	tblptrh,c
 24262  00B7FE                     	endif
 24263  00B7FE                     	if	1	;There are 3 active tblptr bytes
 24264  00B7FE  0E00               	movlw	low (__display_charger@F8746 shr (0+16))
 24265  00B800  6EF8               	movwf	tblptru,c
 24266  00B802                     	endif
 24267  00B802  EE21  F000         	lfsr	2,__display_charger@fan_off
 24268  00B806  0E07               	movlw	7
 24269  00B808                     u13950:
 24270  00B808  0009               	tblrd		*+
 24271  00B80A  CFF5 FFDE          	movff	tablat,postinc2
 24272  00B80E  06E8               	decf	wreg,f,c
 24273  00B810  E2FB               	bc	u13950
 24274                           
 24275                           ;display.c: 414: const char charger_off[] = "Charger off";
 24276  00B812  0ECB               	movlw	low __display_charger@F8748
 24277  00B814  6EF6               	movwf	tblptrl,c
 24278  00B816                     	if	1	;There is more than 1 active tblptr byte
 24279  00B816  0E92               	movlw	high __display_charger@F8748
 24280  00B818  6EF7               	movwf	tblptrh,c
 24281  00B81A                     	endif
 24282  00B81A                     	if	1	;There are 3 active tblptr bytes
 24283  00B81A  0E00               	movlw	low (__display_charger@F8748 shr (0+16))
 24284  00B81C  6EF8               	movwf	tblptru,c
 24285  00B81E                     	endif
 24286  00B81E  EE21  F082         	lfsr	2,__display_charger@charger_off
 24287  00B822  0E0B               	movlw	11
 24288  00B824                     u13960:
 24289  00B824  0009               	tblrd		*+
 24290  00B826  CFF5 FFDE          	movff	tablat,postinc2
 24291  00B82A  06E8               	decf	wreg,f,c
 24292  00B82C  E2FB               	bc	u13960
 24293                           
 24294                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 24295  00B82E  0E1B               	movlw	low __display_charger@F8750
 24296  00B830  6EF6               	movwf	tblptrl,c
 24297  00B832                     	if	1	;There is more than 1 active tblptr byte
 24298  00B832  0E92               	movlw	high __display_charger@F8750
 24299  00B834  6EF7               	movwf	tblptrh,c
 24300  00B836                     	endif
 24301  00B836                     	if	1	;There are 3 active tblptr bytes
 24302  00B836  0E00               	movlw	low (__display_charger@F8750 shr (0+16))
 24303  00B838  6EF8               	movwf	tblptru,c
 24304  00B83A                     	endif
 24305  00B83A  EE21  F072         	lfsr	2,__display_charger@charger_startup
 24306  00B83E  0E0F               	movlw	15
 24307  00B840                     u13970:
 24308  00B840  0009               	tblrd		*+
 24309  00B842  CFF5 FFDE          	movff	tablat,postinc2
 24310  00B846  06E8               	decf	wreg,f,c
 24311  00B848  E2FB               	bc	u13970
 24312                           
 24313                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 24314  00B84A  0EAB               	movlw	low __display_charger@F8752
 24315  00B84C  6EF6               	movwf	tblptrl,c
 24316  00B84E                     	if	1	;There is more than 1 active tblptr byte
 24317  00B84E  0E90               	movlw	high __display_charger@F8752
 24318  00B850  6EF7               	movwf	tblptrh,c
 24319  00B852                     	endif
 24320  00B852                     	if	1	;There are 3 active tblptr bytes
 24321  00B852  0E00               	movlw	low (__display_charger@F8752 shr (0+16))
 24322  00B854  6EF8               	movwf	tblptru,c
 24323  00B856                     	endif
 24324  00B856  EE21  F024         	lfsr	2,__display_charger@charger_async
 24325  00B85A  0E14               	movlw	20
 24326  00B85C                     u13980:
 24327  00B85C  0009               	tblrd		*+
 24328  00B85E  CFF5 FFDE          	movff	tablat,postinc2
 24329  00B862  06E8               	decf	wreg,f,c
 24330  00B864  E2FB               	bc	u13980
 24331                           
 24332                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 24333  00B866  0E13               	movlw	low __display_charger@F8754
 24334  00B868  6EF6               	movwf	tblptrl,c
 24335  00B86A                     	if	1	;There is more than 1 active tblptr byte
 24336  00B86A  0E91               	movlw	high __display_charger@F8754
 24337  00B86C  6EF7               	movwf	tblptrh,c
 24338  00B86E                     	endif
 24339  00B86E                     	if	1	;There are 3 active tblptr bytes
 24340  00B86E  0E00               	movlw	low (__display_charger@F8754 shr (0+16))
 24341  00B870  6EF8               	movwf	tblptru,c
 24342  00B872                     	endif
 24343  00B872  EE21  F039         	lfsr	2,__display_charger@charger_sync
 24344  00B876  0E13               	movlw	19
 24345  00B878                     u13990:
 24346  00B878  0009               	tblrd		*+
 24347  00B87A  CFF5 FFDE          	movff	tablat,postinc2
 24348  00B87E  06E8               	decf	wreg,f,c
 24349  00B880  E2FB               	bc	u13990
 24350                           
 24351                           ;display.c: 419: cntr = 0;
 24352  00B882  0E00               	movlw	0
 24353  00B884  0101               	movlb	1	; () banked
 24354  00B886  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24355                           
 24356                           ;display.c: 420: while(header[cntr])
 24357  00B888  D013               	goto	l2137
 24358  00B88A                     
 24359                           ; BSR set to: 1
 24360                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 24361                           
 24362                           ; BSR set to: 1
 24363  00B88A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24364  00B88C  0D01               	mullw	1
 24365  00B88E  0E0F               	movlw	low __display_charger@header
 24366  00B890  24F3               	addwf	prodl,w,c
 24367  00B892  6ED9               	movwf	fsr2l,c
 24368  00B894  0E01               	movlw	high __display_charger@header
 24369  00B896  20F4               	addwfc	prodh,w,c
 24370  00B898  6EDA               	movwf	fsr2h,c
 24371  00B89A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24372  00B89C  0D01               	mullw	1
 24373  00B89E  0E54               	movlw	low _display_content
 24374  00B8A0  24F3               	addwf	prodl,w,c
 24375  00B8A2  6EE1               	movwf	fsr1l,c
 24376  00B8A4  0E03               	movlw	high _display_content
 24377  00B8A6  20F4               	addwfc	prodh,w,c
 24378  00B8A8  6EE2               	movwf	fsr1h,c
 24379  00B8AA  CFDF FFE7          	movff	indf2,indf1
 24380                           
 24381                           ; BSR set to: 1
 24382  00B8AE  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24383  00B8B0                     l2137:
 24384                           
 24385                           ; BSR set to: 1
 24386                           
 24387                           ; BSR set to: 1
 24388  00B8B0  518E               	movf	__display_charger@cntr& (0+255),w,b
 24389  00B8B2  0D01               	mullw	1
 24390  00B8B4  0E0F               	movlw	low __display_charger@header
 24391  00B8B6  24F3               	addwf	prodl,w,c
 24392  00B8B8  6ED9               	movwf	fsr2l,c
 24393  00B8BA  0E01               	movlw	high __display_charger@header
 24394  00B8BC  20F4               	addwfc	prodh,w,c
 24395  00B8BE  6EDA               	movwf	fsr2h,c
 24396  00B8C0  50DF               	movf	indf2,w,c
 24397  00B8C2  A4D8               	btfss	status,2,c
 24398  00B8C4  D7E2               	goto	l2138
 24399                           
 24400                           ; BSR set to: 1
 24401                           ;display.c: 423: cntr = 0;
 24402                           
 24403                           ; BSR set to: 1
 24404  00B8C6  0E00               	movlw	0
 24405  00B8C8  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24406                           
 24407                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 24408  00B8CA  D014               	goto	l2143
 24409  00B8CC                     
 24410                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 24411  00B8CC  0101               	movlb	1	; () banked
 24412  00B8CE  518E               	movf	__display_charger@cntr& (0+255),w,b
 24413  00B8D0  0D01               	mullw	1
 24414  00B8D2  0E60               	movlw	low __display_charger@supply_on
 24415  00B8D4  24F3               	addwf	prodl,w,c
 24416  00B8D6  6ED9               	movwf	fsr2l,c
 24417  00B8D8  0E01               	movlw	high __display_charger@supply_on
 24418  00B8DA  20F4               	addwfc	prodh,w,c
 24419  00B8DC  6EDA               	movwf	fsr2h,c
 24420  00B8DE  518E               	movf	__display_charger@cntr& (0+255),w,b
 24421  00B8E0  0D01               	mullw	1
 24422  00B8E2  0E68               	movlw	low (_display_content+20)
 24423  00B8E4  24F3               	addwf	prodl,w,c
 24424  00B8E6  6EE1               	movwf	fsr1l,c
 24425  00B8E8  0E03               	movlw	high (_display_content+20)
 24426  00B8EA  20F4               	addwfc	prodh,w,c
 24427  00B8EC  6EE2               	movwf	fsr1h,c
 24428  00B8EE  CFDF FFE7          	movff	indf2,indf1
 24429                           
 24430                           ; BSR set to: 1
 24431  00B8F2  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24432  00B8F4                     l2143:
 24433                           
 24434                           ; BSR set to: 1
 24435  00B8F4  0101               	movlb	1	; () banked
 24436  00B8F6  518E               	movf	__display_charger@cntr& (0+255),w,b
 24437  00B8F8  0D01               	mullw	1
 24438  00B8FA  0E60               	movlw	low __display_charger@supply_on
 24439  00B8FC  24F3               	addwf	prodl,w,c
 24440  00B8FE  6ED9               	movwf	fsr2l,c
 24441  00B900  0E01               	movlw	high __display_charger@supply_on
 24442  00B902  20F4               	addwfc	prodh,w,c
 24443  00B904  6EDA               	movwf	fsr2h,c
 24444  00B906  50DF               	movf	indf2,w,c
 24445  00B908  B4D8               	btfsc	status,2,c
 24446  00B90A  D020               	goto	u14030
 24447  00B90C  D7DF               	goto	l2144
 24448  00B90E                     
 24449                           ; BSR set to: 1
 24450                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 24451                           
 24452                           ; BSR set to: 1
 24453  00B90E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24454  00B910  0D01               	mullw	1
 24455  00B912  0E4D               	movlw	low __display_charger@supply_off
 24456  00B914  24F3               	addwf	prodl,w,c
 24457  00B916  6ED9               	movwf	fsr2l,c
 24458  00B918  0E01               	movlw	high __display_charger@supply_off
 24459  00B91A  20F4               	addwfc	prodh,w,c
 24460  00B91C  6EDA               	movwf	fsr2h,c
 24461  00B91E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24462  00B920  0D01               	mullw	1
 24463  00B922  0E68               	movlw	low (_display_content+20)
 24464  00B924  24F3               	addwf	prodl,w,c
 24465  00B926  6EE1               	movwf	fsr1l,c
 24466  00B928  0E03               	movlw	high (_display_content+20)
 24467  00B92A  20F4               	addwfc	prodh,w,c
 24468  00B92C  6EE2               	movwf	fsr1h,c
 24469  00B92E  CFDF FFE7          	movff	indf2,indf1
 24470                           
 24471                           ; BSR set to: 1
 24472  00B932  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24473                           
 24474                           ; BSR set to: 1
 24475  00B934  0101               	movlb	1	; () banked
 24476  00B936  518E               	movf	__display_charger@cntr& (0+255),w,b
 24477  00B938  0D01               	mullw	1
 24478  00B93A  0E4D               	movlw	low __display_charger@supply_off
 24479  00B93C  24F3               	addwf	prodl,w,c
 24480  00B93E  6ED9               	movwf	fsr2l,c
 24481  00B940  0E01               	movlw	high __display_charger@supply_off
 24482  00B942  20F4               	addwfc	prodh,w,c
 24483  00B944  6EDA               	movwf	fsr2h,c
 24484  00B946  50DF               	movf	indf2,w,c
 24485  00B948  A4D8               	btfss	status,2,c
 24486  00B94A  D7E1               	goto	l2148
 24487  00B94C                     u14030:
 24488                           
 24489                           ; BSR set to: 1
 24490                           ;display.c: 433: }
 24491                           ;display.c: 435: cntr = 0;
 24492                           
 24493                           ; BSR set to: 1
 24494                           
 24495                           ; BSR set to: 1
 24496  00B94C  0E00               	movlw	0
 24497  00B94E  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24498                           
 24499                           ;display.c: 436: switch(buck_get_mode())
 24500  00B950  D080               	goto	l2150
 24501  00B952                     
 24502                           ; BSR set to: 1
 24503                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 24504                           
 24505                           ; BSR set to: 1
 24506  00B952  518E               	movf	__display_charger@cntr& (0+255),w,b
 24507  00B954  0D01               	mullw	1
 24508  00B956  0E82               	movlw	low __display_charger@charger_off
 24509  00B958  24F3               	addwf	prodl,w,c
 24510  00B95A  6ED9               	movwf	fsr2l,c
 24511  00B95C  0E01               	movlw	high __display_charger@charger_off
 24512  00B95E  20F4               	addwfc	prodh,w,c
 24513  00B960  6EDA               	movwf	fsr2h,c
 24514  00B962  518E               	movf	__display_charger@cntr& (0+255),w,b
 24515  00B964  0D01               	mullw	1
 24516  00B966  0E7C               	movlw	low (_display_content+40)
 24517  00B968  24F3               	addwf	prodl,w,c
 24518  00B96A  6EE1               	movwf	fsr1l,c
 24519  00B96C  0E03               	movlw	high (_display_content+40)
 24520  00B96E  20F4               	addwfc	prodh,w,c
 24521  00B970  6EE2               	movwf	fsr1h,c
 24522  00B972  CFDF FFE7          	movff	indf2,indf1
 24523                           
 24524                           ; BSR set to: 1
 24525  00B976  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24526  00B978                     
 24527                           ; BSR set to: 1
 24528  00B978  0101               	movlb	1	; () banked
 24529  00B97A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24530  00B97C  0D01               	mullw	1
 24531  00B97E  0E82               	movlw	low __display_charger@charger_off
 24532  00B980  24F3               	addwf	prodl,w,c
 24533  00B982  6ED9               	movwf	fsr2l,c
 24534  00B984  0E01               	movlw	high __display_charger@charger_off
 24535  00B986  20F4               	addwfc	prodh,w,c
 24536  00B988  6EDA               	movwf	fsr2h,c
 24537  00B98A  50DF               	movf	indf2,w,c
 24538  00B98C  B4D8               	btfsc	status,2,c
 24539  00B98E  D06F               	goto	l2155
 24540  00B990  D7E0               	goto	l2153
 24541  00B992                     
 24542                           ; BSR set to: 1
 24543                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 24544                           
 24545                           ; BSR set to: 1
 24546  00B992  518E               	movf	__display_charger@cntr& (0+255),w,b
 24547  00B994  0D01               	mullw	1
 24548  00B996  0E72               	movlw	low __display_charger@charger_startup
 24549  00B998  24F3               	addwf	prodl,w,c
 24550  00B99A  6ED9               	movwf	fsr2l,c
 24551  00B99C  0E01               	movlw	high __display_charger@charger_startup
 24552  00B99E  20F4               	addwfc	prodh,w,c
 24553  00B9A0  6EDA               	movwf	fsr2h,c
 24554  00B9A2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24555  00B9A4  0D01               	mullw	1
 24556  00B9A6  0E7C               	movlw	low (_display_content+40)
 24557  00B9A8  24F3               	addwf	prodl,w,c
 24558  00B9AA  6EE1               	movwf	fsr1l,c
 24559  00B9AC  0E03               	movlw	high (_display_content+40)
 24560  00B9AE  20F4               	addwfc	prodh,w,c
 24561  00B9B0  6EE2               	movwf	fsr1h,c
 24562  00B9B2  CFDF FFE7          	movff	indf2,indf1
 24563                           
 24564                           ; BSR set to: 1
 24565  00B9B6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24566  00B9B8                     
 24567                           ; BSR set to: 1
 24568  00B9B8  0101               	movlb	1	; () banked
 24569  00B9BA  518E               	movf	__display_charger@cntr& (0+255),w,b
 24570  00B9BC  0D01               	mullw	1
 24571  00B9BE  0E72               	movlw	low __display_charger@charger_startup
 24572  00B9C0  24F3               	addwf	prodl,w,c
 24573  00B9C2  6ED9               	movwf	fsr2l,c
 24574  00B9C4  0E01               	movlw	high __display_charger@charger_startup
 24575  00B9C6  20F4               	addwfc	prodh,w,c
 24576  00B9C8  6EDA               	movwf	fsr2h,c
 24577  00B9CA  50DF               	movf	indf2,w,c
 24578  00B9CC  B4D8               	btfsc	status,2,c
 24579  00B9CE  D04F               	goto	l2155
 24580  00B9D0  D7E0               	goto	l2158
 24581  00B9D2                     
 24582                           ; BSR set to: 1
 24583                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 24584                           
 24585                           ; BSR set to: 1
 24586  00B9D2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24587  00B9D4  0D01               	mullw	1
 24588  00B9D6  0E24               	movlw	low __display_charger@charger_async
 24589  00B9D8  24F3               	addwf	prodl,w,c
 24590  00B9DA  6ED9               	movwf	fsr2l,c
 24591  00B9DC  0E01               	movlw	high __display_charger@charger_async
 24592  00B9DE  20F4               	addwfc	prodh,w,c
 24593  00B9E0  6EDA               	movwf	fsr2h,c
 24594  00B9E2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24595  00B9E4  0D01               	mullw	1
 24596  00B9E6  0E7C               	movlw	low (_display_content+40)
 24597  00B9E8  24F3               	addwf	prodl,w,c
 24598  00B9EA  6EE1               	movwf	fsr1l,c
 24599  00B9EC  0E03               	movlw	high (_display_content+40)
 24600  00B9EE  20F4               	addwfc	prodh,w,c
 24601  00B9F0  6EE2               	movwf	fsr1h,c
 24602  00B9F2  CFDF FFE7          	movff	indf2,indf1
 24603                           
 24604                           ; BSR set to: 1
 24605  00B9F6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24606  00B9F8                     
 24607                           ; BSR set to: 1
 24608  00B9F8  0101               	movlb	1	; () banked
 24609  00B9FA  518E               	movf	__display_charger@cntr& (0+255),w,b
 24610  00B9FC  0D01               	mullw	1
 24611  00B9FE  0E24               	movlw	low __display_charger@charger_async
 24612  00BA00  24F3               	addwf	prodl,w,c
 24613  00BA02  6ED9               	movwf	fsr2l,c
 24614  00BA04  0E01               	movlw	high __display_charger@charger_async
 24615  00BA06  20F4               	addwfc	prodh,w,c
 24616  00BA08  6EDA               	movwf	fsr2h,c
 24617  00BA0A  50DF               	movf	indf2,w,c
 24618  00BA0C  B4D8               	btfsc	status,2,c
 24619  00BA0E  D02F               	goto	l2155
 24620  00BA10  D7E0               	goto	l2162
 24621  00BA12                     
 24622                           ; BSR set to: 1
 24623                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 24624                           
 24625                           ; BSR set to: 1
 24626  00BA12  518E               	movf	__display_charger@cntr& (0+255),w,b
 24627  00BA14  0D01               	mullw	1
 24628  00BA16  0E39               	movlw	low __display_charger@charger_sync
 24629  00BA18  24F3               	addwf	prodl,w,c
 24630  00BA1A  6ED9               	movwf	fsr2l,c
 24631  00BA1C  0E01               	movlw	high __display_charger@charger_sync
 24632  00BA1E  20F4               	addwfc	prodh,w,c
 24633  00BA20  6EDA               	movwf	fsr2h,c
 24634  00BA22  518E               	movf	__display_charger@cntr& (0+255),w,b
 24635  00BA24  0D01               	mullw	1
 24636  00BA26  0E7C               	movlw	low (_display_content+40)
 24637  00BA28  24F3               	addwf	prodl,w,c
 24638  00BA2A  6EE1               	movwf	fsr1l,c
 24639  00BA2C  0E03               	movlw	high (_display_content+40)
 24640  00BA2E  20F4               	addwfc	prodh,w,c
 24641  00BA30  6EE2               	movwf	fsr1h,c
 24642  00BA32  CFDF FFE7          	movff	indf2,indf1
 24643                           
 24644                           ; BSR set to: 1
 24645  00BA36  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24646  00BA38                     
 24647                           ; BSR set to: 1
 24648  00BA38  0101               	movlb	1	; () banked
 24649  00BA3A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24650  00BA3C  0D01               	mullw	1
 24651  00BA3E  0E39               	movlw	low __display_charger@charger_sync
 24652  00BA40  24F3               	addwf	prodl,w,c
 24653  00BA42  6ED9               	movwf	fsr2l,c
 24654  00BA44  0E01               	movlw	high __display_charger@charger_sync
 24655  00BA46  20F4               	addwfc	prodh,w,c
 24656  00BA48  6EDA               	movwf	fsr2h,c
 24657  00BA4A  50DF               	movf	indf2,w,c
 24658  00BA4C  B4D8               	btfsc	status,2,c
 24659  00BA4E  D00F               	goto	l2155
 24660  00BA50  D7E0               	goto	l2166
 24661  00BA52                     l2150:
 24662                           
 24663                           ; BSR set to: 1
 24664                           
 24665                           ; BSR set to: 1
 24666  00BA52  ECA6  F097         	call	_buck_get_mode	;wreg free
 24667                           
 24668                           ; Switch size 1, requested type "space"
 24669                           ; Number of cases is 4, Range of values is 0 to 3
 24670                           ; switch strategies available:
 24671                           ; Name         Instructions Cycles
 24672                           ; simple_byte           13     7 (average)
 24673                           ;	Chosen strategy is simple_byte
 24674  00BA56  0A00               	xorlw	0	; case 0
 24675  00BA58  B4D8               	btfsc	status,2,c
 24676  00BA5A  D78E               	goto	l2152
 24677  00BA5C  0A01               	xorlw	1	; case 1
 24678  00BA5E  B4D8               	btfsc	status,2,c
 24679  00BA60  D7AB               	goto	l2157
 24680  00BA62  0A03               	xorlw	3	; case 2
 24681  00BA64  B4D8               	btfsc	status,2,c
 24682  00BA66  D7C8               	goto	l2161
 24683  00BA68  0A01               	xorlw	1	; case 3
 24684  00BA6A  B4D8               	btfsc	status,2,c
 24685  00BA6C  D7E5               	goto	l2165
 24686  00BA6E                     l2155:
 24687                           
 24688                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 24689  00BA6E  ECA9  F097         	call	_buck_get_dutycycle	;wreg free
 24690  00BA72  0100               	movlb	0	; () banked
 24691  00BA74  6F90               	movwf	??__display_charger& (0+255),b
 24692  00BA76  5190               	movf	??__display_charger& (0+255),w,b
 24693  00BA78  6F78               	movwf	__display_itoa@value& (0+255),b
 24694  00BA7A  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 24695  00BA7C  0E00               	movlw	0
 24696  00BA7E  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24697  00BA80  0E90               	movlw	low (_display_content+60)
 24698  00BA82  6F7B               	movwf	__display_itoa@text& (0+255),b
 24699  00BA84  0E03               	movlw	high (_display_content+60)
 24700  00BA86  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24701  00BA88  ECBC  F065         	call	__display_itoa	;wreg free
 24702  00BA8C  0012               	return		;funcret
 24703  00BA8E                     __end_of__display_charger:
 24704                           	opt stack 0
 24705                           tblptru	equ	0xFF8
 24706                           tblptrh	equ	0xFF7
 24707                           tblptrl	equ	0xFF6
 24708                           tablat	equ	0xFF5
 24709                           prodh	equ	0xFF4
 24710                           prodl	equ	0xFF3
 24711                           intcon	equ	0xFF2
 24712                           intcon2	equ	0xFF1
 24713                           intcon3	equ	0xFF0
 24714                           postinc0	equ	0xFEE
 24715                           wreg	equ	0xFE8
 24716                           indf1	equ	0xFE7
 24717                           postinc1	equ	0xFE6
 24718                           postdec1	equ	0xFE5
 24719                           plusw1	equ	0xFE3
 24720                           fsr1h	equ	0xFE2
 24721                           fsr1l	equ	0xFE1
 24722                           indf2	equ	0xFDF
 24723                           postinc2	equ	0xFDE
 24724                           postdec2	equ	0xFDD
 24725                           plusw2	equ	0xFDB
 24726                           fsr2h	equ	0xFDA
 24727                           fsr2l	equ	0xFD9
 24728                           status	equ	0xFD8
 24729                           
 24730 ;; *************** function __display_itoa *****************
 24731 ;; Defined at:
 24732 ;;		line 41 in file "display.c"
 24733 ;; Parameters:    Size  Location     Type
 24734 ;;  value           2   24[BANK0 ] int 
 24735 ;;  decimals        1   26[BANK0 ] unsigned char 
 24736 ;;  text            2   27[BANK0 ] PTR unsigned char 
 24737 ;;		 -> display_content(80), 
 24738 ;; Auto vars:     Size  Location     Type
 24739 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 24740 ;;  pos             1   47[BANK0 ] unsigned char 
 24741 ;;  missing         1   46[BANK0 ] char 
 24742 ;;  len             1   45[BANK0 ] unsigned char 
 24743 ;; Return value:  Size  Location     Type
 24744 ;;                  1    wreg      void 
 24745 ;; Registers used:
 24746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24747 ;; Tracked objects:
 24748 ;;		On entry : 0/0
 24749 ;;		On exit  : 0/0
 24750 ;;		Unchanged: 0/0
 24751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24752 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24753 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24754 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24755 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24756 ;;Total ram usage:       24 bytes
 24757 ;; Hardware stack levels used:    1
 24758 ;; Hardware stack levels required when called:   13
 24759 ;; This function calls:
 24760 ;;		_itoa
 24761 ;;		_strlen
 24762 ;; This function is called by:
 24763 ;;		__display_inout
 24764 ;;		__display_charger
 24765 ;;		__display_efficiency
 24766 ;;		__display_temperature
 24767 ;; This function uses a non-reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text111
 24771  00CB78                     __ptext111:
 24772                           	opt stack 0
 24773  00CB78                     __display_itoa:
 24774                           	opt stack 15
 24775                           
 24776                           ;display.c: 43: uint8_t pos;
 24777                           ;display.c: 44: uint8_t len;
 24778                           ;display.c: 45: int8_t missing;
 24779                           ;display.c: 46: char tmp[10];
 24780                           ;display.c: 47: itoa(tmp, value, 10);
 24781                           
 24782                           ;incstack = 0
 24783  00CB78  0E83               	movlw	low __display_itoa@tmp
 24784  00CB7A  0100               	movlb	0	; () banked
 24785  00CB7C  6F70               	movwf	itoa@buf& (0+255),b
 24786  00CB7E  0E00               	movlw	high __display_itoa@tmp
 24787  00CB80  6F71               	movwf	(itoa@buf+1)& (0+255),b
 24788  00CB82  C078  F072         	movff	__display_itoa@value,itoa@val
 24789  00CB86  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 24790  00CB8A  0E00               	movlw	0
 24791  00CB8C  6F75               	movwf	(itoa@base+1)& (0+255),b
 24792  00CB8E  0E0A               	movlw	10
 24793  00CB90  6F74               	movwf	itoa@base& (0+255),b
 24794  00CB92  ECD3  F090         	call	_itoa	;wreg free
 24795                           
 24796                           ;display.c: 48: len = strlen(tmp);
 24797  00CB96  0E83               	movlw	low __display_itoa@tmp
 24798  00CB98  0100               	movlb	0	; () banked
 24799  00CB9A  6F60               	movwf	strlen@s& (0+255),b
 24800  00CB9C  0E00               	movlw	high __display_itoa@tmp
 24801  00CB9E  6F61               	movwf	(strlen@s+1)& (0+255),b
 24802  00CBA0  ECBA  F091         	call	_strlen	;wreg free
 24803  00CBA4  0100               	movlb	0	; () banked
 24804  00CBA6  5160               	movf	?_strlen& (0+255),w,b
 24805  00CBA8  6F8D               	movwf	__display_itoa@len& (0+255),b
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;display.c: 50: if(value<0)
 24809  00CBAA  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 24810  00CBAC  D054               	goto	l1913
 24811                           
 24812                           ; BSR set to: 0
 24813                           ;display.c: 51: {
 24814                           ;display.c: 52: missing = decimals + 2 - len;
 24815  00CBAE  518D               	movf	__display_itoa@len& (0+255),w,b
 24816  00CBB0  0800               	sublw	0
 24817  00CBB2  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24818  00CBB4  0F02               	addlw	2
 24819  00CBB6  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24820                           
 24821                           ;display.c: 53: if(missing>0)
 24822  00CBB8  518E               	movf	__display_itoa@missing& (0+255),w,b
 24823  00CBBA  0A80               	xorlw	128
 24824  00CBBC  0F7F               	addlw	-129
 24825  00CBBE  A0D8               	btfss	status,0,c
 24826  00CBC0  D090               	goto	l1920
 24827                           
 24828                           ; BSR set to: 0
 24829                           ;display.c: 54: {
 24830                           ;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 24831  00CBC2  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24832  00CBC6                     l13755:
 24833                           
 24834                           ; BSR set to: 0
 24835  00CBC6  298F               	incf	__display_itoa@pos& (0+255),w,b
 24836  00CBC8  B4D8               	btfsc	status,2,c
 24837  00CBCA  D042               	goto	u11480
 24838                           
 24839                           ; BSR set to: 0
 24840                           ;display.c: 56: {
 24841                           ;display.c: 57: if(pos>=missing)
 24842                           
 24843                           ; BSR set to: 0
 24844                           
 24845                           ; BSR set to: 0
 24846  00CBCC  518F               	movf	__display_itoa@pos& (0+255),w,b
 24847  00CBCE  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24848  00CBD0  D004               	goto	u11470
 24849  00CBD2  0AFF               	xorlw	255
 24850  00CBD4  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24851  00CBD6  B0D8               	btfsc	status,0,c
 24852  00CBD8  D02A               	goto	l1917
 24853  00CBDA                     u11470:
 24854                           
 24855                           ; BSR set to: 0
 24856                           ;display.c: 58: {
 24857                           ;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 24858  00CBDA  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24859  00CBDE  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24860  00CBE0  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24861  00CBE2  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24862  00CBE4  1F7D               	comf	??__display_itoa& (0+255),f,b
 24863  00CBE6  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24864  00CBE8  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24865  00CBEA  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24866  00CBEC  518F               	movf	__display_itoa@pos& (0+255),w,b
 24867  00CBEE  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24868  00CBF0  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24869  00CBF2  517D               	movf	??__display_itoa& (0+255),w,b
 24870  00CBF4  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24871  00CBF6  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24872  00CBF8  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24873  00CBFA  0E01               	movlw	1
 24874  00CBFC  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24875  00CBFE  0E00               	movlw	0
 24876  00CC00  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24877  00CC02  0E83               	movlw	low __display_itoa@tmp
 24878  00CC04  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24879  00CC06  6ED9               	movwf	fsr2l,c
 24880  00CC08  0E00               	movlw	high __display_itoa@tmp
 24881  00CC0A  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24882  00CC0C  6EDA               	movwf	fsr2h,c
 24883  00CC0E  518F               	movf	__display_itoa@pos& (0+255),w,b
 24884  00CC10  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 24885  00CC12  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 24886  00CC14  0E01               	movlw	1
 24887  00CC16  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 24888  00CC18  0E00               	movlw	0
 24889  00CC1A  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 24890  00CC1C  0E83               	movlw	low __display_itoa@tmp
 24891  00CC1E  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 24892  00CC20  6EE1               	movwf	fsr1l,c
 24893  00CC22  0E00               	movlw	high __display_itoa@tmp
 24894  00CC24  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 24895  00CC26  6EE2               	movwf	fsr1h,c
 24896  00CC28  CFDF FFE7          	movff	indf2,indf1
 24897                           
 24898                           ;display.c: 60: }
 24899  00CC2C  D00F               	goto	l1918
 24900  00CC2E                     l1917:
 24901                           
 24902                           ; BSR set to: 0
 24903                           ;display.c: 61: else
 24904                           ;display.c: 62: {
 24905                           ;display.c: 63: tmp[pos+1] = '0';
 24906                           
 24907                           ; BSR set to: 0
 24908  00CC2E  518F               	movf	__display_itoa@pos& (0+255),w,b
 24909  00CC30  6F7D               	movwf	??__display_itoa& (0+255),b
 24910  00CC32  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24911  00CC34  0E01               	movlw	1
 24912  00CC36  277D               	addwf	??__display_itoa& (0+255),f,b
 24913  00CC38  0E00               	movlw	0
 24914  00CC3A  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24915  00CC3C  0E83               	movlw	low __display_itoa@tmp
 24916  00CC3E  257D               	addwf	??__display_itoa& (0+255),w,b
 24917  00CC40  6ED9               	movwf	fsr2l,c
 24918  00CC42  0E00               	movlw	high __display_itoa@tmp
 24919  00CC44  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 24920  00CC46  6EDA               	movwf	fsr2h,c
 24921  00CC48  0E30               	movlw	48
 24922  00CC4A  6EDF               	movwf	indf2,c
 24923  00CC4C                     l1918:
 24924                           
 24925                           ; BSR set to: 0
 24926                           
 24927                           ; BSR set to: 0
 24928  00CC4C  078F               	decf	__display_itoa@pos& (0+255),f,b
 24929  00CC4E  D7BB               	goto	l13755
 24930  00CC50                     u11480:
 24931                           
 24932                           ; BSR set to: 0
 24933                           ;display.c: 64: }
 24934                           ;display.c: 65: }
 24935                           ;display.c: 66: len = decimals + 2;
 24936                           
 24937                           ; BSR set to: 0
 24938  00CC50  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24939  00CC52  0F02               	addlw	2
 24940  00CC54  D045               	goto	L11
 24941  00CC56                     l1913:
 24942                           
 24943                           ; BSR set to: 0
 24944                           ;display.c: 69: else
 24945                           ;display.c: 70: {
 24946                           ;display.c: 71: missing = decimals + 1 - len;
 24947                           
 24948                           ; BSR set to: 0
 24949  00CC56  518D               	movf	__display_itoa@len& (0+255),w,b
 24950  00CC58  0800               	sublw	0
 24951  00CC5A  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24952  00CC5C  6F7D               	movwf	??__display_itoa& (0+255),b
 24953  00CC5E  297D               	incf	??__display_itoa& (0+255),w,b
 24954  00CC60  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24955                           
 24956                           ;display.c: 72: if(missing>0)
 24957  00CC62  518E               	movf	__display_itoa@missing& (0+255),w,b
 24958  00CC64  0A80               	xorlw	128
 24959  00CC66  0F7F               	addlw	-129
 24960  00CC68  A0D8               	btfss	status,0,c
 24961  00CC6A  D03B               	goto	l1920
 24962                           
 24963                           ; BSR set to: 0
 24964                           ;display.c: 73: {
 24965                           ;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 24966  00CC6C  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24967  00CC70                     l13775:
 24968                           
 24969                           ; BSR set to: 0
 24970  00CC70  298F               	incf	__display_itoa@pos& (0+255),w,b
 24971  00CC72  B4D8               	btfsc	status,2,c
 24972  00CC74  D034               	goto	u11520
 24973                           
 24974                           ; BSR set to: 0
 24975                           ;display.c: 75: {
 24976                           ;display.c: 76: if(pos>=missing)
 24977                           
 24978                           ; BSR set to: 0
 24979                           
 24980                           ; BSR set to: 0
 24981  00CC76  518F               	movf	__display_itoa@pos& (0+255),w,b
 24982  00CC78  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24983  00CC7A  D004               	goto	u11510
 24984  00CC7C  0AFF               	xorlw	255
 24985  00CC7E  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24986  00CC80  B0D8               	btfsc	status,0,c
 24987  00CC82  D021               	goto	l1923
 24988  00CC84                     u11510:
 24989                           
 24990                           ; BSR set to: 0
 24991                           ;display.c: 77: {
 24992                           ;display.c: 78: tmp[pos] = tmp[pos-missing];
 24993  00CC84  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24994  00CC88  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24995  00CC8A  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24996  00CC8C  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24997  00CC8E  1F7D               	comf	??__display_itoa& (0+255),f,b
 24998  00CC90  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24999  00CC92  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 25000  00CC94  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 25001  00CC96  518F               	movf	__display_itoa@pos& (0+255),w,b
 25002  00CC98  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 25003  00CC9A  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 25004  00CC9C  517D               	movf	??__display_itoa& (0+255),w,b
 25005  00CC9E  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25006  00CCA0  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25007  00CCA2  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25008  00CCA4  0E83               	movlw	low __display_itoa@tmp
 25009  00CCA6  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 25010  00CCA8  6ED9               	movwf	fsr2l,c
 25011  00CCAA  0E00               	movlw	high __display_itoa@tmp
 25012  00CCAC  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 25013  00CCAE  6EDA               	movwf	fsr2h,c
 25014  00CCB0  518F               	movf	__display_itoa@pos& (0+255),w,b
 25015  00CCB2  0D01               	mullw	1
 25016  00CCB4  0E83               	movlw	low __display_itoa@tmp
 25017  00CCB6  24F3               	addwf	prodl,w,c
 25018  00CCB8  6EE1               	movwf	fsr1l,c
 25019  00CCBA  0E00               	movlw	high __display_itoa@tmp
 25020  00CCBC  20F4               	addwfc	prodh,w,c
 25021  00CCBE  6EE2               	movwf	fsr1h,c
 25022  00CCC0  CFDF FFE7          	movff	indf2,indf1
 25023                           
 25024                           ;display.c: 79: }
 25025  00CCC4  D00A               	goto	l1924
 25026  00CCC6                     l1923:
 25027                           
 25028                           ; BSR set to: 0
 25029                           ;display.c: 80: else
 25030                           ;display.c: 81: {
 25031                           ;display.c: 82: tmp[pos] = '0';
 25032                           
 25033                           ; BSR set to: 0
 25034  00CCC6  518F               	movf	__display_itoa@pos& (0+255),w,b
 25035  00CCC8  0D01               	mullw	1
 25036  00CCCA  0E83               	movlw	low __display_itoa@tmp
 25037  00CCCC  24F3               	addwf	prodl,w,c
 25038  00CCCE  6ED9               	movwf	fsr2l,c
 25039  00CCD0  0E00               	movlw	high __display_itoa@tmp
 25040  00CCD2  20F4               	addwfc	prodh,w,c
 25041  00CCD4  6EDA               	movwf	fsr2h,c
 25042  00CCD6  0E30               	movlw	48
 25043  00CCD8  6EDF               	movwf	indf2,c
 25044  00CCDA                     l1924:
 25045                           
 25046                           ; BSR set to: 0
 25047                           
 25048                           ; BSR set to: 0
 25049  00CCDA  078F               	decf	__display_itoa@pos& (0+255),f,b
 25050  00CCDC  D7C9               	goto	l13775
 25051  00CCDE                     u11520:
 25052                           
 25053                           ; BSR set to: 0
 25054                           ;display.c: 83: }
 25055                           ;display.c: 84: }
 25056                           ;display.c: 85: len = decimals + 1;
 25057                           
 25058                           ; BSR set to: 0
 25059  00CCDE  297A               	incf	__display_itoa@decimals& (0+255),w,b
 25060  00CCE0                     L11:
 25061  00CCE0  6F8D               	movwf	__display_itoa@len& (0+255),b
 25062  00CCE2                     l1920:
 25063                           
 25064                           ; BSR set to: 0
 25065                           ;display.c: 86: }
 25066                           ;display.c: 87: }
 25067                           ;display.c: 89: decimals = len - decimals - 1;
 25068                           
 25069                           ; BSR set to: 0
 25070  00CCE2  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25071  00CCE4  0800               	sublw	0
 25072  00CCE6  258D               	addwf	__display_itoa@len& (0+255),w,b
 25073  00CCE8  6F7D               	movwf	??__display_itoa& (0+255),b
 25074  00CCEA  057D               	decf	??__display_itoa& (0+255),w,b
 25075  00CCEC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 25076                           
 25077                           ; BSR set to: 0
 25078                           ;display.c: 91: for(pos=0;pos<len;++pos)
 25079  00CCEE  0E00               	movlw	0
 25080  00CCF0  6F8F               	movwf	__display_itoa@pos& (0+255),b
 25081  00CCF2  D023               	goto	l1925
 25082  00CCF4                     
 25083                           ; BSR set to: 0
 25084                           ;display.c: 92: {
 25085                           ;display.c: 93: text[pos] = tmp[pos];
 25086                           
 25087                           ; BSR set to: 0
 25088  00CCF4  518F               	movf	__display_itoa@pos& (0+255),w,b
 25089  00CCF6  0D01               	mullw	1
 25090  00CCF8  0E83               	movlw	low __display_itoa@tmp
 25091  00CCFA  24F3               	addwf	prodl,w,c
 25092  00CCFC  6ED9               	movwf	fsr2l,c
 25093  00CCFE  0E00               	movlw	high __display_itoa@tmp
 25094  00CD00  20F4               	addwfc	prodh,w,c
 25095  00CD02  6EDA               	movwf	fsr2h,c
 25096  00CD04  518F               	movf	__display_itoa@pos& (0+255),w,b
 25097  00CD06  0D01               	mullw	1
 25098  00CD08  50F3               	movf	prodl,w,c
 25099  00CD0A  257B               	addwf	__display_itoa@text& (0+255),w,b
 25100  00CD0C  6EE1               	movwf	fsr1l,c
 25101  00CD0E  50F4               	movf	prodh,w,c
 25102  00CD10  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 25103  00CD12  6EE2               	movwf	fsr1h,c
 25104  00CD14  CFDF FFE7          	movff	indf2,indf1
 25105                           
 25106                           ; BSR set to: 0
 25107                           ;display.c: 94: if(pos==decimals)
 25108  00CD18  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25109  00CD1A  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 25110  00CD1C  A4D8               	btfss	status,2,c
 25111  00CD1E  D00C               	goto	l1927
 25112                           
 25113                           ; BSR set to: 0
 25114                           ;display.c: 95: {
 25115                           ;display.c: 97: ++pos;
 25116  00CD20  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 25117                           
 25118                           ; BSR set to: 0
 25119                           ;display.c: 98: text[pos] = '.';
 25120  00CD22  518F               	movf	__display_itoa@pos& (0+255),w,b
 25121  00CD24  0D01               	mullw	1
 25122  00CD26  50F3               	movf	prodl,w,c
 25123  00CD28  257B               	addwf	__display_itoa@text& (0+255),w,b
 25124  00CD2A  6ED9               	movwf	fsr2l,c
 25125  00CD2C  50F4               	movf	prodh,w,c
 25126  00CD2E  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 25127  00CD30  6EDA               	movwf	fsr2h,c
 25128  00CD32  0E2E               	movlw	46
 25129  00CD34  6EDF               	movwf	indf2,c
 25130                           
 25131                           ;display.c: 99: break;
 25132  00CD36  D01E               	goto	l1929
 25133  00CD38                     l1927:
 25134                           
 25135                           ; BSR set to: 0
 25136                           
 25137                           ; BSR set to: 0
 25138  00CD38  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 25139  00CD3A                     l1925:
 25140                           
 25141                           ; BSR set to: 0
 25142                           
 25143                           ; BSR set to: 0
 25144  00CD3A  518D               	movf	__display_itoa@len& (0+255),w,b
 25145  00CD3C  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 25146  00CD3E  B0D8               	btfsc	status,0,c
 25147  00CD40  D019               	goto	l1929
 25148  00CD42  D7D8               	goto	l1926
 25149  00CD44                     
 25150                           ; BSR set to: 0
 25151                           ;display.c: 103: {
 25152                           ;display.c: 104: text[pos+1] = tmp[pos];
 25153                           
 25154                           ; BSR set to: 0
 25155  00CD44  518F               	movf	__display_itoa@pos& (0+255),w,b
 25156  00CD46  0D01               	mullw	1
 25157  00CD48  0E83               	movlw	low __display_itoa@tmp
 25158  00CD4A  24F3               	addwf	prodl,w,c
 25159  00CD4C  6ED9               	movwf	fsr2l,c
 25160  00CD4E  0E00               	movlw	high __display_itoa@tmp
 25161  00CD50  20F4               	addwfc	prodh,w,c
 25162  00CD52  6EDA               	movwf	fsr2h,c
 25163  00CD54  518F               	movf	__display_itoa@pos& (0+255),w,b
 25164  00CD56  6F7D               	movwf	??__display_itoa& (0+255),b
 25165  00CD58  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25166  00CD5A  0E01               	movlw	1
 25167  00CD5C  277D               	addwf	??__display_itoa& (0+255),f,b
 25168  00CD5E  0E00               	movlw	0
 25169  00CD60  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 25170  00CD62  517D               	movf	??__display_itoa& (0+255),w,b
 25171  00CD64  257B               	addwf	__display_itoa@text& (0+255),w,b
 25172  00CD66  6EE1               	movwf	fsr1l,c
 25173  00CD68  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25174  00CD6A  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 25175  00CD6C  6EE2               	movwf	fsr1h,c
 25176  00CD6E  CFDF FFE7          	movff	indf2,indf1
 25177                           
 25178                           ; BSR set to: 0
 25179  00CD72  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 25180  00CD74                     l1929:
 25181                           
 25182                           ; BSR set to: 0
 25183                           
 25184                           ; BSR set to: 0
 25185  00CD74  518D               	movf	__display_itoa@len& (0+255),w,b
 25186  00CD76  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 25187  00CD78  B0D8               	btfsc	status,0,c
 25188  00CD7A  0012               	return	
 25189  00CD7C  D7E3               	goto	l1930
 25190  00CD7E                     __end_of__display_itoa:
 25191                           	opt stack 0
 25192                           tblptru	equ	0xFF8
 25193                           tblptrh	equ	0xFF7
 25194                           tblptrl	equ	0xFF6
 25195                           tablat	equ	0xFF5
 25196                           prodh	equ	0xFF4
 25197                           prodl	equ	0xFF3
 25198                           intcon	equ	0xFF2
 25199                           intcon2	equ	0xFF1
 25200                           intcon3	equ	0xFF0
 25201                           postinc0	equ	0xFEE
 25202                           wreg	equ	0xFE8
 25203                           indf1	equ	0xFE7
 25204                           postinc1	equ	0xFE6
 25205                           postdec1	equ	0xFE5
 25206                           plusw1	equ	0xFE3
 25207                           fsr1h	equ	0xFE2
 25208                           fsr1l	equ	0xFE1
 25209                           indf2	equ	0xFDF
 25210                           postinc2	equ	0xFDE
 25211                           postdec2	equ	0xFDD
 25212                           plusw2	equ	0xFDB
 25213                           fsr2h	equ	0xFDA
 25214                           fsr2l	equ	0xFD9
 25215                           status	equ	0xFD8
 25216                           
 25217 ;; *************** function _strlen *****************
 25218 ;; Defined at:
 25219 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 25220 ;; Parameters:    Size  Location     Type
 25221 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 25222 ;;		 -> _display_itoa@tmp(10), 
 25223 ;; Auto vars:     Size  Location     Type
 25224 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 25225 ;;		 -> _display_itoa@tmp(10), 
 25226 ;; Return value:  Size  Location     Type
 25227 ;;                  2    0[BANK0 ] unsigned int 
 25228 ;; Registers used:
 25229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25230 ;; Tracked objects:
 25231 ;;		On entry : 0/0
 25232 ;;		On exit  : 0/0
 25233 ;;		Unchanged: 0/0
 25234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25239 ;;Total ram usage:        6 bytes
 25240 ;; Hardware stack levels used:    1
 25241 ;; Hardware stack levels required when called:   10
 25242 ;; This function calls:
 25243 ;;		Nothing
 25244 ;; This function is called by:
 25245 ;;		__display_itoa
 25246 ;; This function uses a non-reentrant model
 25247 ;;
 25248                           
 25249                           	psect	text112
 25250  012374                     __ptext112:
 25251                           	opt stack 0
 25252  012374                     _strlen:
 25253                           	opt stack 17
 25254                           
 25255                           ; BSR set to: 0
 25256                           ;incstack = 0
 25257  012374  C060  F064         	movff	strlen@s,strlen@cp
 25258  012378  C061  F065         	movff	strlen@s+1,strlen@cp+1
 25259  01237C  D003               	goto	l3890
 25260  01237E  0100               	movlb	0	; () banked
 25261  012380  4B64               	infsnz	strlen@cp& (0+255),f,b
 25262  012382  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 25263  012384                     l3890:
 25264                           
 25265                           ; BSR set to: 0
 25266  012384  C064  FFD9         	movff	strlen@cp,fsr2l
 25267  012388  C065  FFDA         	movff	strlen@cp+1,fsr2h
 25268  01238C  50DF               	movf	indf2,w,c
 25269  01238E  A4D8               	btfss	status,2,c
 25270  012390  D7F6               	goto	l3891
 25271  012392  C060  F062         	movff	strlen@s,??_strlen
 25272  012396  C061  F063         	movff	strlen@s+1,??_strlen+1
 25273  01239A  0100               	movlb	0	; () banked
 25274  01239C  1F62               	comf	??_strlen& (0+255),f,b
 25275  01239E  1F63               	comf	(??_strlen+1)& (0+255),f,b
 25276  0123A0  4B62               	infsnz	??_strlen& (0+255),f,b
 25277  0123A2  2B63               	incf	(??_strlen+1)& (0+255),f,b
 25278  0123A4  5164               	movf	strlen@cp& (0+255),w,b
 25279  0123A6  2562               	addwf	??_strlen& (0+255),w,b
 25280  0123A8  6F60               	movwf	?_strlen& (0+255),b
 25281  0123AA  5165               	movf	(strlen@cp+1)& (0+255),w,b
 25282  0123AC  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 25283  0123AE  6F61               	movwf	(?_strlen+1)& (0+255),b
 25284  0123B0  0012               	return	
 25285  0123B2                     __end_of_strlen:
 25286                           	opt stack 0
 25287                           tblptru	equ	0xFF8
 25288                           tblptrh	equ	0xFF7
 25289                           tblptrl	equ	0xFF6
 25290                           tablat	equ	0xFF5
 25291                           prodh	equ	0xFF4
 25292                           prodl	equ	0xFF3
 25293                           intcon	equ	0xFF2
 25294                           intcon2	equ	0xFF1
 25295                           intcon3	equ	0xFF0
 25296                           postinc0	equ	0xFEE
 25297                           wreg	equ	0xFE8
 25298                           indf1	equ	0xFE7
 25299                           postinc1	equ	0xFE6
 25300                           postdec1	equ	0xFE5
 25301                           plusw1	equ	0xFE3
 25302                           fsr1h	equ	0xFE2
 25303                           fsr1l	equ	0xFE1
 25304                           indf2	equ	0xFDF
 25305                           postinc2	equ	0xFDE
 25306                           postdec2	equ	0xFDD
 25307                           plusw2	equ	0xFDB
 25308                           fsr2h	equ	0xFDA
 25309                           fsr2l	equ	0xFD9
 25310                           status	equ	0xFD8
 25311                           
 25312 ;; *************** function _itoa *****************
 25313 ;; Defined at:
 25314 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\itoa.c"
 25315 ;; Parameters:    Size  Location     Type
 25316 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 25317 ;;		 -> _display_itoa@tmp(10), 
 25318 ;;  val             2   18[BANK0 ] int 
 25319 ;;  base            2   20[BANK0 ] int 
 25320 ;; Auto vars:     Size  Location     Type
 25321 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 25322 ;;		 -> _display_itoa@tmp(10), 
 25323 ;; Return value:  Size  Location     Type
 25324 ;;                  2   16[BANK0 ] PTR unsigned char 
 25325 ;; Registers used:
 25326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25327 ;; Tracked objects:
 25328 ;;		On entry : 0/0
 25329 ;;		On exit  : 0/0
 25330 ;;		Unchanged: 0/0
 25331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25335 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25336 ;;Total ram usage:        8 bytes
 25337 ;; Hardware stack levels used:    1
 25338 ;; Hardware stack levels required when called:   12
 25339 ;; This function calls:
 25340 ;;		_utoa
 25341 ;; This function is called by:
 25342 ;;		__display_itoa
 25343 ;; This function uses a non-reentrant model
 25344 ;;
 25345                           
 25346                           	psect	text113
 25347  0121A6                     __ptext113:
 25348                           	opt stack 0
 25349  0121A6                     _itoa:
 25350                           	opt stack 15
 25351                           
 25352                           ; BSR set to: 0
 25353                           ;incstack = 0
 25354  0121A6  C070  F076         	movff	itoa@buf,itoa@cp
 25355  0121AA  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 25356  0121AE  0100               	movlb	0	; () banked
 25357  0121B0  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 25358  0121B2  D00C               	goto	l3647
 25359                           
 25360                           ; BSR set to: 0
 25361  0121B4  C070  FFD9         	movff	itoa@buf,fsr2l
 25362  0121B8  C071  FFDA         	movff	itoa@buf+1,fsr2h
 25363  0121BC  0E2D               	movlw	45
 25364  0121BE  6EDF               	movwf	indf2,c
 25365                           
 25366                           ; BSR set to: 0
 25367  0121C0  4B70               	infsnz	itoa@buf& (0+255),f,b
 25368  0121C2  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 25369                           
 25370                           ; BSR set to: 0
 25371  0121C4  6D72               	negf	itoa@val& (0+255),b
 25372  0121C6  1F73               	comf	(itoa@val+1)& (0+255),f,b
 25373  0121C8  B0D8               	btfsc	status,0,c
 25374  0121CA  2B73               	incf	(itoa@val+1)& (0+255),f,b
 25375  0121CC                     l3647:
 25376                           
 25377                           ; BSR set to: 0
 25378                           
 25379                           ; BSR set to: 0
 25380  0121CC  C070  F067         	movff	itoa@buf,utoa@buf
 25381  0121D0  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 25382  0121D4  C072  F069         	movff	itoa@val,utoa@val
 25383  0121D8  C073  F06A         	movff	itoa@val+1,utoa@val+1
 25384  0121DC  C074  F06B         	movff	itoa@base,utoa@base
 25385  0121E0  C075  F06C         	movff	itoa@base+1,utoa@base+1
 25386  0121E4  ECAA  F080         	call	_utoa	;wreg free
 25387  0121E8  0012               	return	
 25388  0121EA                     __end_of_itoa:
 25389                           	opt stack 0
 25390                           tblptru	equ	0xFF8
 25391                           tblptrh	equ	0xFF7
 25392                           tblptrl	equ	0xFF6
 25393                           tablat	equ	0xFF5
 25394                           prodh	equ	0xFF4
 25395                           prodl	equ	0xFF3
 25396                           intcon	equ	0xFF2
 25397                           intcon2	equ	0xFF1
 25398                           intcon3	equ	0xFF0
 25399                           postinc0	equ	0xFEE
 25400                           wreg	equ	0xFE8
 25401                           indf1	equ	0xFE7
 25402                           postinc1	equ	0xFE6
 25403                           postdec1	equ	0xFE5
 25404                           plusw1	equ	0xFE3
 25405                           fsr1h	equ	0xFE2
 25406                           fsr1l	equ	0xFE1
 25407                           indf2	equ	0xFDF
 25408                           postinc2	equ	0xFDE
 25409                           postdec2	equ	0xFDD
 25410                           plusw2	equ	0xFDB
 25411                           fsr2h	equ	0xFDA
 25412                           fsr2l	equ	0xFD9
 25413                           status	equ	0xFD8
 25414                           
 25415 ;; *************** function _utoa *****************
 25416 ;; Defined at:
 25417 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\itoa.c"
 25418 ;; Parameters:    Size  Location     Type
 25419 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 25420 ;;		 -> _display_itoa@tmp(10), 
 25421 ;;  val             2    9[BANK0 ] unsigned int 
 25422 ;;  base            2   11[BANK0 ] int 
 25423 ;; Auto vars:     Size  Location     Type
 25424 ;;  v               2   13[BANK0 ] unsigned int 
 25425 ;;  c               1   15[BANK0 ] unsigned char 
 25426 ;; Return value:  Size  Location     Type
 25427 ;;                  2    7[BANK0 ] PTR unsigned char 
 25428 ;; Registers used:
 25429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25430 ;; Tracked objects:
 25431 ;;		On entry : 0/0
 25432 ;;		On exit  : 0/0
 25433 ;;		Unchanged: 0/0
 25434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25435 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25436 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25439 ;;Total ram usage:        9 bytes
 25440 ;; Hardware stack levels used:    1
 25441 ;; Hardware stack levels required when called:   11
 25442 ;; This function calls:
 25443 ;;		___lwdiv
 25444 ;;		___lwmod
 25445 ;; This function is called by:
 25446 ;;		_itoa
 25447 ;; This function uses a non-reentrant model
 25448 ;;
 25449                           
 25450                           	psect	text114
 25451  010154                     __ptext114:
 25452                           	opt stack 0
 25453  010154                     _utoa:
 25454                           	opt stack 15
 25455                           
 25456                           ;incstack = 0
 25457  010154  C069  F06D         	movff	utoa@val,utoa@v
 25458  010158  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 25459  01015C  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 25460  010160  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 25461  010164  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25462  010168  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25463  01016C  EC35  F08E         	call	___lwdiv	;wreg free
 25464  010170  C060  F06D         	movff	?___lwdiv,utoa@v
 25465  010174  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 25466  010178  0100               	movlb	0	; () banked
 25467  01017A  4B67               	infsnz	utoa@buf& (0+255),f,b
 25468  01017C  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25469                           
 25470                           ; BSR set to: 0
 25471  01017E  516D               	movf	utoa@v& (0+255),w,b
 25472  010180  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 25473  010182  A4D8               	btfss	status,2,c
 25474  010184  D7EB               	goto	l3651
 25475                           
 25476                           ; BSR set to: 0
 25477                           
 25478                           ; BSR set to: 0
 25479  010186  C067  FFD9         	movff	utoa@buf,fsr2l
 25480  01018A  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25481  01018E  0E00               	movlw	0
 25482  010190  6EDF               	movwf	indf2,c
 25483                           
 25484                           ; BSR set to: 0
 25485  010192  0767               	decf	utoa@buf& (0+255),f,b
 25486  010194  A0D8               	btfss	status,0,c
 25487  010196  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25488  010198                     
 25489                           ; BSR set to: 0
 25490                           
 25491                           ; BSR set to: 0
 25492  010198  C069  F060         	movff	utoa@val,___lwmod@dividend
 25493  01019C  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 25494  0101A0  C06B  F062         	movff	utoa@base,___lwmod@divisor
 25495  0101A4  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 25496  0101A8  ECF5  F090         	call	___lwmod	;wreg free
 25497  0101AC  0100               	movlb	0	; () banked
 25498  0101AE  5160               	movf	?___lwmod& (0+255),w,b
 25499  0101B0  6F6F               	movwf	utoa@c& (0+255),b
 25500                           
 25501                           ; BSR set to: 0
 25502  0101B2  C069  F060         	movff	utoa@val,___lwdiv@dividend
 25503  0101B6  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 25504  0101BA  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25505  0101BE  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25506  0101C2  EC35  F08E         	call	___lwdiv	;wreg free
 25507  0101C6  C060  F069         	movff	?___lwdiv,utoa@val
 25508  0101CA  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 25509  0101CE  0E09               	movlw	9
 25510  0101D0  0100               	movlb	0	; () banked
 25511  0101D2  656F               	cpfsgt	utoa@c& (0+255),b
 25512  0101D4  D002               	goto	l3654
 25513                           
 25514                           ; BSR set to: 0
 25515  0101D6  0E07               	movlw	7
 25516  0101D8  276F               	addwf	utoa@c& (0+255),f,b
 25517  0101DA                     l3654:
 25518                           
 25519                           ; BSR set to: 0
 25520  0101DA  0E30               	movlw	48
 25521  0101DC  276F               	addwf	utoa@c& (0+255),f,b
 25522                           
 25523                           ; BSR set to: 0
 25524  0101DE  C067  FFD9         	movff	utoa@buf,fsr2l
 25525  0101E2  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25526  0101E6  C06F  FFDF         	movff	utoa@c,indf2
 25527                           
 25528                           ; BSR set to: 0
 25529  0101EA  0767               	decf	utoa@buf& (0+255),f,b
 25530  0101EC  A0D8               	btfss	status,0,c
 25531  0101EE  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25532                           
 25533                           ; BSR set to: 0
 25534  0101F0  5169               	movf	utoa@val& (0+255),w,b
 25535  0101F2  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 25536  0101F4  A4D8               	btfss	status,2,c
 25537  0101F6  D7D0               	goto	l3653
 25538                           
 25539                           ; BSR set to: 0
 25540                           ;	Return value of _utoa is never used
 25541                           
 25542                           ; BSR set to: 0
 25543  0101F8  4B67               	infsnz	utoa@buf& (0+255),f,b
 25544  0101FA  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25545  0101FC  0012               	return	
 25546  0101FE                     __end_of_utoa:
 25547                           	opt stack 0
 25548                           tblptru	equ	0xFF8
 25549                           tblptrh	equ	0xFF7
 25550                           tblptrl	equ	0xFF6
 25551                           tablat	equ	0xFF5
 25552                           prodh	equ	0xFF4
 25553                           prodl	equ	0xFF3
 25554                           intcon	equ	0xFF2
 25555                           intcon2	equ	0xFF1
 25556                           intcon3	equ	0xFF0
 25557                           postinc0	equ	0xFEE
 25558                           wreg	equ	0xFE8
 25559                           indf1	equ	0xFE7
 25560                           postinc1	equ	0xFE6
 25561                           postdec1	equ	0xFE5
 25562                           plusw1	equ	0xFE3
 25563                           fsr1h	equ	0xFE2
 25564                           fsr1l	equ	0xFE1
 25565                           indf2	equ	0xFDF
 25566                           postinc2	equ	0xFDE
 25567                           postdec2	equ	0xFDD
 25568                           plusw2	equ	0xFDB
 25569                           fsr2h	equ	0xFDA
 25570                           fsr2l	equ	0xFD9
 25571                           status	equ	0xFD8
 25572                           
 25573 ;; *************** function ___lwmod *****************
 25574 ;; Defined at:
 25575 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;  dividend        2    0[BANK0 ] unsigned int 
 25578 ;;  divisor         2    2[BANK0 ] unsigned int 
 25579 ;; Auto vars:     Size  Location     Type
 25580 ;;  counter         1    4[BANK0 ] unsigned char 
 25581 ;; Return value:  Size  Location     Type
 25582 ;;                  2    0[BANK0 ] unsigned int 
 25583 ;; Registers used:
 25584 ;;		wreg, status,2, status,0
 25585 ;; Tracked objects:
 25586 ;;		On entry : 0/0
 25587 ;;		On exit  : 0/0
 25588 ;;		Unchanged: 0/0
 25589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25593 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25594 ;;Total ram usage:        5 bytes
 25595 ;; Hardware stack levels used:    1
 25596 ;; Hardware stack levels required when called:   10
 25597 ;; This function calls:
 25598 ;;		Nothing
 25599 ;; This function is called by:
 25600 ;;		_utoa
 25601 ;; This function uses a non-reentrant model
 25602 ;;
 25603                           
 25604                           	psect	text115
 25605  0121EA                     __ptext115:
 25606                           	opt stack 0
 25607  0121EA                     ___lwmod:
 25608                           	opt stack 15
 25609                           
 25610                           ; BSR set to: 0
 25611                           ;incstack = 0
 25612  0121EA  0100               	movlb	0	; () banked
 25613  0121EC  5162               	movf	___lwmod@divisor& (0+255),w,b
 25614  0121EE  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 25615  0121F0  B4D8               	btfsc	status,2,c
 25616  0121F2  D018               	goto	l3749
 25617                           
 25618                           ; BSR set to: 0
 25619  0121F4  0E01               	movlw	1
 25620  0121F6  6F64               	movwf	___lwmod@counter& (0+255),b
 25621  0121F8  D004               	goto	l3744
 25622  0121FA                     
 25623                           ; BSR set to: 0
 25624                           
 25625                           ; BSR set to: 0
 25626  0121FA  90D8               	bcf	status,0,c
 25627  0121FC  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 25628  0121FE  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 25629  012200  2B64               	incf	___lwmod@counter& (0+255),f,b
 25630  012202                     l3744:
 25631                           
 25632                           ; BSR set to: 0
 25633                           
 25634                           ; BSR set to: 0
 25635  012202  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 25636  012204  D7FA               	goto	l3745
 25637  012206                     u9650:
 25638                           
 25639                           ; BSR set to: 0
 25640                           
 25641                           ; BSR set to: 0
 25642                           
 25643                           ; BSR set to: 0
 25644  012206  5162               	movf	___lwmod@divisor& (0+255),w,b
 25645  012208  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 25646  01220A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25647  01220C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 25648  01220E  A0D8               	btfss	status,0,c
 25649  012210  D004               	goto	l3748
 25650                           
 25651                           ; BSR set to: 0
 25652  012212  5162               	movf	___lwmod@divisor& (0+255),w,b
 25653  012214  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 25654  012216  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25655  012218  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 25656  01221A                     l3748:
 25657                           
 25658                           ; BSR set to: 0
 25659                           
 25660                           ; BSR set to: 0
 25661  01221A  90D8               	bcf	status,0,c
 25662  01221C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 25663  01221E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 25664                           
 25665                           ; BSR set to: 0
 25666  012220  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 25667  012222  D7F1               	goto	u9650
 25668  012224                     l3749:
 25669                           
 25670                           ; BSR set to: 0
 25671                           
 25672                           ; BSR set to: 0
 25673  012224  C060  F060         	movff	___lwmod@dividend,?___lwmod
 25674  012228  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 25675                           
 25676                           ; BSR set to: 0
 25677  01222C  0012               	return		;funcret
 25678  01222E                     __end_of___lwmod:
 25679                           	opt stack 0
 25680                           tblptru	equ	0xFF8
 25681                           tblptrh	equ	0xFF7
 25682                           tblptrl	equ	0xFF6
 25683                           tablat	equ	0xFF5
 25684                           prodh	equ	0xFF4
 25685                           prodl	equ	0xFF3
 25686                           intcon	equ	0xFF2
 25687                           intcon2	equ	0xFF1
 25688                           intcon3	equ	0xFF0
 25689                           postinc0	equ	0xFEE
 25690                           wreg	equ	0xFE8
 25691                           indf1	equ	0xFE7
 25692                           postinc1	equ	0xFE6
 25693                           postdec1	equ	0xFE5
 25694                           plusw1	equ	0xFE3
 25695                           fsr1h	equ	0xFE2
 25696                           fsr1l	equ	0xFE1
 25697                           indf2	equ	0xFDF
 25698                           postinc2	equ	0xFDE
 25699                           postdec2	equ	0xFDD
 25700                           plusw2	equ	0xFDB
 25701                           fsr2h	equ	0xFDA
 25702                           fsr2l	equ	0xFD9
 25703                           status	equ	0xFD8
 25704                           
 25705 ;; *************** function ___lwdiv *****************
 25706 ;; Defined at:
 25707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 25708 ;; Parameters:    Size  Location     Type
 25709 ;;  dividend        2    0[BANK0 ] unsigned int 
 25710 ;;  divisor         2    2[BANK0 ] unsigned int 
 25711 ;; Auto vars:     Size  Location     Type
 25712 ;;  quotient        2    4[BANK0 ] unsigned int 
 25713 ;;  counter         1    6[BANK0 ] unsigned char 
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  2    0[BANK0 ] unsigned int 
 25716 ;; Registers used:
 25717 ;;		wreg, status,2, status,0
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25724 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25726 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25727 ;;Total ram usage:        7 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; Hardware stack levels required when called:   10
 25730 ;; This function calls:
 25731 ;;		Nothing
 25732 ;; This function is called by:
 25733 ;;		_utoa
 25734 ;; This function uses a non-reentrant model
 25735 ;;
 25736                           
 25737                           	psect	text116
 25738  011C6A                     __ptext116:
 25739                           	opt stack 0
 25740  011C6A                     ___lwdiv:
 25741                           	opt stack 15
 25742                           
 25743                           ; BSR set to: 0
 25744                           ;incstack = 0
 25745  011C6A  0E00               	movlw	0
 25746  011C6C  0100               	movlb	0	; () banked
 25747  011C6E  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 25748  011C70  0E00               	movlw	0
 25749  011C72  6F64               	movwf	___lwdiv@quotient& (0+255),b
 25750                           
 25751                           ; BSR set to: 0
 25752  011C74  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25753  011C76  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 25754  011C78  B4D8               	btfsc	status,2,c
 25755  011C7A  D01C               	goto	l3739
 25756                           
 25757                           ; BSR set to: 0
 25758  011C7C  0E01               	movlw	1
 25759  011C7E  6F66               	movwf	___lwdiv@counter& (0+255),b
 25760  011C80  D004               	goto	l3734
 25761  011C82                     
 25762                           ; BSR set to: 0
 25763                           
 25764                           ; BSR set to: 0
 25765  011C82  90D8               	bcf	status,0,c
 25766  011C84  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 25767  011C86  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 25768  011C88  2B66               	incf	___lwdiv@counter& (0+255),f,b
 25769  011C8A                     l3734:
 25770                           
 25771                           ; BSR set to: 0
 25772                           
 25773                           ; BSR set to: 0
 25774  011C8A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 25775  011C8C  D7FA               	goto	l3735
 25776  011C8E                     u9620:
 25777                           
 25778                           ; BSR set to: 0
 25779                           
 25780                           ; BSR set to: 0
 25781                           
 25782                           ; BSR set to: 0
 25783  011C8E  90D8               	bcf	status,0,c
 25784  011C90  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 25785  011C92  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 25786                           
 25787                           ; BSR set to: 0
 25788  011C94  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25789  011C96  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 25790  011C98  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25791  011C9A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 25792  011C9C  A0D8               	btfss	status,0,c
 25793  011C9E  D005               	goto	l3738
 25794                           
 25795                           ; BSR set to: 0
 25796  011CA0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25797  011CA2  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 25798  011CA4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25799  011CA6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 25800                           
 25801                           ; BSR set to: 0
 25802  011CA8  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 25803  011CAA                     l3738:
 25804                           
 25805                           ; BSR set to: 0
 25806                           
 25807                           ; BSR set to: 0
 25808  011CAA  90D8               	bcf	status,0,c
 25809  011CAC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 25810  011CAE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 25811                           
 25812                           ; BSR set to: 0
 25813  011CB0  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 25814  011CB2  D7ED               	goto	u9620
 25815  011CB4                     l3739:
 25816                           
 25817                           ; BSR set to: 0
 25818                           
 25819                           ; BSR set to: 0
 25820  011CB4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 25821  011CB8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25822                           
 25823                           ; BSR set to: 0
 25824  011CBC  0012               	return		;funcret
 25825  011CBE                     __end_of___lwdiv:
 25826                           	opt stack 0
 25827                           tblptru	equ	0xFF8
 25828                           tblptrh	equ	0xFF7
 25829                           tblptrl	equ	0xFF6
 25830                           tablat	equ	0xFF5
 25831                           prodh	equ	0xFF4
 25832                           prodl	equ	0xFF3
 25833                           intcon	equ	0xFF2
 25834                           intcon2	equ	0xFF1
 25835                           intcon3	equ	0xFF0
 25836                           postinc0	equ	0xFEE
 25837                           wreg	equ	0xFE8
 25838                           indf1	equ	0xFE7
 25839                           postinc1	equ	0xFE6
 25840                           postdec1	equ	0xFE5
 25841                           plusw1	equ	0xFE3
 25842                           fsr1h	equ	0xFE2
 25843                           fsr1l	equ	0xFE1
 25844                           indf2	equ	0xFDF
 25845                           postinc2	equ	0xFDE
 25846                           postdec2	equ	0xFDD
 25847                           plusw2	equ	0xFDB
 25848                           fsr2h	equ	0xFDA
 25849                           fsr2l	equ	0xFD9
 25850                           status	equ	0xFD8
 25851                           
 25852 ;; *************** function _buck_operate *****************
 25853 ;; Defined at:
 25854 ;;		line 550 in file "buck.c"
 25855 ;; Parameters:    Size  Location     Type
 25856 ;;		None
 25857 ;; Auto vars:     Size  Location     Type
 25858 ;;		None
 25859 ;; Return value:  Size  Location     Type
 25860 ;;                  1    wreg      void 
 25861 ;; Registers used:
 25862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25863 ;; Tracked objects:
 25864 ;;		On entry : 0/0
 25865 ;;		On exit  : 0/0
 25866 ;;		Unchanged: 0/0
 25867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25872 ;;Total ram usage:        0 bytes
 25873 ;; Hardware stack levels used:    1
 25874 ;; Hardware stack levels required when called:   14
 25875 ;; This function calls:
 25876 ;;		__buck_operate_local
 25877 ;;		__buck_operate_remote
 25878 ;; This function is called by:
 25879 ;;		_main
 25880 ;; This function uses a non-reentrant model
 25881 ;;
 25882                           
 25883                           	psect	text117
 25884  0118EC                     __ptext117:
 25885                           	opt stack 0
 25886  0118EC                     _buck_operate:
 25887                           	opt stack 16
 25888                           
 25889                           ;buck.c: 553: if(buck_remote_enable)
 25890                           
 25891                           ; BSR set to: 0
 25892                           ;incstack = 0
 25893  0118EC  0101               	movlb	1	; () banked
 25894  0118EE  51ED               	movf	_buck_remote_enable& (0+255),w,b
 25895  0118F0  B4D8               	btfsc	status,2,c
 25896  0118F2  D021               	goto	l2602
 25897                           
 25898                           ; BSR set to: 1
 25899                           ;buck.c: 554: {
 25900                           ;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 25901  0118F4  0E80               	movlw	128
 25902  0118F6  0100               	movlb	0	; () banked
 25903  0118F8  61FF               	cpfslt	_buck_status& (0+255),b
 25904  0118FA  D01A               	goto	l2603
 25905  0118FC  D00B               	goto	l2604
 25906  0118FE                     
 25907                           ; BSR set to: 0
 25908                           ;buck.c: 563: buck_remote_on = 0;
 25909                           
 25910                           ; BSR set to: 0
 25911  0118FE  0E00               	movlw	0
 25912  011900  D001               	goto	L12
 25913  011902                     
 25914                           ; BSR set to: 0
 25915                           ;buck.c: 567: buck_remote_on = 1;
 25916                           
 25917                           ; BSR set to: 0
 25918  011902  0E01               	movlw	1
 25919  011904                     L12:
 25920  011904  6E4E               	movwf	_buck_remote_on,c
 25921                           
 25922                           ;buck.c: 568: buck_remote_synchronous = 0;
 25923  011906  0E00               	movlw	0
 25924  011908  D003               	goto	L13
 25925  01190A                     
 25926                           ; BSR set to: 0
 25927                           ;buck.c: 571: buck_remote_on = 1;
 25928                           
 25929                           ; BSR set to: 0
 25930  01190A  0E01               	movlw	1
 25931  01190C  6E4E               	movwf	_buck_remote_on,c
 25932                           
 25933                           ;buck.c: 572: buck_remote_synchronous = 1;
 25934  01190E  0E01               	movlw	1
 25935  011910                     L13:
 25936  011910  6E4D               	movwf	_buck_remote_synchronous,c
 25937                           
 25938                           ; BSR set to: 0
 25939                           ;buck.c: 574: }
 25940                           
 25941                           ;buck.c: 573: break;
 25942  011912  D00A               	goto	l2606
 25943  011914                     l2604:
 25944                           
 25945                           ; BSR set to: 0
 25946                           
 25947                           ; BSR set to: 0
 25948  011914  51FF               	movf	_buck_status& (0+255),w,b
 25949                           
 25950                           ; Switch size 1, requested type "space"
 25951                           ; Number of cases is 3, Range of values is 0 to 3
 25952                           ; switch strategies available:
 25953                           ; Name         Instructions Cycles
 25954                           ; simple_byte           10     6 (average)
 25955                           ;	Chosen strategy is simple_byte
 25956  011916  0A00               	xorlw	0	; case 0
 25957  011918  B4D8               	btfsc	status,2,c
 25958  01191A  D7F1               	goto	l2605
 25959  01191C  0A02               	xorlw	2	; case 2
 25960  01191E  B4D8               	btfsc	status,2,c
 25961  011920  D7F0               	goto	l2607
 25962  011922  0A01               	xorlw	1	; case 3
 25963  011924  B4D8               	btfsc	status,2,c
 25964  011926  D7F1               	goto	l2608
 25965  011928                     l2606:
 25966                           
 25967                           ; BSR set to: 0
 25968                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 25969  011928  C0FE  F0FD         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25970                           
 25971                           ; BSR set to: 0
 25972                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 25973  01192C  0E80               	movlw	128
 25974  01192E  27FF               	addwf	_buck_status& (0+255),f,b
 25975  011930                     l2603:
 25976                           
 25977                           ; BSR set to: 0
 25978                           ;buck.c: 577: }
 25979                           ;buck.c: 578: _buck_operate_remote();
 25980                           
 25981                           ; BSR set to: 0
 25982  011930  EC7A  F078         	call	__buck_operate_remote	;wreg free
 25983                           
 25984                           ;buck.c: 579: }
 25985  011934  0012               	return	
 25986  011936                     l2602:
 25987                           
 25988                           ;buck.c: 580: else
 25989                           ;buck.c: 581: {
 25990                           ;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 25991  011936  0E7F               	movlw	127
 25992  011938  0100               	movlb	0	; () banked
 25993  01193A  65FF               	cpfsgt	_buck_status& (0+255),b
 25994  01193C  D002               	goto	l2610
 25995                           
 25996                           ; BSR set to: 0
 25997                           ;buck.c: 583: {
 25998                           ;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 25999  01193E  0E80               	movlw	128
 26000  011940  5FFF               	subwf	_buck_status& (0+255),f,b
 26001  011942                     l2610:
 26002                           
 26003                           ; BSR set to: 0
 26004                           ;buck.c: 587: }
 26005                           ;buck.c: 588: _buck_operate_local();
 26006                           
 26007                           ; BSR set to: 0
 26008  011942  EC63  F04D         	call	__buck_operate_local	;wreg free
 26009  011946  0012               	return	
 26010  011948                     __end_of_buck_operate:
 26011                           	opt stack 0
 26012                           tblptru	equ	0xFF8
 26013                           tblptrh	equ	0xFF7
 26014                           tblptrl	equ	0xFF6
 26015                           tablat	equ	0xFF5
 26016                           prodh	equ	0xFF4
 26017                           prodl	equ	0xFF3
 26018                           intcon	equ	0xFF2
 26019                           intcon2	equ	0xFF1
 26020                           intcon3	equ	0xFF0
 26021                           postinc0	equ	0xFEE
 26022                           wreg	equ	0xFE8
 26023                           indf1	equ	0xFE7
 26024                           postinc1	equ	0xFE6
 26025                           postdec1	equ	0xFE5
 26026                           plusw1	equ	0xFE3
 26027                           fsr1h	equ	0xFE2
 26028                           fsr1l	equ	0xFE1
 26029                           indf2	equ	0xFDF
 26030                           postinc2	equ	0xFDE
 26031                           postdec2	equ	0xFDD
 26032                           plusw2	equ	0xFDB
 26033                           fsr2h	equ	0xFDA
 26034                           fsr2l	equ	0xFD9
 26035                           status	equ	0xFD8
 26036                           
 26037 ;; *************** function __buck_operate_remote *****************
 26038 ;; Defined at:
 26039 ;;		line 453 in file "buck.c"
 26040 ;; Parameters:    Size  Location     Type
 26041 ;;		None
 26042 ;; Auto vars:     Size  Location     Type
 26043 ;;		None
 26044 ;; Return value:  Size  Location     Type
 26045 ;;                  1    wreg      void 
 26046 ;; Registers used:
 26047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26048 ;; Tracked objects:
 26049 ;;		On entry : 0/0
 26050 ;;		On exit  : 0/0
 26051 ;;		Unchanged: 0/0
 26052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26057 ;;Total ram usage:        1 bytes
 26058 ;; Hardware stack levels used:    1
 26059 ;; Hardware stack levels required when called:   13
 26060 ;; This function calls:
 26061 ;;		__buck_initial_dutycycle
 26062 ;;		__buck_prepare
 26063 ;;		__buck_set_dutycycle
 26064 ;;		__buck_set_sync_async
 26065 ;;		__buck_start
 26066 ;;		__buck_stop
 26067 ;; This function is called by:
 26068 ;;		_buck_operate
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text118
 26073  00F0F4                     __ptext118:
 26074                           	opt stack 0
 26075  00F0F4                     __buck_operate_remote:
 26076                           	opt stack 16
 26077                           
 26078                           ;buck.c: 455: switch(buck_status)
 26079                           
 26080                           ;incstack = 0
 26081  00F0F4  D06A               	goto	l2574
 26082  00F0F6                     
 26083                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 26084  00F0F6  0102               	movlb	2	; () banked
 26085  00F0F8  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26086  00F0FA  0B30               	andlw	48
 26087  00F0FC  0A30               	xorlw	48
 26088  00F0FE  A4D8               	btfss	status,2,c
 26089  00F100  0012               	return	
 26090                           
 26091                           ; BSR set to: 2
 26092                           ;buck.c: 459: {
 26093                           ;buck.c: 460: if(buck_remote_on)
 26094  00F102  504E               	movf	_buck_remote_on,w,c
 26095  00F104  B4D8               	btfsc	status,2,c
 26096  00F106  0012               	return	
 26097                           
 26098                           ; BSR set to: 2
 26099                           ;buck.c: 461: {
 26100                           ;buck.c: 464: _buck_prepare();
 26101  00F108  EC92  F08A         	call	__buck_prepare	;wreg free
 26102                           
 26103                           ;buck.c: 465: }
 26104                           ;buck.c: 466: }
 26105                           ;buck.c: 467: break;
 26106  00F10C  0012               	return	
 26107  00F10E                     
 26108                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 26109  00F10E  0102               	movlb	2	; () banked
 26110  00F110  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26111  00F112  0B30               	andlw	48
 26112  00F114  0A30               	xorlw	48
 26113  00F116  A4D8               	btfss	status,2,c
 26114  00F118  0012               	return	
 26115                           
 26116                           ; BSR set to: 2
 26117                           ;buck.c: 471: {
 26118                           ;buck.c: 473: if(buck_remote_synchronous)
 26119  00F11A  504D               	movf	_buck_remote_synchronous,w,c
 26120  00F11C  B4D8               	btfsc	status,2,c
 26121  00F11E  D00C               	goto	l2581
 26122                           
 26123                           ; BSR set to: 2
 26124                           ;buck.c: 474: {
 26125                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 26126  00F120  EC9C  F07F         	call	__buck_initial_dutycycle	;wreg free
 26127  00F124  0100               	movlb	0	; () banked
 26128  00F126  6F76               	movwf	__buck_operate_remote$8740& (0+255),b
 26129                           
 26130                           ; BSR set to: 0
 26131                           ;buck.c: 474: {
 26132                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 26133  00F128  C076  F072         	movff	__buck_operate_remote$8740,__buck_start@dutycycle
 26134  00F12C  0E01               	movlw	1
 26135  00F12E  EC16  F07E         	call	__buck_start
 26136                           
 26137                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 26138  00F132  C0FE  F0FD         	movff	_buck_dutycycle,_buck_remote_dutycycle
 26139                           
 26140                           ;buck.c: 478: }
 26141  00F136  0012               	return	
 26142  00F138                     l2581:
 26143                           
 26144                           ;buck.c: 479: else
 26145                           ;buck.c: 480: {
 26146                           ;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 26147  00F138  0E28               	movlw	40
 26148  00F13A  0100               	movlb	0	; () banked
 26149  00F13C  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 26150  00F13E  0E00               	movlw	0
 26151  00F140  EC16  F07E         	call	__buck_start
 26152                           
 26153                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 26154  00F144  C0FE  F0FD         	movff	_buck_dutycycle,_buck_remote_dutycycle
 26155                           
 26156                           ;buck.c: 484: }
 26157                           ;buck.c: 485: }
 26158                           ;buck.c: 486: break;
 26159  00F148  0012               	return	
 26160  00F14A                     
 26161                           ;buck.c: 490: if(!buck_remote_on)
 26162  00F14A  504E               	movf	_buck_remote_on,w,c
 26163  00F14C  A4D8               	btfss	status,2,c
 26164  00F14E  D003               	goto	l2584
 26165                           
 26166                           ;buck.c: 491: {
 26167                           ;buck.c: 493: _buck_stop();
 26168  00F150  EC92  F093         	call	__buck_stop	;wreg free
 26169                           
 26170                           ;buck.c: 494: }
 26171  00F154  0012               	return	
 26172  00F156                     l2584:
 26173                           
 26174                           ;buck.c: 496: else if(buck_remote_synchronous)
 26175  00F156  504D               	movf	_buck_remote_synchronous,w,c
 26176  00F158  B4D8               	btfsc	status,2,c
 26177  00F15A  D00A               	goto	l2586
 26178                           
 26179                           ;buck.c: 497: {
 26180                           ;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 26181  00F15C  EC9C  F07F         	call	__buck_initial_dutycycle	;wreg free
 26182  00F160  0100               	movlb	0	; () banked
 26183  00F162  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 26184                           
 26185                           ; BSR set to: 0
 26186                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 26187  00F164  C0FD  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 26188  00F168  0E01               	movlw	1
 26189  00F16A  EC3D  F088         	call	__buck_set_sync_async
 26190                           
 26191                           ;buck.c: 502: }
 26192  00F16E  0012               	return	
 26193  00F170                     l2586:
 26194                           
 26195                           ;buck.c: 503: else
 26196                           ;buck.c: 504: {
 26197                           ;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 26198  00F170  0100               	movlb	0	; () banked
 26199  00F172  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 26200  00F174  19FE               	xorwf	_buck_dutycycle& (0+255),w,b
 26201  00F176  B4D8               	btfsc	status,2,c
 26202  00F178  0012               	return	
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;buck.c: 507: {
 26206                           ;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 26207  00F17A  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 26208  00F17C  ECC1  F089         	call	__buck_set_dutycycle
 26209                           
 26210                           ;buck.c: 509: }
 26211                           ;buck.c: 510: }
 26212                           ;buck.c: 511: break;
 26213  00F180  0012               	return	
 26214  00F182                     
 26215                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 26216  00F182  0100               	movlb	0	; () banked
 26217  00F184  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 26218  00F186  ECC1  F089         	call	__buck_set_dutycycle
 26219                           
 26220                           ;buck.c: 515: if(!buck_remote_on)
 26221  00F18A  504E               	movf	_buck_remote_on,w,c
 26222  00F18C  A4D8               	btfss	status,2,c
 26223  00F18E  D003               	goto	l2590
 26224                           
 26225                           ;buck.c: 516: {
 26226                           ;buck.c: 518: _buck_stop();
 26227  00F190  EC92  F093         	call	__buck_stop	;wreg free
 26228                           
 26229                           ;buck.c: 519: }
 26230  00F194  0012               	return	
 26231  00F196                     l2590:
 26232                           
 26233                           ;buck.c: 521: else if(!buck_remote_synchronous)
 26234  00F196  504D               	movf	_buck_remote_synchronous,w,c
 26235  00F198  A4D8               	btfss	status,2,c
 26236  00F19A  D00B               	goto	l2592
 26237                           
 26238                           ;buck.c: 522: {
 26239                           ;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 26240  00F19C  EC9C  F07F         	call	__buck_initial_dutycycle	;wreg free
 26241  00F1A0  0FFB               	addlw	251
 26242  00F1A2  0100               	movlb	0	; () banked
 26243  00F1A4  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 26244                           
 26245                           ; BSR set to: 0
 26246                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 26247  00F1A6  C0FD  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 26248  00F1AA  0E00               	movlw	0
 26249  00F1AC  EC3D  F088         	call	__buck_set_sync_async
 26250                           
 26251                           ;buck.c: 526: }
 26252  00F1B0  0012               	return	
 26253  00F1B2                     l2592:
 26254                           
 26255                           ;buck.c: 527: else
 26256                           ;buck.c: 528: {
 26257                           ;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 26258  00F1B2  0100               	movlb	0	; () banked
 26259  00F1B4  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 26260  00F1B6  19FE               	xorwf	_buck_dutycycle& (0+255),w,b
 26261  00F1B8  B4D8               	btfsc	status,2,c
 26262  00F1BA  0012               	return	
 26263                           
 26264                           ; BSR set to: 0
 26265                           ;buck.c: 531: {
 26266                           ;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 26267  00F1BC  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 26268  00F1BE  ECC1  F089         	call	__buck_set_dutycycle
 26269                           
 26270                           ;buck.c: 533: }
 26271                           ;buck.c: 534: }
 26272                           ;buck.c: 535: break;
 26273  00F1C2  0012               	return	
 26274  00F1C4                     
 26275                           ;buck.c: 539: _buck_stop();
 26276  00F1C4  EC92  F093         	call	__buck_stop	;wreg free
 26277                           
 26278                           ;buck.c: 540: }
 26279  00F1C8  0012               	return	
 26280  00F1CA                     l2574:
 26281  00F1CA  0100               	movlb	0	; () banked
 26282  00F1CC  51FF               	movf	_buck_status& (0+255),w,b
 26283                           
 26284                           ; Switch size 1, requested type "space"
 26285                           ; Number of cases is 4, Range of values is 128 to 131
 26286                           ; switch strategies available:
 26287                           ; Name         Instructions Cycles
 26288                           ; simple_byte           13     7 (average)
 26289                           ;	Chosen strategy is simple_byte
 26290  00F1CE  0A80               	xorlw	128	; case 128
 26291  00F1D0  B4D8               	btfsc	status,2,c
 26292  00F1D2  D791               	goto	l2575
 26293  00F1D4  0A01               	xorlw	1	; case 129
 26294  00F1D6  B4D8               	btfsc	status,2,c
 26295  00F1D8  D79A               	goto	l2579
 26296  00F1DA  0A03               	xorlw	3	; case 130
 26297  00F1DC  B4D8               	btfsc	status,2,c
 26298  00F1DE  D7B5               	goto	l2583
 26299  00F1E0  0A01               	xorlw	1	; case 131
 26300  00F1E2  B4D8               	btfsc	status,2,c
 26301  00F1E4  D7CE               	goto	l2589
 26302  00F1E6  D7EE               	goto	l2595
 26303  00F1E8                     __end_of__buck_operate_remote:
 26304                           	opt stack 0
 26305                           tblptru	equ	0xFF8
 26306                           tblptrh	equ	0xFF7
 26307                           tblptrl	equ	0xFF6
 26308                           tablat	equ	0xFF5
 26309                           prodh	equ	0xFF4
 26310                           prodl	equ	0xFF3
 26311                           intcon	equ	0xFF2
 26312                           intcon2	equ	0xFF1
 26313                           intcon3	equ	0xFF0
 26314                           postinc0	equ	0xFEE
 26315                           wreg	equ	0xFE8
 26316                           indf1	equ	0xFE7
 26317                           postinc1	equ	0xFE6
 26318                           postdec1	equ	0xFE5
 26319                           plusw1	equ	0xFE3
 26320                           fsr1h	equ	0xFE2
 26321                           fsr1l	equ	0xFE1
 26322                           indf2	equ	0xFDF
 26323                           postinc2	equ	0xFDE
 26324                           postdec2	equ	0xFDD
 26325                           plusw2	equ	0xFDB
 26326                           fsr2h	equ	0xFDA
 26327                           fsr2l	equ	0xFD9
 26328                           status	equ	0xFD8
 26329                           
 26330 ;; *************** function __buck_prepare *****************
 26331 ;; Defined at:
 26332 ;;		line 125 in file "buck.c"
 26333 ;; Parameters:    Size  Location     Type
 26334 ;;		None
 26335 ;; Auto vars:     Size  Location     Type
 26336 ;;  cntr            1    0[BANK0 ] unsigned char 
 26337 ;; Return value:  Size  Location     Type
 26338 ;;                  1    wreg      void 
 26339 ;; Registers used:
 26340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26341 ;; Tracked objects:
 26342 ;;		On entry : 0/0
 26343 ;;		On exit  : 0/0
 26344 ;;		Unchanged: 0/0
 26345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26349 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26350 ;;Total ram usage:        1 bytes
 26351 ;; Hardware stack levels used:    1
 26352 ;; Hardware stack levels required when called:   10
 26353 ;; This function calls:
 26354 ;;		Nothing
 26355 ;; This function is called by:
 26356 ;;		__buck_operate_remote
 26357 ;; This function uses a non-reentrant model
 26358 ;;
 26359                           
 26360                           	psect	text119
 26361  011524                     __ptext119:
 26362                           	opt stack 0
 26363  011524                     __buck_prepare:
 26364                           	opt stack 18
 26365                           
 26366                           ;buck.c: 127: uint8_t cntr;
 26367                           ;buck.c: 128: LATBbits.LB1 = 1;
 26368                           
 26369                           ;incstack = 0
 26370  011524  828A               	bsf	3978,1,c	;volatile
 26371                           
 26372                           ;buck.c: 129: if(buck_status<0x80)
 26373  011526  0E80               	movlw	128
 26374  011528  0100               	movlb	0	; () banked
 26375  01152A  61FF               	cpfslt	_buck_status& (0+255),b
 26376  01152C  D002               	goto	l2492
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 26380  01152E  0E01               	movlw	1
 26381  011530  D001               	goto	L14
 26382  011532                     l2492:
 26383                           
 26384                           ; BSR set to: 0
 26385                           ;buck.c: 131: else
 26386                           ;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 26387                           
 26388                           ; BSR set to: 0
 26389  011532  0E81               	movlw	129
 26390  011534                     L14:
 26391  011534  6FFF               	movwf	_buck_status& (0+255),b
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;buck.c: 134: os.input_current = 0;
 26395  011536  0E00               	movlw	0
 26396  011538  0102               	movlb	2	; () banked
 26397  01153A  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 26398  01153C  0E00               	movlw	0
 26399  01153E  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 26400                           
 26401                           ;buck.c: 135: os.output_current = 0;
 26402  011540  0E00               	movlw	0
 26403  011542  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 26404  011544  0E00               	movlw	0
 26405  011546  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 26406                           
 26407                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 26408  011548  0E00               	movlw	0
 26409  01154A  0100               	movlb	0	; () banked
 26410  01154C  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 26411  01154E                     l13899:
 26412                           
 26413                           ; BSR set to: 0
 26414  01154E  0E03               	movlw	3
 26415  011550  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 26416  011552  D001               	goto	l2494
 26417  011554  0012               	return	
 26418  011556                     l2494:
 26419                           
 26420                           ; BSR set to: 0
 26421                           ;buck.c: 137: {
 26422                           ;buck.c: 138: os.input_current_adc[cntr] = 0;
 26423                           
 26424                           ; BSR set to: 0
 26425  011556  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 26426  011558  0D02               	mullw	2
 26427  01155A  0E14               	movlw	low (_os+20)
 26428  01155C  24F3               	addwf	prodl,w,c
 26429  01155E  6ED9               	movwf	fsr2l,c
 26430  011560  0E02               	movlw	high (_os+20)
 26431  011562  20F4               	addwfc	prodh,w,c
 26432  011564  6EDA               	movwf	fsr2h,c
 26433  011566  0E00               	movlw	0
 26434  011568  6EDE               	movwf	postinc2,c
 26435  01156A  0E00               	movlw	0
 26436  01156C  6EDD               	movwf	postdec2,c
 26437                           
 26438                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 26439  01156E  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 26440  011570  0D02               	mullw	2
 26441  011572  0E29               	movlw	low (_os+41)
 26442  011574  24F3               	addwf	prodl,w,c
 26443  011576  6ED9               	movwf	fsr2l,c
 26444  011578  0E02               	movlw	high (_os+41)
 26445  01157A  20F4               	addwfc	prodh,w,c
 26446  01157C  6EDA               	movwf	fsr2h,c
 26447  01157E  0E00               	movlw	0
 26448  011580  6EDE               	movwf	postinc2,c
 26449  011582  0E00               	movlw	0
 26450  011584  6EDD               	movwf	postdec2,c
 26451                           
 26452                           ; BSR set to: 0
 26453  011586  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 26454  011588  D7E2               	goto	l13899
 26455  01158A                     __end_of__buck_prepare:
 26456                           	opt stack 0
 26457                           tblptru	equ	0xFF8
 26458                           tblptrh	equ	0xFF7
 26459                           tblptrl	equ	0xFF6
 26460                           tablat	equ	0xFF5
 26461                           prodh	equ	0xFF4
 26462                           prodl	equ	0xFF3
 26463                           intcon	equ	0xFF2
 26464                           intcon2	equ	0xFF1
 26465                           intcon3	equ	0xFF0
 26466                           postinc0	equ	0xFEE
 26467                           wreg	equ	0xFE8
 26468                           indf1	equ	0xFE7
 26469                           postinc1	equ	0xFE6
 26470                           postdec1	equ	0xFE5
 26471                           plusw1	equ	0xFE3
 26472                           fsr1h	equ	0xFE2
 26473                           fsr1l	equ	0xFE1
 26474                           indf2	equ	0xFDF
 26475                           postinc2	equ	0xFDE
 26476                           postdec2	equ	0xFDD
 26477                           plusw2	equ	0xFDB
 26478                           fsr2h	equ	0xFDA
 26479                           fsr2l	equ	0xFD9
 26480                           status	equ	0xFD8
 26481                           
 26482 ;; *************** function __buck_operate_local *****************
 26483 ;; Defined at:
 26484 ;;		line 308 in file "buck.c"
 26485 ;; Parameters:    Size  Location     Type
 26486 ;;		None
 26487 ;; Auto vars:     Size  Location     Type
 26488 ;;  cntr            1   29[BANK0 ] unsigned char 
 26489 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 26490 ;; Return value:  Size  Location     Type
 26491 ;;                  1    wreg      void 
 26492 ;; Registers used:
 26493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26494 ;; Tracked objects:
 26495 ;;		On entry : 0/0
 26496 ;;		On exit  : 0/0
 26497 ;;		Unchanged: 0/0
 26498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26500 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26501 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26502 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26503 ;;Total ram usage:        8 bytes
 26504 ;; Hardware stack levels used:    1
 26505 ;; Hardware stack levels required when called:   13
 26506 ;; This function calls:
 26507 ;;		___lmul
 26508 ;;		__buck_initial_dutycycle
 26509 ;;		__buck_set_dutycycle
 26510 ;;		__buck_set_sync_async
 26511 ;;		__buck_start
 26512 ;;		__buck_stop
 26513 ;; This function is called by:
 26514 ;;		_buck_operate
 26515 ;; This function uses a non-reentrant model
 26516 ;;
 26517                           
 26518                           	psect	text120
 26519  009AC6                     __ptext120:
 26520                           	opt stack 0
 26521  009AC6                     __buck_operate_local:
 26522                           	opt stack 16
 26523                           
 26524                           ;buck.c: 310: uint8_t cntr;
 26525                           ;buck.c: 311: uint8_t tmp_dutycycle;
 26526                           ;buck.c: 313: switch(buck_status)
 26527                           
 26528                           ; BSR set to: 0
 26529                           ;incstack = 0
 26530  009AC6  D22B               	goto	l2537
 26531  009AC8                     
 26532                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 26533  009AC8  0102               	movlb	2	; () banked
 26534  009ACA  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26535  009ACC  0B30               	andlw	48
 26536  009ACE  0A30               	xorlw	48
 26537  009AD0  A4D8               	btfss	status,2,c
 26538  009AD2  0012               	return	
 26539                           
 26540                           ; BSR set to: 2
 26541                           ;buck.c: 317: {
 26542                           ;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 26543  009AD4  0E0C               	movlw	12
 26544  009AD6  0100               	movlb	0	; () banked
 26545  009AD8  6F76               	movwf	??__buck_operate_local& (0+255),b
 26546  009ADA  0EFE               	movlw	254
 26547  009ADC  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 26548  009ADE  EE22  F012         	lfsr	2,_os+18	;volatile
 26549  009AE2  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 26550  009AE6  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 26551  009AEA  5176               	movf	??__buck_operate_local& (0+255),w,b
 26552  009AEC  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 26553  009AEE  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 26554  009AF0  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 26555  009AF2  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 26556  009AF4  0102               	movlb	2	; () banked
 26557  009AF6  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 26558  009AF8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26559  009AFA  0A80               	xorlw	128
 26560  009AFC  0100               	movlb	0	; () banked
 26561  009AFE  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 26562  009B00  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 26563  009B02  0A80               	xorlw	128
 26564  009B04  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 26565  009B06  B0D8               	btfsc	status,0,c
 26566  009B08  0012               	return	
 26567                           
 26568                           ; BSR set to: 0
 26569                           ;buck.c: 319: {
 26570                           ;buck.c: 320: LATBbits.LB1 = 1;
 26571  009B0A  828A               	bsf	3978,1,c	;volatile
 26572                           
 26573                           ; BSR set to: 0
 26574                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 26575  009B0C  0E01               	movlw	1
 26576  009B0E  6FFF               	movwf	_buck_status& (0+255),b
 26577                           
 26578                           ;buck.c: 323: os.input_current = 0;
 26579  009B10  0E00               	movlw	0
 26580  009B12  0102               	movlb	2	; () banked
 26581  009B14  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 26582  009B16  0E00               	movlw	0
 26583  009B18  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 26584                           
 26585                           ;buck.c: 324: os.output_current = 0;
 26586  009B1A  0E00               	movlw	0
 26587  009B1C  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 26588  009B1E  0E00               	movlw	0
 26589  009B20  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 26590                           
 26591                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 26592  009B22  0E00               	movlw	0
 26593  009B24  0100               	movlb	0	; () banked
 26594  009B26  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26595  009B28                     l15693:
 26596                           
 26597                           ; BSR set to: 0
 26598  009B28  0E03               	movlw	3
 26599  009B2A  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26600  009B2C  D001               	goto	l2541
 26601  009B2E  0012               	return	
 26602  009B30                     l2541:
 26603                           
 26604                           ; BSR set to: 0
 26605                           ;buck.c: 326: {
 26606                           ;buck.c: 327: os.input_current_adc[cntr] = 0;
 26607                           
 26608                           ; BSR set to: 0
 26609  009B30  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26610  009B32  0D02               	mullw	2
 26611  009B34  0E14               	movlw	low (_os+20)
 26612  009B36  24F3               	addwf	prodl,w,c
 26613  009B38  6ED9               	movwf	fsr2l,c
 26614  009B3A  0E02               	movlw	high (_os+20)
 26615  009B3C  20F4               	addwfc	prodh,w,c
 26616  009B3E  6EDA               	movwf	fsr2h,c
 26617  009B40  0E00               	movlw	0
 26618  009B42  6EDE               	movwf	postinc2,c
 26619  009B44  0E00               	movlw	0
 26620  009B46  6EDD               	movwf	postdec2,c
 26621                           
 26622                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 26623  009B48  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26624  009B4A  0D02               	mullw	2
 26625  009B4C  0E29               	movlw	low (_os+41)
 26626  009B4E  24F3               	addwf	prodl,w,c
 26627  009B50  6ED9               	movwf	fsr2l,c
 26628  009B52  0E02               	movlw	high (_os+41)
 26629  009B54  20F4               	addwfc	prodh,w,c
 26630  009B56  6EDA               	movwf	fsr2h,c
 26631  009B58  0E00               	movlw	0
 26632  009B5A  6EDE               	movwf	postinc2,c
 26633  009B5C  0E00               	movlw	0
 26634  009B5E  6EDD               	movwf	postdec2,c
 26635                           
 26636                           ; BSR set to: 0
 26637  009B60  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26638  009B62  D7E2               	goto	l15693
 26639  009B64                     
 26640                           ; BSR set to: 0
 26641                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 26642                           
 26643                           ; BSR set to: 0
 26644  009B64  0102               	movlb	2	; () banked
 26645  009B66  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26646  009B68  0B30               	andlw	48
 26647  009B6A  0A30               	xorlw	48
 26648  009B6C  A4D8               	btfss	status,2,c
 26649  009B6E  0012               	return	
 26650                           
 26651                           ; BSR set to: 2
 26652                           ;buck.c: 336: {
 26653                           ;buck.c: 338: os.input_current_calibration = 0;
 26654  009B70  0E00               	movlw	0
 26655  009B72  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 26656                           
 26657                           ;buck.c: 339: os.output_current_calibration = 0;
 26658  009B74  0E00               	movlw	0
 26659  009B76  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 26660                           
 26661                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 26662  009B78  0E00               	movlw	0
 26663  009B7A  0100               	movlb	0	; () banked
 26664  009B7C  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26665  009B7E                     l15707:
 26666                           
 26667                           ; BSR set to: 0
 26668  009B7E  0E03               	movlw	3
 26669  009B80  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26670  009B82  D001               	goto	l2546
 26671  009B84  D01A               	goto	u14280
 26672  009B86                     l2546:
 26673                           
 26674                           ; BSR set to: 0
 26675                           ;buck.c: 341: {
 26676                           ;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 26677                           
 26678                           ; BSR set to: 0
 26679  009B86  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26680  009B88  0D02               	mullw	2
 26681  009B8A  0E14               	movlw	low (_os+20)
 26682  009B8C  24F3               	addwf	prodl,w,c
 26683  009B8E  6ED9               	movwf	fsr2l,c
 26684  009B90  0E02               	movlw	high (_os+20)
 26685  009B92  20F4               	addwfc	prodh,w,c
 26686  009B94  6EDA               	movwf	fsr2h,c
 26687  009B96  50DF               	movf	indf2,w,c
 26688  009B98  0102               	movlb	2	; () banked
 26689  009B9A  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 26690                           
 26691                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 26692  009B9C  0100               	movlb	0	; () banked
 26693  009B9E  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26694  009BA0  0D02               	mullw	2
 26695  009BA2  0E29               	movlw	low (_os+41)
 26696  009BA4  24F3               	addwf	prodl,w,c
 26697  009BA6  6ED9               	movwf	fsr2l,c
 26698  009BA8  0E02               	movlw	high (_os+41)
 26699  009BAA  20F4               	addwfc	prodh,w,c
 26700  009BAC  6EDA               	movwf	fsr2h,c
 26701  009BAE  50DF               	movf	indf2,w,c
 26702  009BB0  0102               	movlb	2	; () banked
 26703  009BB2  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 26704                           
 26705                           ; BSR set to: 2
 26706  009BB4  0100               	movlb	0	; () banked
 26707  009BB6  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26708  009BB8  D7E2               	goto	l15707
 26709  009BBA                     u14280:
 26710                           
 26711                           ; BSR set to: 0
 26712                           ;buck.c: 344: }
 26713                           ;buck.c: 346: buck_dutycycle_last_step = 1;
 26714                           
 26715                           ; BSR set to: 0
 26716  009BBA  0E01               	movlw	1
 26717  009BBC  0101               	movlb	1	; () banked
 26718  009BBE  6FEE               	movwf	_buck_dutycycle_last_step& (0+255),b
 26719                           
 26720                           ; BSR set to: 1
 26721                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26722  009BC0  EC9C  F07F         	call	__buck_initial_dutycycle	;wreg free
 26723  009BC4  0100               	movlb	0	; () banked
 26724  009BC6  6F7B               	movwf	__buck_operate_local$8739& (0+255),b
 26725                           
 26726                           ; BSR set to: 0
 26727                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26728  009BC8  C07B  F072         	movff	__buck_operate_local$8739,__buck_start@dutycycle
 26729  009BCC  0E00               	movlw	0
 26730  009BCE  EC16  F07E         	call	__buck_start
 26731                           
 26732                           ;buck.c: 349: }
 26733                           ;buck.c: 350: break;
 26734  009BD2  0012               	return	
 26735  009BD4                     l2548:
 26736                           
 26737                           ; BSR set to: 0
 26738                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 26739  009BD4  0102               	movlb	2	; () banked
 26740  009BD6  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26741  009BD8  0012               	return	
 26742                           
 26743                           ; BSR set to: 2
 26744                           ;buck.c: 354: {
 26745                           ;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 26746  009BDA  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26747  009BDC  5DED               	subwf	_battery_voltage_maximum& (0+255),w,b
 26748  009BDE  51EE               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26749  009BE0  0A80               	xorlw	128
 26750  009BE2  0100               	movlb	0	; () banked
 26751  009BE4  6F76               	movwf	??__buck_operate_local& (0+255),b
 26752  009BE6  0102               	movlb	2	; () banked
 26753  009BE8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26754  009BEA  0A80               	xorlw	128
 26755  009BEC  0100               	movlb	0	; () banked
 26756  009BEE  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26757  009BF0  B0D8               	btfsc	status,0,c
 26758  009BF2  D006               	goto	l2550
 26759                           
 26760                           ; BSR set to: 0
 26761                           ;buck.c: 357: {
 26762                           ;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26763  009BF4  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26764  009BF6  ECC1  F089         	call	__buck_set_dutycycle
 26765                           
 26766                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 26767  009BFA  0101               	movlb	1	; () banked
 26768  009BFC  69EE               	setf	_buck_dutycycle_last_step& (0+255),b
 26769                           
 26770                           ;buck.c: 360: }
 26771  009BFE  0012               	return	
 26772  009C00                     l2550:
 26773                           
 26774                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 26775                           
 26776                           ; BSR set to: 1
 26777  009C00  0102               	movlb	2	; () banked
 26778  009C02  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26779  009C04  D013               	goto	u14320
 26780  009C06  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26781  009C08  E104               	bnz	u14310
 26782  009C0A  0E05               	movlw	5
 26783  009C0C  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26784  009C0E  A0D8               	btfss	status,0,c
 26785  009C10  D00D               	goto	u14320
 26786  009C12                     u14310:
 26787                           
 26788                           ; BSR set to: 2
 26789  009C12  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26790  009C14  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26791  009C16  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26792  009C18  0A80               	xorlw	128
 26793  009C1A  0100               	movlb	0	; () banked
 26794  009C1C  6F76               	movwf	??__buck_operate_local& (0+255),b
 26795  009C1E  0102               	movlb	2	; () banked
 26796  009C20  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26797  009C22  0A80               	xorlw	128
 26798  009C24  0100               	movlb	0	; () banked
 26799  009C26  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26800  009C28  B0D8               	btfsc	status,0,c
 26801  009C2A  D006               	goto	l2552
 26802  009C2C                     u14320:
 26803                           
 26804                           ;buck.c: 363: {
 26805                           ;buck.c: 364: _buck_stop();
 26806                           
 26807                           ; BSR set to: 0
 26808  009C2C  EC92  F093         	call	__buck_stop	;wreg free
 26809                           
 26810                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 26811  009C30  0E00               	movlw	0
 26812  009C32  0100               	movlb	0	; () banked
 26813  009C34  6FFF               	movwf	_buck_status& (0+255),b
 26814                           
 26815                           ;buck.c: 366: }
 26816  009C36  0012               	return	
 26817  009C38                     l2552:
 26818                           
 26819                           ; BSR set to: 0
 26820                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 26821                           
 26822                           ; BSR set to: 0
 26823  009C38  EE22  F027         	lfsr	2,_os+39	;volatile
 26824  009C3C  CFDE F076          	movff	postinc2,??__buck_operate_local
 26825  009C40  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 26826  009C44  1F76               	comf	??__buck_operate_local& (0+255),f,b
 26827  009C46  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 26828  009C48  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 26829  009C4A  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 26830  009C4C  0102               	movlb	2	; () banked
 26831  009C4E  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 26832  009C50  0100               	movlb	0	; () banked
 26833  009C52  2776               	addwf	??__buck_operate_local& (0+255),f,b
 26834  009C54  0102               	movlb	2	; () banked
 26835  009C56  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26836  009C58  0100               	movlb	0	; () banked
 26837  009C5A  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 26838  009C5C  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 26839  009C5E  D006               	goto	u14330
 26840  009C60  0EE8               	movlw	232
 26841  009C62  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 26842  009C64  0E03               	movlw	3
 26843  009C66  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 26844  009C68  B0D8               	btfsc	status,0,c
 26845  009C6A  D006               	goto	l2556
 26846  009C6C                     u14330:
 26847                           
 26848                           ; BSR set to: 0
 26849                           ;buck.c: 369: {
 26850                           ;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26851  009C6C  05FE               	decf	_buck_dutycycle& (0+255),w,b
 26852  009C6E  ECC1  F089         	call	__buck_set_dutycycle
 26853                           
 26854                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 26855  009C72  0101               	movlb	1	; () banked
 26856  009C74  69EE               	setf	_buck_dutycycle_last_step& (0+255),b
 26857                           
 26858                           ;buck.c: 372: }
 26859  009C76  0012               	return	
 26860  009C78                     l2556:
 26861                           
 26862                           ;buck.c: 374: else if (os.input_current>600)
 26863                           
 26864                           ; BSR set to: 1
 26865  009C78  0102               	movlb	2	; () banked
 26866  009C7A  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26867  009C7C  D011               	goto	l2558
 26868  009C7E  0E59               	movlw	89
 26869  009C80  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26870  009C82  0E02               	movlw	2
 26871  009C84  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 26872  009C86  A0D8               	btfss	status,0,c
 26873  009C88  D00B               	goto	l2558
 26874                           
 26875                           ; BSR set to: 2
 26876                           ;buck.c: 375: {
 26877                           ;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 26878  009C8A  EC9C  F07F         	call	__buck_initial_dutycycle	;wreg free
 26879  009C8E  0F05               	addlw	5
 26880  009C90  0100               	movlb	0	; () banked
 26881  009C92  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26882                           
 26883                           ; BSR set to: 0
 26884                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 26885  009C94  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26886  009C98  0E01               	movlw	1
 26887  009C9A  EC3D  F088         	call	__buck_set_sync_async
 26888                           
 26889                           ;buck.c: 380: }
 26890  009C9E  0012               	return	
 26891  009CA0                     l2558:
 26892                           
 26893                           ;buck.c: 382: else
 26894                           ;buck.c: 383: {
 26895                           ;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000);
 26896  009CA0  0102               	movlb	2	; () banked
 26897  009CA2  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26898  009CA4  0B30               	andlw	48
 26899  009CA6  6E4C               	movwf	_idx,c
 26900                           
 26901                           ;buck.c: 386: idx >>= 4;
 26902  009CA8  3A4C               	swapf	_idx,f,c
 26903  009CAA  0E0F               	movlw	15
 26904  009CAC  164C               	andwf	_idx,f,c
 26905                           
 26906                           ; BSR set to: 2
 26907                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 26908  009CAE  504C               	movf	_idx,w,c
 26909  009CB0  0D02               	mullw	2
 26910  009CB2  0E0A               	movlw	low (_os+10)
 26911  009CB4  24F3               	addwf	prodl,w,c
 26912  009CB6  6ED9               	movwf	fsr2l,c
 26913  009CB8  0E02               	movlw	high (_os+10)
 26914  009CBA  20F4               	addwfc	prodh,w,c
 26915  009CBC  6EDA               	movwf	fsr2h,c
 26916  009CBE  CFDE F29E          	movff	postinc2,_now
 26917  009CC2  CFDD F29F          	movff	postdec2,_now+1
 26918  009CC6  0E00               	movlw	0
 26919  009CC8  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26920  009CCA  0EFF               	movlw	-1
 26921  009CCC  6FA0               	movwf	(_now+2)& (0+255),b
 26922  009CCE  6FA1               	movwf	(_now+3)& (0+255),b
 26923                           
 26924                           ; BSR set to: 2
 26925                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 26926  009CD0  C29E  F060         	movff	_now,___lmul@multiplier
 26927  009CD4  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26928  009CD8  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26929  009CDC  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26930  009CE0  504C               	movf	_idx,w,c
 26931  009CE2  0D02               	mullw	2
 26932  009CE4  0E14               	movlw	low (_os+20)
 26933  009CE6  24F3               	addwf	prodl,w,c
 26934  009CE8  6ED9               	movwf	fsr2l,c
 26935  009CEA  0E02               	movlw	high (_os+20)
 26936  009CEC  20F4               	addwfc	prodh,w,c
 26937  009CEE  6EDA               	movwf	fsr2h,c
 26938  009CF0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26939  009CF4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26940  009CF8  0100               	movlb	0	; () banked
 26941  009CFA  0E00               	movlw	0
 26942  009CFC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26943  009CFE  0EFF               	movlw	-1
 26944  009D00  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26945  009D02  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26946  009D04  ECB3  F08D         	call	___lmul	;wreg free
 26947  009D08  C060  F29E         	movff	?___lmul,_now
 26948  009D0C  C061  F29F         	movff	?___lmul+1,_now+1
 26949  009D10  C062  F2A0         	movff	?___lmul+2,_now+2
 26950  009D14  C063  F2A1         	movff	?___lmul+3,_now+3
 26951                           
 26952                           ;buck.c: 390: idx += 2;
 26953  009D18  0E02               	movlw	2
 26954  009D1A  264C               	addwf	_idx,f,c
 26955                           
 26956                           ;buck.c: 391: idx &= 0b11;
 26957  009D1C  0E03               	movlw	3
 26958  009D1E  164C               	andwf	_idx,f,c
 26959                           
 26960                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 26961  009D20  504C               	movf	_idx,w,c
 26962  009D22  0D02               	mullw	2
 26963  009D24  0E0A               	movlw	low (_os+10)
 26964  009D26  24F3               	addwf	prodl,w,c
 26965  009D28  6ED9               	movwf	fsr2l,c
 26966  009D2A  0E02               	movlw	high (_os+10)
 26967  009D2C  20F4               	addwfc	prodh,w,c
 26968  009D2E  6EDA               	movwf	fsr2h,c
 26969  009D30  CFDE F2A2          	movff	postinc2,_last
 26970  009D34  CFDD F2A3          	movff	postdec2,_last+1
 26971  009D38  0102               	movlb	2	; () banked
 26972  009D3A  0E00               	movlw	0
 26973  009D3C  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26974  009D3E  0EFF               	movlw	-1
 26975  009D40  6FA4               	movwf	(_last+2)& (0+255),b
 26976  009D42  6FA5               	movwf	(_last+3)& (0+255),b
 26977                           
 26978                           ; BSR set to: 2
 26979                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 26980  009D44  C2A2  F060         	movff	_last,___lmul@multiplier
 26981  009D48  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26982  009D4C  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26983  009D50  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26984  009D54  504C               	movf	_idx,w,c
 26985  009D56  0D02               	mullw	2
 26986  009D58  0E14               	movlw	low (_os+20)
 26987  009D5A  24F3               	addwf	prodl,w,c
 26988  009D5C  6ED9               	movwf	fsr2l,c
 26989  009D5E  0E02               	movlw	high (_os+20)
 26990  009D60  20F4               	addwfc	prodh,w,c
 26991  009D62  6EDA               	movwf	fsr2h,c
 26992  009D64  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26993  009D68  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26994  009D6C  0100               	movlb	0	; () banked
 26995  009D6E  0E00               	movlw	0
 26996  009D70  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26997  009D72  0EFF               	movlw	-1
 26998  009D74  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26999  009D76  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27000  009D78  ECB3  F08D         	call	___lmul	;wreg free
 27001  009D7C  C060  F2A2         	movff	?___lmul,_last
 27002  009D80  C061  F2A3         	movff	?___lmul+1,_last+1
 27003  009D84  C062  F2A4         	movff	?___lmul+2,_last+2
 27004  009D88  C063  F2A5         	movff	?___lmul+3,_last+3
 27005                           
 27006                           ;buck.c: 395: if(os.input_voltage>15185)
 27007  009D8C  0102               	movlb	2	; () banked
 27008  009D8E  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 27009  009D90  D00B               	goto	l2560
 27010  009D92  0E52               	movlw	82
 27011  009D94  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27012  009D96  0E3B               	movlw	59
 27013  009D98  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 27014  009D9A  A0D8               	btfss	status,0,c
 27015  009D9C  D005               	goto	l2560
 27016                           
 27017                           ; BSR set to: 2
 27018                           ;buck.c: 396: {
 27019                           ;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 27020  009D9E  0100               	movlb	0	; () banked
 27021  009DA0  29FE               	incf	_buck_dutycycle& (0+255),w,b
 27022  009DA2  ECC1  F089         	call	__buck_set_dutycycle
 27023                           
 27024                           ;buck.c: 398: }
 27025  009DA6  0012               	return	
 27026  009DA8                     l2560:
 27027                           
 27028                           ;buck.c: 399: else
 27029                           ;buck.c: 400: {
 27030                           ;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 27031  009DA8  0100               	movlb	0	; () banked
 27032  009DAA  05FE               	decf	_buck_dutycycle& (0+255),w,b
 27033  009DAC  ECC1  F089         	call	__buck_set_dutycycle
 27034                           
 27035                           ;buck.c: 402: }
 27036                           ;buck.c: 403: }
 27037                           ;buck.c: 404: }
 27038                           ;buck.c: 405: break;
 27039  009DB0  0012               	return	
 27040  009DB2                     l2562:
 27041                           
 27042                           ; BSR set to: 0
 27043                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 27044  009DB2  0102               	movlb	2	; () banked
 27045  009DB4  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 27046  009DB6  0012               	return	
 27047                           
 27048                           ; BSR set to: 2
 27049                           ;buck.c: 409: {
 27050                           ;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 27051  009DB8  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27052  009DBA  5DED               	subwf	_battery_voltage_maximum& (0+255),w,b
 27053  009DBC  51EE               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 27054  009DBE  0A80               	xorlw	128
 27055  009DC0  0100               	movlb	0	; () banked
 27056  009DC2  6F76               	movwf	??__buck_operate_local& (0+255),b
 27057  009DC4  0102               	movlb	2	; () banked
 27058  009DC6  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27059  009DC8  0A80               	xorlw	128
 27060  009DCA  0100               	movlb	0	; () banked
 27061  009DCC  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27062  009DCE  B0D8               	btfsc	status,0,c
 27063  009DD0  D006               	goto	l2564
 27064                           
 27065                           ; BSR set to: 0
 27066                           ;buck.c: 412: {
 27067                           ;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 27068  009DD2  05FE               	decf	_buck_dutycycle& (0+255),w,b
 27069  009DD4  ECC1  F089         	call	__buck_set_dutycycle
 27070                           
 27071                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 27072  009DD8  0101               	movlb	1	; () banked
 27073  009DDA  69EE               	setf	_buck_dutycycle_last_step& (0+255),b
 27074                           
 27075                           ;buck.c: 415: }
 27076  009DDC  0012               	return	
 27077  009DDE                     l2564:
 27078                           
 27079                           ;buck.c: 417: else if (os.input_current<200)
 27080                           
 27081                           ; BSR set to: 1
 27082  009DDE  0102               	movlb	2	; () banked
 27083  009DE0  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27084  009DE2  D006               	goto	u14380
 27085  009DE4  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 27086  009DE6  E10E               	bnz	l15779
 27087  009DE8  0EC8               	movlw	200
 27088  009DEA  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27089  009DEC  B0D8               	btfsc	status,0,c
 27090  009DEE  D00A               	goto	l2566
 27091  009DF0                     u14380:
 27092                           
 27093                           ; BSR set to: 2
 27094                           ;buck.c: 418: {
 27095                           ;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 27096  009DF0  0100               	movlb	0	; () banked
 27097  009DF2  51FE               	movf	_buck_dutycycle& (0+255),w,b
 27098  009DF4  0FFB               	addlw	251
 27099  009DF6  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 27100                           
 27101                           ; BSR set to: 0
 27102                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 27103  009DF8  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 27104  009DFC  0E00               	movlw	0
 27105  009DFE  EC3D  F088         	call	__buck_set_sync_async
 27106                           
 27107                           ;buck.c: 421: }
 27108  009E02  0012               	return	
 27109  009E04                     l2566:
 27110  009E04                     l15779:
 27111                           
 27112                           ;buck.c: 423: else
 27113                           ;buck.c: 424: {
 27114                           ;buck.c: 426: idx = os.timeSlot & 0b00110000;
 27115  009E04  0102               	movlb	2	; () banked
 27116  009E06  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27117  009E08  0B30               	andlw	48
 27118  009E0A  6E4C               	movwf	_idx,c
 27119                           
 27120                           ;buck.c: 427: idx >>= 4;
 27121  009E0C  3A4C               	swapf	_idx,f,c
 27122  009E0E  0E0F               	movlw	15
 27123  009E10  164C               	andwf	_idx,f,c
 27124                           
 27125                           ; BSR set to: 2
 27126                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 27127  009E12  504C               	movf	_idx,w,c
 27128  009E14  0D02               	mullw	2
 27129  009E16  0E0A               	movlw	low (_os+10)
 27130  009E18  24F3               	addwf	prodl,w,c
 27131  009E1A  6ED9               	movwf	fsr2l,c
 27132  009E1C  0E02               	movlw	high (_os+10)
 27133  009E1E  20F4               	addwfc	prodh,w,c
 27134  009E20  6EDA               	movwf	fsr2h,c
 27135  009E22  CFDE F29E          	movff	postinc2,_now
 27136  009E26  CFDD F29F          	movff	postdec2,_now+1
 27137  009E2A  0E00               	movlw	0
 27138  009E2C  BF9F               	btfsc	(_now+1)& (0+255),7,b
 27139  009E2E  0EFF               	movlw	-1
 27140  009E30  6FA0               	movwf	(_now+2)& (0+255),b
 27141  009E32  6FA1               	movwf	(_now+3)& (0+255),b
 27142                           
 27143                           ; BSR set to: 2
 27144                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 27145  009E34  C29E  F060         	movff	_now,___lmul@multiplier
 27146  009E38  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 27147  009E3C  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 27148  009E40  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 27149  009E44  504C               	movf	_idx,w,c
 27150  009E46  0D02               	mullw	2
 27151  009E48  0E14               	movlw	low (_os+20)
 27152  009E4A  24F3               	addwf	prodl,w,c
 27153  009E4C  6ED9               	movwf	fsr2l,c
 27154  009E4E  0E02               	movlw	high (_os+20)
 27155  009E50  20F4               	addwfc	prodh,w,c
 27156  009E52  6EDA               	movwf	fsr2h,c
 27157  009E54  CFDE F064          	movff	postinc2,___lmul@multiplicand
 27158  009E58  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 27159  009E5C  0100               	movlb	0	; () banked
 27160  009E5E  0E00               	movlw	0
 27161  009E60  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 27162  009E62  0EFF               	movlw	-1
 27163  009E64  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27164  009E66  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27165  009E68  ECB3  F08D         	call	___lmul	;wreg free
 27166  009E6C  C060  F29E         	movff	?___lmul,_now
 27167  009E70  C061  F29F         	movff	?___lmul+1,_now+1
 27168  009E74  C062  F2A0         	movff	?___lmul+2,_now+2
 27169  009E78  C063  F2A1         	movff	?___lmul+3,_now+3
 27170                           
 27171                           ;buck.c: 431: idx += 2;
 27172  009E7C  0E02               	movlw	2
 27173  009E7E  264C               	addwf	_idx,f,c
 27174                           
 27175                           ;buck.c: 432: idx &= 0b11;
 27176  009E80  0E03               	movlw	3
 27177  009E82  164C               	andwf	_idx,f,c
 27178                           
 27179                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 27180  009E84  504C               	movf	_idx,w,c
 27181  009E86  0D02               	mullw	2
 27182  009E88  0E0A               	movlw	low (_os+10)
 27183  009E8A  24F3               	addwf	prodl,w,c
 27184  009E8C  6ED9               	movwf	fsr2l,c
 27185  009E8E  0E02               	movlw	high (_os+10)
 27186  009E90  20F4               	addwfc	prodh,w,c
 27187  009E92  6EDA               	movwf	fsr2h,c
 27188  009E94  CFDE F2A2          	movff	postinc2,_last
 27189  009E98  CFDD F2A3          	movff	postdec2,_last+1
 27190  009E9C  0102               	movlb	2	; () banked
 27191  009E9E  0E00               	movlw	0
 27192  009EA0  BFA3               	btfsc	(_last+1)& (0+255),7,b
 27193  009EA2  0EFF               	movlw	-1
 27194  009EA4  6FA4               	movwf	(_last+2)& (0+255),b
 27195  009EA6  6FA5               	movwf	(_last+3)& (0+255),b
 27196                           
 27197                           ; BSR set to: 2
 27198                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 27199  009EA8  C2A2  F060         	movff	_last,___lmul@multiplier
 27200  009EAC  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 27201  009EB0  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 27202  009EB4  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 27203  009EB8  504C               	movf	_idx,w,c
 27204  009EBA  0D02               	mullw	2
 27205  009EBC  0E14               	movlw	low (_os+20)
 27206  009EBE  24F3               	addwf	prodl,w,c
 27207  009EC0  6ED9               	movwf	fsr2l,c
 27208  009EC2  0E02               	movlw	high (_os+20)
 27209  009EC4  20F4               	addwfc	prodh,w,c
 27210  009EC6  6EDA               	movwf	fsr2h,c
 27211  009EC8  CFDE F064          	movff	postinc2,___lmul@multiplicand
 27212  009ECC  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 27213  009ED0  0100               	movlb	0	; () banked
 27214  009ED2  0E00               	movlw	0
 27215  009ED4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 27216  009ED6  0EFF               	movlw	-1
 27217  009ED8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27218  009EDA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27219  009EDC  ECB3  F08D         	call	___lmul	;wreg free
 27220  009EE0  C060  F2A2         	movff	?___lmul,_last
 27221  009EE4  C061  F2A3         	movff	?___lmul+1,_last+1
 27222  009EE8  C062  F2A4         	movff	?___lmul+2,_last+2
 27223  009EEC  C063  F2A5         	movff	?___lmul+3,_last+3
 27224                           
 27225                           ;buck.c: 436: if(os.input_voltage>15185)
 27226  009EF0  0102               	movlb	2	; () banked
 27227  009EF2  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 27228  009EF4  D00B               	goto	l2568
 27229  009EF6  0E52               	movlw	82
 27230  009EF8  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27231  009EFA  0E3B               	movlw	59
 27232  009EFC  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 27233  009EFE  A0D8               	btfss	status,0,c
 27234  009F00  D005               	goto	l2568
 27235                           
 27236                           ; BSR set to: 2
 27237                           ;buck.c: 437: {
 27238                           ;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 27239  009F02  0100               	movlb	0	; () banked
 27240  009F04  29FE               	incf	_buck_dutycycle& (0+255),w,b
 27241  009F06  ECC1  F089         	call	__buck_set_dutycycle
 27242                           
 27243                           ;buck.c: 439: }
 27244  009F0A  0012               	return	
 27245  009F0C                     l2568:
 27246                           
 27247                           ;buck.c: 440: else
 27248                           ;buck.c: 441: {
 27249                           ;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 27250  009F0C  0100               	movlb	0	; () banked
 27251  009F0E  05FE               	decf	_buck_dutycycle& (0+255),w,b
 27252  009F10  ECC1  F089         	call	__buck_set_dutycycle
 27253                           
 27254                           ;buck.c: 443: }
 27255                           ;buck.c: 444: }
 27256                           ;buck.c: 445: }
 27257                           ;buck.c: 446: break;
 27258  009F14  0012               	return	
 27259  009F16                     
 27260                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 27261  009F16  0E00               	movlw	0
 27262  009F18  0100               	movlb	0	; () banked
 27263  009F1A  6FFF               	movwf	_buck_status& (0+255),b
 27264                           
 27265                           ;buck.c: 450: }
 27266  009F1C  0012               	return	
 27267  009F1E                     l2537:
 27268                           
 27269                           ; BSR set to: 0
 27270  009F1E  0100               	movlb	0	; () banked
 27271  009F20  51FF               	movf	_buck_status& (0+255),w,b
 27272                           
 27273                           ; Switch size 1, requested type "space"
 27274                           ; Number of cases is 4, Range of values is 0 to 3
 27275                           ; switch strategies available:
 27276                           ; Name         Instructions Cycles
 27277                           ; simple_byte           13     7 (average)
 27278                           ;	Chosen strategy is simple_byte
 27279  009F22  0A00               	xorlw	0	; case 0
 27280  009F24  B4D8               	btfsc	status,2,c
 27281  009F26  D5D0               	goto	l2538
 27282  009F28  0A01               	xorlw	1	; case 1
 27283  009F2A  B4D8               	btfsc	status,2,c
 27284  009F2C  D61B               	goto	l2544
 27285  009F2E  0A03               	xorlw	3	; case 2
 27286  009F30  B4D8               	btfsc	status,2,c
 27287  009F32  D650               	goto	l2548
 27288  009F34  0A01               	xorlw	1	; case 3
 27289  009F36  B4D8               	btfsc	status,2,c
 27290  009F38  D73C               	goto	l2562
 27291  009F3A  D7ED               	goto	l2570
 27292  009F3C                     __end_of__buck_operate_local:
 27293                           	opt stack 0
 27294                           tblptru	equ	0xFF8
 27295                           tblptrh	equ	0xFF7
 27296                           tblptrl	equ	0xFF6
 27297                           tablat	equ	0xFF5
 27298                           prodh	equ	0xFF4
 27299                           prodl	equ	0xFF3
 27300                           intcon	equ	0xFF2
 27301                           intcon2	equ	0xFF1
 27302                           intcon3	equ	0xFF0
 27303                           postinc0	equ	0xFEE
 27304                           wreg	equ	0xFE8
 27305                           indf1	equ	0xFE7
 27306                           postinc1	equ	0xFE6
 27307                           postdec1	equ	0xFE5
 27308                           plusw1	equ	0xFE3
 27309                           fsr1h	equ	0xFE2
 27310                           fsr1l	equ	0xFE1
 27311                           indf2	equ	0xFDF
 27312                           postinc2	equ	0xFDE
 27313                           postdec2	equ	0xFDD
 27314                           plusw2	equ	0xFDB
 27315                           fsr2h	equ	0xFDA
 27316                           fsr2l	equ	0xFD9
 27317                           status	equ	0xFD8
 27318                           
 27319 ;; *************** function __buck_stop *****************
 27320 ;; Defined at:
 27321 ;;		line 283 in file "buck.c"
 27322 ;; Parameters:    Size  Location     Type
 27323 ;;		None
 27324 ;; Auto vars:     Size  Location     Type
 27325 ;;		None
 27326 ;; Return value:  Size  Location     Type
 27327 ;;                  1    wreg      void 
 27328 ;; Registers used:
 27329 ;;		wreg, status,2, status,0
 27330 ;; Tracked objects:
 27331 ;;		On entry : 0/0
 27332 ;;		On exit  : 0/0
 27333 ;;		Unchanged: 0/0
 27334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27339 ;;Total ram usage:        0 bytes
 27340 ;; Hardware stack levels used:    1
 27341 ;; Hardware stack levels required when called:   10
 27342 ;; This function calls:
 27343 ;;		Nothing
 27344 ;; This function is called by:
 27345 ;;		__buck_operate_local
 27346 ;;		__buck_operate_remote
 27347 ;; This function uses a non-reentrant model
 27348 ;;
 27349                           
 27350                           	psect	text121
 27351  012724                     __ptext121:
 27352                           	opt stack 0
 27353  012724                     __buck_stop:
 27354                           	opt stack 18
 27355                           
 27356                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 27357                           
 27358                           ;incstack = 0
 27359  012724  96CA               	bcf	4042,3,c	;volatile
 27360  012726  98CA               	bcf	4042,4,c	;volatile
 27361  012728  9ACA               	bcf	4042,5,c	;volatile
 27362  01272A  9CCA               	bcf	4042,6,c	;volatile
 27363                           
 27364                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 27365  01272C  929E               	bcf	3998,1,c	;volatile
 27366  01272E  A29E               	btfss	3998,1,c	;volatile
 27367  012730  D7FE               	goto	l2530
 27368                           
 27369                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 27370  012732  90BA               	bcf	4026,0,c	;volatile
 27371  012734  92BA               	bcf	4026,1,c	;volatile
 27372  012736  94BA               	bcf	4026,2,c	;volatile
 27373  012738  96BA               	bcf	4026,3,c	;volatile
 27374                           
 27375                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 27376  01273A  94CA               	bcf	4042,2,c	;volatile
 27377                           
 27378                           ;buck.c: 295: LATBbits.LB1 = 0;
 27379  01273C  928A               	bcf	3978,1,c	;volatile
 27380                           
 27381                           ;buck.c: 297: if(buck_status<0x80)
 27382  01273E  0E80               	movlw	128
 27383  012740  0100               	movlb	0	; () banked
 27384  012742  61FF               	cpfslt	_buck_status& (0+255),b
 27385  012744  D003               	goto	l2532
 27386                           
 27387                           ; BSR set to: 0
 27388                           ;buck.c: 298: {
 27389                           ;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 27390  012746  0E00               	movlw	0
 27391  012748  6FFF               	movwf	_buck_status& (0+255),b
 27392                           
 27393                           ;buck.c: 300: }
 27394  01274A  0012               	return	
 27395  01274C                     l2532:
 27396                           
 27397                           ; BSR set to: 0
 27398                           ;buck.c: 301: else
 27399                           ;buck.c: 302: {
 27400                           ;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 27401                           
 27402                           ; BSR set to: 0
 27403  01274C  0E80               	movlw	128
 27404  01274E  6FFF               	movwf	_buck_status& (0+255),b
 27405  012750  0012               	return	
 27406  012752                     __end_of__buck_stop:
 27407                           	opt stack 0
 27408                           tblptru	equ	0xFF8
 27409                           tblptrh	equ	0xFF7
 27410                           tblptrl	equ	0xFF6
 27411                           tablat	equ	0xFF5
 27412                           prodh	equ	0xFF4
 27413                           prodl	equ	0xFF3
 27414                           intcon	equ	0xFF2
 27415                           intcon2	equ	0xFF1
 27416                           intcon3	equ	0xFF0
 27417                           postinc0	equ	0xFEE
 27418                           wreg	equ	0xFE8
 27419                           indf1	equ	0xFE7
 27420                           postinc1	equ	0xFE6
 27421                           postdec1	equ	0xFE5
 27422                           plusw1	equ	0xFE3
 27423                           fsr1h	equ	0xFE2
 27424                           fsr1l	equ	0xFE1
 27425                           indf2	equ	0xFDF
 27426                           postinc2	equ	0xFDE
 27427                           postdec2	equ	0xFDD
 27428                           plusw2	equ	0xFDB
 27429                           fsr2h	equ	0xFDA
 27430                           fsr2l	equ	0xFD9
 27431                           status	equ	0xFD8
 27432                           
 27433 ;; *************** function __buck_start *****************
 27434 ;; Defined at:
 27435 ;;		line 143 in file "buck.c"
 27436 ;; Parameters:    Size  Location     Type
 27437 ;;  mode            1    wreg     enum E8115
 27438 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;  mode            1   19[BANK0 ] enum E8115
 27441 ;;  cntr            1   21[BANK0 ] unsigned char 
 27442 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 27443 ;; Return value:  Size  Location     Type
 27444 ;;                  1    wreg      void 
 27445 ;; Registers used:
 27446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27447 ;; Tracked objects:
 27448 ;;		On entry : 0/0
 27449 ;;		On exit  : 0/0
 27450 ;;		Unchanged: 0/0
 27451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27452 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27453 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27455 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27456 ;;Total ram usage:        4 bytes
 27457 ;; Hardware stack levels used:    1
 27458 ;; Hardware stack levels required when called:   12
 27459 ;; This function calls:
 27460 ;;		__buck_initial_dutycycle
 27461 ;;		__buck_set_dutycycle
 27462 ;;		__buck_set_sync_async
 27463 ;; This function is called by:
 27464 ;;		__buck_operate_local
 27465 ;;		__buck_operate_remote
 27466 ;; This function uses a non-reentrant model
 27467 ;;
 27468                           
 27469                           	psect	text122
 27470  00FC2C                     __ptext122:
 27471                           	opt stack 0
 27472  00FC2C                     __buck_start:
 27473                           	opt stack 16
 27474                           
 27475                           ; BSR set to: 0
 27476                           ;incstack = 0
 27477                           ;__buck_start@mode stored from wreg
 27478  00FC2C  0100               	movlb	0	; () banked
 27479  00FC2E  6F73               	movwf	__buck_start@mode& (0+255),b
 27480                           
 27481                           ;buck.c: 145: uint8_t startup_dutycycle;
 27482                           ;buck.c: 146: uint8_t cntr;
 27483                           ;buck.c: 149: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0
      +                          ;
 27484  00FC30  0E00               	movlw	0
 27485  00FC32  0103               	movlb	3	; () banked
 27486  00FC34  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 27487  00FC36  0E00               	movlw	0
 27488  00FC38  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 27489                           
 27490                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 27491  00FC3A  0E00               	movlw	0
 27492  00FC3C  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 27493  00FC3E  0E00               	movlw	0
 27494  00FC40  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 27495                           
 27496                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 27497  00FC42  0E00               	movlw	0
 27498  00FC44  0100               	movlb	0	; () banked
 27499  00FC46  6F75               	movwf	__buck_start@cntr& (0+255),b
 27500  00FC48                     l13911:
 27501                           
 27502                           ; BSR set to: 0
 27503  00FC48  0E03               	movlw	3
 27504  00FC4A  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 27505  00FC4C  D001               	goto	l2499
 27506  00FC4E  D01E               	goto	u11680
 27507  00FC50                     l2499:
 27508                           
 27509                           ; BSR set to: 0
 27510                           ;buck.c: 154: {
 27511                           ;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration -= 
      +                          os.input_current_adc[cntr];
 27512                           
 27513                           ; BSR set to: 0
 27514  00FC50  5175               	movf	__buck_start@cntr& (0+255),w,b
 27515  00FC52  0D02               	mullw	2
 27516  00FC54  0E14               	movlw	low (_os+20)
 27517  00FC56  24F3               	addwf	prodl,w,c
 27518  00FC58  6ED9               	movwf	fsr2l,c
 27519  00FC5A  0E02               	movlw	high (_os+20)
 27520  00FC5C  20F4               	addwfc	prodh,w,c
 27521  00FC5E  6EDA               	movwf	fsr2h,c
 27522  00FC60  50DE               	movf	postinc2,w,c
 27523  00FC62  0103               	movlb	3	; () banked
 27524  00FC64  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 27525  00FC66  50DD               	movf	postdec2,w,c
 27526  00FC68  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 27527                           
 27528                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 27529  00FC6A  0100               	movlb	0	; () banked
 27530  00FC6C  5175               	movf	__buck_start@cntr& (0+255),w,b
 27531  00FC6E  0D02               	mullw	2
 27532  00FC70  0E29               	movlw	low (_os+41)
 27533  00FC72  24F3               	addwf	prodl,w,c
 27534  00FC74  6ED9               	movwf	fsr2l,c
 27535  00FC76  0E02               	movlw	high (_os+41)
 27536  00FC78  20F4               	addwfc	prodh,w,c
 27537  00FC7A  6EDA               	movwf	fsr2h,c
 27538  00FC7C  50DE               	movf	postinc2,w,c
 27539  00FC7E  0103               	movlb	3	; () banked
 27540  00FC80  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 27541  00FC82  50DD               	movf	postdec2,w,c
 27542  00FC84  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 27543                           
 27544                           ; BSR set to: 3
 27545  00FC86  0100               	movlb	0	; () banked
 27546  00FC88  2B75               	incf	__buck_start@cntr& (0+255),f,b
 27547  00FC8A  D7DE               	goto	l13911
 27548  00FC8C                     u11680:
 27549                           
 27550                           ; BSR set to: 0
 27551                           ;buck.c: 159: }
 27552                           ;buck.c: 163: PR2 = 63;
 27553                           
 27554                           ; BSR set to: 0
 27555  00FC8C  0E3F               	movlw	63
 27556  00FC8E  6ECB               	movwf	4043,c	;volatile
 27557                           
 27558                           ;buck.c: 165: TMR2 = 0x00;
 27559  00FC90  0E00               	movlw	0
 27560  00FC92  6ECC               	movwf	4044,c	;volatile
 27561                           
 27562                           ; BSR set to: 0
 27563                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 27564  00FC94  86CA               	bsf	4042,3,c	;volatile
 27565  00FC96  88CA               	bsf	4042,4,c	;volatile
 27566  00FC98  8ACA               	bsf	4042,5,c	;volatile
 27567  00FC9A  8CCA               	bsf	4042,6,c	;volatile
 27568                           
 27569                           ; BSR set to: 0
 27570                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 27571  00FC9C  929E               	bcf	3998,1,c	;volatile
 27572                           
 27573                           ; BSR set to: 0
 27574                           ;buck.c: 172: if(buck_status<0x80)
 27575  00FC9E  0E80               	movlw	128
 27576  00FCA0  61FF               	cpfslt	_buck_status& (0+255),b
 27577  00FCA2  D002               	goto	l2501
 27578                           
 27579                           ; BSR set to: 0
 27580                           ;buck.c: 173: {
 27581                           ;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27582  00FCA4  0E03               	movlw	3
 27583  00FCA6  D001               	goto	L15
 27584  00FCA8                     l2501:
 27585                           
 27586                           ; BSR set to: 0
 27587                           ;buck.c: 176: else
 27588                           ;buck.c: 177: {
 27589                           ;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 27590                           
 27591                           ; BSR set to: 0
 27592  00FCA8  0E83               	movlw	131
 27593  00FCAA                     L15:
 27594  00FCAA  6FFF               	movwf	_buck_status& (0+255),b
 27595                           
 27596                           ; BSR set to: 0
 27597                           ;buck.c: 179: }
 27598                           ;buck.c: 182: CCP1CON = 0x00;
 27599  00FCAC  0E00               	movlw	0
 27600  00FCAE  6EBA               	movwf	4026,c	;volatile
 27601                           
 27602                           ; BSR set to: 0
 27603                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 27604  00FCB0  EC9C  F07F         	call	__buck_initial_dutycycle	;wreg free
 27605  00FCB4  0100               	movlb	0	; () banked
 27606  00FCB6  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 27607                           
 27608                           ; BSR set to: 0
 27609                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 27610  00FCB8  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27611  00FCBA  ECC1  F089         	call	__buck_set_dutycycle
 27612                           
 27613                           ;buck.c: 188: INTCONbits.GIE = 0;
 27614  00FCBE  9EF2               	bcf	intcon,7,c	;volatile
 27615                           
 27616                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 27617  00FCC0  84CA               	bsf	4042,2,c	;volatile
 27618                           
 27619                           ;buck.c: 192: CCP1CON |= 0b00001100;
 27620  00FCC2  0E0C               	movlw	12
 27621  00FCC4  12BA               	iorwf	4026,f,c	;volatile
 27622                           
 27623                           ;buck.c: 194: CCP1CON |= 0b10000000;
 27624  00FCC6  8EBA               	bsf	4026,7,c	;volatile
 27625                           
 27626                           ;buck.c: 196: INTCONbits.GIE = 1;
 27627  00FCC8  8EF2               	bsf	intcon,7,c	;volatile
 27628  00FCCA  A29E               	btfss	3998,1,c	;volatile
 27629  00FCCC  D7FE               	goto	l2504
 27630                           
 27631                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 27632  00FCCE  0100               	movlb	0	; () banked
 27633  00FCD0  0573               	decf	__buck_start@mode& (0+255),w,b
 27634  00FCD2  A4D8               	btfss	status,2,c
 27635  00FCD4  D008               	goto	l2506
 27636                           
 27637                           ; BSR set to: 0
 27638                           ;buck.c: 203: {
 27639                           ;buck.c: 205: if(dutycycle!=startup_dutycycle)
 27640  00FCD6  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27641  00FCD8  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 27642  00FCDA  B4D8               	btfsc	status,2,c
 27643  00FCDC  0012               	return	
 27644                           
 27645                           ; BSR set to: 0
 27646                           ;buck.c: 206: {
 27647                           ;buck.c: 207: _buck_set_dutycycle(dutycycle);
 27648  00FCDE  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 27649  00FCE0  ECC1  F089         	call	__buck_set_dutycycle
 27650                           
 27651                           ;buck.c: 208: }
 27652                           ;buck.c: 209: }
 27653  00FCE4  0012               	return	
 27654  00FCE6                     l2506:
 27655                           
 27656                           ;buck.c: 210: else
 27657                           ;buck.c: 211: {
 27658                           ;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, dutycycle);
 27659  00FCE6  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 27660  00FCEA  0E00               	movlw	0
 27661  00FCEC  EC3D  F088         	call	__buck_set_sync_async
 27662  00FCF0  0012               	return	
 27663  00FCF2                     __end_of__buck_start:
 27664                           	opt stack 0
 27665                           tblptru	equ	0xFF8
 27666                           tblptrh	equ	0xFF7
 27667                           tblptrl	equ	0xFF6
 27668                           tablat	equ	0xFF5
 27669                           prodh	equ	0xFF4
 27670                           prodl	equ	0xFF3
 27671                           intcon	equ	0xFF2
 27672                           intcon2	equ	0xFF1
 27673                           intcon3	equ	0xFF0
 27674                           postinc0	equ	0xFEE
 27675                           wreg	equ	0xFE8
 27676                           indf1	equ	0xFE7
 27677                           postinc1	equ	0xFE6
 27678                           postdec1	equ	0xFE5
 27679                           plusw1	equ	0xFE3
 27680                           fsr1h	equ	0xFE2
 27681                           fsr1l	equ	0xFE1
 27682                           indf2	equ	0xFDF
 27683                           postinc2	equ	0xFDE
 27684                           postdec2	equ	0xFDD
 27685                           plusw2	equ	0xFDB
 27686                           fsr2h	equ	0xFDA
 27687                           fsr2l	equ	0xFD9
 27688                           status	equ	0xFD8
 27689                           
 27690 ;; *************** function __buck_set_sync_async *****************
 27691 ;; Defined at:
 27692 ;;		line 217 in file "buck.c"
 27693 ;; Parameters:    Size  Location     Type
 27694 ;;  mode            1    wreg     enum E8115
 27695 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 27696 ;; Auto vars:     Size  Location     Type
 27697 ;;  mode            1    3[BANK0 ] enum E8115
 27698 ;; Return value:  Size  Location     Type
 27699 ;;                  1    wreg      void 
 27700 ;; Registers used:
 27701 ;;		wreg, status,2, status,0, cstack
 27702 ;; Tracked objects:
 27703 ;;		On entry : 0/0
 27704 ;;		On exit  : 0/0
 27705 ;;		Unchanged: 0/0
 27706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27707 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27711 ;;Total ram usage:        2 bytes
 27712 ;; Hardware stack levels used:    1
 27713 ;; Hardware stack levels required when called:   11
 27714 ;; This function calls:
 27715 ;;		__buck_set_dutycycle
 27716 ;; This function is called by:
 27717 ;;		__buck_start
 27718 ;;		__buck_operate_local
 27719 ;;		__buck_operate_remote
 27720 ;; This function uses a non-reentrant model
 27721 ;;
 27722                           
 27723                           	psect	text123
 27724  01107A                     __ptext123:
 27725                           	opt stack 0
 27726  01107A                     __buck_set_sync_async:
 27727                           	opt stack 16
 27728                           
 27729                           ;incstack = 0
 27730                           ;__buck_set_sync_async@mode stored from wreg
 27731  01107A  0100               	movlb	0	; () banked
 27732  01107C  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 27733                           
 27734                           ;buck.c: 219: switch(mode)
 27735  01107E  D02F               	goto	l2512
 27736  011080                     l2513:
 27737                           
 27738                           ; BSR set to: 0
 27739                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 27740  011080  96CA               	bcf	4042,3,c	;volatile
 27741  011082  98CA               	bcf	4042,4,c	;volatile
 27742  011084  9ACA               	bcf	4042,5,c	;volatile
 27743  011086  9CCA               	bcf	4042,6,c	;volatile
 27744                           
 27745                           ;buck.c: 228: INTCONbits.GIE = 0;
 27746  011088  9EF2               	bcf	intcon,7,c	;volatile
 27747                           
 27748                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 27749  01108A  929E               	bcf	3998,1,c	;volatile
 27750  01108C                     
 27751                           ; BSR set to: 0
 27752  01108C  A29E               	btfss	3998,1,c	;volatile
 27753  01108E  D7FE               	goto	l2515
 27754                           
 27755                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 27756  011090  9EBA               	bcf	4026,7,c	;volatile
 27757                           
 27758                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 27759  011092  9CBA               	bcf	4026,6,c	;volatile
 27760                           
 27761                           ;buck.c: 237: if(buck_status<0x80)
 27762  011094  0E80               	movlw	128
 27763  011096  0100               	movlb	0	; () banked
 27764  011098  61FF               	cpfslt	_buck_status& (0+255),b
 27765  01109A  D002               	goto	l2517
 27766                           
 27767                           ; BSR set to: 0
 27768                           ;buck.c: 238: {
 27769                           ;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 27770  01109C  0E02               	movlw	2
 27771  01109E  D001               	goto	L16
 27772  0110A0                     l2517:
 27773                           
 27774                           ; BSR set to: 0
 27775                           ;buck.c: 241: else
 27776                           ;buck.c: 242: {
 27777                           ;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRONOUS;
 27778                           
 27779                           ; BSR set to: 0
 27780  0110A0  0E82               	movlw	130
 27781  0110A2                     L16:
 27782  0110A2  6FFF               	movwf	_buck_status& (0+255),b
 27783                           
 27784                           ; BSR set to: 0
 27785                           ;buck.c: 244: }
 27786                           ;buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 27787                           
 27788                           ; BSR set to: 0
 27789  0110A4  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27790  0110A6  ECC1  F089         	call	__buck_set_dutycycle
 27791                           
 27792                           ;buck.c: 248: INTCONbits.GIE = 1;
 27793  0110AA  8EF2               	bsf	intcon,7,c	;volatile
 27794                           
 27795                           ;buck.c: 249: break;
 27796  0110AC  0012               	return	
 27797  0110AE                     
 27798                           ;buck.c: 255: if(buck_status<0x80)
 27799  0110AE  0E80               	movlw	128
 27800  0110B0  0100               	movlb	0	; () banked
 27801  0110B2  61FF               	cpfslt	_buck_status& (0+255),b
 27802  0110B4  D002               	goto	l2521
 27803                           
 27804                           ; BSR set to: 0
 27805                           ;buck.c: 256: {
 27806                           ;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27807  0110B6  0E03               	movlw	3
 27808  0110B8  D001               	goto	L17
 27809  0110BA                     l2521:
 27810                           
 27811                           ; BSR set to: 0
 27812                           ;buck.c: 259: else
 27813                           ;buck.c: 260: {
 27814                           ;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 27815                           
 27816                           ; BSR set to: 0
 27817  0110BA  0E83               	movlw	131
 27818  0110BC                     L17:
 27819  0110BC  6FFF               	movwf	_buck_status& (0+255),b
 27820                           
 27821                           ; BSR set to: 0
 27822                           ;buck.c: 262: }
 27823                           ;buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 27824                           
 27825                           ; BSR set to: 0
 27826  0110BE  96CA               	bcf	4042,3,c	;volatile
 27827  0110C0  98CA               	bcf	4042,4,c	;volatile
 27828  0110C2  9ACA               	bcf	4042,5,c	;volatile
 27829  0110C4  9CCA               	bcf	4042,6,c	;volatile
 27830                           
 27831                           ; BSR set to: 0
 27832                           ;buck.c: 267: INTCONbits.GIE = 0;
 27833  0110C6  9EF2               	bcf	intcon,7,c	;volatile
 27834                           
 27835                           ; BSR set to: 0
 27836                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 27837  0110C8  929E               	bcf	3998,1,c	;volatile
 27838  0110CA                     
 27839                           ; BSR set to: 0
 27840  0110CA  A29E               	btfss	3998,1,c	;volatile
 27841  0110CC  D7FE               	goto	l2524
 27842                           
 27843                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 27844  0110CE  0100               	movlb	0	; () banked
 27845  0110D0  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27846  0110D2  ECC1  F089         	call	__buck_set_dutycycle
 27847                           
 27848                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 27849  0110D6  8EBA               	bsf	4026,7,c	;volatile
 27850                           
 27851                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 27852  0110D8  9CBA               	bcf	4026,6,c	;volatile
 27853                           
 27854                           ;buck.c: 278: INTCONbits.GIE = 1;
 27855  0110DA  8EF2               	bsf	intcon,7,c	;volatile
 27856                           
 27857                           ;buck.c: 280: }
 27858                           
 27859                           ;buck.c: 279: break;
 27860  0110DC  0012               	return	
 27861  0110DE                     l2512:
 27862  0110DE  0100               	movlb	0	; () banked
 27863  0110E0  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 27864                           
 27865                           ; Switch size 1, requested type "space"
 27866                           ; Number of cases is 2, Range of values is 0 to 1
 27867                           ; switch strategies available:
 27868                           ; Name         Instructions Cycles
 27869                           ; simple_byte            7     4 (average)
 27870                           ;	Chosen strategy is simple_byte
 27871  0110E2  0A00               	xorlw	0	; case 0
 27872  0110E4  B4D8               	btfsc	status,2,c
 27873  0110E6  D7CC               	goto	l2513
 27874  0110E8  0A01               	xorlw	1	; case 1
 27875  0110EA  A4D8               	btfss	status,2,c
 27876  0110EC  0012               	return	
 27877  0110EE  D7DF               	goto	l2520
 27878  0110F0                     __end_of__buck_set_sync_async:
 27879                           	opt stack 0
 27880                           tblptru	equ	0xFF8
 27881                           tblptrh	equ	0xFF7
 27882                           tblptrl	equ	0xFF6
 27883                           tablat	equ	0xFF5
 27884                           prodh	equ	0xFF4
 27885                           prodl	equ	0xFF3
 27886                           intcon	equ	0xFF2
 27887                           intcon2	equ	0xFF1
 27888                           intcon3	equ	0xFF0
 27889                           postinc0	equ	0xFEE
 27890                           wreg	equ	0xFE8
 27891                           indf1	equ	0xFE7
 27892                           postinc1	equ	0xFE6
 27893                           postdec1	equ	0xFE5
 27894                           plusw1	equ	0xFE3
 27895                           fsr1h	equ	0xFE2
 27896                           fsr1l	equ	0xFE1
 27897                           indf2	equ	0xFDF
 27898                           postinc2	equ	0xFDE
 27899                           postdec2	equ	0xFDD
 27900                           plusw2	equ	0xFDB
 27901                           fsr2h	equ	0xFDA
 27902                           fsr2l	equ	0xFD9
 27903                           status	equ	0xFD8
 27904                           
 27905 ;; *************** function __buck_set_dutycycle *****************
 27906 ;; Defined at:
 27907 ;;		line 98 in file "buck.c"
 27908 ;; Parameters:    Size  Location     Type
 27909 ;;  dutyCycle       1    wreg     unsigned char 
 27910 ;; Auto vars:     Size  Location     Type
 27911 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 27912 ;; Return value:  Size  Location     Type
 27913 ;;                  1    wreg      void 
 27914 ;; Registers used:
 27915 ;;		wreg, status,2, status,0
 27916 ;; Tracked objects:
 27917 ;;		On entry : 0/0
 27918 ;;		On exit  : 0/0
 27919 ;;		Unchanged: 0/0
 27920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27923 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27924 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27925 ;;Total ram usage:        2 bytes
 27926 ;; Hardware stack levels used:    1
 27927 ;; Hardware stack levels required when called:   10
 27928 ;; This function calls:
 27929 ;;		Nothing
 27930 ;; This function is called by:
 27931 ;;		__buck_start
 27932 ;;		__buck_set_sync_async
 27933 ;;		__buck_operate_local
 27934 ;;		__buck_operate_remote
 27935 ;; This function uses a non-reentrant model
 27936 ;;
 27937                           
 27938                           	psect	text124
 27939  011382                     __ptext124:
 27940                           	opt stack 0
 27941  011382                     __buck_set_dutycycle:
 27942                           	opt stack 16
 27943                           
 27944                           ;incstack = 0
 27945                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 27946  011382  0100               	movlb	0	; () banked
 27947  011384  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27948                           
 27949                           ;buck.c: 101: if(dutyCycle>242)
 27950  011386  0EF2               	movlw	242
 27951  011388  0100               	movlb	0	; () banked
 27952  01138A  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27953  01138C  D002               	goto	l2480
 27954                           
 27955                           ; BSR set to: 0
 27956                           ;buck.c: 102: dutyCycle = 242;
 27957  01138E  0EF2               	movlw	242
 27958  011390  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27959  011392                     l2480:
 27960                           
 27961                           ; BSR set to: 0
 27962                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 27963                           
 27964                           ; BSR set to: 0
 27965  011392  0E03               	movlw	3
 27966  011394  19FF               	xorwf	_buck_status& (0+255),w,b
 27967  011396  B4D8               	btfsc	status,2,c
 27968  011398  D004               	goto	u10380
 27969                           
 27970                           ; BSR set to: 0
 27971  01139A  0E83               	movlw	131
 27972  01139C  19FF               	xorwf	_buck_status& (0+255),w,b
 27973  01139E  A4D8               	btfss	status,2,c
 27974  0113A0  D005               	goto	l2484
 27975  0113A2                     u10380:
 27976                           
 27977                           ; BSR set to: 0
 27978                           ;buck.c: 104: {
 27979                           ;buck.c: 105: if(dutyCycle<150)
 27980                           
 27981                           ; BSR set to: 0
 27982  0113A2  0E96               	movlw	150
 27983  0113A4  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27984  0113A6  D002               	goto	l2484
 27985                           
 27986                           ; BSR set to: 0
 27987                           ;buck.c: 106: dutyCycle = 150;
 27988  0113A8  0E96               	movlw	150
 27989  0113AA  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27990  0113AC                     l2484:
 27991                           
 27992                           ; BSR set to: 0
 27993                           ;buck.c: 107: }
 27994                           ;buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BUCK_STATUS_REMOT
      +                          E_ASYNCHRONOUS)
 27995                           
 27996                           ; BSR set to: 0
 27997                           
 27998                           ; BSR set to: 0
 27999  0113AC  0E02               	movlw	2
 28000  0113AE  19FF               	xorwf	_buck_status& (0+255),w,b
 28001  0113B0  B4D8               	btfsc	status,2,c
 28002  0113B2  D004               	goto	u10410
 28003                           
 28004                           ; BSR set to: 0
 28005  0113B4  0E82               	movlw	130
 28006  0113B6  19FF               	xorwf	_buck_status& (0+255),w,b
 28007  0113B8  A4D8               	btfss	status,2,c
 28008  0113BA  D005               	goto	l2488
 28009  0113BC                     u10410:
 28010                           
 28011                           ; BSR set to: 0
 28012                           ;buck.c: 109: {
 28013                           ;buck.c: 110: if(dutyCycle<40)
 28014                           
 28015                           ; BSR set to: 0
 28016  0113BC  0E28               	movlw	40
 28017  0113BE  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 28018  0113C0  D002               	goto	l2488
 28019                           
 28020                           ; BSR set to: 0
 28021                           ;buck.c: 111: dutyCycle = 40;
 28022  0113C2  0E28               	movlw	40
 28023  0113C4  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 28024  0113C6                     l2488:
 28025                           
 28026                           ; BSR set to: 0
 28027                           ;buck.c: 112: }
 28028                           ;buck.c: 114: buck_dutycycle = dutyCycle;
 28029                           
 28030                           ; BSR set to: 0
 28031                           
 28032                           ; BSR set to: 0
 28033  0113C6  C061  F0FE         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;buck.c: 116: INTCONbits.GIE = 0;
 28037  0113CA  9EF2               	bcf	intcon,7,c	;volatile
 28038                           
 28039                           ; BSR set to: 0
 28040                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 28041  0113CC  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 28042  0113D0  0E03               	movlw	3
 28043  0113D2  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 28044  0113D4  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 28045  0113D6  50BA               	movf	4026,w,c	;volatile
 28046  0113D8  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 28047  0113DA  0BCF               	andlw	-49
 28048  0113DC  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 28049  0113DE  6EBA               	movwf	4026,c	;volatile
 28050                           
 28051                           ; BSR set to: 0
 28052                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 28053  0113E0  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 28054  0113E2  42E8               	rrncf	wreg,f,c
 28055  0113E4  0B3F               	andlw	63
 28056  0113E6  6EBB               	movwf	4027,c	;volatile
 28057                           
 28058                           ; BSR set to: 0
 28059                           ;buck.c: 122: INTCONbits.GIE = 1;
 28060  0113E8  8EF2               	bsf	intcon,7,c	;volatile
 28061                           
 28062                           ; BSR set to: 0
 28063  0113EA  0012               	return		;funcret
 28064  0113EC                     __end_of__buck_set_dutycycle:
 28065                           	opt stack 0
 28066                           tblptru	equ	0xFF8
 28067                           tblptrh	equ	0xFF7
 28068                           tblptrl	equ	0xFF6
 28069                           tablat	equ	0xFF5
 28070                           prodh	equ	0xFF4
 28071                           prodl	equ	0xFF3
 28072                           intcon	equ	0xFF2
 28073                           intcon2	equ	0xFF1
 28074                           intcon3	equ	0xFF0
 28075                           postinc0	equ	0xFEE
 28076                           wreg	equ	0xFE8
 28077                           indf1	equ	0xFE7
 28078                           postinc1	equ	0xFE6
 28079                           postdec1	equ	0xFE5
 28080                           plusw1	equ	0xFE3
 28081                           fsr1h	equ	0xFE2
 28082                           fsr1l	equ	0xFE1
 28083                           indf2	equ	0xFDF
 28084                           postinc2	equ	0xFDE
 28085                           postdec2	equ	0xFDD
 28086                           plusw2	equ	0xFDB
 28087                           fsr2h	equ	0xFDA
 28088                           fsr2l	equ	0xFD9
 28089                           status	equ	0xFD8
 28090                           
 28091 ;; *************** function __buck_initial_dutycycle *****************
 28092 ;; Defined at:
 28093 ;;		line 81 in file "buck.c"
 28094 ;; Parameters:    Size  Location     Type
 28095 ;;		None
 28096 ;; Auto vars:     Size  Location     Type
 28097 ;;  dc              4   14[BANK0 ] unsigned long 
 28098 ;; Return value:  Size  Location     Type
 28099 ;;                  1    wreg      unsigned char 
 28100 ;; Registers used:
 28101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28102 ;; Tracked objects:
 28103 ;;		On entry : 0/0
 28104 ;;		On exit  : 0/0
 28105 ;;		Unchanged: 0/0
 28106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28109 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28110 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28111 ;;Total ram usage:        5 bytes
 28112 ;; Hardware stack levels used:    1
 28113 ;; Hardware stack levels required when called:   11
 28114 ;; This function calls:
 28115 ;;		___lldiv
 28116 ;; This function is called by:
 28117 ;;		__buck_start
 28118 ;;		__buck_operate_local
 28119 ;;		__buck_operate_remote
 28120 ;; This function uses a non-reentrant model
 28121 ;;
 28122                           
 28123                           	psect	text125
 28124  00FF38                     __ptext125:
 28125                           	opt stack 0
 28126  00FF38                     __buck_initial_dutycycle:
 28127                           	opt stack 16
 28128                           
 28129                           ;buck.c: 83: uint32_t dc;
 28130                           ;buck.c: 85: if(os.input_voltage<os.output_voltage)
 28131                           
 28132                           ; BSR set to: 0
 28133                           ;incstack = 0
 28134  00FF38  0102               	movlb	2	; () banked
 28135  00FF3A  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 28136  00FF3C  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 28137  00FF3E  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 28138  00FF40  0A80               	xorlw	128
 28139  00FF42  0100               	movlb	0	; () banked
 28140  00FF44  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 28141  00FF46  0102               	movlb	2	; () banked
 28142  00FF48  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 28143  00FF4A  0A80               	xorlw	128
 28144  00FF4C  0100               	movlb	0	; () banked
 28145  00FF4E  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 28146  00FF50  B0D8               	btfsc	status,0,c
 28147  00FF52  D002               	goto	l2474
 28148                           
 28149                           ; BSR set to: 0
 28150                           ;buck.c: 86: return 242;
 28151  00FF54  0EF2               	movlw	242
 28152                           
 28153                           ; BSR set to: 0
 28154  00FF56  0012               	return	
 28155  00FF58                     l2474:
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 28159                           
 28160                           ; BSR set to: 0
 28161  00FF58  EE22  F027         	lfsr	2,_os+39	;volatile
 28162  00FF5C  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 28163  00FF60  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 28164  00FF64  0E00               	movlw	0
 28165  00FF66  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 28166  00FF68  0EFF               	movlw	-1
 28167  00FF6A  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 28168  00FF6C  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 28169                           
 28170                           ; BSR set to: 0
 28171                           ;buck.c: 88: dc <<= 8;
 28172  00FF6E  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 28173  00FF72  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 28174  00FF76  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 28175  00FF7A  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 28176                           
 28177                           ; BSR set to: 0
 28178                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 28179  00FF7C  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 28180  00FF80  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 28181  00FF84  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 28182  00FF88  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 28183  00FF8C  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 28184  00FF90  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 28185  00FF94  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 28186  00FF96  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 28187  00FF98  EC07  F085         	call	___lldiv	;wreg free
 28188  00FF9C  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 28189  00FFA0  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 28190  00FFA4  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 28191  00FFA8  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 28192                           
 28193                           ;buck.c: 91: if(dc>242)
 28194  00FFAC  0100               	movlb	0	; () banked
 28195  00FFAE  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 28196  00FFB0  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 28197  00FFB2  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 28198  00FFB4  E104               	bnz	u10810
 28199  00FFB6  0EF3               	movlw	243
 28200  00FFB8  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 28201  00FFBA  A0D8               	btfss	status,0,c
 28202  00FFBC  D008               	goto	l2476
 28203  00FFBE                     u10810:
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;buck.c: 92: dc = 242;
 28207  00FFBE  0EF2               	movlw	242
 28208  00FFC0  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 28209  00FFC2  0E00               	movlw	0
 28210  00FFC4  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 28211  00FFC6  0E00               	movlw	0
 28212  00FFC8  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 28213  00FFCA  0E00               	movlw	0
 28214  00FFCC  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 28215  00FFCE                     l2476:
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;buck.c: 93: if(dc<150)
 28219                           
 28220                           ; BSR set to: 0
 28221  00FFCE  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 28222  00FFD0  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 28223  00FFD2  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 28224  00FFD4  E10C               	bnz	l2477
 28225  00FFD6  0E96               	movlw	150
 28226  00FFD8  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 28227  00FFDA  B0D8               	btfsc	status,0,c
 28228  00FFDC  D008               	goto	l2477
 28229                           
 28230                           ; BSR set to: 0
 28231                           ;buck.c: 94: dc = 150;
 28232  00FFDE  0E96               	movlw	150
 28233  00FFE0  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 28234  00FFE2  0E00               	movlw	0
 28235  00FFE4  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 28236  00FFE6  0E00               	movlw	0
 28237  00FFE8  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 28238  00FFEA  0E00               	movlw	0
 28239  00FFEC  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 28240  00FFEE                     l2477:
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;buck.c: 95: return (uint8_t) dc;
 28244  00FFEE  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 28245  00FFF0  0012               	return	
 28246  00FFF2                     __end_of__buck_initial_dutycycle:
 28247                           	opt stack 0
 28248                           tblptru	equ	0xFF8
 28249                           tblptrh	equ	0xFF7
 28250                           tblptrl	equ	0xFF6
 28251                           tablat	equ	0xFF5
 28252                           prodh	equ	0xFF4
 28253                           prodl	equ	0xFF3
 28254                           intcon	equ	0xFF2
 28255                           intcon2	equ	0xFF1
 28256                           intcon3	equ	0xFF0
 28257                           postinc0	equ	0xFEE
 28258                           wreg	equ	0xFE8
 28259                           indf1	equ	0xFE7
 28260                           postinc1	equ	0xFE6
 28261                           postdec1	equ	0xFE5
 28262                           plusw1	equ	0xFE3
 28263                           fsr1h	equ	0xFE2
 28264                           fsr1l	equ	0xFE1
 28265                           indf2	equ	0xFDF
 28266                           postinc2	equ	0xFDE
 28267                           postdec2	equ	0xFDD
 28268                           plusw2	equ	0xFDB
 28269                           fsr2h	equ	0xFDA
 28270                           fsr2l	equ	0xFD9
 28271                           status	equ	0xFD8
 28272                           
 28273 ;; *************** function ___lldiv *****************
 28274 ;; Defined at:
 28275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 28276 ;; Parameters:    Size  Location     Type
 28277 ;;  dividend        4    0[BANK0 ] unsigned long 
 28278 ;;  divisor         4    4[BANK0 ] unsigned long 
 28279 ;; Auto vars:     Size  Location     Type
 28280 ;;  quotient        4    8[BANK0 ] unsigned long 
 28281 ;;  counter         1   12[BANK0 ] unsigned char 
 28282 ;; Return value:  Size  Location     Type
 28283 ;;                  4    0[BANK0 ] unsigned long 
 28284 ;; Registers used:
 28285 ;;		wreg, status,2, status,0
 28286 ;; Tracked objects:
 28287 ;;		On entry : 0/0
 28288 ;;		On exit  : 0/0
 28289 ;;		Unchanged: 0/0
 28290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28291 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28292 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28294 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28295 ;;Total ram usage:       13 bytes
 28296 ;; Hardware stack levels used:    1
 28297 ;; Hardware stack levels required when called:   10
 28298 ;; This function calls:
 28299 ;;		Nothing
 28300 ;; This function is called by:
 28301 ;;		__buck_initial_dutycycle
 28302 ;;		__get_output_power
 28303 ;;		_log_generate_entry
 28304 ;; This function uses a non-reentrant model
 28305 ;;
 28306                           
 28307                           	psect	text126
 28308  010A0E                     __ptext126:
 28309                           	opt stack 0
 28310  010A0E                     ___lldiv:
 28311                           	opt stack 18
 28312                           
 28313                           ; BSR set to: 0
 28314                           ;incstack = 0
 28315  010A0E  0E00               	movlw	0
 28316  010A10  0100               	movlb	0	; () banked
 28317  010A12  6F68               	movwf	___lldiv@quotient& (0+255),b
 28318  010A14  0E00               	movlw	0
 28319  010A16  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 28320  010A18  0E00               	movlw	0
 28321  010A1A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 28322  010A1C  0E00               	movlw	0
 28323  010A1E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 28324                           
 28325                           ; BSR set to: 0
 28326  010A20  5164               	movf	___lldiv@divisor& (0+255),w,b
 28327  010A22  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 28328  010A24  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 28329  010A26  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 28330  010A28  B4D8               	btfsc	status,2,c
 28331  010A2A  D02A               	goto	l3686
 28332                           
 28333                           ; BSR set to: 0
 28334  010A2C  0E01               	movlw	1
 28335  010A2E  6F6C               	movwf	___lldiv@counter& (0+255),b
 28336  010A30  D006               	goto	l3681
 28337  010A32                     
 28338                           ; BSR set to: 0
 28339                           
 28340                           ; BSR set to: 0
 28341  010A32  90D8               	bcf	status,0,c
 28342  010A34  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 28343  010A36  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 28344  010A38  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 28345  010A3A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 28346  010A3C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 28347  010A3E                     l3681:
 28348                           
 28349                           ; BSR set to: 0
 28350                           
 28351                           ; BSR set to: 0
 28352  010A3E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 28353  010A40  D7F8               	goto	l3682
 28354  010A42                     u10510:
 28355                           
 28356                           ; BSR set to: 0
 28357                           
 28358                           ; BSR set to: 0
 28359                           
 28360                           ; BSR set to: 0
 28361  010A42  90D8               	bcf	status,0,c
 28362  010A44  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 28363  010A46  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 28364  010A48  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 28365  010A4A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 28366                           
 28367                           ; BSR set to: 0
 28368  010A4C  5164               	movf	___lldiv@divisor& (0+255),w,b
 28369  010A4E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 28370  010A50  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28371  010A52  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 28372  010A54  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28373  010A56  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 28374  010A58  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28375  010A5A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 28376  010A5C  A0D8               	btfss	status,0,c
 28377  010A5E  D009               	goto	l3685
 28378                           
 28379                           ; BSR set to: 0
 28380  010A60  5164               	movf	___lldiv@divisor& (0+255),w,b
 28381  010A62  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 28382  010A64  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28383  010A66  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 28384  010A68  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28385  010A6A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 28386  010A6C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28387  010A6E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 28388                           
 28389                           ; BSR set to: 0
 28390  010A70  8168               	bsf	___lldiv@quotient& (0+255),0,b
 28391  010A72                     l3685:
 28392                           
 28393                           ; BSR set to: 0
 28394                           
 28395                           ; BSR set to: 0
 28396  010A72  90D8               	bcf	status,0,c
 28397  010A74  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28398  010A76  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28399  010A78  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28400  010A7A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 28401                           
 28402                           ; BSR set to: 0
 28403  010A7C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 28404  010A7E  D7E1               	goto	u10510
 28405  010A80                     l3686:
 28406                           
 28407                           ; BSR set to: 0
 28408                           
 28409                           ; BSR set to: 0
 28410  010A80  C068  F060         	movff	___lldiv@quotient,?___lldiv
 28411  010A84  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 28412  010A88  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 28413  010A8C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 28414                           
 28415                           ; BSR set to: 0
 28416  010A90  0012               	return		;funcret
 28417  010A92                     __end_of___lldiv:
 28418                           	opt stack 0
 28419                           tblptru	equ	0xFF8
 28420                           tblptrh	equ	0xFF7
 28421                           tblptrl	equ	0xFF6
 28422                           tablat	equ	0xFF5
 28423                           prodh	equ	0xFF4
 28424                           prodl	equ	0xFF3
 28425                           intcon	equ	0xFF2
 28426                           intcon2	equ	0xFF1
 28427                           intcon3	equ	0xFF0
 28428                           postinc0	equ	0xFEE
 28429                           wreg	equ	0xFE8
 28430                           indf1	equ	0xFE7
 28431                           postinc1	equ	0xFE6
 28432                           postdec1	equ	0xFE5
 28433                           plusw1	equ	0xFE3
 28434                           fsr1h	equ	0xFE2
 28435                           fsr1l	equ	0xFE1
 28436                           indf2	equ	0xFDF
 28437                           postinc2	equ	0xFDE
 28438                           postdec2	equ	0xFDD
 28439                           plusw2	equ	0xFDB
 28440                           fsr2h	equ	0xFDA
 28441                           fsr2l	equ	0xFD9
 28442                           status	equ	0xFD8
 28443                           
 28444 ;; *************** function _adc_read *****************
 28445 ;; Defined at:
 28446 ;;		line 30 in file "adc.c"
 28447 ;; Parameters:    Size  Location     Type
 28448 ;;  channel         1    wreg     enum E8227
 28449 ;; Auto vars:     Size  Location     Type
 28450 ;;  channel         1    2[BANK0 ] enum E8227
 28451 ;;  adc_value       2    3[BANK0 ] unsigned int 
 28452 ;; Return value:  Size  Location     Type
 28453 ;;                  2    0[BANK0 ] unsigned int 
 28454 ;; Registers used:
 28455 ;;		wreg, status,2, status,0
 28456 ;; Tracked objects:
 28457 ;;		On entry : 0/0
 28458 ;;		On exit  : 0/0
 28459 ;;		Unchanged: 0/0
 28460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28462 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28464 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28465 ;;Total ram usage:        5 bytes
 28466 ;; Hardware stack levels used:    1
 28467 ;; Hardware stack levels required when called:   10
 28468 ;; This function calls:
 28469 ;;		Nothing
 28470 ;; This function is called by:
 28471 ;;		_main
 28472 ;; This function uses a non-reentrant model
 28473 ;;
 28474                           
 28475                           	psect	text127
 28476  010902                     __ptext127:
 28477                           	opt stack 0
 28478  010902                     _adc_read:
 28479                           	opt stack 20
 28480                           
 28481                           ; BSR set to: 0
 28482                           ;incstack = 0
 28483                           ;adc_read@channel stored from wreg
 28484  010902  0100               	movlb	0	; () banked
 28485  010904  6F62               	movwf	adc_read@channel& (0+255),b
 28486                           
 28487                           ;adc.c: 32: uint16_t adc_value;
 28488                           ;adc.c: 34: switch(channel)
 28489  010906  D010               	goto	l2681
 28490  010908                     
 28491                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 28492  010908  50C2               	movf	4034,w,c	;volatile
 28493  01090A  0BC3               	andlw	-61
 28494  01090C  0930               	iorlw	48
 28495  01090E  D007               	goto	L19
 28496  010910                     
 28497                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 28498  010910  50C2               	movf	4034,w,c	;volatile
 28499  010912  0BC3               	andlw	-61
 28500  010914  0904               	iorlw	4
 28501  010916  D003               	goto	L19
 28502  010918                     
 28503                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 28504  010918  50C2               	movf	4034,w,c	;volatile
 28505  01091A  0BC3               	andlw	-61
 28506  01091C  0908               	iorlw	8
 28507  01091E                     L19:
 28508  01091E  6EC2               	movwf	4034,c	;volatile
 28509                           
 28510                           ;adc.c: 44: break;
 28511  010920  D017               	goto	l2688
 28512  010922                     l2686:
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;adc.c: 46: return 0xFFFF;
 28516  010922  6960               	setf	?_adc_read& (0+255),b
 28517  010924  6961               	setf	(?_adc_read+1)& (0+255),b
 28518  010926  0012               	return	
 28519  010928                     l2681:
 28520                           
 28521                           ; BSR set to: 0
 28522  010928  0100               	movlb	0	; () banked
 28523  01092A  5162               	movf	adc_read@channel& (0+255),w,b
 28524                           
 28525                           ; Switch size 1, requested type "space"
 28526                           ; Number of cases is 3, Range of values is 0 to 2
 28527                           ; switch strategies available:
 28528                           ; Name         Instructions Cycles
 28529                           ; simple_byte           10     6 (average)
 28530                           ;	Chosen strategy is simple_byte
 28531  01092C  0A00               	xorlw	0	; case 0
 28532  01092E  B4D8               	btfsc	status,2,c
 28533  010930  D7EB               	goto	l2682
 28534  010932  0A01               	xorlw	1	; case 1
 28535  010934  B4D8               	btfsc	status,2,c
 28536  010936  D7EC               	goto	l2684
 28537  010938  0A03               	xorlw	3	; case 2
 28538  01093A  B4D8               	btfsc	status,2,c
 28539  01093C  D7ED               	goto	l2685
 28540  01093E  D7F1               	goto	l2686
 28541  010940                     
 28542                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 28543                           
 28544                           ; BSR set to: 0
 28545  010940  0E0A               	movlw	10
 28546  010942                     u16237:
 28547  010942  2EE8               	decfsz	wreg,f,c
 28548  010944  D7FE               	bra	u16237
 28549                           
 28550                           ;adc.c: 54: break;
 28551  010946  D00C               	goto	l2690
 28552  010948                     
 28553                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 28554  010948  0E3C               	movlw	60
 28555  01094A                     u16247:
 28556  01094A  2EE8               	decfsz	wreg,f,c
 28557  01094C  D7FE               	bra	u16247
 28558                           
 28559                           ;adc.c: 58: }
 28560                           
 28561                           ;adc.c: 57: break;
 28562  01094E  D008               	goto	l2690
 28563  010950                     l2688:
 28564  010950  0102               	movlb	2	; () banked
 28565  010952  5100               	movf	_os& (0+255),w,b	;volatile
 28566                           
 28567                           ; Switch size 1, requested type "space"
 28568                           ; Number of cases is 2, Range of values is 1 to 2
 28569                           ; switch strategies available:
 28570                           ; Name         Instructions Cycles
 28571                           ; simple_byte            7     4 (average)
 28572                           ;	Chosen strategy is simple_byte
 28573  010954  0A01               	xorlw	1	; case 1
 28574  010956  B4D8               	btfsc	status,2,c
 28575  010958  D7F3               	goto	l2689
 28576  01095A  0A03               	xorlw	3	; case 2
 28577  01095C  B4D8               	btfsc	status,2,c
 28578  01095E  D7F4               	goto	l2691
 28579  010960                     l2690:
 28580                           
 28581                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 28582  010960  82C2               	bsf	4034,1,c	;volatile
 28583  010962  B2C2               	btfsc	4034,1,c	;volatile
 28584  010964  D7FE               	goto	l2693
 28585                           
 28586                           ;adc.c: 67: adc_value = ADRESH;
 28587  010966  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 28588  01096A  0100               	movlb	0	; () banked
 28589  01096C  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 28590                           
 28591                           ; BSR set to: 0
 28592                           ;adc.c: 68: adc_value <<= 2;
 28593  01096E  90D8               	bcf	status,0,c
 28594  010970  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28595  010972  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28596  010974  90D8               	bcf	status,0,c
 28597  010976  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28598  010978  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28599                           
 28600                           ; BSR set to: 0
 28601                           ;adc.c: 69: adc_value |= ADRESL;
 28602  01097A  50C3               	movf	4035,w,c	;volatile
 28603  01097C  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 28604                           
 28605                           ; BSR set to: 0
 28606                           ;adc.c: 71: return adc_value;
 28607  01097E  C063  F060         	movff	adc_read@adc_value,?_adc_read
 28608  010982  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 28609  010986  0012               	return	
 28610  010988                     __end_of_adc_read:
 28611                           	opt stack 0
 28612                           tblptru	equ	0xFF8
 28613                           tblptrh	equ	0xFF7
 28614                           tblptrl	equ	0xFF6
 28615                           tablat	equ	0xFF5
 28616                           prodh	equ	0xFF4
 28617                           prodl	equ	0xFF3
 28618                           intcon	equ	0xFF2
 28619                           intcon2	equ	0xFF1
 28620                           intcon3	equ	0xFF0
 28621                           postinc0	equ	0xFEE
 28622                           wreg	equ	0xFE8
 28623                           indf1	equ	0xFE7
 28624                           postinc1	equ	0xFE6
 28625                           postdec1	equ	0xFE5
 28626                           plusw1	equ	0xFE3
 28627                           fsr1h	equ	0xFE2
 28628                           fsr1l	equ	0xFE1
 28629                           indf2	equ	0xFDF
 28630                           postinc2	equ	0xFDE
 28631                           postdec2	equ	0xFDD
 28632                           plusw2	equ	0xFDB
 28633                           fsr2h	equ	0xFDA
 28634                           fsr2l	equ	0xFD9
 28635                           status	equ	0xFD8
 28636                           
 28637 ;; *************** function _adc_calibrate *****************
 28638 ;; Defined at:
 28639 ;;		line 20 in file "adc.c"
 28640 ;; Parameters:    Size  Location     Type
 28641 ;;		None
 28642 ;; Auto vars:     Size  Location     Type
 28643 ;;		None
 28644 ;; Return value:  Size  Location     Type
 28645 ;;                  1    wreg      void 
 28646 ;; Registers used:
 28647 ;;		None
 28648 ;; Tracked objects:
 28649 ;;		On entry : 0/0
 28650 ;;		On exit  : 0/0
 28651 ;;		Unchanged: 0/0
 28652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28657 ;;Total ram usage:        0 bytes
 28658 ;; Hardware stack levels used:    1
 28659 ;; Hardware stack levels required when called:   10
 28660 ;; This function calls:
 28661 ;;		Nothing
 28662 ;; This function is called by:
 28663 ;;		_main
 28664 ;; This function uses a non-reentrant model
 28665 ;;
 28666                           
 28667                           	psect	text128
 28668  012ED6                     __ptext128:
 28669                           	opt stack 0
 28670  012ED6                     _adc_calibrate:
 28671                           	opt stack 20
 28672                           
 28673                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 28674                           
 28675                           ; BSR set to: 0
 28676                           ;incstack = 0
 28677  012ED6  8CC1               	bsf	4033,6,c	;volatile
 28678                           
 28679                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 28680  012ED8  82C2               	bsf	4034,1,c	;volatile
 28681  012EDA  B2C2               	btfsc	4034,1,c	;volatile
 28682  012EDC  D7FE               	goto	l2676
 28683                           
 28684                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 28685  012EDE  9CC1               	bcf	4033,6,c	;volatile
 28686  012EE0  0012               	return		;funcret
 28687  012EE2                     __end_of_adc_calibrate:
 28688                           	opt stack 0
 28689                           tblptru	equ	0xFF8
 28690                           tblptrh	equ	0xFF7
 28691                           tblptrl	equ	0xFF6
 28692                           tablat	equ	0xFF5
 28693                           prodh	equ	0xFF4
 28694                           prodl	equ	0xFF3
 28695                           intcon	equ	0xFF2
 28696                           intcon2	equ	0xFF1
 28697                           intcon3	equ	0xFF0
 28698                           postinc0	equ	0xFEE
 28699                           wreg	equ	0xFE8
 28700                           indf1	equ	0xFE7
 28701                           postinc1	equ	0xFE6
 28702                           postdec1	equ	0xFE5
 28703                           plusw1	equ	0xFE3
 28704                           fsr1h	equ	0xFE2
 28705                           fsr1l	equ	0xFE1
 28706                           indf2	equ	0xFDF
 28707                           postinc2	equ	0xFDE
 28708                           postdec2	equ	0xFDD
 28709                           plusw2	equ	0xFDB
 28710                           fsr2h	equ	0xFDA
 28711                           fsr2l	equ	0xFD9
 28712                           status	equ	0xFD8
 28713                           
 28714 ;; *************** function _adc_calculate_temperature *****************
 28715 ;; Defined at:
 28716 ;;		line 74 in file "adc.c"
 28717 ;; Parameters:    Size  Location     Type
 28718 ;;  adc_value       2   12[BANK0 ] unsigned int 
 28719 ;;  calibration     1   14[BANK0 ] enum E8148
 28720 ;; Auto vars:     Size  Location     Type
 28721 ;;  tmp             4   21[BANK0 ] long 
 28722 ;; Return value:  Size  Location     Type
 28723 ;;                  2   12[BANK0 ] int 
 28724 ;; Registers used:
 28725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28726 ;; Tracked objects:
 28727 ;;		On entry : 0/0
 28728 ;;		On exit  : 0/0
 28729 ;;		Unchanged: 0/0
 28730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28731 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28733 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28734 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28735 ;;Total ram usage:       13 bytes
 28736 ;; Hardware stack levels used:    1
 28737 ;; Hardware stack levels required when called:   11
 28738 ;; This function calls:
 28739 ;;		___lmul
 28740 ;; This function is called by:
 28741 ;;		_main
 28742 ;; This function uses a non-reentrant model
 28743 ;;
 28744                           
 28745                           	psect	text129
 28746  00EFFE                     __ptext129:
 28747                           	opt stack 0
 28748  00EFFE                     _adc_calculate_temperature:
 28749                           	opt stack 19
 28750                           
 28751                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 28752                           
 28753                           ;incstack = 0
 28754  00EFFE  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 28755  00F002  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 28756  00F006  0100               	movlb	0	; () banked
 28757  00F008  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 28758  00F00A  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 28759                           
 28760                           ; BSR set to: 0
 28761                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 28762  00F00C  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28763  00F00E  0D0C               	mullw	12
 28764  00F010  0E05               	movlw	5
 28765  00F012  26F3               	addwf	prodl,f,c
 28766  00F014  0E00               	movlw	0
 28767  00F016  22F4               	addwfc	prodh,f,c
 28768  00F018  0E00               	movlw	low _calibrationParameters
 28769  00F01A  24F3               	addwf	prodl,w,c
 28770  00F01C  6ED9               	movwf	fsr2l,c
 28771  00F01E  0E03               	movlw	high _calibrationParameters
 28772  00F020  20F4               	addwfc	prodh,w,c
 28773  00F022  6EDA               	movwf	fsr2h,c
 28774  00F024  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 28775  00F028  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 28776  00F02C  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 28777  00F030  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 28778  00F034  0E00               	movlw	0
 28779  00F036  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 28780  00F038  0EFF               	movlw	255
 28781  00F03A  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 28782  00F03C  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 28783  00F03E  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 28784  00F040  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28785  00F042  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 28786  00F044  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28787  00F046  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 28788  00F048  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28789  00F04A  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 28790  00F04C  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28791                           
 28792                           ; BSR set to: 0
 28793                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 28794  00F04E  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 28795  00F052  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 28796  00F056  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 28797  00F05A  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 28798  00F05E  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28799  00F060  0D0C               	mullw	12
 28800  00F062  0E07               	movlw	7
 28801  00F064  26F3               	addwf	prodl,f,c
 28802  00F066  0E00               	movlw	0
 28803  00F068  22F4               	addwfc	prodh,f,c
 28804  00F06A  0E00               	movlw	low _calibrationParameters
 28805  00F06C  24F3               	addwf	prodl,w,c
 28806  00F06E  6ED9               	movwf	fsr2l,c
 28807  00F070  0E03               	movlw	high _calibrationParameters
 28808  00F072  20F4               	addwfc	prodh,w,c
 28809  00F074  6EDA               	movwf	fsr2h,c
 28810  00F076  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28811  00F07A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28812  00F07E  0E00               	movlw	0
 28813  00F080  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28814  00F082  0EFF               	movlw	-1
 28815  00F084  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28816  00F086  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28817  00F088  ECB3  F08D         	call	___lmul	;wreg free
 28818  00F08C  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 28819  00F090  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 28820  00F094  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 28821  00F098  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 28822                           
 28823                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 28824  00F09C  0100               	movlb	0	; () banked
 28825  00F09E  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28826  00F0A0  0D0C               	mullw	12
 28827  00F0A2  0E09               	movlw	9
 28828  00F0A4  26F3               	addwf	prodl,f,c
 28829  00F0A6  0E00               	movlw	0
 28830  00F0A8  22F4               	addwfc	prodh,f,c
 28831  00F0AA  0E00               	movlw	low _calibrationParameters
 28832  00F0AC  24F3               	addwf	prodl,w,c
 28833  00F0AE  6ED9               	movwf	fsr2l,c
 28834  00F0B0  0E03               	movlw	high _calibrationParameters
 28835  00F0B2  20F4               	addwfc	prodh,w,c
 28836  00F0B4  6EDA               	movwf	fsr2h,c
 28837  00F0B6  50DF               	movf	indf2,w,c
 28838  00F0B8  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 28839  00F0BA  0EFF               	movlw	-1
 28840  00F0BC  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 28841  00F0BE  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 28842  00F0C0  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 28843  00F0C2  D005               	goto	u15530
 28844  00F0C4                     u15535:
 28845  00F0C4  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28846  00F0C6  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28847  00F0C8  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28848  00F0CA  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28849  00F0CC  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28850  00F0CE                     u15530:
 28851  00F0CE  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 28852  00F0D0  D7F9               	goto	u15535
 28853                           
 28854                           ;adc.c: 80: tmp += 1;
 28855  00F0D2  0E01               	movlw	1
 28856  00F0D4  0100               	movlb	0	; () banked
 28857  00F0D6  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28858  00F0D8  0E00               	movlw	0
 28859  00F0DA  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28860  00F0DC  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28861  00F0DE  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28862                           
 28863                           ; BSR set to: 0
 28864                           ;adc.c: 81: tmp >>= 1;
 28865  00F0E0  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28866  00F0E2  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28867  00F0E4  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28868  00F0E6  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28869  00F0E8  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28870                           
 28871                           ; BSR set to: 0
 28872                           ;adc.c: 82: return (int16_t) tmp;
 28873  00F0EA  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 28874  00F0EE  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 28875  00F0F2  0012               	return	
 28876  00F0F4                     __end_of_adc_calculate_temperature:
 28877                           	opt stack 0
 28878                           tblptru	equ	0xFF8
 28879                           tblptrh	equ	0xFF7
 28880                           tblptrl	equ	0xFF6
 28881                           tablat	equ	0xFF5
 28882                           prodh	equ	0xFF4
 28883                           prodl	equ	0xFF3
 28884                           intcon	equ	0xFF2
 28885                           intcon2	equ	0xFF1
 28886                           intcon3	equ	0xFF0
 28887                           postinc0	equ	0xFEE
 28888                           wreg	equ	0xFE8
 28889                           indf1	equ	0xFE7
 28890                           postinc1	equ	0xFE6
 28891                           postdec1	equ	0xFE5
 28892                           plusw1	equ	0xFE3
 28893                           fsr1h	equ	0xFE2
 28894                           fsr1l	equ	0xFE1
 28895                           indf2	equ	0xFDF
 28896                           postinc2	equ	0xFDE
 28897                           postdec2	equ	0xFDD
 28898                           plusw2	equ	0xFDB
 28899                           fsr2h	equ	0xFDA
 28900                           fsr2l	equ	0xFD9
 28901                           status	equ	0xFD8
 28902                           
 28903 ;; *************** function ___lmul *****************
 28904 ;; Defined at:
 28905 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
 28906 ;; Parameters:    Size  Location     Type
 28907 ;;  multiplier      4    0[BANK0 ] unsigned long 
 28908 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 28909 ;; Auto vars:     Size  Location     Type
 28910 ;;  product         4    8[BANK0 ] unsigned long 
 28911 ;; Return value:  Size  Location     Type
 28912 ;;                  4    0[BANK0 ] unsigned long 
 28913 ;; Registers used:
 28914 ;;		wreg, status,2, status,0
 28915 ;; Tracked objects:
 28916 ;;		On entry : 0/0
 28917 ;;		On exit  : 0/0
 28918 ;;		Unchanged: 0/0
 28919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28921 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28923 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28924 ;;Total ram usage:       12 bytes
 28925 ;; Hardware stack levels used:    1
 28926 ;; Hardware stack levels required when called:   10
 28927 ;; This function calls:
 28928 ;;		Nothing
 28929 ;; This function is called by:
 28930 ;;		_system_calculate_input_voltage
 28931 ;;		_system_calculate_output_voltage
 28932 ;;		_system_calculate_input_current
 28933 ;;		_system_calculate_output_current
 28934 ;;		__display_efficiency
 28935 ;;		__buck_operate_local
 28936 ;;		_adc_calculate_temperature
 28937 ;;		__get_input_power
 28938 ;;		__get_output_power
 28939 ;; This function uses a non-reentrant model
 28940 ;;
 28941                           
 28942                           	psect	text130
 28943  011B66                     __ptext130:
 28944                           	opt stack 0
 28945  011B66                     ___lmul:
 28946                           	opt stack 19
 28947                           
 28948                           ; BSR set to: 0
 28949                           ;incstack = 0
 28950  011B66  0E00               	movlw	0
 28951  011B68  0100               	movlb	0	; () banked
 28952  011B6A  6F68               	movwf	___lmul@product& (0+255),b
 28953  011B6C  0E00               	movlw	0
 28954  011B6E  6F69               	movwf	(___lmul@product+1)& (0+255),b
 28955  011B70  0E00               	movlw	0
 28956  011B72  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 28957  011B74  0E00               	movlw	0
 28958  011B76  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 28959  011B78                     
 28960                           ; BSR set to: 0
 28961                           
 28962                           ; BSR set to: 0
 28963  011B78  A160               	btfss	___lmul@multiplier& (0+255),0,b
 28964  011B7A  D008               	goto	l3329
 28965                           
 28966                           ; BSR set to: 0
 28967  011B7C  5164               	movf	___lmul@multiplicand& (0+255),w,b
 28968  011B7E  2768               	addwf	___lmul@product& (0+255),f,b
 28969  011B80  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28970  011B82  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 28971  011B84  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28972  011B86  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 28973  011B88  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28974  011B8A  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 28975  011B8C                     l3329:
 28976                           
 28977                           ; BSR set to: 0
 28978                           
 28979                           ; BSR set to: 0
 28980  011B8C  90D8               	bcf	status,0,c
 28981  011B8E  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 28982  011B90  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28983  011B92  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28984  011B94  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28985                           
 28986                           ; BSR set to: 0
 28987  011B96  90D8               	bcf	status,0,c
 28988  011B98  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28989  011B9A  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28990  011B9C  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28991  011B9E  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 28992  011BA0  5160               	movf	___lmul@multiplier& (0+255),w,b
 28993  011BA2  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28994  011BA4  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28995  011BA6  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28996  011BA8  A4D8               	btfss	status,2,c
 28997  011BAA  D7E6               	goto	l3328
 28998                           
 28999                           ; BSR set to: 0
 29000  011BAC  C068  F060         	movff	___lmul@product,?___lmul
 29001  011BB0  C069  F061         	movff	___lmul@product+1,?___lmul+1
 29002  011BB4  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 29003  011BB8  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 29004                           
 29005                           ; BSR set to: 0
 29006  011BBC  0012               	return		;funcret
 29007  011BBE                     __end_of___lmul:
 29008                           	opt stack 0
 29009                           tblptru	equ	0xFF8
 29010                           tblptrh	equ	0xFF7
 29011                           tblptrl	equ	0xFF6
 29012                           tablat	equ	0xFF5
 29013                           prodh	equ	0xFF4
 29014                           prodl	equ	0xFF3
 29015                           intcon	equ	0xFF2
 29016                           intcon2	equ	0xFF1
 29017                           intcon3	equ	0xFF0
 29018                           postinc0	equ	0xFEE
 29019                           wreg	equ	0xFE8
 29020                           indf1	equ	0xFE7
 29021                           postinc1	equ	0xFE6
 29022                           postdec1	equ	0xFE5
 29023                           plusw1	equ	0xFE3
 29024                           fsr1h	equ	0xFE2
 29025                           fsr1l	equ	0xFE1
 29026                           indf2	equ	0xFDF
 29027                           postinc2	equ	0xFDE
 29028                           postdec2	equ	0xFDD
 29029                           plusw2	equ	0xFDB
 29030                           fsr2h	equ	0xFDA
 29031                           fsr2l	equ	0xFD9
 29032                           status	equ	0xFD8
 29033                           
 29034 ;; *************** function _USBDeviceInit *****************
 29035 ;; Defined at:
 29036 ;;		line 277 in file "usb_device.c"
 29037 ;; Parameters:    Size  Location     Type
 29038 ;;		None
 29039 ;; Auto vars:     Size  Location     Type
 29040 ;;  i               1    8[BANK0 ] unsigned char 
 29041 ;; Return value:  Size  Location     Type
 29042 ;;                  1    wreg      void 
 29043 ;; Registers used:
 29044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29045 ;; Tracked objects:
 29046 ;;		On entry : 0/0
 29047 ;;		On exit  : 0/0
 29048 ;;		Unchanged: 0/0
 29049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29054 ;;Total ram usage:        1 bytes
 29055 ;; Hardware stack levels used:    1
 29056 ;; Hardware stack levels required when called:   11
 29057 ;; This function calls:
 29058 ;;		_memset
 29059 ;; This function is called by:
 29060 ;;		_main
 29061 ;; This function uses a non-reentrant model
 29062 ;;
 29063                           
 29064                           	psect	text131
 29065  00D65A                     __ptext131:
 29066                           	opt stack 0
 29067  00D65A                     _USBDeviceInit:
 29068                           	opt stack 19
 29069                           
 29070                           ;usb_device.c: 279: uint8_t i;
 29071                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 29072                           
 29073                           ; BSR set to: 0
 29074                           ;incstack = 0
 29075  00D65A  98A0               	bcf	4000,4,c	;volatile
 29076                           
 29077                           ;usb_device.c: 285: ;
 29078                           ;usb_device.c: 288: {UEIR = 0;};
 29079  00D65C  0E00               	movlw	0
 29080  00D65E  6E63               	movwf	3939,c	;volatile
 29081                           
 29082                           ;usb_device.c: 291: {UIR = 0;};
 29083  00D660  0E00               	movlw	0
 29084  00D662  6E62               	movwf	3938,c	;volatile
 29085                           
 29086                           ;usb_device.c: 294: UEP0 = 0;
 29087  00D664  0E00               	movlw	0
 29088  00D666  010F               	movlb	15	; () banked
 29089  00D668  6F26               	movwf	38,b	;volatile
 29090                           
 29091                           ; BSR set to: 15
 29092                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 29093  00D66A  0E27               	movlw	39
 29094  00D66C  0100               	movlb	0	; () banked
 29095  00D66E  6F60               	movwf	memset@p1& (0+255),b
 29096  00D670  0E0F               	movlw	15
 29097  00D672  6F61               	movwf	(memset@p1+1)& (0+255),b
 29098  00D674  0E00               	movlw	0
 29099  00D676  6F63               	movwf	(memset@c+1)& (0+255),b
 29100  00D678  0E00               	movlw	0
 29101  00D67A  6F62               	movwf	memset@c& (0+255),b
 29102  00D67C  0E00               	movlw	0
 29103  00D67E  6F65               	movwf	(memset@n+1)& (0+255),b
 29104  00D680  0E02               	movlw	2
 29105  00D682  6F64               	movwf	memset@n& (0+255),b
 29106  00D684  EC1D  F093         	call	_memset	;wreg free
 29107                           
 29108                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 29109  00D688  0E16               	movlw	22
 29110  00D68A  010F               	movlb	15	; () banked
 29111  00D68C  6F39               	movwf	57,b	;volatile
 29112                           
 29113                           ; BSR set to: 15
 29114  00D68E  0E9F               	movlw	159
 29115  00D690  6F37               	movwf	55,b	;volatile
 29116                           
 29117                           ; BSR set to: 15
 29118  00D692  0E7B               	movlw	123
 29119  00D694  6F36               	movwf	54,b	;volatile
 29120                           
 29121                           ; BSR set to: 15
 29122                           ;usb_device.c: 301: ;
 29123                           ;usb_device.c: 304: ;
 29124                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 29125  00D696  0E00               	movlw	0
 29126  00D698  0100               	movlb	0	; () banked
 29127  00D69A  6F68               	movwf	USBDeviceInit@i& (0+255),b
 29128  00D69C                     l16127:
 29129                           
 29130                           ; BSR set to: 0
 29131  00D69C  0E0B               	movlw	11
 29132  00D69E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 29133  00D6A0  D001               	goto	l147
 29134  00D6A2  D00E               	goto	u14680
 29135  00D6A4                     l147:
 29136                           
 29137                           ; BSR set to: 0
 29138                           ;usb_device.c: 308: {
 29139                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 29140                           
 29141                           ; BSR set to: 0
 29142  00D6A4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 29143  00D6A6  0D04               	mullw	4
 29144  00D6A8  0E00               	movlw	0
 29145  00D6AA  24F3               	addwf	prodl,w,c
 29146  00D6AC  6ED9               	movwf	fsr2l,c
 29147  00D6AE  0E0D               	movlw	13
 29148  00D6B0  20F4               	addwfc	prodh,w,c
 29149  00D6B2  6EDA               	movwf	fsr2h,c
 29150  00D6B4  6ADE               	clrf	postinc2,c
 29151  00D6B6  6ADE               	clrf	postinc2,c
 29152  00D6B8  6ADE               	clrf	postinc2,c
 29153  00D6BA  6ADD               	clrf	postdec2,c
 29154                           
 29155                           ; BSR set to: 0
 29156  00D6BC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 29157  00D6BE  D7EE               	goto	l16127
 29158  00D6C0                     u14680:
 29159                           
 29160                           ; BSR set to: 0
 29161                           ;usb_device.c: 310: }
 29162                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 29163  00D6C0  8C65               	bsf	3941,6,c	;volatile
 29164                           
 29165                           ; BSR set to: 0
 29166                           ;usb_device.c: 316: UADDR = 0x00;
 29167  00D6C2  0E00               	movlw	0
 29168  00D6C4  010F               	movlb	15	; () banked
 29169  00D6C6  6F38               	movwf	56,b	;volatile
 29170                           
 29171                           ; BSR set to: 15
 29172                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 29173  00D6C8  9865               	bcf	3941,4,c	;volatile
 29174                           
 29175                           ; BSR set to: 15
 29176                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 29177  00D6CA  9C65               	bcf	3941,6,c	;volatile
 29178  00D6CC                     
 29179                           ;usb_device.c: 326: {
 29180                           ;usb_device.c: 327: (UIR &= 0xF7);
 29181                           
 29182                           ; BSR set to: 15
 29183  00D6CC  9662               	bcf	3938,3,c	;volatile
 29184                           
 29185                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 29186  00D6CE  0E00               	movlw	0
 29187  00D6D0  0100               	movlb	0	; () banked
 29188  00D6D2  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29189                           
 29190                           ; BSR set to: 0
 29191                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 29192  00D6D4  0E00               	movlw	0
 29193  00D6D6  6E35               	movwf	_outPipes+3,c	;volatile
 29194                           
 29195                           ; BSR set to: 0
 29196                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 29197  00D6D8  0E00               	movlw	0
 29198  00D6DA  6E37               	movwf	_outPipes+5,c	;volatile
 29199  00D6DC  0E00               	movlw	0
 29200  00D6DE  6E36               	movwf	_outPipes+4,c	;volatile
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 29204  00D6E0  B662               	btfsc	3938,3,c	;volatile
 29205  00D6E2  D7F4               	goto	l149
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 29209                           
 29210                           ; BSR set to: 0
 29211  00D6E4  0E01               	movlw	1
 29212  00D6E6  0101               	movlb	1	; () banked
 29213  00D6E8  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29214                           
 29215                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 29216  00D6EA  0E01               	movlw	1
 29217  00D6EC  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29218                           
 29219                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 29220  00D6EE  0E00               	movlw	0
 29221  00D6F0  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 29222                           
 29223                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 29224  00D6F2  0E00               	movlw	0
 29225  00D6F4  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 29226                           
 29227                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 29228  00D6F6  0E00               	movlw	0
 29229  00D6F8  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 29230                           
 29231                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 29232  00D6FA  0E00               	movlw	0
 29233  00D6FC  0100               	movlb	0	; () banked
 29234  00D6FE  6F68               	movwf	USBDeviceInit@i& (0+255),b
 29235  00D700                     l16155:
 29236                           
 29237                           ; BSR set to: 0
 29238  00D700  0E02               	movlw	2
 29239  00D702  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 29240  00D704  D001               	goto	l151
 29241  00D706  D02E               	goto	u14710
 29242  00D708                     l151:
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;usb_device.c: 346: {
 29246                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 29247                           
 29248                           ; BSR set to: 0
 29249  00D708  5168               	movf	USBDeviceInit@i& (0+255),w,b
 29250  00D70A  0D02               	mullw	2
 29251  00D70C  0E3B               	movlw	low _pBDTEntryIn
 29252  00D70E  24F3               	addwf	prodl,w,c
 29253  00D710  6ED9               	movwf	fsr2l,c
 29254  00D712  0E00               	movlw	high _pBDTEntryIn
 29255  00D714  20F4               	addwfc	prodh,w,c
 29256  00D716  6EDA               	movwf	fsr2h,c
 29257  00D718  0E00               	movlw	0
 29258  00D71A  6EDE               	movwf	postinc2,c
 29259  00D71C  0E00               	movlw	0
 29260  00D71E  6EDD               	movwf	postdec2,c
 29261                           
 29262                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 29263  00D720  5168               	movf	USBDeviceInit@i& (0+255),w,b
 29264  00D722  0D02               	mullw	2
 29265  00D724  0ED3               	movlw	low _pBDTEntryOut
 29266  00D726  24F3               	addwf	prodl,w,c
 29267  00D728  6ED9               	movwf	fsr2l,c
 29268  00D72A  0E01               	movlw	high _pBDTEntryOut
 29269  00D72C  20F4               	addwfc	prodh,w,c
 29270  00D72E  6EDA               	movwf	fsr2h,c
 29271  00D730  0E00               	movlw	0
 29272  00D732  6EDE               	movwf	postinc2,c
 29273  00D734  0E00               	movlw	0
 29274  00D736  6EDD               	movwf	postdec2,c
 29275                           
 29276                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 29277  00D738  5168               	movf	USBDeviceInit@i& (0+255),w,b
 29278  00D73A  0D01               	mullw	1
 29279  00D73C  0EE4               	movlw	low _ep_data_in
 29280  00D73E  24F3               	addwf	prodl,w,c
 29281  00D740  6ED9               	movwf	fsr2l,c
 29282  00D742  0E01               	movlw	high _ep_data_in
 29283  00D744  20F4               	addwfc	prodh,w,c
 29284  00D746  6EDA               	movwf	fsr2h,c
 29285  00D748  0E00               	movlw	0
 29286  00D74A  6EDF               	movwf	indf2,c
 29287                           
 29288                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 29289  00D74C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 29290  00D74E  0D01               	mullw	1
 29291  00D750  0EE1               	movlw	low _ep_data_out
 29292  00D752  24F3               	addwf	prodl,w,c
 29293  00D754  6ED9               	movwf	fsr2l,c
 29294  00D756  0E01               	movlw	high _ep_data_out
 29295  00D758  20F4               	addwfc	prodh,w,c
 29296  00D75A  6EDA               	movwf	fsr2h,c
 29297  00D75C  0E00               	movlw	0
 29298  00D75E  6EDF               	movwf	indf2,c
 29299                           
 29300                           ; BSR set to: 0
 29301  00D760  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 29302  00D762  D7CE               	goto	l16155
 29303  00D764                     u14710:
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;usb_device.c: 351: }
 29307                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 29308                           
 29309                           ; BSR set to: 0
 29310  00D764  0E08               	movlw	8
 29311  00D766  6E3B               	movwf	_pBDTEntryIn,c
 29312  00D768  0E0D               	movlw	13
 29313  00D76A  6E3C               	movwf	_pBDTEntryIn+1,c
 29314                           
 29315                           ; BSR set to: 0
 29316                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 29317  00D76C  0E16               	movlw	22
 29318  00D76E  010F               	movlb	15	; () banked
 29319  00D770  6F26               	movwf	38,b	;volatile
 29320                           
 29321                           ; BSR set to: 15
 29322                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 29323  00D772  0E0D               	movlw	13
 29324  00D774  010D               	movlb	13	; () banked
 29325  00D776  6F03               	movwf	3,b	;volatile
 29326  00D778  0E30               	movlw	48
 29327  00D77A  6F02               	movwf	2,b	;volatile
 29328                           
 29329                           ; BSR set to: 13
 29330                           ;usb_device.c: 359: BDT[0].CNT = 8;
 29331  00D77C  0E08               	movlw	8
 29332  00D77E  6F01               	movwf	1,b	;volatile
 29333                           
 29334                           ; BSR set to: 13
 29335                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 29336  00D780  0E04               	movlw	4
 29337  00D782  6F00               	movwf	0,b	;volatile
 29338                           
 29339                           ; BSR set to: 13
 29340                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 29341  00D784  8F00               	bsf	0,7,b	;volatile
 29342                           
 29343                           ; BSR set to: 13
 29344                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 29345  00D786  0E00               	movlw	0
 29346  00D788  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 29347                           
 29348                           ; BSR set to: 13
 29349                           ;usb_device.c: 366: USB1msTickCount = 0;
 29350  00D78A  0E00               	movlw	0
 29351  00D78C  0101               	movlb	1	; () banked
 29352  00D78E  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 29353  00D790  0E00               	movlw	0
 29354  00D792  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 29355  00D794  0E00               	movlw	0
 29356  00D796  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 29357  00D798  0E00               	movlw	0
 29358  00D79A  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 29359                           
 29360                           ; BSR set to: 1
 29361                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 29362  00D79C  0E00               	movlw	0
 29363  00D79E  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 29364                           
 29365                           ; BSR set to: 1
 29366                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 29367  00D7A0  0E00               	movlw	0
 29368  00D7A2  6E5C               	movwf	_USBDeviceState,c	;volatile
 29369                           
 29370                           ; BSR set to: 1
 29371  00D7A4  0012               	return		;funcret
 29372  00D7A6                     __end_of_USBDeviceInit:
 29373                           	opt stack 0
 29374                           tblptru	equ	0xFF8
 29375                           tblptrh	equ	0xFF7
 29376                           tblptrl	equ	0xFF6
 29377                           tablat	equ	0xFF5
 29378                           prodh	equ	0xFF4
 29379                           prodl	equ	0xFF3
 29380                           intcon	equ	0xFF2
 29381                           intcon2	equ	0xFF1
 29382                           intcon3	equ	0xFF0
 29383                           postinc0	equ	0xFEE
 29384                           wreg	equ	0xFE8
 29385                           indf1	equ	0xFE7
 29386                           postinc1	equ	0xFE6
 29387                           postdec1	equ	0xFE5
 29388                           plusw1	equ	0xFE3
 29389                           fsr1h	equ	0xFE2
 29390                           fsr1l	equ	0xFE1
 29391                           indf2	equ	0xFDF
 29392                           postinc2	equ	0xFDE
 29393                           postdec2	equ	0xFDD
 29394                           plusw2	equ	0xFDB
 29395                           fsr2h	equ	0xFDA
 29396                           fsr2l	equ	0xFD9
 29397                           status	equ	0xFD8
 29398                           
 29399 ;; *************** function _memset *****************
 29400 ;; Defined at:
 29401 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 29402 ;; Parameters:    Size  Location     Type
 29403 ;;  p1              2    0[BANK0 ] PTR void 
 29404 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 29405 ;;  c               2    2[BANK0 ] int 
 29406 ;;  n               2    4[BANK0 ] unsigned int 
 29407 ;; Auto vars:     Size  Location     Type
 29408 ;;  p               2    6[BANK0 ] PTR unsigned char 
 29409 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 29410 ;; Return value:  Size  Location     Type
 29411 ;;                  2    0[BANK0 ] PTR void 
 29412 ;; Registers used:
 29413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29414 ;; Tracked objects:
 29415 ;;		On entry : 0/0
 29416 ;;		On exit  : 0/0
 29417 ;;		Unchanged: 0/0
 29418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29419 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29422 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29423 ;;Total ram usage:        8 bytes
 29424 ;; Hardware stack levels used:    1
 29425 ;; Hardware stack levels required when called:   10
 29426 ;; This function calls:
 29427 ;;		Nothing
 29428 ;; This function is called by:
 29429 ;;		_USBDeviceInit
 29430 ;; This function uses a non-reentrant model
 29431 ;;
 29432                           
 29433                           	psect	text132
 29434  01263A                     __ptext132:
 29435                           	opt stack 0
 29436  01263A                     _memset:
 29437                           	opt stack 19
 29438                           
 29439                           ; BSR set to: 1
 29440                           ;incstack = 0
 29441  01263A  C060  F066         	movff	memset@p1,memset@p
 29442  01263E  C061  F067         	movff	memset@p1+1,memset@p+1
 29443  012642  D009               	goto	l3764
 29444  012644                     l14313:
 29445  012644  C066  FFD9         	movff	memset@p,fsr2l
 29446  012648  C067  FFDA         	movff	memset@p+1,fsr2h
 29447  01264C  C062  FFDF         	movff	memset@c,indf2
 29448  012650  0100               	movlb	0	; () banked
 29449  012652  4B66               	infsnz	memset@p& (0+255),f,b
 29450  012654  2B67               	incf	(memset@p+1)& (0+255),f,b
 29451  012656                     l3764:
 29452                           
 29453                           ; BSR set to: 0
 29454  012656  0100               	movlb	0	; () banked
 29455  012658  0764               	decf	memset@n& (0+255),f,b
 29456  01265A  A0D8               	btfss	status,0,c
 29457  01265C  0765               	decf	(memset@n+1)& (0+255),f,b
 29458  01265E  2964               	incf	memset@n& (0+255),w,b
 29459  012660  E1F1               	bnz	l14313
 29460  012662  2965               	incf	(memset@n+1)& (0+255),w,b
 29461  012664  B4D8               	btfsc	status,2,c
 29462  012666  0012               	return	
 29463  012668  D7ED               	goto	l3765
 29464  01266A                     __end_of_memset:
 29465                           	opt stack 0
 29466                           tblptru	equ	0xFF8
 29467                           tblptrh	equ	0xFF7
 29468                           tblptrl	equ	0xFF6
 29469                           tablat	equ	0xFF5
 29470                           prodh	equ	0xFF4
 29471                           prodl	equ	0xFF3
 29472                           intcon	equ	0xFF2
 29473                           intcon2	equ	0xFF1
 29474                           intcon3	equ	0xFF0
 29475                           postinc0	equ	0xFEE
 29476                           wreg	equ	0xFE8
 29477                           indf1	equ	0xFE7
 29478                           postinc1	equ	0xFE6
 29479                           postdec1	equ	0xFE5
 29480                           plusw1	equ	0xFE3
 29481                           fsr1h	equ	0xFE2
 29482                           fsr1l	equ	0xFE1
 29483                           indf2	equ	0xFDF
 29484                           postinc2	equ	0xFDE
 29485                           postdec2	equ	0xFDD
 29486                           plusw2	equ	0xFDB
 29487                           fsr2h	equ	0xFDA
 29488                           fsr2l	equ	0xFD9
 29489                           status	equ	0xFD8
 29490                           
 29491 ;; *************** function _USBDeviceAttach *****************
 29492 ;; Defined at:
 29493 ;;		line 1354 in file "usb_device.c"
 29494 ;; Parameters:    Size  Location     Type
 29495 ;;		None
 29496 ;; Auto vars:     Size  Location     Type
 29497 ;;		None
 29498 ;; Return value:  Size  Location     Type
 29499 ;;                  1    wreg      void 
 29500 ;; Registers used:
 29501 ;;		wreg, status,2
 29502 ;; Tracked objects:
 29503 ;;		On entry : 0/0
 29504 ;;		On exit  : 0/0
 29505 ;;		Unchanged: 0/0
 29506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29511 ;;Total ram usage:        0 bytes
 29512 ;; Hardware stack levels used:    1
 29513 ;; Hardware stack levels required when called:   10
 29514 ;; This function calls:
 29515 ;;		Nothing
 29516 ;; This function is called by:
 29517 ;;		_main
 29518 ;; This function uses a non-reentrant model
 29519 ;;
 29520                           
 29521                           	psect	text133
 29522  0125D8                     __ptext133:
 29523                           	opt stack 0
 29524  0125D8                     _USBDeviceAttach:
 29525                           	opt stack 20
 29526                           
 29527                           ;usb_device.c: 1358: {
 29528                           ;usb_device.c: 1359: if(1 == 1)
 29529                           
 29530                           ; BSR set to: 0
 29531                           ;incstack = 0
 29532  0125D8  505C               	movf	_USBDeviceState,w,c	;volatile
 29533  0125DA  A4D8               	btfss	status,2,c
 29534  0125DC  0012               	return	
 29535                           
 29536                           ;usb_device.c: 1360: {
 29537                           ;usb_device.c: 1362: UCON = 0;
 29538  0125DE  0E00               	movlw	0
 29539  0125E0  6E65               	movwf	3941,c	;volatile
 29540                           
 29541                           ;usb_device.c: 1365: UIE = 0;
 29542  0125E2  0E00               	movlw	0
 29543  0125E4  010F               	movlb	15	; () banked
 29544  0125E6  6F36               	movwf	54,b	;volatile
 29545                           
 29546                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 29547  0125E8  0E16               	movlw	22
 29548  0125EA  6F39               	movwf	57,b	;volatile
 29549  0125EC  0E9F               	movlw	159
 29550  0125EE  6F37               	movwf	55,b	;volatile
 29551  0125F0  0E7B               	movlw	123
 29552  0125F2  6F36               	movwf	54,b	;volatile
 29553                           
 29554                           ; BSR set to: 15
 29555                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 29556  0125F4  8ED0               	bsf	4048,7,c	;volatile
 29557                           
 29558                           ; BSR set to: 15
 29559  0125F6  88A2               	bsf	4002,4,c	;volatile
 29560                           
 29561                           ; BSR set to: 15
 29562  0125F8  88A0               	bsf	4000,4,c	;volatile
 29563                           
 29564                           ; BSR set to: 15
 29565  0125FA  8EF2               	bsf	intcon,7,c	;volatile
 29566                           
 29567                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 29568  0125FC  D001               	goto	l208
 29569  0125FE                     l209:
 29570  0125FE  8665               	bsf	3941,3,c	;volatile
 29571  012600                     l208:
 29572  012600  A665               	btfss	3941,3,c	;volatile
 29573  012602  D7FD               	goto	l209
 29574                           
 29575                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 29576  012604  0E01               	movlw	1
 29577  012606  6E5C               	movwf	_USBDeviceState,c	;volatile
 29578  012608  0012               	return	
 29579  01260A                     __end_of_USBDeviceAttach:
 29580                           	opt stack 0
 29581                           tblptru	equ	0xFF8
 29582                           tblptrh	equ	0xFF7
 29583                           tblptrl	equ	0xFF6
 29584                           tablat	equ	0xFF5
 29585                           prodh	equ	0xFF4
 29586                           prodl	equ	0xFF3
 29587                           intcon	equ	0xFF2
 29588                           intcon2	equ	0xFF1
 29589                           intcon3	equ	0xFF0
 29590                           postinc0	equ	0xFEE
 29591                           wreg	equ	0xFE8
 29592                           indf1	equ	0xFE7
 29593                           postinc1	equ	0xFE6
 29594                           postdec1	equ	0xFE5
 29595                           plusw1	equ	0xFE3
 29596                           fsr1h	equ	0xFE2
 29597                           fsr1l	equ	0xFE1
 29598                           indf2	equ	0xFDF
 29599                           postinc2	equ	0xFDE
 29600                           postdec2	equ	0xFDD
 29601                           plusw2	equ	0xFDB
 29602                           fsr2h	equ	0xFDA
 29603                           fsr2l	equ	0xFD9
 29604                           status	equ	0xFD8
 29605                           
 29606 ;; *************** function _SYSTEM_Initialize *****************
 29607 ;; Defined at:
 29608 ;;		line 146 in file "system.c"
 29609 ;; Parameters:    Size  Location     Type
 29610 ;;  state           1    wreg     enum E8234
 29611 ;; Auto vars:     Size  Location     Type
 29612 ;;  state           1    4[BANK0 ] enum E8234
 29613 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 29614 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 29615 ;; Return value:  Size  Location     Type
 29616 ;;                  1    wreg      void 
 29617 ;; Registers used:
 29618 ;;		wreg, status,2, status,0
 29619 ;; Tracked objects:
 29620 ;;		On entry : 0/0
 29621 ;;		On exit  : 0/0
 29622 ;;		Unchanged: 0/0
 29623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29625 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29627 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29628 ;;Total ram usage:        5 bytes
 29629 ;; Hardware stack levels used:    1
 29630 ;; Hardware stack levels required when called:   10
 29631 ;; This function calls:
 29632 ;;		Nothing
 29633 ;; This function is called by:
 29634 ;;		_main
 29635 ;; This function uses a non-reentrant model
 29636 ;;
 29637                           
 29638                           	psect	text134
 29639  011A58                     __ptext134:
 29640                           	opt stack 0
 29641  011A58                     _SYSTEM_Initialize:
 29642                           	opt stack 20
 29643                           
 29644                           ;incstack = 0
 29645                           ;SYSTEM_Initialize@state stored from wreg
 29646  011A58  0100               	movlb	0	; () banked
 29647  011A5A  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 29648                           
 29649                           ;system.c: 148: switch(state)
 29650  011A5C  D01E               	goto	l949
 29651  011A5E                     
 29652                           ;system.c: 157: {
 29653                           ;system.c: 158: unsigned int pll_startup_counter = 600;
 29654  011A5E  0E02               	movlw	2
 29655  011A60  0100               	movlb	0	; () banked
 29656  011A62  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 29657  011A64  0E58               	movlw	88
 29658  011A66  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 29659                           
 29660                           ; BSR set to: 0
 29661                           ;system.c: 159: OSCTUNEbits.PLLEN = 1;
 29662  011A68  8C9B               	bsf	3995,6,c	;volatile
 29663  011A6A                     l16307:
 29664                           
 29665                           ; BSR set to: 0
 29666  011A6A  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 29667  011A6C  A0D8               	btfss	status,0,c
 29668  011A6E  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 29669  011A70  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 29670  011A72  E1FB               	bnz	l16307
 29671  011A74  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 29672  011A76  B4D8               	btfsc	status,2,c
 29673  011A78  0012               	return	
 29674  011A7A  D7F7               	goto	l952
 29675  011A7C                     
 29676                           ; BSR set to: 0
 29677                           ;system.c: 185: OSCCON = 0x70;
 29678                           
 29679                           ; BSR set to: 0
 29680  011A7C  0E70               	movlw	112
 29681  011A7E  6ED3               	movwf	4051,c	;volatile
 29682                           
 29683                           ;system.c: 191: {
 29684                           ;system.c: 192: unsigned int pll_startup_counter = 800;
 29685  011A80  0E03               	movlw	3
 29686  011A82  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),b
 29687  011A84  0E20               	movlw	32
 29688  011A86  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),b
 29689  011A88                     l16311:
 29690                           
 29691                           ; BSR set to: 0
 29692  011A88  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),f,b
 29693  011A8A  A0D8               	btfss	status,0,c
 29694  011A8C  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),f,b
 29695  011A8E  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),w,b
 29696  011A90  E1FB               	bnz	l16311
 29697  011A92  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),w,b
 29698  011A94  B4D8               	btfsc	status,2,c
 29699  011A96  0012               	return	
 29700  011A98  D7F7               	goto	l958
 29701  011A9A                     l949:
 29702                           
 29703                           ; BSR set to: 0
 29704  011A9A  0100               	movlb	0	; () banked
 29705  011A9C  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 29706                           
 29707                           ; Switch size 1, requested type "space"
 29708                           ; Number of cases is 3, Range of values is 0 to 2
 29709                           ; switch strategies available:
 29710                           ; Name         Instructions Cycles
 29711                           ; simple_byte           10     6 (average)
 29712                           ;	Chosen strategy is simple_byte
 29713  011A9E  0A00               	xorlw	0	; case 0
 29714  011AA0  B4D8               	btfsc	status,2,c
 29715  011AA2  D7DD               	goto	l950
 29716  011AA4  0A01               	xorlw	1	; case 1
 29717  011AA6  B4D8               	btfsc	status,2,c
 29718  011AA8  0012               	return	
 29719  011AAA  0A03               	xorlw	3	; case 2
 29720  011AAC  A4D8               	btfss	status,2,c
 29721  011AAE  0012               	return	
 29722  011AB0  D7E5               	goto	l956
 29723  011AB2                     __end_of_SYSTEM_Initialize:
 29724                           	opt stack 0
 29725                           tblptru	equ	0xFF8
 29726                           tblptrh	equ	0xFF7
 29727                           tblptrl	equ	0xFF6
 29728                           tablat	equ	0xFF5
 29729                           prodh	equ	0xFF4
 29730                           prodl	equ	0xFF3
 29731                           intcon	equ	0xFF2
 29732                           intcon2	equ	0xFF1
 29733                           intcon3	equ	0xFF0
 29734                           postinc0	equ	0xFEE
 29735                           wreg	equ	0xFE8
 29736                           indf1	equ	0xFE7
 29737                           postinc1	equ	0xFE6
 29738                           postdec1	equ	0xFE5
 29739                           plusw1	equ	0xFE3
 29740                           fsr1h	equ	0xFE2
 29741                           fsr1l	equ	0xFE1
 29742                           indf2	equ	0xFDF
 29743                           postinc2	equ	0xFDE
 29744                           postdec2	equ	0xFDD
 29745                           plusw2	equ	0xFDB
 29746                           fsr2h	equ	0xFDA
 29747                           fsr2l	equ	0xFD9
 29748                           status	equ	0xFD8
 29749                           
 29750 ;; *************** function _APP_DeviceMSDTasks *****************
 29751 ;; Defined at:
 29752 ;;		line 110 in file "app_device_msd.c"
 29753 ;; Parameters:    Size  Location     Type
 29754 ;;		None
 29755 ;; Auto vars:     Size  Location     Type
 29756 ;;		None
 29757 ;; Return value:  Size  Location     Type
 29758 ;;                  1    wreg      void 
 29759 ;; Registers used:
 29760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29761 ;; Tracked objects:
 29762 ;;		On entry : 0/0
 29763 ;;		On exit  : 0/0
 29764 ;;		Unchanged: 0/0
 29765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29770 ;;Total ram usage:        0 bytes
 29771 ;; Hardware stack levels used:    1
 29772 ;; Hardware stack levels required when called:   21
 29773 ;; This function calls:
 29774 ;;		_MSDTasks
 29775 ;; This function is called by:
 29776 ;;		_main
 29777 ;; This function uses a non-reentrant model
 29778 ;;
 29779                           
 29780                           	psect	text135
 29781  012DC4                     __ptext135:
 29782                           	opt stack 0
 29783  012DC4                     _APP_DeviceMSDTasks:
 29784                           	opt stack 9
 29785                           
 29786                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;incstack = 0
 29790  012DC4  0E20               	movlw	32
 29791  012DC6  605C               	cpfslt	_USBDeviceState,c	;volatile
 29792  012DC8  D001               	goto	l1233
 29793  012DCA  0012               	return	
 29794  012DCC                     l1233:
 29795                           
 29796                           ;app_device_msd.c: 118: }
 29797                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 29798  012DCC  B265               	btfsc	3941,1,c	;volatile
 29799  012DCE  0012               	return	
 29800                           
 29801                           ;app_device_msd.c: 127: }
 29802                           ;app_device_msd.c: 129: MSDTasks();
 29803                           
 29804                           ;app_device_msd.c: 125: {
 29805                           ;app_device_msd.c: 126: return;
 29806  012DD0  EC6F  F062         	call	_MSDTasks	;wreg free
 29807  012DD4  0012               	return		;funcret
 29808  012DD6                     __end_of_APP_DeviceMSDTasks:
 29809                           	opt stack 0
 29810                           tblptru	equ	0xFF8
 29811                           tblptrh	equ	0xFF7
 29812                           tblptrl	equ	0xFF6
 29813                           tablat	equ	0xFF5
 29814                           prodh	equ	0xFF4
 29815                           prodl	equ	0xFF3
 29816                           intcon	equ	0xFF2
 29817                           intcon2	equ	0xFF1
 29818                           intcon3	equ	0xFF0
 29819                           postinc0	equ	0xFEE
 29820                           wreg	equ	0xFE8
 29821                           indf1	equ	0xFE7
 29822                           postinc1	equ	0xFE6
 29823                           postdec1	equ	0xFE5
 29824                           plusw1	equ	0xFE3
 29825                           fsr1h	equ	0xFE2
 29826                           fsr1l	equ	0xFE1
 29827                           indf2	equ	0xFDF
 29828                           postinc2	equ	0xFDE
 29829                           postdec2	equ	0xFDD
 29830                           plusw2	equ	0xFDB
 29831                           fsr2h	equ	0xFDA
 29832                           fsr2l	equ	0xFD9
 29833                           status	equ	0xFD8
 29834                           
 29835 ;; *************** function _MSDTasks *****************
 29836 ;; Defined at:
 29837 ;;		line 335 in file "usb_device_msd.c"
 29838 ;; Parameters:    Size  Location     Type
 29839 ;;		None
 29840 ;; Auto vars:     Size  Location     Type
 29841 ;;  i               1   81[BANK0 ] unsigned char 
 29842 ;; Return value:  Size  Location     Type
 29843 ;;                  1    wreg      unsigned char 
 29844 ;; Registers used:
 29845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29846 ;; Tracked objects:
 29847 ;;		On entry : 0/0
 29848 ;;		On exit  : 0/0
 29849 ;;		Unchanged: 0/0
 29850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29852 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29855 ;;Total ram usage:        6 bytes
 29856 ;; Hardware stack levels used:    1
 29857 ;; Hardware stack levels required when called:   20
 29858 ;; This function calls:
 29859 ;;		_MSDProcessCommand
 29860 ;;		_USBStallEndpoint
 29861 ;;		_USBTransferOnePacket
 29862 ;; This function is called by:
 29863 ;;		_APP_DeviceMSDTasks
 29864 ;; This function uses a non-reentrant model
 29865 ;;
 29866                           
 29867                           	psect	text136
 29868  00C4DE                     __ptext136:
 29869                           	opt stack 0
 29870  00C4DE                     _MSDTasks:
 29871                           	opt stack 9
 29872                           
 29873                           ;usb_device_msd.c: 337: uint8_t i;
 29874                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 29875                           
 29876                           ;incstack = 0
 29877  00C4DE  0E20               	movlw	32
 29878  00C4E0  185C               	xorwf	_USBDeviceState,w,c	;volatile
 29879  00C4E2  A4D8               	btfss	status,2,c
 29880  00C4E4  0012               	return	
 29881                           
 29882                           ;usb_device_msd.c: 345: }
 29883                           ;usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 29884                           
 29885                           ;usb_device_msd.c: 343: {
 29886                           ;usb_device_msd.c: 344: return 0x00;
 29887                           ;	Return value of _MSDTasks is never used
 29888  00C4E6  98A0               	bcf	4000,4,c	;volatile
 29889                           
 29890                           ;usb_device_msd.c: 357: switch(MSD_State)
 29891  00C4E8  D115               	goto	l574
 29892  00C4EA                     
 29893                           ;usb_device_msd.c: 360: {
 29894                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 29895  00C4EA  5047               	movf	_USBMSDOutHandle,w,c
 29896  00C4EC  1048               	iorwf	_USBMSDOutHandle+1,w,c
 29897  00C4EE  B4D8               	btfsc	status,2,c
 29898  00C4F0  D006               	goto	u12370
 29899  00C4F2  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29900  00C4F6  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29901  00C4FA  BEDF               	btfsc	indf2,7,c
 29902  00C4FC  D119               	goto	l590
 29903  00C4FE                     u12370:
 29904                           
 29905                           ;usb_device_msd.c: 363: {
 29906                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 29907  00C4FE  0E00               	movlw	0
 29908  00C500  0100               	movlb	0	; () banked
 29909  00C502  6FB1               	movwf	MSDTasks@i& (0+255),b
 29910  00C504                     l14399:
 29911                           
 29912                           ; BSR set to: 0
 29913  00C504  0E1E               	movlw	30
 29914  00C506  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 29915  00C508  D001               	goto	l579
 29916  00C50A  D014               	goto	u12390
 29917  00C50C                     l579:
 29918                           
 29919                           ; BSR set to: 0
 29920                           ;usb_device_msd.c: 372: {
 29921                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 29922                           
 29923                           ; BSR set to: 0
 29924  00C50C  51B1               	movf	MSDTasks@i& (0+255),w,b
 29925  00C50E  0D01               	mullw	1
 29926  00C510  0E40               	movlw	64
 29927  00C512  24F3               	addwf	prodl,w,c
 29928  00C514  6ED9               	movwf	fsr2l,c
 29929  00C516  0E0D               	movlw	13
 29930  00C518  20F4               	addwfc	prodh,w,c
 29931  00C51A  6EDA               	movwf	fsr2h,c
 29932  00C51C  51B1               	movf	MSDTasks@i& (0+255),w,b
 29933  00C51E  0D01               	mullw	1
 29934  00C520  0E41               	movlw	low _gblCBW
 29935  00C522  24F3               	addwf	prodl,w,c
 29936  00C524  6EE1               	movwf	fsr1l,c
 29937  00C526  0E02               	movlw	high _gblCBW
 29938  00C528  20F4               	addwfc	prodh,w,c
 29939  00C52A  6EE2               	movwf	fsr1h,c
 29940  00C52C  CFDF FFE7          	movff	indf2,indf1
 29941                           
 29942                           ; BSR set to: 0
 29943  00C530  2BB1               	incf	MSDTasks@i& (0+255),f,b
 29944  00C532  D7E8               	goto	l14399
 29945  00C534                     u12390:
 29946                           
 29947                           ; BSR set to: 0
 29948                           ;usb_device_msd.c: 374: }
 29949                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 29950                           
 29951                           ; BSR set to: 0
 29952  00C534  EE20 F001          	lfsr	2,1
 29953  00C538  5047               	movf	_USBMSDOutHandle,w,c
 29954  00C53A  26D9               	addwf	fsr2l,f,c
 29955  00C53C  5048               	movf	_USBMSDOutHandle+1,w,c
 29956  00C53E  22DA               	addwfc	fsr2h,f,c
 29957  00C540  0E1F               	movlw	31
 29958  00C542  18DE               	xorwf	postinc2,w,c
 29959  00C544  A4D8               	btfss	status,2,c
 29960  00C546  D072               	goto	l581
 29961                           
 29962                           ; BSR set to: 0
 29963  00C548  0E55               	movlw	85
 29964  00C54A  0102               	movlb	2	; () banked
 29965  00C54C  1941               	xorwf	_gblCBW& (0+255),w,b
 29966  00C54E  E16E               	bnz	l581
 29967  00C550  0E53               	movlw	83
 29968  00C552  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 29969  00C554  E16B               	bnz	l581
 29970  00C556  0E42               	movlw	66
 29971  00C558  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 29972  00C55A  E168               	bnz	l14449
 29973  00C55C  0E43               	movlw	67
 29974  00C55E  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 29975  00C560  A4D8               	btfss	status,2,c
 29976  00C562  D064               	goto	l581
 29977                           
 29978                           ; BSR set to: 2
 29979                           ;usb_device_msd.c: 378: {
 29980                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 29981  00C564  0E01               	movlw	1
 29982  00C566  0101               	movlb	1	; () banked
 29983  00C568  6FF1               	movwf	_MSDCBWValid& (0+255),b
 29984                           
 29985                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 29986                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 29987                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 29988                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 29989  00C56A  0102               	movlb	2	; () banked
 29990  00C56C  514E               	movf	(_gblCBW+13)& (0+255),w,b
 29991  00C56E  A4D8               	btfss	status,2,c
 29992  00C570  D050               	goto	l582
 29993                           
 29994                           ; BSR set to: 2
 29995  00C572  0E11               	movlw	17
 29996  00C574  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 29997  00C576  D04D               	goto	l582
 29998                           
 29999                           ; BSR set to: 2
 30000  00C578  514F               	movf	(_gblCBW+14)& (0+255),w,b
 30001  00C57A  B4D8               	btfsc	status,2,c
 30002  00C57C  D04A               	goto	l582
 30003                           
 30004                           ; BSR set to: 2
 30005  00C57E  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 30006  00C582  0E3F               	movlw	63
 30007  00C584  0100               	movlb	0	; () banked
 30008  00C586  17AC               	andwf	??_MSDTasks& (0+255),f,b
 30009  00C588  A4D8               	btfss	status,2,c
 30010  00C58A  D043               	goto	l582
 30011                           
 30012                           ; BSR set to: 0
 30013                           ;usb_device_msd.c: 388: {
 30014                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 30015  00C58C  0E55               	movlw	85
 30016  00C58E  010D               	movlb	13	; () banked
 30017  00C590  6F80               	movwf	128,b	;volatile
 30018  00C592  0E53               	movlw	83
 30019  00C594  6F81               	movwf	129,b	;volatile
 30020  00C596  0E42               	movlw	66
 30021  00C598  6F82               	movwf	130,b	;volatile
 30022  00C59A  0E53               	movlw	83
 30023  00C59C  6F83               	movwf	131,b	;volatile
 30024                           
 30025                           ; BSR set to: 13
 30026                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 30027  00C59E  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 30028  00C5A2  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 30029  00C5A6  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 30030  00C5AA  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 30031                           
 30032                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 30033  00C5AE  0E00               	movlw	0
 30034  00C5B0  6F88               	movwf	136,b	;volatile
 30035  00C5B2  0E00               	movlw	0
 30036  00C5B4  6F89               	movwf	137,b	;volatile
 30037  00C5B6  0E00               	movlw	0
 30038  00C5B8  6F8A               	movwf	138,b	;volatile
 30039  00C5BA  0E00               	movlw	0
 30040  00C5BC  6F8B               	movwf	139,b	;volatile
 30041                           
 30042                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 30043  00C5BE  0E00               	movlw	0
 30044  00C5C0  6F8C               	movwf	140,b	;volatile
 30045                           
 30046                           ; BSR set to: 13
 30047                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 30048  00C5C2  6853               	setf	_MSDCommandState,c
 30049                           
 30050                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 30051  00C5C4  0E00               	movlw	0
 30052  00C5C6  0101               	movlb	1	; () banked
 30053  00C5C8  6FF5               	movwf	_MSDReadState& (0+255),b
 30054                           
 30055                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 30056  00C5CA  0E00               	movlw	0
 30057  00C5CC  6E52               	movwf	_MSDWriteState,c
 30058                           
 30059                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 30060  00C5CE  0E00               	movlw	0
 30061  00C5D0  6FF4               	movwf	_MSDRetryAttempt& (0+255),b
 30062                           
 30063                           ; BSR set to: 1
 30064                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 30065  00C5D2  0E03               	movlw	3
 30066  00C5D4  0102               	movlb	2	; () banked
 30067  00C5D6  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 30068  00C5D8  B4D8               	btfsc	status,2,c
 30069  00C5DA  D008               	goto	l583
 30070                           
 30071                           ; BSR set to: 2
 30072                           ;usb_device_msd.c: 421: {
 30073                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 30074  00C5DC  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 30075  00C5DE  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 30076  00C5E0  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 30077  00C5E2  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 30078                           
 30079                           ; BSR set to: 2
 30080                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 30081  00C5E4  0E00               	movlw	0
 30082  00C5E6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30083                           
 30084                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 30085  00C5E8  0E00               	movlw	0
 30086  00C5EA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30087  00C5EC                     l583:
 30088                           
 30089                           ; BSR set to: 2
 30090                           ;usb_device_msd.c: 425: }
 30091                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 30092                           
 30093                           ; BSR set to: 2
 30094  00C5EC  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 30095  00C5EE  D002               	goto	l584
 30096                           
 30097                           ; BSR set to: 2
 30098                           ;usb_device_msd.c: 432: {
 30099                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 30100  00C5F0  0E01               	movlw	1
 30101  00C5F2  D001               	goto	L21
 30102  00C5F4                     l584:
 30103                           
 30104                           ; BSR set to: 2
 30105                           ;usb_device_msd.c: 435: else
 30106                           ;usb_device_msd.c: 436: {
 30107                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 30108                           
 30109                           ; BSR set to: 2
 30110  00C5F4  0E02               	movlw	2
 30111  00C5F6                     L21:
 30112  00C5F6  6E54               	movwf	_MSD_State,c
 30113                           
 30114                           ; BSR set to: 2
 30115                           ;usb_device_msd.c: 438: }
 30116                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 30117                           
 30118                           ; BSR set to: 2
 30119  00C5F8  5149               	movf	(_gblCBW+8)& (0+255),w,b
 30120  00C5FA  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 30121  00C5FC  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 30122  00C5FE  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 30123  00C600  B4D8               	btfsc	status,2,c
 30124  00C602  D002               	goto	l586
 30125                           
 30126                           ; BSR set to: 2
 30127                           ;usb_device_msd.c: 443: {
 30128                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 30129  00C604  0E00               	movlw	0
 30130  00C606  D001               	goto	L22
 30131  00C608                     l586:
 30132                           
 30133                           ; BSR set to: 2
 30134                           ;usb_device_msd.c: 446: else
 30135                           ;usb_device_msd.c: 447: {
 30136                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 30137                           
 30138                           ; BSR set to: 2
 30139  00C608  0E01               	movlw	1
 30140  00C60A                     L22:
 30141  00C60A  6E51               	movwf	_MSDHostNoData,c
 30142                           
 30143                           ; BSR set to: 2
 30144                           ;usb_device_msd.c: 449: }
 30145                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 30146                           
 30147                           ; BSR set to: 2
 30148  00C60C  C250  F053         	movff	_gblCBW+15,_MSDCommandState
 30149                           
 30150                           ;usb_device_msd.c: 454: }
 30151  00C610  D08F               	goto	l590
 30152  00C612                     l582:
 30153                           
 30154                           ;usb_device_msd.c: 455: else
 30155                           ;usb_device_msd.c: 456: {
 30156                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 30157                           
 30158                           ; BSR set to: 2
 30159  00C612  0E01               	movlw	1
 30160  00C614  0100               	movlb	0	; () banked
 30161  00C616  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30162  00C618  0E02               	movlw	2
 30163  00C61A  EC77  F073         	call	_USBStallEndpoint
 30164                           
 30165                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 30166  00C61E  0E00               	movlw	0
 30167  00C620  0100               	movlb	0	; () banked
 30168  00C622  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30169  00C624  0E02               	movlw	2
 30170  00C626  EC77  F073         	call	_USBStallEndpoint
 30171                           
 30172                           ;usb_device_msd.c: 462: }
 30173                           ;usb_device_msd.c: 463: }
 30174  00C62A  D082               	goto	l590
 30175  00C62C                     l581:
 30176  00C62C                     l14449:
 30177                           
 30178                           ;usb_device_msd.c: 464: else
 30179                           ;usb_device_msd.c: 465: {
 30180                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 30181  00C62C  0E01               	movlw	1
 30182  00C62E  0100               	movlb	0	; () banked
 30183  00C630  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30184  00C632  0E02               	movlw	2
 30185  00C634  EC77  F073         	call	_USBStallEndpoint
 30186                           
 30187                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 30188  00C638  0E00               	movlw	0
 30189  00C63A  0100               	movlb	0	; () banked
 30190  00C63C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30191  00C63E  0E02               	movlw	2
 30192  00C640  EC77  F073         	call	_USBStallEndpoint
 30193                           
 30194                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 30195  00C644  0E00               	movlw	0
 30196  00C646  0101               	movlb	1	; () banked
 30197  00C648  6FF1               	movwf	_MSDCBWValid& (0+255),b
 30198                           
 30199                           ; BSR set to: 1
 30200                           ;usb_device_msd.c: 474: }
 30201                           ;usb_device_msd.c: 475: }
 30202                           ;usb_device_msd.c: 476: break;
 30203                           
 30204                           ; BSR set to: 1
 30205  00C64A  D072               	goto	l590
 30206  00C64C                     
 30207                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 30208                           
 30209                           ; BSR set to: 1
 30210  00C64C  ECFC  F06E         	call	_MSDProcessCommand	;wreg free
 30211  00C650  0AFF               	xorlw	255
 30212  00C652  A4D8               	btfss	status,2,c
 30213  00C654  D06D               	goto	l590
 30214  00C656  D011               	goto	l595
 30215  00C658                     
 30216                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 30217  00C658  ECFC  F06E         	call	_MSDProcessCommand	;wreg free
 30218  00C65C  0AFF               	xorlw	255
 30219  00C65E  A4D8               	btfss	status,2,c
 30220  00C660  D067               	goto	l590
 30221                           
 30222                           ;usb_device_msd.c: 487: {
 30223                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 30224  00C662  010D               	movlb	13	; () banked
 30225  00C664  518C               	movf	140,w,b	;volatile
 30226  00C666  A4D8               	btfss	status,2,c
 30227  00C668  D008               	goto	l595
 30228                           
 30229                           ; BSR set to: 13
 30230  00C66A  5188               	movf	136,w,b	;volatile
 30231  00C66C  1189               	iorwf	137,w,b	;volatile
 30232  00C66E  118A               	iorwf	138,w,b	;volatile
 30233  00C670  118B               	iorwf	139,w,b	;volatile
 30234  00C672  B4D8               	btfsc	status,2,c
 30235  00C674  D002               	goto	l595
 30236                           
 30237                           ; BSR set to: 13
 30238                           ;usb_device_msd.c: 490: {
 30239                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 30240  00C676  0E02               	movlw	2
 30241  00C678  6F8C               	movwf	140,b	;volatile
 30242  00C67A                     l595:
 30243                           
 30244                           ; BSR set to: 13
 30245                           ;usb_device_msd.c: 492: }
 30246                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 30247  00C67A  0E03               	movlw	3
 30248  00C67C  D03D               	goto	L20
 30249  00C67E                     
 30250                           ; BSR set to: 13
 30251  00C67E  C03F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2694
 30252  00C682  C040  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2694+1
 30253  00C686  0100               	movlb	0	; () banked
 30254  00C688  51AD               	movf	_MSDTasks$2694& (0+255),w,b
 30255  00C68A  11AE               	iorwf	(_MSDTasks$2694+1)& (0+255),w,b
 30256  00C68C  B4D8               	btfsc	status,2,c
 30257  00C68E  D00A               	goto	l597
 30258                           
 30259                           ; BSR set to: 0
 30260  00C690  C03F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2695
 30261  00C694  C040  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2695+1
 30262                           
 30263                           ; BSR set to: 0
 30264                           
 30265                           ; BSR set to: 0
 30266                           
 30267                           ; BSR set to: 0
 30268                           
 30269                           ; BSR set to: 0
 30270  00C698  C0AF  FFD9         	movff	_MSDTasks$2695,fsr2l
 30271  00C69C  C0B0  FFDA         	movff	_MSDTasks$2695+1,fsr2h
 30272  00C6A0  BEDF               	btfsc	indf2,7,c
 30273  00C6A2  D046               	goto	l590
 30274  00C6A4                     l597:
 30275                           
 30276                           ; BSR set to: 0
 30277                           ;usb_device_msd.c: 502: }
 30278                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 30279                           
 30280                           ; BSR set to: 0
 30281  00C6A4  0E01               	movlw	1
 30282  00C6A6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 30283  00C6A8  0E80               	movlw	128
 30284  00C6AA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 30285  00C6AC  0E0D               	movlw	13
 30286  00C6AE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 30287  00C6B0  0E0D               	movlw	13
 30288  00C6B2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 30289  00C6B4  0E02               	movlw	2
 30290  00C6B6  EC80  F074         	call	_USBTransferOnePacket
 30291  00C6BA  C060  F045         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 30292  00C6BE  C061  F046         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 30293                           
 30294                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 30295  00C6C2  5047               	movf	_USBMSDOutHandle,w,c
 30296  00C6C4  1048               	iorwf	_USBMSDOutHandle+1,w,c
 30297  00C6C6  B4D8               	btfsc	status,2,c
 30298  00C6C8  D006               	goto	u12560
 30299  00C6CA  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 30300  00C6CE  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 30301  00C6D2  BEDF               	btfsc	indf2,7,c
 30302  00C6D4  D010               	goto	l606
 30303  00C6D6                     u12560:
 30304                           
 30305                           ;usb_device_msd.c: 509: {
 30306                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 30307  00C6D6  0E00               	movlw	0
 30308  00C6D8  0100               	movlb	0	; () banked
 30309  00C6DA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 30310  00C6DC  0E40               	movlw	64
 30311  00C6DE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 30312  00C6E0  0E0D               	movlw	13
 30313  00C6E2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 30314  00C6E4  0E40               	movlw	64
 30315  00C6E6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 30316  00C6E8  0E02               	movlw	2
 30317  00C6EA  EC80  F074         	call	_USBTransferOnePacket
 30318  00C6EE  C060  F047         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 30319  00C6F2  C061  F048         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 30320  00C6F6                     l606:
 30321                           
 30322                           ;usb_device_msd.c: 511: }
 30323                           ;usb_device_msd.c: 512: MSD_State=0x00;
 30324  00C6F6  0E00               	movlw	0
 30325  00C6F8                     L20:
 30326  00C6F8  6E54               	movwf	_MSD_State,c
 30327                           
 30328                           ;usb_device_msd.c: 513: break;
 30329  00C6FA  D01A               	goto	l590
 30330  00C6FC                     
 30331                           ;usb_device_msd.c: 518: MSD_State=0x00;
 30332  00C6FC  0E00               	movlw	0
 30333  00C6FE  6E54               	movwf	_MSD_State,c
 30334                           
 30335                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 30336  00C700  0E02               	movlw	2
 30337  00C702  010D               	movlb	13	; () banked
 30338  00C704  6F8C               	movwf	140,b	;volatile
 30339                           
 30340                           ; BSR set to: 13
 30341                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 30342  00C706  0E00               	movlw	0
 30343  00C708  0100               	movlb	0	; () banked
 30344  00C70A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30345  00C70C  0E02               	movlw	2
 30346  00C70E  EC77  F073         	call	_USBStallEndpoint
 30347                           
 30348                           ;usb_device_msd.c: 521: }
 30349  00C712  D00E               	goto	l590
 30350  00C714                     l574:
 30351  00C714  5054               	movf	_MSD_State,w,c
 30352                           
 30353                           ; Switch size 1, requested type "space"
 30354                           ; Number of cases is 4, Range of values is 0 to 3
 30355                           ; switch strategies available:
 30356                           ; Name         Instructions Cycles
 30357                           ; simple_byte           13     7 (average)
 30358                           ;	Chosen strategy is simple_byte
 30359  00C716  0A00               	xorlw	0	; case 0
 30360  00C718  B4D8               	btfsc	status,2,c
 30361  00C71A  D6E7               	goto	l575
 30362  00C71C  0A01               	xorlw	1	; case 1
 30363  00C71E  B4D8               	btfsc	status,2,c
 30364  00C720  D795               	goto	l591
 30365  00C722  0A03               	xorlw	3	; case 2
 30366  00C724  B4D8               	btfsc	status,2,c
 30367  00C726  D798               	goto	l593
 30368  00C728  0A01               	xorlw	1	; case 3
 30369  00C72A  B4D8               	btfsc	status,2,c
 30370  00C72C  D7A8               	goto	l596
 30371  00C72E  D7E6               	goto	l609
 30372  00C730                     l590:
 30373                           
 30374                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 30375  00C730  88A0               	bsf	4000,4,c	;volatile
 30376                           
 30377                           ;usb_device_msd.c: 526: return MSD_State;
 30378                           ;	Return value of _MSDTasks is never used
 30379  00C732  0012               	return		;funcret
 30380  00C734                     __end_of_MSDTasks:
 30381                           	opt stack 0
 30382                           tblptru	equ	0xFF8
 30383                           tblptrh	equ	0xFF7
 30384                           tblptrl	equ	0xFF6
 30385                           tablat	equ	0xFF5
 30386                           prodh	equ	0xFF4
 30387                           prodl	equ	0xFF3
 30388                           intcon	equ	0xFF2
 30389                           intcon2	equ	0xFF1
 30390                           intcon3	equ	0xFF0
 30391                           postinc0	equ	0xFEE
 30392                           wreg	equ	0xFE8
 30393                           indf1	equ	0xFE7
 30394                           postinc1	equ	0xFE6
 30395                           postdec1	equ	0xFE5
 30396                           plusw1	equ	0xFE3
 30397                           fsr1h	equ	0xFE2
 30398                           fsr1l	equ	0xFE1
 30399                           indf2	equ	0xFDF
 30400                           postinc2	equ	0xFDE
 30401                           postdec2	equ	0xFDD
 30402                           plusw2	equ	0xFDB
 30403                           fsr2h	equ	0xFDA
 30404                           fsr2l	equ	0xFD9
 30405                           status	equ	0xFD8
 30406                           
 30407 ;; *************** function _MSDProcessCommand *****************
 30408 ;; Defined at:
 30409 ;;		line 553 in file "usb_device_msd.c"
 30410 ;; Parameters:    Size  Location     Type
 30411 ;;		None
 30412 ;; Auto vars:     Size  Location     Type
 30413 ;;		None
 30414 ;; Return value:  Size  Location     Type
 30415 ;;                  1    wreg      unsigned char 
 30416 ;; Registers used:
 30417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30418 ;; Tracked objects:
 30419 ;;		On entry : 0/0
 30420 ;;		On exit  : 0/0
 30421 ;;		Unchanged: 0/0
 30422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30425 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30427 ;;Total ram usage:        5 bytes
 30428 ;; Hardware stack levels used:    1
 30429 ;; Hardware stack levels required when called:   19
 30430 ;; This function calls:
 30431 ;;		_ExternalFlash_MediaDetect
 30432 ;;		_ExternalFlash_MediaInitialize
 30433 ;;		_MSDProcessCommandMediaAbsent
 30434 ;;		_MSDProcessCommandMediaPresent
 30435 ;; This function is called by:
 30436 ;;		_MSDTasks
 30437 ;; This function uses a non-reentrant model
 30438 ;;
 30439                           
 30440                           	psect	text137
 30441  00DDF8                     __ptext137:
 30442                           	opt stack 0
 30443  00DDF8                     _MSDProcessCommand:
 30444                           	opt stack 9
 30445                           
 30446                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 30447                           
 30448                           ;incstack = 0
 30449  00DDF8  C2D4  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 30450  00DDFC  C2D5  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 30451  00DE00  EE22  F0C8         	lfsr	2,_LUN+9
 30452  00DE04  D801               	call	u11228
 30453  00DE06  D00A               	goto	u11229
 30454  00DE08                     u11228:
 30455  00DE08  0005               	push	
 30456  00DE0A  6EFA               	movwf	pclath,c
 30457  00DE0C  50DE               	movf	postinc2,w,c
 30458  00DE0E  6EFD               	movwf	tosl,c
 30459  00DE10  50DE               	movf	postinc2,w,c
 30460  00DE12  6EFE               	movwf	tosh,c
 30461  00DE14  50DE               	movf	postinc2,w,c
 30462  00DE16  6EFF               	movwf	tosu,c
 30463  00DE18  50FA               	movf	pclath,w,c
 30464  00DE1A  0012               	return		;indir
 30465  00DE1C                     u11229:
 30466  00DE1C  0900               	iorlw	0
 30467  00DE1E  B4D8               	btfsc	status,2,c
 30468  00DE20  D00C               	goto	u11240
 30469  00DE22  0102               	movlb	2	; () banked
 30470  00DE24  514E               	movf	(_gblCBW+13)& (0+255),w,b
 30471  00DE26  0D01               	mullw	1
 30472  00DE28  0EF2               	movlw	low _SoftDetach
 30473  00DE2A  24F3               	addwf	prodl,w,c
 30474  00DE2C  6ED9               	movwf	fsr2l,c
 30475  00DE2E  0E01               	movlw	high _SoftDetach
 30476  00DE30  20F4               	addwfc	prodh,w,c
 30477  00DE32  6EDA               	movwf	fsr2h,c
 30478  00DE34  04DE               	decf	postinc2,w,c
 30479  00DE36  A4D8               	btfss	status,2,c
 30480  00DE38  D01D               	goto	l612
 30481  00DE3A                     u11240:
 30482                           
 30483                           ;usb_device_msd.c: 558: {
 30484                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 30485                           
 30486                           ; BSR set to: 2
 30487  00DE3A  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30488  00DE3E  0E01               	movlw	1
 30489  00DE40  0100               	movlb	0	; () banked
 30490  00DE42  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30491  00DE44  0E00               	movlw	0
 30492  00DE46  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30493  00DE48  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30494  00DE4A  D003               	goto	u11254
 30495  00DE4C                     u11255:
 30496  00DE4C  90D8               	bcf	status,0,c
 30497  00DE4E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30498  00DE50  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30499  00DE52                     u11254:
 30500  00DE52  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30501  00DE54  D7FB               	goto	u11255
 30502  00DE56  0100               	movlb	0	; () banked
 30503  00DE58  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 30504  00DE5A  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 30505  00DE5C  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 30506  00DE5E  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 30507  00DE60  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 30508  00DE62  0102               	movlb	2	; () banked
 30509  00DE64  17B6               	andwf	_gblMediaPresent& (0+255),f,b
 30510  00DE66  0100               	movlb	0	; () banked
 30511  00DE68  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 30512  00DE6A  0102               	movlb	2	; () banked
 30513  00DE6C  17B7               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 30514                           
 30515                           ; BSR set to: 2
 30516                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 30517  00DE6E  ECEB  F08B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 30518                           
 30519                           ;usb_device_msd.c: 563: }
 30520  00DE72  D058               	goto	l619
 30521  00DE74                     l612:
 30522                           
 30523                           ;usb_device_msd.c: 564: else
 30524                           ;usb_device_msd.c: 565: {
 30525                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 30526  00DE74  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30527  00DE78  0E01               	movlw	1
 30528  00DE7A  0100               	movlb	0	; () banked
 30529  00DE7C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30530  00DE7E  0E00               	movlw	0
 30531  00DE80  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30532  00DE82  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30533  00DE84  D003               	goto	u11264
 30534  00DE86                     u11265:
 30535  00DE86  90D8               	bcf	status,0,c
 30536  00DE88  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30537  00DE8A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30538  00DE8C                     u11264:
 30539  00DE8C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30540  00DE8E  D7FB               	goto	u11265
 30541  00DE90  0102               	movlb	2	; () banked
 30542  00DE92  51B6               	movf	_gblMediaPresent& (0+255),w,b
 30543  00DE94  0100               	movlb	0	; () banked
 30544  00DE96  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 30545  00DE98  0102               	movlb	2	; () banked
 30546  00DE9A  51B7               	movf	(_gblMediaPresent+1)& (0+255),w,b
 30547  00DE9C  0100               	movlb	0	; () banked
 30548  00DE9E  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 30549  00DEA0  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 30550  00DEA2  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 30551  00DEA4  A4D8               	btfss	status,2,c
 30552  00DEA6  D03C               	goto	l616
 30553                           
 30554                           ; BSR set to: 0
 30555                           ;usb_device_msd.c: 568: {
 30556                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 30557  00DEA8  C2D4  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 30558  00DEAC  C2D5  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 30559  00DEB0  D801               	call	u11288
 30560  00DEB2  D00B               	goto	u11289
 30561  00DEB4                     u11288:
 30562  00DEB4  0005               	push	
 30563  00DEB6  6EFA               	movwf	pclath,c
 30564  00DEB8  0102               	movlb	2	; () banked
 30565  00DEBA  51BF               	movf	_LUN& (0+255),w,b
 30566  00DEBC  6EFD               	movwf	tosl,c
 30567  00DEBE  51C0               	movf	(_LUN+1)& (0+255),w,b
 30568  00DEC0  6EFE               	movwf	tosh,c
 30569  00DEC2  51C1               	movf	(_LUN+2)& (0+255),w,b
 30570  00DEC4  6EFF               	movwf	tosu,c
 30571  00DEC6  50FA               	movf	pclath,w,c
 30572  00DEC8  0012               	return		;indir
 30573  00DECA                     u11289:
 30574  00DECA  0100               	movlb	0	; () banked
 30575  00DECC  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 30576  00DECE  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 30577  00DED0  B4D8               	btfsc	status,2,c
 30578  00DED2  D023               	goto	l617
 30579                           
 30580                           ; BSR set to: 0
 30581                           ;usb_device_msd.c: 571: {
 30582                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 30583  00DED4  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30584  00DED8  0E01               	movlw	1
 30585  00DEDA  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30586  00DEDC  0E00               	movlw	0
 30587  00DEDE  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30588  00DEE0  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30589  00DEE2  D003               	goto	u11304
 30590  00DEE4                     u11305:
 30591  00DEE4  90D8               	bcf	status,0,c
 30592  00DEE6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30593  00DEE8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30594  00DEEA                     u11304:
 30595  00DEEA  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30596  00DEEC  D7FB               	goto	u11305
 30597  00DEEE  0100               	movlb	0	; () banked
 30598  00DEF0  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 30599  00DEF2  0102               	movlb	2	; () banked
 30600  00DEF4  13B6               	iorwf	_gblMediaPresent& (0+255),f,b
 30601  00DEF6  0100               	movlb	0	; () banked
 30602  00DEF8  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 30603  00DEFA  0102               	movlb	2	; () banked
 30604  00DEFC  13B7               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 30605                           
 30606                           ; BSR set to: 2
 30607                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 30608  00DEFE  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30609  00DF00  0BF0               	andlw	-16
 30610  00DF02  0906               	iorlw	6
 30611  00DF04  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30612                           
 30613                           ; BSR set to: 2
 30614                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 30615  00DF06  0E28               	movlw	40
 30616  00DF08  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30617                           
 30618                           ; BSR set to: 2
 30619                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 30620  00DF0A  0E00               	movlw	0
 30621  00DF0C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30622                           
 30623                           ; BSR set to: 2
 30624                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 30625  00DF0E  0E01               	movlw	1
 30626  00DF10  010D               	movlb	13	; () banked
 30627  00DF12  6F8C               	movwf	140,b	;volatile
 30628                           
 30629                           ; BSR set to: 13
 30630                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 30631  00DF14  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30632                           
 30633                           ;usb_device_msd.c: 589: }
 30634  00DF18  D005               	goto	l619
 30635  00DF1A                     l617:
 30636                           
 30637                           ;usb_device_msd.c: 590: else
 30638                           ;usb_device_msd.c: 591: {
 30639                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 30640  00DF1A  ECEB  F08B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 30641                           
 30642                           ;usb_device_msd.c: 594: }
 30643                           ;usb_device_msd.c: 595: }
 30644  00DF1E  D002               	goto	l619
 30645  00DF20                     l616:
 30646                           
 30647                           ;usb_device_msd.c: 596: else
 30648                           ;usb_device_msd.c: 597: {
 30649                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 30650  00DF20  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30651  00DF24                     l619:
 30652                           
 30653                           ;usb_device_msd.c: 601: }
 30654                           ;usb_device_msd.c: 602: }
 30655                           ;usb_device_msd.c: 604: return MSDCommandState;
 30656  00DF24  5053               	movf	_MSDCommandState,w,c
 30657  00DF26  0012               	return	
 30658  00DF28                     __end_of_MSDProcessCommand:
 30659                           	opt stack 0
 30660                           tosu	equ	0xFFF
 30661                           tosh	equ	0xFFE
 30662                           tosl	equ	0xFFD
 30663                           pclath	equ	0xFFA
 30664                           tblptru	equ	0xFF8
 30665                           tblptrh	equ	0xFF7
 30666                           tblptrl	equ	0xFF6
 30667                           tablat	equ	0xFF5
 30668                           prodh	equ	0xFF4
 30669                           prodl	equ	0xFF3
 30670                           intcon	equ	0xFF2
 30671                           intcon2	equ	0xFF1
 30672                           intcon3	equ	0xFF0
 30673                           postinc0	equ	0xFEE
 30674                           wreg	equ	0xFE8
 30675                           indf1	equ	0xFE7
 30676                           postinc1	equ	0xFE6
 30677                           postdec1	equ	0xFE5
 30678                           plusw1	equ	0xFE3
 30679                           fsr1h	equ	0xFE2
 30680                           fsr1l	equ	0xFE1
 30681                           indf2	equ	0xFDF
 30682                           postinc2	equ	0xFDE
 30683                           postdec2	equ	0xFDD
 30684                           plusw2	equ	0xFDB
 30685                           fsr2h	equ	0xFDA
 30686                           fsr2l	equ	0xFD9
 30687                           status	equ	0xFD8
 30688                           
 30689 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 30690 ;; Defined at:
 30691 ;;		line 635 in file "usb_device_msd.c"
 30692 ;; Parameters:    Size  Location     Type
 30693 ;;		None
 30694 ;; Auto vars:     Size  Location     Type
 30695 ;;		None
 30696 ;; Return value:  Size  Location     Type
 30697 ;;                  1    wreg      void 
 30698 ;; Registers used:
 30699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30700 ;; Tracked objects:
 30701 ;;		On entry : 0/0
 30702 ;;		On exit  : 0/0
 30703 ;;		Unchanged: 0/0
 30704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30709 ;;Total ram usage:        0 bytes
 30710 ;; Hardware stack levels used:    1
 30711 ;; Hardware stack levels required when called:   18
 30712 ;; This function calls:
 30713 ;;		_MSDErrorHandler
 30714 ;;		_MSDProcessCommandMediaPresent
 30715 ;;		_ResetSenseData
 30716 ;; This function is called by:
 30717 ;;		_MSDProcessCommand
 30718 ;; This function uses a non-reentrant model
 30719 ;;
 30720                           
 30721                           	psect	text138
 30722  0117D6                     __ptext138:
 30723                           	opt stack 0
 30724  0117D6                     _MSDProcessCommandMediaAbsent:
 30725                           	opt stack 9
 30726                           
 30727                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 30728                           
 30729                           ;incstack = 0
 30730  0117D6  D01D               	goto	l623
 30731  0117D8                     
 30732                           ;usb_device_msd.c: 646: ResetSenseData();
 30733  0117D8  ECF7  F08A         	call	_ResetSenseData	;wreg free
 30734                           
 30735                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 30736  0117DC  0102               	movlb	2	; () banked
 30737  0117DE  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30738  0117E0  0BF0               	andlw	-16
 30739  0117E2  0902               	iorlw	2
 30740  0117E4  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30741                           
 30742                           ; BSR set to: 2
 30743                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 30744  0117E6  0E3A               	movlw	58
 30745  0117E8  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30746                           
 30747                           ; BSR set to: 2
 30748                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 30749  0117EA  0E00               	movlw	0
 30750  0117EC  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30751                           
 30752                           ; BSR set to: 2
 30753                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 30754  0117EE  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30755                           
 30756                           ;usb_device_msd.c: 655: break;
 30757  0117F2  0012               	return	
 30758  0117F4                     
 30759                           ;usb_device_msd.c: 658: case 0x00:
 30760                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 30761  0117F4  0E01               	movlw	1
 30762  0117F6  010D               	movlb	13	; () banked
 30763  0117F8  6F8C               	movwf	140,b	;volatile
 30764                           
 30765                           ; BSR set to: 13
 30766                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 30767  0117FA  6853               	setf	_MSDCommandState,c
 30768                           
 30769                           ;usb_device_msd.c: 665: break;
 30770  0117FC  0012               	return	
 30771  0117FE                     
 30772                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 30773                           
 30774                           ; BSR set to: 13
 30775  0117FE  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30776                           
 30777                           ;usb_device_msd.c: 671: break;
 30778  011802  0012               	return	
 30779  011804                     
 30780                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 30781  011804  EC7F  F051         	call	_MSDProcessCommandMediaPresent	;wreg free
 30782                           
 30783                           ;usb_device_msd.c: 677: break;
 30784  011808  0012               	return	
 30785  01180A                     
 30786                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 30787  01180A  0E7F               	movlw	127
 30788  01180C  ECDC  F071         	call	_MSDErrorHandler
 30789                           
 30790                           ;usb_device_msd.c: 685: }
 30791                           
 30792                           ;usb_device_msd.c: 684: break;
 30793  011810  0012               	return	
 30794  011812                     l623:
 30795  011812  5053               	movf	_MSDCommandState,w,c
 30796                           
 30797                           ; Switch size 1, requested type "space"
 30798                           ; Number of cases is 5, Range of values is 0 to 253
 30799                           ; switch strategies available:
 30800                           ; Name         Instructions Cycles
 30801                           ; simple_byte           16     9 (average)
 30802                           ;	Chosen strategy is simple_byte
 30803  011814  0A00               	xorlw	0	; case 0
 30804  011816  B4D8               	btfsc	status,2,c
 30805  011818  D7ED               	goto	l626
 30806  01181A  0A03               	xorlw	3	; case 3
 30807  01181C  B4D8               	btfsc	status,2,c
 30808  01181E  D7DC               	goto	l624
 30809  011820  0A11               	xorlw	17	; case 18
 30810  011822  B4D8               	btfsc	status,2,c
 30811  011824  D7EC               	goto	l628
 30812  011826  0A0C               	xorlw	12	; case 30
 30813  011828  B4D8               	btfsc	status,2,c
 30814  01182A  D7E4               	goto	l626
 30815  01182C  0AE3               	xorlw	227	; case 253
 30816  01182E  B4D8               	btfsc	status,2,c
 30817  011830  D7E9               	goto	l629
 30818  011832  D7EB               	goto	l630
 30819  011834                     __end_of_MSDProcessCommandMediaAbsent:
 30820                           	opt stack 0
 30821                           tosu	equ	0xFFF
 30822                           tosh	equ	0xFFE
 30823                           tosl	equ	0xFFD
 30824                           pclath	equ	0xFFA
 30825                           tblptru	equ	0xFF8
 30826                           tblptrh	equ	0xFF7
 30827                           tblptrl	equ	0xFF6
 30828                           tablat	equ	0xFF5
 30829                           prodh	equ	0xFF4
 30830                           prodl	equ	0xFF3
 30831                           intcon	equ	0xFF2
 30832                           intcon2	equ	0xFF1
 30833                           intcon3	equ	0xFF0
 30834                           postinc0	equ	0xFEE
 30835                           wreg	equ	0xFE8
 30836                           indf1	equ	0xFE7
 30837                           postinc1	equ	0xFE6
 30838                           postdec1	equ	0xFE5
 30839                           plusw1	equ	0xFE3
 30840                           fsr1h	equ	0xFE2
 30841                           fsr1l	equ	0xFE1
 30842                           indf2	equ	0xFDF
 30843                           postinc2	equ	0xFDE
 30844                           postdec2	equ	0xFDD
 30845                           plusw2	equ	0xFDB
 30846                           fsr2h	equ	0xFDA
 30847                           fsr2l	equ	0xFD9
 30848                           status	equ	0xFD8
 30849                           
 30850 ;; *************** function _MSDProcessCommandMediaPresent *****************
 30851 ;; Defined at:
 30852 ;;		line 712 in file "usb_device_msd.c"
 30853 ;; Parameters:    Size  Location     Type
 30854 ;;		None
 30855 ;; Auto vars:     Size  Location     Type
 30856 ;;  capacity        4   66[BANK0 ] struct .
 30857 ;;  sectorSize      4   62[BANK0 ] struct .
 30858 ;;  i               1   70[BANK0 ] unsigned char 
 30859 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 30860 ;; Return value:  Size  Location     Type
 30861 ;;                  1    wreg      void 
 30862 ;; Registers used:
 30863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30864 ;; Tracked objects:
 30865 ;;		On entry : 0/0
 30866 ;;		On exit  : 0/0
 30867 ;;		Unchanged: 0/0
 30868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30870 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30872 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30873 ;;Total ram usage:       14 bytes
 30874 ;; Hardware stack levels used:    1
 30875 ;; Hardware stack levels required when called:   17
 30876 ;; This function calls:
 30877 ;;		_ExternalFlash_CapacityRead
 30878 ;;		_ExternalFlash_SectorSizeRead
 30879 ;;		_ExternalFlash_WriteProtectStateGet
 30880 ;;		_MSDCheckForErrorCases
 30881 ;;		_MSDComputeDeviceInAndResidue
 30882 ;;		_MSDErrorHandler
 30883 ;;		_MSDReadHandler
 30884 ;;		_MSDWriteHandler
 30885 ;;		_ResetSenseData
 30886 ;;		_USBTransferOnePacket
 30887 ;;		_memcpy
 30888 ;; This function is called by:
 30889 ;;		_MSDProcessCommand
 30890 ;;		_MSDProcessCommandMediaAbsent
 30891 ;; This function uses a non-reentrant model
 30892 ;;
 30893                           
 30894                           	psect	text139
 30895  00A2FE                     __ptext139:
 30896                           	opt stack 0
 30897  00A2FE                     _MSDProcessCommandMediaPresent:
 30898                           	opt stack 10
 30899                           
 30900                           ;usb_device_msd.c: 714: uint8_t i;
 30901                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 30902                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 30903                           
 30904                           ;incstack = 0
 30905  00A2FE  D1B8               	goto	l634
 30906  00A300                     
 30907                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 30908  00A300  ECB2  F067         	call	_MSDReadHandler	;wreg free
 30909  00A304  0900               	iorlw	0
 30910  00A306  A4D8               	btfss	status,2,c
 30911  00A308  0012               	return	
 30912                           
 30913                           ;usb_device_msd.c: 726: {
 30914                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 30915  00A30A  6853               	setf	_MSDCommandState,c
 30916                           
 30917                           ;usb_device_msd.c: 728: }
 30918                           ;usb_device_msd.c: 729: break;
 30919  00A30C  0012               	return	
 30920  00A30E                     
 30921                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 30922  00A30E  EC47  F05D         	call	_MSDWriteHandler	;wreg free
 30923  00A312  0900               	iorlw	0
 30924  00A314  A4D8               	btfss	status,2,c
 30925  00A316  0012               	return	
 30926                           
 30927                           ;usb_device_msd.c: 737: {
 30928                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 30929  00A318  6853               	setf	_MSDCommandState,c
 30930                           
 30931                           ;usb_device_msd.c: 739: }
 30932                           ;usb_device_msd.c: 740: break;
 30933  00A31A  0012               	return	
 30934  00A31C                     
 30935                           ;usb_device_msd.c: 743: {
 30936                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 30937  00A31C  0451               	decf	_MSDHostNoData,w,c
 30938  00A31E  A4D8               	btfss	status,2,c
 30939  00A320  D002               	goto	l641
 30940                           
 30941                           ;usb_device_msd.c: 749: {
 30942                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 30943  00A322  6853               	setf	_MSDCommandState,c
 30944                           
 30945                           ;usb_device_msd.c: 751: break;
 30946  00A324  0012               	return	
 30947  00A326                     l641:
 30948                           
 30949                           ;usb_device_msd.c: 752: }
 30950                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 30951  00A326  C253  F044         	movff	_gblCBW+18,_TransferLength+1
 30952                           
 30953                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 30954  00A32A  C254  F043         	movff	_gblCBW+19,_TransferLength
 30955                           
 30956                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 30957  00A32E  C043  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 30958  00A332  C044  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 30959  00A336  0100               	movlb	0	; () banked
 30960  00A338  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30961  00A33A  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30962  00A33C  EC83  F077         	call	_MSDCheckForErrorCases	;wreg free
 30963  00A340  0900               	iorlw	0
 30964  00A342  A4D8               	btfss	status,2,c
 30965  00A344  0012               	return	
 30966                           
 30967                           ;usb_device_msd.c: 762: }
 30968                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 30969                           
 30970                           ;usb_device_msd.c: 760: {
 30971                           ;usb_device_msd.c: 761: break;
 30972  00A346  0E00               	movlw	0
 30973  00A348  0100               	movlb	0	; () banked
 30974  00A34A  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30975  00A34C  0E24               	movlw	36
 30976  00A34E  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30977  00A350  ECF9  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30978                           
 30979                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 30980  00A354  0E00               	movlw	0
 30981  00A356  0100               	movlb	0	; () banked
 30982  00A358  6F60               	movwf	memcpy@d1& (0+255),b
 30983  00A35A  0E06               	movlw	6
 30984  00A35C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30985  00A35E  0EDD               	movlw	low _inq_resp
 30986  00A360  6F62               	movwf	memcpy@s1& (0+255),b
 30987  00A362  0E93               	movlw	high _inq_resp
 30988  00A364  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30989  00A366  0E00               	movlw	0
 30990  00A368  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30991  00A36A  0E24               	movlw	36
 30992  00A36C  6F64               	movwf	memcpy@n& (0+255),b
 30993  00A36E  ECBB  F08B         	call	_memcpy	;wreg free
 30994                           
 30995                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 30996  00A372  0EFD               	movlw	253
 30997  00A374  6E53               	movwf	_MSDCommandState,c
 30998                           
 30999                           ;usb_device_msd.c: 773: break;
 31000  00A376  0012               	return	
 31001  00A378                     
 31002                           ;usb_device_msd.c: 776: {
 31003                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 31004                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 31005                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 31006  00A378  C2D4  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 31007  00A37C  C2D5  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 31008  00A380  EE22  F0C2         	lfsr	2,_LUN+3
 31009  00A384  D801               	call	u10108
 31010  00A386  D00A               	goto	u10109
 31011  00A388                     u10108:
 31012  00A388  0005               	push	
 31013  00A38A  6EFA               	movwf	pclath,c
 31014  00A38C  50DE               	movf	postinc2,w,c
 31015  00A38E  6EFD               	movwf	tosl,c
 31016  00A390  50DE               	movf	postinc2,w,c
 31017  00A392  6EFE               	movwf	tosh,c
 31018  00A394  50DE               	movf	postinc2,w,c
 31019  00A396  6EFF               	movwf	tosu,c
 31020  00A398  50FA               	movf	pclath,w,c
 31021  00A39A  0012               	return		;indir
 31022  00A39C                     u10109:
 31023  00A39C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 31024  00A3A0  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 31025  00A3A4  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 31026  00A3A8  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 31027                           
 31028                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 31029  00A3AC  C2D4  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 31030  00A3B0  C2D5  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 31031  00A3B4  EE22  F0C5         	lfsr	2,_LUN+6
 31032  00A3B8  D801               	call	u10118
 31033  00A3BA  D00A               	goto	u10119
 31034  00A3BC                     u10118:
 31035  00A3BC  0005               	push	
 31036  00A3BE  6EFA               	movwf	pclath,c
 31037  00A3C0  50DE               	movf	postinc2,w,c
 31038  00A3C2  6EFD               	movwf	tosl,c
 31039  00A3C4  50DE               	movf	postinc2,w,c
 31040  00A3C6  6EFE               	movwf	tosh,c
 31041  00A3C8  50DE               	movf	postinc2,w,c
 31042  00A3CA  6EFF               	movwf	tosu,c
 31043  00A3CC  50FA               	movf	pclath,w,c
 31044  00A3CE  0012               	return		;indir
 31045  00A3D0                     u10119:
 31046  00A3D0  0100               	movlb	0	; () banked
 31047  00A3D2  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 31048  00A3D6  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 31049  00A3DA  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 31050  00A3DC  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 31051                           
 31052                           ; BSR set to: 0
 31053                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 31054  00A3DE  EE26 F000          	lfsr	2,1536
 31055  00A3E2  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 31056                           
 31057                           ; BSR set to: 0
 31058                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 31059  00A3E6  EE26 F001          	lfsr	2,1537	;volatile
 31060  00A3EA  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 31061                           
 31062                           ; BSR set to: 0
 31063                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 31064  00A3EE  EE26 F002          	lfsr	2,1538	;volatile
 31065  00A3F2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 31066                           
 31067                           ; BSR set to: 0
 31068                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 31069  00A3F6  EE26 F003          	lfsr	2,1539	;volatile
 31070  00A3FA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 31071                           
 31072                           ; BSR set to: 0
 31073                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 31074  00A3FE  EE26 F004          	lfsr	2,1540	;volatile
 31075  00A402  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 31076                           
 31077                           ; BSR set to: 0
 31078                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 31079  00A406  EE26 F005          	lfsr	2,1541	;volatile
 31080  00A40A  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 31081                           
 31082                           ; BSR set to: 0
 31083                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 31084  00A40E  EE26 F006          	lfsr	2,1542	;volatile
 31085  00A412  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 31086                           
 31087                           ; BSR set to: 0
 31088                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 31089  00A416  EE26 F007          	lfsr	2,1543	;volatile
 31090  00A41A  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 31091                           
 31092                           ; BSR set to: 0
 31093                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 31094  00A41E  0E00               	movlw	0
 31095  00A420  6E44               	movwf	_TransferLength+1,c
 31096  00A422  0E08               	movlw	8
 31097  00A424  6E43               	movwf	_TransferLength,c
 31098                           
 31099                           ; BSR set to: 0
 31100                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 31101  00A426  0E00               	movlw	0
 31102  00A428  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31103  00A42A  0E08               	movlw	8
 31104  00A42C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31105  00A42E  ECF9  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31106                           
 31107                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 31108  00A432  0EFD               	movlw	253
 31109  00A434  6E53               	movwf	_MSDCommandState,c
 31110                           
 31111                           ;usb_device_msd.c: 802: break;
 31112  00A436  0012               	return	
 31113  00A438                     
 31114                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 31115  00A438  0451               	decf	_MSDHostNoData,w,c
 31116  00A43A  A4D8               	btfss	status,2,c
 31117  00A43C  D002               	goto	l645
 31118                           
 31119                           ;usb_device_msd.c: 812: {
 31120                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 31121  00A43E  6853               	setf	_MSDCommandState,c
 31122                           
 31123                           ;usb_device_msd.c: 814: break;
 31124  00A440  0012               	return	
 31125  00A442                     l645:
 31126                           
 31127                           ;usb_device_msd.c: 815: }
 31128                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 31129  00A442  0E00               	movlw	0
 31130  00A444  6E44               	movwf	_TransferLength+1,c
 31131  00A446  0E12               	movlw	18
 31132  00A448  6E43               	movwf	_TransferLength,c
 31133                           
 31134                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 31135  00A44A  0E00               	movlw	0
 31136  00A44C  0100               	movlb	0	; () banked
 31137  00A44E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31138  00A450  0E12               	movlw	18
 31139  00A452  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31140  00A454  ECF9  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31141                           
 31142                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 31143  00A458  0E00               	movlw	0
 31144  00A45A  0100               	movlb	0	; () banked
 31145  00A45C  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 31146  00A45E                     l12487:
 31147                           
 31148                           ; BSR set to: 0
 31149  00A45E  0E11               	movlw	17
 31150  00A460  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 31151  00A462  D001               	goto	l646
 31152  00A464  D014               	goto	u10140
 31153  00A466                     l646:
 31154                           
 31155                           ; BSR set to: 0
 31156                           ;usb_device_msd.c: 823: {
 31157                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 31158                           
 31159                           ; BSR set to: 0
 31160  00A466  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31161  00A468  0D01               	mullw	1
 31162  00A46A  0E60               	movlw	low _gblSenseData
 31163  00A46C  24F3               	addwf	prodl,w,c
 31164  00A46E  6ED9               	movwf	fsr2l,c
 31165  00A470  0E02               	movlw	high _gblSenseData
 31166  00A472  20F4               	addwfc	prodh,w,c
 31167  00A474  6EDA               	movwf	fsr2h,c
 31168  00A476  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31169  00A478  0D01               	mullw	1
 31170  00A47A  0E00               	movlw	0
 31171  00A47C  24F3               	addwf	prodl,w,c
 31172  00A47E  6EE1               	movwf	fsr1l,c
 31173  00A480  0E06               	movlw	6
 31174  00A482  20F4               	addwfc	prodh,w,c
 31175  00A484  6EE2               	movwf	fsr1h,c
 31176  00A486  CFDF FFE7          	movff	indf2,indf1
 31177                           
 31178                           ; BSR set to: 0
 31179  00A48A  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 31180  00A48C  D7E8               	goto	l12487
 31181  00A48E                     u10140:
 31182                           
 31183                           ; BSR set to: 0
 31184                           ;usb_device_msd.c: 825: }
 31185                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 31186                           
 31187                           ; BSR set to: 0
 31188  00A48E  0EFD               	movlw	253
 31189  00A490  6E53               	movwf	_MSDCommandState,c
 31190                           
 31191                           ;usb_device_msd.c: 827: break;
 31192  00A492  0012               	return	
 31193  00A494                     l648:
 31194                           
 31195                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 31196  00A494  0E03               	movlw	3
 31197  00A496  CFE8 F600          	movff	wreg,1536
 31198                           
 31199                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 31200  00A49A  0E00               	movlw	0
 31201  00A49C  CFE8 F601          	movff	wreg,1537	;volatile
 31202                           
 31203                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 31204  00A4A0  C2D4  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31205  00A4A4  C2D5  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31206  00A4A8  EE22  F0CE         	lfsr	2,_LUN+15
 31207  00A4AC  D801               	call	u10158
 31208  00A4AE  D00A               	goto	u10159
 31209  00A4B0                     u10158:
 31210  00A4B0  0005               	push	
 31211  00A4B2  6EFA               	movwf	pclath,c
 31212  00A4B4  50DE               	movf	postinc2,w,c
 31213  00A4B6  6EFD               	movwf	tosl,c
 31214  00A4B8  50DE               	movf	postinc2,w,c
 31215  00A4BA  6EFE               	movwf	tosh,c
 31216  00A4BC  50DE               	movf	postinc2,w,c
 31217  00A4BE  6EFF               	movwf	tosu,c
 31218  00A4C0  50FA               	movf	pclath,w,c
 31219  00A4C2  0012               	return		;indir
 31220  00A4C4                     u10159:
 31221  00A4C4  0900               	iorlw	0
 31222  00A4C6  A4D8               	btfss	status,2,c
 31223  00A4C8  D005               	goto	l650
 31224  00A4CA  0E00               	movlw	0
 31225  00A4CC  0100               	movlb	0	; () banked
 31226  00A4CE  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 31227  00A4D0  0E00               	movlw	0
 31228  00A4D2  D004               	goto	L23
 31229  00A4D4                     l650:
 31230                           
 31231                           ; BSR set to: 0
 31232  00A4D4  0E00               	movlw	0
 31233  00A4D6  0100               	movlb	0	; () banked
 31234  00A4D8  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 31235  00A4DA  0E80               	movlw	128
 31236  00A4DC                     L23:
 31237  00A4DC  6F9B               	movwf	_MSDProcessCommandMediaPresent$2712& (0+255),b
 31238                           
 31239                           ; BSR set to: 0
 31240                           
 31241                           ; BSR set to: 0
 31242  00A4DE  EE26 F002          	lfsr	2,1538	;volatile
 31243  00A4E2  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2712,indf2
 31244                           
 31245                           ; BSR set to: 0
 31246                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 31247  00A4E6  0E00               	movlw	0
 31248  00A4E8  CFE8 F603          	movff	wreg,1539	;volatile
 31249                           
 31250                           ; BSR set to: 0
 31251                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 31252  00A4EC  0E00               	movlw	0
 31253  00A4EE  6E44               	movwf	_TransferLength+1,c
 31254  00A4F0  0E04               	movlw	4
 31255  00A4F2  6E43               	movwf	_TransferLength,c
 31256                           
 31257                           ; BSR set to: 0
 31258                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 31259  00A4F4  0E00               	movlw	0
 31260  00A4F6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31261  00A4F8  0E04               	movlw	4
 31262  00A4FA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31263  00A4FC  ECF9  F07F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31264                           
 31265                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 31266  00A500  0EFD               	movlw	253
 31267  00A502  6E53               	movwf	_MSDCommandState,c
 31268                           
 31269                           ;usb_device_msd.c: 839: break;
 31270  00A504  0012               	return	
 31271  00A506                     
 31272                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 31273  00A506  0102               	movlb	2	; () banked
 31274  00A508  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31275  00A50A  0BF0               	andlw	-16
 31276  00A50C  0905               	iorlw	5
 31277  00A50E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31278                           
 31279                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 31280  00A510  0E20               	movlw	32
 31281  00A512  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31282                           
 31283                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 31284  00A514  0E00               	movlw	0
 31285  00A516  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31286                           
 31287                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 31288  00A518  0E01               	movlw	1
 31289  00A51A  010D               	movlb	13	; () banked
 31290  00A51C  6F8C               	movwf	140,b	;volatile
 31291                           
 31292                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 31293  00A51E  0E00               	movlw	0
 31294  00A520  6F88               	movwf	136,b	;volatile
 31295  00A522  0E00               	movlw	0
 31296  00A524  6F89               	movwf	137,b	;volatile
 31297  00A526  0E00               	movlw	0
 31298  00A528  6F8A               	movwf	138,b	;volatile
 31299  00A52A  0E00               	movlw	0
 31300  00A52C  6F8B               	movwf	139,b	;volatile
 31301                           
 31302                           ; BSR set to: 13
 31303                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 31304  00A52E  6853               	setf	_MSDCommandState,c
 31305                           
 31306                           ;usb_device_msd.c: 848: break;
 31307  00A530  0012               	return	
 31308  00A532                     
 31309                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 31310                           
 31311                           ; BSR set to: 13
 31312  00A532  0E00               	movlw	0
 31313  00A534  0100               	movlb	0	; () banked
 31314  00A536  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 31315  00A538  0E00               	movlw	0
 31316  00A53A  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 31317  00A53C  0E00               	movlw	0
 31318  00A53E  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 31319  00A540  0E00               	movlw	0
 31320  00A542  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 31321  00A544  EC83  F077         	call	_MSDCheckForErrorCases	;wreg free
 31322  00A548  0900               	iorlw	0
 31323  00A54A  A4D8               	btfss	status,2,c
 31324  00A54C  0012               	return	
 31325                           
 31326                           ;usb_device_msd.c: 861: }
 31327                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 31328                           
 31329                           ;usb_device_msd.c: 859: {
 31330                           ;usb_device_msd.c: 860: break;
 31331  00A54E  0102               	movlb	2	; () banked
 31332  00A550  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31333  00A552  0B0F               	andlw	15
 31334  00A554  0A06               	xorlw	6
 31335  00A556  A4D8               	btfss	status,2,c
 31336  00A558  D006               	goto	l656
 31337                           
 31338                           ; BSR set to: 2
 31339  00A55A  010D               	movlb	13	; () banked
 31340  00A55C  058C               	decf	140,w,b	;volatile
 31341  00A55E  A4D8               	btfss	status,2,c
 31342  00A560  D002               	goto	l656
 31343                           
 31344                           ; BSR set to: 13
 31345                           ;usb_device_msd.c: 868: {
 31346                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 31347  00A562  6853               	setf	_MSDCommandState,c
 31348                           
 31349                           ;usb_device_msd.c: 870: }
 31350  00A564  0012               	return	
 31351  00A566                     l656:
 31352                           
 31353                           ;usb_device_msd.c: 871: else
 31354                           ;usb_device_msd.c: 872: {
 31355                           ;usb_device_msd.c: 873: ResetSenseData();
 31356                           
 31357                           ; BSR set to: 13
 31358  00A566  ECF7  F08A         	call	_ResetSenseData	;wreg free
 31359                           
 31360                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 31361  00A56A  0E00               	movlw	0
 31362  00A56C  010D               	movlb	13	; () banked
 31363  00A56E  6F88               	movwf	136,b	;volatile
 31364  00A570  0E00               	movlw	0
 31365  00A572  6F89               	movwf	137,b	;volatile
 31366  00A574  0E00               	movlw	0
 31367  00A576  6F8A               	movwf	138,b	;volatile
 31368  00A578  0E00               	movlw	0
 31369  00A57A  6F8B               	movwf	139,b	;volatile
 31370                           
 31371                           ; BSR set to: 13
 31372                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 31373  00A57C  6853               	setf	_MSDCommandState,c
 31374                           
 31375                           ; BSR set to: 13
 31376                           ;usb_device_msd.c: 876: }
 31377                           ;usb_device_msd.c: 877: break;
 31378  00A57E  0012               	return	
 31379  00A580                     
 31380                           ;usb_device_msd.c: 882: case 0x1b:
 31381                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 31382                           
 31383                           ; BSR set to: 13
 31384                           
 31385                           ; BSR set to: 13
 31386  00A580  0E00               	movlw	0
 31387  00A582  010D               	movlb	13	; () banked
 31388  00A584  6F88               	movwf	136,b	;volatile
 31389  00A586  0E00               	movlw	0
 31390  00A588  6F89               	movwf	137,b	;volatile
 31391  00A58A  0E00               	movlw	0
 31392  00A58C  6F8A               	movwf	138,b	;volatile
 31393  00A58E  0E00               	movlw	0
 31394  00A590  6F8B               	movwf	139,b	;volatile
 31395                           
 31396                           ; BSR set to: 13
 31397                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 31398  00A592  6853               	setf	_MSDCommandState,c
 31399                           
 31400                           ;usb_device_msd.c: 885: break;
 31401  00A594  0012               	return	
 31402  00A596                     
 31403                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 31404                           
 31405                           ; BSR set to: 13
 31406  00A596  5045               	movf	_USBMSDInHandle,w,c
 31407  00A598  1046               	iorwf	_USBMSDInHandle+1,w,c
 31408  00A59A  B4D8               	btfsc	status,2,c
 31409  00A59C  D006               	goto	u10210
 31410  00A59E  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 31411  00A5A2  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 31412  00A5A6  BEDF               	btfsc	indf2,7,c
 31413  00A5A8  0012               	return	
 31414  00A5AA                     u10210:
 31415                           
 31416                           ;usb_device_msd.c: 893: {
 31417                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 31418  00A5AA  0102               	movlb	2	; () banked
 31419  00A5AC  514C               	movf	(_gblCBW+11)& (0+255),w,b
 31420  00A5AE  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31421  00A5B0  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31422  00A5B2  E104               	bnz	u10220
 31423  00A5B4  0E40               	movlw	64
 31424  00A5B6  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 31425  00A5B8  A0D8               	btfss	status,0,c
 31426  00A5BA  D00B               	goto	l664
 31427  00A5BC                     u10220:
 31428                           
 31429                           ; BSR set to: 2
 31430                           ;usb_device_msd.c: 897: {
 31431                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 31432  00A5BC  0E40               	movlw	64
 31433  00A5BE  0100               	movlb	0	; () banked
 31434  00A5C0  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 31435                           
 31436                           ; BSR set to: 0
 31437                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 31438  00A5C2  0E40               	movlw	64
 31439  00A5C4  0102               	movlb	2	; () banked
 31440  00A5C6  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 31441  00A5C8  0E00               	movlw	0
 31442  00A5CA  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 31443  00A5CC  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 31444  00A5CE  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 31445                           
 31446                           ;usb_device_msd.c: 900: }
 31447  00A5D0  D00A               	goto	l665
 31448  00A5D2                     l664:
 31449                           
 31450                           ; BSR set to: 2
 31451                           ;usb_device_msd.c: 901: else
 31452                           ;usb_device_msd.c: 902: {
 31453                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 31454  00A5D2  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 31455                           
 31456                           ; BSR set to: 2
 31457                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 31458  00A5D6  0E00               	movlw	0
 31459  00A5D8  6F49               	movwf	(_gblCBW+8)& (0+255),b
 31460  00A5DA  0E00               	movlw	0
 31461  00A5DC  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 31462  00A5DE  0E00               	movlw	0
 31463  00A5E0  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 31464  00A5E2  0E00               	movlw	0
 31465  00A5E4  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 31466  00A5E6                     l665:
 31467                           
 31468                           ; BSR set to: 2
 31469                           ;usb_device_msd.c: 907: }
 31470                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 31471                           
 31472                           ; BSR set to: 2
 31473  00A5E6  0100               	movlb	0	; () banked
 31474  00A5E8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31475  00A5EA  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 31476  00A5EC  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 31477  00A5EE  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 31478  00A5F0  5C43               	subwf	_TransferLength,w,c
 31479  00A5F2  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 31480  00A5F4  5844               	subwfb	_TransferLength+1,w,c
 31481  00A5F6  A0D8               	btfss	status,0,c
 31482  00A5F8  D005               	goto	l666
 31483                           
 31484                           ; BSR set to: 0
 31485                           ;usb_device_msd.c: 915: {
 31486                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 31487  00A5FA  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31488  00A5FC  5E43               	subwf	_TransferLength,f,c
 31489  00A5FE  0E00               	movlw	0
 31490  00A600  5A44               	subwfb	_TransferLength+1,f,c
 31491                           
 31492                           ;usb_device_msd.c: 918: }
 31493  00A602  D01A               	goto	u10250
 31494  00A604                     l666:
 31495                           
 31496                           ; BSR set to: 0
 31497                           ;usb_device_msd.c: 919: else
 31498                           ;usb_device_msd.c: 920: {
 31499                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 31500                           
 31501                           ; BSR set to: 0
 31502  00A604  0E00               	movlw	0
 31503  00A606  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 31504  00A608  D013               	goto	l668
 31505  00A60A                     
 31506                           ; BSR set to: 0
 31507                           ;usb_device_msd.c: 928: {
 31508                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 31509                           
 31510                           ; BSR set to: 0
 31511  00A60A  5043               	movf	_TransferLength,w,c
 31512  00A60C  1044               	iorwf	_TransferLength+1,w,c
 31513  00A60E  B4D8               	btfsc	status,2,c
 31514  00A610  D004               	goto	l670
 31515                           
 31516                           ; BSR set to: 0
 31517                           ;usb_device_msd.c: 930: {
 31518                           ;usb_device_msd.c: 931: TransferLength.Val--;
 31519  00A612  0643               	decf	_TransferLength,f,c
 31520  00A614  A0D8               	btfss	status,0,c
 31521  00A616  0644               	decf	_TransferLength+1,f,c
 31522                           
 31523                           ;usb_device_msd.c: 932: }
 31524  00A618  D00A               	goto	l671
 31525  00A61A                     l670:
 31526                           
 31527                           ; BSR set to: 0
 31528                           ;usb_device_msd.c: 933: else
 31529                           ;usb_device_msd.c: 934: {
 31530                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 31531                           
 31532                           ; BSR set to: 0
 31533  00A61A  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31534  00A61C  0D01               	mullw	1
 31535  00A61E  0E00               	movlw	0
 31536  00A620  24F3               	addwf	prodl,w,c
 31537  00A622  6ED9               	movwf	fsr2l,c
 31538  00A624  0E06               	movlw	6
 31539  00A626  20F4               	addwfc	prodh,w,c
 31540  00A628  6EDA               	movwf	fsr2h,c
 31541  00A62A  0E00               	movlw	0
 31542  00A62C  6EDF               	movwf	indf2,c
 31543  00A62E                     l671:
 31544                           
 31545                           ; BSR set to: 0
 31546                           
 31547                           ; BSR set to: 0
 31548  00A62E  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 31549  00A630                     l668:
 31550                           
 31551                           ; BSR set to: 0
 31552                           
 31553                           ; BSR set to: 0
 31554  00A630  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31555  00A632  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31556  00A634  A0D8               	btfss	status,0,c
 31557  00A636  D7E9               	goto	l669
 31558  00A638                     u10250:
 31559                           
 31560                           ; BSR set to: 0
 31561                           ;usb_device_msd.c: 936: }
 31562                           ;usb_device_msd.c: 937: }
 31563                           ;usb_device_msd.c: 938: }
 31564                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 31565                           
 31566                           ; BSR set to: 0
 31567                           
 31568                           ; BSR set to: 0
 31569  00A638  0E01               	movlw	1
 31570  00A63A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31571  00A63C  0E00               	movlw	0
 31572  00A63E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31573  00A640  0E06               	movlw	6
 31574  00A642  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31575  00A644  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 31576  00A648  0E02               	movlw	2
 31577  00A64A  EC80  F074         	call	_USBTransferOnePacket
 31578  00A64E  C060  F045         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31579  00A652  C061  F046         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31580                           
 31581                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 31582  00A656  0102               	movlb	2	; () banked
 31583  00A658  5149               	movf	(_gblCBW+8)& (0+255),w,b
 31584  00A65A  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31585  00A65C  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31586  00A65E  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 31587  00A660  A4D8               	btfss	status,2,c
 31588  00A662  0012               	return	
 31589                           
 31590                           ; BSR set to: 2
 31591                           ;usb_device_msd.c: 945: {
 31592                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 31593  00A664  6853               	setf	_MSDCommandState,c
 31594                           
 31595                           ; BSR set to: 2
 31596                           ;usb_device_msd.c: 950: }
 31597                           ;usb_device_msd.c: 951: }
 31598                           ;usb_device_msd.c: 952: break;
 31599                           
 31600                           ; BSR set to: 2
 31601                           
 31602                           ;usb_device_msd.c: 949: break;
 31603  00A666  0012               	return	
 31604  00A668                     
 31605                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 31606                           
 31607                           ; BSR set to: 2
 31608                           
 31609                           ;usb_device_msd.c: 954: default:
 31610                           
 31611                           ; BSR set to: 2
 31612  00A668  0E7F               	movlw	127
 31613  00A66A  ECDC  F071         	call	_MSDErrorHandler
 31614                           
 31615                           ;usb_device_msd.c: 960: }
 31616                           
 31617                           ;usb_device_msd.c: 959: break;
 31618  00A66E  0012               	return	
 31619  00A670                     l634:
 31620  00A670  5053               	movf	_MSDCommandState,w,c
 31621                           
 31622                           ; Switch size 1, requested type "space"
 31623                           ; Number of cases is 12, Range of values is 0 to 254
 31624                           ; switch strategies available:
 31625                           ; Name         Instructions Cycles
 31626                           ; simple_byte           37    19 (average)
 31627                           ;	Chosen strategy is simple_byte
 31628  00A672  0A00               	xorlw	0	; case 0
 31629  00A674  B4D8               	btfsc	status,2,c
 31630  00A676  D75D               	goto	l654
 31631  00A678  0A03               	xorlw	3	; case 3
 31632  00A67A  B4D8               	btfsc	status,2,c
 31633  00A67C  D6DD               	goto	l644
 31634  00A67E  0A11               	xorlw	17	; case 18
 31635  00A680  B4D8               	btfsc	status,2,c
 31636  00A682  D64C               	goto	l640
 31637  00A684  0A08               	xorlw	8	; case 26
 31638  00A686  B4D8               	btfsc	status,2,c
 31639  00A688  D705               	goto	l648
 31640  00A68A  0A01               	xorlw	1	; case 27
 31641  00A68C  B4D8               	btfsc	status,2,c
 31642  00A68E  D778               	goto	l658
 31643  00A690  0A05               	xorlw	5	; case 30
 31644  00A692  B4D8               	btfsc	status,2,c
 31645  00A694  D738               	goto	l653
 31646  00A696  0A3B               	xorlw	59	; case 37
 31647  00A698  B4D8               	btfsc	status,2,c
 31648  00A69A  D66E               	goto	l643
 31649  00A69C  0A0D               	xorlw	13	; case 40
 31650  00A69E  B4D8               	btfsc	status,2,c
 31651  00A6A0  D62F               	goto	l635
 31652  00A6A2  0A02               	xorlw	2	; case 42
 31653  00A6A4  B4D8               	btfsc	status,2,c
 31654  00A6A6  D633               	goto	l638
 31655  00A6A8  0A05               	xorlw	5	; case 47
 31656  00A6AA  B4D8               	btfsc	status,2,c
 31657  00A6AC  D769               	goto	l658
 31658  00A6AE  0AD2               	xorlw	210	; case 253
 31659  00A6B0  B4D8               	btfsc	status,2,c
 31660  00A6B2  D771               	goto	l660
 31661  00A6B4  0A03               	xorlw	3	; case 254
 31662  00A6B6  D7D8               	goto	l674
 31663  00A6B8                     __end_of_MSDProcessCommandMediaPresent:
 31664                           	opt stack 0
 31665                           tosu	equ	0xFFF
 31666                           tosh	equ	0xFFE
 31667                           tosl	equ	0xFFD
 31668                           pclath	equ	0xFFA
 31669                           tblptru	equ	0xFF8
 31670                           tblptrh	equ	0xFF7
 31671                           tblptrl	equ	0xFF6
 31672                           tablat	equ	0xFF5
 31673                           prodh	equ	0xFF4
 31674                           prodl	equ	0xFF3
 31675                           intcon	equ	0xFF2
 31676                           intcon2	equ	0xFF1
 31677                           intcon3	equ	0xFF0
 31678                           postinc0	equ	0xFEE
 31679                           wreg	equ	0xFE8
 31680                           indf1	equ	0xFE7
 31681                           postinc1	equ	0xFE6
 31682                           postdec1	equ	0xFE5
 31683                           plusw1	equ	0xFE3
 31684                           fsr1h	equ	0xFE2
 31685                           fsr1l	equ	0xFE1
 31686                           indf2	equ	0xFDF
 31687                           postinc2	equ	0xFDE
 31688                           postdec2	equ	0xFDD
 31689                           plusw2	equ	0xFDB
 31690                           fsr2h	equ	0xFDA
 31691                           fsr2l	equ	0xFD9
 31692                           status	equ	0xFD8
 31693                           
 31694 ;; *************** function _MSDWriteHandler *****************
 31695 ;; Defined at:
 31696 ;;		line 1188 in file "usb_device_msd.c"
 31697 ;; Parameters:    Size  Location     Type
 31698 ;;		None
 31699 ;; Auto vars:     Size  Location     Type
 31700 ;;		None
 31701 ;; Return value:  Size  Location     Type
 31702 ;;                  1    wreg      unsigned char 
 31703 ;; Registers used:
 31704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31705 ;; Tracked objects:
 31706 ;;		On entry : 0/0
 31707 ;;		On exit  : 0/0
 31708 ;;		Unchanged: 0/0
 31709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31712 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31713 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31714 ;;Total ram usage:        5 bytes
 31715 ;; Hardware stack levels used:    1
 31716 ;; Hardware stack levels required when called:   16
 31717 ;; This function calls:
 31718 ;;		_ExternalFlash_SectorWrite
 31719 ;;		_ExternalFlash_WriteProtectStateGet
 31720 ;;		_MSDCheckForErrorCases
 31721 ;;		_USBStallEndpoint
 31722 ;;		_USBTransferOnePacket
 31723 ;; This function is called by:
 31724 ;;		_MSDProcessCommandMediaPresent
 31725 ;; This function uses a non-reentrant model
 31726 ;;
 31727                           
 31728                           	psect	text140
 31729  00BA8E                     __ptext140:
 31730                           	opt stack 0
 31731  00BA8E                     _MSDWriteHandler:
 31732                           	opt stack 10
 31733                           
 31734                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 31735                           
 31736                           ;incstack = 0
 31737  00BA8E  D157               	goto	l704
 31738  00BA90                     l705:
 31739                           
 31740                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 31741  00BA90  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 31742                           
 31743                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 31744  00BA94  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 31745                           
 31746                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 31747  00BA98  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 31748                           
 31749                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 31750  00BA9C  C255  F1D9         	movff	_gblCBW+20,_LBA
 31751                           
 31752                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 31753  00BAA0  C257  F044         	movff	_gblCBW+22,_TransferLength+1
 31754                           
 31755                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 31756  00BAA4  C258  F043         	movff	_gblCBW+23,_TransferLength
 31757                           
 31758                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 31759  00BAA8  5043               	movf	_TransferLength,w,c
 31760  00BAAA  0100               	movlb	0	; () banked
 31761  00BAAC  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31762  00BAAE  5044               	movf	_TransferLength+1,w,c
 31763  00BAB0  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 31764  00BAB2  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31765  00BAB4  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31766  00BAB6  0E09               	movlw	9
 31767  00BAB8                     u9295:
 31768  00BAB8  90D8               	bcf	status,0,c
 31769  00BABA  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 31770  00BABC  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 31771  00BABE  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 31772  00BAC0  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 31773  00BAC2  2EE8               	decfsz	wreg,f,c
 31774  00BAC4  D7F9               	goto	u9295
 31775  00BAC6  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 31776  00BACA  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 31777  00BACE  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 31778  00BAD2  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 31779  00BAD6  EC83  F077         	call	_MSDCheckForErrorCases	;wreg free
 31780  00BADA  0900               	iorlw	0
 31781  00BADC  A4D8               	btfss	status,2,c
 31782  00BADE  D140               	goto	l707
 31783                           
 31784                           ;usb_device_msd.c: 1208: }
 31785                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 31786                           
 31787                           ;usb_device_msd.c: 1204: {
 31788                           ;usb_device_msd.c: 1207: break;
 31789  00BAE0  C2D4  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31790  00BAE4  C2D5  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31791  00BAE8  EE22  F0CE         	lfsr	2,_LUN+15
 31792  00BAEC  D801               	call	u9318
 31793  00BAEE  D00A               	goto	u9319
 31794  00BAF0                     u9318:
 31795  00BAF0  0005               	push	
 31796  00BAF2  6EFA               	movwf	pclath,c
 31797  00BAF4  50DE               	movf	postinc2,w,c
 31798  00BAF6  6EFD               	movwf	tosl,c
 31799  00BAF8  50DE               	movf	postinc2,w,c
 31800  00BAFA  6EFE               	movwf	tosh,c
 31801  00BAFC  50DE               	movf	postinc2,w,c
 31802  00BAFE  6EFF               	movwf	tosu,c
 31803  00BB00  50FA               	movf	pclath,w,c
 31804  00BB02  0012               	return		;indir
 31805  00BB04                     u9319:
 31806  00BB04  0900               	iorlw	0
 31807  00BB06  B4D8               	btfsc	status,2,c
 31808  00BB08  D016               	goto	l708
 31809                           
 31810                           ;usb_device_msd.c: 1213: {
 31811                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 31812  00BB0A  0E01               	movlw	1
 31813  00BB0C  010D               	movlb	13	; () banked
 31814  00BB0E  6F8C               	movwf	140,b	;volatile
 31815                           
 31816                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 31817  00BB10  0102               	movlb	2	; () banked
 31818  00BB12  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31819  00BB14  0BF0               	andlw	-16
 31820  00BB16  0907               	iorlw	7
 31821  00BB18  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31822                           
 31823                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 31824  00BB1A  0E27               	movlw	39
 31825  00BB1C  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31826                           
 31827                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 31828  00BB1E  0E00               	movlw	0
 31829  00BB20  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31830                           
 31831                           ; BSR set to: 2
 31832                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 31833  00BB22  0E00               	movlw	0
 31834  00BB24  0100               	movlb	0	; () banked
 31835  00BB26  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31836  00BB28  0E02               	movlw	2
 31837  00BB2A  EC77  F073         	call	_USBStallEndpoint
 31838                           
 31839                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 31840  00BB2E  0E00               	movlw	0
 31841  00BB30  6E52               	movwf	_MSDWriteState,c
 31842                           
 31843                           ;usb_device_msd.c: 1228: return MSDWriteState;
 31844  00BB32  5052               	movf	_MSDWriteState,w,c
 31845  00BB34  0012               	return	
 31846  00BB36                     l708:
 31847                           
 31848                           ;usb_device_msd.c: 1229: }
 31849                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 31850  00BB36  0E01               	movlw	1
 31851  00BB38  6E54               	movwf	_MSD_State,c
 31852  00BB3A                     
 31853                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 31854  00BB3A  5043               	movf	_TransferLength,w,c
 31855  00BB3C  1044               	iorwf	_TransferLength+1,w,c
 31856  00BB3E  B4D8               	btfsc	status,2,c
 31857  00BB40  D0FB               	goto	l11997
 31858                           
 31859                           ;usb_device_msd.c: 1239: }
 31860                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 31861                           
 31862                           ;usb_device_msd.c: 1238: break;
 31863                           
 31864                           ;usb_device_msd.c: 1236: {
 31865                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 31866  00BB42  0E03               	movlw	3
 31867  00BB44  6E52               	movwf	_MSDWriteState,c
 31868                           
 31869                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 31870  00BB46  0E00               	movlw	0
 31871  00BB48  0101               	movlb	1	; () banked
 31872  00BB4A  6FE7               	movwf	_ptrNextData& (0+255),b
 31873  00BB4C  0E06               	movlw	6
 31874  00BB4E  6FE8               	movwf	(_ptrNextData+1)& (0+255),b
 31875                           
 31876                           ; BSR set to: 1
 31877                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 31878  00BB50  0E00               	movlw	0
 31879  00BB52  010D               	movlb	13	; () banked
 31880  00BB54  6F88               	movwf	136,b	;volatile
 31881  00BB56  0E02               	movlw	2
 31882  00BB58  6F89               	movwf	137,b	;volatile
 31883  00BB5A  0E00               	movlw	0
 31884  00BB5C  6F8A               	movwf	138,b	;volatile
 31885  00BB5E  0E00               	movlw	0
 31886  00BB60  6F8B               	movwf	139,b	;volatile
 31887  00BB62                     l712:
 31888                           
 31889                           ;usb_device_msd.c: 1248: {
 31890                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 31891  00BB62  010D               	movlb	13	; () banked
 31892  00BB64  5188               	movf	136,w,b	;volatile
 31893  00BB66  1189               	iorwf	137,w,b	;volatile
 31894  00BB68  118A               	iorwf	138,w,b	;volatile
 31895  00BB6A  118B               	iorwf	139,w,b	;volatile
 31896  00BB6C  B4D8               	btfsc	status,2,c
 31897  00BB6E  D01D               	goto	l713
 31898                           
 31899                           ; BSR set to: 13
 31900                           ;usb_device_msd.c: 1251: {
 31901                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 31902  00BB70  5047               	movf	_USBMSDOutHandle,w,c
 31903  00BB72  1048               	iorwf	_USBMSDOutHandle+1,w,c
 31904  00BB74  B4D8               	btfsc	status,2,c
 31905  00BB76  D006               	goto	l714
 31906                           
 31907                           ; BSR set to: 13
 31908  00BB78  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31909  00BB7C  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31910  00BB80  BEDF               	btfsc	indf2,7,c
 31911  00BB82  D0EE               	goto	l707
 31912  00BB84                     l714:
 31913                           
 31914                           ; BSR set to: 13
 31915                           ;usb_device_msd.c: 1255: }
 31916                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 31917                           
 31918                           ; BSR set to: 13
 31919  00BB84  0E00               	movlw	0
 31920  00BB86  0100               	movlb	0	; () banked
 31921  00BB88  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31922  00BB8A  C1E7  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 31923  00BB8E  C1E8  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 31924  00BB92  0E40               	movlw	64
 31925  00BB94  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31926  00BB96  0E02               	movlw	2
 31927  00BB98  EC80  F074         	call	_USBTransferOnePacket
 31928  00BB9C  C060  F047         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31929  00BBA0  C061  F048         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31930                           
 31931                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 31932  00BBA4  0E04               	movlw	4
 31933  00BBA6  6E52               	movwf	_MSDWriteState,c
 31934                           
 31935                           ;usb_device_msd.c: 1260: }
 31936  00BBA8  D023               	goto	l715
 31937  00BBAA                     l713:
 31938                           
 31939                           ;usb_device_msd.c: 1261: else
 31940                           ;usb_device_msd.c: 1262: {
 31941                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 31942  00BBAA  C2D4  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31943  00BBAE  C2D5  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31944  00BBB2  EE22  F0CE         	lfsr	2,_LUN+15
 31945  00BBB6  D801               	call	u9378
 31946  00BBB8  D00A               	goto	u9379
 31947  00BBBA                     u9378:
 31948  00BBBA  0005               	push	
 31949  00BBBC  6EFA               	movwf	pclath,c
 31950  00BBBE  50DE               	movf	postinc2,w,c
 31951  00BBC0  6EFD               	movwf	tosl,c
 31952  00BBC2  50DE               	movf	postinc2,w,c
 31953  00BBC4  6EFE               	movwf	tosh,c
 31954  00BBC6  50DE               	movf	postinc2,w,c
 31955  00BBC8  6EFF               	movwf	tosu,c
 31956  00BBCA  50FA               	movf	pclath,w,c
 31957  00BBCC  0012               	return		;indir
 31958  00BBCE                     u9379:
 31959  00BBCE  0900               	iorlw	0
 31960  00BBD0  B4D8               	btfsc	status,2,c
 31961  00BBD2  D00C               	goto	l716
 31962                           
 31963                           ;usb_device_msd.c: 1267: {
 31964                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 31965  00BBD4  0E01               	movlw	1
 31966  00BBD6  010D               	movlb	13	; () banked
 31967  00BBD8  6F8C               	movwf	140,b	;volatile
 31968                           
 31969                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 31970  00BBDA  0102               	movlb	2	; () banked
 31971  00BBDC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31972  00BBDE  0BF0               	andlw	-16
 31973  00BBE0  0902               	iorlw	2
 31974  00BBE2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31975                           
 31976                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 31977  00BBE4  0E27               	movlw	39
 31978  00BBE6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31979                           
 31980                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 31981  00BBE8  0E00               	movlw	0
 31982  00BBEA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31983  00BBEC                     l716:
 31984                           
 31985                           ;usb_device_msd.c: 1277: }
 31986                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 31987  00BBEC  0E02               	movlw	2
 31988  00BBEE  D0A5               	goto	L27
 31989  00BBF0                     l715:
 31990                           
 31991                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 31992                           
 31993                           ;usb_device_msd.c: 1281: }
 31994                           ;usb_device_msd.c: 1282: }
 31995                           ;usb_device_msd.c: 1284: case 0x04:
 31996  00BBF0  5047               	movf	_USBMSDOutHandle,w,c
 31997  00BBF2  1048               	iorwf	_USBMSDOutHandle+1,w,c
 31998  00BBF4  B4D8               	btfsc	status,2,c
 31999  00BBF6  D006               	goto	l718
 32000  00BBF8  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32001  00BBFC  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32002  00BC00  BEDF               	btfsc	indf2,7,c
 32003  00BC02  D0AE               	goto	l707
 32004  00BC04                     l718:
 32005                           
 32006                           ;usb_device_msd.c: 1288: }
 32007                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 32008  00BC04  EE20 F001          	lfsr	2,1
 32009  00BC08  5047               	movf	_USBMSDOutHandle,w,c
 32010  00BC0A  26D9               	addwf	fsr2l,f,c
 32011  00BC0C  5048               	movf	_USBMSDOutHandle+1,w,c
 32012  00BC0E  22DA               	addwfc	fsr2h,f,c
 32013  00BC10  50DF               	movf	indf2,w,c
 32014  00BC12  0100               	movlb	0	; () banked
 32015  00BC14  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32016  00BC16  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32017  00BC1A  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32018  00BC1C  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32019  00BC1E  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32020  00BC20  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32021  00BC22  0102               	movlb	2	; () banked
 32022  00BC24  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 32023  00BC26  0100               	movlb	0	; () banked
 32024  00BC28  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32025  00BC2A  0102               	movlb	2	; () banked
 32026  00BC2C  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 32027  00BC2E  0100               	movlb	0	; () banked
 32028  00BC30  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32029  00BC32  0102               	movlb	2	; () banked
 32030  00BC34  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 32031  00BC36  0100               	movlb	0	; () banked
 32032  00BC38  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32033  00BC3A  0102               	movlb	2	; () banked
 32034  00BC3C  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 32035                           
 32036                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 32037  00BC3E  EE20 F001          	lfsr	2,1
 32038  00BC42  5047               	movf	_USBMSDOutHandle,w,c
 32039  00BC44  26D9               	addwf	fsr2l,f,c
 32040  00BC46  5048               	movf	_USBMSDOutHandle+1,w,c
 32041  00BC48  22DA               	addwfc	fsr2h,f,c
 32042  00BC4A  50DF               	movf	indf2,w,c
 32043  00BC4C  0100               	movlb	0	; () banked
 32044  00BC4E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32045  00BC50  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32046  00BC54  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32047  00BC56  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32048  00BC58  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32049  00BC5A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32050  00BC5C  010D               	movlb	13	; () banked
 32051  00BC5E  5F88               	subwf	136,f,b	;volatile
 32052  00BC60  0100               	movlb	0	; () banked
 32053  00BC62  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32054  00BC64  010D               	movlb	13	; () banked
 32055  00BC66  5B89               	subwfb	137,f,b	;volatile
 32056  00BC68  0100               	movlb	0	; () banked
 32057  00BC6A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32058  00BC6C  010D               	movlb	13	; () banked
 32059  00BC6E  5B8A               	subwfb	138,f,b	;volatile
 32060  00BC70  0100               	movlb	0	; () banked
 32061  00BC72  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32062  00BC74  010D               	movlb	13	; () banked
 32063  00BC76  5B8B               	subwfb	139,f,b	;volatile
 32064                           
 32065                           ; BSR set to: 13
 32066                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 32067  00BC78  0E40               	movlw	64
 32068  00BC7A  0101               	movlb	1	; () banked
 32069  00BC7C  27E7               	addwf	_ptrNextData& (0+255),f,b
 32070  00BC7E  0E00               	movlw	0
 32071  00BC80  23E8               	addwfc	(_ptrNextData+1)& (0+255),f,b
 32072                           
 32073                           ; BSR set to: 1
 32074                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 32075  00BC82  0E03               	movlw	3
 32076  00BC84  D05A               	goto	L27
 32077  00BC86                     
 32078                           ;usb_device_msd.c: 1298: {
 32079                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 32080                           
 32081                           ; BSR set to: 1
 32082  00BC86  010D               	movlb	13	; () banked
 32083  00BC88  518C               	movf	140,w,b	;volatile
 32084  00BC8A  A4D8               	btfss	status,2,c
 32085  00BC8C  D040               	goto	l723
 32086                           
 32087                           ; BSR set to: 13
 32088                           ;usb_device_msd.c: 1306: {
 32089                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 32090  00BC8E  C2D4  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 32091  00BC92  C2D5  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 32092  00BC96  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 32093  00BC9A  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 32094  00BC9E  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 32095  00BCA2  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 32096  00BCA6  0E00               	movlw	0
 32097  00BCA8  0100               	movlb	0	; () banked
 32098  00BCAA  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 32099  00BCAC  0E06               	movlw	6
 32100  00BCAE  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 32101  00BCB0  0101               	movlb	1	; () banked
 32102  00BCB2  51D9               	movf	_LBA& (0+255),w,b
 32103  00BCB4  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 32104  00BCB6  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 32105  00BCB8  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 32106  00BCBA  A4D8               	btfss	status,2,c
 32107  00BCBC  D002               	goto	u9420
 32108  00BCBE  0E01               	movlw	1
 32109  00BCC0  D001               	goto	u9430
 32110  00BCC2                     u9420:
 32111  00BCC2  0E00               	movlw	0
 32112  00BCC4                     u9430:
 32113  00BCC4  0100               	movlb	0	; () banked
 32114  00BCC6  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 32115  00BCC8  EE22  F0D1         	lfsr	2,_LUN+18
 32116  00BCCC  D801               	call	u9448
 32117  00BCCE  D00A               	goto	u9449
 32118  00BCD0                     u9448:
 32119  00BCD0  0005               	push	
 32120  00BCD2  6EFA               	movwf	pclath,c
 32121  00BCD4  50DE               	movf	postinc2,w,c
 32122  00BCD6  6EFD               	movwf	tosl,c
 32123  00BCD8  50DE               	movf	postinc2,w,c
 32124  00BCDA  6EFE               	movwf	tosh,c
 32125  00BCDC  50DE               	movf	postinc2,w,c
 32126  00BCDE  6EFF               	movwf	tosu,c
 32127  00BCE0  50FA               	movf	pclath,w,c
 32128  00BCE2  0012               	return		;indir
 32129  00BCE4                     u9449:
 32130  00BCE4  06E8               	decf	wreg,f,c
 32131  00BCE6  B4D8               	btfsc	status,2,c
 32132  00BCE8  D012               	goto	l723
 32133                           
 32134                           ;usb_device_msd.c: 1308: {
 32135                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 32136  00BCEA  0E64               	movlw	100
 32137  00BCEC  0101               	movlb	1	; () banked
 32138  00BCEE  61F4               	cpfslt	_MSDRetryAttempt& (0+255),b
 32139  00BCF0  D002               	goto	l722
 32140                           
 32141                           ; BSR set to: 1
 32142                           ;usb_device_msd.c: 1312: {
 32143                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 32144  00BCF2  2BF4               	incf	_MSDRetryAttempt& (0+255),f,b
 32145                           
 32146                           ;usb_device_msd.c: 1314: break;
 32147  00BCF4  D035               	goto	l707
 32148  00BCF6                     l722:
 32149                           
 32150                           ; BSR set to: 1
 32151                           ;usb_device_msd.c: 1316: else
 32152                           ;usb_device_msd.c: 1317: {
 32153                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 32154                           
 32155                           ; BSR set to: 1
 32156  00BCF6  0E01               	movlw	1
 32157  00BCF8  010D               	movlb	13	; () banked
 32158  00BCFA  6F8C               	movwf	140,b	;volatile
 32159                           
 32160                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 32161  00BCFC  0102               	movlb	2	; () banked
 32162  00BCFE  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32163  00BD00  0BF0               	andlw	-16
 32164  00BD02  0903               	iorlw	3
 32165  00BD04  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32166                           
 32167                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 32168  00BD06  0E00               	movlw	0
 32169  00BD08  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32170                           
 32171                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 32172  00BD0A  0E00               	movlw	0
 32173  00BD0C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32174  00BD0E                     l723:
 32175                           
 32176                           ;usb_device_msd.c: 1326: }
 32177                           ;usb_device_msd.c: 1327: }
 32178                           ;usb_device_msd.c: 1328: }
 32179                           ;usb_device_msd.c: 1332: LBA.Val++;
 32180                           
 32181                           ; BSR set to: 2
 32182                           
 32183                           ; BSR set to: 2
 32184                           
 32185                           ; BSR set to: 2
 32186  00BD0E  0E01               	movlw	1
 32187  00BD10  0101               	movlb	1	; () banked
 32188  00BD12  27D9               	addwf	_LBA& (0+255),f,b
 32189  00BD14  0E00               	movlw	0
 32190  00BD16  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 32191  00BD18  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 32192  00BD1A  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 32193                           
 32194                           ; BSR set to: 1
 32195                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 32196  00BD1C  0643               	decf	_TransferLength,f,c
 32197  00BD1E  A0D8               	btfss	status,0,c
 32198  00BD20  0644               	decf	_TransferLength+1,f,c
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 32202  00BD22  0E01               	movlw	1
 32203  00BD24  D00A               	goto	L27
 32204  00BD26                     
 32205                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 32206                           
 32207                           ; BSR set to: 1
 32208  00BD26  0E02               	movlw	2
 32209  00BD28  010D               	movlb	13	; () banked
 32210  00BD2A  6F8C               	movwf	140,b	;volatile
 32211                           
 32212                           ; BSR set to: 13
 32213                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 32214  00BD2C  0E00               	movlw	0
 32215  00BD2E  0100               	movlb	0	; () banked
 32216  00BD30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32217  00BD32  0E02               	movlw	2
 32218  00BD34  EC77  F073         	call	_USBStallEndpoint
 32219  00BD38                     l11997:
 32220                           
 32221                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 32222  00BD38  0E00               	movlw	0
 32223  00BD3A                     L27:
 32224  00BD3A  6E52               	movwf	_MSDWriteState,c
 32225                           
 32226                           ;usb_device_msd.c: 1345: }
 32227                           
 32228                           ;usb_device_msd.c: 1344: break;
 32229  00BD3C  D011               	goto	l707
 32230  00BD3E                     l704:
 32231  00BD3E  5052               	movf	_MSDWriteState,w,c
 32232                           
 32233                           ; Switch size 1, requested type "space"
 32234                           ; Number of cases is 5, Range of values is 0 to 4
 32235                           ; switch strategies available:
 32236                           ; Name         Instructions Cycles
 32237                           ; simple_byte           16     9 (average)
 32238                           ;	Chosen strategy is simple_byte
 32239  00BD40  0A00               	xorlw	0	; case 0
 32240  00BD42  B4D8               	btfsc	status,2,c
 32241  00BD44  D6A5               	goto	l705
 32242  00BD46  0A01               	xorlw	1	; case 1
 32243  00BD48  B4D8               	btfsc	status,2,c
 32244  00BD4A  D6F7               	goto	l710
 32245  00BD4C  0A03               	xorlw	3	; case 2
 32246  00BD4E  B4D8               	btfsc	status,2,c
 32247  00BD50  D79A               	goto	l719
 32248  00BD52  0A01               	xorlw	1	; case 3
 32249  00BD54  B4D8               	btfsc	status,2,c
 32250  00BD56  D705               	goto	l712
 32251  00BD58  0A07               	xorlw	7	; case 4
 32252  00BD5A  B4D8               	btfsc	status,2,c
 32253  00BD5C  D749               	goto	l715
 32254  00BD5E  D7E3               	goto	l724
 32255  00BD60                     l707:
 32256                           
 32257                           ;usb_device_msd.c: 1347: return MSDWriteState;
 32258  00BD60  5052               	movf	_MSDWriteState,w,c
 32259  00BD62  0012               	return	
 32260  00BD64                     __end_of_MSDWriteHandler:
 32261                           	opt stack 0
 32262                           tosu	equ	0xFFF
 32263                           tosh	equ	0xFFE
 32264                           tosl	equ	0xFFD
 32265                           pclath	equ	0xFFA
 32266                           tblptru	equ	0xFF8
 32267                           tblptrh	equ	0xFF7
 32268                           tblptrl	equ	0xFF6
 32269                           tablat	equ	0xFF5
 32270                           prodh	equ	0xFF4
 32271                           prodl	equ	0xFF3
 32272                           intcon	equ	0xFF2
 32273                           intcon2	equ	0xFF1
 32274                           intcon3	equ	0xFF0
 32275                           postinc0	equ	0xFEE
 32276                           wreg	equ	0xFE8
 32277                           indf1	equ	0xFE7
 32278                           postinc1	equ	0xFE6
 32279                           postdec1	equ	0xFE5
 32280                           plusw1	equ	0xFE3
 32281                           fsr1h	equ	0xFE2
 32282                           fsr1l	equ	0xFE1
 32283                           indf2	equ	0xFDF
 32284                           postinc2	equ	0xFDE
 32285                           postdec2	equ	0xFDD
 32286                           plusw2	equ	0xFDB
 32287                           fsr2h	equ	0xFDA
 32288                           fsr2l	equ	0xFD9
 32289                           status	equ	0xFD8
 32290                           
 32291 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 32292 ;; Defined at:
 32293 ;;		line 34 in file "external_flash.c"
 32294 ;; Parameters:    Size  Location     Type
 32295 ;;  config          2    0[BANK0 ] PTR void 
 32296 ;;		 -> NULL(0), 
 32297 ;; Auto vars:     Size  Location     Type
 32298 ;;		None
 32299 ;; Return value:  Size  Location     Type
 32300 ;;                  1    wreg      unsigned char 
 32301 ;; Registers used:
 32302 ;;		wreg
 32303 ;; Tracked objects:
 32304 ;;		On entry : 0/0
 32305 ;;		On exit  : 0/0
 32306 ;;		Unchanged: 0/0
 32307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32311 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32312 ;;Total ram usage:        2 bytes
 32313 ;; Hardware stack levels used:    1
 32314 ;; Hardware stack levels required when called:   10
 32315 ;; This function calls:
 32316 ;;		Nothing
 32317 ;; This function is called by:
 32318 ;;		_MSDWriteHandler
 32319 ;;		_MSDProcessCommandMediaPresent
 32320 ;; This function uses a non-reentrant model
 32321 ;;
 32322                           
 32323                           	psect	text141
 32324  012F58                     __ptext141:
 32325                           	opt stack 0
 32326  012F58                     _ExternalFlash_WriteProtectStateGet:
 32327                           	opt stack 15
 32328                           
 32329                           ;external_flash.c: 37: return 0;
 32330                           
 32331                           ;incstack = 0
 32332  012F58  0E00               	movlw	0
 32333  012F5A  0012               	return	
 32334  012F5C                     __end_of_ExternalFlash_WriteProtectStateGet:
 32335                           	opt stack 0
 32336                           tosu	equ	0xFFF
 32337                           tosh	equ	0xFFE
 32338                           tosl	equ	0xFFD
 32339                           pclath	equ	0xFFA
 32340                           tblptru	equ	0xFF8
 32341                           tblptrh	equ	0xFF7
 32342                           tblptrl	equ	0xFF6
 32343                           tablat	equ	0xFF5
 32344                           prodh	equ	0xFF4
 32345                           prodl	equ	0xFF3
 32346                           intcon	equ	0xFF2
 32347                           intcon2	equ	0xFF1
 32348                           intcon3	equ	0xFF0
 32349                           postinc0	equ	0xFEE
 32350                           wreg	equ	0xFE8
 32351                           indf1	equ	0xFE7
 32352                           postinc1	equ	0xFE6
 32353                           postdec1	equ	0xFE5
 32354                           plusw1	equ	0xFE3
 32355                           fsr1h	equ	0xFE2
 32356                           fsr1l	equ	0xFE1
 32357                           indf2	equ	0xFDF
 32358                           postinc2	equ	0xFDE
 32359                           postdec2	equ	0xFDD
 32360                           plusw2	equ	0xFDB
 32361                           fsr2h	equ	0xFDA
 32362                           fsr2l	equ	0xFD9
 32363                           status	equ	0xFD8
 32364                           
 32365 ;; *************** function _ExternalFlash_SectorWrite *****************
 32366 ;; Defined at:
 32367 ;;		line 104 in file "external_flash.c"
 32368 ;; Parameters:    Size  Location     Type
 32369 ;;  config          2   36[BANK0 ] PTR void 
 32370 ;;		 -> NULL(0), 
 32371 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 32372 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 32373 ;;		 -> msd_buffer(512), 
 32374 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 32375 ;; Auto vars:     Size  Location     Type
 32376 ;;  page            2   45[BANK0 ] unsigned int 
 32377 ;; Return value:  Size  Location     Type
 32378 ;;                  1    wreg      unsigned char 
 32379 ;; Registers used:
 32380 ;;		wreg, status,2, status,0, cstack
 32381 ;; Tracked objects:
 32382 ;;		On entry : 0/0
 32383 ;;		On exit  : 0/0
 32384 ;;		Unchanged: 0/0
 32385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32386 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32387 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32389 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32390 ;;Total ram usage:       11 bytes
 32391 ;; Hardware stack levels used:    1
 32392 ;; Hardware stack levels required when called:   15
 32393 ;; This function calls:
 32394 ;;		_flash_page_write
 32395 ;; This function is called by:
 32396 ;;		_MSDWriteHandler
 32397 ;; This function uses a non-reentrant model
 32398 ;;
 32399                           
 32400                           	psect	text142
 32401  012508                     __ptext142:
 32402                           	opt stack 0
 32403  012508                     _ExternalFlash_SectorWrite:
 32404                           	opt stack 10
 32405                           
 32406                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 32407                           
 32408                           ;incstack = 0
 32409  012508  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 32410  01250C  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 32411                           
 32412                           ;external_flash.c: 110: if(sector_addr >= 4096)
 32413  012510  0100               	movlb	0	; () banked
 32414  012512  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 32415  012514  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 32416  012516  E104               	bnz	u9050
 32417  012518  0E10               	movlw	16
 32418  01251A  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 32419  01251C  A0D8               	btfss	status,0,c
 32420  01251E  D002               	goto	l2908
 32421  012520                     u9050:
 32422                           
 32423                           ; BSR set to: 0
 32424                           ;external_flash.c: 111: {
 32425                           ;external_flash.c: 112: return 0;
 32426  012520  0E00               	movlw	0
 32427                           
 32428                           ; BSR set to: 0
 32429  012522  0012               	return	
 32430  012524                     l2908:
 32431                           
 32432                           ; BSR set to: 0
 32433                           ;external_flash.c: 113: }
 32434                           ;external_flash.c: 141: flash_page_write(page, buffer);
 32435                           
 32436                           ; BSR set to: 0
 32437  012524  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 32438  012528  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 32439  01252C  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 32440  012530  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 32441  012534  EC2D  F08F         	call	_flash_page_write	;wreg free
 32442                           
 32443                           ;external_flash.c: 143: return 1;
 32444  012538  0E01               	movlw	1
 32445  01253A  0012               	return	
 32446  01253C                     __end_of_ExternalFlash_SectorWrite:
 32447                           	opt stack 0
 32448                           tosu	equ	0xFFF
 32449                           tosh	equ	0xFFE
 32450                           tosl	equ	0xFFD
 32451                           pclath	equ	0xFFA
 32452                           tblptru	equ	0xFF8
 32453                           tblptrh	equ	0xFF7
 32454                           tblptrl	equ	0xFF6
 32455                           tablat	equ	0xFF5
 32456                           prodh	equ	0xFF4
 32457                           prodl	equ	0xFF3
 32458                           intcon	equ	0xFF2
 32459                           intcon2	equ	0xFF1
 32460                           intcon3	equ	0xFF0
 32461                           postinc0	equ	0xFEE
 32462                           wreg	equ	0xFE8
 32463                           indf1	equ	0xFE7
 32464                           postinc1	equ	0xFE6
 32465                           postdec1	equ	0xFE5
 32466                           plusw1	equ	0xFE3
 32467                           fsr1h	equ	0xFE2
 32468                           fsr1l	equ	0xFE1
 32469                           indf2	equ	0xFDF
 32470                           postinc2	equ	0xFDE
 32471                           postdec2	equ	0xFDD
 32472                           plusw2	equ	0xFDB
 32473                           fsr2h	equ	0xFDA
 32474                           fsr2l	equ	0xFD9
 32475                           status	equ	0xFD8
 32476                           
 32477 ;; *************** function _flash_page_write *****************
 32478 ;; Defined at:
 32479 ;;		line 546 in file "flash.c"
 32480 ;; Parameters:    Size  Location     Type
 32481 ;;  page            2   31[BANK0 ] unsigned int 
 32482 ;;  data            2   33[BANK0 ] PTR unsigned char 
 32483 ;;		 -> buffer(512), msd_buffer(512), 
 32484 ;; Auto vars:     Size  Location     Type
 32485 ;;  match           1   35[BANK0 ] enum E8341
 32486 ;; Return value:  Size  Location     Type
 32487 ;;                  1    wreg      void 
 32488 ;; Registers used:
 32489 ;;		wreg, status,2, status,0, cstack
 32490 ;; Tracked objects:
 32491 ;;		On entry : 0/0
 32492 ;;		On exit  : 0/0
 32493 ;;		Unchanged: 0/0
 32494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32498 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32499 ;;Total ram usage:        5 bytes
 32500 ;; Hardware stack levels used:    1
 32501 ;; Hardware stack levels required when called:   14
 32502 ;; This function calls:
 32503 ;;		__flash_compare_page_to_buffer
 32504 ;;		__flash_write_page_from_buffer
 32505 ;;		__flash_write_to_buffer
 32506 ;; This function is called by:
 32507 ;;		_ExternalFlash_SectorWrite
 32508 ;;		_fat_format
 32509 ;; This function uses a non-reentrant model
 32510 ;;
 32511                           
 32512                           	psect	text143
 32513  011E5A                     __ptext143:
 32514                           	opt stack 0
 32515  011E5A                     _flash_page_write:
 32516                           	opt stack 10
 32517                           
 32518                           ;flash.c: 548: flashMatchResult_t match;
 32519                           ;flash.c: 551: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 32520                           
 32521                           ;incstack = 0
 32522  011E5A  0E00               	movlw	0
 32523  011E5C  0100               	movlb	0	; () banked
 32524  011E5E  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 32525  011E60  0E00               	movlw	0
 32526  011E62  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 32527  011E64  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 32528  011E68  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 32529  011E6C  0E02               	movlw	2
 32530  011E6E  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 32531  011E70  0E00               	movlw	0
 32532  011E72  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 32533  011E74  0E00               	movlw	0
 32534  011E76  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 32535  011E78  ECDB  F08E         	call	__flash_write_to_buffer	;wreg free
 32536                           
 32537                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 32538  011E7C  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 32539  011E80  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 32540  011E84  0E00               	movlw	0
 32541  011E86  0100               	movlb	0	; () banked
 32542  011E88  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 32543  011E8A  EC0B  F087         	call	__flash_compare_page_to_buffer	;wreg free
 32544  011E8E  0100               	movlb	0	; () banked
 32545  011E90  6F83               	movwf	flash_page_write@match& (0+255),b
 32546                           
 32547                           ; BSR set to: 0
 32548                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 32549  011E92  0583               	decf	flash_page_write@match& (0+255),w,b
 32550  011E94  A4D8               	btfss	status,2,c
 32551  011E96  0012               	return	
 32552                           
 32553                           ; BSR set to: 0
 32554                           ;flash.c: 558: {
 32555                           ;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 32556  011E98  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 32557  011E9C  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 32558  011EA0  0E00               	movlw	0
 32559  011EA2  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 32560  011EA4  EC59  F08D         	call	__flash_write_page_from_buffer	;wreg free
 32561  011EA8  0012               	return	
 32562  011EAA                     __end_of_flash_page_write:
 32563                           	opt stack 0
 32564                           tosu	equ	0xFFF
 32565                           tosh	equ	0xFFE
 32566                           tosl	equ	0xFFD
 32567                           pclath	equ	0xFFA
 32568                           tblptru	equ	0xFF8
 32569                           tblptrh	equ	0xFF7
 32570                           tblptrl	equ	0xFF6
 32571                           tablat	equ	0xFF5
 32572                           prodh	equ	0xFF4
 32573                           prodl	equ	0xFF3
 32574                           intcon	equ	0xFF2
 32575                           intcon2	equ	0xFF1
 32576                           intcon3	equ	0xFF0
 32577                           postinc0	equ	0xFEE
 32578                           wreg	equ	0xFE8
 32579                           indf1	equ	0xFE7
 32580                           postinc1	equ	0xFE6
 32581                           postdec1	equ	0xFE5
 32582                           plusw1	equ	0xFE3
 32583                           fsr1h	equ	0xFE2
 32584                           fsr1l	equ	0xFE1
 32585                           indf2	equ	0xFDF
 32586                           postinc2	equ	0xFDE
 32587                           postdec2	equ	0xFDD
 32588                           plusw2	equ	0xFDB
 32589                           fsr2h	equ	0xFDA
 32590                           fsr2l	equ	0xFD9
 32591                           status	equ	0xFD8
 32592                           
 32593 ;; *************** function __flash_write_to_buffer *****************
 32594 ;; Defined at:
 32595 ;;		line 397 in file "flash.c"
 32596 ;; Parameters:    Size  Location     Type
 32597 ;;  start           2   19[BANK0 ] unsigned int 
 32598 ;;  data            2   21[BANK0 ] PTR unsigned char 
 32599 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32600 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32601 ;;		 -> msd_buffer(512), 
 32602 ;;  data_length     2   23[BANK0 ] unsigned int 
 32603 ;;  buffer          1   25[BANK0 ] enum E8337
 32604 ;; Auto vars:     Size  Location     Type
 32605 ;;  command         4   26[BANK0 ] unsigned char [4]
 32606 ;; Return value:  Size  Location     Type
 32607 ;;                  1    wreg      void 
 32608 ;; Registers used:
 32609 ;;		wreg, status,2, status,0, cstack
 32610 ;; Tracked objects:
 32611 ;;		On entry : 0/0
 32612 ;;		On exit  : 0/0
 32613 ;;		Unchanged: 0/0
 32614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32615 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32618 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32619 ;;Total ram usage:       11 bytes
 32620 ;; Hardware stack levels used:    1
 32621 ;; Hardware stack levels required when called:   13
 32622 ;; This function calls:
 32623 ;;		__flash_spi_tx_tx
 32624 ;;		_flash_is_busy
 32625 ;; This function is called by:
 32626 ;;		_flash_page_write
 32627 ;;		_flash_partial_write
 32628 ;; This function uses a non-reentrant model
 32629 ;;
 32630                           
 32631                           	psect	text144
 32632  011DB6                     __ptext144:
 32633                           	opt stack 0
 32634  011DB6                     __flash_write_to_buffer:
 32635                           	opt stack 13
 32636                           
 32637                           ;flash.c: 399: uint8_t command[4];
 32638                           ;flash.c: 402: while(flash_is_busy());
 32639                           
 32640                           ;incstack = 0
 32641  011DB6  EC9E  F095         	call	_flash_is_busy	;wreg free
 32642  011DBA  0900               	iorlw	0
 32643  011DBC  A4D8               	btfss	status,2,c
 32644  011DBE  D7FB               	goto	__flash_write_to_buffer
 32645                           
 32646                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 32647  011DC0  0100               	movlb	0	; () banked
 32648  011DC2  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 32649  011DC4  A4D8               	btfss	status,2,c
 32650  011DC6  D002               	goto	l2822
 32651                           
 32652                           ; BSR set to: 0
 32653                           ;flash.c: 406: command[0] = 0x84;
 32654  011DC8  0E84               	movlw	132
 32655  011DCA  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32656  011DCC                     l2822:
 32657                           
 32658                           ; BSR set to: 0
 32659                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 32660                           
 32661                           ; BSR set to: 0
 32662  011DCC  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 32663  011DCE  A4D8               	btfss	status,2,c
 32664  011DD0  D002               	goto	l2823
 32665                           
 32666                           ; BSR set to: 0
 32667                           ;flash.c: 408: command[0] = 0x87;
 32668  011DD2  0E87               	movlw	135
 32669  011DD4  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32670  011DD6                     l2823:
 32671                           
 32672                           ; BSR set to: 0
 32673                           ;flash.c: 410: command[1] = 0x00;
 32674  011DD6  0E00               	movlw	0
 32675  011DD8  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 32676                           
 32677                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 32678  011DDA  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 32679  011DDC  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 32680                           
 32681                           ; BSR set to: 0
 32682                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 32683  011DDE  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 32684                           
 32685                           ; BSR set to: 0
 32686                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 32687  011DE2  0E7A               	movlw	low __flash_write_to_buffer@command
 32688  011DE4  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 32689  011DE6  0E00               	movlw	high __flash_write_to_buffer@command
 32690  011DE8  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 32691  011DEA  0E00               	movlw	0
 32692  011DEC  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 32693  011DEE  0E04               	movlw	4
 32694  011DF0  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 32695  011DF2  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 32696  011DF6  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 32697  011DFA  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 32698  011DFE  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 32699  011E02  ECF6  F083         	call	__flash_spi_tx_tx	;wreg free
 32700  011E06  0012               	return		;funcret
 32701  011E08                     __end_of__flash_write_to_buffer:
 32702                           	opt stack 0
 32703                           tosu	equ	0xFFF
 32704                           tosh	equ	0xFFE
 32705                           tosl	equ	0xFFD
 32706                           pclath	equ	0xFFA
 32707                           tblptru	equ	0xFF8
 32708                           tblptrh	equ	0xFF7
 32709                           tblptrl	equ	0xFF6
 32710                           tablat	equ	0xFF5
 32711                           prodh	equ	0xFF4
 32712                           prodl	equ	0xFF3
 32713                           intcon	equ	0xFF2
 32714                           intcon2	equ	0xFF1
 32715                           intcon3	equ	0xFF0
 32716                           postinc0	equ	0xFEE
 32717                           wreg	equ	0xFE8
 32718                           indf1	equ	0xFE7
 32719                           postinc1	equ	0xFE6
 32720                           postdec1	equ	0xFE5
 32721                           plusw1	equ	0xFE3
 32722                           fsr1h	equ	0xFE2
 32723                           fsr1l	equ	0xFE1
 32724                           indf2	equ	0xFDF
 32725                           postinc2	equ	0xFDE
 32726                           postdec2	equ	0xFDD
 32727                           plusw2	equ	0xFDB
 32728                           fsr2h	equ	0xFDA
 32729                           fsr2l	equ	0xFD9
 32730                           status	equ	0xFD8
 32731                           
 32732 ;; *************** function __flash_spi_tx_tx *****************
 32733 ;; Defined at:
 32734 ;;		line 141 in file "flash.c"
 32735 ;; Parameters:    Size  Location     Type
 32736 ;;  command         2    0[BANK0 ] PTR unsigned char 
 32737 ;;		 -> _flash_write_to_buffer@command(4), 
 32738 ;;  command_leng    2    2[BANK0 ] unsigned int 
 32739 ;;  data            2    4[BANK0 ] PTR unsigned char 
 32740 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32741 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32742 ;;		 -> msd_buffer(512), 
 32743 ;;  data_length     2    6[BANK0 ] unsigned int 
 32744 ;; Auto vars:     Size  Location     Type
 32745 ;;		None
 32746 ;; Return value:  Size  Location     Type
 32747 ;;                  1    wreg      void 
 32748 ;; Registers used:
 32749 ;;		wreg, status,2, status,0
 32750 ;; Tracked objects:
 32751 ;;		On entry : 0/0
 32752 ;;		On exit  : 0/0
 32753 ;;		Unchanged: 0/0
 32754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32755 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32757 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32758 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32759 ;;Total ram usage:       12 bytes
 32760 ;; Hardware stack levels used:    1
 32761 ;; Hardware stack levels required when called:   10
 32762 ;; This function calls:
 32763 ;;		Nothing
 32764 ;; This function is called by:
 32765 ;;		__flash_write_to_buffer
 32766 ;; This function uses a non-reentrant model
 32767 ;;
 32768                           
 32769                           	psect	text145
 32770  0107EC                     __ptext145:
 32771                           	opt stack 0
 32772  0107EC                     __flash_spi_tx_tx:
 32773                           	opt stack 15
 32774                           
 32775                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 32776                           
 32777                           ;incstack = 0
 32778  0107EC  9E88               	bcf	3976,7,c	;volatile
 32779                           
 32780                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 32781  0107EE  9C88               	bcf	3976,6,c	;volatile
 32782                           
 32783                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 32784  0107F0  8A88               	bsf	3976,5,c	;volatile
 32785                           
 32786                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 32787  0107F2  9888               	bcf	3976,4,c	;volatile
 32788                           
 32789                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 32790  0107F4  9688               	bcf	3976,3,c	;volatile
 32791                           
 32792                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 32793  0107F6  8488               	bsf	3976,2,c	;volatile
 32794                           
 32795                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 32796  0107F8  9288               	bcf	3976,1,c	;volatile
 32797                           
 32798                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 32799  0107FA  9886               	bcf	3974,4,c	;volatile
 32800  0107FC  9A86               	bcf	3974,5,c	;volatile
 32801  0107FE  9C86               	bcf	3974,6,c	;volatile
 32802  010800  9E86               	bcf	3974,7,c	;volatile
 32803                           
 32804                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 32805  010802  9086               	bcf	3974,0,c	;volatile
 32806  010804  9286               	bcf	3974,1,c	;volatile
 32807  010806  9486               	bcf	3974,2,c	;volatile
 32808  010808  9686               	bcf	3974,3,c	;volatile
 32809                           
 32810                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 32811  01080A  0100               	movlb	0	; () banked
 32812  01080C  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 32813  01080E  6E6A               	movwf	3946,c	;volatile
 32814                           
 32815                           ; BSR set to: 0
 32816                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 32817  010810  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 32818                           
 32819                           ; BSR set to: 0
 32820                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 32821  010814  0EFF               	movlw	255
 32822  010816  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32823  010818  0EFF               	movlw	255
 32824  01081A  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32825  01081C  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 32826  010820  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 32827  010824  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32828  010826  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32829  010828  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32830  01082A  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32831  01082C  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32832  010830  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32833  010832  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32834  010834  6E66               	movwf	3942,c	;volatile
 32835                           
 32836                           ; BSR set to: 0
 32837                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 32838  010836  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 32839  010838  6E67               	movwf	3943,c	;volatile
 32840                           
 32841                           ; BSR set to: 0
 32842                           ;flash.c: 169: LATDbits.LD7 = 0;
 32843  01083A  9E8C               	bcf	3980,7,c	;volatile
 32844                           
 32845                           ; BSR set to: 0
 32846                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 32847  01083C  8088               	bsf	3976,0,c	;volatile
 32848  01083E                     
 32849                           ; BSR set to: 0
 32850  01083E  B088               	btfsc	3976,0,c	;volatile
 32851  010840  D7FE               	goto	l2757
 32852                           
 32853                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 32854  010842  0100               	movlb	0	; () banked
 32855  010844  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 32856  010846  6E6A               	movwf	3946,c	;volatile
 32857                           
 32858                           ; BSR set to: 0
 32859                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 32860  010848  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 32861                           
 32862                           ; BSR set to: 0
 32863                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 32864  01084C  0EFF               	movlw	255
 32865  01084E  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32866  010850  0EFF               	movlw	255
 32867  010852  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32868  010854  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 32869  010858  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 32870  01085C  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32871  01085E  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32872  010860  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32873  010862  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32874  010864  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32875  010868  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32876  01086A  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32877  01086C  6E66               	movwf	3942,c	;volatile
 32878                           
 32879                           ; BSR set to: 0
 32880                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 32881  01086E  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 32882  010870  6E67               	movwf	3943,c	;volatile
 32883                           
 32884                           ; BSR set to: 0
 32885                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 32886  010872  8088               	bsf	3976,0,c	;volatile
 32887  010874                     
 32888                           ; BSR set to: 0
 32889  010874  B088               	btfsc	3976,0,c	;volatile
 32890  010876  D7FE               	goto	l2760
 32891                           
 32892                           ;flash.c: 188: LATDbits.LD7 = 1;
 32893  010878  8E8C               	bsf	3980,7,c	;volatile
 32894  01087A  0012               	return		;funcret
 32895  01087C                     __end_of__flash_spi_tx_tx:
 32896                           	opt stack 0
 32897                           tosu	equ	0xFFF
 32898                           tosh	equ	0xFFE
 32899                           tosl	equ	0xFFD
 32900                           pclath	equ	0xFFA
 32901                           tblptru	equ	0xFF8
 32902                           tblptrh	equ	0xFF7
 32903                           tblptrl	equ	0xFF6
 32904                           tablat	equ	0xFF5
 32905                           prodh	equ	0xFF4
 32906                           prodl	equ	0xFF3
 32907                           intcon	equ	0xFF2
 32908                           intcon2	equ	0xFF1
 32909                           intcon3	equ	0xFF0
 32910                           postinc0	equ	0xFEE
 32911                           wreg	equ	0xFE8
 32912                           indf1	equ	0xFE7
 32913                           postinc1	equ	0xFE6
 32914                           postdec1	equ	0xFE5
 32915                           plusw1	equ	0xFE3
 32916                           fsr1h	equ	0xFE2
 32917                           fsr1l	equ	0xFE1
 32918                           indf2	equ	0xFDF
 32919                           postinc2	equ	0xFDE
 32920                           postdec2	equ	0xFDD
 32921                           plusw2	equ	0xFDB
 32922                           fsr2h	equ	0xFDA
 32923                           fsr2l	equ	0xFD9
 32924                           status	equ	0xFD8
 32925                           
 32926 ;; *************** function __flash_write_page_from_buffer *****************
 32927 ;; Defined at:
 32928 ;;		line 419 in file "flash.c"
 32929 ;; Parameters:    Size  Location     Type
 32930 ;;  page            2   19[BANK0 ] unsigned int 
 32931 ;;  buffer          1   21[BANK0 ] enum E8337
 32932 ;; Auto vars:     Size  Location     Type
 32933 ;;  command         4   25[BANK0 ] unsigned char [4]
 32934 ;; Return value:  Size  Location     Type
 32935 ;;                  1    wreg      void 
 32936 ;; Registers used:
 32937 ;;		wreg, status,2, status,0, cstack
 32938 ;; Tracked objects:
 32939 ;;		On entry : 0/0
 32940 ;;		On exit  : 0/0
 32941 ;;		Unchanged: 0/0
 32942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32943 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32944 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32945 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32946 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32947 ;;Total ram usage:       10 bytes
 32948 ;; Hardware stack levels used:    1
 32949 ;; Hardware stack levels required when called:   13
 32950 ;; This function calls:
 32951 ;;		__flash_spi_tx
 32952 ;;		_flash_is_busy
 32953 ;; This function is called by:
 32954 ;;		_flash_page_write
 32955 ;;		_flash_partial_write
 32956 ;; This function uses a non-reentrant model
 32957 ;;
 32958                           
 32959                           	psect	text146
 32960  011AB2                     __ptext146:
 32961                           	opt stack 0
 32962  011AB2                     __flash_write_page_from_buffer:
 32963                           	opt stack 13
 32964                           
 32965                           ;flash.c: 421: uint8_t command[4];
 32966                           ;flash.c: 424: while(flash_is_busy());
 32967                           
 32968                           ;incstack = 0
 32969  011AB2  EC9E  F095         	call	_flash_is_busy	;wreg free
 32970  011AB6  0900               	iorlw	0
 32971  011AB8  A4D8               	btfss	status,2,c
 32972  011ABA  D7FB               	goto	__flash_write_page_from_buffer
 32973                           
 32974                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 32975  011ABC  0100               	movlb	0	; () banked
 32976  011ABE  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32977  011AC0  A4D8               	btfss	status,2,c
 32978  011AC2  D002               	goto	l2830
 32979                           
 32980                           ; BSR set to: 0
 32981                           ;flash.c: 428: command[0] = 0x83;
 32982  011AC4  0E83               	movlw	131
 32983  011AC6  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32984  011AC8                     l2830:
 32985                           
 32986                           ; BSR set to: 0
 32987                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 32988                           
 32989                           ; BSR set to: 0
 32990  011AC8  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32991  011ACA  A4D8               	btfss	status,2,c
 32992  011ACC  D002               	goto	l2831
 32993                           
 32994                           ; BSR set to: 0
 32995                           ;flash.c: 430: command[0] = 0x86;
 32996  011ACE  0E86               	movlw	134
 32997  011AD0  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32998  011AD2                     l2831:
 32999                           
 33000                           ; BSR set to: 0
 33001                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33002                           
 33003                           ; BSR set to: 0
 33004  011AD2  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33005  011AD6  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33006  011ADA  0E07               	movlw	7
 33007  011ADC  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 33008  011ADE                     u8375:
 33009  011ADE  90D8               	bcf	status,0,c
 33010  011AE0  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 33011  011AE2  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 33012  011AE4  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 33013  011AE6  D7FB               	goto	u8375
 33014  011AE8  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 33015  011AEA  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 33016                           
 33017                           ; BSR set to: 0
 33018                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 33019  011AEC  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 33020  011AEE  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 33021  011AF0  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 33022                           
 33023                           ;flash.c: 434: command[3] = 0x00;
 33024  011AF2  0E00               	movlw	0
 33025  011AF4  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 33026                           
 33027                           ; BSR set to: 0
 33028                           ;flash.c: 437: _flash_spi_tx(command, 4);
 33029  011AF6  0E79               	movlw	low __flash_write_page_from_buffer@command
 33030  011AF8  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 33031  011AFA  0E00               	movlw	high __flash_write_page_from_buffer@command
 33032  011AFC  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 33033  011AFE  0E00               	movlw	0
 33034  011B00  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 33035  011B02  0E04               	movlw	4
 33036  011B04  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 33037  011B06  EC86  F08D         	call	__flash_spi_tx	;wreg free
 33038  011B0A  0012               	return		;funcret
 33039  011B0C                     __end_of__flash_write_page_from_buffer:
 33040                           	opt stack 0
 33041                           tosu	equ	0xFFF
 33042                           tosh	equ	0xFFE
 33043                           tosl	equ	0xFFD
 33044                           pclath	equ	0xFFA
 33045                           tblptru	equ	0xFF8
 33046                           tblptrh	equ	0xFF7
 33047                           tblptrl	equ	0xFF6
 33048                           tablat	equ	0xFF5
 33049                           prodh	equ	0xFF4
 33050                           prodl	equ	0xFF3
 33051                           intcon	equ	0xFF2
 33052                           intcon2	equ	0xFF1
 33053                           intcon3	equ	0xFF0
 33054                           postinc0	equ	0xFEE
 33055                           wreg	equ	0xFE8
 33056                           indf1	equ	0xFE7
 33057                           postinc1	equ	0xFE6
 33058                           postdec1	equ	0xFE5
 33059                           plusw1	equ	0xFE3
 33060                           fsr1h	equ	0xFE2
 33061                           fsr1l	equ	0xFE1
 33062                           indf2	equ	0xFDF
 33063                           postinc2	equ	0xFDE
 33064                           postdec2	equ	0xFDD
 33065                           plusw2	equ	0xFDB
 33066                           fsr2h	equ	0xFDA
 33067                           fsr2l	equ	0xFD9
 33068                           status	equ	0xFD8
 33069                           
 33070 ;; *************** function __flash_compare_page_to_buffer *****************
 33071 ;; Defined at:
 33072 ;;		line 337 in file "flash.c"
 33073 ;; Parameters:    Size  Location     Type
 33074 ;;  page            2   19[BANK0 ] unsigned int 
 33075 ;;  buffer          1   21[BANK0 ] enum E8337
 33076 ;; Auto vars:     Size  Location     Type
 33077 ;;  command         4   27[BANK0 ] unsigned char [4]
 33078 ;;  status          2   25[BANK0 ] unsigned int 
 33079 ;; Return value:  Size  Location     Type
 33080 ;;                  1    wreg      enum E8341
 33081 ;; Registers used:
 33082 ;;		wreg, status,2, status,0, cstack
 33083 ;; Tracked objects:
 33084 ;;		On entry : 0/0
 33085 ;;		On exit  : 0/0
 33086 ;;		Unchanged: 0/0
 33087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33088 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33089 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33090 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33091 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33092 ;;Total ram usage:       12 bytes
 33093 ;; Hardware stack levels used:    1
 33094 ;; Hardware stack levels required when called:   13
 33095 ;; This function calls:
 33096 ;;		__flash_get_status
 33097 ;;		__flash_spi_tx
 33098 ;;		_flash_is_busy
 33099 ;; This function is called by:
 33100 ;;		_flash_page_write
 33101 ;;		_flash_partial_write
 33102 ;; This function uses a non-reentrant model
 33103 ;;
 33104                           
 33105                           	psect	text147
 33106  010E16                     __ptext147:
 33107                           	opt stack 0
 33108  010E16                     __flash_compare_page_to_buffer:
 33109                           	opt stack 13
 33110                           
 33111                           ;flash.c: 339: uint8_t command[4];
 33112                           ;flash.c: 340: uint16_t status;
 33113                           ;flash.c: 343: while(flash_is_busy());
 33114                           
 33115                           ;incstack = 0
 33116  010E16  EC9E  F095         	call	_flash_is_busy	;wreg free
 33117  010E1A  0900               	iorlw	0
 33118  010E1C  A4D8               	btfss	status,2,c
 33119  010E1E  D7FB               	goto	__flash_compare_page_to_buffer
 33120                           
 33121                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 33122  010E20  0100               	movlb	0	; () banked
 33123  010E22  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 33124  010E24  A4D8               	btfss	status,2,c
 33125  010E26  D002               	goto	l2803
 33126                           
 33127                           ; BSR set to: 0
 33128                           ;flash.c: 347: command[0] = 0x60;
 33129  010E28  0E60               	movlw	96
 33130  010E2A  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 33131  010E2C                     l2803:
 33132                           
 33133                           ; BSR set to: 0
 33134                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 33135                           
 33136                           ; BSR set to: 0
 33137  010E2C  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 33138  010E2E  A4D8               	btfss	status,2,c
 33139  010E30  D002               	goto	l2804
 33140                           
 33141                           ; BSR set to: 0
 33142                           ;flash.c: 349: command[0] = 0x60;
 33143  010E32  0E60               	movlw	96
 33144  010E34  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 33145  010E36                     l2804:
 33146                           
 33147                           ; BSR set to: 0
 33148                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33149                           
 33150                           ; BSR set to: 0
 33151  010E36  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 33152  010E3A  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 33153  010E3E  0E07               	movlw	7
 33154  010E40  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 33155  010E42                     u8285:
 33156  010E42  90D8               	bcf	status,0,c
 33157  010E44  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 33158  010E46  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 33159  010E48  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 33160  010E4A  D7FB               	goto	u8285
 33161  010E4C  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 33162  010E4E  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 33163                           
 33164                           ; BSR set to: 0
 33165                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 33166  010E50  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 33167  010E52  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 33168  010E54  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 33169                           
 33170                           ;flash.c: 353: command[3] = 0x00;
 33171  010E56  0E00               	movlw	0
 33172  010E58  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 33173                           
 33174                           ; BSR set to: 0
 33175                           ;flash.c: 356: _flash_spi_tx(command, 4);
 33176  010E5A  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 33177  010E5C  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 33178  010E5E  0E00               	movlw	high __flash_compare_page_to_buffer@command
 33179  010E60  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 33180  010E62  0E00               	movlw	0
 33181  010E64  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 33182  010E66  0E04               	movlw	4
 33183  010E68  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 33184  010E6A  EC86  F08D         	call	__flash_spi_tx	;wreg free
 33185  010E6E  EC9E  F095         	call	_flash_is_busy	;wreg free
 33186  010E72  0900               	iorlw	0
 33187  010E74  A4D8               	btfss	status,2,c
 33188  010E76  D7FB               	goto	l2806
 33189                           
 33190                           ;flash.c: 362: status = _flash_get_status();
 33191  010E78  ECB8  F092         	call	__flash_get_status	;wreg free
 33192  010E7C  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 33193  010E80  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 33194                           
 33195                           ;flash.c: 365: if(status & 0b0000000001000000)
 33196  010E84  0100               	movlb	0	; () banked
 33197  010E86  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 33198  010E88  D002               	goto	l2808
 33199                           
 33200                           ; BSR set to: 0
 33201                           ;flash.c: 366: {
 33202                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 33203  010E8A  0E01               	movlw	1
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;flash.c: 369: }
 33207                           
 33208                           ; BSR set to: 0
 33209  010E8C  0012               	return	
 33210  010E8E                     l2808:
 33211                           
 33212                           ; BSR set to: 0
 33213                           ;flash.c: 370: else
 33214                           ;flash.c: 371: {
 33215                           ;flash.c: 373: return DATA_DOES_MATCH;
 33216                           
 33217                           ; BSR set to: 0
 33218  010E8E  0E00               	movlw	0
 33219                           
 33220                           ; BSR set to: 0
 33221  010E90  0012               	return	
 33222  010E92                     __end_of__flash_compare_page_to_buffer:
 33223                           	opt stack 0
 33224                           tosu	equ	0xFFF
 33225                           tosh	equ	0xFFE
 33226                           tosl	equ	0xFFD
 33227                           pclath	equ	0xFFA
 33228                           tblptru	equ	0xFF8
 33229                           tblptrh	equ	0xFF7
 33230                           tblptrl	equ	0xFF6
 33231                           tablat	equ	0xFF5
 33232                           prodh	equ	0xFF4
 33233                           prodl	equ	0xFF3
 33234                           intcon	equ	0xFF2
 33235                           intcon2	equ	0xFF1
 33236                           intcon3	equ	0xFF0
 33237                           postinc0	equ	0xFEE
 33238                           wreg	equ	0xFE8
 33239                           indf1	equ	0xFE7
 33240                           postinc1	equ	0xFE6
 33241                           postdec1	equ	0xFE5
 33242                           plusw1	equ	0xFE3
 33243                           fsr1h	equ	0xFE2
 33244                           fsr1l	equ	0xFE1
 33245                           indf2	equ	0xFDF
 33246                           postinc2	equ	0xFDE
 33247                           postdec2	equ	0xFDD
 33248                           plusw2	equ	0xFDB
 33249                           fsr2h	equ	0xFDA
 33250                           fsr2l	equ	0xFD9
 33251                           status	equ	0xFD8
 33252                           
 33253 ;; *************** function _MSDReadHandler *****************
 33254 ;; Defined at:
 33255 ;;		line 1038 in file "usb_device_msd.c"
 33256 ;; Parameters:    Size  Location     Type
 33257 ;;		None
 33258 ;; Auto vars:     Size  Location     Type
 33259 ;;		None
 33260 ;; Return value:  Size  Location     Type
 33261 ;;                  1    wreg      unsigned char 
 33262 ;; Registers used:
 33263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33264 ;; Tracked objects:
 33265 ;;		On entry : 0/0
 33266 ;;		On exit  : 0/0
 33267 ;;		Unchanged: 0/0
 33268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33272 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33273 ;;Total ram usage:        4 bytes
 33274 ;; Hardware stack levels used:    1
 33275 ;; Hardware stack levels required when called:   16
 33276 ;; This function calls:
 33277 ;;		_ExternalFlash_SectorRead
 33278 ;;		_MSDCheckForErrorCases
 33279 ;;		_USBStallEndpoint
 33280 ;;		_USBTransferOnePacket
 33281 ;; This function is called by:
 33282 ;;		_MSDProcessCommandMediaPresent
 33283 ;; This function uses a non-reentrant model
 33284 ;;
 33285                           
 33286                           	psect	text148
 33287  00CF64                     __ptext148:
 33288                           	opt stack 0
 33289  00CF64                     _MSDReadHandler:
 33290                           	opt stack 10
 33291                           
 33292                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 33293                           
 33294                           ; BSR set to: 0
 33295                           ;incstack = 0
 33296  00CF64  D0DD               	goto	l685
 33297  00CF66                     l686:
 33298                           
 33299                           ; BSR set to: 1
 33300                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 33301  00CF66  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 33302                           
 33303                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 33304  00CF6A  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 33305                           
 33306                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 33307  00CF6E  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 33308                           
 33309                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 33310  00CF72  C255  F1D9         	movff	_gblCBW+20,_LBA
 33311                           
 33312                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 33313  00CF76  C257  F044         	movff	_gblCBW+22,_TransferLength+1
 33314                           
 33315                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 33316  00CF7A  C258  F043         	movff	_gblCBW+23,_TransferLength
 33317                           
 33318                           ; BSR set to: 1
 33319                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33320  00CF7E  5043               	movf	_TransferLength,w,c
 33321  00CF80  0100               	movlb	0	; () banked
 33322  00CF82  6F95               	movwf	??_MSDReadHandler& (0+255),b
 33323  00CF84  5044               	movf	_TransferLength+1,w,c
 33324  00CF86  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 33325  00CF88  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 33326  00CF8A  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 33327  00CF8C  0E09               	movlw	9
 33328  00CF8E                     u9185:
 33329  00CF8E  90D8               	bcf	status,0,c
 33330  00CF90  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 33331  00CF92  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 33332  00CF94  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 33333  00CF96  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 33334  00CF98  2EE8               	decfsz	wreg,f,c
 33335  00CF9A  D7F9               	goto	u9185
 33336  00CF9C  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 33337  00CFA0  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33338  00CFA4  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33339  00CFA8  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33340  00CFAC  EC83  F077         	call	_MSDCheckForErrorCases	;wreg free
 33341  00CFB0  0900               	iorlw	0
 33342  00CFB2  A4D8               	btfss	status,2,c
 33343  00CFB4  D0C7               	goto	l688
 33344                           
 33345                           ;usb_device_msd.c: 1058: }
 33346                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 33347                           
 33348                           ;usb_device_msd.c: 1056: {
 33349                           ;usb_device_msd.c: 1057: break;
 33350  00CFB6  0E01               	movlw	1
 33351  00CFB8  0101               	movlb	1	; () banked
 33352  00CFBA  6FF5               	movwf	_MSDReadState& (0+255),b
 33353  00CFBC                     
 33354                           ; BSR set to: 1
 33355                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 33356                           
 33357                           ; BSR set to: 1
 33358  00CFBC  5043               	movf	_TransferLength,w,c
 33359  00CFBE  1044               	iorwf	_TransferLength+1,w,c
 33360  00CFC0  A4D8               	btfss	status,2,c
 33361  00CFC2  D002               	goto	l690
 33362                           
 33363                           ; BSR set to: 1
 33364                           ;usb_device_msd.c: 1065: {
 33365                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 33366  00CFC4  0E00               	movlw	0
 33367  00CFC6  D04A               	goto	L28
 33368  00CFC8                     l690:
 33369                           
 33370                           ; BSR set to: 1
 33371                           ;usb_device_msd.c: 1068: }
 33372                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 33373                           
 33374                           ; BSR set to: 1
 33375  00CFC8  0643               	decf	_TransferLength,f,c
 33376  00CFCA  A0D8               	btfss	status,0,c
 33377  00CFCC  0644               	decf	_TransferLength+1,f,c
 33378                           
 33379                           ; BSR set to: 1
 33380                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 33381  00CFCE  0E02               	movlw	2
 33382  00CFD0  6FF5               	movwf	_MSDReadState& (0+255),b
 33383  00CFD2                     
 33384                           ; BSR set to: 1
 33385                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 33386                           
 33387                           ; BSR set to: 1
 33388  00CFD2  5045               	movf	_USBMSDInHandle,w,c
 33389  00CFD4  1046               	iorwf	_USBMSDInHandle+1,w,c
 33390  00CFD6  B4D8               	btfsc	status,2,c
 33391  00CFD8  D006               	goto	l692
 33392                           
 33393                           ; BSR set to: 1
 33394  00CFDA  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 33395  00CFDE  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33396  00CFE2  BEDF               	btfsc	indf2,7,c
 33397  00CFE4  D0AF               	goto	l688
 33398  00CFE6                     l692:
 33399                           
 33400                           ; BSR set to: 1
 33401                           ;usb_device_msd.c: 1079: }
 33402                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 33403                           
 33404                           ; BSR set to: 1
 33405  00CFE6  C2D4  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 33406  00CFEA  C2D5  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 33407  00CFEE  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 33408  00CFF2  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 33409  00CFF6  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 33410  00CFFA  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 33411  00CFFE  0E00               	movlw	0
 33412  00D000  0100               	movlb	0	; () banked
 33413  00D002  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 33414  00D004  0E06               	movlw	6
 33415  00D006  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 33416  00D008  EE22  F0CB         	lfsr	2,_LUN+12
 33417  00D00C  D801               	call	u9238
 33418  00D00E  D00A               	goto	u9239
 33419  00D010                     u9238:
 33420  00D010  0005               	push	
 33421  00D012  6EFA               	movwf	pclath,c
 33422  00D014  50DE               	movf	postinc2,w,c
 33423  00D016  6EFD               	movwf	tosl,c
 33424  00D018  50DE               	movf	postinc2,w,c
 33425  00D01A  6EFE               	movwf	tosh,c
 33426  00D01C  50DE               	movf	postinc2,w,c
 33427  00D01E  6EFF               	movwf	tosu,c
 33428  00D020  50FA               	movf	pclath,w,c
 33429  00D022  0012               	return		;indir
 33430  00D024                     u9239:
 33431  00D024  06E8               	decf	wreg,f,c
 33432  00D026  B4D8               	btfsc	status,2,c
 33433  00D028  D01B               	goto	l695
 33434                           
 33435                           ;usb_device_msd.c: 1084: {
 33436                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 33437  00D02A  0E64               	movlw	100
 33438  00D02C  0101               	movlb	1	; () banked
 33439  00D02E  61F4               	cpfslt	_MSDRetryAttempt& (0+255),b
 33440  00D030  D002               	goto	l694
 33441                           
 33442                           ; BSR set to: 1
 33443                           ;usb_device_msd.c: 1086: {
 33444                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 33445  00D032  2BF4               	incf	_MSDRetryAttempt& (0+255),f,b
 33446                           
 33447                           ;usb_device_msd.c: 1088: break;
 33448  00D034  D087               	goto	l688
 33449  00D036                     l694:
 33450                           
 33451                           ; BSR set to: 1
 33452                           ;usb_device_msd.c: 1090: else
 33453                           ;usb_device_msd.c: 1091: {
 33454                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 33455                           
 33456                           ; BSR set to: 1
 33457  00D036  0E02               	movlw	2
 33458  00D038  010D               	movlb	13	; () banked
 33459  00D03A  6F8C               	movwf	140,b	;volatile
 33460                           
 33461                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 33462  00D03C  0102               	movlb	2	; () banked
 33463  00D03E  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33464  00D040  0BF0               	andlw	-16
 33465  00D042  0903               	iorlw	3
 33466  00D044  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33467                           
 33468                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 33469  00D046  0E00               	movlw	0
 33470  00D048  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33471                           
 33472                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 33473  00D04A  0E00               	movlw	0
 33474  00D04C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33475                           
 33476                           ; BSR set to: 2
 33477                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 33478  00D04E  0E01               	movlw	1
 33479  00D050  0100               	movlb	0	; () banked
 33480  00D052  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33481  00D054  0E02               	movlw	2
 33482  00D056  EC77  F073         	call	_USBStallEndpoint
 33483  00D05A  D05F               	goto	l11909
 33484  00D05C                     L28:
 33485  00D05C  6FF5               	movwf	_MSDReadState& (0+255),b
 33486                           
 33487                           ;usb_device_msd.c: 1109: break;
 33488  00D05E  D072               	goto	l688
 33489  00D060                     l695:
 33490                           
 33491                           ;usb_device_msd.c: 1110: }
 33492                           ;usb_device_msd.c: 1111: }
 33493                           ;usb_device_msd.c: 1113: LBA.Val++;
 33494                           
 33495                           ; BSR set to: 1
 33496                           
 33497                           ; BSR set to: 1
 33498  00D060  0E01               	movlw	1
 33499  00D062  0101               	movlb	1	; () banked
 33500  00D064  27D9               	addwf	_LBA& (0+255),f,b
 33501  00D066  0E00               	movlw	0
 33502  00D068  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 33503  00D06A  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 33504  00D06C  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 33505                           
 33506                           ; BSR set to: 1
 33507                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 33508  00D06E  0E00               	movlw	0
 33509  00D070  010D               	movlb	13	; () banked
 33510  00D072  6F88               	movwf	136,b	;volatile
 33511  00D074  0E02               	movlw	2
 33512  00D076  6F89               	movwf	137,b	;volatile
 33513  00D078  0E00               	movlw	0
 33514  00D07A  6F8A               	movwf	138,b	;volatile
 33515  00D07C  0E00               	movlw	0
 33516  00D07E  6F8B               	movwf	139,b	;volatile
 33517                           
 33518                           ; BSR set to: 13
 33519                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 33520  00D080  0E00               	movlw	0
 33521  00D082  0101               	movlb	1	; () banked
 33522  00D084  6FE7               	movwf	_ptrNextData& (0+255),b
 33523  00D086  0E06               	movlw	6
 33524  00D088  6FE8               	movwf	(_ptrNextData+1)& (0+255),b
 33525                           
 33526                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 33527  00D08A  0E03               	movlw	3
 33528  00D08C  6FF5               	movwf	_MSDReadState& (0+255),b
 33529  00D08E                     
 33530                           ; BSR set to: 1
 33531                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 33532                           
 33533                           ; BSR set to: 1
 33534  00D08E  010D               	movlb	13	; () banked
 33535  00D090  5188               	movf	136,w,b	;volatile
 33536  00D092  1189               	iorwf	137,w,b	;volatile
 33537  00D094  118A               	iorwf	138,w,b	;volatile
 33538  00D096  118B               	iorwf	139,w,b	;volatile
 33539  00D098  A4D8               	btfss	status,2,c
 33540  00D09A  D002               	goto	l697
 33541                           
 33542                           ; BSR set to: 13
 33543                           ;usb_device_msd.c: 1124: {
 33544                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 33545  00D09C  0E01               	movlw	1
 33546  00D09E  D03E               	goto	L30
 33547  00D0A0                     l697:
 33548                           
 33549                           ;usb_device_msd.c: 1127: }
 33550                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 33551                           
 33552                           ; BSR set to: 1
 33553  00D0A0  0E04               	movlw	4
 33554  00D0A2  0101               	movlb	1	; () banked
 33555  00D0A4  6FF5               	movwf	_MSDReadState& (0+255),b
 33556  00D0A6                     
 33557                           ; BSR set to: 1
 33558                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 33559                           
 33560                           ; BSR set to: 1
 33561  00D0A6  5045               	movf	_USBMSDInHandle,w,c
 33562  00D0A8  1046               	iorwf	_USBMSDInHandle+1,w,c
 33563  00D0AA  B4D8               	btfsc	status,2,c
 33564  00D0AC  D006               	goto	l699
 33565                           
 33566                           ; BSR set to: 1
 33567  00D0AE  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 33568  00D0B2  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33569  00D0B6  BEDF               	btfsc	indf2,7,c
 33570  00D0B8  D045               	goto	l688
 33571  00D0BA                     l699:
 33572                           
 33573                           ; BSR set to: 1
 33574                           ;usb_device_msd.c: 1139: }
 33575                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 33576                           
 33577                           ; BSR set to: 1
 33578  00D0BA  0E01               	movlw	1
 33579  00D0BC  0100               	movlb	0	; () banked
 33580  00D0BE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33581  00D0C0  C1E7  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33582  00D0C4  C1E8  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33583  00D0C8  0E40               	movlw	64
 33584  00D0CA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33585  00D0CC  0E02               	movlw	2
 33586  00D0CE  EC80  F074         	call	_USBTransferOnePacket
 33587  00D0D2  C060  F045         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33588  00D0D6  C061  F046         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33589                           
 33590                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 33591  00D0DA  0E03               	movlw	3
 33592  00D0DC  0101               	movlb	1	; () banked
 33593  00D0DE  6FF5               	movwf	_MSDReadState& (0+255),b
 33594                           
 33595                           ; BSR set to: 1
 33596                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 33597  00D0E0  0E40               	movlw	64
 33598  00D0E2  0102               	movlb	2	; () banked
 33599  00D0E4  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 33600  00D0E6  0E00               	movlw	0
 33601  00D0E8  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 33602  00D0EA  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 33603  00D0EC  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 33604                           
 33605                           ; BSR set to: 2
 33606                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 33607  00D0EE  0E40               	movlw	64
 33608  00D0F0  010D               	movlb	13	; () banked
 33609  00D0F2  5F88               	subwf	136,f,b	;volatile
 33610  00D0F4  0E00               	movlw	0
 33611  00D0F6  5B89               	subwfb	137,f,b	;volatile
 33612  00D0F8  5B8A               	subwfb	138,f,b	;volatile
 33613  00D0FA  5B8B               	subwfb	139,f,b	;volatile
 33614                           
 33615                           ; BSR set to: 13
 33616                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 33617  00D0FC  0E40               	movlw	64
 33618  00D0FE  0101               	movlb	1	; () banked
 33619  00D100  27E7               	addwf	_ptrNextData& (0+255),f,b
 33620  00D102  0E00               	movlw	0
 33621  00D104  23E8               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33622                           
 33623                           ;usb_device_msd.c: 1149: break;
 33624  00D106  D01E               	goto	l688
 33625  00D108                     
 33626                           ; BSR set to: 1
 33627                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 33628                           
 33629                           ; BSR set to: 1
 33630  00D108  0E02               	movlw	2
 33631  00D10A  010D               	movlb	13	; () banked
 33632  00D10C  6F8C               	movwf	140,b	;volatile
 33633                           
 33634                           ; BSR set to: 13
 33635                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 33636  00D10E  0E01               	movlw	1
 33637  00D110  0100               	movlb	0	; () banked
 33638  00D112  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33639  00D114  0E02               	movlw	2
 33640  00D116  EC77  F073         	call	_USBStallEndpoint
 33641  00D11A                     l11909:
 33642                           
 33643                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 33644  00D11A  0E00               	movlw	0
 33645  00D11C                     L30:
 33646  00D11C  0101               	movlb	1	; () banked
 33647  00D11E  D79E               	goto	L28
 33648  00D120                     l685:
 33649                           
 33650                           ; BSR set to: 1
 33651  00D120  0101               	movlb	1	; () banked
 33652  00D122  51F5               	movf	_MSDReadState& (0+255),w,b
 33653                           
 33654                           ; Switch size 1, requested type "space"
 33655                           ; Number of cases is 5, Range of values is 0 to 4
 33656                           ; switch strategies available:
 33657                           ; Name         Instructions Cycles
 33658                           ; simple_byte           16     9 (average)
 33659                           ;	Chosen strategy is simple_byte
 33660  00D124  0A00               	xorlw	0	; case 0
 33661  00D126  B4D8               	btfsc	status,2,c
 33662  00D128  D71E               	goto	l686
 33663  00D12A  0A01               	xorlw	1	; case 1
 33664  00D12C  B4D8               	btfsc	status,2,c
 33665  00D12E  D746               	goto	l689
 33666  00D130  0A03               	xorlw	3	; case 2
 33667  00D132  B4D8               	btfsc	status,2,c
 33668  00D134  D74E               	goto	l691
 33669  00D136  0A01               	xorlw	1	; case 3
 33670  00D138  B4D8               	btfsc	status,2,c
 33671  00D13A  D7A9               	goto	l696
 33672  00D13C  0A07               	xorlw	7	; case 4
 33673  00D13E  B4D8               	btfsc	status,2,c
 33674  00D140  D7B2               	goto	l698
 33675  00D142  D7E2               	goto	l700
 33676  00D144                     l688:
 33677                           
 33678                           ;usb_device_msd.c: 1161: return MSDReadState;
 33679                           
 33680                           ; BSR set to: 1
 33681  00D144  0101               	movlb	1	; () banked
 33682  00D146  51F5               	movf	_MSDReadState& (0+255),w,b
 33683  00D148  0012               	return	
 33684  00D14A                     __end_of_MSDReadHandler:
 33685                           	opt stack 0
 33686                           tosu	equ	0xFFF
 33687                           tosh	equ	0xFFE
 33688                           tosl	equ	0xFFD
 33689                           pclath	equ	0xFFA
 33690                           tblptru	equ	0xFF8
 33691                           tblptrh	equ	0xFF7
 33692                           tblptrl	equ	0xFF6
 33693                           tablat	equ	0xFF5
 33694                           prodh	equ	0xFF4
 33695                           prodl	equ	0xFF3
 33696                           intcon	equ	0xFF2
 33697                           intcon2	equ	0xFF1
 33698                           intcon3	equ	0xFF0
 33699                           postinc0	equ	0xFEE
 33700                           wreg	equ	0xFE8
 33701                           indf1	equ	0xFE7
 33702                           postinc1	equ	0xFE6
 33703                           postdec1	equ	0xFE5
 33704                           plusw1	equ	0xFE3
 33705                           fsr1h	equ	0xFE2
 33706                           fsr1l	equ	0xFE1
 33707                           indf2	equ	0xFDF
 33708                           postinc2	equ	0xFDE
 33709                           postdec2	equ	0xFDD
 33710                           plusw2	equ	0xFDB
 33711                           fsr2h	equ	0xFDA
 33712                           fsr2l	equ	0xFD9
 33713                           status	equ	0xFD8
 33714                           
 33715 ;; *************** function _MSDCheckForErrorCases *****************
 33716 ;; Defined at:
 33717 ;;		line 1434 in file "usb_device_msd.c"
 33718 ;; Parameters:    Size  Location     Type
 33719 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 33720 ;; Auto vars:     Size  Location     Type
 33721 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 33722 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 33723 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 33724 ;; Return value:  Size  Location     Type
 33725 ;;                  1    wreg      unsigned char 
 33726 ;; Registers used:
 33727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33728 ;; Tracked objects:
 33729 ;;		On entry : 0/0
 33730 ;;		On exit  : 0/0
 33731 ;;		Unchanged: 0/0
 33732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33734 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33737 ;;Total ram usage:        7 bytes
 33738 ;; Hardware stack levels used:    1
 33739 ;; Hardware stack levels required when called:   12
 33740 ;; This function calls:
 33741 ;;		_MSDErrorHandler
 33742 ;; This function is called by:
 33743 ;;		_MSDProcessCommandMediaPresent
 33744 ;;		_MSDReadHandler
 33745 ;;		_MSDWriteHandler
 33746 ;; This function uses a non-reentrant model
 33747 ;;
 33748                           
 33749                           	psect	text149
 33750  00EF06                     __ptext149:
 33751                           	opt stack 0
 33752  00EF06                     _MSDCheckForErrorCases:
 33753                           	opt stack 13
 33754                           
 33755                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 33756                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 33757                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 33758                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 33759                           
 33760                           ; BSR set to: 1
 33761                           ;incstack = 0
 33762  00EF06  0100               	movlb	0	; () banked
 33763  00EF08  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33764  00EF0A  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33765  00EF0C  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33766  00EF0E  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33767  00EF10  A4D8               	btfss	status,2,c
 33768  00EF12  D002               	goto	l730
 33769                           
 33770                           ; BSR set to: 0
 33771                           ;usb_device_msd.c: 1442: {
 33772                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 33773  00EF14  0E01               	movlw	1
 33774  00EF16  D001               	goto	L31
 33775  00EF18                     l730:
 33776                           
 33777                           ; BSR set to: 0
 33778                           ;usb_device_msd.c: 1445: else
 33779                           ;usb_device_msd.c: 1446: {
 33780                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 33781                           
 33782                           ; BSR set to: 0
 33783  00EF18  0E00               	movlw	0
 33784  00EF1A                     L31:
 33785  00EF1A  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 33786                           
 33787                           ; BSR set to: 0
 33788                           ;usb_device_msd.c: 1448: }
 33789                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 33790                           
 33791                           ; BSR set to: 0
 33792  00EF1C  0451               	decf	_MSDHostNoData,w,c
 33793  00EF1E  A4D8               	btfss	status,2,c
 33794  00EF20  D005               	goto	l732
 33795                           
 33796                           ; BSR set to: 0
 33797  00EF22  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33798  00EF24  A4D8               	btfss	status,2,c
 33799  00EF26  D002               	goto	l732
 33800                           
 33801                           ; BSR set to: 0
 33802                           ;usb_device_msd.c: 1454: {
 33803                           ;usb_device_msd.c: 1455: return 0x00;
 33804  00EF28  0E00               	movlw	0
 33805                           
 33806                           ; BSR set to: 0
 33807  00EF2A  0012               	return	
 33808  00EF2C                     l732:
 33809                           
 33810                           ; BSR set to: 0
 33811                           ;usb_device_msd.c: 1456: }
 33812                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 33813                           
 33814                           ; BSR set to: 0
 33815  00EF2C  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33816  00EF2E  0102               	movlb	2	; () banked
 33817  00EF30  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 33818  00EF32  E11F               	bnz	l11627
 33819  00EF34  0100               	movlb	0	; () banked
 33820  00EF36  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33821  00EF38  0102               	movlb	2	; () banked
 33822  00EF3A  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 33823  00EF3C  E11A               	bnz	l11627
 33824  00EF3E  0100               	movlb	0	; () banked
 33825  00EF40  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33826  00EF42  0102               	movlb	2	; () banked
 33827  00EF44  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 33828  00EF46  E115               	bnz	l11627
 33829  00EF48  0100               	movlb	0	; () banked
 33830  00EF4A  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33831  00EF4C  0102               	movlb	2	; () banked
 33832  00EF4E  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 33833  00EF50  A4D8               	btfss	status,2,c
 33834  00EF52  D00F               	goto	l738
 33835                           
 33836                           ; BSR set to: 2
 33837                           ;usb_device_msd.c: 1460: {
 33838                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 33839  00EF54  0454               	decf	_MSD_State,w,c
 33840  00EF56  A4D8               	btfss	status,2,c
 33841  00EF58  D006               	goto	l735
 33842                           
 33843                           ; BSR set to: 2
 33844                           ;usb_device_msd.c: 1463: {
 33845                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 33846  00EF5A  0E2A               	movlw	42
 33847  00EF5C  1853               	xorwf	_MSDCommandState,w,c
 33848  00EF5E  B4D8               	btfsc	status,2,c
 33849  00EF60  D008               	goto	l738
 33850                           
 33851                           ; BSR set to: 2
 33852                           ;usb_device_msd.c: 1466: {
 33853                           ;usb_device_msd.c: 1467: return 0x00;
 33854  00EF62  0E00               	movlw	0
 33855                           
 33856                           ; BSR set to: 2
 33857  00EF64  0012               	return	
 33858  00EF66                     l735:
 33859                           
 33860                           ; BSR set to: 2
 33861                           ;usb_device_msd.c: 1470: else
 33862                           ;usb_device_msd.c: 1471: {
 33863                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 33864                           
 33865                           ; BSR set to: 2
 33866  00EF66  0E2A               	movlw	42
 33867  00EF68  1853               	xorwf	_MSDCommandState,w,c
 33868  00EF6A  A4D8               	btfss	status,2,c
 33869  00EF6C  D002               	goto	l738
 33870                           
 33871                           ; BSR set to: 2
 33872                           ;usb_device_msd.c: 1475: {
 33873                           ;usb_device_msd.c: 1476: return 0x00;
 33874  00EF6E  0E00               	movlw	0
 33875                           
 33876                           ; BSR set to: 2
 33877  00EF70  0012               	return	
 33878  00EF72                     l738:
 33879  00EF72                     l11627:
 33880                           
 33881                           ; BSR set to: 2
 33882                           ;usb_device_msd.c: 1477: }
 33883                           ;usb_device_msd.c: 1478: }
 33884                           ;usb_device_msd.c: 1479: }
 33885                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 33886  00EF72  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33887  00EF74  0100               	movlb	0	; () banked
 33888  00EF76  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33889  00EF78  0102               	movlb	2	; () banked
 33890  00EF7A  514A               	movf	(_gblCBW+9)& (0+255),w,b
 33891  00EF7C  0100               	movlb	0	; () banked
 33892  00EF7E  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33893  00EF80  0102               	movlb	2	; () banked
 33894  00EF82  514B               	movf	(_gblCBW+10)& (0+255),w,b
 33895  00EF84  0100               	movlb	0	; () banked
 33896  00EF86  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33897  00EF88  0102               	movlb	2	; () banked
 33898  00EF8A  514C               	movf	(_gblCBW+11)& (0+255),w,b
 33899  00EF8C  0100               	movlb	0	; () banked
 33900  00EF8E  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33901  00EF90  B0D8               	btfsc	status,0,c
 33902  00EF92  D002               	goto	l739
 33903                           
 33904                           ; BSR set to: 0
 33905                           ;usb_device_msd.c: 1486: {
 33906                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 33907  00EF94  0E01               	movlw	1
 33908  00EF96  D001               	goto	L32
 33909  00EF98                     l739:
 33910                           
 33911                           ; BSR set to: 0
 33912                           ;usb_device_msd.c: 1489: else
 33913                           ;usb_device_msd.c: 1490: {
 33914                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 33915                           
 33916                           ; BSR set to: 0
 33917  00EF98  0E00               	movlw	0
 33918  00EF9A                     L32:
 33919  00EF9A  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 33920                           
 33921                           ; BSR set to: 0
 33922                           ;usb_device_msd.c: 1492: }
 33923                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 33924                           
 33925                           ; BSR set to: 0
 33926  00EF9C  0E02               	movlw	2
 33927  00EF9E  1854               	xorwf	_MSD_State,w,c
 33928  00EFA0  A4D8               	btfss	status,2,c
 33929  00EFA2  D014               	goto	l741
 33930                           
 33931                           ; BSR set to: 0
 33932                           ;usb_device_msd.c: 1496: {
 33933                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 33934  00EFA4  0E2A               	movlw	42
 33935  00EFA6  1853               	xorwf	_MSDCommandState,w,c
 33936  00EFA8  B4D8               	btfsc	status,2,c
 33937  00EFAA  D005               	goto	l742
 33938                           
 33939                           ; BSR set to: 0
 33940  00EFAC  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33941  00EFAE  A4D8               	btfss	status,2,c
 33942  00EFB0  D002               	goto	l742
 33943  00EFB2                     u8850:
 33944                           
 33945                           ; BSR set to: 0
 33946                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 33947  00EFB2  0E05               	movlw	5
 33948  00EFB4  D01D               	goto	L35
 33949  00EFB6                     l742:
 33950                           
 33951                           ; BSR set to: 0
 33952                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 33953                           
 33954                           ; BSR set to: 0
 33955  00EFB6  0451               	decf	_MSDHostNoData,w,c
 33956  00EFB8  B4D8               	btfsc	status,2,c
 33957  00EFBA  D00F               	goto	u8900
 33958                           
 33959                           ; BSR set to: 0
 33960                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 33961                           
 33962                           ; BSR set to: 0
 33963                           
 33964                           ; BSR set to: 0
 33965                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 33966  00EFBC  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33967  00EFBE  B4D8               	btfsc	status,2,c
 33968  00EFC0  D003               	goto	u8880
 33969                           
 33970                           ; BSR set to: 0
 33971                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 33972                           
 33973                           ; BSR set to: 0
 33974                           
 33975                           ; BSR set to: 0
 33976                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 33977  00EFC2  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33978  00EFC4  A4D8               	btfss	status,2,c
 33979  00EFC6  D7F5               	goto	u8850
 33980  00EFC8                     u8880:
 33981                           
 33982                           ; BSR set to: 0
 33983                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 33984  00EFC8  0E04               	movlw	4
 33985  00EFCA  D012               	goto	L35
 33986  00EFCC                     l741:
 33987                           
 33988                           ; BSR set to: 0
 33989                           ;usb_device_msd.c: 1513: else
 33990                           ;usb_device_msd.c: 1514: {
 33991                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 33992                           
 33993                           ; BSR set to: 0
 33994  00EFCC  0E2A               	movlw	42
 33995  00EFCE  1853               	xorwf	_MSDCommandState,w,c
 33996  00EFD0  B4D8               	btfsc	status,2,c
 33997  00EFD2  D00D               	goto	l757
 33998                           
 33999                           ; BSR set to: 0
 34000                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 34001                           
 34002                           ; BSR set to: 0
 34003                           
 34004                           ; BSR set to: 0
 34005                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 34006  00EFD4  0451               	decf	_MSDHostNoData,w,c
 34007  00EFD6  A4D8               	btfss	status,2,c
 34008  00EFD8  D002               	goto	l753
 34009  00EFDA                     u8900:
 34010                           
 34011                           ; BSR set to: 0
 34012                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 34013  00EFDA  0E01               	movlw	1
 34014  00EFDC  D009               	goto	L35
 34015  00EFDE                     l753:
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 34019                           
 34020                           ; BSR set to: 0
 34021  00EFDE  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34022  00EFE0  B4D8               	btfsc	status,2,c
 34023  00EFE2  D003               	goto	u8920
 34024                           
 34025                           ; BSR set to: 0
 34026                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 34027                           
 34028                           ; BSR set to: 0
 34029                           
 34030                           ; BSR set to: 0
 34031                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 34032  00EFE4  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 34033  00EFE6  A4D8               	btfss	status,2,c
 34034  00EFE8  D002               	goto	l757
 34035  00EFEA                     u8920:
 34036                           
 34037                           ; BSR set to: 0
 34038                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 34039  00EFEA  0E02               	movlw	2
 34040  00EFEC  D001               	goto	L35
 34041  00EFEE                     l757:
 34042                           
 34043                           ; BSR set to: 0
 34044                           ;usb_device_msd.c: 1528: else
 34045                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 34046                           
 34047                           ; BSR set to: 0
 34048  00EFEE  0E03               	movlw	3
 34049  00EFF0                     L35:
 34050  00EFF0  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 34051                           
 34052                           ; BSR set to: 0
 34053                           ;usb_device_msd.c: 1530: }
 34054                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 34055                           
 34056                           ; BSR set to: 0
 34057                           
 34058                           ; BSR set to: 0
 34059                           
 34060                           ; BSR set to: 0
 34061                           
 34062                           ; BSR set to: 0
 34063                           
 34064                           ; BSR set to: 0
 34065  00EFF2  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 34066  00EFF4  ECDC  F071         	call	_MSDErrorHandler
 34067                           
 34068                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 34069  00EFF8  0100               	movlb	0	; () banked
 34070  00EFFA  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 34071  00EFFC  0012               	return	
 34072  00EFFE                     __end_of_MSDCheckForErrorCases:
 34073                           	opt stack 0
 34074                           tosu	equ	0xFFF
 34075                           tosh	equ	0xFFE
 34076                           tosl	equ	0xFFD
 34077                           pclath	equ	0xFFA
 34078                           tblptru	equ	0xFF8
 34079                           tblptrh	equ	0xFF7
 34080                           tblptrl	equ	0xFF6
 34081                           tablat	equ	0xFF5
 34082                           prodh	equ	0xFF4
 34083                           prodl	equ	0xFF3
 34084                           intcon	equ	0xFF2
 34085                           intcon2	equ	0xFF1
 34086                           intcon3	equ	0xFF0
 34087                           postinc0	equ	0xFEE
 34088                           wreg	equ	0xFE8
 34089                           indf1	equ	0xFE7
 34090                           postinc1	equ	0xFE6
 34091                           postdec1	equ	0xFE5
 34092                           plusw1	equ	0xFE3
 34093                           fsr1h	equ	0xFE2
 34094                           fsr1l	equ	0xFE1
 34095                           indf2	equ	0xFDF
 34096                           postinc2	equ	0xFDE
 34097                           postdec2	equ	0xFDD
 34098                           plusw2	equ	0xFDB
 34099                           fsr2h	equ	0xFDA
 34100                           fsr2l	equ	0xFD9
 34101                           status	equ	0xFD8
 34102                           
 34103 ;; *************** function _MSDErrorHandler *****************
 34104 ;; Defined at:
 34105 ;;		line 1577 in file "usb_device_msd.c"
 34106 ;; Parameters:    Size  Location     Type
 34107 ;;  ErrorCase       1    wreg     unsigned char 
 34108 ;; Auto vars:     Size  Location     Type
 34109 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 34110 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 34111 ;; Return value:  Size  Location     Type
 34112 ;;                  1    wreg      void 
 34113 ;; Registers used:
 34114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34115 ;; Tracked objects:
 34116 ;;		On entry : 0/0
 34117 ;;		On exit  : 0/0
 34118 ;;		Unchanged: 0/0
 34119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34124 ;;Total ram usage:        2 bytes
 34125 ;; Hardware stack levels used:    1
 34126 ;; Hardware stack levels required when called:   11
 34127 ;; This function calls:
 34128 ;;		_ResetSenseData
 34129 ;;		_USBStallEndpoint
 34130 ;; This function is called by:
 34131 ;;		_MSDProcessCommandMediaAbsent
 34132 ;;		_MSDProcessCommandMediaPresent
 34133 ;;		_MSDCheckForErrorCases
 34134 ;; This function uses a non-reentrant model
 34135 ;;
 34136                           
 34137                           	psect	text150
 34138  00E3B8                     __ptext150:
 34139                           	opt stack 0
 34140  00E3B8                     _MSDErrorHandler:
 34141                           	opt stack 13
 34142                           
 34143                           ;incstack = 0
 34144                           ;MSDErrorHandler@ErrorCase stored from wreg
 34145  00E3B8  0100               	movlb	0	; () banked
 34146  00E3BA  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 34147                           
 34148                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 34149                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 34150  00E3BC  5045               	movf	_USBMSDInHandle,w,c
 34151  00E3BE  1046               	iorwf	_USBMSDInHandle+1,w,c
 34152  00E3C0  B4D8               	btfsc	status,2,c
 34153  00E3C2  D006               	goto	u8520
 34154  00E3C4  C045  FFD9         	movff	_USBMSDInHandle,fsr2l
 34155  00E3C8  C046  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34156  00E3CC  BEDF               	btfsc	indf2,7,c
 34157  00E3CE  0012               	return	
 34158  00E3D0                     u8520:
 34159  00E3D0  5047               	movf	_USBMSDOutHandle,w,c
 34160  00E3D2  1048               	iorwf	_USBMSDOutHandle+1,w,c
 34161  00E3D4  B4D8               	btfsc	status,2,c
 34162  00E3D6  D006               	goto	l761
 34163  00E3D8  C047  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34164  00E3DC  C048  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34165  00E3E0  BEDF               	btfsc	indf2,7,c
 34166  00E3E2  0012               	return	
 34167  00E3E4                     l761:
 34168                           
 34169                           ;usb_device_msd.c: 1586: }
 34170                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 34171  00E3E4  C054  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 34172                           
 34173                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 34174  00E3E8  6853               	setf	_MSDCommandState,c
 34175                           
 34176                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 34177  00E3EA  0E00               	movlw	0
 34178  00E3EC  0101               	movlb	1	; () banked
 34179  00E3EE  6FF5               	movwf	_MSDReadState& (0+255),b
 34180                           
 34181                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 34182  00E3F0  0E00               	movlw	0
 34183  00E3F2  6E52               	movwf	_MSDWriteState,c
 34184                           
 34185                           ; BSR set to: 1
 34186                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 34187  00E3F4  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 34188  00E3F8  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 34189  00E3FC  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 34190  00E400  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 34191                           
 34192                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 34193  00E404  0E01               	movlw	1
 34194  00E406  010D               	movlb	13	; () banked
 34195  00E408  6F8C               	movwf	140,b	;volatile
 34196                           
 34197                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 34198  00E40A  0E03               	movlw	3
 34199  00E40C  6E54               	movwf	_MSD_State,c
 34200                           
 34201                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 34202  00E40E  D04B               	goto	l767
 34203  00E410                     
 34204                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 34205                           
 34206                           ; BSR set to: 13
 34207  00E410  0E02               	movlw	2
 34208  00E412  010D               	movlb	13	; () banked
 34209  00E414  6F8C               	movwf	140,b	;volatile
 34210                           
 34211                           ;usb_device_msd.c: 1607: break;
 34212  00E416  0012               	return	
 34213  00E418                     
 34214                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 34215                           
 34216                           ; BSR set to: 13
 34217  00E418  0E01               	movlw	1
 34218  00E41A  0100               	movlb	0	; () banked
 34219  00E41C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34220  00E41E  0E02               	movlw	2
 34221  00E420  EC77  F073         	call	_USBStallEndpoint
 34222                           
 34223                           ;usb_device_msd.c: 1611: break;
 34224  00E424  0012               	return	
 34225  00E426                     
 34226                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 34227  00E426  0E02               	movlw	2
 34228  00E428  010D               	movlb	13	; () banked
 34229  00E42A  6F8C               	movwf	140,b	;volatile
 34230                           
 34231                           ; BSR set to: 13
 34232                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 34233  00E42C  0E01               	movlw	1
 34234  00E42E  0100               	movlb	0	; () banked
 34235  00E430  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34236  00E432  0E02               	movlw	2
 34237  00E434  EC77  F073         	call	_USBStallEndpoint
 34238                           
 34239                           ;usb_device_msd.c: 1616: break;
 34240  00E438  0012               	return	
 34241  00E43A                     
 34242                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 34243  00E43A  0E00               	movlw	0
 34244  00E43C  0100               	movlb	0	; () banked
 34245  00E43E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34246  00E440  0E02               	movlw	2
 34247  00E442  EC77  F073         	call	_USBStallEndpoint
 34248                           
 34249                           ;usb_device_msd.c: 1620: break;
 34250  00E446  0012               	return	
 34251  00E448                     
 34252                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 34253  00E448  0E02               	movlw	2
 34254  00E44A  010D               	movlb	13	; () banked
 34255  00E44C  6F8C               	movwf	140,b	;volatile
 34256                           
 34257                           ; BSR set to: 13
 34258                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 34259  00E44E  0E00               	movlw	0
 34260  00E450  0100               	movlb	0	; () banked
 34261  00E452  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34262  00E454  0E02               	movlw	2
 34263  00E456  EC77  F073         	call	_USBStallEndpoint
 34264                           
 34265                           ;usb_device_msd.c: 1625: break;
 34266  00E45A  0012               	return	
 34267  00E45C                     
 34268                           ;usb_device_msd.c: 1628: ResetSenseData();
 34269  00E45C  ECF7  F08A         	call	_ResetSenseData	;wreg free
 34270                           
 34271                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 34272  00E460  0102               	movlb	2	; () banked
 34273  00E462  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 34274  00E464  0BF0               	andlw	-16
 34275  00E466  0905               	iorlw	5
 34276  00E468  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 34277                           
 34278                           ; BSR set to: 2
 34279                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 34280  00E46A  0E20               	movlw	32
 34281  00E46C  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34282                           
 34283                           ; BSR set to: 2
 34284                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 34285  00E46E  0E00               	movlw	0
 34286  00E470  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34287                           
 34288                           ; BSR set to: 2
 34289                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 34290  00E472  0E02               	movlw	2
 34291  00E474  0100               	movlb	0	; () banked
 34292  00E476  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 34293  00E478  A4D8               	btfss	status,2,c
 34294  00E47A  D00E               	goto	l775
 34295                           
 34296                           ; BSR set to: 0
 34297  00E47C  0102               	movlb	2	; () banked
 34298  00E47E  5149               	movf	(_gblCBW+8)& (0+255),w,b
 34299  00E480  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 34300  00E482  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 34301  00E484  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 34302  00E486  B4D8               	btfsc	status,2,c
 34303  00E488  D007               	goto	l775
 34304                           
 34305                           ; BSR set to: 2
 34306                           ;usb_device_msd.c: 1634: {
 34307                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 34308  00E48A  0E00               	movlw	0
 34309  00E48C  0100               	movlb	0	; () banked
 34310  00E48E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34311  00E490  0E02               	movlw	2
 34312  00E492  EC77  F073         	call	_USBStallEndpoint
 34313                           
 34314                           ;usb_device_msd.c: 1636: }
 34315  00E496  0012               	return	
 34316  00E498                     l775:
 34317                           
 34318                           ;usb_device_msd.c: 1637: else
 34319                           ;usb_device_msd.c: 1638: {
 34320                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 34321  00E498  0E01               	movlw	1
 34322  00E49A  0100               	movlb	0	; () banked
 34323  00E49C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34324  00E49E  0E02               	movlw	2
 34325  00E4A0  EC77  F073         	call	_USBStallEndpoint
 34326                           
 34327                           ;usb_device_msd.c: 1644: }
 34328                           
 34329                           ;usb_device_msd.c: 1643: break;
 34330                           
 34331                           ;usb_device_msd.c: 1642: default:
 34332                           
 34333                           ;usb_device_msd.c: 1640: }
 34334                           ;usb_device_msd.c: 1641: break;
 34335  00E4A4  0012               	return	
 34336  00E4A6                     l767:
 34337  00E4A6  0100               	movlb	0	; () banked
 34338  00E4A8  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 34339                           
 34340                           ; Switch size 1, requested type "space"
 34341                           ; Number of cases is 6, Range of values is 1 to 127
 34342                           ; switch strategies available:
 34343                           ; Name         Instructions Cycles
 34344                           ; simple_byte           19    10 (average)
 34345                           ;	Chosen strategy is simple_byte
 34346  00E4AA  0A01               	xorlw	1	; case 1
 34347  00E4AC  B4D8               	btfsc	status,2,c
 34348  00E4AE  D7B0               	goto	l768
 34349  00E4B0  0A03               	xorlw	3	; case 2
 34350  00E4B2  B4D8               	btfsc	status,2,c
 34351  00E4B4  D7B1               	goto	l770
 34352  00E4B6  0A01               	xorlw	1	; case 3
 34353  00E4B8  B4D8               	btfsc	status,2,c
 34354  00E4BA  D7B5               	goto	l771
 34355  00E4BC  0A07               	xorlw	7	; case 4
 34356  00E4BE  B4D8               	btfsc	status,2,c
 34357  00E4C0  D7BC               	goto	l772
 34358  00E4C2  0A01               	xorlw	1	; case 5
 34359  00E4C4  B4D8               	btfsc	status,2,c
 34360  00E4C6  D7C0               	goto	l773
 34361  00E4C8  0A7A               	xorlw	122	; case 127
 34362  00E4CA  A4D8               	btfss	status,2,c
 34363  00E4CC  0012               	return	
 34364  00E4CE  D7C6               	goto	l774
 34365  00E4D0                     __end_of_MSDErrorHandler:
 34366                           	opt stack 0
 34367                           tosu	equ	0xFFF
 34368                           tosh	equ	0xFFE
 34369                           tosl	equ	0xFFD
 34370                           pclath	equ	0xFFA
 34371                           tblptru	equ	0xFF8
 34372                           tblptrh	equ	0xFF7
 34373                           tblptrl	equ	0xFF6
 34374                           tablat	equ	0xFF5
 34375                           prodh	equ	0xFF4
 34376                           prodl	equ	0xFF3
 34377                           intcon	equ	0xFF2
 34378                           intcon2	equ	0xFF1
 34379                           intcon3	equ	0xFF0
 34380                           postinc0	equ	0xFEE
 34381                           wreg	equ	0xFE8
 34382                           indf1	equ	0xFE7
 34383                           postinc1	equ	0xFE6
 34384                           postdec1	equ	0xFE5
 34385                           plusw1	equ	0xFE3
 34386                           fsr1h	equ	0xFE2
 34387                           fsr1l	equ	0xFE1
 34388                           indf2	equ	0xFDF
 34389                           postinc2	equ	0xFDE
 34390                           postdec2	equ	0xFDD
 34391                           plusw2	equ	0xFDB
 34392                           fsr2h	equ	0xFDA
 34393                           fsr2l	equ	0xFD9
 34394                           status	equ	0xFD8
 34395                           
 34396 ;; *************** function _USBStallEndpoint *****************
 34397 ;; Defined at:
 34398 ;;		line 1073 in file "usb_device.c"
 34399 ;; Parameters:    Size  Location     Type
 34400 ;;  ep              1    wreg     unsigned char 
 34401 ;;  dir             1    0[BANK0 ] unsigned char 
 34402 ;; Auto vars:     Size  Location     Type
 34403 ;;  ep              1    5[BANK0 ] unsigned char 
 34404 ;;  p               2    6[BANK0 ] PTR struct __BDT
 34405 ;;		 -> BDT(48), 
 34406 ;; Return value:  Size  Location     Type
 34407 ;;                  1    wreg      void 
 34408 ;; Registers used:
 34409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34410 ;; Tracked objects:
 34411 ;;		On entry : 0/0
 34412 ;;		On exit  : 0/0
 34413 ;;		Unchanged: 0/0
 34414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34415 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34416 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34417 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34419 ;;Total ram usage:        8 bytes
 34420 ;; Hardware stack levels used:    1
 34421 ;; Hardware stack levels required when called:   10
 34422 ;; This function calls:
 34423 ;;		Nothing
 34424 ;; This function is called by:
 34425 ;;		_MSDTasks
 34426 ;;		_MSDReadHandler
 34427 ;;		_MSDWriteHandler
 34428 ;;		_MSDErrorHandler
 34429 ;; This function uses a non-reentrant model
 34430 ;;
 34431                           
 34432                           	psect	text151
 34433  00E6EE                     __ptext151:
 34434                           	opt stack 0
 34435  00E6EE                     _USBStallEndpoint:
 34436                           	opt stack 18
 34437                           
 34438                           ;incstack = 0
 34439                           ;USBStallEndpoint@ep stored from wreg
 34440  00E6EE  0100               	movlb	0	; () banked
 34441  00E6F0  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 34442                           
 34443                           ;usb_device.c: 1075: BDT_ENTRY *p;
 34444                           ;usb_device.c: 1077: if(ep == 0)
 34445  00E6F2  0100               	movlb	0	; () banked
 34446  00E6F4  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 34447  00E6F6  A4D8               	btfss	status,2,c
 34448  00E6F8  D02B               	goto	l194
 34449                           
 34450                           ; BSR set to: 0
 34451                           ;usb_device.c: 1078: {
 34452                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 34453  00E6FA  EE20 F001          	lfsr	2,1
 34454  00E6FE  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 34455  00E700  26D9               	addwf	fsr2l,f,c
 34456  00E702  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 34457  00E704  22DA               	addwfc	fsr2h,f,c
 34458  00E706  0E08               	movlw	8
 34459  00E708  6EDF               	movwf	indf2,c
 34460                           
 34461                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 34462  00E70A  EE20 F002          	lfsr	2,2
 34463  00E70E  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 34464  00E710  26D9               	addwf	fsr2l,f,c
 34465  00E712  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 34466  00E714  22DA               	addwfc	fsr2h,f,c
 34467  00E716  0E30               	movlw	48
 34468  00E718  6EDE               	movwf	postinc2,c
 34469  00E71A  0E0D               	movlw	13
 34470  00E71C  6EDD               	movwf	postdec2,c
 34471                           
 34472                           ; BSR set to: 0
 34473                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 34474  00E71E  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34475  00E722  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34476  00E726  0E0C               	movlw	12
 34477  00E728  6EDF               	movwf	indf2,c
 34478                           
 34479                           ; BSR set to: 0
 34480                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34481  00E72A  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34482  00E72E  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34483  00E732  0E00               	movlw	0
 34484  00E734  8EDB               	bsf	plusw2,7,c
 34485                           
 34486                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 34487  00E736  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 34488  00E73A  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34489  00E73E  0E04               	movlw	4
 34490  00E740  6EDF               	movwf	indf2,c
 34491                           
 34492                           ; BSR set to: 0
 34493                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 34494  00E742  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 34495  00E746  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34496  00E74A  0E00               	movlw	0
 34497  00E74C  8EDB               	bsf	plusw2,7,c
 34498                           
 34499                           ;usb_device.c: 1089: }
 34500  00E74E  0012               	return	
 34501  00E750                     l194:
 34502                           
 34503                           ; BSR set to: 0
 34504                           ;usb_device.c: 1090: else
 34505                           ;usb_device.c: 1091: {
 34506                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 34507                           
 34508                           ; BSR set to: 0
 34509  00E750  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 34510  00E752  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 34511  00E754  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 34512  00E756  90D8               	bcf	status,0,c
 34513  00E758  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 34514  00E75A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 34515  00E75C  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 34516  00E75E  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 34517  00E760  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 34518  00E762  90D8               	bcf	status,0,c
 34519  00E764  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34520  00E766  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34521  00E768  90D8               	bcf	status,0,c
 34522  00E76A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34523  00E76C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34524  00E76E  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 34525  00E770  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 34526  00E772  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 34527  00E774  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 34528  00E776  90D8               	bcf	status,0,c
 34529  00E778  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34530  00E77A  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34531  00E77C  90D8               	bcf	status,0,c
 34532  00E77E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 34533  00E780  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 34534  00E782  0E00               	movlw	0
 34535  00E784  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 34536  00E786  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 34537  00E788  0E0D               	movlw	13
 34538  00E78A  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 34539  00E78C  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 34540                           
 34541                           ; BSR set to: 0
 34542                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 34543  00E78E  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34544  00E792  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34545  00E796  0E00               	movlw	0
 34546  00E798  84DB               	bsf	plusw2,2,c
 34547                           
 34548                           ; BSR set to: 0
 34549                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 34550  00E79A  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34551  00E79E  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34552  00E7A2  0E00               	movlw	0
 34553  00E7A4  8EDB               	bsf	plusw2,7,c
 34554                           
 34555                           ; BSR set to: 0
 34556                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 34557  00E7A6  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 34558  00E7A8  0D04               	mullw	4
 34559  00E7AA  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 34560  00E7AE  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 34561  00E7B2  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 34562  00E7B4  0D02               	mullw	2
 34563  00E7B6  50F3               	movf	prodl,w,c
 34564  00E7B8  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 34565  00E7BA  50F4               	movf	prodh,w,c
 34566  00E7BC  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 34567  00E7BE  90D8               	bcf	status,0,c
 34568  00E7C0  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 34569  00E7C2  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 34570  00E7C4  90D8               	bcf	status,0,c
 34571  00E7C6  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 34572  00E7C8  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 34573  00E7CA  0E04               	movlw	4
 34574  00E7CC  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 34575  00E7CE  0E00               	movlw	0
 34576  00E7D0  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 34577  00E7D2  0E00               	movlw	0
 34578  00E7D4  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 34579  00E7D6  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 34580  00E7D8  0E0D               	movlw	13
 34581  00E7DA  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 34582  00E7DC  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 34583                           
 34584                           ; BSR set to: 0
 34585                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 34586  00E7DE  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34587  00E7E2  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34588  00E7E6  0E00               	movlw	0
 34589  00E7E8  84DB               	bsf	plusw2,2,c
 34590                           
 34591                           ; BSR set to: 0
 34592                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 34593  00E7EA  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 34594  00E7EE  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 34595  00E7F2  0E00               	movlw	0
 34596  00E7F4  8EDB               	bsf	plusw2,7,c
 34597  00E7F6  0012               	return	
 34598  00E7F8                     __end_of_USBStallEndpoint:
 34599                           	opt stack 0
 34600                           tosu	equ	0xFFF
 34601                           tosh	equ	0xFFE
 34602                           tosl	equ	0xFFD
 34603                           pclath	equ	0xFFA
 34604                           tblptru	equ	0xFF8
 34605                           tblptrh	equ	0xFF7
 34606                           tblptrl	equ	0xFF6
 34607                           tablat	equ	0xFF5
 34608                           prodh	equ	0xFF4
 34609                           prodl	equ	0xFF3
 34610                           intcon	equ	0xFF2
 34611                           intcon2	equ	0xFF1
 34612                           intcon3	equ	0xFF0
 34613                           postinc0	equ	0xFEE
 34614                           wreg	equ	0xFE8
 34615                           indf1	equ	0xFE7
 34616                           postinc1	equ	0xFE6
 34617                           postdec1	equ	0xFE5
 34618                           plusw1	equ	0xFE3
 34619                           fsr1h	equ	0xFE2
 34620                           fsr1l	equ	0xFE1
 34621                           indf2	equ	0xFDF
 34622                           postinc2	equ	0xFDE
 34623                           postdec2	equ	0xFDD
 34624                           plusw2	equ	0xFDB
 34625                           fsr2h	equ	0xFDA
 34626                           fsr2l	equ	0xFD9
 34627                           status	equ	0xFD8
 34628                           
 34629 ;; *************** function _ResetSenseData *****************
 34630 ;; Defined at:
 34631 ;;		line 1373 in file "usb_device_msd.c"
 34632 ;; Parameters:    Size  Location     Type
 34633 ;;		None
 34634 ;; Auto vars:     Size  Location     Type
 34635 ;;		None
 34636 ;; Return value:  Size  Location     Type
 34637 ;;                  1    wreg      void 
 34638 ;; Registers used:
 34639 ;;		wreg, status,2
 34640 ;; Tracked objects:
 34641 ;;		On entry : 0/0
 34642 ;;		On exit  : 0/0
 34643 ;;		Unchanged: 0/0
 34644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34649 ;;Total ram usage:        0 bytes
 34650 ;; Hardware stack levels used:    1
 34651 ;; Hardware stack levels required when called:   10
 34652 ;; This function calls:
 34653 ;;		Nothing
 34654 ;; This function is called by:
 34655 ;;		_MSDProcessCommandMediaAbsent
 34656 ;;		_MSDProcessCommandMediaPresent
 34657 ;;		_MSDErrorHandler
 34658 ;; This function uses a non-reentrant model
 34659 ;;
 34660                           
 34661                           	psect	text152
 34662  0115EE                     __ptext152:
 34663                           	opt stack 0
 34664  0115EE                     _ResetSenseData:
 34665                           	opt stack 16
 34666                           
 34667                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 34668                           
 34669                           ; BSR set to: 0
 34670                           ;incstack = 0
 34671  0115EE  0102               	movlb	2	; () banked
 34672  0115F0  9160               	bcf	_gblSenseData& (0+255),0,b
 34673  0115F2  9360               	bcf	_gblSenseData& (0+255),1,b
 34674  0115F4  9560               	bcf	_gblSenseData& (0+255),2,b
 34675  0115F6  9760               	bcf	_gblSenseData& (0+255),3,b
 34676  0115F8  8960               	bsf	_gblSenseData& (0+255),4,b
 34677  0115FA  8B60               	bsf	_gblSenseData& (0+255),5,b
 34678  0115FC  8D60               	bsf	_gblSenseData& (0+255),6,b
 34679                           
 34680                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 34681  0115FE  9F60               	bcf	_gblSenseData& (0+255),7,b
 34682                           
 34683                           ; BSR set to: 2
 34684                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 34685  011600  0E00               	movlw	0
 34686  011602  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 34687                           
 34688                           ; BSR set to: 2
 34689                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 34690  011604  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 34691  011606  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 34692  011608  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 34693  01160A  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 34694                           
 34695                           ; BSR set to: 2
 34696                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 34697  01160C  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 34698                           
 34699                           ; BSR set to: 2
 34700                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 34701  01160E  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 34702                           
 34703                           ; BSR set to: 2
 34704                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 34705  011610  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 34706                           
 34707                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 34708  011612  0E00               	movlw	0
 34709  011614  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 34710                           
 34711                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 34712  011616  0E00               	movlw	0
 34713  011618  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 34714                           
 34715                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 34716  01161A  0E00               	movlw	0
 34717  01161C  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 34718                           
 34719                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 34720  01161E  0E00               	movlw	0
 34721  011620  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 34722                           
 34723                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 34724  011622  0E0A               	movlw	10
 34725  011624  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 34726                           
 34727                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 34728  011626  0E00               	movlw	0
 34729  011628  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 34730  01162A  0E00               	movlw	0
 34731  01162C  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 34732  01162E  0E00               	movlw	0
 34733  011630  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 34734  011632  0E00               	movlw	0
 34735  011634  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 34736                           
 34737                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 34738  011636  0E00               	movlw	0
 34739  011638  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34740                           
 34741                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 34742  01163A  0E00               	movlw	0
 34743  01163C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34744                           
 34745                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 34746  01163E  0E00               	movlw	0
 34747  011640  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 34748                           
 34749                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 34750  011642  0E00               	movlw	0
 34751  011644  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 34752                           
 34753                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 34754  011646  0E00               	movlw	0
 34755  011648  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 34756                           
 34757                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 34758  01164A  0E00               	movlw	0
 34759  01164C  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 34760                           
 34761                           ; BSR set to: 2
 34762  01164E  0012               	return		;funcret
 34763  011650                     __end_of_ResetSenseData:
 34764                           	opt stack 0
 34765                           tosu	equ	0xFFF
 34766                           tosh	equ	0xFFE
 34767                           tosl	equ	0xFFD
 34768                           pclath	equ	0xFFA
 34769                           tblptru	equ	0xFF8
 34770                           tblptrh	equ	0xFF7
 34771                           tblptrl	equ	0xFF6
 34772                           tablat	equ	0xFF5
 34773                           prodh	equ	0xFF4
 34774                           prodl	equ	0xFF3
 34775                           intcon	equ	0xFF2
 34776                           intcon2	equ	0xFF1
 34777                           intcon3	equ	0xFF0
 34778                           postinc0	equ	0xFEE
 34779                           wreg	equ	0xFE8
 34780                           indf1	equ	0xFE7
 34781                           postinc1	equ	0xFE6
 34782                           postdec1	equ	0xFE5
 34783                           plusw1	equ	0xFE3
 34784                           fsr1h	equ	0xFE2
 34785                           fsr1l	equ	0xFE1
 34786                           indf2	equ	0xFDF
 34787                           postinc2	equ	0xFDE
 34788                           postdec2	equ	0xFDD
 34789                           plusw2	equ	0xFDB
 34790                           fsr2h	equ	0xFDA
 34791                           fsr2l	equ	0xFD9
 34792                           status	equ	0xFD8
 34793                           
 34794 ;; *************** function _ExternalFlash_SectorRead *****************
 34795 ;; Defined at:
 34796 ;;		line 64 in file "external_flash.c"
 34797 ;; Parameters:    Size  Location     Type
 34798 ;;  config          2   43[BANK0 ] PTR void 
 34799 ;;		 -> NULL(0), 
 34800 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 34801 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 34802 ;;		 -> msd_buffer(512), 
 34803 ;; Auto vars:     Size  Location     Type
 34804 ;;  page            2   51[BANK0 ] unsigned int 
 34805 ;; Return value:  Size  Location     Type
 34806 ;;                  1    wreg      unsigned char 
 34807 ;; Registers used:
 34808 ;;		wreg, status,2, status,0, cstack
 34809 ;; Tracked objects:
 34810 ;;		On entry : 0/0
 34811 ;;		On exit  : 0/0
 34812 ;;		Unchanged: 0/0
 34813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34817 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34818 ;;Total ram usage:       10 bytes
 34819 ;; Hardware stack levels used:    1
 34820 ;; Hardware stack levels required when called:   15
 34821 ;; This function calls:
 34822 ;;		_flash_page_read
 34823 ;; This function is called by:
 34824 ;;		_MSDReadHandler
 34825 ;; This function uses a non-reentrant model
 34826 ;;
 34827                           
 34828                           	psect	text153
 34829  01253C                     __ptext153:
 34830                           	opt stack 0
 34831  01253C                     _ExternalFlash_SectorRead:
 34832                           	opt stack 10
 34833                           
 34834                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 34835                           
 34836                           ; BSR set to: 2
 34837                           ;incstack = 0
 34838  01253C  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 34839  012540  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 34840                           
 34841                           ;external_flash.c: 70: if(sector_addr >= 4096)
 34842  012544  0100               	movlb	0	; () banked
 34843  012546  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 34844  012548  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 34845  01254A  E104               	bnz	u9040
 34846  01254C  0E10               	movlw	16
 34847  01254E  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 34848  012550  A0D8               	btfss	status,0,c
 34849  012552  D002               	goto	l2904
 34850  012554                     u9040:
 34851                           
 34852                           ; BSR set to: 0
 34853                           ;external_flash.c: 71: {
 34854                           ;external_flash.c: 72: return 0;
 34855  012554  0E00               	movlw	0
 34856                           
 34857                           ; BSR set to: 0
 34858  012556  0012               	return	
 34859  012558                     l2904:
 34860                           
 34861                           ; BSR set to: 0
 34862                           ;external_flash.c: 73: }
 34863                           ;external_flash.c: 76: flash_page_read(page, buffer);
 34864                           
 34865                           ; BSR set to: 0
 34866  012558  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 34867  01255C  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 34868  012560  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 34869  012564  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 34870  012568  EC6F  F094         	call	_flash_page_read	;wreg free
 34871                           
 34872                           ;external_flash.c: 78: return 1;
 34873  01256C  0E01               	movlw	1
 34874  01256E  0012               	return	
 34875  012570                     __end_of_ExternalFlash_SectorRead:
 34876                           	opt stack 0
 34877                           tosu	equ	0xFFF
 34878                           tosh	equ	0xFFE
 34879                           tosl	equ	0xFFD
 34880                           pclath	equ	0xFFA
 34881                           tblptru	equ	0xFF8
 34882                           tblptrh	equ	0xFF7
 34883                           tblptrl	equ	0xFF6
 34884                           tablat	equ	0xFF5
 34885                           prodh	equ	0xFF4
 34886                           prodl	equ	0xFF3
 34887                           intcon	equ	0xFF2
 34888                           intcon2	equ	0xFF1
 34889                           intcon3	equ	0xFF0
 34890                           postinc0	equ	0xFEE
 34891                           wreg	equ	0xFE8
 34892                           indf1	equ	0xFE7
 34893                           postinc1	equ	0xFE6
 34894                           postdec1	equ	0xFE5
 34895                           plusw1	equ	0xFE3
 34896                           fsr1h	equ	0xFE2
 34897                           fsr1l	equ	0xFE1
 34898                           indf2	equ	0xFDF
 34899                           postinc2	equ	0xFDE
 34900                           postdec2	equ	0xFDD
 34901                           plusw2	equ	0xFDB
 34902                           fsr2h	equ	0xFDA
 34903                           fsr2l	equ	0xFD9
 34904                           status	equ	0xFD8
 34905                           
 34906 ;; *************** function _flash_page_read *****************
 34907 ;; Defined at:
 34908 ;;		line 538 in file "flash.c"
 34909 ;; Parameters:    Size  Location     Type
 34910 ;;  page            2   39[BANK0 ] unsigned int 
 34911 ;;  data            2   41[BANK0 ] PTR unsigned char 
 34912 ;;		 -> msd_buffer(512), 
 34913 ;; Auto vars:     Size  Location     Type
 34914 ;;		None
 34915 ;; Return value:  Size  Location     Type
 34916 ;;                  1    wreg      void 
 34917 ;; Registers used:
 34918 ;;		wreg, status,2, status,0, cstack
 34919 ;; Tracked objects:
 34920 ;;		On entry : 0/0
 34921 ;;		On exit  : 0/0
 34922 ;;		Unchanged: 0/0
 34923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34928 ;;Total ram usage:        4 bytes
 34929 ;; Hardware stack levels used:    1
 34930 ;; Hardware stack levels required when called:   14
 34931 ;; This function calls:
 34932 ;;		_flash_partial_read
 34933 ;; This function is called by:
 34934 ;;		_ExternalFlash_SectorRead
 34935 ;; This function uses a non-reentrant model
 34936 ;;
 34937                           
 34938                           	psect	text154
 34939  0128DE                     __ptext154:
 34940                           	opt stack 0
 34941  0128DE                     _flash_page_read:
 34942                           	opt stack 10
 34943                           
 34944                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 34945                           
 34946                           ;incstack = 0
 34947  0128DE  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 34948  0128E2  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 34949  0128E6  0E00               	movlw	0
 34950  0128E8  0100               	movlb	0	; () banked
 34951  0128EA  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 34952  0128EC  0E00               	movlw	0
 34953  0128EE  6F75               	movwf	flash_partial_read@start& (0+255),b
 34954  0128F0  0E02               	movlw	2
 34955  0128F2  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 34956  0128F4  0E00               	movlw	0
 34957  0128F6  6F77               	movwf	flash_partial_read@length& (0+255),b
 34958  0128F8  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 34959  0128FC  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 34960  012900  EC00  F088         	call	_flash_partial_read	;wreg free
 34961  012904  0012               	return		;funcret
 34962  012906                     __end_of_flash_page_read:
 34963                           	opt stack 0
 34964                           tosu	equ	0xFFF
 34965                           tosh	equ	0xFFE
 34966                           tosl	equ	0xFFD
 34967                           pclath	equ	0xFFA
 34968                           tblptru	equ	0xFF8
 34969                           tblptrh	equ	0xFF7
 34970                           tblptrl	equ	0xFF6
 34971                           tablat	equ	0xFF5
 34972                           prodh	equ	0xFF4
 34973                           prodl	equ	0xFF3
 34974                           intcon	equ	0xFF2
 34975                           intcon2	equ	0xFF1
 34976                           intcon3	equ	0xFF0
 34977                           postinc0	equ	0xFEE
 34978                           wreg	equ	0xFE8
 34979                           indf1	equ	0xFE7
 34980                           postinc1	equ	0xFE6
 34981                           postdec1	equ	0xFE5
 34982                           plusw1	equ	0xFE3
 34983                           fsr1h	equ	0xFE2
 34984                           fsr1l	equ	0xFE1
 34985                           indf2	equ	0xFDF
 34986                           postinc2	equ	0xFDE
 34987                           postdec2	equ	0xFDD
 34988                           plusw2	equ	0xFDB
 34989                           fsr2h	equ	0xFDA
 34990                           fsr2l	equ	0xFD9
 34991                           status	equ	0xFD8
 34992                           
 34993 ;; *************** function _flash_partial_read *****************
 34994 ;; Defined at:
 34995 ;;		line 564 in file "flash.c"
 34996 ;; Parameters:    Size  Location     Type
 34997 ;;  page            2   19[BANK0 ] unsigned int 
 34998 ;;  start           2   21[BANK0 ] unsigned int 
 34999 ;;  length          2   23[BANK0 ] unsigned int 
 35000 ;;  data            2   25[BANK0 ] PTR unsigned char 
 35001 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 35002 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 35003 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 35004 ;; Auto vars:     Size  Location     Type
 35005 ;;  command         4   31[BANK0 ] unsigned char [4]
 35006 ;;  address         4   35[BANK0 ] unsigned long 
 35007 ;; Return value:  Size  Location     Type
 35008 ;;                  1    wreg      void 
 35009 ;; Registers used:
 35010 ;;		wreg, status,2, status,0, cstack
 35011 ;; Tracked objects:
 35012 ;;		On entry : 0/0
 35013 ;;		On exit  : 0/0
 35014 ;;		Unchanged: 0/0
 35015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35016 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35017 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35019 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35020 ;;Total ram usage:       20 bytes
 35021 ;; Hardware stack levels used:    1
 35022 ;; Hardware stack levels required when called:   13
 35023 ;; This function calls:
 35024 ;;		__flash_spi_tx_rx
 35025 ;;		_flash_is_busy
 35026 ;; This function is called by:
 35027 ;;		_flash_page_read
 35028 ;;		__root_is_available
 35029 ;;		__get_empty_cluster
 35030 ;;		_fat_get_empty_clusters
 35031 ;;		__read_fat
 35032 ;;		__read_root
 35033 ;;		_fat_find_file
 35034 ;;		__get_first_cluster
 35035 ;;		__get_file_size
 35036 ;;		_fat_get_file_size
 35037 ;;		_fat_read_from_file
 35038 ;; This function uses a non-reentrant model
 35039 ;;
 35040                           
 35041                           	psect	text155
 35042  011000                     __ptext155:
 35043                           	opt stack 0
 35044  011000                     _flash_partial_read:
 35045                           	opt stack 15
 35046                           
 35047                           ;flash.c: 566: uint32_t address;
 35048                           ;flash.c: 567: uint8_t command[4];
 35049                           ;flash.c: 570: while(flash_is_busy());
 35050                           
 35051                           ;incstack = 0
 35052  011000  EC9E  F095         	call	_flash_is_busy	;wreg free
 35053  011004  0900               	iorlw	0
 35054  011006  A4D8               	btfss	status,2,c
 35055  011008  D7FB               	goto	_flash_partial_read
 35056                           
 35057                           ;flash.c: 573: address = page;
 35058  01100A  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 35059  01100E  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 35060  011012  0100               	movlb	0	; () banked
 35061  011014  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 35062  011016  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 35063                           
 35064                           ; BSR set to: 0
 35065                           ;flash.c: 574: address <<= 9;
 35066  011018  0E09               	movlw	9
 35067  01101A                     u8395:
 35068  01101A  90D8               	bcf	status,0,c
 35069  01101C  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 35070  01101E  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 35071  011020  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 35072  011022  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 35073  011024  2EE8               	decfsz	wreg,f,c
 35074  011026  D7F9               	goto	u8395
 35075                           
 35076                           ; BSR set to: 0
 35077                           ;flash.c: 575: address |= start;
 35078  011028  5175               	movf	flash_partial_read@start& (0+255),w,b
 35079  01102A  6F7B               	movwf	??_flash_partial_read& (0+255),b
 35080  01102C  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 35081  01102E  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 35082  011030  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 35083  011032  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 35084  011034  517B               	movf	??_flash_partial_read& (0+255),w,b
 35085  011036  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 35086  011038  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 35087  01103A  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 35088  01103C  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 35089  01103E  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 35090  011040  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 35091  011042  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 35092                           
 35093                           ; BSR set to: 0
 35094                           ;flash.c: 578: command[0] = 0x03;
 35095  011044  0E03               	movlw	3
 35096  011046  6F7F               	movwf	flash_partial_read@command& (0+255),b
 35097                           
 35098                           ; BSR set to: 0
 35099                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 35100  011048  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 35101                           
 35102                           ; BSR set to: 0
 35103                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 35104  01104C  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 35105  01104E  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 35106                           
 35107                           ; BSR set to: 0
 35108                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 35109  011050  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 35110                           
 35111                           ; BSR set to: 0
 35112                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 35113  011054  0E7F               	movlw	low flash_partial_read@command
 35114  011056  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 35115  011058  0E00               	movlw	high flash_partial_read@command
 35116  01105A  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 35117  01105C  0E00               	movlw	0
 35118  01105E  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 35119  011060  0E04               	movlw	4
 35120  011062  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 35121  011064  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 35122  011068  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 35123  01106C  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 35124  011070  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 35125  011074  ECA3  F081         	call	__flash_spi_tx_rx	;wreg free
 35126  011078  0012               	return		;funcret
 35127  01107A                     __end_of_flash_partial_read:
 35128                           	opt stack 0
 35129                           tosu	equ	0xFFF
 35130                           tosh	equ	0xFFE
 35131                           tosl	equ	0xFFD
 35132                           pclath	equ	0xFFA
 35133                           tblptru	equ	0xFF8
 35134                           tblptrh	equ	0xFF7
 35135                           tblptrl	equ	0xFF6
 35136                           tablat	equ	0xFF5
 35137                           prodh	equ	0xFF4
 35138                           prodl	equ	0xFF3
 35139                           intcon	equ	0xFF2
 35140                           intcon2	equ	0xFF1
 35141                           intcon3	equ	0xFF0
 35142                           postinc0	equ	0xFEE
 35143                           wreg	equ	0xFE8
 35144                           indf1	equ	0xFE7
 35145                           postinc1	equ	0xFE6
 35146                           postdec1	equ	0xFE5
 35147                           plusw1	equ	0xFE3
 35148                           fsr1h	equ	0xFE2
 35149                           fsr1l	equ	0xFE1
 35150                           indf2	equ	0xFDF
 35151                           postinc2	equ	0xFDE
 35152                           postdec2	equ	0xFDD
 35153                           plusw2	equ	0xFDB
 35154                           fsr2h	equ	0xFDA
 35155                           fsr2l	equ	0xFD9
 35156                           status	equ	0xFD8
 35157                           
 35158 ;; *************** function _flash_is_busy *****************
 35159 ;; Defined at:
 35160 ;;		line 475 in file "flash.c"
 35161 ;; Parameters:    Size  Location     Type
 35162 ;;		None
 35163 ;; Auto vars:     Size  Location     Type
 35164 ;;  status          2   17[BANK0 ] unsigned int 
 35165 ;; Return value:  Size  Location     Type
 35166 ;;                  1    wreg      unsigned char 
 35167 ;; Registers used:
 35168 ;;		wreg, status,2, status,0, cstack
 35169 ;; Tracked objects:
 35170 ;;		On entry : 0/0
 35171 ;;		On exit  : 0/0
 35172 ;;		Unchanged: 0/0
 35173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35177 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35178 ;;Total ram usage:        2 bytes
 35179 ;; Hardware stack levels used:    1
 35180 ;; Hardware stack levels required when called:   12
 35181 ;; This function calls:
 35182 ;;		__flash_get_status
 35183 ;;		__flash_wakeup
 35184 ;; This function is called by:
 35185 ;;		__flash_set_page_size
 35186 ;;		__flash_copy_page_to_buffer
 35187 ;;		__flash_compare_page_to_buffer
 35188 ;;		__flash_write_to_buffer
 35189 ;;		__flash_write_page_from_buffer
 35190 ;;		_flash_partial_read
 35191 ;;		_flash_partial_write
 35192 ;;		__flash_erase_page
 35193 ;;		_flash_set_power_state
 35194 ;; This function uses a non-reentrant model
 35195 ;;
 35196                           
 35197                           	psect	text156
 35198  012B3C                     __ptext156:
 35199                           	opt stack 0
 35200  012B3C                     _flash_is_busy:
 35201                           	opt stack 15
 35202                           
 35203                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 35204                           
 35205                           ;incstack = 0
 35206  012B3C  504B               	movf	_power_state,w,c
 35207  012B3E  A4D8               	btfss	status,2,c
 35208                           
 35209                           ;flash.c: 479: {
 35210                           ;flash.c: 480: _flash_wakeup();
 35211  012B40  EC04  F08F         	call	__flash_wakeup	;wreg free
 35212                           
 35213                           ;flash.c: 481: }
 35214                           ;flash.c: 484: uint16_t status = _flash_get_status();
 35215  012B44  ECB8  F092         	call	__flash_get_status	;wreg free
 35216  012B48  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 35217  012B4C  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 35218                           
 35219                           ;flash.c: 485: if(status & 0b0000000010000000)
 35220  012B50  0100               	movlb	0	; () banked
 35221  012B52  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 35222  012B54  D002               	goto	l2839
 35223                           
 35224                           ; BSR set to: 0
 35225                           ;flash.c: 486: {
 35226                           ;flash.c: 488: return 0;
 35227  012B56  0E00               	movlw	0
 35228                           
 35229                           ; BSR set to: 0
 35230                           ;flash.c: 489: }
 35231                           
 35232                           ; BSR set to: 0
 35233  012B58  0012               	return	
 35234  012B5A                     l2839:
 35235                           
 35236                           ; BSR set to: 0
 35237                           ;flash.c: 490: else
 35238                           ;flash.c: 491: {
 35239                           ;flash.c: 493: return 1;
 35240                           
 35241                           ; BSR set to: 0
 35242  012B5A  0E01               	movlw	1
 35243                           
 35244                           ; BSR set to: 0
 35245  012B5C  0012               	return	
 35246  012B5E                     __end_of_flash_is_busy:
 35247                           	opt stack 0
 35248                           tosu	equ	0xFFF
 35249                           tosh	equ	0xFFE
 35250                           tosl	equ	0xFFD
 35251                           pclath	equ	0xFFA
 35252                           tblptru	equ	0xFF8
 35253                           tblptrh	equ	0xFF7
 35254                           tblptrl	equ	0xFF6
 35255                           tablat	equ	0xFF5
 35256                           prodh	equ	0xFF4
 35257                           prodl	equ	0xFF3
 35258                           intcon	equ	0xFF2
 35259                           intcon2	equ	0xFF1
 35260                           intcon3	equ	0xFF0
 35261                           postinc0	equ	0xFEE
 35262                           wreg	equ	0xFE8
 35263                           indf1	equ	0xFE7
 35264                           postinc1	equ	0xFE6
 35265                           postdec1	equ	0xFE5
 35266                           plusw1	equ	0xFE3
 35267                           fsr1h	equ	0xFE2
 35268                           fsr1l	equ	0xFE1
 35269                           indf2	equ	0xFDF
 35270                           postinc2	equ	0xFDE
 35271                           postdec2	equ	0xFDD
 35272                           plusw2	equ	0xFDB
 35273                           fsr2h	equ	0xFDA
 35274                           fsr2l	equ	0xFD9
 35275                           status	equ	0xFD8
 35276                           
 35277 ;; *************** function __flash_wakeup *****************
 35278 ;; Defined at:
 35279 ;;		line 289 in file "flash.c"
 35280 ;; Parameters:    Size  Location     Type
 35281 ;;		None
 35282 ;; Auto vars:     Size  Location     Type
 35283 ;;  command         1    8[BANK0 ] unsigned char 
 35284 ;; Return value:  Size  Location     Type
 35285 ;;                  1    wreg      void 
 35286 ;; Registers used:
 35287 ;;		wreg, status,2, status,0, cstack
 35288 ;; Tracked objects:
 35289 ;;		On entry : 0/0
 35290 ;;		On exit  : 0/0
 35291 ;;		Unchanged: 0/0
 35292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35297 ;;Total ram usage:        1 bytes
 35298 ;; Hardware stack levels used:    1
 35299 ;; Hardware stack levels required when called:   11
 35300 ;; This function calls:
 35301 ;;		__flash_spi_tx
 35302 ;; This function is called by:
 35303 ;;		_flash_is_busy
 35304 ;;		_flash_set_power_state
 35305 ;; This function uses a non-reentrant model
 35306 ;;
 35307                           
 35308                           	psect	text157
 35309  011E08                     __ptext157:
 35310                           	opt stack 0
 35311  011E08                     __flash_wakeup:
 35312                           	opt stack 15
 35313                           
 35314                           ;flash.c: 291: uint8_t command;
 35315                           ;flash.c: 293: switch(power_state)
 35316                           
 35317                           ; BSR set to: 0
 35318                           ;incstack = 0
 35319  011E08  D020               	goto	l2785
 35320  011E0A                     
 35321                           ;flash.c: 296: command = 0xAB;
 35322  011E0A  0EAB               	movlw	171
 35323  011E0C  0100               	movlb	0	; () banked
 35324  011E0E  6F68               	movwf	__flash_wakeup@command& (0+255),b
 35325                           
 35326                           ; BSR set to: 0
 35327                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 35328  011E10  0E68               	movlw	low __flash_wakeup@command
 35329  011E12  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 35330  011E14  0E00               	movlw	high __flash_wakeup@command
 35331  011E16  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 35332  011E18  0E00               	movlw	0
 35333  011E1A  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 35334  011E1C  0E01               	movlw	1
 35335  011E1E  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 35336  011E20  EC86  F08D         	call	__flash_spi_tx	;wreg free
 35337                           
 35338                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 35339  011E24  0E17               	movlw	23
 35340  011E26                     u16257:
 35341  011E26  2EE8               	decfsz	wreg,f,c
 35342  011E28  D7FE               	bra	u16257
 35343  011E2A  F000               	nop	
 35344                           
 35345                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 35346  011E2C  0E00               	movlw	0
 35347  011E2E  6E4B               	movwf	_power_state,c
 35348                           
 35349                           ;flash.c: 300: break;
 35350  011E30  0012               	return	
 35351  011E32                     l2788:
 35352                           
 35353                           ;flash.c: 305: LATDbits.LD7 = 0;
 35354  011E32  9E8C               	bcf	3980,7,c	;volatile
 35355                           
 35356                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 35357  011E34  0E0D               	movlw	13
 35358  011E36                     u16267:
 35359  011E36  2EE8               	decfsz	wreg,f,c
 35360  011E38  D7FE               	bra	u16267
 35361  011E3A  F000               	nop	
 35362                           
 35363                           ;flash.c: 307: LATDbits.LD7 = 1;
 35364  011E3C  8E8C               	bsf	3980,7,c	;volatile
 35365                           
 35366                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 35367  011E3E  0E50               	movlw	80
 35368  011E40                     u16277:
 35369  011E40  2EE8               	decfsz	wreg,f,c
 35370  011E42  D7FE               	bra	u16277
 35371                           
 35372                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 35373  011E44  0E00               	movlw	0
 35374  011E46  6E4B               	movwf	_power_state,c
 35375                           
 35376                           ;flash.c: 311: }
 35377                           
 35378                           ;flash.c: 310: break;
 35379  011E48  0012               	return	
 35380  011E4A                     l2785:
 35381  011E4A  504B               	movf	_power_state,w,c
 35382                           
 35383                           ; Switch size 1, requested type "space"
 35384                           ; Number of cases is 2, Range of values is 1 to 2
 35385                           ; switch strategies available:
 35386                           ; Name         Instructions Cycles
 35387                           ; simple_byte            7     4 (average)
 35388                           ;	Chosen strategy is simple_byte
 35389  011E4C  0A01               	xorlw	1	; case 1
 35390  011E4E  B4D8               	btfsc	status,2,c
 35391  011E50  D7DC               	goto	l2786
 35392  011E52  0A03               	xorlw	3	; case 2
 35393  011E54  A4D8               	btfss	status,2,c
 35394  011E56  0012               	return	
 35395  011E58  D7EC               	goto	l2788
 35396  011E5A                     __end_of__flash_wakeup:
 35397                           	opt stack 0
 35398                           tosu	equ	0xFFF
 35399                           tosh	equ	0xFFE
 35400                           tosl	equ	0xFFD
 35401                           pclath	equ	0xFFA
 35402                           tblptru	equ	0xFF8
 35403                           tblptrh	equ	0xFF7
 35404                           tblptrl	equ	0xFF6
 35405                           tablat	equ	0xFF5
 35406                           prodh	equ	0xFF4
 35407                           prodl	equ	0xFF3
 35408                           intcon	equ	0xFF2
 35409                           intcon2	equ	0xFF1
 35410                           intcon3	equ	0xFF0
 35411                           postinc0	equ	0xFEE
 35412                           wreg	equ	0xFE8
 35413                           indf1	equ	0xFE7
 35414                           postinc1	equ	0xFE6
 35415                           postdec1	equ	0xFE5
 35416                           plusw1	equ	0xFE3
 35417                           fsr1h	equ	0xFE2
 35418                           fsr1l	equ	0xFE1
 35419                           indf2	equ	0xFDF
 35420                           postinc2	equ	0xFDE
 35421                           postdec2	equ	0xFDD
 35422                           plusw2	equ	0xFDB
 35423                           fsr2h	equ	0xFDA
 35424                           fsr2l	equ	0xFD9
 35425                           status	equ	0xFD8
 35426                           
 35427 ;; *************** function __flash_spi_tx *****************
 35428 ;; Defined at:
 35429 ;;		line 103 in file "flash.c"
 35430 ;; Parameters:    Size  Location     Type
 35431 ;;  data            2    0[BANK0 ] PTR unsigned char 
 35432 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 35433 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 35434 ;;  length          2    2[BANK0 ] unsigned int 
 35435 ;; Auto vars:     Size  Location     Type
 35436 ;;		None
 35437 ;; Return value:  Size  Location     Type
 35438 ;;                  1    wreg      void 
 35439 ;; Registers used:
 35440 ;;		wreg, status,2, status,0
 35441 ;; Tracked objects:
 35442 ;;		On entry : 0/0
 35443 ;;		On exit  : 0/0
 35444 ;;		Unchanged: 0/0
 35445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35446 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35449 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35450 ;;Total ram usage:        8 bytes
 35451 ;; Hardware stack levels used:    1
 35452 ;; Hardware stack levels required when called:   10
 35453 ;; This function calls:
 35454 ;;		Nothing
 35455 ;; This function is called by:
 35456 ;;		__flash_set_page_size
 35457 ;;		__flash_wakeup
 35458 ;;		__flash_copy_page_to_buffer
 35459 ;;		__flash_compare_page_to_buffer
 35460 ;;		__flash_write_page_from_buffer
 35461 ;;		__flash_erase_page
 35462 ;;		_flash_set_power_state
 35463 ;; This function uses a non-reentrant model
 35464 ;;
 35465                           
 35466                           	psect	text158
 35467  011B0C                     __ptext158:
 35468                           	opt stack 0
 35469  011B0C                     __flash_spi_tx:
 35470                           	opt stack 15
 35471                           
 35472                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 35473                           
 35474                           ;incstack = 0
 35475  011B0C  9E88               	bcf	3976,7,c	;volatile
 35476                           
 35477                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 35478  011B0E  9C88               	bcf	3976,6,c	;volatile
 35479                           
 35480                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 35481  011B10  8A88               	bsf	3976,5,c	;volatile
 35482                           
 35483                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 35484  011B12  9888               	bcf	3976,4,c	;volatile
 35485                           
 35486                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 35487  011B14  9688               	bcf	3976,3,c	;volatile
 35488                           
 35489                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 35490  011B16  8488               	bsf	3976,2,c	;volatile
 35491                           
 35492                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 35493  011B18  9288               	bcf	3976,1,c	;volatile
 35494                           
 35495                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 35496  011B1A  9886               	bcf	3974,4,c	;volatile
 35497  011B1C  9A86               	bcf	3974,5,c	;volatile
 35498  011B1E  9C86               	bcf	3974,6,c	;volatile
 35499  011B20  9E86               	bcf	3974,7,c	;volatile
 35500                           
 35501                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 35502  011B22  9086               	bcf	3974,0,c	;volatile
 35503  011B24  9286               	bcf	3974,1,c	;volatile
 35504  011B26  9486               	bcf	3974,2,c	;volatile
 35505  011B28  9686               	bcf	3974,3,c	;volatile
 35506                           
 35507                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35508  011B2A  0100               	movlb	0	; () banked
 35509  011B2C  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 35510  011B2E  6E6A               	movwf	3946,c	;volatile
 35511                           
 35512                           ; BSR set to: 0
 35513                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35514  011B30  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 35515                           
 35516                           ; BSR set to: 0
 35517                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 35518  011B34  0EFF               	movlw	255
 35519  011B36  6F64               	movwf	??__flash_spi_tx& (0+255),b
 35520  011B38  0EFF               	movlw	255
 35521  011B3A  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 35522  011B3C  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 35523  011B40  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 35524  011B44  5164               	movf	??__flash_spi_tx& (0+255),w,b
 35525  011B46  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 35526  011B48  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 35527  011B4A  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 35528  011B4C  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 35529  011B50  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 35530  011B52  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 35531  011B54  6E66               	movwf	3942,c	;volatile
 35532                           
 35533                           ; BSR set to: 0
 35534                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 35535  011B56  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 35536  011B58  6E67               	movwf	3943,c	;volatile
 35537                           
 35538                           ; BSR set to: 0
 35539                           ;flash.c: 131: LATDbits.LD7 = 0;
 35540  011B5A  9E8C               	bcf	3980,7,c	;volatile
 35541                           
 35542                           ; BSR set to: 0
 35543                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 35544  011B5C  8088               	bsf	3976,0,c	;volatile
 35545  011B5E                     
 35546                           ; BSR set to: 0
 35547  011B5E  B088               	btfsc	3976,0,c	;volatile
 35548  011B60  D7FE               	goto	l2751
 35549                           
 35550                           ;flash.c: 134: LATDbits.LD7 = 1;
 35551  011B62  8E8C               	bsf	3980,7,c	;volatile
 35552  011B64  0012               	return		;funcret
 35553  011B66                     __end_of__flash_spi_tx:
 35554                           	opt stack 0
 35555                           tosu	equ	0xFFF
 35556                           tosh	equ	0xFFE
 35557                           tosl	equ	0xFFD
 35558                           pclath	equ	0xFFA
 35559                           tblptru	equ	0xFF8
 35560                           tblptrh	equ	0xFF7
 35561                           tblptrl	equ	0xFF6
 35562                           tablat	equ	0xFF5
 35563                           prodh	equ	0xFF4
 35564                           prodl	equ	0xFF3
 35565                           intcon	equ	0xFF2
 35566                           intcon2	equ	0xFF1
 35567                           intcon3	equ	0xFF0
 35568                           postinc0	equ	0xFEE
 35569                           wreg	equ	0xFE8
 35570                           indf1	equ	0xFE7
 35571                           postinc1	equ	0xFE6
 35572                           postdec1	equ	0xFE5
 35573                           plusw1	equ	0xFE3
 35574                           fsr1h	equ	0xFE2
 35575                           fsr1l	equ	0xFE1
 35576                           indf2	equ	0xFDF
 35577                           postinc2	equ	0xFDE
 35578                           postdec2	equ	0xFDD
 35579                           plusw2	equ	0xFDB
 35580                           fsr2h	equ	0xFDA
 35581                           fsr2l	equ	0xFD9
 35582                           status	equ	0xFD8
 35583                           
 35584 ;; *************** function __flash_get_status *****************
 35585 ;; Defined at:
 35586 ;;		line 278 in file "flash.c"
 35587 ;; Parameters:    Size  Location     Type
 35588 ;;		None
 35589 ;; Auto vars:     Size  Location     Type
 35590 ;;  status          2   15[BANK0 ] unsigned int 
 35591 ;;  command         1   14[BANK0 ] unsigned char 
 35592 ;; Return value:  Size  Location     Type
 35593 ;;                  2   12[BANK0 ] unsigned int 
 35594 ;; Registers used:
 35595 ;;		wreg, status,2, status,0, cstack
 35596 ;; Tracked objects:
 35597 ;;		On entry : 0/0
 35598 ;;		On exit  : 0/0
 35599 ;;		Unchanged: 0/0
 35600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35602 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35604 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35605 ;;Total ram usage:        5 bytes
 35606 ;; Hardware stack levels used:    1
 35607 ;; Hardware stack levels required when called:   11
 35608 ;; This function calls:
 35609 ;;		__flash_spi_tx_rx
 35610 ;; This function is called by:
 35611 ;;		__flash_compare_page_to_buffer
 35612 ;;		_flash_is_busy
 35613 ;; This function uses a non-reentrant model
 35614 ;;
 35615                           
 35616                           	psect	text159
 35617  012570                     __ptext159:
 35618                           	opt stack 0
 35619  012570                     __flash_get_status:
 35620                           	opt stack 15
 35621                           
 35622                           ;flash.c: 282: uint8_t command = 0xD7;
 35623                           
 35624                           ;incstack = 0
 35625  012570  0ED7               	movlw	215
 35626  012572  0100               	movlb	0	; () banked
 35627  012574  6F6E               	movwf	__flash_get_status@command& (0+255),b
 35628                           
 35629                           ; BSR set to: 0
 35630                           ;flash.c: 283: uint16_t status;
 35631                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 35632  012576  0E6E               	movlw	low __flash_get_status@command
 35633  012578  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 35634  01257A  0E00               	movlw	high __flash_get_status@command
 35635  01257C  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 35636  01257E  0E00               	movlw	0
 35637  012580  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 35638  012582  0E01               	movlw	1
 35639  012584  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 35640  012586  0E6F               	movlw	low __flash_get_status@status
 35641  012588  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 35642  01258A  0E00               	movlw	high __flash_get_status@status
 35643  01258C  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 35644  01258E  0E00               	movlw	0
 35645  012590  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 35646  012592  0E02               	movlw	2
 35647  012594  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 35648  012596  ECA3  F081         	call	__flash_spi_tx_rx	;wreg free
 35649                           
 35650                           ;flash.c: 285: return status;
 35651  01259A  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 35652  01259E  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 35653  0125A2  0012               	return	
 35654  0125A4                     __end_of__flash_get_status:
 35655                           	opt stack 0
 35656                           tosu	equ	0xFFF
 35657                           tosh	equ	0xFFE
 35658                           tosl	equ	0xFFD
 35659                           pclath	equ	0xFFA
 35660                           tblptru	equ	0xFF8
 35661                           tblptrh	equ	0xFF7
 35662                           tblptrl	equ	0xFF6
 35663                           tablat	equ	0xFF5
 35664                           prodh	equ	0xFF4
 35665                           prodl	equ	0xFF3
 35666                           intcon	equ	0xFF2
 35667                           intcon2	equ	0xFF1
 35668                           intcon3	equ	0xFF0
 35669                           postinc0	equ	0xFEE
 35670                           wreg	equ	0xFE8
 35671                           indf1	equ	0xFE7
 35672                           postinc1	equ	0xFE6
 35673                           postdec1	equ	0xFE5
 35674                           plusw1	equ	0xFE3
 35675                           fsr1h	equ	0xFE2
 35676                           fsr1l	equ	0xFE1
 35677                           indf2	equ	0xFDF
 35678                           postinc2	equ	0xFDE
 35679                           postdec2	equ	0xFDD
 35680                           plusw2	equ	0xFDB
 35681                           fsr2h	equ	0xFDA
 35682                           fsr2l	equ	0xFD9
 35683                           status	equ	0xFD8
 35684                           
 35685 ;; *************** function __flash_spi_tx_rx *****************
 35686 ;; Defined at:
 35687 ;;		line 194 in file "flash.c"
 35688 ;; Parameters:    Size  Location     Type
 35689 ;;  command         2    0[BANK0 ] PTR unsigned char 
 35690 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 35691 ;;  command_leng    2    2[BANK0 ] unsigned int 
 35692 ;;  data            2    4[BANK0 ] PTR unsigned char 
 35693 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 35694 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 35695 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 35696 ;;		 -> msd_buffer(512), 
 35697 ;;  data_length     2    6[BANK0 ] unsigned int 
 35698 ;; Auto vars:     Size  Location     Type
 35699 ;;		None
 35700 ;; Return value:  Size  Location     Type
 35701 ;;                  1    wreg      void 
 35702 ;; Registers used:
 35703 ;;		wreg, status,2, status,0
 35704 ;; Tracked objects:
 35705 ;;		On entry : 0/0
 35706 ;;		On exit  : 0/0
 35707 ;;		Unchanged: 0/0
 35708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35709 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35711 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35712 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35713 ;;Total ram usage:       12 bytes
 35714 ;; Hardware stack levels used:    1
 35715 ;; Hardware stack levels required when called:   10
 35716 ;; This function calls:
 35717 ;;		Nothing
 35718 ;; This function is called by:
 35719 ;;		__flash_get_status
 35720 ;;		_flash_partial_read
 35721 ;; This function uses a non-reentrant model
 35722 ;;
 35723                           
 35724                           	psect	text160
 35725  010346                     __ptext160:
 35726                           	opt stack 0
 35727  010346                     __flash_spi_tx_rx:
 35728                           	opt stack 15
 35729                           
 35730                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 35731                           
 35732                           ;incstack = 0
 35733  010346  9E88               	bcf	3976,7,c	;volatile
 35734                           
 35735                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 35736  010348  9C88               	bcf	3976,6,c	;volatile
 35737                           
 35738                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 35739  01034A  8A88               	bsf	3976,5,c	;volatile
 35740                           
 35741                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 35742  01034C  9888               	bcf	3976,4,c	;volatile
 35743                           
 35744                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 35745  01034E  9688               	bcf	3976,3,c	;volatile
 35746                           
 35747                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 35748  010350  8488               	bsf	3976,2,c	;volatile
 35749                           
 35750                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 35751  010352  9288               	bcf	3976,1,c	;volatile
 35752                           
 35753                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 35754  010354  9886               	bcf	3974,4,c	;volatile
 35755  010356  9A86               	bcf	3974,5,c	;volatile
 35756  010358  9C86               	bcf	3974,6,c	;volatile
 35757  01035A  9E86               	bcf	3974,7,c	;volatile
 35758                           
 35759                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 35760  01035C  9086               	bcf	3974,0,c	;volatile
 35761  01035E  9286               	bcf	3974,1,c	;volatile
 35762  010360  9486               	bcf	3974,2,c	;volatile
 35763  010362  9686               	bcf	3974,3,c	;volatile
 35764                           
 35765                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35766  010364  0100               	movlb	0	; () banked
 35767  010366  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 35768  010368  6E6A               	movwf	3946,c	;volatile
 35769                           
 35770                           ; BSR set to: 0
 35771                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35772  01036A  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 35773                           
 35774                           ; BSR set to: 0
 35775                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35776  01036E  0EFF               	movlw	255
 35777  010370  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35778  010372  0EFF               	movlw	255
 35779  010374  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35780  010376  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 35781  01037A  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 35782  01037E  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35783  010380  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35784  010382  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35785  010384  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35786  010386  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35787  01038A  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35788  01038C  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35789  01038E  6E66               	movwf	3942,c	;volatile
 35790                           
 35791                           ; BSR set to: 0
 35792                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35793  010390  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 35794  010392  6E67               	movwf	3943,c	;volatile
 35795                           
 35796                           ; BSR set to: 0
 35797                           ;flash.c: 222: LATDbits.LD7 = 0;
 35798  010394  9E8C               	bcf	3980,7,c	;volatile
 35799                           
 35800                           ; BSR set to: 0
 35801                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 35802  010396  8088               	bsf	3976,0,c	;volatile
 35803  010398                     
 35804                           ; BSR set to: 0
 35805  010398  B088               	btfsc	3976,0,c	;volatile
 35806  01039A  D7FE               	goto	l2766
 35807                           
 35808                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 35809  01039C  9A88               	bcf	3976,5,c	;volatile
 35810                           
 35811                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 35812  01039E  8888               	bsf	3976,4,c	;volatile
 35813                           
 35814                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 35815  0103A0  9688               	bcf	3976,3,c	;volatile
 35816                           
 35817                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 35818  0103A2  9488               	bcf	3976,2,c	;volatile
 35819                           
 35820                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35821  0103A4  0100               	movlb	0	; () banked
 35822  0103A6  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 35823  0103A8  6E68               	movwf	3944,c	;volatile
 35824                           
 35825                           ; BSR set to: 0
 35826                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35827  0103AA  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 35828                           
 35829                           ; BSR set to: 0
 35830                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35831  0103AE  0EFF               	movlw	255
 35832  0103B0  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35833  0103B2  0EFF               	movlw	255
 35834  0103B4  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35835  0103B6  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 35836  0103BA  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 35837  0103BE  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35838  0103C0  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35839  0103C2  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35840  0103C4  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35841  0103C6  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35842  0103CA  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35843  0103CC  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35844  0103CE  6E66               	movwf	3942,c	;volatile
 35845                           
 35846                           ; BSR set to: 0
 35847                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35848  0103D0  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 35849  0103D2  6E67               	movwf	3943,c	;volatile
 35850                           
 35851                           ; BSR set to: 0
 35852                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 35853  0103D4  8088               	bsf	3976,0,c	;volatile
 35854  0103D6                     
 35855                           ; BSR set to: 0
 35856  0103D6  B088               	btfsc	3976,0,c	;volatile
 35857  0103D8  D7FE               	goto	l2769
 35858                           
 35859                           ;flash.c: 249: LATDbits.LD7 = 1;
 35860  0103DA  8E8C               	bsf	3980,7,c	;volatile
 35861  0103DC  0012               	return		;funcret
 35862  0103DE                     __end_of__flash_spi_tx_rx:
 35863                           	opt stack 0
 35864                           tosu	equ	0xFFF
 35865                           tosh	equ	0xFFE
 35866                           tosl	equ	0xFFD
 35867                           pclath	equ	0xFFA
 35868                           tblptru	equ	0xFF8
 35869                           tblptrh	equ	0xFF7
 35870                           tblptrl	equ	0xFF6
 35871                           tablat	equ	0xFF5
 35872                           prodh	equ	0xFF4
 35873                           prodl	equ	0xFF3
 35874                           intcon	equ	0xFF2
 35875                           intcon2	equ	0xFF1
 35876                           intcon3	equ	0xFF0
 35877                           postinc0	equ	0xFEE
 35878                           wreg	equ	0xFE8
 35879                           indf1	equ	0xFE7
 35880                           postinc1	equ	0xFE6
 35881                           postdec1	equ	0xFE5
 35882                           plusw1	equ	0xFE3
 35883                           fsr1h	equ	0xFE2
 35884                           fsr1l	equ	0xFE1
 35885                           indf2	equ	0xFDF
 35886                           postinc2	equ	0xFDE
 35887                           postdec2	equ	0xFDD
 35888                           plusw2	equ	0xFDB
 35889                           fsr2h	equ	0xFDA
 35890                           fsr2l	equ	0xFD9
 35891                           status	equ	0xFD8
 35892                           
 35893 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 35894 ;; Defined at:
 35895 ;;		line 993 in file "usb_device_msd.c"
 35896 ;; Parameters:    Size  Location     Type
 35897 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 35898 ;; Auto vars:     Size  Location     Type
 35899 ;;		None
 35900 ;; Return value:  Size  Location     Type
 35901 ;;                  1    wreg      void 
 35902 ;; Registers used:
 35903 ;;		wreg, status,2, status,0
 35904 ;; Tracked objects:
 35905 ;;		On entry : 0/0
 35906 ;;		On exit  : 0/0
 35907 ;;		Unchanged: 0/0
 35908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35911 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35912 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35913 ;;Total ram usage:        6 bytes
 35914 ;; Hardware stack levels used:    1
 35915 ;; Hardware stack levels required when called:   10
 35916 ;; This function calls:
 35917 ;;		Nothing
 35918 ;; This function is called by:
 35919 ;;		_MSDProcessCommandMediaPresent
 35920 ;; This function uses a non-reentrant model
 35921 ;;
 35922                           
 35923                           	psect	text161
 35924  00FFF2                     __ptext161:
 35925                           	opt stack 0
 35926  00FFF2                     _MSDComputeDeviceInAndResidue:
 35927                           	opt stack 16
 35928                           
 35929                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 35930                           
 35931                           ;incstack = 0
 35932  00FFF2  0100               	movlb	0	; () banked
 35933  00FFF4  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35934  00FFF6  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35935  00FFF8  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35936  00FFFA  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35937  00FFFC  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35938  00FFFE  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35939  010000  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35940  010002  0102               	movlb	2	; () banked
 35941  010004  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 35942  010006  0100               	movlb	0	; () banked
 35943  010008  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35944  01000A  0102               	movlb	2	; () banked
 35945  01000C  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 35946  01000E  0100               	movlb	0	; () banked
 35947  010010  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35948  010012  0102               	movlb	2	; () banked
 35949  010014  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 35950  010016  0100               	movlb	0	; () banked
 35951  010018  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35952  01001A  0102               	movlb	2	; () banked
 35953  01001C  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 35954  01001E  B0D8               	btfsc	status,0,c
 35955  010020  D00E               	goto	l679
 35956                           
 35957                           ; BSR set to: 2
 35958                           ;usb_device_msd.c: 997: {
 35959                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 35960  010022  0E00               	movlw	0
 35961  010024  010D               	movlb	13	; () banked
 35962  010026  6F88               	movwf	136,b	;volatile
 35963  010028  0E00               	movlw	0
 35964  01002A  6F89               	movwf	137,b	;volatile
 35965  01002C  0E00               	movlw	0
 35966  01002E  6F8A               	movwf	138,b	;volatile
 35967  010030  0E00               	movlw	0
 35968  010032  6F8B               	movwf	139,b	;volatile
 35969                           
 35970                           ; BSR set to: 13
 35971                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 35972  010034  C249  F043         	movff	_gblCBW+8,_TransferLength
 35973  010038  C24A  F044         	movff	_gblCBW+9,_TransferLength+1
 35974                           
 35975                           ;usb_device_msd.c: 1002: }
 35976  01003C  0012               	return	
 35977  01003E                     l679:
 35978                           
 35979                           ;usb_device_msd.c: 1003: else
 35980                           ;usb_device_msd.c: 1004: {
 35981                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 35982                           
 35983                           ; BSR set to: 13
 35984  01003E  5043               	movf	_TransferLength,w,c
 35985  010040  0100               	movlb	0	; () banked
 35986  010042  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35987  010044  5044               	movf	_TransferLength+1,w,c
 35988  010046  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35989  010048  B0D8               	btfsc	status,0,c
 35990  01004A  D004               	goto	l681
 35991                           
 35992                           ; BSR set to: 0
 35993                           ;usb_device_msd.c: 1007: {
 35994                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 35995  01004C  C060  F043         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 35996  010050  C061  F044         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 35997  010054                     l681:
 35998                           
 35999                           ; BSR set to: 0
 36000                           ;usb_device_msd.c: 1009: }
 36001                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 36002                           
 36003                           ; BSR set to: 0
 36004  010054  5043               	movf	_TransferLength,w,c
 36005  010056  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 36006  010058  5044               	movf	_TransferLength+1,w,c
 36007  01005A  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 36008  01005C  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 36009  01005E  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 36010  010060  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 36011  010062  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 36012  010064  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 36013  010066  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 36014  010068  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 36015  01006A  0E00               	movlw	0
 36016  01006C  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 36017  01006E  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 36018  010070  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 36019  010072  0102               	movlb	2	; () banked
 36020  010074  5149               	movf	(_gblCBW+8)& (0+255),w,b
 36021  010076  0100               	movlb	0	; () banked
 36022  010078  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 36023  01007A  010D               	movlb	13	; () banked
 36024  01007C  6F88               	movwf	136,b	;volatile
 36025  01007E  0102               	movlb	2	; () banked
 36026  010080  514A               	movf	(_gblCBW+9)& (0+255),w,b
 36027  010082  0100               	movlb	0	; () banked
 36028  010084  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 36029  010086  010D               	movlb	13	; () banked
 36030  010088  6F89               	movwf	137,b	;volatile
 36031  01008A  0102               	movlb	2	; () banked
 36032  01008C  514B               	movf	(_gblCBW+10)& (0+255),w,b
 36033  01008E  0100               	movlb	0	; () banked
 36034  010090  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 36035  010092  010D               	movlb	13	; () banked
 36036  010094  6F8A               	movwf	138,b	;volatile
 36037  010096  0102               	movlb	2	; () banked
 36038  010098  514C               	movf	(_gblCBW+11)& (0+255),w,b
 36039  01009A  0100               	movlb	0	; () banked
 36040  01009C  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 36041  01009E  010D               	movlb	13	; () banked
 36042  0100A0  6F8B               	movwf	139,b	;volatile
 36043  0100A2  0012               	return	
 36044  0100A4                     __end_of_MSDComputeDeviceInAndResidue:
 36045                           	opt stack 0
 36046                           tosu	equ	0xFFF
 36047                           tosh	equ	0xFFE
 36048                           tosl	equ	0xFFD
 36049                           pclath	equ	0xFFA
 36050                           tblptru	equ	0xFF8
 36051                           tblptrh	equ	0xFF7
 36052                           tblptrl	equ	0xFF6
 36053                           tablat	equ	0xFF5
 36054                           prodh	equ	0xFF4
 36055                           prodl	equ	0xFF3
 36056                           intcon	equ	0xFF2
 36057                           intcon2	equ	0xFF1
 36058                           intcon3	equ	0xFF0
 36059                           postinc0	equ	0xFEE
 36060                           wreg	equ	0xFE8
 36061                           indf1	equ	0xFE7
 36062                           postinc1	equ	0xFE6
 36063                           postdec1	equ	0xFE5
 36064                           plusw1	equ	0xFE3
 36065                           fsr1h	equ	0xFE2
 36066                           fsr1l	equ	0xFE1
 36067                           indf2	equ	0xFDF
 36068                           postinc2	equ	0xFDE
 36069                           postdec2	equ	0xFDD
 36070                           plusw2	equ	0xFDB
 36071                           fsr2h	equ	0xFDA
 36072                           fsr2l	equ	0xFD9
 36073                           status	equ	0xFD8
 36074                           
 36075 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 36076 ;; Defined at:
 36077 ;;		line 18 in file "external_flash.c"
 36078 ;; Parameters:    Size  Location     Type
 36079 ;;  config          2    0[BANK0 ] PTR void 
 36080 ;;		 -> NULL(0), 
 36081 ;; Auto vars:     Size  Location     Type
 36082 ;;		None
 36083 ;; Return value:  Size  Location     Type
 36084 ;;                  2    0[BANK0 ] unsigned int 
 36085 ;; Registers used:
 36086 ;;		wreg, status,2
 36087 ;; Tracked objects:
 36088 ;;		On entry : 0/0
 36089 ;;		On exit  : 0/0
 36090 ;;		Unchanged: 0/0
 36091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36096 ;;Total ram usage:        2 bytes
 36097 ;; Hardware stack levels used:    1
 36098 ;; Hardware stack levels required when called:   10
 36099 ;; This function calls:
 36100 ;;		Nothing
 36101 ;; This function is called by:
 36102 ;;		_MSDProcessCommandMediaPresent
 36103 ;; This function uses a non-reentrant model
 36104 ;;
 36105                           
 36106                           	psect	text162
 36107  012EE2                     __ptext162:
 36108                           	opt stack 0
 36109  012EE2                     _ExternalFlash_SectorSizeRead:
 36110                           	opt stack 16
 36111                           
 36112                           ;external_flash.c: 21: return 512;
 36113                           
 36114                           ; BSR set to: 13
 36115                           ;incstack = 0
 36116  012EE2  0E02               	movlw	2
 36117  012EE4  0100               	movlb	0	; () banked
 36118  012EE6  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 36119  012EE8  0E00               	movlw	0
 36120  012EEA  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 36121  012EEC  0012               	return	
 36122  012EEE                     __end_of_ExternalFlash_SectorSizeRead:
 36123                           	opt stack 0
 36124                           tosu	equ	0xFFF
 36125                           tosh	equ	0xFFE
 36126                           tosl	equ	0xFFD
 36127                           pclath	equ	0xFFA
 36128                           tblptru	equ	0xFF8
 36129                           tblptrh	equ	0xFF7
 36130                           tblptrl	equ	0xFF6
 36131                           tablat	equ	0xFF5
 36132                           prodh	equ	0xFF4
 36133                           prodl	equ	0xFF3
 36134                           intcon	equ	0xFF2
 36135                           intcon2	equ	0xFF1
 36136                           intcon3	equ	0xFF0
 36137                           postinc0	equ	0xFEE
 36138                           wreg	equ	0xFE8
 36139                           indf1	equ	0xFE7
 36140                           postinc1	equ	0xFE6
 36141                           postdec1	equ	0xFE5
 36142                           plusw1	equ	0xFE3
 36143                           fsr1h	equ	0xFE2
 36144                           fsr1l	equ	0xFE1
 36145                           indf2	equ	0xFDF
 36146                           postinc2	equ	0xFDE
 36147                           postdec2	equ	0xFDD
 36148                           plusw2	equ	0xFDB
 36149                           fsr2h	equ	0xFDA
 36150                           fsr2l	equ	0xFD9
 36151                           status	equ	0xFD8
 36152                           
 36153 ;; *************** function _ExternalFlash_CapacityRead *****************
 36154 ;; Defined at:
 36155 ;;		line 24 in file "external_flash.c"
 36156 ;; Parameters:    Size  Location     Type
 36157 ;;  config          2    0[BANK0 ] PTR void 
 36158 ;;		 -> NULL(0), 
 36159 ;; Auto vars:     Size  Location     Type
 36160 ;;		None
 36161 ;; Return value:  Size  Location     Type
 36162 ;;                  4    0[BANK0 ] unsigned long 
 36163 ;; Registers used:
 36164 ;;		wreg, status,2
 36165 ;; Tracked objects:
 36166 ;;		On entry : 0/0
 36167 ;;		On exit  : 0/0
 36168 ;;		Unchanged: 0/0
 36169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36174 ;;Total ram usage:        4 bytes
 36175 ;; Hardware stack levels used:    1
 36176 ;; Hardware stack levels required when called:   10
 36177 ;; This function calls:
 36178 ;;		Nothing
 36179 ;; This function is called by:
 36180 ;;		_MSDProcessCommandMediaPresent
 36181 ;; This function uses a non-reentrant model
 36182 ;;
 36183                           
 36184                           	psect	text163
 36185  012DB0                     __ptext163:
 36186                           	opt stack 0
 36187  012DB0                     _ExternalFlash_CapacityRead:
 36188                           	opt stack 16
 36189                           
 36190                           ;external_flash.c: 26: return ((uint32_t) 4114 - 1);
 36191                           
 36192                           ; BSR set to: 0
 36193                           ;incstack = 0
 36194  012DB0  0E11               	movlw	17
 36195  012DB2  0100               	movlb	0	; () banked
 36196  012DB4  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 36197  012DB6  0E10               	movlw	16
 36198  012DB8  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 36199  012DBA  0E00               	movlw	0
 36200  012DBC  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 36201  012DBE  0E00               	movlw	0
 36202  012DC0  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 36203  012DC2  0012               	return	
 36204  012DC4                     __end_of_ExternalFlash_CapacityRead:
 36205                           	opt stack 0
 36206                           tosu	equ	0xFFF
 36207                           tosh	equ	0xFFE
 36208                           tosl	equ	0xFFD
 36209                           pclath	equ	0xFFA
 36210                           tblptru	equ	0xFF8
 36211                           tblptrh	equ	0xFF7
 36212                           tblptrl	equ	0xFF6
 36213                           tablat	equ	0xFF5
 36214                           prodh	equ	0xFF4
 36215                           prodl	equ	0xFF3
 36216                           intcon	equ	0xFF2
 36217                           intcon2	equ	0xFF1
 36218                           intcon3	equ	0xFF0
 36219                           postinc0	equ	0xFEE
 36220                           wreg	equ	0xFE8
 36221                           indf1	equ	0xFE7
 36222                           postinc1	equ	0xFE6
 36223                           postdec1	equ	0xFE5
 36224                           plusw1	equ	0xFE3
 36225                           fsr1h	equ	0xFE2
 36226                           fsr1l	equ	0xFE1
 36227                           indf2	equ	0xFDF
 36228                           postinc2	equ	0xFDE
 36229                           postdec2	equ	0xFDD
 36230                           plusw2	equ	0xFDB
 36231                           fsr2h	equ	0xFDA
 36232                           fsr2l	equ	0xFD9
 36233                           status	equ	0xFD8
 36234                           
 36235 ;; *************** function _ExternalFlash_MediaInitialize *****************
 36236 ;; Defined at:
 36237 ;;		line 10 in file "external_flash.c"
 36238 ;; Parameters:    Size  Location     Type
 36239 ;;  config          2    0[BANK0 ] PTR void 
 36240 ;;		 -> NULL(0), 
 36241 ;; Auto vars:     Size  Location     Type
 36242 ;;		None
 36243 ;; Return value:  Size  Location     Type
 36244 ;;                  2    0[BANK0 ] PTR struct .
 36245 ;; Registers used:
 36246 ;;		wreg, status,2, status,0
 36247 ;; Tracked objects:
 36248 ;;		On entry : 0/0
 36249 ;;		On exit  : 0/0
 36250 ;;		Unchanged: 0/0
 36251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36256 ;;Total ram usage:        2 bytes
 36257 ;; Hardware stack levels used:    1
 36258 ;; Hardware stack levels required when called:   10
 36259 ;; This function calls:
 36260 ;;		Nothing
 36261 ;; This function is called by:
 36262 ;;		_USBMSDInit
 36263 ;;		_MSDProcessCommand
 36264 ;; This function uses a non-reentrant model
 36265 ;;
 36266                           
 36267                           	psect	text164
 36268  012B5E                     __ptext164:
 36269                           	opt stack 0
 36270  012B5E                     _ExternalFlash_MediaInitialize:
 36271                           	opt stack 0
 36272                           
 36273                           ; BSR set to: 0
 36274                           ;Skip over the trampoline to the duplicate function for level 2
 36275  012B5E  B25F               	btfsc	btemp,1,c
 36276  012B60  EF33  F096         	goto	i2_ExternalFlash_MediaInitialize
 36277  012B64                     _ExternalFlash_MediaInitialize$intlevel0:
 36278                           	opt stack 17
 36279                           
 36280                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 36281                           
 36282                           ;incstack = 0
 36283  012B64  0102               	movlb	2	; () banked
 36284  012B66  81BB               	bsf	(_mediaInformation+1)& (0+255),0,b
 36285                           
 36286                           ; BSR set to: 2
 36287                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 36288  012B68  0E02               	movlw	2
 36289  012B6A  6FBD               	movwf	(_mediaInformation+3)& (0+255),b
 36290  012B6C  0E00               	movlw	0
 36291  012B6E  6FBC               	movwf	(_mediaInformation+2)& (0+255),b
 36292                           
 36293                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 36294  012B70  0E00               	movlw	0
 36295  012B72  6FBA               	movwf	_mediaInformation& (0+255),b
 36296                           
 36297                           ; BSR set to: 2
 36298                           ;external_flash.c: 15: return &mediaInformation;
 36299  012B74  0EBA               	movlw	low _mediaInformation
 36300  012B76  0100               	movlb	0	; () banked
 36301  012B78  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 36302  012B7A  0E02               	movlw	high _mediaInformation
 36303  012B7C  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 36304  012B7E  0012               	return	
 36305  012B80                     __end_of_ExternalFlash_MediaInitialize:
 36306                           	opt stack 0
 36307                           tosu	equ	0xFFF
 36308                           tosh	equ	0xFFE
 36309                           tosl	equ	0xFFD
 36310                           pclath	equ	0xFFA
 36311                           tblptru	equ	0xFF8
 36312                           tblptrh	equ	0xFF7
 36313                           tblptrl	equ	0xFF6
 36314                           tablat	equ	0xFF5
 36315                           prodh	equ	0xFF4
 36316                           prodl	equ	0xFF3
 36317                           intcon	equ	0xFF2
 36318                           intcon2	equ	0xFF1
 36319                           intcon3	equ	0xFF0
 36320                           postinc0	equ	0xFEE
 36321                           wreg	equ	0xFE8
 36322                           indf1	equ	0xFE7
 36323                           postinc1	equ	0xFE6
 36324                           postdec1	equ	0xFE5
 36325                           plusw1	equ	0xFE3
 36326                           fsr1h	equ	0xFE2
 36327                           fsr1l	equ	0xFE1
 36328                           indf2	equ	0xFDF
 36329                           postinc2	equ	0xFDE
 36330                           postdec2	equ	0xFDD
 36331                           plusw2	equ	0xFDB
 36332                           fsr2h	equ	0xFDA
 36333                           fsr2l	equ	0xFD9
 36334                           status	equ	0xFD8
 36335                           
 36336 ;; *************** function _ExternalFlash_MediaDetect *****************
 36337 ;; Defined at:
 36338 ;;		line 29 in file "external_flash.c"
 36339 ;; Parameters:    Size  Location     Type
 36340 ;;  config          2    0[BANK0 ] PTR void 
 36341 ;;		 -> NULL(0), 
 36342 ;; Auto vars:     Size  Location     Type
 36343 ;;		None
 36344 ;; Return value:  Size  Location     Type
 36345 ;;                  1    wreg      unsigned char 
 36346 ;; Registers used:
 36347 ;;		wreg
 36348 ;; Tracked objects:
 36349 ;;		On entry : 0/0
 36350 ;;		On exit  : 0/0
 36351 ;;		Unchanged: 0/0
 36352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36356 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36357 ;;Total ram usage:        2 bytes
 36358 ;; Hardware stack levels used:    1
 36359 ;; Hardware stack levels required when called:   10
 36360 ;; This function calls:
 36361 ;;		Nothing
 36362 ;; This function is called by:
 36363 ;;		_USBMSDInit
 36364 ;;		_MSDProcessCommand
 36365 ;; This function uses a non-reentrant model
 36366 ;;
 36367                           
 36368                           	psect	text165
 36369  012F16                     __ptext165:
 36370                           	opt stack 0
 36371  012F16                     _ExternalFlash_MediaDetect:
 36372                           	opt stack 0
 36373                           
 36374                           ; BSR set to: 0
 36375                           ;Skip over the trampoline to the duplicate function for level 2
 36376  012F16  B25F               	btfsc	btemp,1,c
 36377  012F18  EFAE  F097         	goto	i2_ExternalFlash_MediaDetect
 36378  012F1C                     _ExternalFlash_MediaDetect$intlevel0:
 36379                           	opt stack 17
 36380                           
 36381                           ;external_flash.c: 31: return 1;
 36382                           
 36383                           ;incstack = 0
 36384  012F1C  0E01               	movlw	1
 36385  012F1E  0012               	return	
 36386  012F20                     __end_of_ExternalFlash_MediaDetect:
 36387                           	opt stack 0
 36388                           tosu	equ	0xFFF
 36389                           tosh	equ	0xFFE
 36390                           tosl	equ	0xFFD
 36391                           pclath	equ	0xFFA
 36392                           tblptru	equ	0xFF8
 36393                           tblptrh	equ	0xFF7
 36394                           tblptrl	equ	0xFF6
 36395                           tablat	equ	0xFF5
 36396                           prodh	equ	0xFF4
 36397                           prodl	equ	0xFF3
 36398                           intcon	equ	0xFF2
 36399                           intcon2	equ	0xFF1
 36400                           intcon3	equ	0xFF0
 36401                           postinc0	equ	0xFEE
 36402                           wreg	equ	0xFE8
 36403                           indf1	equ	0xFE7
 36404                           postinc1	equ	0xFE6
 36405                           postdec1	equ	0xFE5
 36406                           plusw1	equ	0xFE3
 36407                           fsr1h	equ	0xFE2
 36408                           fsr1l	equ	0xFE1
 36409                           indf2	equ	0xFDF
 36410                           postinc2	equ	0xFDE
 36411                           postdec2	equ	0xFDD
 36412                           plusw2	equ	0xFDB
 36413                           fsr2h	equ	0xFDA
 36414                           fsr2l	equ	0xFD9
 36415                           status	equ	0xFD8
 36416                           
 36417 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 36418 ;; Defined at:
 36419 ;;		line 108 in file "app_device_custom_hid.c"
 36420 ;; Parameters:    Size  Location     Type
 36421 ;;		None
 36422 ;; Auto vars:     Size  Location     Type
 36423 ;;  return_value    2   52[BANK0 ] unsigned int 
 36424 ;;  idx             1   54[BANK0 ] unsigned char 
 36425 ;; Return value:  Size  Location     Type
 36426 ;;                  1    wreg      void 
 36427 ;; Registers used:
 36428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36429 ;; Tracked objects:
 36430 ;;		On entry : 0/0
 36431 ;;		On exit  : 0/0
 36432 ;;		Unchanged: 0/0
 36433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36436 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36437 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36438 ;;Total ram usage:       11 bytes
 36439 ;; Hardware stack levels used:    1
 36440 ;; Hardware stack levels required when called:   15
 36441 ;; This function calls:
 36442 ;;		_USBTransferOnePacket
 36443 ;;		__fill_buffer_get_calibration1
 36444 ;;		__fill_buffer_get_calibration2
 36445 ;;		__fill_buffer_get_display1
 36446 ;;		__fill_buffer_get_display2
 36447 ;;		__fill_buffer_get_status
 36448 ;;		__parse_command_calibration
 36449 ;;		__parse_command_long
 36450 ;;		__parse_command_short
 36451 ;; This function is called by:
 36452 ;;		_main
 36453 ;; This function uses a non-reentrant model
 36454 ;;
 36455                           
 36456                           	psect	text166
 36457  00ADCC                     __ptext166:
 36458                           	opt stack 0
 36459  00ADCC                     _APP_DeviceCustomHIDTasks:
 36460                           	opt stack 15
 36461                           
 36462                           ;app_device_custom_hid.c: 110: uint8_t idx;
 36463                           ;app_device_custom_hid.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 36464                           
 36465                           ;incstack = 0
 36466  00ADCC  0E20               	movlw	32
 36467  00ADCE  605C               	cpfslt	_USBDeviceState,c	;volatile
 36468  00ADD0  D001               	goto	l1070
 36469  00ADD2  0012               	return	
 36470  00ADD4                     l1070:
 36471                           
 36472                           ;app_device_custom_hid.c: 118: }
 36473                           ;app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 36474  00ADD4  B265               	btfsc	3941,1,c	;volatile
 36475  00ADD6  0012               	return	
 36476                           
 36477                           ;app_device_custom_hid.c: 127: }
 36478                           ;app_device_custom_hid.c: 130: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 36479                           
 36480                           ;app_device_custom_hid.c: 125: {
 36481                           ;app_device_custom_hid.c: 126: return;
 36482  00ADD8  0102               	movlb	2	; () banked
 36483  00ADDA  51B4               	movf	_USBOutHandle& (0+255),w,b
 36484  00ADDC  11B5               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 36485  00ADDE  B4D8               	btfsc	status,2,c
 36486  00ADE0  D0E4               	goto	l1076
 36487                           
 36488                           ; BSR set to: 2
 36489  00ADE2  C2B4  FFD9         	movff	_USBOutHandle,fsr2l
 36490  00ADE6  C2B5  FFDA         	movff	_USBOutHandle+1,fsr2h
 36491  00ADEA  BEDF               	btfsc	indf2,7,c
 36492  00ADEC  0012               	return	
 36493  00ADEE  D0DD               	goto	l1076
 36494  00ADF0                     
 36495                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36496                           
 36497                           ; BSR set to: 2
 36498  00ADF0  0100               	movlb	0	; () banked
 36499  00ADF2  51F9               	movf	_USBInHandle& (0+255),w,b
 36500  00ADF4  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36501  00ADF6  B4D8               	btfsc	status,2,c
 36502  00ADF8  D006               	goto	u15170
 36503                           
 36504                           ; BSR set to: 0
 36505  00ADFA  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36506  00ADFE  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36507  00AE02  BEDF               	btfsc	indf2,7,c
 36508  00AE04  D0EC               	goto	l1081
 36509  00AE06                     u15170:
 36510                           
 36511                           ; BSR set to: 0
 36512                           ;app_device_custom_hid.c: 141: {
 36513                           ;app_device_custom_hid.c: 143: _fill_buffer_get_status();
 36514                           
 36515                           ; BSR set to: 0
 36516  00AE06  EC41  F061         	call	__fill_buffer_get_status	;wreg free
 36517                           
 36518                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36519  00AE0A  0E01               	movlw	1
 36520  00AE0C  0100               	movlb	0	; () banked
 36521  00AE0E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36522  00AE10  0EA4               	movlw	low _ToSendDataBuffer
 36523  00AE12  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36524  00AE14  0E03               	movlw	high _ToSendDataBuffer
 36525  00AE16  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36526  00AE18  0E40               	movlw	64
 36527  00AE1A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36528  00AE1C  0E01               	movlw	1
 36529  00AE1E  EC80  F074         	call	_USBTransferOnePacket
 36530  00AE22  D0BE               	goto	L42
 36531  00AE24                     
 36532                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36533  00AE24  0100               	movlb	0	; () banked
 36534  00AE26  51F9               	movf	_USBInHandle& (0+255),w,b
 36535  00AE28  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36536  00AE2A  B4D8               	btfsc	status,2,c
 36537  00AE2C  D006               	goto	u15190
 36538                           
 36539                           ; BSR set to: 0
 36540  00AE2E  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36541  00AE32  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36542  00AE36  BEDF               	btfsc	indf2,7,c
 36543  00AE38  D0D2               	goto	l1081
 36544  00AE3A                     u15190:
 36545                           
 36546                           ; BSR set to: 0
 36547                           ;app_device_custom_hid.c: 152: {
 36548                           ;app_device_custom_hid.c: 154: _fill_buffer_get_display1();
 36549                           
 36550                           ; BSR set to: 0
 36551  00AE3A  ECCD  F08F         	call	__fill_buffer_get_display1	;wreg free
 36552                           
 36553                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36554  00AE3E  0E01               	movlw	1
 36555  00AE40  0100               	movlb	0	; () banked
 36556  00AE42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36557  00AE44  0EA4               	movlw	low _ToSendDataBuffer
 36558  00AE46  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36559  00AE48  0E03               	movlw	high _ToSendDataBuffer
 36560  00AE4A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36561  00AE4C  0E40               	movlw	64
 36562  00AE4E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36563  00AE50  0E01               	movlw	1
 36564  00AE52  EC80  F074         	call	_USBTransferOnePacket
 36565  00AE56  D0A4               	goto	L42
 36566  00AE58                     
 36567                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36568  00AE58  0100               	movlb	0	; () banked
 36569  00AE5A  51F9               	movf	_USBInHandle& (0+255),w,b
 36570  00AE5C  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36571  00AE5E  B4D8               	btfsc	status,2,c
 36572  00AE60  D006               	goto	u15210
 36573                           
 36574                           ; BSR set to: 0
 36575  00AE62  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36576  00AE66  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36577  00AE6A  BEDF               	btfsc	indf2,7,c
 36578  00AE6C  D0B8               	goto	l1081
 36579  00AE6E                     u15210:
 36580                           
 36581                           ; BSR set to: 0
 36582                           ;app_device_custom_hid.c: 163: {
 36583                           ;app_device_custom_hid.c: 165: _fill_buffer_get_display2();
 36584                           
 36585                           ; BSR set to: 0
 36586  00AE6E  ECA5  F08F         	call	__fill_buffer_get_display2	;wreg free
 36587                           
 36588                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36589  00AE72  0E01               	movlw	1
 36590  00AE74  0100               	movlb	0	; () banked
 36591  00AE76  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36592  00AE78  0EA4               	movlw	low _ToSendDataBuffer
 36593  00AE7A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36594  00AE7C  0E03               	movlw	high _ToSendDataBuffer
 36595  00AE7E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36596  00AE80  0E40               	movlw	64
 36597  00AE82  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36598  00AE84  0E01               	movlw	1
 36599  00AE86  EC80  F074         	call	_USBTransferOnePacket
 36600  00AE8A  D08A               	goto	L42
 36601  00AE8C                     
 36602                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36603  00AE8C  0100               	movlb	0	; () banked
 36604  00AE8E  51F9               	movf	_USBInHandle& (0+255),w,b
 36605  00AE90  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36606  00AE92  B4D8               	btfsc	status,2,c
 36607  00AE94  D006               	goto	u15230
 36608                           
 36609                           ; BSR set to: 0
 36610  00AE96  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36611  00AE9A  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36612  00AE9E  BEDF               	btfsc	indf2,7,c
 36613  00AEA0  D09E               	goto	l1081
 36614  00AEA2                     u15230:
 36615                           
 36616                           ; BSR set to: 0
 36617                           ;app_device_custom_hid.c: 174: {
 36618                           ;app_device_custom_hid.c: 176: _fill_buffer_get_calibration1();
 36619                           
 36620                           ; BSR set to: 0
 36621  00AEA2  EC8D  F086         	call	__fill_buffer_get_calibration1	;wreg free
 36622                           
 36623                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36624  00AEA6  0E01               	movlw	1
 36625  00AEA8  0100               	movlb	0	; () banked
 36626  00AEAA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36627  00AEAC  0EA4               	movlw	low _ToSendDataBuffer
 36628  00AEAE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36629  00AEB0  0E03               	movlw	high _ToSendDataBuffer
 36630  00AEB2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36631  00AEB4  0E40               	movlw	64
 36632  00AEB6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36633  00AEB8  0E01               	movlw	1
 36634  00AEBA  EC80  F074         	call	_USBTransferOnePacket
 36635  00AEBE  D070               	goto	L42
 36636  00AEC0                     
 36637                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36638  00AEC0  0100               	movlb	0	; () banked
 36639  00AEC2  51F9               	movf	_USBInHandle& (0+255),w,b
 36640  00AEC4  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36641  00AEC6  B4D8               	btfsc	status,2,c
 36642  00AEC8  D006               	goto	u15250
 36643                           
 36644                           ; BSR set to: 0
 36645  00AECA  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36646  00AECE  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36647  00AED2  BEDF               	btfsc	indf2,7,c
 36648  00AED4  D084               	goto	l1081
 36649  00AED6                     u15250:
 36650                           
 36651                           ; BSR set to: 0
 36652                           ;app_device_custom_hid.c: 185: {
 36653                           ;app_device_custom_hid.c: 187: _fill_buffer_get_calibration2();
 36654                           
 36655                           ; BSR set to: 0
 36656  00AED6  EC28  F08B         	call	__fill_buffer_get_calibration2	;wreg free
 36657                           
 36658                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36659  00AEDA  0E01               	movlw	1
 36660  00AEDC  0100               	movlb	0	; () banked
 36661  00AEDE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36662  00AEE0  0EA4               	movlw	low _ToSendDataBuffer
 36663  00AEE2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36664  00AEE4  0E03               	movlw	high _ToSendDataBuffer
 36665  00AEE6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36666  00AEE8  0E40               	movlw	64
 36667  00AEEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36668  00AEEC  0E01               	movlw	1
 36669  00AEEE  EC80  F074         	call	_USBTransferOnePacket
 36670  00AEF2  D056               	goto	L42
 36671  00AEF4                     
 36672                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 36673  00AEF4  728C               	btg	3980,1,c	;volatile
 36674                           
 36675                           ;app_device_custom_hid.c: 196: break;
 36676  00AEF6  D073               	goto	l1081
 36677  00AEF8                     
 36678                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36679  00AEF8  0100               	movlb	0	; () banked
 36680  00AEFA  51F9               	movf	_USBInHandle& (0+255),w,b
 36681  00AEFC  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36682  00AEFE  B4D8               	btfsc	status,2,c
 36683  00AF00  D006               	goto	u15270
 36684                           
 36685                           ; BSR set to: 0
 36686  00AF02  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36687  00AF06  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36688  00AF0A  BEDF               	btfsc	indf2,7,c
 36689  00AF0C  D068               	goto	l1081
 36690  00AF0E                     u15270:
 36691                           
 36692                           ; BSR set to: 0
 36693                           ;app_device_custom_hid.c: 201: {
 36694                           ;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 36695                           
 36696                           ; BSR set to: 0
 36697  00AF0E  0E81               	movlw	129
 36698  00AF10  0103               	movlb	3	; () banked
 36699  00AF12  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36700                           
 36701                           ; BSR set to: 3
 36702                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 36703  00AF14  A080               	btfss	3968,0,c	;volatile
 36704  00AF16  D002               	goto	l1103
 36705                           
 36706                           ; BSR set to: 3
 36707                           ;app_device_custom_hid.c: 205: {
 36708                           ;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x01;
 36709  00AF18  0E01               	movlw	1
 36710  00AF1A  D001               	goto	L41
 36711  00AF1C                     l1103:
 36712                           
 36713                           ; BSR set to: 3
 36714                           ;app_device_custom_hid.c: 209: else
 36715                           ;app_device_custom_hid.c: 210: {
 36716                           ;app_device_custom_hid.c: 212: ToSendDataBuffer[1] = 0x00;
 36717                           
 36718                           ; BSR set to: 3
 36719  00AF1C  0E00               	movlw	0
 36720  00AF1E                     L41:
 36721  00AF1E  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 36722                           
 36723                           ; BSR set to: 3
 36724                           ;app_device_custom_hid.c: 213: }
 36725                           ;app_device_custom_hid.c: 215: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36726                           
 36727                           ; BSR set to: 3
 36728  00AF20  0E01               	movlw	1
 36729  00AF22  0100               	movlb	0	; () banked
 36730  00AF24  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36731  00AF26  0EA4               	movlw	low _ToSendDataBuffer
 36732  00AF28  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36733  00AF2A  0E03               	movlw	high _ToSendDataBuffer
 36734  00AF2C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36735  00AF2E  0E40               	movlw	64
 36736  00AF30  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36737  00AF32  0E01               	movlw	1
 36738  00AF34  EC80  F074         	call	_USBTransferOnePacket
 36739  00AF38  D033               	goto	L42
 36740  00AF3A                     
 36741                           ;app_device_custom_hid.c: 220: {
 36742                           ;app_device_custom_hid.c: 221: uint16_t return_value;
 36743                           ;app_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36744  00AF3A  0100               	movlb	0	; () banked
 36745  00AF3C  51F9               	movf	_USBInHandle& (0+255),w,b
 36746  00AF3E  11FA               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36747  00AF40  B4D8               	btfsc	status,2,c
 36748  00AF42  D006               	goto	u15300
 36749                           
 36750                           ; BSR set to: 0
 36751  00AF44  C0F9  FFD9         	movff	_USBInHandle,fsr2l
 36752  00AF48  C0FA  FFDA         	movff	_USBInHandle+1,fsr2h
 36753  00AF4C  BEDF               	btfsc	indf2,7,c
 36754  00AF4E  D047               	goto	l1081
 36755  00AF50                     u15300:
 36756                           
 36757                           ; BSR set to: 0
 36758                           ;app_device_custom_hid.c: 224: {
 36759                           ;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 36760                           
 36761                           ; BSR set to: 0
 36762  00AF50  0E37               	movlw	55
 36763  00AF52  0103               	movlb	3	; () banked
 36764  00AF54  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36765                           
 36766                           ; BSR set to: 3
 36767                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 36768  00AF56  EE22  F036         	lfsr	2,_os+54	;volatile
 36769  00AF5A  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 36770  00AF5E  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 36771  00AF62  0100               	movlb	0	; () banked
 36772  00AF64  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36773  00AF66  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36774  00AF68  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36775  00AF6A  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36776  00AF6C  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36777  00AF6E  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36778  00AF70  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36779  00AF72  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36780  00AF74  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36781  00AF76  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 36782  00AF7A  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 36783                           
 36784                           ; BSR set to: 0
 36785                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 36786  00AF7E  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 36787                           
 36788                           ; BSR set to: 0
 36789                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 36790  00AF82  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 36791  00AF84  0103               	movlb	3	; () banked
 36792  00AF86  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 36793                           
 36794                           ; BSR set to: 3
 36795                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36796  00AF88  0E01               	movlw	1
 36797  00AF8A  0100               	movlb	0	; () banked
 36798  00AF8C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36799  00AF8E  0EA4               	movlw	low _ToSendDataBuffer
 36800  00AF90  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36801  00AF92  0E03               	movlw	high _ToSendDataBuffer
 36802  00AF94  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36803  00AF96  0E40               	movlw	64
 36804  00AF98  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36805  00AF9A  0E01               	movlw	1
 36806  00AF9C  EC80  F074         	call	_USBTransferOnePacket
 36807  00AFA0                     L42:
 36808  00AFA0  C060  F0F9         	movff	?_USBTransferOnePacket,_USBInHandle
 36809  00AFA4  C061  F0FA         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 36810                           
 36811                           ;app_device_custom_hid.c: 236: }
 36812                           
 36813                           ;app_device_custom_hid.c: 233: }
 36814                           ;app_device_custom_hid.c: 234: }
 36815                           ;app_device_custom_hid.c: 235: break;
 36816  00AFA8  D01A               	goto	l1081
 36817  00AFAA                     l1076:
 36818  00AFAA  0104               	movlb	4	; () banked
 36819  00AFAC  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 36820                           
 36821                           ; Switch size 1, requested type "space"
 36822                           ; Number of cases is 8, Range of values is 16 to 129
 36823                           ; switch strategies available:
 36824                           ; Name         Instructions Cycles
 36825                           ; simple_byte           25    13 (average)
 36826                           ;	Chosen strategy is simple_byte
 36827  00AFAE  0A10               	xorlw	16	; case 16
 36828  00AFB0  B4D8               	btfsc	status,2,c
 36829  00AFB2  D71E               	goto	l1077
 36830  00AFB4  0A01               	xorlw	1	; case 17
 36831  00AFB6  B4D8               	btfsc	status,2,c
 36832  00AFB8  D735               	goto	l1082
 36833  00AFBA  0A03               	xorlw	3	; case 18
 36834  00AFBC  B4D8               	btfsc	status,2,c
 36835  00AFBE  D74C               	goto	l1086
 36836  00AFC0  0A01               	xorlw	1	; case 19
 36837  00AFC2  B4D8               	btfsc	status,2,c
 36838  00AFC4  D763               	goto	l1090
 36839  00AFC6  0A07               	xorlw	7	; case 20
 36840  00AFC8  B4D8               	btfsc	status,2,c
 36841  00AFCA  D77A               	goto	l1094
 36842  00AFCC  0A23               	xorlw	35	; case 55
 36843  00AFCE  B4D8               	btfsc	status,2,c
 36844  00AFD0  D7B4               	goto	l1105
 36845  00AFD2  0AB7               	xorlw	183	; case 128
 36846  00AFD4  B4D8               	btfsc	status,2,c
 36847  00AFD6  D78E               	goto	l1098
 36848  00AFD8  0A01               	xorlw	1	; case 129
 36849  00AFDA  B4D8               	btfsc	status,2,c
 36850  00AFDC  D78D               	goto	l1099
 36851  00AFDE                     l1081:
 36852                           
 36853                           ;app_device_custom_hid.c: 239: idx = 1;
 36854                           
 36855                           ; BSR set to: 4
 36856  00AFDE  0E01               	movlw	1
 36857  00AFE0  0100               	movlb	0	; () banked
 36858  00AFE2  D076               	goto	L43
 36859  00AFE4                     
 36860                           ; BSR set to: 0
 36861                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 36862                           
 36863                           ; BSR set to: 0
 36864  00AFE4  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36865  00AFE6  0D01               	mullw	1
 36866  00AFE8  0E78               	movlw	low _ReceivedDataBuffer
 36867  00AFEA  24F3               	addwf	prodl,w,c
 36868  00AFEC  6ED9               	movwf	fsr2l,c
 36869  00AFEE  0E04               	movlw	high _ReceivedDataBuffer
 36870  00AFF0  20F4               	addwfc	prodh,w,c
 36871  00AFF2  6EDA               	movwf	fsr2h,c
 36872  00AFF4  50DF               	movf	indf2,w,c
 36873  00AFF6  EC6A  F079         	call	__parse_command_short
 36874                           
 36875                           ;app_device_custom_hid.c: 246: ++idx;
 36876  00AFFA  0100               	movlb	0	; () banked
 36877  00AFFC  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36878                           
 36879                           ;app_device_custom_hid.c: 247: break;
 36880  00AFFE  D085               	goto	l1113
 36881  00B000                     
 36882                           ; BSR set to: 0
 36883                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 36884                           
 36885                           ; BSR set to: 0
 36886  00B000  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36887  00B002  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36888  00B004  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36889  00B006  0E01               	movlw	1
 36890  00B008  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36891  00B00A  0E00               	movlw	0
 36892  00B00C  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36893  00B00E  0E78               	movlw	low _ReceivedDataBuffer
 36894  00B010  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36895  00B012  6ED9               	movwf	fsr2l,c
 36896  00B014  0E04               	movlw	high _ReceivedDataBuffer
 36897  00B016  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36898  00B018  6EDA               	movwf	fsr2h,c
 36899  00B01A  50DF               	movf	indf2,w,c
 36900  00B01C  6F63               	movwf	__parse_command_long@data& (0+255),b
 36901  00B01E  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36902  00B020  0D01               	mullw	1
 36903  00B022  0E78               	movlw	low _ReceivedDataBuffer
 36904  00B024  24F3               	addwf	prodl,w,c
 36905  00B026  6ED9               	movwf	fsr2l,c
 36906  00B028  0E04               	movlw	high _ReceivedDataBuffer
 36907  00B02A  20F4               	addwfc	prodh,w,c
 36908  00B02C  6EDA               	movwf	fsr2h,c
 36909  00B02E  50DF               	movf	indf2,w,c
 36910  00B030  ECF4  F078         	call	__parse_command_long
 36911                           
 36912                           ;app_device_custom_hid.c: 250: idx += 2;
 36913  00B034  0E02               	movlw	2
 36914  00B036  D048               	goto	L44
 36915  00B038                     
 36916                           ; BSR set to: 0
 36917                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 36918                           
 36919                           ; BSR set to: 0
 36920  00B038  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36921  00B03A  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36922  00B03C  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36923  00B03E  0E01               	movlw	1
 36924  00B040  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36925  00B042  0E00               	movlw	0
 36926  00B044  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36927  00B046  0E78               	movlw	low _ReceivedDataBuffer
 36928  00B048  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36929  00B04A  6ED9               	movwf	fsr2l,c
 36930  00B04C  0E04               	movlw	high _ReceivedDataBuffer
 36931  00B04E  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36932  00B050  6EDA               	movwf	fsr2h,c
 36933  00B052  50DF               	movf	indf2,w,c
 36934  00B054  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 36935  00B056  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36936  00B058  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 36937  00B05A  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 36938  00B05C  0E02               	movlw	2
 36939  00B05E  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 36940  00B060  0E00               	movlw	0
 36941  00B062  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 36942  00B064  0E78               	movlw	low _ReceivedDataBuffer
 36943  00B066  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 36944  00B068  6ED9               	movwf	fsr2l,c
 36945  00B06A  0E04               	movlw	high _ReceivedDataBuffer
 36946  00B06C  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 36947  00B06E  6EDA               	movwf	fsr2h,c
 36948  00B070  50DF               	movf	indf2,w,c
 36949  00B072  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 36950  00B074  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36951  00B076  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 36952  00B078  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 36953  00B07A  0E03               	movlw	3
 36954  00B07C  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 36955  00B07E  0E00               	movlw	0
 36956  00B080  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 36957  00B082  0E78               	movlw	low _ReceivedDataBuffer
 36958  00B084  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 36959  00B086  6ED9               	movwf	fsr2l,c
 36960  00B088  0E04               	movlw	high _ReceivedDataBuffer
 36961  00B08A  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 36962  00B08C  6EDA               	movwf	fsr2h,c
 36963  00B08E  50DF               	movf	indf2,w,c
 36964  00B090  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 36965  00B092  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36966  00B094  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 36967  00B096  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 36968  00B098  0E04               	movlw	4
 36969  00B09A  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 36970  00B09C  0E00               	movlw	0
 36971  00B09E  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 36972  00B0A0  0E78               	movlw	low _ReceivedDataBuffer
 36973  00B0A2  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 36974  00B0A4  6ED9               	movwf	fsr2l,c
 36975  00B0A6  0E04               	movlw	high _ReceivedDataBuffer
 36976  00B0A8  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 36977  00B0AA  6EDA               	movwf	fsr2h,c
 36978  00B0AC  50DF               	movf	indf2,w,c
 36979  00B0AE  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 36980  00B0B0  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36981  00B0B2  0D01               	mullw	1
 36982  00B0B4  0E78               	movlw	low _ReceivedDataBuffer
 36983  00B0B6  24F3               	addwf	prodl,w,c
 36984  00B0B8  6ED9               	movwf	fsr2l,c
 36985  00B0BA  0E04               	movlw	high _ReceivedDataBuffer
 36986  00B0BC  20F4               	addwfc	prodh,w,c
 36987  00B0BE  6EDA               	movwf	fsr2h,c
 36988  00B0C0  50DF               	movf	indf2,w,c
 36989  00B0C2  EC94  F06F         	call	__parse_command_calibration
 36990                           
 36991                           ;app_device_custom_hid.c: 254: idx += 5;
 36992  00B0C6  0E05               	movlw	5
 36993  00B0C8                     L44:
 36994  00B0C8  0100               	movlb	0	; () banked
 36995  00B0CA  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36996                           
 36997                           ;app_device_custom_hid.c: 255: break;
 36998  00B0CC  D01E               	goto	l1113
 36999  00B0CE                     
 37000                           ; BSR set to: 0
 37001                           ;app_device_custom_hid.c: 257: idx = 65;
 37002                           
 37003                           ; BSR set to: 0
 37004  00B0CE  0E41               	movlw	65
 37005  00B0D0                     L43:
 37006  00B0D0  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 37007                           
 37008                           ;app_device_custom_hid.c: 258: }
 37009  00B0D2  D01B               	goto	l1113
 37010  00B0D4                     
 37011                           ; BSR set to: 0
 37012                           
 37013                           ; BSR set to: 0
 37014  00B0D4  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 37015  00B0D6  0D01               	mullw	1
 37016  00B0D8  0E78               	movlw	low _ReceivedDataBuffer
 37017  00B0DA  24F3               	addwf	prodl,w,c
 37018  00B0DC  6ED9               	movwf	fsr2l,c
 37019  00B0DE  0E04               	movlw	high _ReceivedDataBuffer
 37020  00B0E0  20F4               	addwfc	prodh,w,c
 37021  00B0E2  6EDA               	movwf	fsr2h,c
 37022  00B0E4  50DF               	movf	indf2,w,c
 37023  00B0E6  0BF0               	andlw	240
 37024  00B0E8  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 37025  00B0EA  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 37026                           
 37027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37028                           ; Switch size 1, requested type "space"
 37029                           ; Number of cases is 1, Range of values is 0 to 0
 37030                           ; switch strategies available:
 37031                           ; Name         Instructions Cycles
 37032                           ; simple_byte            4     3 (average)
 37033                           ;	Chosen strategy is simple_byte
 37034  00B0EC  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 37035  00B0EE  0A00               	xorlw	0	; case 0
 37036  00B0F0  A4D8               	btfss	status,2,c
 37037  00B0F2  D7ED               	goto	l1116
 37038                           
 37039                           ; BSR set to: 0
 37040                           ; Switch size 1, requested type "space"
 37041                           ; Number of cases is 3, Range of values is 48 to 96
 37042                           ; switch strategies available:
 37043                           ; Name         Instructions Cycles
 37044                           ; simple_byte           10     6 (average)
 37045                           ;	Chosen strategy is simple_byte
 37046  00B0F4  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 37047  00B0F6  0A30               	xorlw	48	; case 48
 37048  00B0F8  B4D8               	btfsc	status,2,c
 37049  00B0FA  D774               	goto	l1112
 37050  00B0FC  0A70               	xorlw	112	; case 64
 37051  00B0FE  B4D8               	btfsc	status,2,c
 37052  00B100  D77F               	goto	l1114
 37053  00B102  0A20               	xorlw	32	; case 96
 37054  00B104  B4D8               	btfsc	status,2,c
 37055  00B106  D798               	goto	l1115
 37056  00B108  D7E2               	goto	l1116
 37057  00B10A                     l1113:
 37058                           
 37059                           ; BSR set to: 0
 37060                           
 37061                           ; BSR set to: 0
 37062                           
 37063                           ; BSR set to: 0
 37064  00B10A  0E3D               	movlw	61
 37065  00B10C  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 37066  00B10E  D7E2               	goto	l1111
 37067                           
 37068                           ; BSR set to: 0
 37069                           ;app_device_custom_hid.c: 259: }
 37070                           ;app_device_custom_hid.c: 263: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 37071                           
 37072                           ; BSR set to: 0
 37073  00B110  0E00               	movlw	0
 37074  00B112  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37075  00B114  0E78               	movlw	low _ReceivedDataBuffer
 37076  00B116  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37077  00B118  0E04               	movlw	high _ReceivedDataBuffer
 37078  00B11A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37079  00B11C  0E40               	movlw	64
 37080  00B11E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37081  00B120  0E01               	movlw	1
 37082  00B122  EC80  F074         	call	_USBTransferOnePacket
 37083  00B126  C060  F2B4         	movff	?_USBTransferOnePacket,_USBOutHandle
 37084  00B12A  C061  F2B5         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 37085  00B12E  0012               	return	
 37086  00B130                     __end_of_APP_DeviceCustomHIDTasks:
 37087                           	opt stack 0
 37088                           tosu	equ	0xFFF
 37089                           tosh	equ	0xFFE
 37090                           tosl	equ	0xFFD
 37091                           pclath	equ	0xFFA
 37092                           tblptru	equ	0xFF8
 37093                           tblptrh	equ	0xFF7
 37094                           tblptrl	equ	0xFF6
 37095                           tablat	equ	0xFF5
 37096                           prodh	equ	0xFF4
 37097                           prodl	equ	0xFF3
 37098                           intcon	equ	0xFF2
 37099                           intcon2	equ	0xFF1
 37100                           intcon3	equ	0xFF0
 37101                           postinc0	equ	0xFEE
 37102                           wreg	equ	0xFE8
 37103                           indf1	equ	0xFE7
 37104                           postinc1	equ	0xFE6
 37105                           postdec1	equ	0xFE5
 37106                           plusw1	equ	0xFE3
 37107                           fsr1h	equ	0xFE2
 37108                           fsr1l	equ	0xFE1
 37109                           indf2	equ	0xFDF
 37110                           postinc2	equ	0xFDE
 37111                           postdec2	equ	0xFDD
 37112                           plusw2	equ	0xFDB
 37113                           fsr2h	equ	0xFDA
 37114                           fsr2l	equ	0xFD9
 37115                           status	equ	0xFD8
 37116                           
 37117 ;; *************** function __parse_command_short *****************
 37118 ;; Defined at:
 37119 ;;		line 398 in file "app_device_custom_hid.c"
 37120 ;; Parameters:    Size  Location     Type
 37121 ;;  cmd             1    wreg     unsigned char 
 37122 ;; Auto vars:     Size  Location     Type
 37123 ;;  cmd             1   43[BANK0 ] unsigned char 
 37124 ;; Return value:  Size  Location     Type
 37125 ;;                  1    wreg      void 
 37126 ;; Registers used:
 37127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37128 ;; Tracked objects:
 37129 ;;		On entry : 0/0
 37130 ;;		On exit  : 0/0
 37131 ;;		Unchanged: 0/0
 37132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37137 ;;Total ram usage:        1 bytes
 37138 ;; Hardware stack levels used:    1
 37139 ;; Hardware stack levels required when called:   14
 37140 ;; This function calls:
 37141 ;;		_rtcc_write_eeprom
 37142 ;;		_system_output_off
 37143 ;;		_system_output_on
 37144 ;; This function is called by:
 37145 ;;		_APP_DeviceCustomHIDTasks
 37146 ;; This function uses a non-reentrant model
 37147 ;;
 37148                           
 37149                           	psect	text167
 37150  00F2D4                     __ptext167:
 37151                           	opt stack 0
 37152  00F2D4                     __parse_command_short:
 37153                           	opt stack 15
 37154                           
 37155                           ;incstack = 0
 37156                           ;__parse_command_short@cmd stored from wreg
 37157  00F2D4  0100               	movlb	0	; () banked
 37158  00F2D6  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 37159                           
 37160                           ;app_device_custom_hid.c: 400: switch(cmd)
 37161  00F2D8  D03C               	goto	l1143
 37162  00F2DA                     
 37163                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 37164  00F2DA  0E01               	movlw	1
 37165  00F2DC  ECDF  F08D         	call	_system_output_off
 37166                           
 37167                           ;app_device_custom_hid.c: 404: break;
 37168  00F2E0  0012               	return	
 37169  00F2E2                     
 37170                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 37171  00F2E2  0E01               	movlw	1
 37172  00F2E4  ECF5  F08F         	call	_system_output_on
 37173                           
 37174                           ;app_device_custom_hid.c: 407: break;
 37175  00F2E8  0012               	return	
 37176  00F2EA                     
 37177                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 37178  00F2EA  0E02               	movlw	2
 37179  00F2EC  ECDF  F08D         	call	_system_output_off
 37180                           
 37181                           ;app_device_custom_hid.c: 410: break;
 37182  00F2F0  0012               	return	
 37183  00F2F2                     
 37184                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 37185  00F2F2  0E02               	movlw	2
 37186  00F2F4  ECF5  F08F         	call	_system_output_on
 37187                           
 37188                           ;app_device_custom_hid.c: 413: break;
 37189  00F2F8  0012               	return	
 37190  00F2FA                     
 37191                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 37192  00F2FA  0E04               	movlw	4
 37193  00F2FC  ECDF  F08D         	call	_system_output_off
 37194                           
 37195                           ;app_device_custom_hid.c: 416: break;
 37196  00F300  0012               	return	
 37197  00F302                     
 37198                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 37199  00F302  0E04               	movlw	4
 37200  00F304  ECF5  F08F         	call	_system_output_on
 37201                           
 37202                           ;app_device_custom_hid.c: 419: break;
 37203  00F308  0012               	return	
 37204  00F30A                     
 37205                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 37206  00F30A  0E08               	movlw	8
 37207  00F30C  ECDF  F08D         	call	_system_output_off
 37208                           
 37209                           ;app_device_custom_hid.c: 422: break;
 37210  00F310  0012               	return	
 37211  00F312                     
 37212                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 37213  00F312  0E08               	movlw	8
 37214  00F314  ECF5  F08F         	call	_system_output_on
 37215                           
 37216                           ;app_device_custom_hid.c: 425: break;
 37217  00F318  0012               	return	
 37218  00F31A                     
 37219                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 37220  00F31A  0E10               	movlw	16
 37221  00F31C  ECDF  F08D         	call	_system_output_off
 37222                           
 37223                           ;app_device_custom_hid.c: 428: break;
 37224  00F320  0012               	return	
 37225  00F322                     
 37226                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 37227  00F322  0E10               	movlw	16
 37228  00F324  ECF5  F08F         	call	_system_output_on
 37229                           
 37230                           ;app_device_custom_hid.c: 431: break;
 37231  00F328  0012               	return	
 37232  00F32A                     
 37233                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 37234  00F32A  0E20               	movlw	32
 37235  00F32C  ECDF  F08D         	call	_system_output_off
 37236                           
 37237                           ;app_device_custom_hid.c: 434: break;
 37238  00F330  0012               	return	
 37239  00F332                     
 37240                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 37241  00F332  0E20               	movlw	32
 37242  00F334  ECF5  F08F         	call	_system_output_on
 37243                           
 37244                           ;app_device_custom_hid.c: 437: break;
 37245  00F338  0012               	return	
 37246  00F33A                     
 37247                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 37248  00F33A  0102               	movlb	2	; () banked
 37249  00F33C  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 37250                           
 37251                           ;app_device_custom_hid.c: 440: break;
 37252  00F33E  0012               	return	
 37253  00F340                     
 37254                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 37255                           
 37256                           ; BSR set to: 2
 37257  00F340  0102               	movlb	2	; () banked
 37258  00F342  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 37259                           
 37260                           ;app_device_custom_hid.c: 443: break;
 37261  00F344  0012               	return	
 37262  00F346                     
 37263                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 37264                           
 37265                           ; BSR set to: 2
 37266  00F346  0102               	movlb	2	; () banked
 37267  00F348  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 37268                           
 37269                           ;app_device_custom_hid.c: 446: break;
 37270  00F34A  0012               	return	
 37271  00F34C                     
 37272                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 37273                           
 37274                           ; BSR set to: 2
 37275  00F34C  EC66  F090         	call	_rtcc_write_eeprom	;wreg free
 37276                           
 37277                           ;app_device_custom_hid.c: 450: }
 37278                           
 37279                           ;app_device_custom_hid.c: 449: break;
 37280  00F350  0012               	return	
 37281  00F352                     l1143:
 37282  00F352  0100               	movlb	0	; () banked
 37283  00F354  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 37284                           
 37285                           ; Switch size 1, requested type "space"
 37286                           ; Number of cases is 16, Range of values is 48 to 63
 37287                           ; switch strategies available:
 37288                           ; Name         Instructions Cycles
 37289                           ; simple_byte           49    25 (average)
 37290                           ;	Chosen strategy is simple_byte
 37291  00F356  0A30               	xorlw	48	; case 48
 37292  00F358  B4D8               	btfsc	status,2,c
 37293  00F35A  D7BF               	goto	l1144
 37294  00F35C  0A01               	xorlw	1	; case 49
 37295  00F35E  B4D8               	btfsc	status,2,c
 37296  00F360  D7C0               	goto	l1146
 37297  00F362  0A03               	xorlw	3	; case 50
 37298  00F364  B4D8               	btfsc	status,2,c
 37299  00F366  D7C1               	goto	l1147
 37300  00F368  0A01               	xorlw	1	; case 51
 37301  00F36A  B4D8               	btfsc	status,2,c
 37302  00F36C  D7C2               	goto	l1148
 37303  00F36E  0A07               	xorlw	7	; case 52
 37304  00F370  B4D8               	btfsc	status,2,c
 37305  00F372  D7C3               	goto	l1149
 37306  00F374  0A01               	xorlw	1	; case 53
 37307  00F376  B4D8               	btfsc	status,2,c
 37308  00F378  D7C4               	goto	l1150
 37309  00F37A  0A03               	xorlw	3	; case 54
 37310  00F37C  B4D8               	btfsc	status,2,c
 37311  00F37E  D7C5               	goto	l1151
 37312  00F380  0A01               	xorlw	1	; case 55
 37313  00F382  B4D8               	btfsc	status,2,c
 37314  00F384  D7C6               	goto	l1152
 37315  00F386  0A0F               	xorlw	15	; case 56
 37316  00F388  B4D8               	btfsc	status,2,c
 37317  00F38A  D7C7               	goto	l1153
 37318  00F38C  0A01               	xorlw	1	; case 57
 37319  00F38E  B4D8               	btfsc	status,2,c
 37320  00F390  D7C8               	goto	l1154
 37321  00F392  0A03               	xorlw	3	; case 58
 37322  00F394  B4D8               	btfsc	status,2,c
 37323  00F396  D7C9               	goto	l1155
 37324  00F398  0A01               	xorlw	1	; case 59
 37325  00F39A  B4D8               	btfsc	status,2,c
 37326  00F39C  D7CA               	goto	l1156
 37327  00F39E  0A07               	xorlw	7	; case 60
 37328  00F3A0  B4D8               	btfsc	status,2,c
 37329  00F3A2  D7CB               	goto	l1157
 37330  00F3A4  0A01               	xorlw	1	; case 61
 37331  00F3A6  B4D8               	btfsc	status,2,c
 37332  00F3A8  D7CB               	goto	l1158
 37333  00F3AA  0A03               	xorlw	3	; case 62
 37334  00F3AC  B4D8               	btfsc	status,2,c
 37335  00F3AE  D7CB               	goto	l1159
 37336  00F3B0  0A01               	xorlw	1	; case 63
 37337  00F3B2  A4D8               	btfss	status,2,c
 37338  00F3B4  0012               	return	
 37339  00F3B6  D7CA               	goto	l1160
 37340  00F3B8                     __end_of__parse_command_short:
 37341                           	opt stack 0
 37342                           tosu	equ	0xFFF
 37343                           tosh	equ	0xFFE
 37344                           tosl	equ	0xFFD
 37345                           pclath	equ	0xFFA
 37346                           tblptru	equ	0xFF8
 37347                           tblptrh	equ	0xFF7
 37348                           tblptrl	equ	0xFF6
 37349                           tablat	equ	0xFF5
 37350                           prodh	equ	0xFF4
 37351                           prodl	equ	0xFF3
 37352                           intcon	equ	0xFF2
 37353                           intcon2	equ	0xFF1
 37354                           intcon3	equ	0xFF0
 37355                           postinc0	equ	0xFEE
 37356                           wreg	equ	0xFE8
 37357                           indf1	equ	0xFE7
 37358                           postinc1	equ	0xFE6
 37359                           postdec1	equ	0xFE5
 37360                           plusw1	equ	0xFE3
 37361                           fsr1h	equ	0xFE2
 37362                           fsr1l	equ	0xFE1
 37363                           indf2	equ	0xFDF
 37364                           postinc2	equ	0xFDE
 37365                           postdec2	equ	0xFDD
 37366                           plusw2	equ	0xFDB
 37367                           fsr2h	equ	0xFDA
 37368                           fsr2l	equ	0xFD9
 37369                           status	equ	0xFD8
 37370                           
 37371 ;; *************** function _system_output_on *****************
 37372 ;; Defined at:
 37373 ;;		line 507 in file "os.c"
 37374 ;; Parameters:    Size  Location     Type
 37375 ;;  output          1    wreg     enum E8135
 37376 ;; Auto vars:     Size  Location     Type
 37377 ;;  output          1    0[BANK0 ] enum E8135
 37378 ;; Return value:  Size  Location     Type
 37379 ;;                  1    wreg      void 
 37380 ;; Registers used:
 37381 ;;		wreg, status,2, status,0
 37382 ;; Tracked objects:
 37383 ;;		On entry : 0/0
 37384 ;;		On exit  : 0/0
 37385 ;;		Unchanged: 0/0
 37386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37390 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37391 ;;Total ram usage:        1 bytes
 37392 ;; Hardware stack levels used:    1
 37393 ;; Hardware stack levels required when called:   10
 37394 ;; This function calls:
 37395 ;;		Nothing
 37396 ;; This function is called by:
 37397 ;;		__parse_command_short
 37398 ;;		_system_output_toggle
 37399 ;;		__ui_encoder
 37400 ;; This function uses a non-reentrant model
 37401 ;;
 37402                           
 37403                           	psect	text168
 37404  011FEA                     __ptext168:
 37405                           	opt stack 0
 37406  011FEA                     _system_output_on:
 37407                           	opt stack 17
 37408                           
 37409                           ;incstack = 0
 37410                           ;system_output_on@output stored from wreg
 37411  011FEA  0100               	movlb	0	; () banked
 37412  011FEC  6F60               	movwf	system_output_on@output& (0+255),b
 37413                           
 37414                           ;os.c: 510: os.outputs |= output;
 37415  011FEE  0100               	movlb	0	; () banked
 37416  011FF0  5160               	movf	system_output_on@output& (0+255),w,b
 37417  011FF2  0102               	movlb	2	; () banked
 37418  011FF4  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 37419                           
 37420                           ;os.c: 513: switch(output)
 37421  011FF6  D00E               	goto	l1406
 37422  011FF8                     l1407:
 37423                           
 37424                           ; BSR set to: 0
 37425                           ;os.c: 516: LATCbits.LC7 = 1;
 37426  011FF8  8E8B               	bsf	3979,7,c	;volatile
 37427                           
 37428                           ;os.c: 517: LATEbits.LE2 = 0;
 37429  011FFA  948D               	bcf	3981,2,c	;volatile
 37430                           
 37431                           ;os.c: 518: break;
 37432  011FFC  0012               	return	
 37433  011FFE                     l1409:
 37434                           
 37435                           ; BSR set to: 0
 37436                           ;os.c: 520: LATCbits.LC7 = 1;
 37437  011FFE  8E8B               	bsf	3979,7,c	;volatile
 37438                           
 37439                           ;os.c: 521: LATEbits.LE1 = 0;
 37440  012000  928D               	bcf	3981,1,c	;volatile
 37441                           
 37442                           ;os.c: 522: break;
 37443  012002  0012               	return	
 37444  012004                     l1410:
 37445                           
 37446                           ; BSR set to: 0
 37447                           ;os.c: 524: LATCbits.LC7 = 1;
 37448  012004  8E8B               	bsf	3979,7,c	;volatile
 37449                           
 37450                           ;os.c: 525: LATEbits.LE0 = 0;
 37451  012006  908D               	bcf	3981,0,c	;volatile
 37452                           
 37453                           ;os.c: 526: break;
 37454  012008  0012               	return	
 37455  01200A                     l1411:
 37456                           
 37457                           ; BSR set to: 0
 37458                           ;os.c: 528: LATCbits.LC7 = 1;
 37459  01200A  8E8B               	bsf	3979,7,c	;volatile
 37460                           
 37461                           ;os.c: 529: LATAbits.LA5 = 0;
 37462  01200C  9A89               	bcf	3977,5,c	;volatile
 37463                           
 37464                           ;os.c: 530: break;
 37465  01200E  0012               	return	
 37466  012010                     l1412:
 37467                           
 37468                           ; BSR set to: 0
 37469                           ;os.c: 532: LATDbits.LD3 = 1;
 37470  012010  868C               	bsf	3980,3,c	;volatile
 37471                           
 37472                           ; BSR set to: 0
 37473                           ;os.c: 534: }
 37474                           
 37475                           ;os.c: 533: break;
 37476  012012  0012               	return	
 37477  012014                     l1406:
 37478                           
 37479                           ; BSR set to: 0
 37480  012014  0100               	movlb	0	; () banked
 37481  012016  5160               	movf	system_output_on@output& (0+255),w,b
 37482                           
 37483                           ; Switch size 1, requested type "space"
 37484                           ; Number of cases is 5, Range of values is 1 to 16
 37485                           ; switch strategies available:
 37486                           ; Name         Instructions Cycles
 37487                           ; simple_byte           16     9 (average)
 37488                           ;	Chosen strategy is simple_byte
 37489  012018  0A01               	xorlw	1	; case 1
 37490  01201A  B4D8               	btfsc	status,2,c
 37491  01201C  D7ED               	goto	l1407
 37492  01201E  0A03               	xorlw	3	; case 2
 37493  012020  B4D8               	btfsc	status,2,c
 37494  012022  D7ED               	goto	l1409
 37495  012024  0A06               	xorlw	6	; case 4
 37496  012026  B4D8               	btfsc	status,2,c
 37497  012028  D7ED               	goto	l1410
 37498  01202A  0A0C               	xorlw	12	; case 8
 37499  01202C  B4D8               	btfsc	status,2,c
 37500  01202E  D7ED               	goto	l1411
 37501  012030  0A18               	xorlw	24	; case 16
 37502  012032  A4D8               	btfss	status,2,c
 37503  012034  0012               	return	
 37504  012036  D7EC               	goto	l1412
 37505  012038                     __end_of_system_output_on:
 37506                           	opt stack 0
 37507                           tosu	equ	0xFFF
 37508                           tosh	equ	0xFFE
 37509                           tosl	equ	0xFFD
 37510                           pclath	equ	0xFFA
 37511                           tblptru	equ	0xFF8
 37512                           tblptrh	equ	0xFF7
 37513                           tblptrl	equ	0xFF6
 37514                           tablat	equ	0xFF5
 37515                           prodh	equ	0xFF4
 37516                           prodl	equ	0xFF3
 37517                           intcon	equ	0xFF2
 37518                           intcon2	equ	0xFF1
 37519                           intcon3	equ	0xFF0
 37520                           postinc0	equ	0xFEE
 37521                           wreg	equ	0xFE8
 37522                           indf1	equ	0xFE7
 37523                           postinc1	equ	0xFE6
 37524                           postdec1	equ	0xFE5
 37525                           plusw1	equ	0xFE3
 37526                           fsr1h	equ	0xFE2
 37527                           fsr1l	equ	0xFE1
 37528                           indf2	equ	0xFDF
 37529                           postinc2	equ	0xFDE
 37530                           postdec2	equ	0xFDD
 37531                           plusw2	equ	0xFDB
 37532                           fsr2h	equ	0xFDA
 37533                           fsr2l	equ	0xFD9
 37534                           status	equ	0xFD8
 37535                           
 37536 ;; *************** function _system_output_off *****************
 37537 ;; Defined at:
 37538 ;;		line 537 in file "os.c"
 37539 ;; Parameters:    Size  Location     Type
 37540 ;;  output          1    wreg     enum E8135
 37541 ;; Auto vars:     Size  Location     Type
 37542 ;;  output          1    1[BANK0 ] enum E8135
 37543 ;; Return value:  Size  Location     Type
 37544 ;;                  1    wreg      void 
 37545 ;; Registers used:
 37546 ;;		wreg, status,2, status,0
 37547 ;; Tracked objects:
 37548 ;;		On entry : 0/0
 37549 ;;		On exit  : 0/0
 37550 ;;		Unchanged: 0/0
 37551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37556 ;;Total ram usage:        2 bytes
 37557 ;; Hardware stack levels used:    1
 37558 ;; Hardware stack levels required when called:   10
 37559 ;; This function calls:
 37560 ;;		Nothing
 37561 ;; This function is called by:
 37562 ;;		_main
 37563 ;;		__parse_command_short
 37564 ;;		_system_output_toggle
 37565 ;;		__ui_encoder
 37566 ;; This function uses a non-reentrant model
 37567 ;;
 37568                           
 37569                           	psect	text169
 37570  011BBE                     __ptext169:
 37571                           	opt stack 0
 37572  011BBE                     _system_output_off:
 37573                           	opt stack 17
 37574                           
 37575                           ; BSR set to: 0
 37576                           ;incstack = 0
 37577                           ;system_output_off@output stored from wreg
 37578  011BBE  0100               	movlb	0	; () banked
 37579  011BC0  6F61               	movwf	system_output_off@output& (0+255),b
 37580                           
 37581                           ;os.c: 540: os.outputs &= (~output);
 37582  011BC2  0100               	movlb	0	; () banked
 37583  011BC4  5161               	movf	system_output_off@output& (0+255),w,b
 37584  011BC6  0AFF               	xorlw	255
 37585  011BC8  0102               	movlb	2	; () banked
 37586  011BCA  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 37587                           
 37588                           ;os.c: 543: switch(output)
 37589  011BCC  D00A               	goto	l1416
 37590  011BCE                     l1417:
 37591                           
 37592                           ; BSR set to: 0
 37593                           ;os.c: 546: LATEbits.LE2 = 1;
 37594  011BCE  848D               	bsf	3981,2,c	;volatile
 37595                           
 37596                           ;os.c: 547: break;
 37597  011BD0  D019               	goto	l1418
 37598  011BD2                     l1419:
 37599                           
 37600                           ; BSR set to: 0
 37601                           ;os.c: 549: LATEbits.LE1 = 1;
 37602  011BD2  828D               	bsf	3981,1,c	;volatile
 37603                           
 37604                           ;os.c: 550: break;
 37605  011BD4  D017               	goto	l1418
 37606  011BD6                     l1420:
 37607                           
 37608                           ; BSR set to: 0
 37609                           ;os.c: 552: LATEbits.LE0 = 1;
 37610  011BD6  808D               	bsf	3981,0,c	;volatile
 37611                           
 37612                           ;os.c: 553: break;
 37613  011BD8  D015               	goto	l1418
 37614  011BDA                     l1421:
 37615                           
 37616                           ; BSR set to: 0
 37617                           ;os.c: 555: LATAbits.LA5 = 1;
 37618  011BDA  8A89               	bsf	3977,5,c	;volatile
 37619                           
 37620                           ;os.c: 556: break;
 37621  011BDC  D013               	goto	l1418
 37622  011BDE                     l1422:
 37623                           
 37624                           ; BSR set to: 0
 37625                           ;os.c: 558: LATDbits.LD3 = 0;
 37626  011BDE  968C               	bcf	3980,3,c	;volatile
 37627                           
 37628                           ; BSR set to: 0
 37629                           ;os.c: 560: }
 37630                           
 37631                           ;os.c: 559: break;
 37632  011BE0  D011               	goto	l1418
 37633  011BE2                     l1416:
 37634                           
 37635                           ; BSR set to: 0
 37636  011BE2  0100               	movlb	0	; () banked
 37637  011BE4  5161               	movf	system_output_off@output& (0+255),w,b
 37638                           
 37639                           ; Switch size 1, requested type "space"
 37640                           ; Number of cases is 5, Range of values is 1 to 16
 37641                           ; switch strategies available:
 37642                           ; Name         Instructions Cycles
 37643                           ; simple_byte           16     9 (average)
 37644                           ;	Chosen strategy is simple_byte
 37645  011BE6  0A01               	xorlw	1	; case 1
 37646  011BE8  B4D8               	btfsc	status,2,c
 37647  011BEA  D7F1               	goto	l1417
 37648  011BEC  0A03               	xorlw	3	; case 2
 37649  011BEE  B4D8               	btfsc	status,2,c
 37650  011BF0  D7F0               	goto	l1419
 37651  011BF2  0A06               	xorlw	6	; case 4
 37652  011BF4  B4D8               	btfsc	status,2,c
 37653  011BF6  D7EF               	goto	l1420
 37654  011BF8  0A0C               	xorlw	12	; case 8
 37655  011BFA  B4D8               	btfsc	status,2,c
 37656  011BFC  D7EE               	goto	l1421
 37657  011BFE  0A18               	xorlw	24	; case 16
 37658  011C00  B4D8               	btfsc	status,2,c
 37659  011C02  D7ED               	goto	l1422
 37660  011C04                     l1418:
 37661                           
 37662                           ; BSR set to: 0
 37663                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 37664                           
 37665                           ; BSR set to: 0
 37666  011C04  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 37667  011C08  0E0F               	movlw	15
 37668  011C0A  1760               	andwf	??_system_output_off& (0+255),f,b
 37669  011C0C  A4D8               	btfss	status,2,c
 37670  011C0E  0012               	return	
 37671                           
 37672                           ; BSR set to: 0
 37673                           ;os.c: 564: {
 37674                           ;os.c: 565: LATCbits.LC7 = 0;
 37675  011C10  9E8B               	bcf	3979,7,c	;volatile
 37676  011C12  0012               	return	
 37677  011C14                     __end_of_system_output_off:
 37678                           	opt stack 0
 37679                           tosu	equ	0xFFF
 37680                           tosh	equ	0xFFE
 37681                           tosl	equ	0xFFD
 37682                           pclath	equ	0xFFA
 37683                           tblptru	equ	0xFF8
 37684                           tblptrh	equ	0xFF7
 37685                           tblptrl	equ	0xFF6
 37686                           tablat	equ	0xFF5
 37687                           prodh	equ	0xFF4
 37688                           prodl	equ	0xFF3
 37689                           intcon	equ	0xFF2
 37690                           intcon2	equ	0xFF1
 37691                           intcon3	equ	0xFF0
 37692                           postinc0	equ	0xFEE
 37693                           wreg	equ	0xFE8
 37694                           indf1	equ	0xFE7
 37695                           postinc1	equ	0xFE6
 37696                           postdec1	equ	0xFE5
 37697                           plusw1	equ	0xFE3
 37698                           fsr1h	equ	0xFE2
 37699                           fsr1l	equ	0xFE1
 37700                           indf2	equ	0xFDF
 37701                           postinc2	equ	0xFDE
 37702                           postdec2	equ	0xFDD
 37703                           plusw2	equ	0xFDB
 37704                           fsr2h	equ	0xFDA
 37705                           fsr2l	equ	0xFD9
 37706                           status	equ	0xFD8
 37707                           
 37708 ;; *************** function _rtcc_write_eeprom *****************
 37709 ;; Defined at:
 37710 ;;		line 436 in file "rtcc.c"
 37711 ;; Parameters:    Size  Location     Type
 37712 ;;		None
 37713 ;; Auto vars:     Size  Location     Type
 37714 ;;  date            6   37[BANK0 ] unsigned char [6]
 37715 ;; Return value:  Size  Location     Type
 37716 ;;                  1    wreg      void 
 37717 ;; Registers used:
 37718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37719 ;; Tracked objects:
 37720 ;;		On entry : 0/0
 37721 ;;		On exit  : 0/0
 37722 ;;		Unchanged: 0/0
 37723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37725 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37727 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37728 ;;Total ram usage:        6 bytes
 37729 ;; Hardware stack levels used:    1
 37730 ;; Hardware stack levels required when called:   13
 37731 ;; This function calls:
 37732 ;;		_i2c_eeprom_write
 37733 ;;		_rtcc_get_day
 37734 ;;		_rtcc_get_hours
 37735 ;;		_rtcc_get_minutes
 37736 ;;		_rtcc_get_month
 37737 ;;		_rtcc_get_seconds
 37738 ;;		_rtcc_get_year
 37739 ;; This function is called by:
 37740 ;;		__parse_command_short
 37741 ;;		__ui_encoder
 37742 ;;		_rtcc_read_eeprom
 37743 ;; This function uses a non-reentrant model
 37744 ;;
 37745                           
 37746                           	psect	text170
 37747  0120CC                     __ptext170:
 37748                           	opt stack 0
 37749  0120CC                     _rtcc_write_eeprom:
 37750                           	opt stack 15
 37751                           
 37752                           ;rtcc.c: 438: uint8_t date[6];
 37753                           ;rtcc.c: 439: date[0] = rtcc_get_year();
 37754                           
 37755                           ; BSR set to: 0
 37756                           ;incstack = 0
 37757  0120CC  EC3B  F097         	call	_rtcc_get_year	;wreg free
 37758  0120D0  0100               	movlb	0	; () banked
 37759  0120D2  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 37760                           
 37761                           ;rtcc.c: 440: date[1] = rtcc_get_month();
 37762  0120D4  EC49  F097         	call	_rtcc_get_month	;wreg free
 37763  0120D8  0100               	movlb	0	; () banked
 37764  0120DA  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 37765                           
 37766                           ;rtcc.c: 441: date[2] = rtcc_get_day();
 37767  0120DC  EC5E  F097         	call	_rtcc_get_day	;wreg free
 37768  0120E0  0100               	movlb	0	; () banked
 37769  0120E2  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 37770                           
 37771                           ;rtcc.c: 442: date[3] = rtcc_get_hours();
 37772  0120E4  EC57  F097         	call	_rtcc_get_hours	;wreg free
 37773  0120E8  0100               	movlb	0	; () banked
 37774  0120EA  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 37775                           
 37776                           ;rtcc.c: 443: date[4] = rtcc_get_minutes();
 37777  0120EC  EC50  F097         	call	_rtcc_get_minutes	;wreg free
 37778  0120F0  0100               	movlb	0	; () banked
 37779  0120F2  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 37780                           
 37781                           ;rtcc.c: 444: date[5] = rtcc_get_seconds();
 37782  0120F4  EC42  F097         	call	_rtcc_get_seconds	;wreg free
 37783  0120F8  0100               	movlb	0	; () banked
 37784  0120FA  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 37785                           
 37786                           ; BSR set to: 0
 37787                           ;rtcc.c: 446: i2c_eeprom_write(0x040, &date[0], 6);
 37788  0120FC  0E00               	movlw	0
 37789  0120FE  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 37790  012100  0E40               	movlw	64
 37791  012102  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 37792  012104  0E85               	movlw	low rtcc_write_eeprom@date
 37793  012106  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 37794  012108  0E00               	movlw	high rtcc_write_eeprom@date
 37795  01210A  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 37796  01210C  0E06               	movlw	6
 37797  01210E  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 37798  012110  EC0C  F086         	call	_i2c_eeprom_write	;wreg free
 37799  012114  0012               	return		;funcret
 37800  012116                     __end_of_rtcc_write_eeprom:
 37801                           	opt stack 0
 37802                           tosu	equ	0xFFF
 37803                           tosh	equ	0xFFE
 37804                           tosl	equ	0xFFD
 37805                           pclath	equ	0xFFA
 37806                           tblptru	equ	0xFF8
 37807                           tblptrh	equ	0xFF7
 37808                           tblptrl	equ	0xFF6
 37809                           tablat	equ	0xFF5
 37810                           prodh	equ	0xFF4
 37811                           prodl	equ	0xFF3
 37812                           intcon	equ	0xFF2
 37813                           intcon2	equ	0xFF1
 37814                           intcon3	equ	0xFF0
 37815                           postinc0	equ	0xFEE
 37816                           wreg	equ	0xFE8
 37817                           indf1	equ	0xFE7
 37818                           postinc1	equ	0xFE6
 37819                           postdec1	equ	0xFE5
 37820                           plusw1	equ	0xFE3
 37821                           fsr1h	equ	0xFE2
 37822                           fsr1l	equ	0xFE1
 37823                           indf2	equ	0xFDF
 37824                           postinc2	equ	0xFDE
 37825                           postdec2	equ	0xFDD
 37826                           plusw2	equ	0xFDB
 37827                           fsr2h	equ	0xFDA
 37828                           fsr2l	equ	0xFD9
 37829                           status	equ	0xFD8
 37830                           
 37831 ;; *************** function _i2c_eeprom_write *****************
 37832 ;; Defined at:
 37833 ;;		line 542 in file "i2c.c"
 37834 ;; Parameters:    Size  Location     Type
 37835 ;;  address         2   10[BANK0 ] unsigned int 
 37836 ;;  data            2   12[BANK0 ] PTR unsigned char 
 37837 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 37838 ;;  length          1   14[BANK0 ] unsigned char 
 37839 ;; Auto vars:     Size  Location     Type
 37840 ;;  dat            17   18[BANK0 ] unsigned char [17]
 37841 ;;  cntr            1   36[BANK0 ] unsigned char 
 37842 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 37843 ;; Return value:  Size  Location     Type
 37844 ;;                  1    wreg      void 
 37845 ;; Registers used:
 37846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37847 ;; Tracked objects:
 37848 ;;		On entry : 0/0
 37849 ;;		On exit  : 0/0
 37850 ;;		Unchanged: 0/0
 37851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37852 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37853 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37854 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37855 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37856 ;;Total ram usage:       27 bytes
 37857 ;; Hardware stack levels used:    1
 37858 ;; Hardware stack levels required when called:   12
 37859 ;; This function calls:
 37860 ;;		__i2c_write
 37861 ;;		_i2c_set_frequency
 37862 ;; This function is called by:
 37863 ;;		__write_calibration
 37864 ;;		_rtcc_write_eeprom
 37865 ;; This function uses a non-reentrant model
 37866 ;;
 37867                           
 37868                           	psect	text171
 37869  010C18                     __ptext171:
 37870                           	opt stack 0
 37871  010C18                     _i2c_eeprom_write:
 37872                           	opt stack 15
 37873                           
 37874                           ;i2c.c: 544: uint8_t cntr;
 37875                           ;i2c.c: 545: uint8_t slave_address;
 37876                           ;i2c.c: 546: uint8_t dat[17];
 37877                           ;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 37878                           
 37879                           ;incstack = 0
 37880  010C18  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 37881  010C1C  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 37882  010C20  0E07               	movlw	7
 37883  010C22  0100               	movlb	0	; () banked
 37884  010C24  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 37885  010C26                     u10285:
 37886  010C26  90D8               	bcf	status,0,c
 37887  010C28  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 37888  010C2A  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 37889  010C2C  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 37890  010C2E  D7FB               	goto	u10285
 37891  010C30  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 37892  010C32  0B0E               	andlw	14
 37893  010C34  09A0               	iorlw	160
 37894  010C36  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 37895                           
 37896                           ; BSR set to: 0
 37897                           ;i2c.c: 549: dat[0] = address & 0xFF;
 37898  010C38  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 37899                           
 37900                           ;i2c.c: 551: length &= 0b00001111;
 37901  010C3C  0E0F               	movlw	15
 37902  010C3E  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 37903                           
 37904                           ; BSR set to: 0
 37905                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 37906  010C40  0E00               	movlw	0
 37907  010C42  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 37908  010C44  D018               	goto	l1615
 37909  010C46                     
 37910                           ; BSR set to: 0
 37911                           ;i2c.c: 553: {
 37912                           ;i2c.c: 554: dat[cntr+1] = data[cntr];
 37913                           
 37914                           ; BSR set to: 0
 37915  010C46  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37916  010C48  0D01               	mullw	1
 37917  010C4A  50F3               	movf	prodl,w,c
 37918  010C4C  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 37919  010C4E  6ED9               	movwf	fsr2l,c
 37920  010C50  50F4               	movf	prodh,w,c
 37921  010C52  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 37922  010C54  6EDA               	movwf	fsr2h,c
 37923  010C56  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37924  010C58  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 37925  010C5A  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 37926  010C5C  0E01               	movlw	1
 37927  010C5E  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 37928  010C60  0E00               	movlw	0
 37929  010C62  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 37930  010C64  0E72               	movlw	low i2c_eeprom_write@dat
 37931  010C66  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 37932  010C68  6EE1               	movwf	fsr1l,c
 37933  010C6A  0E00               	movlw	high i2c_eeprom_write@dat
 37934  010C6C  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 37935  010C6E  6EE2               	movwf	fsr1h,c
 37936  010C70  CFDF FFE7          	movff	indf2,indf1
 37937                           
 37938                           ; BSR set to: 0
 37939  010C74  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 37940  010C76                     l1615:
 37941                           
 37942                           ; BSR set to: 0
 37943                           
 37944                           ; BSR set to: 0
 37945  010C76  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 37946  010C78  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 37947  010C7A  A0D8               	btfss	status,0,c
 37948  010C7C  D7E4               	goto	l1616
 37949                           
 37950                           ; BSR set to: 0
 37951                           ;i2c.c: 555: }
 37952                           ;i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 37953                           
 37954                           ; BSR set to: 0
 37955  010C7E  0E02               	movlw	2
 37956  010C80  ECB0  F088         	call	_i2c_set_frequency
 37957                           
 37958                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 37959  010C84  0E72               	movlw	low i2c_eeprom_write@dat
 37960  010C86  0100               	movlb	0	; () banked
 37961  010C88  6F65               	movwf	__i2c_write@data& (0+255),b
 37962  010C8A  0E00               	movlw	high i2c_eeprom_write@dat
 37963  010C8C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 37964  010C8E  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 37965  010C90  6F67               	movwf	__i2c_write@length& (0+255),b
 37966  010C92  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 37967  010C94  EC55  F08F         	call	__i2c_write
 37968  010C98  0012               	return		;funcret
 37969  010C9A                     __end_of_i2c_eeprom_write:
 37970                           	opt stack 0
 37971                           tosu	equ	0xFFF
 37972                           tosh	equ	0xFFE
 37973                           tosl	equ	0xFFD
 37974                           pclath	equ	0xFFA
 37975                           tblptru	equ	0xFF8
 37976                           tblptrh	equ	0xFF7
 37977                           tblptrl	equ	0xFF6
 37978                           tablat	equ	0xFF5
 37979                           prodh	equ	0xFF4
 37980                           prodl	equ	0xFF3
 37981                           intcon	equ	0xFF2
 37982                           intcon2	equ	0xFF1
 37983                           intcon3	equ	0xFF0
 37984                           postinc0	equ	0xFEE
 37985                           wreg	equ	0xFE8
 37986                           indf1	equ	0xFE7
 37987                           postinc1	equ	0xFE6
 37988                           postdec1	equ	0xFE5
 37989                           plusw1	equ	0xFE3
 37990                           fsr1h	equ	0xFE2
 37991                           fsr1l	equ	0xFE1
 37992                           indf2	equ	0xFDF
 37993                           postinc2	equ	0xFDE
 37994                           postdec2	equ	0xFDD
 37995                           plusw2	equ	0xFDB
 37996                           fsr2h	equ	0xFDA
 37997                           fsr2l	equ	0xFD9
 37998                           status	equ	0xFD8
 37999                           
 38000 ;; *************** function _i2c_set_frequency *****************
 38001 ;; Defined at:
 38002 ;;		line 107 in file "i2c.c"
 38003 ;; Parameters:    Size  Location     Type
 38004 ;;  frequency       1    wreg     enum E8219
 38005 ;; Auto vars:     Size  Location     Type
 38006 ;;  frequency       1    0[BANK0 ] enum E8219
 38007 ;; Return value:  Size  Location     Type
 38008 ;;                  1    wreg      void 
 38009 ;; Registers used:
 38010 ;;		wreg, status,2, status,0
 38011 ;; Tracked objects:
 38012 ;;		On entry : 0/0
 38013 ;;		On exit  : 0/0
 38014 ;;		Unchanged: 0/0
 38015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38019 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38020 ;;Total ram usage:        1 bytes
 38021 ;; Hardware stack levels used:    1
 38022 ;; Hardware stack levels required when called:   10
 38023 ;; This function calls:
 38024 ;;		Nothing
 38025 ;; This function is called by:
 38026 ;;		_i2c_init
 38027 ;;		_i2c_display_send_init_sequence
 38028 ;;		__ic2_display_set_address
 38029 ;;		_i2c_display_cursor
 38030 ;;		_i2c_display_write_fixed
 38031 ;;		_i2c_digipot_reset_on
 38032 ;;		_i2c_digipot_reset_off
 38033 ;;		_i2c_digipot_backlight
 38034 ;;		_i2c_adc_start
 38035 ;;		_i2c_adc_read
 38036 ;;		_i2c_eeprom_write
 38037 ;;		_i2c_eeprom_read
 38038 ;;		_i2c_display_init
 38039 ;;		_i2c_display_write
 38040 ;;		_i2c_digipot_set_defaults
 38041 ;;		_i2c_eeprom_writeByte
 38042 ;;		_i2c_eeprom_readByte
 38043 ;; This function uses a non-reentrant model
 38044 ;;
 38045                           
 38046                           	psect	text172
 38047  011160                     __ptext172:
 38048                           	opt stack 0
 38049  011160                     _i2c_set_frequency:
 38050                           	opt stack 18
 38051                           
 38052                           ;incstack = 0
 38053                           ;i2c_set_frequency@frequency stored from wreg
 38054  011160  0100               	movlb	0	; () banked
 38055  011162  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 38056                           
 38057                           ;i2c.c: 109: switch(os.clockFrequency)
 38058  011164  D027               	goto	l1533
 38059  011166                     
 38060                           ;i2c.c: 112: SSP1ADD = 0;
 38061  011166  0E00               	movlw	0
 38062  011168  D017               	goto	L50
 38063  01116A                     
 38064                           ;i2c.c: 118: SSP1ADD = 19;
 38065  01116A  0E13               	movlw	19
 38066  01116C  D015               	goto	L50
 38067  01116E                     
 38068                           ;i2c.c: 121: SSP1ADD = 9;
 38069  01116E  0E09               	movlw	9
 38070  011170  D013               	goto	L50
 38071  011172                     
 38072                           ;i2c.c: 124: SSP1ADD = 4;
 38073  011172  0E04               	movlw	4
 38074  011174  D011               	goto	L50
 38075  011176  0100               	movlb	0	; () banked
 38076  011178  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 38077                           
 38078                           ; Switch size 1, requested type "space"
 38079                           ; Number of cases is 3, Range of values is 0 to 2
 38080                           ; switch strategies available:
 38081                           ; Name         Instructions Cycles
 38082                           ; simple_byte           10     6 (average)
 38083                           ;	Chosen strategy is simple_byte
 38084  01117A  0A00               	xorlw	0	; case 0
 38085  01117C  B4D8               	btfsc	status,2,c
 38086  01117E  D7F5               	goto	l1538
 38087  011180  0A01               	xorlw	1	; case 1
 38088  011182  B4D8               	btfsc	status,2,c
 38089  011184  D7F4               	goto	l1540
 38090  011186  0A03               	xorlw	3	; case 2
 38091  011188  B4D8               	btfsc	status,2,c
 38092  01118A  D7F3               	goto	l1541
 38093                           
 38094                           ; BSR set to: 0
 38095                           ;i2c.c: 127: break;
 38096  01118C  D01E               	goto	l1535
 38097  01118E                     
 38098                           ; BSR set to: 0
 38099                           ;i2c.c: 132: SSP1ADD = 119;
 38100                           
 38101                           ; BSR set to: 0
 38102  01118E  0E77               	movlw	119
 38103  011190  D003               	goto	L50
 38104  011192                     
 38105                           ; BSR set to: 0
 38106                           ;i2c.c: 135: SSP1ADD = 59;
 38107                           
 38108                           ; BSR set to: 0
 38109  011192  0E3B               	movlw	59
 38110  011194  D001               	goto	L50
 38111  011196                     
 38112                           ; BSR set to: 0
 38113                           ;i2c.c: 138: SSP1ADD = 29;
 38114                           
 38115                           ; BSR set to: 0
 38116  011196  0E1D               	movlw	29
 38117  011198                     L50:
 38118  011198  6EC8               	movwf	4040,c	;volatile
 38119                           
 38120                           ; BSR set to: 0
 38121                           ;i2c.c: 140: }
 38122                           
 38123                           ;i2c.c: 139: break;
 38124  01119A  D017               	goto	l1535
 38125  01119C                     
 38126                           ; BSR set to: 0
 38127  01119C  0100               	movlb	0	; () banked
 38128  01119E  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 38129                           
 38130                           ; Switch size 1, requested type "space"
 38131                           ; Number of cases is 3, Range of values is 0 to 2
 38132                           ; switch strategies available:
 38133                           ; Name         Instructions Cycles
 38134                           ; simple_byte           10     6 (average)
 38135                           ;	Chosen strategy is simple_byte
 38136  0111A0  0A00               	xorlw	0	; case 0
 38137  0111A2  B4D8               	btfsc	status,2,c
 38138  0111A4  D7F4               	goto	l1544
 38139  0111A6  0A01               	xorlw	1	; case 1
 38140  0111A8  B4D8               	btfsc	status,2,c
 38141  0111AA  D7F3               	goto	l1546
 38142  0111AC  0A03               	xorlw	3	; case 2
 38143  0111AE  B4D8               	btfsc	status,2,c
 38144  0111B0  D7F2               	goto	l1547
 38145                           
 38146                           ; BSR set to: 0
 38147                           ;i2c.c: 142: }
 38148                           
 38149                           ; BSR set to: 0
 38150                           ;i2c.c: 141: break;
 38151  0111B2  D00B               	goto	l1535
 38152  0111B4                     l1533:
 38153                           
 38154                           ; BSR set to: 0
 38155  0111B4  0102               	movlb	2	; () banked
 38156  0111B6  5100               	movf	_os& (0+255),w,b	;volatile
 38157                           
 38158                           ; Switch size 1, requested type "space"
 38159                           ; Number of cases is 3, Range of values is 0 to 2
 38160                           ; switch strategies available:
 38161                           ; Name         Instructions Cycles
 38162                           ; simple_byte           10     6 (average)
 38163                           ;	Chosen strategy is simple_byte
 38164  0111B8  0A00               	xorlw	0	; case 0
 38165  0111BA  B4D8               	btfsc	status,2,c
 38166  0111BC  D7D4               	goto	l1534
 38167  0111BE  0A01               	xorlw	1	; case 1
 38168  0111C0  B4D8               	btfsc	status,2,c
 38169  0111C2  D7D9               	goto	l1537
 38170  0111C4  0A03               	xorlw	3	; case 2
 38171  0111C6  B4D8               	btfsc	status,2,c
 38172  0111C8  D7E9               	goto	l1543
 38173  0111CA                     l1535:
 38174                           
 38175                           ;i2c.c: 144: i2c_frequency = frequency;
 38176  0111CA  C060  F1F0         	movff	i2c_set_frequency@frequency,_i2c_frequency
 38177  0111CE  0012               	return		;funcret
 38178  0111D0                     __end_of_i2c_set_frequency:
 38179                           	opt stack 0
 38180                           tosu	equ	0xFFF
 38181                           tosh	equ	0xFFE
 38182                           tosl	equ	0xFFD
 38183                           pclath	equ	0xFFA
 38184                           tblptru	equ	0xFF8
 38185                           tblptrh	equ	0xFF7
 38186                           tblptrl	equ	0xFF6
 38187                           tablat	equ	0xFF5
 38188                           prodh	equ	0xFF4
 38189                           prodl	equ	0xFF3
 38190                           intcon	equ	0xFF2
 38191                           intcon2	equ	0xFF1
 38192                           intcon3	equ	0xFF0
 38193                           postinc0	equ	0xFEE
 38194                           wreg	equ	0xFE8
 38195                           indf1	equ	0xFE7
 38196                           postinc1	equ	0xFE6
 38197                           postdec1	equ	0xFE5
 38198                           plusw1	equ	0xFE3
 38199                           fsr1h	equ	0xFE2
 38200                           fsr1l	equ	0xFE1
 38201                           indf2	equ	0xFDF
 38202                           postinc2	equ	0xFDE
 38203                           postdec2	equ	0xFDD
 38204                           plusw2	equ	0xFDB
 38205                           fsr2h	equ	0xFDA
 38206                           fsr2l	equ	0xFD9
 38207                           status	equ	0xFD8
 38208                           
 38209 ;; *************** function __i2c_write *****************
 38210 ;; Defined at:
 38211 ;;		line 148 in file "i2c.c"
 38212 ;; Parameters:    Size  Location     Type
 38213 ;;  slave_addres    1    wreg     unsigned char 
 38214 ;;  data            2    5[BANK0 ] PTR unsigned char 
 38215 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 38216 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 38217 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 38218 ;;  length          1    7[BANK0 ] unsigned char 
 38219 ;; Auto vars:     Size  Location     Type
 38220 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 38221 ;;  cntr            1    9[BANK0 ] unsigned char 
 38222 ;; Return value:  Size  Location     Type
 38223 ;;                  1    wreg      void 
 38224 ;; Registers used:
 38225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38226 ;; Tracked objects:
 38227 ;;		On entry : 0/0
 38228 ;;		On exit  : 0/0
 38229 ;;		Unchanged: 0/0
 38230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38231 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38234 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38235 ;;Total ram usage:        5 bytes
 38236 ;; Hardware stack levels used:    1
 38237 ;; Hardware stack levels required when called:   11
 38238 ;; This function calls:
 38239 ;;		__i2c_send
 38240 ;;		__i2c_start
 38241 ;;		__i2c_stop
 38242 ;;		__i2c_wait_idle
 38243 ;; This function is called by:
 38244 ;;		_i2c_display_send_init_sequence
 38245 ;;		__ic2_display_set_address
 38246 ;;		_i2c_digipot_reset_on
 38247 ;;		_i2c_digipot_reset_off
 38248 ;;		_i2c_digipot_backlight
 38249 ;;		_i2c_adc_start
 38250 ;;		_i2c_eeprom_write
 38251 ;;		_i2c_eeprom_read
 38252 ;;		_i2c_display_init
 38253 ;;		_i2c_digipot_set_defaults
 38254 ;;		_i2c_eeprom_writeByte
 38255 ;;		_i2c_eeprom_readByte
 38256 ;; This function uses a non-reentrant model
 38257 ;;
 38258                           
 38259                           	psect	text173
 38260  011EAA                     __ptext173:
 38261                           	opt stack 0
 38262  011EAA                     __i2c_write:
 38263                           	opt stack 17
 38264                           
 38265                           ;incstack = 0
 38266                           ;__i2c_write@slave_address stored from wreg
 38267  011EAA  0100               	movlb	0	; () banked
 38268  011EAC  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 38269                           
 38270                           ;i2c.c: 150: uint8_t cntr;
 38271                           ;i2c.c: 152: _i2c_wait_idle();
 38272  011EAE  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 38273                           
 38274                           ;i2c.c: 153: _i2c_start();
 38275  011EB2  EC99  F097         	call	__i2c_start	;wreg free
 38276                           
 38277                           ;i2c.c: 154: _i2c_wait_idle();
 38278  011EB6  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 38279                           
 38280                           ;i2c.c: 155: _i2c_send(slave_address);
 38281  011EBA  0100               	movlb	0	; () banked
 38282  011EBC  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 38283  011EBE  EC90  F097         	call	__i2c_send
 38284                           
 38285                           ;i2c.c: 156: _i2c_wait_idle();
 38286  011EC2  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 38287                           
 38288                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 38289  011EC6  0E00               	movlw	0
 38290  011EC8  0100               	movlb	0	; () banked
 38291  011ECA  6F69               	movwf	__i2c_write@cntr& (0+255),b
 38292  011ECC  D00F               	goto	l1551
 38293  011ECE                     
 38294                           ; BSR set to: 0
 38295                           ;i2c.c: 159: {
 38296                           ;i2c.c: 160: _i2c_send(data[cntr]);
 38297                           
 38298                           ; BSR set to: 0
 38299  011ECE  5169               	movf	__i2c_write@cntr& (0+255),w,b
 38300  011ED0  0D01               	mullw	1
 38301  011ED2  50F3               	movf	prodl,w,c
 38302  011ED4  2565               	addwf	__i2c_write@data& (0+255),w,b
 38303  011ED6  6ED9               	movwf	fsr2l,c
 38304  011ED8  50F4               	movf	prodh,w,c
 38305  011EDA  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 38306  011EDC  6EDA               	movwf	fsr2h,c
 38307  011EDE  50DF               	movf	indf2,w,c
 38308  011EE0  EC90  F097         	call	__i2c_send
 38309                           
 38310                           ;i2c.c: 161: _i2c_wait_idle();
 38311  011EE4  ECC5  F08A         	call	__i2c_wait_idle	;wreg free
 38312  011EE8  0100               	movlb	0	; () banked
 38313  011EEA  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 38314  011EEC                     l1551:
 38315                           
 38316                           ; BSR set to: 0
 38317                           
 38318                           ; BSR set to: 0
 38319  011EEC  5167               	movf	__i2c_write@length& (0+255),w,b
 38320  011EEE  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 38321  011EF0  A0D8               	btfss	status,0,c
 38322  011EF2  D7ED               	goto	l1552
 38323                           
 38324                           ; BSR set to: 0
 38325                           ;i2c.c: 162: }
 38326                           ;i2c.c: 164: _i2c_stop();
 38327                           
 38328                           ; BSR set to: 0
 38329  011EF4  EC95  F097         	call	__i2c_stop	;wreg free
 38330  011EF8  0012               	return		;funcret
 38331  011EFA                     __end_of__i2c_write:
 38332                           	opt stack 0
 38333                           tosu	equ	0xFFF
 38334                           tosh	equ	0xFFE
 38335                           tosl	equ	0xFFD
 38336                           pclath	equ	0xFFA
 38337                           tblptru	equ	0xFF8
 38338                           tblptrh	equ	0xFF7
 38339                           tblptrl	equ	0xFF6
 38340                           tablat	equ	0xFF5
 38341                           prodh	equ	0xFF4
 38342                           prodl	equ	0xFF3
 38343                           intcon	equ	0xFF2
 38344                           intcon2	equ	0xFF1
 38345                           intcon3	equ	0xFF0
 38346                           postinc0	equ	0xFEE
 38347                           wreg	equ	0xFE8
 38348                           indf1	equ	0xFE7
 38349                           postinc1	equ	0xFE6
 38350                           postdec1	equ	0xFE5
 38351                           plusw1	equ	0xFE3
 38352                           fsr1h	equ	0xFE2
 38353                           fsr1l	equ	0xFE1
 38354                           indf2	equ	0xFDF
 38355                           postinc2	equ	0xFDE
 38356                           postdec2	equ	0xFDD
 38357                           plusw2	equ	0xFDB
 38358                           fsr2h	equ	0xFDA
 38359                           fsr2l	equ	0xFD9
 38360                           status	equ	0xFD8
 38361                           
 38362 ;; *************** function __i2c_wait_idle *****************
 38363 ;; Defined at:
 38364 ;;		line 45 in file "i2c.c"
 38365 ;; Parameters:    Size  Location     Type
 38366 ;;		None
 38367 ;; Auto vars:     Size  Location     Type
 38368 ;;		None
 38369 ;; Return value:  Size  Location     Type
 38370 ;;                  1    wreg      void 
 38371 ;; Registers used:
 38372 ;;		wreg, status,2, status,0
 38373 ;; Tracked objects:
 38374 ;;		On entry : 0/0
 38375 ;;		On exit  : 0/0
 38376 ;;		Unchanged: 0/0
 38377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38380 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38381 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38382 ;;Total ram usage:        5 bytes
 38383 ;; Hardware stack levels used:    1
 38384 ;; Hardware stack levels required when called:   10
 38385 ;; This function calls:
 38386 ;;		Nothing
 38387 ;; This function is called by:
 38388 ;;		__i2c_write
 38389 ;;		__i2c_read
 38390 ;;		_i2c_display_write_fixed
 38391 ;;		_i2c_adc_read
 38392 ;;		_i2c_display_write
 38393 ;; This function uses a non-reentrant model
 38394 ;;
 38395                           
 38396                           	psect	text174
 38397  01158A                     __ptext174:
 38398                           	opt stack 0
 38399  01158A                     __i2c_wait_idle:
 38400                           	opt stack 17
 38401                           
 38402                           ;i2c.c: 47: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 38403                           
 38404                           ;incstack = 0
 38405  01158A  A4C7               	btfss	4039,2,c	;volatile
 38406  01158C  D004               	goto	u8950
 38407  01158E  0100               	movlb	0	; () banked
 38408  011590  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 38409  011592  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 38410  011594  D002               	goto	u8958
 38411  011596                     u8950:
 38412  011596  0100               	movlb	0	; () banked
 38413  011598  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 38414  01159A                     u8958:
 38415  01159A  A0C5               	btfss	4037,0,c	;volatile
 38416  01159C  D003               	goto	u8960
 38417  01159E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 38418  0115A0  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 38419  0115A2  D002               	goto	u8968
 38420  0115A4                     u8960:
 38421  0115A4  0100               	movlb	0	; () banked
 38422  0115A6  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 38423  0115A8                     u8968:
 38424  0115A8  A2C5               	btfss	4037,1,c	;volatile
 38425  0115AA  D003               	goto	u8970
 38426  0115AC  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 38427  0115AE  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 38428  0115B0  D002               	goto	u8978
 38429  0115B2                     u8970:
 38430  0115B2  0100               	movlb	0	; () banked
 38431  0115B4  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 38432  0115B6                     u8978:
 38433  0115B6  A4C5               	btfss	4037,2,c	;volatile
 38434  0115B8  D003               	goto	u8980
 38435  0115BA  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 38436  0115BC  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 38437  0115BE  D002               	goto	u8988
 38438  0115C0                     u8980:
 38439  0115C0  0100               	movlb	0	; () banked
 38440  0115C2  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 38441  0115C4                     u8988:
 38442  0115C4  A6C5               	btfss	4037,3,c	;volatile
 38443  0115C6  D003               	goto	u8990
 38444  0115C8  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 38445  0115CA  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 38446  0115CC  D002               	goto	u8998
 38447  0115CE                     u8990:
 38448  0115CE  0100               	movlb	0	; () banked
 38449  0115D0  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 38450  0115D2                     u8998:
 38451  0115D2  A8C5               	btfss	4037,4,c	;volatile
 38452  0115D4  D002               	goto	u9000
 38453  0115D6  0E01               	movlw	1
 38454  0115D8  D001               	goto	u9006
 38455  0115DA                     u9000:
 38456  0115DA  0E00               	movlw	0
 38457  0115DC                     u9006:
 38458  0115DC  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 38459  0115DE  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 38460  0115E0  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 38461  0115E2  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 38462  0115E4  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 38463  0115E6  0900               	iorlw	0
 38464  0115E8  B4D8               	btfsc	status,2,c
 38465  0115EA  0012               	return	
 38466  0115EC  D7CE               	goto	__i2c_wait_idle
 38467  0115EE                     __end_of__i2c_wait_idle:
 38468                           	opt stack 0
 38469                           tosu	equ	0xFFF
 38470                           tosh	equ	0xFFE
 38471                           tosl	equ	0xFFD
 38472                           pclath	equ	0xFFA
 38473                           tblptru	equ	0xFF8
 38474                           tblptrh	equ	0xFF7
 38475                           tblptrl	equ	0xFF6
 38476                           tablat	equ	0xFF5
 38477                           prodh	equ	0xFF4
 38478                           prodl	equ	0xFF3
 38479                           intcon	equ	0xFF2
 38480                           intcon2	equ	0xFF1
 38481                           intcon3	equ	0xFF0
 38482                           postinc0	equ	0xFEE
 38483                           wreg	equ	0xFE8
 38484                           indf1	equ	0xFE7
 38485                           postinc1	equ	0xFE6
 38486                           postdec1	equ	0xFE5
 38487                           plusw1	equ	0xFE3
 38488                           fsr1h	equ	0xFE2
 38489                           fsr1l	equ	0xFE1
 38490                           indf2	equ	0xFDF
 38491                           postinc2	equ	0xFDE
 38492                           postdec2	equ	0xFDD
 38493                           plusw2	equ	0xFDB
 38494                           fsr2h	equ	0xFDA
 38495                           fsr2l	equ	0xFD9
 38496                           status	equ	0xFD8
 38497                           
 38498 ;; *************** function __i2c_stop *****************
 38499 ;; Defined at:
 38500 ;;		line 72 in file "i2c.c"
 38501 ;; Parameters:    Size  Location     Type
 38502 ;;		None
 38503 ;; Auto vars:     Size  Location     Type
 38504 ;;		None
 38505 ;; Return value:  Size  Location     Type
 38506 ;;                  1    wreg      void 
 38507 ;; Registers used:
 38508 ;;		None
 38509 ;; Tracked objects:
 38510 ;;		On entry : 0/0
 38511 ;;		On exit  : 0/0
 38512 ;;		Unchanged: 0/0
 38513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38518 ;;Total ram usage:        0 bytes
 38519 ;; Hardware stack levels used:    1
 38520 ;; Hardware stack levels required when called:   10
 38521 ;; This function calls:
 38522 ;;		Nothing
 38523 ;; This function is called by:
 38524 ;;		__i2c_write
 38525 ;;		__i2c_read
 38526 ;;		_i2c_display_write_fixed
 38527 ;;		_i2c_adc_read
 38528 ;;		_i2c_display_write
 38529 ;; This function uses a non-reentrant model
 38530 ;;
 38531                           
 38532                           	psect	text175
 38533  012F2A                     __ptext175:
 38534                           	opt stack 0
 38535  012F2A                     __i2c_stop:
 38536                           	opt stack 17
 38537                           
 38538                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 38539                           
 38540                           ; BSR set to: 0
 38541                           ;incstack = 0
 38542  012F2A  84C5               	bsf	4037,2,c	;volatile
 38543  012F2C  A4C5               	btfss	4037,2,c	;volatile
 38544  012F2E  0012               	return	
 38545  012F30  D7FD               	goto	l1510
 38546  012F32                     __end_of__i2c_stop:
 38547                           	opt stack 0
 38548                           tosu	equ	0xFFF
 38549                           tosh	equ	0xFFE
 38550                           tosl	equ	0xFFD
 38551                           pclath	equ	0xFFA
 38552                           tblptru	equ	0xFF8
 38553                           tblptrh	equ	0xFF7
 38554                           tblptrl	equ	0xFF6
 38555                           tablat	equ	0xFF5
 38556                           prodh	equ	0xFF4
 38557                           prodl	equ	0xFF3
 38558                           intcon	equ	0xFF2
 38559                           intcon2	equ	0xFF1
 38560                           intcon3	equ	0xFF0
 38561                           postinc0	equ	0xFEE
 38562                           wreg	equ	0xFE8
 38563                           indf1	equ	0xFE7
 38564                           postinc1	equ	0xFE6
 38565                           postdec1	equ	0xFE5
 38566                           plusw1	equ	0xFE3
 38567                           fsr1h	equ	0xFE2
 38568                           fsr1l	equ	0xFE1
 38569                           indf2	equ	0xFDF
 38570                           postinc2	equ	0xFDE
 38571                           postdec2	equ	0xFDD
 38572                           plusw2	equ	0xFDB
 38573                           fsr2h	equ	0xFDA
 38574                           fsr2l	equ	0xFD9
 38575                           status	equ	0xFD8
 38576                           
 38577 ;; *************** function __i2c_start *****************
 38578 ;; Defined at:
 38579 ;;		line 51 in file "i2c.c"
 38580 ;; Parameters:    Size  Location     Type
 38581 ;;		None
 38582 ;; Auto vars:     Size  Location     Type
 38583 ;;		None
 38584 ;; Return value:  Size  Location     Type
 38585 ;;                  1    wreg      void 
 38586 ;; Registers used:
 38587 ;;		None
 38588 ;; Tracked objects:
 38589 ;;		On entry : 0/0
 38590 ;;		On exit  : 0/0
 38591 ;;		Unchanged: 0/0
 38592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38597 ;;Total ram usage:        0 bytes
 38598 ;; Hardware stack levels used:    1
 38599 ;; Hardware stack levels required when called:   10
 38600 ;; This function calls:
 38601 ;;		Nothing
 38602 ;; This function is called by:
 38603 ;;		__i2c_write
 38604 ;;		__i2c_read
 38605 ;;		_i2c_display_write_fixed
 38606 ;;		_i2c_adc_read
 38607 ;;		_i2c_display_write
 38608 ;; This function uses a non-reentrant model
 38609 ;;
 38610                           
 38611                           	psect	text176
 38612  012F32                     __ptext176:
 38613                           	opt stack 0
 38614  012F32                     __i2c_start:
 38615                           	opt stack 17
 38616                           
 38617                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 38618                           
 38619                           ;incstack = 0
 38620  012F32  80C5               	bsf	4037,0,c	;volatile
 38621  012F34  A0C5               	btfss	4037,0,c	;volatile
 38622  012F36  0012               	return	
 38623  012F38  D7FD               	goto	l1495
 38624  012F3A                     __end_of__i2c_start:
 38625                           	opt stack 0
 38626                           tosu	equ	0xFFF
 38627                           tosh	equ	0xFFE
 38628                           tosl	equ	0xFFD
 38629                           pclath	equ	0xFFA
 38630                           tblptru	equ	0xFF8
 38631                           tblptrh	equ	0xFF7
 38632                           tblptrl	equ	0xFF6
 38633                           tablat	equ	0xFF5
 38634                           prodh	equ	0xFF4
 38635                           prodl	equ	0xFF3
 38636                           intcon	equ	0xFF2
 38637                           intcon2	equ	0xFF1
 38638                           intcon3	equ	0xFF0
 38639                           postinc0	equ	0xFEE
 38640                           wreg	equ	0xFE8
 38641                           indf1	equ	0xFE7
 38642                           postinc1	equ	0xFE6
 38643                           postdec1	equ	0xFE5
 38644                           plusw1	equ	0xFE3
 38645                           fsr1h	equ	0xFE2
 38646                           fsr1l	equ	0xFE1
 38647                           indf2	equ	0xFDF
 38648                           postinc2	equ	0xFDE
 38649                           postdec2	equ	0xFDD
 38650                           plusw2	equ	0xFDB
 38651                           fsr2h	equ	0xFDA
 38652                           fsr2l	equ	0xFD9
 38653                           status	equ	0xFD8
 38654                           
 38655 ;; *************** function __i2c_send *****************
 38656 ;; Defined at:
 38657 ;;		line 58 in file "i2c.c"
 38658 ;; Parameters:    Size  Location     Type
 38659 ;;  dat             1    wreg     unsigned char 
 38660 ;; Auto vars:     Size  Location     Type
 38661 ;;  dat             1    0[BANK0 ] unsigned char 
 38662 ;; Return value:  Size  Location     Type
 38663 ;;                  1    wreg      void 
 38664 ;; Registers used:
 38665 ;;		wreg
 38666 ;; Tracked objects:
 38667 ;;		On entry : 0/0
 38668 ;;		On exit  : 0/0
 38669 ;;		Unchanged: 0/0
 38670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38675 ;;Total ram usage:        1 bytes
 38676 ;; Hardware stack levels used:    1
 38677 ;; Hardware stack levels required when called:   10
 38678 ;; This function calls:
 38679 ;;		Nothing
 38680 ;; This function is called by:
 38681 ;;		__i2c_write
 38682 ;;		__i2c_read
 38683 ;;		_i2c_display_write_fixed
 38684 ;;		_i2c_adc_read
 38685 ;;		_i2c_display_write
 38686 ;; This function uses a non-reentrant model
 38687 ;;
 38688                           
 38689                           	psect	text177
 38690  012F20                     __ptext177:
 38691                           	opt stack 0
 38692  012F20                     __i2c_send:
 38693                           	opt stack 17
 38694                           
 38695                           ;incstack = 0
 38696                           ;__i2c_send@dat stored from wreg
 38697  012F20  0100               	movlb	0	; () banked
 38698  012F22  6F60               	movwf	__i2c_send@dat& (0+255),b
 38699                           
 38700                           ;i2c.c: 60: SSP1BUF = dat;
 38701  012F24  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 38702  012F28  0012               	return		;funcret
 38703  012F2A                     __end_of__i2c_send:
 38704                           	opt stack 0
 38705                           tosu	equ	0xFFF
 38706                           tosh	equ	0xFFE
 38707                           tosl	equ	0xFFD
 38708                           pclath	equ	0xFFA
 38709                           tblptru	equ	0xFF8
 38710                           tblptrh	equ	0xFF7
 38711                           tblptrl	equ	0xFF6
 38712                           tablat	equ	0xFF5
 38713                           prodh	equ	0xFF4
 38714                           prodl	equ	0xFF3
 38715                           intcon	equ	0xFF2
 38716                           intcon2	equ	0xFF1
 38717                           intcon3	equ	0xFF0
 38718                           postinc0	equ	0xFEE
 38719                           wreg	equ	0xFE8
 38720                           indf1	equ	0xFE7
 38721                           postinc1	equ	0xFE6
 38722                           postdec1	equ	0xFE5
 38723                           plusw1	equ	0xFE3
 38724                           fsr1h	equ	0xFE2
 38725                           fsr1l	equ	0xFE1
 38726                           indf2	equ	0xFDF
 38727                           postinc2	equ	0xFDE
 38728                           postdec2	equ	0xFDD
 38729                           plusw2	equ	0xFDB
 38730                           fsr2h	equ	0xFDA
 38731                           fsr2l	equ	0xFD9
 38732                           status	equ	0xFD8
 38733                           
 38734 ;; *************** function __parse_command_long *****************
 38735 ;; Defined at:
 38736 ;;		line 453 in file "app_device_custom_hid.c"
 38737 ;; Parameters:    Size  Location     Type
 38738 ;;  cmd             1    wreg     unsigned char 
 38739 ;;  data            1    3[BANK0 ] unsigned char 
 38740 ;; Auto vars:     Size  Location     Type
 38741 ;;  cmd             1    4[BANK0 ] unsigned char 
 38742 ;; Return value:  Size  Location     Type
 38743 ;;                  1    wreg      void 
 38744 ;; Registers used:
 38745 ;;		wreg, status,2, status,0, cstack
 38746 ;; Tracked objects:
 38747 ;;		On entry : 0/0
 38748 ;;		On exit  : 0/0
 38749 ;;		Unchanged: 0/0
 38750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38751 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38755 ;;Total ram usage:        2 bytes
 38756 ;; Hardware stack levels used:    1
 38757 ;; Hardware stack levels required when called:   12
 38758 ;; This function calls:
 38759 ;;		_buck_remote_change_dutycycle
 38760 ;;		_buck_remote_set_dutycycle
 38761 ;;		_buck_remote_set_enable
 38762 ;;		_buck_remote_set_on
 38763 ;;		_buck_remote_set_synchronous
 38764 ;;		_rtcc_set_day
 38765 ;;		_rtcc_set_hours
 38766 ;;		_rtcc_set_minutes
 38767 ;;		_rtcc_set_month
 38768 ;;		_rtcc_set_seconds
 38769 ;;		_rtcc_set_year
 38770 ;; This function is called by:
 38771 ;;		_APP_DeviceCustomHIDTasks
 38772 ;; This function uses a non-reentrant model
 38773 ;;
 38774                           
 38775                           	psect	text178
 38776  00F1E8                     __ptext178:
 38777                           	opt stack 0
 38778  00F1E8                     __parse_command_long:
 38779                           	opt stack 17
 38780                           
 38781                           ;incstack = 0
 38782                           ;__parse_command_long@cmd stored from wreg
 38783  00F1E8  0100               	movlb	0	; () banked
 38784  00F1EA  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 38785                           
 38786                           ;app_device_custom_hid.c: 455: switch(cmd)
 38787  00F1EC  D043               	goto	l1164
 38788  00F1EE                     
 38789                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 38790  00F1EE  0100               	movlb	0	; () banked
 38791  00F1F0  5163               	movf	__parse_command_long@data& (0+255),w,b
 38792  00F1F2  EC58  F096         	call	_rtcc_set_year
 38793                           
 38794                           ;app_device_custom_hid.c: 459: break;
 38795  00F1F6  0012               	return	
 38796  00F1F8                     
 38797                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 38798  00F1F8  0100               	movlb	0	; () banked
 38799  00F1FA  5163               	movf	__parse_command_long@data& (0+255),w,b
 38800  00F1FC  EC70  F096         	call	_rtcc_set_month
 38801                           
 38802                           ;app_device_custom_hid.c: 462: break;
 38803  00F200  0012               	return	
 38804  00F202                     
 38805                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 38806  00F202  0100               	movlb	0	; () banked
 38807  00F204  5163               	movf	__parse_command_long@data& (0+255),w,b
 38808  00F206  EC94  F096         	call	_rtcc_set_day
 38809                           
 38810                           ;app_device_custom_hid.c: 465: break;
 38811  00F20A  0012               	return	
 38812  00F20C                     
 38813                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 38814  00F20C  0100               	movlb	0	; () banked
 38815  00F20E  5163               	movf	__parse_command_long@data& (0+255),w,b
 38816  00F210  EC88  F096         	call	_rtcc_set_hours
 38817                           
 38818                           ;app_device_custom_hid.c: 468: break;
 38819  00F214  0012               	return	
 38820  00F216                     
 38821                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 38822  00F216  0100               	movlb	0	; () banked
 38823  00F218  5163               	movf	__parse_command_long@data& (0+255),w,b
 38824  00F21A  EC7C  F096         	call	_rtcc_set_minutes
 38825                           
 38826                           ;app_device_custom_hid.c: 471: break;
 38827  00F21E  0012               	return	
 38828  00F220                     
 38829                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 38830  00F220  0100               	movlb	0	; () banked
 38831  00F222  5163               	movf	__parse_command_long@data& (0+255),w,b
 38832  00F224  EC64  F096         	call	_rtcc_set_seconds
 38833                           
 38834                           ;app_device_custom_hid.c: 474: break;
 38835  00F228  0012               	return	
 38836  00F22A                     
 38837                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 38838  00F22A  0E01               	movlw	1
 38839  00F22C  ECFD  F095         	call	_buck_remote_set_enable
 38840                           
 38841                           ;app_device_custom_hid.c: 477: break;
 38842  00F230  0012               	return	
 38843  00F232                     
 38844                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 38845  00F232  0E00               	movlw	0
 38846  00F234  ECFD  F095         	call	_buck_remote_set_enable
 38847                           
 38848                           ;app_device_custom_hid.c: 480: break;
 38849  00F238  0012               	return	
 38850  00F23A                     
 38851                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 38852  00F23A  0E01               	movlw	1
 38853  00F23C  ECAC  F096         	call	_buck_remote_set_on
 38854                           
 38855                           ;app_device_custom_hid.c: 483: break;
 38856  00F240  0012               	return	
 38857  00F242                     
 38858                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 38859  00F242  0E00               	movlw	0
 38860  00F244  ECAC  F096         	call	_buck_remote_set_on
 38861                           
 38862                           ;app_device_custom_hid.c: 486: break;
 38863  00F248  0012               	return	
 38864  00F24A                     
 38865                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 38866  00F24A  0E00               	movlw	0
 38867  00F24C  ECA0  F096         	call	_buck_remote_set_synchronous
 38868                           
 38869                           ;app_device_custom_hid.c: 489: break;
 38870  00F250  0012               	return	
 38871  00F252                     
 38872                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 38873  00F252  0E01               	movlw	1
 38874  00F254  ECA0  F096         	call	_buck_remote_set_synchronous
 38875                           
 38876                           ;app_device_custom_hid.c: 492: break;
 38877  00F258  0012               	return	
 38878  00F25A                     
 38879                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 38880  00F25A  0EFF               	movlw	255
 38881  00F25C  EC8B  F090         	call	_buck_remote_change_dutycycle
 38882                           
 38883                           ;app_device_custom_hid.c: 495: break;
 38884  00F260  0012               	return	
 38885  00F262                     
 38886                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 38887  00F262  0E01               	movlw	1
 38888  00F264  EC8B  F090         	call	_buck_remote_change_dutycycle
 38889                           
 38890                           ;app_device_custom_hid.c: 498: break;
 38891  00F268  0012               	return	
 38892  00F26A                     
 38893                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 38894  00F26A  0100               	movlb	0	; () banked
 38895  00F26C  5163               	movf	__parse_command_long@data& (0+255),w,b
 38896  00F26E  ECE2  F094         	call	_buck_remote_set_dutycycle
 38897                           
 38898                           ;app_device_custom_hid.c: 502: }
 38899                           
 38900                           ;app_device_custom_hid.c: 501: break;
 38901  00F272  0012               	return	
 38902  00F274                     l1164:
 38903  00F274  0100               	movlb	0	; () banked
 38904  00F276  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 38905                           
 38906                           ; Switch size 1, requested type "space"
 38907                           ; Number of cases is 15, Range of values is 64 to 78
 38908                           ; switch strategies available:
 38909                           ; Name         Instructions Cycles
 38910                           ; simple_byte           46    24 (average)
 38911                           ;	Chosen strategy is simple_byte
 38912  00F278  0A40               	xorlw	64	; case 64
 38913  00F27A  B4D8               	btfsc	status,2,c
 38914  00F27C  D7B8               	goto	l1165
 38915  00F27E  0A01               	xorlw	1	; case 65
 38916  00F280  B4D8               	btfsc	status,2,c
 38917  00F282  D7BA               	goto	l1167
 38918  00F284  0A03               	xorlw	3	; case 66
 38919  00F286  B4D8               	btfsc	status,2,c
 38920  00F288  D7BC               	goto	l1168
 38921  00F28A  0A01               	xorlw	1	; case 67
 38922  00F28C  B4D8               	btfsc	status,2,c
 38923  00F28E  D7BE               	goto	l1169
 38924  00F290  0A07               	xorlw	7	; case 68
 38925  00F292  B4D8               	btfsc	status,2,c
 38926  00F294  D7C0               	goto	l1170
 38927  00F296  0A01               	xorlw	1	; case 69
 38928  00F298  B4D8               	btfsc	status,2,c
 38929  00F29A  D7C2               	goto	l1171
 38930  00F29C  0A03               	xorlw	3	; case 70
 38931  00F29E  B4D8               	btfsc	status,2,c
 38932  00F2A0  D7C4               	goto	l1172
 38933  00F2A2  0A01               	xorlw	1	; case 71
 38934  00F2A4  B4D8               	btfsc	status,2,c
 38935  00F2A6  D7C5               	goto	l1173
 38936  00F2A8  0A0F               	xorlw	15	; case 72
 38937  00F2AA  B4D8               	btfsc	status,2,c
 38938  00F2AC  D7C6               	goto	l1174
 38939  00F2AE  0A01               	xorlw	1	; case 73
 38940  00F2B0  B4D8               	btfsc	status,2,c
 38941  00F2B2  D7C7               	goto	l1175
 38942  00F2B4  0A03               	xorlw	3	; case 74
 38943  00F2B6  B4D8               	btfsc	status,2,c
 38944  00F2B8  D7C8               	goto	l1176
 38945  00F2BA  0A01               	xorlw	1	; case 75
 38946  00F2BC  B4D8               	btfsc	status,2,c
 38947  00F2BE  D7C9               	goto	l1177
 38948  00F2C0  0A07               	xorlw	7	; case 76
 38949  00F2C2  B4D8               	btfsc	status,2,c
 38950  00F2C4  D7CA               	goto	l1178
 38951  00F2C6  0A01               	xorlw	1	; case 77
 38952  00F2C8  B4D8               	btfsc	status,2,c
 38953  00F2CA  D7CB               	goto	l1179
 38954  00F2CC  0A03               	xorlw	3	; case 78
 38955  00F2CE  A4D8               	btfss	status,2,c
 38956  00F2D0  0012               	return	
 38957  00F2D2  D7CB               	goto	l1180
 38958  00F2D4                     __end_of__parse_command_long:
 38959                           	opt stack 0
 38960                           tosu	equ	0xFFF
 38961                           tosh	equ	0xFFE
 38962                           tosl	equ	0xFFD
 38963                           pclath	equ	0xFFA
 38964                           tblptru	equ	0xFF8
 38965                           tblptrh	equ	0xFF7
 38966                           tblptrl	equ	0xFF6
 38967                           tablat	equ	0xFF5
 38968                           prodh	equ	0xFF4
 38969                           prodl	equ	0xFF3
 38970                           intcon	equ	0xFF2
 38971                           intcon2	equ	0xFF1
 38972                           intcon3	equ	0xFF0
 38973                           postinc0	equ	0xFEE
 38974                           wreg	equ	0xFE8
 38975                           indf1	equ	0xFE7
 38976                           postinc1	equ	0xFE6
 38977                           postdec1	equ	0xFE5
 38978                           plusw1	equ	0xFE3
 38979                           fsr1h	equ	0xFE2
 38980                           fsr1l	equ	0xFE1
 38981                           indf2	equ	0xFDF
 38982                           postinc2	equ	0xFDE
 38983                           postdec2	equ	0xFDD
 38984                           plusw2	equ	0xFDB
 38985                           fsr2h	equ	0xFDA
 38986                           fsr2l	equ	0xFD9
 38987                           status	equ	0xFD8
 38988                           
 38989 ;; *************** function _rtcc_set_year *****************
 38990 ;; Defined at:
 38991 ;;		line 141 in file "rtcc.c"
 38992 ;; Parameters:    Size  Location     Type
 38993 ;;  year            1    wreg     unsigned char 
 38994 ;; Auto vars:     Size  Location     Type
 38995 ;;  year            1    0[BANK0 ] unsigned char 
 38996 ;; Return value:  Size  Location     Type
 38997 ;;                  1    wreg      void 
 38998 ;; Registers used:
 38999 ;;		wreg, status,2, cstack
 39000 ;; Tracked objects:
 39001 ;;		On entry : 0/0
 39002 ;;		On exit  : 0/0
 39003 ;;		Unchanged: 0/0
 39004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39009 ;;Total ram usage:        1 bytes
 39010 ;; Hardware stack levels used:    1
 39011 ;; Hardware stack levels required when called:   11
 39012 ;; This function calls:
 39013 ;;		__rtcc_write_disable
 39014 ;;		__rtcc_write_enable
 39015 ;; This function is called by:
 39016 ;;		__parse_command_long
 39017 ;;		_rtcc_increment_year
 39018 ;;		_rtcc_decrement_year
 39019 ;;		_rtcc_read_eeprom
 39020 ;; This function uses a non-reentrant model
 39021 ;;
 39022                           
 39023                           	psect	text179
 39024  012CB0                     __ptext179:
 39025                           	opt stack 0
 39026  012CB0                     _rtcc_set_year:
 39027                           	opt stack 16
 39028                           
 39029                           ;incstack = 0
 39030                           ;rtcc_set_year@year stored from wreg
 39031  012CB0  0100               	movlb	0	; () banked
 39032  012CB2  6F60               	movwf	rtcc_set_year@year& (0+255),b
 39033                           
 39034                           ;rtcc.c: 143: _rtcc_write_enable();
 39035  012CB4  ECB8  F096         	call	__rtcc_write_enable	;wreg free
 39036                           
 39037                           ;rtcc.c: 144: RTCCFGbits.RTCPTR1 = 1;
 39038  012CB8  010F               	movlb	15	; () banked
 39039  012CBA  833F               	bsf	63,1,b	;volatile
 39040                           
 39041                           ; BSR set to: 15
 39042                           ;rtcc.c: 145: RTCCFGbits.RTCPTR0 = 1;
 39043  012CBC  813F               	bsf	63,0,b	;volatile
 39044                           
 39045                           ; BSR set to: 15
 39046                           ;rtcc.c: 146: RTCVALL = year;
 39047  012CBE  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 39048                           
 39049                           ;rtcc.c: 147: _rtcc_write_disable();
 39050  012CC2  ECC3  F096         	call	__rtcc_write_disable	;wreg free
 39051  012CC6  0012               	return		;funcret
 39052  012CC8                     __end_of_rtcc_set_year:
 39053                           	opt stack 0
 39054                           tosu	equ	0xFFF
 39055                           tosh	equ	0xFFE
 39056                           tosl	equ	0xFFD
 39057                           pclath	equ	0xFFA
 39058                           tblptru	equ	0xFF8
 39059                           tblptrh	equ	0xFF7
 39060                           tblptrl	equ	0xFF6
 39061                           tablat	equ	0xFF5
 39062                           prodh	equ	0xFF4
 39063                           prodl	equ	0xFF3
 39064                           intcon	equ	0xFF2
 39065                           intcon2	equ	0xFF1
 39066                           intcon3	equ	0xFF0
 39067                           postinc0	equ	0xFEE
 39068                           wreg	equ	0xFE8
 39069                           indf1	equ	0xFE7
 39070                           postinc1	equ	0xFE6
 39071                           postdec1	equ	0xFE5
 39072                           plusw1	equ	0xFE3
 39073                           fsr1h	equ	0xFE2
 39074                           fsr1l	equ	0xFE1
 39075                           indf2	equ	0xFDF
 39076                           postinc2	equ	0xFDE
 39077                           postdec2	equ	0xFDD
 39078                           plusw2	equ	0xFDB
 39079                           fsr2h	equ	0xFDA
 39080                           fsr2l	equ	0xFD9
 39081                           status	equ	0xFD8
 39082                           
 39083 ;; *************** function _rtcc_set_seconds *****************
 39084 ;; Defined at:
 39085 ;;		line 331 in file "rtcc.c"
 39086 ;; Parameters:    Size  Location     Type
 39087 ;;  seconds         1    wreg     unsigned char 
 39088 ;; Auto vars:     Size  Location     Type
 39089 ;;  seconds         1    0[BANK0 ] unsigned char 
 39090 ;; Return value:  Size  Location     Type
 39091 ;;                  1    wreg      void 
 39092 ;; Registers used:
 39093 ;;		wreg, status,2, cstack
 39094 ;; Tracked objects:
 39095 ;;		On entry : 0/0
 39096 ;;		On exit  : 0/0
 39097 ;;		Unchanged: 0/0
 39098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39102 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39103 ;;Total ram usage:        1 bytes
 39104 ;; Hardware stack levels used:    1
 39105 ;; Hardware stack levels required when called:   11
 39106 ;; This function calls:
 39107 ;;		__rtcc_write_disable
 39108 ;;		__rtcc_write_enable
 39109 ;; This function is called by:
 39110 ;;		__parse_command_long
 39111 ;;		_rtcc_increment_seconds
 39112 ;;		_rtcc_decrement_seconds
 39113 ;;		_rtcc_read_eeprom
 39114 ;; This function uses a non-reentrant model
 39115 ;;
 39116                           
 39117                           	psect	text180
 39118  012CC8                     __ptext180:
 39119                           	opt stack 0
 39120  012CC8                     _rtcc_set_seconds:
 39121                           	opt stack 16
 39122                           
 39123                           ;incstack = 0
 39124                           ;rtcc_set_seconds@seconds stored from wreg
 39125  012CC8  0100               	movlb	0	; () banked
 39126  012CCA  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 39127                           
 39128                           ;rtcc.c: 333: _rtcc_write_enable();
 39129  012CCC  ECB8  F096         	call	__rtcc_write_enable	;wreg free
 39130                           
 39131                           ;rtcc.c: 334: RTCCFGbits.RTCPTR1 = 0;
 39132  012CD0  010F               	movlb	15	; () banked
 39133  012CD2  933F               	bcf	63,1,b	;volatile
 39134                           
 39135                           ; BSR set to: 15
 39136                           ;rtcc.c: 335: RTCCFGbits.RTCPTR0 = 0;
 39137  012CD4  913F               	bcf	63,0,b	;volatile
 39138                           
 39139                           ; BSR set to: 15
 39140                           ;rtcc.c: 336: RTCVALL = seconds;
 39141  012CD6  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 39142                           
 39143                           ;rtcc.c: 337: _rtcc_write_disable();
 39144  012CDA  ECC3  F096         	call	__rtcc_write_disable	;wreg free
 39145  012CDE  0012               	return		;funcret
 39146  012CE0                     __end_of_rtcc_set_seconds:
 39147                           	opt stack 0
 39148                           tosu	equ	0xFFF
 39149                           tosh	equ	0xFFE
 39150                           tosl	equ	0xFFD
 39151                           pclath	equ	0xFFA
 39152                           tblptru	equ	0xFF8
 39153                           tblptrh	equ	0xFF7
 39154                           tblptrl	equ	0xFF6
 39155                           tablat	equ	0xFF5
 39156                           prodh	equ	0xFF4
 39157                           prodl	equ	0xFF3
 39158                           intcon	equ	0xFF2
 39159                           intcon2	equ	0xFF1
 39160                           intcon3	equ	0xFF0
 39161                           postinc0	equ	0xFEE
 39162                           wreg	equ	0xFE8
 39163                           indf1	equ	0xFE7
 39164                           postinc1	equ	0xFE6
 39165                           postdec1	equ	0xFE5
 39166                           plusw1	equ	0xFE3
 39167                           fsr1h	equ	0xFE2
 39168                           fsr1l	equ	0xFE1
 39169                           indf2	equ	0xFDF
 39170                           postinc2	equ	0xFDE
 39171                           postdec2	equ	0xFDD
 39172                           plusw2	equ	0xFDB
 39173                           fsr2h	equ	0xFDA
 39174                           fsr2l	equ	0xFD9
 39175                           status	equ	0xFD8
 39176                           
 39177 ;; *************** function _rtcc_set_month *****************
 39178 ;; Defined at:
 39179 ;;		line 179 in file "rtcc.c"
 39180 ;; Parameters:    Size  Location     Type
 39181 ;;  month           1    wreg     unsigned char 
 39182 ;; Auto vars:     Size  Location     Type
 39183 ;;  month           1    0[BANK0 ] unsigned char 
 39184 ;; Return value:  Size  Location     Type
 39185 ;;                  1    wreg      void 
 39186 ;; Registers used:
 39187 ;;		wreg, status,2, cstack
 39188 ;; Tracked objects:
 39189 ;;		On entry : 0/0
 39190 ;;		On exit  : 0/0
 39191 ;;		Unchanged: 0/0
 39192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39196 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39197 ;;Total ram usage:        1 bytes
 39198 ;; Hardware stack levels used:    1
 39199 ;; Hardware stack levels required when called:   11
 39200 ;; This function calls:
 39201 ;;		__rtcc_write_disable
 39202 ;;		__rtcc_write_enable
 39203 ;; This function is called by:
 39204 ;;		__parse_command_long
 39205 ;;		_rtcc_increment_month
 39206 ;;		_rtcc_decrement_month
 39207 ;;		_rtcc_read_eeprom
 39208 ;; This function uses a non-reentrant model
 39209 ;;
 39210                           
 39211                           	psect	text181
 39212  012CE0                     __ptext181:
 39213                           	opt stack 0
 39214  012CE0                     _rtcc_set_month:
 39215                           	opt stack 16
 39216                           
 39217                           ;incstack = 0
 39218                           ;rtcc_set_month@month stored from wreg
 39219  012CE0  0100               	movlb	0	; () banked
 39220  012CE2  6F60               	movwf	rtcc_set_month@month& (0+255),b
 39221                           
 39222                           ;rtcc.c: 181: _rtcc_write_enable();
 39223  012CE4  ECB8  F096         	call	__rtcc_write_enable	;wreg free
 39224                           
 39225                           ;rtcc.c: 182: RTCCFGbits.RTCPTR1 = 1;
 39226  012CE8  010F               	movlb	15	; () banked
 39227  012CEA  833F               	bsf	63,1,b	;volatile
 39228                           
 39229                           ; BSR set to: 15
 39230                           ;rtcc.c: 183: RTCCFGbits.RTCPTR0 = 0;
 39231  012CEC  913F               	bcf	63,0,b	;volatile
 39232                           
 39233                           ; BSR set to: 15
 39234                           ;rtcc.c: 184: RTCVALH = month;
 39235  012CEE  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 39236                           
 39237                           ;rtcc.c: 185: _rtcc_write_disable();
 39238  012CF2  ECC3  F096         	call	__rtcc_write_disable	;wreg free
 39239  012CF6  0012               	return		;funcret
 39240  012CF8                     __end_of_rtcc_set_month:
 39241                           	opt stack 0
 39242                           tosu	equ	0xFFF
 39243                           tosh	equ	0xFFE
 39244                           tosl	equ	0xFFD
 39245                           pclath	equ	0xFFA
 39246                           tblptru	equ	0xFF8
 39247                           tblptrh	equ	0xFF7
 39248                           tblptrl	equ	0xFF6
 39249                           tablat	equ	0xFF5
 39250                           prodh	equ	0xFF4
 39251                           prodl	equ	0xFF3
 39252                           intcon	equ	0xFF2
 39253                           intcon2	equ	0xFF1
 39254                           intcon3	equ	0xFF0
 39255                           postinc0	equ	0xFEE
 39256                           wreg	equ	0xFE8
 39257                           indf1	equ	0xFE7
 39258                           postinc1	equ	0xFE6
 39259                           postdec1	equ	0xFE5
 39260                           plusw1	equ	0xFE3
 39261                           fsr1h	equ	0xFE2
 39262                           fsr1l	equ	0xFE1
 39263                           indf2	equ	0xFDF
 39264                           postinc2	equ	0xFDE
 39265                           postdec2	equ	0xFDD
 39266                           plusw2	equ	0xFDB
 39267                           fsr2h	equ	0xFDA
 39268                           fsr2l	equ	0xFD9
 39269                           status	equ	0xFD8
 39270                           
 39271 ;; *************** function _rtcc_set_minutes *****************
 39272 ;; Defined at:
 39273 ;;		line 293 in file "rtcc.c"
 39274 ;; Parameters:    Size  Location     Type
 39275 ;;  minutes         1    wreg     unsigned char 
 39276 ;; Auto vars:     Size  Location     Type
 39277 ;;  minutes         1    0[BANK0 ] unsigned char 
 39278 ;; Return value:  Size  Location     Type
 39279 ;;                  1    wreg      void 
 39280 ;; Registers used:
 39281 ;;		wreg, status,2, cstack
 39282 ;; Tracked objects:
 39283 ;;		On entry : 0/0
 39284 ;;		On exit  : 0/0
 39285 ;;		Unchanged: 0/0
 39286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39291 ;;Total ram usage:        1 bytes
 39292 ;; Hardware stack levels used:    1
 39293 ;; Hardware stack levels required when called:   11
 39294 ;; This function calls:
 39295 ;;		__rtcc_write_disable
 39296 ;;		__rtcc_write_enable
 39297 ;; This function is called by:
 39298 ;;		__parse_command_long
 39299 ;;		_rtcc_increment_minutes
 39300 ;;		_rtcc_decrement_minutes
 39301 ;;		_rtcc_read_eeprom
 39302 ;; This function uses a non-reentrant model
 39303 ;;
 39304                           
 39305                           	psect	text182
 39306  012CF8                     __ptext182:
 39307                           	opt stack 0
 39308  012CF8                     _rtcc_set_minutes:
 39309                           	opt stack 16
 39310                           
 39311                           ;incstack = 0
 39312                           ;rtcc_set_minutes@minutes stored from wreg
 39313  012CF8  0100               	movlb	0	; () banked
 39314  012CFA  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 39315                           
 39316                           ;rtcc.c: 295: _rtcc_write_enable();
 39317  012CFC  ECB8  F096         	call	__rtcc_write_enable	;wreg free
 39318                           
 39319                           ;rtcc.c: 296: RTCCFGbits.RTCPTR1 = 0;
 39320  012D00  010F               	movlb	15	; () banked
 39321  012D02  933F               	bcf	63,1,b	;volatile
 39322                           
 39323                           ; BSR set to: 15
 39324                           ;rtcc.c: 297: RTCCFGbits.RTCPTR0 = 0;
 39325  012D04  913F               	bcf	63,0,b	;volatile
 39326                           
 39327                           ; BSR set to: 15
 39328                           ;rtcc.c: 298: RTCVALH = minutes;
 39329  012D06  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 39330                           
 39331                           ;rtcc.c: 299: _rtcc_write_disable();
 39332  012D0A  ECC3  F096         	call	__rtcc_write_disable	;wreg free
 39333  012D0E  0012               	return		;funcret
 39334  012D10                     __end_of_rtcc_set_minutes:
 39335                           	opt stack 0
 39336                           tosu	equ	0xFFF
 39337                           tosh	equ	0xFFE
 39338                           tosl	equ	0xFFD
 39339                           pclath	equ	0xFFA
 39340                           tblptru	equ	0xFF8
 39341                           tblptrh	equ	0xFF7
 39342                           tblptrl	equ	0xFF6
 39343                           tablat	equ	0xFF5
 39344                           prodh	equ	0xFF4
 39345                           prodl	equ	0xFF3
 39346                           intcon	equ	0xFF2
 39347                           intcon2	equ	0xFF1
 39348                           intcon3	equ	0xFF0
 39349                           postinc0	equ	0xFEE
 39350                           wreg	equ	0xFE8
 39351                           indf1	equ	0xFE7
 39352                           postinc1	equ	0xFE6
 39353                           postdec1	equ	0xFE5
 39354                           plusw1	equ	0xFE3
 39355                           fsr1h	equ	0xFE2
 39356                           fsr1l	equ	0xFE1
 39357                           indf2	equ	0xFDF
 39358                           postinc2	equ	0xFDE
 39359                           postdec2	equ	0xFDD
 39360                           plusw2	equ	0xFDB
 39361                           fsr2h	equ	0xFDA
 39362                           fsr2l	equ	0xFD9
 39363                           status	equ	0xFD8
 39364                           
 39365 ;; *************** function _rtcc_set_hours *****************
 39366 ;; Defined at:
 39367 ;;		line 255 in file "rtcc.c"
 39368 ;; Parameters:    Size  Location     Type
 39369 ;;  hours           1    wreg     unsigned char 
 39370 ;; Auto vars:     Size  Location     Type
 39371 ;;  hours           1    0[BANK0 ] unsigned char 
 39372 ;; Return value:  Size  Location     Type
 39373 ;;                  1    wreg      void 
 39374 ;; Registers used:
 39375 ;;		wreg, status,2, cstack
 39376 ;; Tracked objects:
 39377 ;;		On entry : 0/0
 39378 ;;		On exit  : 0/0
 39379 ;;		Unchanged: 0/0
 39380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39385 ;;Total ram usage:        1 bytes
 39386 ;; Hardware stack levels used:    1
 39387 ;; Hardware stack levels required when called:   11
 39388 ;; This function calls:
 39389 ;;		__rtcc_write_disable
 39390 ;;		__rtcc_write_enable
 39391 ;; This function is called by:
 39392 ;;		__parse_command_long
 39393 ;;		_rtcc_increment_hours
 39394 ;;		_rtcc_decrement_hours
 39395 ;;		_rtcc_read_eeprom
 39396 ;; This function uses a non-reentrant model
 39397 ;;
 39398                           
 39399                           	psect	text183
 39400  012D10                     __ptext183:
 39401                           	opt stack 0
 39402  012D10                     _rtcc_set_hours:
 39403                           	opt stack 16
 39404                           
 39405                           ;incstack = 0
 39406                           ;rtcc_set_hours@hours stored from wreg
 39407  012D10  0100               	movlb	0	; () banked
 39408  012D12  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 39409                           
 39410                           ;rtcc.c: 257: _rtcc_write_enable();
 39411  012D14  ECB8  F096         	call	__rtcc_write_enable	;wreg free
 39412                           
 39413                           ;rtcc.c: 258: RTCCFGbits.RTCPTR1 = 0;
 39414  012D18  010F               	movlb	15	; () banked
 39415  012D1A  933F               	bcf	63,1,b	;volatile
 39416                           
 39417                           ; BSR set to: 15
 39418                           ;rtcc.c: 259: RTCCFGbits.RTCPTR0 = 1;
 39419  012D1C  813F               	bsf	63,0,b	;volatile
 39420                           
 39421                           ; BSR set to: 15
 39422                           ;rtcc.c: 260: RTCVALL = hours;
 39423  012D1E  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 39424                           
 39425                           ;rtcc.c: 261: _rtcc_write_disable();
 39426  012D22  ECC3  F096         	call	__rtcc_write_disable	;wreg free
 39427  012D26  0012               	return		;funcret
 39428  012D28                     __end_of_rtcc_set_hours:
 39429                           	opt stack 0
 39430                           tosu	equ	0xFFF
 39431                           tosh	equ	0xFFE
 39432                           tosl	equ	0xFFD
 39433                           pclath	equ	0xFFA
 39434                           tblptru	equ	0xFF8
 39435                           tblptrh	equ	0xFF7
 39436                           tblptrl	equ	0xFF6
 39437                           tablat	equ	0xFF5
 39438                           prodh	equ	0xFF4
 39439                           prodl	equ	0xFF3
 39440                           intcon	equ	0xFF2
 39441                           intcon2	equ	0xFF1
 39442                           intcon3	equ	0xFF0
 39443                           postinc0	equ	0xFEE
 39444                           wreg	equ	0xFE8
 39445                           indf1	equ	0xFE7
 39446                           postinc1	equ	0xFE6
 39447                           postdec1	equ	0xFE5
 39448                           plusw1	equ	0xFE3
 39449                           fsr1h	equ	0xFE2
 39450                           fsr1l	equ	0xFE1
 39451                           indf2	equ	0xFDF
 39452                           postinc2	equ	0xFDE
 39453                           postdec2	equ	0xFDD
 39454                           plusw2	equ	0xFDB
 39455                           fsr2h	equ	0xFDA
 39456                           fsr2l	equ	0xFD9
 39457                           status	equ	0xFD8
 39458                           
 39459 ;; *************** function _rtcc_set_day *****************
 39460 ;; Defined at:
 39461 ;;		line 217 in file "rtcc.c"
 39462 ;; Parameters:    Size  Location     Type
 39463 ;;  day             1    wreg     unsigned char 
 39464 ;; Auto vars:     Size  Location     Type
 39465 ;;  day             1    0[BANK0 ] unsigned char 
 39466 ;; Return value:  Size  Location     Type
 39467 ;;                  1    wreg      void 
 39468 ;; Registers used:
 39469 ;;		wreg, status,2, cstack
 39470 ;; Tracked objects:
 39471 ;;		On entry : 0/0
 39472 ;;		On exit  : 0/0
 39473 ;;		Unchanged: 0/0
 39474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39479 ;;Total ram usage:        1 bytes
 39480 ;; Hardware stack levels used:    1
 39481 ;; Hardware stack levels required when called:   11
 39482 ;; This function calls:
 39483 ;;		__rtcc_write_disable
 39484 ;;		__rtcc_write_enable
 39485 ;; This function is called by:
 39486 ;;		__parse_command_long
 39487 ;;		_rtcc_correct_day
 39488 ;;		_rtcc_increment_day
 39489 ;;		_rtcc_decrement_day
 39490 ;;		_rtcc_read_eeprom
 39491 ;; This function uses a non-reentrant model
 39492 ;;
 39493                           
 39494                           	psect	text184
 39495  012D28                     __ptext184:
 39496                           	opt stack 0
 39497  012D28                     _rtcc_set_day:
 39498                           	opt stack 16
 39499                           
 39500                           ;incstack = 0
 39501                           ;rtcc_set_day@day stored from wreg
 39502  012D28  0100               	movlb	0	; () banked
 39503  012D2A  6F60               	movwf	rtcc_set_day@day& (0+255),b
 39504                           
 39505                           ;rtcc.c: 219: _rtcc_write_enable();
 39506  012D2C  ECB8  F096         	call	__rtcc_write_enable	;wreg free
 39507                           
 39508                           ;rtcc.c: 220: RTCCFGbits.RTCPTR1 = 1;
 39509  012D30  010F               	movlb	15	; () banked
 39510  012D32  833F               	bsf	63,1,b	;volatile
 39511                           
 39512                           ; BSR set to: 15
 39513                           ;rtcc.c: 221: RTCCFGbits.RTCPTR0 = 0;
 39514  012D34  913F               	bcf	63,0,b	;volatile
 39515                           
 39516                           ; BSR set to: 15
 39517                           ;rtcc.c: 222: RTCVALL = day;
 39518  012D36  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 39519                           
 39520                           ;rtcc.c: 223: _rtcc_write_disable();
 39521  012D3A  ECC3  F096         	call	__rtcc_write_disable	;wreg free
 39522  012D3E  0012               	return		;funcret
 39523  012D40                     __end_of_rtcc_set_day:
 39524                           	opt stack 0
 39525                           tosu	equ	0xFFF
 39526                           tosh	equ	0xFFE
 39527                           tosl	equ	0xFFD
 39528                           pclath	equ	0xFFA
 39529                           tblptru	equ	0xFF8
 39530                           tblptrh	equ	0xFF7
 39531                           tblptrl	equ	0xFF6
 39532                           tablat	equ	0xFF5
 39533                           prodh	equ	0xFF4
 39534                           prodl	equ	0xFF3
 39535                           intcon	equ	0xFF2
 39536                           intcon2	equ	0xFF1
 39537                           intcon3	equ	0xFF0
 39538                           postinc0	equ	0xFEE
 39539                           wreg	equ	0xFE8
 39540                           indf1	equ	0xFE7
 39541                           postinc1	equ	0xFE6
 39542                           postdec1	equ	0xFE5
 39543                           plusw1	equ	0xFE3
 39544                           fsr1h	equ	0xFE2
 39545                           fsr1l	equ	0xFE1
 39546                           indf2	equ	0xFDF
 39547                           postinc2	equ	0xFDE
 39548                           postdec2	equ	0xFDD
 39549                           plusw2	equ	0xFDB
 39550                           fsr2h	equ	0xFDA
 39551                           fsr2l	equ	0xFD9
 39552                           status	equ	0xFD8
 39553                           
 39554 ;; *************** function __rtcc_write_enable *****************
 39555 ;; Defined at:
 39556 ;;		line 14 in file "rtcc.c"
 39557 ;; Parameters:    Size  Location     Type
 39558 ;;		None
 39559 ;; Auto vars:     Size  Location     Type
 39560 ;;		None
 39561 ;; Return value:  Size  Location     Type
 39562 ;;                  1    wreg      void 
 39563 ;; Registers used:
 39564 ;;		wreg, status,2
 39565 ;; Tracked objects:
 39566 ;;		On entry : 0/0
 39567 ;;		On exit  : 0/0
 39568 ;;		Unchanged: 0/0
 39569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39574 ;;Total ram usage:        0 bytes
 39575 ;; Hardware stack levels used:    1
 39576 ;; Hardware stack levels required when called:   10
 39577 ;; This function calls:
 39578 ;;		Nothing
 39579 ;; This function is called by:
 39580 ;;		_rtcc_set_year
 39581 ;;		_rtcc_set_month
 39582 ;;		_rtcc_set_day
 39583 ;;		_rtcc_set_hours
 39584 ;;		_rtcc_set_minutes
 39585 ;;		_rtcc_set_seconds
 39586 ;; This function uses a non-reentrant model
 39587 ;;
 39588                           
 39589                           	psect	text185
 39590  012D70                     __ptext185:
 39591                           	opt stack 0
 39592  012D70                     __rtcc_write_enable:
 39593                           	opt stack 16
 39594                           
 39595                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 39596                           
 39597                           ;incstack = 0
 39598  012D70  D006               	goto	l2243
 39599  012D72                     
 39600                           ;rtcc.c: 17: {
 39601                           ;rtcc.c: 18: EECON2 = 0x55;
 39602  012D72  0E55               	movlw	85
 39603  012D74  6EA7               	movwf	4007,c	;volsfr
 39604                           
 39605                           ;rtcc.c: 19: EECON2 = 0xAA;
 39606  012D76  0EAA               	movlw	170
 39607  012D78  6EA7               	movwf	4007,c	;volsfr
 39608                           
 39609                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 39610  012D7A  010F               	movlb	15	; () banked
 39611  012D7C  8B3F               	bsf	63,5,b	;volatile
 39612  012D7E                     l2243:
 39613                           
 39614                           ; BSR set to: 15
 39615  012D7E  010F               	movlb	15	; () banked
 39616  012D80  BB3F               	btfsc	63,5,b	;volatile
 39617  012D82  0012               	return	
 39618  012D84  D7F6               	goto	l2244
 39619  012D86                     __end_of__rtcc_write_enable:
 39620                           	opt stack 0
 39621                           tosu	equ	0xFFF
 39622                           tosh	equ	0xFFE
 39623                           tosl	equ	0xFFD
 39624                           pclath	equ	0xFFA
 39625                           tblptru	equ	0xFF8
 39626                           tblptrh	equ	0xFF7
 39627                           tblptrl	equ	0xFF6
 39628                           tablat	equ	0xFF5
 39629                           prodh	equ	0xFF4
 39630                           prodl	equ	0xFF3
 39631                           intcon	equ	0xFF2
 39632                           intcon2	equ	0xFF1
 39633                           intcon3	equ	0xFF0
 39634                           postinc0	equ	0xFEE
 39635                           wreg	equ	0xFE8
 39636                           indf1	equ	0xFE7
 39637                           postinc1	equ	0xFE6
 39638                           postdec1	equ	0xFE5
 39639                           plusw1	equ	0xFE3
 39640                           fsr1h	equ	0xFE2
 39641                           fsr1l	equ	0xFE1
 39642                           indf2	equ	0xFDF
 39643                           postinc2	equ	0xFDE
 39644                           postdec2	equ	0xFDD
 39645                           plusw2	equ	0xFDB
 39646                           fsr2h	equ	0xFDA
 39647                           fsr2l	equ	0xFD9
 39648                           status	equ	0xFD8
 39649                           
 39650 ;; *************** function __rtcc_write_disable *****************
 39651 ;; Defined at:
 39652 ;;		line 24 in file "rtcc.c"
 39653 ;; Parameters:    Size  Location     Type
 39654 ;;		None
 39655 ;; Auto vars:     Size  Location     Type
 39656 ;;		None
 39657 ;; Return value:  Size  Location     Type
 39658 ;;                  1    wreg      void 
 39659 ;; Registers used:
 39660 ;;		wreg, status,2
 39661 ;; Tracked objects:
 39662 ;;		On entry : 0/0
 39663 ;;		On exit  : 0/0
 39664 ;;		Unchanged: 0/0
 39665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39670 ;;Total ram usage:        0 bytes
 39671 ;; Hardware stack levels used:    1
 39672 ;; Hardware stack levels required when called:   10
 39673 ;; This function calls:
 39674 ;;		Nothing
 39675 ;; This function is called by:
 39676 ;;		_rtcc_set_year
 39677 ;;		_rtcc_set_month
 39678 ;;		_rtcc_set_day
 39679 ;;		_rtcc_set_hours
 39680 ;;		_rtcc_set_minutes
 39681 ;;		_rtcc_set_seconds
 39682 ;; This function uses a non-reentrant model
 39683 ;;
 39684                           
 39685                           	psect	text186
 39686  012D86                     __ptext186:
 39687                           	opt stack 0
 39688  012D86                     __rtcc_write_disable:
 39689                           	opt stack 16
 39690                           
 39691                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 39692                           
 39693                           ; BSR set to: 15
 39694                           ;incstack = 0
 39695  012D86  D006               	goto	l2249
 39696  012D88                     
 39697                           ;rtcc.c: 27: {
 39698                           ;rtcc.c: 28: EECON2 = 0x55;
 39699  012D88  0E55               	movlw	85
 39700  012D8A  6EA7               	movwf	4007,c	;volsfr
 39701                           
 39702                           ;rtcc.c: 29: EECON2 = 0xAA;
 39703  012D8C  0EAA               	movlw	170
 39704  012D8E  6EA7               	movwf	4007,c	;volsfr
 39705                           
 39706                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 39707  012D90  010F               	movlb	15	; () banked
 39708  012D92  9B3F               	bcf	63,5,b	;volatile
 39709  012D94                     l2249:
 39710                           
 39711                           ; BSR set to: 15
 39712  012D94  010F               	movlb	15	; () banked
 39713  012D96  AB3F               	btfss	63,5,b	;volatile
 39714  012D98  0012               	return	
 39715  012D9A  D7F6               	goto	l2250
 39716  012D9C                     __end_of__rtcc_write_disable:
 39717                           	opt stack 0
 39718                           tosu	equ	0xFFF
 39719                           tosh	equ	0xFFE
 39720                           tosl	equ	0xFFD
 39721                           pclath	equ	0xFFA
 39722                           tblptru	equ	0xFF8
 39723                           tblptrh	equ	0xFF7
 39724                           tblptrl	equ	0xFF6
 39725                           tablat	equ	0xFF5
 39726                           prodh	equ	0xFF4
 39727                           prodl	equ	0xFF3
 39728                           intcon	equ	0xFF2
 39729                           intcon2	equ	0xFF1
 39730                           intcon3	equ	0xFF0
 39731                           postinc0	equ	0xFEE
 39732                           wreg	equ	0xFE8
 39733                           indf1	equ	0xFE7
 39734                           postinc1	equ	0xFE6
 39735                           postdec1	equ	0xFE5
 39736                           plusw1	equ	0xFE3
 39737                           fsr1h	equ	0xFE2
 39738                           fsr1l	equ	0xFE1
 39739                           indf2	equ	0xFDF
 39740                           postinc2	equ	0xFDE
 39741                           postdec2	equ	0xFDD
 39742                           plusw2	equ	0xFDB
 39743                           fsr2h	equ	0xFDA
 39744                           fsr2l	equ	0xFD9
 39745                           status	equ	0xFD8
 39746                           
 39747 ;; *************** function _buck_remote_set_synchronous *****************
 39748 ;; Defined at:
 39749 ;;		line 621 in file "buck.c"
 39750 ;; Parameters:    Size  Location     Type
 39751 ;;  synchronous     1    wreg     unsigned char 
 39752 ;; Auto vars:     Size  Location     Type
 39753 ;;  synchronous     1    0[BANK0 ] unsigned char 
 39754 ;; Return value:  Size  Location     Type
 39755 ;;                  1    wreg      void 
 39756 ;; Registers used:
 39757 ;;		wreg, status,2
 39758 ;; Tracked objects:
 39759 ;;		On entry : 0/0
 39760 ;;		On exit  : 0/0
 39761 ;;		Unchanged: 0/0
 39762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39766 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39767 ;;Total ram usage:        1 bytes
 39768 ;; Hardware stack levels used:    1
 39769 ;; Hardware stack levels required when called:   10
 39770 ;; This function calls:
 39771 ;;		Nothing
 39772 ;; This function is called by:
 39773 ;;		__parse_command_long
 39774 ;; This function uses a non-reentrant model
 39775 ;;
 39776                           
 39777                           	psect	text187
 39778  012D40                     __ptext187:
 39779                           	opt stack 0
 39780  012D40                     _buck_remote_set_synchronous:
 39781                           	opt stack 18
 39782                           
 39783                           ; BSR set to: 15
 39784                           ;incstack = 0
 39785                           ;buck_remote_set_synchronous@synchronous stored from wreg
 39786  012D40  0100               	movlb	0	; () banked
 39787  012D42  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 39788                           
 39789                           ;buck.c: 623: if(synchronous)
 39790  012D44  0100               	movlb	0	; () banked
 39791  012D46  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 39792  012D48  B4D8               	btfsc	status,2,c
 39793  012D4A  D003               	goto	l2630
 39794                           
 39795                           ; BSR set to: 0
 39796                           ;buck.c: 624: buck_remote_synchronous = 1;
 39797  012D4C  0E01               	movlw	1
 39798  012D4E  6E4D               	movwf	_buck_remote_synchronous,c
 39799  012D50  0012               	return	
 39800  012D52                     l2630:
 39801                           
 39802                           ; BSR set to: 0
 39803                           ;buck.c: 625: else
 39804                           ;buck.c: 626: buck_remote_synchronous = 0;
 39805                           
 39806                           ; BSR set to: 0
 39807  012D52  0E00               	movlw	0
 39808  012D54  6E4D               	movwf	_buck_remote_synchronous,c
 39809  012D56  0012               	return	
 39810  012D58                     __end_of_buck_remote_set_synchronous:
 39811                           	opt stack 0
 39812                           tosu	equ	0xFFF
 39813                           tosh	equ	0xFFE
 39814                           tosl	equ	0xFFD
 39815                           pclath	equ	0xFFA
 39816                           tblptru	equ	0xFF8
 39817                           tblptrh	equ	0xFF7
 39818                           tblptrl	equ	0xFF6
 39819                           tablat	equ	0xFF5
 39820                           prodh	equ	0xFF4
 39821                           prodl	equ	0xFF3
 39822                           intcon	equ	0xFF2
 39823                           intcon2	equ	0xFF1
 39824                           intcon3	equ	0xFF0
 39825                           postinc0	equ	0xFEE
 39826                           wreg	equ	0xFE8
 39827                           indf1	equ	0xFE7
 39828                           postinc1	equ	0xFE6
 39829                           postdec1	equ	0xFE5
 39830                           plusw1	equ	0xFE3
 39831                           fsr1h	equ	0xFE2
 39832                           fsr1l	equ	0xFE1
 39833                           indf2	equ	0xFDF
 39834                           postinc2	equ	0xFDE
 39835                           postdec2	equ	0xFDD
 39836                           plusw2	equ	0xFDB
 39837                           fsr2h	equ	0xFDA
 39838                           fsr2l	equ	0xFD9
 39839                           status	equ	0xFD8
 39840                           
 39841 ;; *************** function _buck_remote_set_on *****************
 39842 ;; Defined at:
 39843 ;;		line 613 in file "buck.c"
 39844 ;; Parameters:    Size  Location     Type
 39845 ;;  on              1    wreg     unsigned char 
 39846 ;; Auto vars:     Size  Location     Type
 39847 ;;  on              1    0[BANK0 ] unsigned char 
 39848 ;; Return value:  Size  Location     Type
 39849 ;;                  1    wreg      void 
 39850 ;; Registers used:
 39851 ;;		wreg, status,2
 39852 ;; Tracked objects:
 39853 ;;		On entry : 0/0
 39854 ;;		On exit  : 0/0
 39855 ;;		Unchanged: 0/0
 39856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39861 ;;Total ram usage:        1 bytes
 39862 ;; Hardware stack levels used:    1
 39863 ;; Hardware stack levels required when called:   10
 39864 ;; This function calls:
 39865 ;;		Nothing
 39866 ;; This function is called by:
 39867 ;;		__parse_command_long
 39868 ;; This function uses a non-reentrant model
 39869 ;;
 39870                           
 39871                           	psect	text188
 39872  012D58                     __ptext188:
 39873                           	opt stack 0
 39874  012D58                     _buck_remote_set_on:
 39875                           	opt stack 18
 39876                           
 39877                           ; BSR set to: 0
 39878                           ;incstack = 0
 39879                           ;buck_remote_set_on@on stored from wreg
 39880  012D58  0100               	movlb	0	; () banked
 39881  012D5A  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 39882                           
 39883                           ;buck.c: 615: if(on)
 39884  012D5C  0100               	movlb	0	; () banked
 39885  012D5E  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 39886  012D60  B4D8               	btfsc	status,2,c
 39887  012D62  D003               	goto	l2625
 39888                           
 39889                           ; BSR set to: 0
 39890                           ;buck.c: 616: buck_remote_on = 1;
 39891  012D64  0E01               	movlw	1
 39892  012D66  6E4E               	movwf	_buck_remote_on,c
 39893  012D68  0012               	return	
 39894  012D6A                     l2625:
 39895                           
 39896                           ; BSR set to: 0
 39897                           ;buck.c: 617: else
 39898                           ;buck.c: 618: buck_remote_on = 0;
 39899                           
 39900                           ; BSR set to: 0
 39901  012D6A  0E00               	movlw	0
 39902  012D6C  6E4E               	movwf	_buck_remote_on,c
 39903  012D6E  0012               	return	
 39904  012D70                     __end_of_buck_remote_set_on:
 39905                           	opt stack 0
 39906                           tosu	equ	0xFFF
 39907                           tosh	equ	0xFFE
 39908                           tosl	equ	0xFFD
 39909                           pclath	equ	0xFFA
 39910                           tblptru	equ	0xFF8
 39911                           tblptrh	equ	0xFF7
 39912                           tblptrl	equ	0xFF6
 39913                           tablat	equ	0xFF5
 39914                           prodh	equ	0xFF4
 39915                           prodl	equ	0xFF3
 39916                           intcon	equ	0xFF2
 39917                           intcon2	equ	0xFF1
 39918                           intcon3	equ	0xFF0
 39919                           postinc0	equ	0xFEE
 39920                           wreg	equ	0xFE8
 39921                           indf1	equ	0xFE7
 39922                           postinc1	equ	0xFE6
 39923                           postdec1	equ	0xFE5
 39924                           plusw1	equ	0xFE3
 39925                           fsr1h	equ	0xFE2
 39926                           fsr1l	equ	0xFE1
 39927                           indf2	equ	0xFDF
 39928                           postinc2	equ	0xFDE
 39929                           postdec2	equ	0xFDD
 39930                           plusw2	equ	0xFDB
 39931                           fsr2h	equ	0xFDA
 39932                           fsr2l	equ	0xFD9
 39933                           status	equ	0xFD8
 39934                           
 39935 ;; *************** function _buck_remote_set_enable *****************
 39936 ;; Defined at:
 39937 ;;		line 605 in file "buck.c"
 39938 ;; Parameters:    Size  Location     Type
 39939 ;;  remote          1    wreg     unsigned char 
 39940 ;; Auto vars:     Size  Location     Type
 39941 ;;  remote          1    0[BANK0 ] unsigned char 
 39942 ;; Return value:  Size  Location     Type
 39943 ;;                  1    wreg      void 
 39944 ;; Registers used:
 39945 ;;		wreg, status,2
 39946 ;; Tracked objects:
 39947 ;;		On entry : 0/0
 39948 ;;		On exit  : 0/0
 39949 ;;		Unchanged: 0/0
 39950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39955 ;;Total ram usage:        1 bytes
 39956 ;; Hardware stack levels used:    1
 39957 ;; Hardware stack levels required when called:   10
 39958 ;; This function calls:
 39959 ;;		Nothing
 39960 ;; This function is called by:
 39961 ;;		__parse_command_long
 39962 ;; This function uses a non-reentrant model
 39963 ;;
 39964                           
 39965                           	psect	text189
 39966  012BFA                     __ptext189:
 39967                           	opt stack 0
 39968  012BFA                     _buck_remote_set_enable:
 39969                           	opt stack 18
 39970                           
 39971                           ; BSR set to: 0
 39972                           ;incstack = 0
 39973                           ;buck_remote_set_enable@remote stored from wreg
 39974  012BFA  0100               	movlb	0	; () banked
 39975  012BFC  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 39976                           
 39977                           ;buck.c: 607: if(remote)
 39978  012BFE  0100               	movlb	0	; () banked
 39979  012C00  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 39980  012C02  B4D8               	btfsc	status,2,c
 39981  012C04  D004               	goto	l2620
 39982                           
 39983                           ; BSR set to: 0
 39984                           ;buck.c: 608: buck_remote_enable = 1;
 39985  012C06  0E01               	movlw	1
 39986  012C08  0101               	movlb	1	; () banked
 39987  012C0A  6FED               	movwf	_buck_remote_enable& (0+255),b
 39988  012C0C  0012               	return	
 39989  012C0E                     l2620:
 39990                           
 39991                           ;buck.c: 609: else
 39992                           ;buck.c: 610: buck_remote_enable = 0;
 39993                           
 39994                           ; BSR set to: 1
 39995  012C0E  0E00               	movlw	0
 39996  012C10  0101               	movlb	1	; () banked
 39997  012C12  6FED               	movwf	_buck_remote_enable& (0+255),b
 39998  012C14  0012               	return	
 39999  012C16                     __end_of_buck_remote_set_enable:
 40000                           	opt stack 0
 40001                           tosu	equ	0xFFF
 40002                           tosh	equ	0xFFE
 40003                           tosl	equ	0xFFD
 40004                           pclath	equ	0xFFA
 40005                           tblptru	equ	0xFF8
 40006                           tblptrh	equ	0xFF7
 40007                           tblptrl	equ	0xFF6
 40008                           tablat	equ	0xFF5
 40009                           prodh	equ	0xFF4
 40010                           prodl	equ	0xFF3
 40011                           intcon	equ	0xFF2
 40012                           intcon2	equ	0xFF1
 40013                           intcon3	equ	0xFF0
 40014                           postinc0	equ	0xFEE
 40015                           wreg	equ	0xFE8
 40016                           indf1	equ	0xFE7
 40017                           postinc1	equ	0xFE6
 40018                           postdec1	equ	0xFE5
 40019                           plusw1	equ	0xFE3
 40020                           fsr1h	equ	0xFE2
 40021                           fsr1l	equ	0xFE1
 40022                           indf2	equ	0xFDF
 40023                           postinc2	equ	0xFDE
 40024                           postdec2	equ	0xFDD
 40025                           plusw2	equ	0xFDB
 40026                           fsr2h	equ	0xFDA
 40027                           fsr2l	equ	0xFD9
 40028                           status	equ	0xFD8
 40029                           
 40030 ;; *************** function _buck_remote_set_dutycycle *****************
 40031 ;; Defined at:
 40032 ;;		line 629 in file "buck.c"
 40033 ;; Parameters:    Size  Location     Type
 40034 ;;  dutycycle       1    wreg     unsigned char 
 40035 ;; Auto vars:     Size  Location     Type
 40036 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 40037 ;; Return value:  Size  Location     Type
 40038 ;;                  1    wreg      void 
 40039 ;; Registers used:
 40040 ;;		wreg, status,2, status,0
 40041 ;; Tracked objects:
 40042 ;;		On entry : 0/0
 40043 ;;		On exit  : 0/0
 40044 ;;		Unchanged: 0/0
 40045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40049 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40050 ;;Total ram usage:        1 bytes
 40051 ;; Hardware stack levels used:    1
 40052 ;; Hardware stack levels required when called:   10
 40053 ;; This function calls:
 40054 ;;		Nothing
 40055 ;; This function is called by:
 40056 ;;		__parse_command_long
 40057 ;; This function uses a non-reentrant model
 40058 ;;
 40059                           
 40060                           	psect	text190
 40061  0129C4                     __ptext190:
 40062                           	opt stack 0
 40063  0129C4                     _buck_remote_set_dutycycle:
 40064                           	opt stack 18
 40065                           
 40066                           ; BSR set to: 1
 40067                           ;incstack = 0
 40068                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 40069  0129C4  0100               	movlb	0	; () banked
 40070  0129C6  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 40071                           
 40072                           ;buck.c: 631: if(dutycycle>242)
 40073  0129C8  0EF2               	movlw	242
 40074  0129CA  0100               	movlb	0	; () banked
 40075  0129CC  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 40076  0129CE  D003               	goto	l2635
 40077                           
 40078                           ; BSR set to: 0
 40079                           ;buck.c: 632: buck_remote_dutycycle = 242;
 40080  0129D0  0EF2               	movlw	242
 40081  0129D2  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 40082  0129D4  0012               	return	
 40083  0129D6                     l2635:
 40084                           
 40085                           ; BSR set to: 0
 40086                           ;buck.c: 633: else if(dutycycle<40)
 40087                           
 40088                           ; BSR set to: 0
 40089  0129D6  0E28               	movlw	40
 40090  0129D8  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 40091  0129DA  D003               	goto	l2637
 40092                           
 40093                           ; BSR set to: 0
 40094                           ;buck.c: 634: buck_remote_dutycycle = 40;
 40095  0129DC  0E28               	movlw	40
 40096  0129DE  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 40097  0129E0  0012               	return	
 40098  0129E2                     l2637:
 40099                           
 40100                           ; BSR set to: 0
 40101                           ;buck.c: 635: else
 40102                           ;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 40103  0129E2  C060  F0FD         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 40104                           
 40105                           ; BSR set to: 0
 40106  0129E6  0012               	return	
 40107  0129E8                     __end_of_buck_remote_set_dutycycle:
 40108                           	opt stack 0
 40109                           tosu	equ	0xFFF
 40110                           tosh	equ	0xFFE
 40111                           tosl	equ	0xFFD
 40112                           pclath	equ	0xFFA
 40113                           tblptru	equ	0xFF8
 40114                           tblptrh	equ	0xFF7
 40115                           tblptrl	equ	0xFF6
 40116                           tablat	equ	0xFF5
 40117                           prodh	equ	0xFF4
 40118                           prodl	equ	0xFF3
 40119                           intcon	equ	0xFF2
 40120                           intcon2	equ	0xFF1
 40121                           intcon3	equ	0xFF0
 40122                           postinc0	equ	0xFEE
 40123                           wreg	equ	0xFE8
 40124                           indf1	equ	0xFE7
 40125                           postinc1	equ	0xFE6
 40126                           postdec1	equ	0xFE5
 40127                           plusw1	equ	0xFE3
 40128                           fsr1h	equ	0xFE2
 40129                           fsr1l	equ	0xFE1
 40130                           indf2	equ	0xFDF
 40131                           postinc2	equ	0xFDE
 40132                           postdec2	equ	0xFDD
 40133                           plusw2	equ	0xFDB
 40134                           fsr2h	equ	0xFDA
 40135                           fsr2l	equ	0xFD9
 40136                           status	equ	0xFD8
 40137                           
 40138 ;; *************** function _buck_remote_change_dutycycle *****************
 40139 ;; Defined at:
 40140 ;;		line 639 in file "buck.c"
 40141 ;; Parameters:    Size  Location     Type
 40142 ;;  change          1    wreg     char 
 40143 ;; Auto vars:     Size  Location     Type
 40144 ;;  change          1    0[BANK0 ] char 
 40145 ;;  new_dutycycl    2    1[BANK0 ] int 
 40146 ;; Return value:  Size  Location     Type
 40147 ;;                  1    wreg      void 
 40148 ;; Registers used:
 40149 ;;		wreg, status,2, status,0
 40150 ;; Tracked objects:
 40151 ;;		On entry : 0/0
 40152 ;;		On exit  : 0/0
 40153 ;;		Unchanged: 0/0
 40154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40156 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40159 ;;Total ram usage:        3 bytes
 40160 ;; Hardware stack levels used:    1
 40161 ;; Hardware stack levels required when called:   10
 40162 ;; This function calls:
 40163 ;;		Nothing
 40164 ;; This function is called by:
 40165 ;;		__parse_command_long
 40166 ;; This function uses a non-reentrant model
 40167 ;;
 40168                           
 40169                           	psect	text191
 40170  012116                     __ptext191:
 40171                           	opt stack 0
 40172  012116                     _buck_remote_change_dutycycle:
 40173                           	opt stack 18
 40174                           
 40175                           ; BSR set to: 0
 40176                           ;incstack = 0
 40177                           ;buck_remote_change_dutycycle@change stored from wreg
 40178  012116  0100               	movlb	0	; () banked
 40179  012118  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 40180                           
 40181                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 40182  01211A  0100               	movlb	0	; () banked
 40183  01211C  51FE               	movf	_buck_dutycycle& (0+255),w,b
 40184  01211E  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 40185  012120  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 40186  012122  6AE8               	clrf	wreg,c
 40187  012124  B0D8               	btfsc	status,0,c
 40188  012126  2AE8               	incf	wreg,f,c
 40189  012128  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 40190  01212A  06E8               	decf	wreg,f,c
 40191  01212C  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 40192                           
 40193                           ;buck.c: 642: if(new_dutycycle>242)
 40194  01212E  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 40195  012130  D009               	goto	l2642
 40196  012132  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 40197  012134  E104               	bnz	u11370
 40198  012136  0EF3               	movlw	243
 40199  012138  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 40200  01213A  A0D8               	btfss	status,0,c
 40201  01213C  D003               	goto	l2642
 40202  01213E                     u11370:
 40203                           
 40204                           ; BSR set to: 0
 40205                           ;buck.c: 643: buck_remote_dutycycle = 242;
 40206  01213E  0EF2               	movlw	242
 40207  012140  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 40208  012142  0012               	return	
 40209  012144                     l2642:
 40210                           
 40211                           ; BSR set to: 0
 40212                           ;buck.c: 644: else if(new_dutycycle<40)
 40213                           
 40214                           ; BSR set to: 0
 40215  012144  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 40216  012146  D006               	goto	u11380
 40217  012148  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 40218  01214A  E107               	bnz	l2644
 40219  01214C  0E28               	movlw	40
 40220  01214E  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 40221  012150  B0D8               	btfsc	status,0,c
 40222  012152  D003               	goto	l2644
 40223  012154                     u11380:
 40224                           
 40225                           ; BSR set to: 0
 40226                           ;buck.c: 645: buck_remote_dutycycle = 40;
 40227  012154  0E28               	movlw	40
 40228  012156  6FFD               	movwf	_buck_remote_dutycycle& (0+255),b
 40229  012158  0012               	return	
 40230  01215A                     l2644:
 40231                           
 40232                           ; BSR set to: 0
 40233                           ;buck.c: 646: else
 40234                           ;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 40235  01215A  C061  F0FD         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 40236                           
 40237                           ; BSR set to: 0
 40238  01215E  0012               	return	
 40239  012160                     __end_of_buck_remote_change_dutycycle:
 40240                           	opt stack 0
 40241                           tosu	equ	0xFFF
 40242                           tosh	equ	0xFFE
 40243                           tosl	equ	0xFFD
 40244                           pclath	equ	0xFFA
 40245                           tblptru	equ	0xFF8
 40246                           tblptrh	equ	0xFF7
 40247                           tblptrl	equ	0xFF6
 40248                           tablat	equ	0xFF5
 40249                           prodh	equ	0xFF4
 40250                           prodl	equ	0xFF3
 40251                           intcon	equ	0xFF2
 40252                           intcon2	equ	0xFF1
 40253                           intcon3	equ	0xFF0
 40254                           postinc0	equ	0xFEE
 40255                           wreg	equ	0xFE8
 40256                           indf1	equ	0xFE7
 40257                           postinc1	equ	0xFE6
 40258                           postdec1	equ	0xFE5
 40259                           plusw1	equ	0xFE3
 40260                           fsr1h	equ	0xFE2
 40261                           fsr1l	equ	0xFE1
 40262                           indf2	equ	0xFDF
 40263                           postinc2	equ	0xFDE
 40264                           postdec2	equ	0xFDD
 40265                           plusw2	equ	0xFDB
 40266                           fsr2h	equ	0xFDA
 40267                           fsr2l	equ	0xFD9
 40268                           status	equ	0xFD8
 40269                           
 40270 ;; *************** function __parse_command_calibration *****************
 40271 ;; Defined at:
 40272 ;;		line 505 in file "app_device_custom_hid.c"
 40273 ;; Parameters:    Size  Location     Type
 40274 ;;  cmd             1    wreg     unsigned char 
 40275 ;;  item            1    3[BANK0 ] unsigned char 
 40276 ;;  dat1            1    4[BANK0 ] unsigned char 
 40277 ;;  dat2            1    5[BANK0 ] unsigned char 
 40278 ;;  dat3            1    6[BANK0 ] unsigned char 
 40279 ;; Auto vars:     Size  Location     Type
 40280 ;;  cmd             1    0[COMRAM] unsigned char 
 40281 ;;  parameter       2    9[BANK0 ] int 
 40282 ;; Return value:  Size  Location     Type
 40283 ;;                  1    wreg      void 
 40284 ;; Registers used:
 40285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40286 ;; Tracked objects:
 40287 ;;		On entry : 0/0
 40288 ;;		On exit  : 0/0
 40289 ;;		Unchanged: 0/0
 40290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40294 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40295 ;;Total ram usage:        8 bytes
 40296 ;; Hardware stack levels used:    1
 40297 ;; Hardware stack levels required when called:   11
 40298 ;; This function calls:
 40299 ;;		_schedule_eeprom_write_task
 40300 ;; This function is called by:
 40301 ;;		_APP_DeviceCustomHIDTasks
 40302 ;; This function uses a non-reentrant model
 40303 ;;
 40304                           
 40305                           	psect	text192
 40306  00DF28                     __ptext192:
 40307                           	opt stack 0
 40308  00DF28                     __parse_command_calibration:
 40309                           	opt stack 18
 40310                           
 40311                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 40312                           
 40313                           ; BSR set to: 0
 40314                           ;incstack = 0
 40315  00DF28  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 40316  00DF2C  0100               	movlb	0	; () banked
 40317  00DF2E  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 40318                           
 40319                           ; BSR set to: 0
 40320                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 40321  00DF30  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 40322  00DF32  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 40323  00DF34  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 40324                           
 40325                           ; BSR set to: 0
 40326                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 40327  00DF36  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 40328  00DF38  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 40329                           
 40330                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 40331  00DF3A  D03F               	goto	l1184
 40332  00DF3C                     
 40333                           ; BSR set to: 0
 40334                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 40335                           
 40336                           ; BSR set to: 0
 40337  00DF3C  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 40338  00DF40  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 40339  00DF42  0E0F               	movlw	15
 40340  00DF44  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 40341  00DF46  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40342  00DF48  0D0C               	mullw	12
 40343  00DF4A  0E05               	movlw	5
 40344  00DF4C  26F3               	addwf	prodl,f,c
 40345  00DF4E  0E00               	movlw	0
 40346  00DF50  22F4               	addwfc	prodh,f,c
 40347  00DF52  0E00               	movlw	low _calibrationParameters
 40348  00DF54  24F3               	addwf	prodl,w,c
 40349  00DF56  6ED9               	movwf	fsr2l,c
 40350  00DF58  0E03               	movlw	high _calibrationParameters
 40351  00DF5A  20F4               	addwfc	prodh,w,c
 40352  00DF5C  6EDA               	movwf	fsr2h,c
 40353  00DF5E  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 40354  00DF62  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 40355                           
 40356                           ;app_device_custom_hid.c: 516: break;
 40357  00DF66  D055               	goto	l1188
 40358  00DF68                     
 40359                           ; BSR set to: 0
 40360                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 40361                           
 40362                           ; BSR set to: 0
 40363  00DF68  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 40364  00DF6C  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 40365  00DF6E  0E0F               	movlw	15
 40366  00DF70  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 40367  00DF72  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40368  00DF74  0D0C               	mullw	12
 40369  00DF76  0E07               	movlw	7
 40370  00DF78  26F3               	addwf	prodl,f,c
 40371  00DF7A  0E00               	movlw	0
 40372  00DF7C  22F4               	addwfc	prodh,f,c
 40373  00DF7E  0E00               	movlw	low _calibrationParameters
 40374  00DF80  24F3               	addwf	prodl,w,c
 40375  00DF82  6ED9               	movwf	fsr2l,c
 40376  00DF84  0E03               	movlw	high _calibrationParameters
 40377  00DF86  20F4               	addwfc	prodh,w,c
 40378  00DF88  6EDA               	movwf	fsr2h,c
 40379  00DF8A  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 40380  00DF8E  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 40381                           
 40382                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 40383  00DF92  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 40384  00DF96  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 40385  00DF98  0E0F               	movlw	15
 40386  00DF9A  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 40387  00DF9C  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40388  00DF9E  0D0C               	mullw	12
 40389  00DFA0  0E09               	movlw	9
 40390  00DFA2  26F3               	addwf	prodl,f,c
 40391  00DFA4  0E00               	movlw	0
 40392  00DFA6  22F4               	addwfc	prodh,f,c
 40393  00DFA8  0E00               	movlw	low _calibrationParameters
 40394  00DFAA  24F3               	addwf	prodl,w,c
 40395  00DFAC  6ED9               	movwf	fsr2l,c
 40396  00DFAE  0E03               	movlw	high _calibrationParameters
 40397  00DFB0  20F4               	addwfc	prodh,w,c
 40398  00DFB2  6EDA               	movwf	fsr2h,c
 40399  00DFB4  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 40400                           
 40401                           ; BSR set to: 0
 40402                           ;app_device_custom_hid.c: 522: }
 40403                           
 40404                           ;app_device_custom_hid.c: 521: break;
 40405  00DFB8  D02C               	goto	l1188
 40406  00DFBA                     l1184:
 40407                           
 40408                           ; BSR set to: 0
 40409                           
 40410                           ; BSR set to: 0
 40411  00DFBA  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 40412  00DFBC  0B0F               	andlw	15
 40413  00DFBE  6F67               	movwf	??__parse_command_calibration& (0+255),b
 40414  00DFC0  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 40415                           
 40416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40417                           ; Switch size 1, requested type "space"
 40418                           ; Number of cases is 1, Range of values is 0 to 0
 40419                           ; switch strategies available:
 40420                           ; Name         Instructions Cycles
 40421                           ; simple_byte            4     3 (average)
 40422                           ;	Chosen strategy is simple_byte
 40423  00DFC2  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 40424  00DFC4  0A00               	xorlw	0	; case 0
 40425  00DFC6  A4D8               	btfss	status,2,c
 40426  00DFC8  D024               	goto	l1188
 40427                           
 40428                           ; BSR set to: 0
 40429                           ; Switch size 1, requested type "space"
 40430                           ; Number of cases is 2, Range of values is 0 to 1
 40431                           ; switch strategies available:
 40432                           ; Name         Instructions Cycles
 40433                           ; simple_byte            7     4 (average)
 40434                           ;	Chosen strategy is simple_byte
 40435  00DFCA  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40436  00DFCC  0A00               	xorlw	0	; case 0
 40437  00DFCE  B4D8               	btfsc	status,2,c
 40438  00DFD0  D7B5               	goto	l1185
 40439  00DFD2  0A01               	xorlw	1	; case 1
 40440  00DFD4  B4D8               	btfsc	status,2,c
 40441  00DFD6  D7C8               	goto	l1187
 40442                           
 40443                           ; BSR set to: 0
 40444                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 40445  00DFD8  D01C               	goto	l1188
 40446  00DFDA                     
 40447                           ; BSR set to: 0
 40448                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 40449                           
 40450                           ; BSR set to: 0
 40451  00DFDA  0E02               	movlw	2
 40452  00DFDC  EC7D  F08F         	call	_schedule_eeprom_write_task
 40453                           
 40454                           ;app_device_custom_hid.c: 528: break;
 40455  00DFE0  0012               	return	
 40456  00DFE2                     
 40457                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 40458  00DFE2  0E03               	movlw	3
 40459  00DFE4  EC7D  F08F         	call	_schedule_eeprom_write_task
 40460                           
 40461                           ;app_device_custom_hid.c: 531: break;
 40462  00DFE8  0012               	return	
 40463  00DFEA                     
 40464                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 40465  00DFEA  0E04               	movlw	4
 40466  00DFEC  EC7D  F08F         	call	_schedule_eeprom_write_task
 40467                           
 40468                           ;app_device_custom_hid.c: 534: break;
 40469  00DFF0  0012               	return	
 40470  00DFF2                     
 40471                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 40472  00DFF2  0E05               	movlw	5
 40473  00DFF4  EC7D  F08F         	call	_schedule_eeprom_write_task
 40474                           
 40475                           ;app_device_custom_hid.c: 537: break;
 40476  00DFF8  0012               	return	
 40477  00DFFA                     
 40478                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 40479  00DFFA  0E06               	movlw	6
 40480  00DFFC  EC7D  F08F         	call	_schedule_eeprom_write_task
 40481                           
 40482                           ;app_device_custom_hid.c: 540: break;
 40483  00E000  0012               	return	
 40484  00E002                     
 40485                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 40486  00E002  0E07               	movlw	7
 40487  00E004  EC7D  F08F         	call	_schedule_eeprom_write_task
 40488                           
 40489                           ;app_device_custom_hid.c: 543: break;
 40490  00E008  0012               	return	
 40491  00E00A                     
 40492                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 40493  00E00A  0E08               	movlw	8
 40494  00E00C  EC7D  F08F         	call	_schedule_eeprom_write_task
 40495                           
 40496                           ;app_device_custom_hid.c: 547: }
 40497                           
 40498                           ;app_device_custom_hid.c: 546: break;
 40499  00E010  0012               	return	
 40500  00E012                     l1188:
 40501  00E012  0100               	movlb	0	; () banked
 40502  00E014  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 40503  00E016  0B0F               	andlw	15
 40504  00E018  6F67               	movwf	??__parse_command_calibration& (0+255),b
 40505  00E01A  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 40506                           
 40507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40508                           ; Switch size 1, requested type "space"
 40509                           ; Number of cases is 1, Range of values is 0 to 0
 40510                           ; switch strategies available:
 40511                           ; Name         Instructions Cycles
 40512                           ; simple_byte            4     3 (average)
 40513                           ;	Chosen strategy is simple_byte
 40514  00E01C  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 40515  00E01E  0A00               	xorlw	0	; case 0
 40516  00E020  A4D8               	btfss	status,2,c
 40517  00E022  0012               	return	
 40518                           
 40519                           ; BSR set to: 0
 40520                           ; Switch size 1, requested type "space"
 40521                           ; Number of cases is 7, Range of values is 0 to 6
 40522                           ; switch strategies available:
 40523                           ; Name         Instructions Cycles
 40524                           ; simple_byte           22    12 (average)
 40525                           ;	Chosen strategy is simple_byte
 40526  00E024  5167               	movf	??__parse_command_calibration& (0+255),w,b
 40527  00E026  0A00               	xorlw	0	; case 0
 40528  00E028  B4D8               	btfsc	status,2,c
 40529  00E02A  D7D7               	goto	l1189
 40530  00E02C  0A01               	xorlw	1	; case 1
 40531  00E02E  B4D8               	btfsc	status,2,c
 40532  00E030  D7D8               	goto	l1191
 40533  00E032  0A03               	xorlw	3	; case 2
 40534  00E034  B4D8               	btfsc	status,2,c
 40535  00E036  D7D9               	goto	l1192
 40536  00E038  0A01               	xorlw	1	; case 3
 40537  00E03A  B4D8               	btfsc	status,2,c
 40538  00E03C  D7DA               	goto	l1193
 40539  00E03E  0A07               	xorlw	7	; case 4
 40540  00E040  B4D8               	btfsc	status,2,c
 40541  00E042  D7DB               	goto	l1194
 40542  00E044  0A01               	xorlw	1	; case 5
 40543  00E046  B4D8               	btfsc	status,2,c
 40544  00E048  D7DC               	goto	l1195
 40545  00E04A  0A03               	xorlw	3	; case 6
 40546  00E04C  A4D8               	btfss	status,2,c
 40547  00E04E  0012               	return	
 40548  00E050  D7DC               	goto	l1196
 40549  00E052                     __end_of__parse_command_calibration:
 40550                           	opt stack 0
 40551                           tosu	equ	0xFFF
 40552                           tosh	equ	0xFFE
 40553                           tosl	equ	0xFFD
 40554                           pclath	equ	0xFFA
 40555                           tblptru	equ	0xFF8
 40556                           tblptrh	equ	0xFF7
 40557                           tblptrl	equ	0xFF6
 40558                           tablat	equ	0xFF5
 40559                           prodh	equ	0xFF4
 40560                           prodl	equ	0xFF3
 40561                           intcon	equ	0xFF2
 40562                           intcon2	equ	0xFF1
 40563                           intcon3	equ	0xFF0
 40564                           postinc0	equ	0xFEE
 40565                           wreg	equ	0xFE8
 40566                           indf1	equ	0xFE7
 40567                           postinc1	equ	0xFE6
 40568                           postdec1	equ	0xFE5
 40569                           plusw1	equ	0xFE3
 40570                           fsr1h	equ	0xFE2
 40571                           fsr1l	equ	0xFE1
 40572                           indf2	equ	0xFDF
 40573                           postinc2	equ	0xFDE
 40574                           postdec2	equ	0xFDD
 40575                           plusw2	equ	0xFDB
 40576                           fsr2h	equ	0xFDA
 40577                           fsr2l	equ	0xFD9
 40578                           status	equ	0xFD8
 40579                           
 40580 ;; *************** function _schedule_eeprom_write_task *****************
 40581 ;; Defined at:
 40582 ;;		line 741 in file "i2c.c"
 40583 ;; Parameters:    Size  Location     Type
 40584 ;;  task            1    wreg     enum E8258
 40585 ;; Auto vars:     Size  Location     Type
 40586 ;;  task            1    1[BANK0 ] enum E8258
 40587 ;;  idx             1    2[BANK0 ] unsigned char 
 40588 ;; Return value:  Size  Location     Type
 40589 ;;                  1    wreg      void 
 40590 ;; Registers used:
 40591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40592 ;; Tracked objects:
 40593 ;;		On entry : 0/0
 40594 ;;		On exit  : 0/0
 40595 ;;		Unchanged: 0/0
 40596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40601 ;;Total ram usage:        3 bytes
 40602 ;; Hardware stack levels used:    1
 40603 ;; Hardware stack levels required when called:   10
 40604 ;; This function calls:
 40605 ;;		Nothing
 40606 ;; This function is called by:
 40607 ;;		__parse_command_calibration
 40608 ;;		_i2c_eeprom_read_calibration
 40609 ;; This function uses a non-reentrant model
 40610 ;;
 40611                           
 40612                           	psect	text193
 40613  011EFA                     __ptext193:
 40614                           	opt stack 0
 40615  011EFA                     _schedule_eeprom_write_task:
 40616                           	opt stack 18
 40617                           
 40618                           ;incstack = 0
 40619                           ;schedule_eeprom_write_task@task stored from wreg
 40620  011EFA  0100               	movlb	0	; () banked
 40621  011EFC  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 40622                           
 40623                           ;i2c.c: 743: uint8_t idx;
 40624                           ;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 40625  011EFE  C050  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 40626  011F02  D010               	goto	l1660
 40627  011F04                     
 40628                           ;i2c.c: 746: {
 40629                           ;i2c.c: 747: if (task_list[idx] == task)
 40630  011F04  0100               	movlb	0	; () banked
 40631  011F06  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 40632  011F08  0D01               	mullw	1
 40633  011F0A  0E68               	movlw	low _task_list
 40634  011F0C  24F3               	addwf	prodl,w,c
 40635  011F0E  6ED9               	movwf	fsr2l,c
 40636  011F10  0E04               	movlw	high _task_list
 40637  011F12  20F4               	addwfc	prodh,w,c
 40638  011F14  6EDA               	movwf	fsr2h,c
 40639  011F16  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 40640  011F18  18DE               	xorwf	postinc2,w,c
 40641  011F1A  B4D8               	btfsc	status,2,c
 40642  011F1C  0012               	return	
 40643                           
 40644                           ; BSR set to: 0
 40645                           
 40646                           ; BSR set to: 0
 40647                           
 40648                           ; BSR set to: 0
 40649                           ;i2c.c: 748: {
 40650                           ;i2c.c: 750: return;
 40651  011F1E  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 40652  011F20  0B0F               	andlw	15
 40653  011F22  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 40654  011F24                     l1660:
 40655  011F24  504F               	movf	_task_list_write_index,w,c
 40656  011F26  0100               	movlb	0	; () banked
 40657  011F28  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 40658  011F2A  A4D8               	btfss	status,2,c
 40659  011F2C  D7EB               	goto	l1661
 40660                           
 40661                           ; BSR set to: 0
 40662                           ;i2c.c: 751: }
 40663                           ;i2c.c: 752: }
 40664                           ;i2c.c: 754: task_list[task_list_write_index] = task;
 40665                           
 40666                           ; BSR set to: 0
 40667  011F2E  504F               	movf	_task_list_write_index,w,c
 40668  011F30  0D01               	mullw	1
 40669  011F32  0E68               	movlw	low _task_list
 40670  011F34  24F3               	addwf	prodl,w,c
 40671  011F36  6ED9               	movwf	fsr2l,c
 40672  011F38  0E04               	movlw	high _task_list
 40673  011F3A  20F4               	addwfc	prodh,w,c
 40674  011F3C  6EDA               	movwf	fsr2h,c
 40675  011F3E  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 40676                           
 40677                           ; BSR set to: 0
 40678                           ;i2c.c: 755: ++task_list_write_index;
 40679  011F42  2A4F               	incf	_task_list_write_index,f,c
 40680                           
 40681                           ; BSR set to: 0
 40682                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 40683  011F44  0E0F               	movlw	15
 40684  011F46  164F               	andwf	_task_list_write_index,f,c
 40685                           
 40686                           ; BSR set to: 0
 40687  011F48  0012               	return		;funcret
 40688  011F4A                     __end_of_schedule_eeprom_write_task:
 40689                           	opt stack 0
 40690                           tosu	equ	0xFFF
 40691                           tosh	equ	0xFFE
 40692                           tosl	equ	0xFFD
 40693                           pclath	equ	0xFFA
 40694                           tblptru	equ	0xFF8
 40695                           tblptrh	equ	0xFF7
 40696                           tblptrl	equ	0xFF6
 40697                           tablat	equ	0xFF5
 40698                           prodh	equ	0xFF4
 40699                           prodl	equ	0xFF3
 40700                           intcon	equ	0xFF2
 40701                           intcon2	equ	0xFF1
 40702                           intcon3	equ	0xFF0
 40703                           postinc0	equ	0xFEE
 40704                           wreg	equ	0xFE8
 40705                           indf1	equ	0xFE7
 40706                           postinc1	equ	0xFE6
 40707                           postdec1	equ	0xFE5
 40708                           plusw1	equ	0xFE3
 40709                           fsr1h	equ	0xFE2
 40710                           fsr1l	equ	0xFE1
 40711                           indf2	equ	0xFDF
 40712                           postinc2	equ	0xFDE
 40713                           postdec2	equ	0xFDD
 40714                           plusw2	equ	0xFDB
 40715                           fsr2h	equ	0xFDA
 40716                           fsr2l	equ	0xFD9
 40717                           status	equ	0xFD8
 40718                           
 40719 ;; *************** function __fill_buffer_get_status *****************
 40720 ;; Defined at:
 40721 ;;		line 269 in file "app_device_custom_hid.c"
 40722 ;; Parameters:    Size  Location     Type
 40723 ;;		None
 40724 ;; Auto vars:     Size  Location     Type
 40725 ;;		None
 40726 ;; Return value:  Size  Location     Type
 40727 ;;                  1    wreg      void 
 40728 ;; Registers used:
 40729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40730 ;; Tracked objects:
 40731 ;;		On entry : 0/0
 40732 ;;		On exit  : 0/0
 40733 ;;		Unchanged: 0/0
 40734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40737 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40739 ;;Total ram usage:        4 bytes
 40740 ;; Hardware stack levels used:    1
 40741 ;; Hardware stack levels required when called:   11
 40742 ;; This function calls:
 40743 ;;		_buck_get_dutycycle
 40744 ;;		_buck_get_mode
 40745 ;;		_buck_remote_get_dutycycle
 40746 ;;		_buck_remote_get_status
 40747 ;;		_rtcc_get_day
 40748 ;;		_rtcc_get_hours
 40749 ;;		_rtcc_get_minutes
 40750 ;;		_rtcc_get_month
 40751 ;;		_rtcc_get_seconds
 40752 ;;		_rtcc_get_year
 40753 ;;		_ui_get_status
 40754 ;; This function is called by:
 40755 ;;		_APP_DeviceCustomHIDTasks
 40756 ;; This function uses a non-reentrant model
 40757 ;;
 40758                           
 40759                           	psect	text194
 40760  00C282                     __ptext194:
 40761                           	opt stack 0
 40762  00C282                     __fill_buffer_get_status:
 40763                           	opt stack 18
 40764                           
 40765                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 40766                           
 40767                           ; BSR set to: 0
 40768                           ;incstack = 0
 40769  00C282  0E10               	movlw	16
 40770  00C284  0103               	movlb	3	; () banked
 40771  00C286  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 40772                           
 40773                           ; BSR set to: 3
 40774                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 40775  00C288  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 40776                           
 40777                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 40778  00C28C  0102               	movlb	2	; () banked
 40779  00C28E  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 40780  00C290  0103               	movlb	3	; () banked
 40781  00C292  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 40782                           
 40783                           ; BSR set to: 3
 40784                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 40785  00C294  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 40786                           
 40787                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 40788  00C298  0102               	movlb	2	; () banked
 40789  00C29A  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 40790  00C29C  0103               	movlb	3	; () banked
 40791  00C29E  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 40792                           
 40793                           ; BSR set to: 3
 40794                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 40795  00C2A0  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 40796                           
 40797                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 40798  00C2A4  0102               	movlb	2	; () banked
 40799  00C2A6  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 40800  00C2A8  0103               	movlb	3	; () banked
 40801  00C2AA  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 40802                           
 40803                           ; BSR set to: 3
 40804                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 40805  00C2AC  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 40806                           
 40807                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 40808  00C2B0  0102               	movlb	2	; () banked
 40809  00C2B2  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 40810  00C2B4  0103               	movlb	3	; () banked
 40811  00C2B6  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 40812                           
 40813                           ; BSR set to: 3
 40814                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 40815  00C2B8  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 40816                           
 40817                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 40818  00C2BC  0102               	movlb	2	; () banked
 40819  00C2BE  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 40820  00C2C0  0103               	movlb	3	; () banked
 40821  00C2C2  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 40822                           
 40823                           ; BSR set to: 3
 40824                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 40825  00C2C4  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 40826                           
 40827                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 40828  00C2C8  0102               	movlb	2	; () banked
 40829  00C2CA  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 40830  00C2CC  0103               	movlb	3	; () banked
 40831  00C2CE  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 40832                           
 40833                           ; BSR set to: 3
 40834                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 40835  00C2D0  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 40836                           
 40837                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 40838  00C2D4  0102               	movlb	2	; () banked
 40839  00C2D6  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 40840  00C2D8  0103               	movlb	3	; () banked
 40841  00C2DA  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 40842                           
 40843                           ; BSR set to: 3
 40844                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 40845  00C2DC  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 40846                           
 40847                           ; BSR set to: 3
 40848                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 40849  00C2E0  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 40850                           
 40851                           ; BSR set to: 3
 40852                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 40853  00C2E4  EC3B  F097         	call	_rtcc_get_year	;wreg free
 40854  00C2E8  0103               	movlb	3	; () banked
 40855  00C2EA  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 40856                           
 40857                           ; BSR set to: 3
 40858                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 40859  00C2EC  EC49  F097         	call	_rtcc_get_month	;wreg free
 40860  00C2F0  0103               	movlb	3	; () banked
 40861  00C2F2  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 40862                           
 40863                           ; BSR set to: 3
 40864                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 40865  00C2F4  EC5E  F097         	call	_rtcc_get_day	;wreg free
 40866  00C2F8  0103               	movlb	3	; () banked
 40867  00C2FA  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 40868                           
 40869                           ; BSR set to: 3
 40870                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 40871  00C2FC  EC57  F097         	call	_rtcc_get_hours	;wreg free
 40872  00C300  0103               	movlb	3	; () banked
 40873  00C302  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 40874                           
 40875                           ; BSR set to: 3
 40876                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 40877  00C304  EC50  F097         	call	_rtcc_get_minutes	;wreg free
 40878  00C308  0103               	movlb	3	; () banked
 40879  00C30A  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 40880                           
 40881                           ; BSR set to: 3
 40882                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 40883  00C30C  EC42  F097         	call	_rtcc_get_seconds	;wreg free
 40884  00C310  0103               	movlb	3	; () banked
 40885  00C312  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 40886                           
 40887                           ; BSR set to: 3
 40888                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 40889  00C314  ECA6  F097         	call	_buck_get_mode	;wreg free
 40890  00C318  0103               	movlb	3	; () banked
 40891  00C31A  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 40892                           
 40893                           ; BSR set to: 3
 40894                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 40895  00C31C  ECA9  F097         	call	_buck_get_dutycycle	;wreg free
 40896  00C320  0103               	movlb	3	; () banked
 40897  00C322  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 40898                           
 40899                           ; BSR set to: 3
 40900                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 40901  00C324  ECA9  F093         	call	_buck_remote_get_status	;wreg free
 40902  00C328  0103               	movlb	3	; () banked
 40903  00C32A  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 40904                           
 40905                           ; BSR set to: 3
 40906                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 40907  00C32C  ECA3  F097         	call	_buck_remote_get_dutycycle	;wreg free
 40908  00C330  0103               	movlb	3	; () banked
 40909  00C332  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 40910                           
 40911                           ; BSR set to: 3
 40912                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 40913  00C334  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 40914                           
 40915                           ; BSR set to: 3
 40916                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 40917  00C338  0102               	movlb	2	; () banked
 40918  00C33A  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 40919  00C33C  0103               	movlb	3	; () banked
 40920  00C33E  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 40921                           
 40922                           ; BSR set to: 3
 40923                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 40924  00C340  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 40925                           
 40926                           ; BSR set to: 3
 40927                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 40928  00C344  0102               	movlb	2	; () banked
 40929  00C346  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 40930  00C348  0103               	movlb	3	; () banked
 40931  00C34A  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 40932                           
 40933                           ; BSR set to: 3
 40934                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 40935  00C34C  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 40936                           
 40937                           ; BSR set to: 3
 40938                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 40939  00C350  0102               	movlb	2	; () banked
 40940  00C352  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 40941  00C354  0103               	movlb	3	; () banked
 40942  00C356  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 40943                           
 40944                           ; BSR set to: 3
 40945                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 40946  00C358  0102               	movlb	2	; () banked
 40947  00C35A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40948  00C35C  0B0F               	andlw	15
 40949  00C35E  0B03               	andlw	3
 40950  00C360  0100               	movlb	0	; () banked
 40951  00C362  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40952  00C364  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40953  00C366  90D8               	bcf	status,0,c
 40954  00C368  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40955  00C36A  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40956  00C36C  0E0A               	movlw	low (_os+10)
 40957  00C36E  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40958  00C370  6ED9               	movwf	fsr2l,c
 40959  00C372  0E02               	movlw	high (_os+10)
 40960  00C374  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40961  00C376  6EDA               	movwf	fsr2h,c
 40962  00C378  50DF               	movf	indf2,w,c
 40963  00C37A  0103               	movlb	3	; () banked
 40964  00C37C  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 40965                           
 40966                           ; BSR set to: 3
 40967                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40968  00C37E  0102               	movlb	2	; () banked
 40969  00C380  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40970  00C382  0B0F               	andlw	15
 40971  00C384  0B03               	andlw	3
 40972  00C386  0100               	movlb	0	; () banked
 40973  00C388  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40974  00C38A  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40975  00C38C  90D8               	bcf	status,0,c
 40976  00C38E  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40977  00C390  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40978  00C392  0E0A               	movlw	low (_os+10)
 40979  00C394  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40980  00C396  6ED9               	movwf	fsr2l,c
 40981  00C398  0E02               	movlw	high (_os+10)
 40982  00C39A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40983  00C39C  6EDA               	movwf	fsr2h,c
 40984  00C39E  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40985  00C3A2  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40986  00C3A6  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40987  00C3AA  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40988  00C3AC  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40989  00C3AE  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40990  00C3B0  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40991  00C3B2  0103               	movlb	3	; () banked
 40992  00C3B4  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 40993                           
 40994                           ; BSR set to: 3
 40995                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40996  00C3B6  0102               	movlb	2	; () banked
 40997  00C3B8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40998  00C3BA  0B0F               	andlw	15
 40999  00C3BC  0B03               	andlw	3
 41000  00C3BE  0100               	movlb	0	; () banked
 41001  00C3C0  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 41002  00C3C2  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 41003  00C3C4  90D8               	bcf	status,0,c
 41004  00C3C6  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 41005  00C3C8  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 41006  00C3CA  0E1F               	movlw	low (_os+31)
 41007  00C3CC  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 41008  00C3CE  6ED9               	movwf	fsr2l,c
 41009  00C3D0  0E02               	movlw	high (_os+31)
 41010  00C3D2  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 41011  00C3D4  6EDA               	movwf	fsr2h,c
 41012  00C3D6  50DF               	movf	indf2,w,c
 41013  00C3D8  0103               	movlb	3	; () banked
 41014  00C3DA  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 41015                           
 41016                           ; BSR set to: 3
 41017                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 41018  00C3DC  0102               	movlb	2	; () banked
 41019  00C3DE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 41020  00C3E0  0B0F               	andlw	15
 41021  00C3E2  0B03               	andlw	3
 41022  00C3E4  0100               	movlb	0	; () banked
 41023  00C3E6  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 41024  00C3E8  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 41025  00C3EA  90D8               	bcf	status,0,c
 41026  00C3EC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 41027  00C3EE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 41028  00C3F0  0E1F               	movlw	low (_os+31)
 41029  00C3F2  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 41030  00C3F4  6ED9               	movwf	fsr2l,c
 41031  00C3F6  0E02               	movlw	high (_os+31)
 41032  00C3F8  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 41033  00C3FA  6EDA               	movwf	fsr2h,c
 41034  00C3FC  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 41035  00C400  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 41036  00C404  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 41037  00C408  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 41038  00C40A  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 41039  00C40C  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 41040  00C40E  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 41041  00C410  0103               	movlb	3	; () banked
 41042  00C412  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 41043                           
 41044                           ; BSR set to: 3
 41045                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 41046  00C414  0102               	movlb	2	; () banked
 41047  00C416  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 41048  00C418  0B0F               	andlw	15
 41049  00C41A  0B03               	andlw	3
 41050  00C41C  0100               	movlb	0	; () banked
 41051  00C41E  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 41052  00C420  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 41053  00C422  90D8               	bcf	status,0,c
 41054  00C424  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 41055  00C426  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 41056  00C428  0E14               	movlw	low (_os+20)
 41057  00C42A  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 41058  00C42C  6ED9               	movwf	fsr2l,c
 41059  00C42E  0E02               	movlw	high (_os+20)
 41060  00C430  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 41061  00C432  6EDA               	movwf	fsr2h,c
 41062  00C434  50DF               	movf	indf2,w,c
 41063  00C436  0103               	movlb	3	; () banked
 41064  00C438  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 41065                           
 41066                           ; BSR set to: 3
 41067                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 41068  00C43A  0102               	movlb	2	; () banked
 41069  00C43C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 41070  00C43E  0B0F               	andlw	15
 41071  00C440  0B03               	andlw	3
 41072  00C442  0100               	movlb	0	; () banked
 41073  00C444  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 41074  00C446  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 41075  00C448  90D8               	bcf	status,0,c
 41076  00C44A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 41077  00C44C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 41078  00C44E  0E14               	movlw	low (_os+20)
 41079  00C450  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 41080  00C452  6ED9               	movwf	fsr2l,c
 41081  00C454  0E02               	movlw	high (_os+20)
 41082  00C456  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 41083  00C458  6EDA               	movwf	fsr2h,c
 41084  00C45A  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 41085  00C45E  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 41086  00C462  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 41087  00C466  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 41088  00C468  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 41089  00C46A  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 41090  00C46C  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 41091  00C46E  0103               	movlb	3	; () banked
 41092  00C470  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 41093                           
 41094                           ; BSR set to: 3
 41095                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 41096  00C472  0102               	movlb	2	; () banked
 41097  00C474  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 41098  00C476  0B0F               	andlw	15
 41099  00C478  0B03               	andlw	3
 41100  00C47A  0100               	movlb	0	; () banked
 41101  00C47C  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 41102  00C47E  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 41103  00C480  90D8               	bcf	status,0,c
 41104  00C482  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 41105  00C484  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 41106  00C486  0E29               	movlw	low (_os+41)
 41107  00C488  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 41108  00C48A  6ED9               	movwf	fsr2l,c
 41109  00C48C  0E02               	movlw	high (_os+41)
 41110  00C48E  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 41111  00C490  6EDA               	movwf	fsr2h,c
 41112  00C492  50DF               	movf	indf2,w,c
 41113  00C494  0103               	movlb	3	; () banked
 41114  00C496  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 41115                           
 41116                           ; BSR set to: 3
 41117                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 41118  00C498  0102               	movlb	2	; () banked
 41119  00C49A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 41120  00C49C  0B0F               	andlw	15
 41121  00C49E  0B03               	andlw	3
 41122  00C4A0  0100               	movlb	0	; () banked
 41123  00C4A2  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 41124  00C4A4  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 41125  00C4A6  90D8               	bcf	status,0,c
 41126  00C4A8  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 41127  00C4AA  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 41128  00C4AC  0E29               	movlw	low (_os+41)
 41129  00C4AE  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 41130  00C4B0  6ED9               	movwf	fsr2l,c
 41131  00C4B2  0E02               	movlw	high (_os+41)
 41132  00C4B4  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 41133  00C4B6  6EDA               	movwf	fsr2h,c
 41134  00C4B8  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 41135  00C4BC  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 41136  00C4C0  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 41137  00C4C4  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 41138  00C4C6  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 41139  00C4C8  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 41140  00C4CA  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 41141  00C4CC  0103               	movlb	3	; () banked
 41142  00C4CE  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 41143                           
 41144                           ; BSR set to: 3
 41145                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 41146  00C4D0  ECA0  F097         	call	_ui_get_status	;wreg free
 41147  00C4D4  0103               	movlb	3	; () banked
 41148  00C4D6  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 41149                           
 41150                           ; BSR set to: 3
 41151                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 41152  00C4D8  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 41153                           
 41154                           ; BSR set to: 3
 41155  00C4DC  0012               	return		;funcret
 41156  00C4DE                     __end_of__fill_buffer_get_status:
 41157                           	opt stack 0
 41158                           tosu	equ	0xFFF
 41159                           tosh	equ	0xFFE
 41160                           tosl	equ	0xFFD
 41161                           pclath	equ	0xFFA
 41162                           tblptru	equ	0xFF8
 41163                           tblptrh	equ	0xFF7
 41164                           tblptrl	equ	0xFF6
 41165                           tablat	equ	0xFF5
 41166                           prodh	equ	0xFF4
 41167                           prodl	equ	0xFF3
 41168                           intcon	equ	0xFF2
 41169                           intcon2	equ	0xFF1
 41170                           intcon3	equ	0xFF0
 41171                           postinc0	equ	0xFEE
 41172                           wreg	equ	0xFE8
 41173                           indf1	equ	0xFE7
 41174                           postinc1	equ	0xFE6
 41175                           postdec1	equ	0xFE5
 41176                           plusw1	equ	0xFE3
 41177                           fsr1h	equ	0xFE2
 41178                           fsr1l	equ	0xFE1
 41179                           indf2	equ	0xFDF
 41180                           postinc2	equ	0xFDE
 41181                           postdec2	equ	0xFDD
 41182                           plusw2	equ	0xFDB
 41183                           fsr2h	equ	0xFDA
 41184                           fsr2l	equ	0xFD9
 41185                           status	equ	0xFD8
 41186                           
 41187 ;; *************** function _ui_get_status *****************
 41188 ;; Defined at:
 41189 ;;		line 12 in file "ui.c"
 41190 ;; Parameters:    Size  Location     Type
 41191 ;;		None
 41192 ;; Auto vars:     Size  Location     Type
 41193 ;;		None
 41194 ;; Return value:  Size  Location     Type
 41195 ;;                  1    wreg      enum E9494
 41196 ;; Registers used:
 41197 ;;		wreg, status,2
 41198 ;; Tracked objects:
 41199 ;;		On entry : 0/0
 41200 ;;		On exit  : 0/0
 41201 ;;		Unchanged: 0/0
 41202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41207 ;;Total ram usage:        0 bytes
 41208 ;; Hardware stack levels used:    1
 41209 ;; Hardware stack levels required when called:   10
 41210 ;; This function calls:
 41211 ;;		Nothing
 41212 ;; This function is called by:
 41213 ;;		_main
 41214 ;;		__fill_buffer_get_status
 41215 ;; This function uses a non-reentrant model
 41216 ;;
 41217                           
 41218                           	psect	text195
 41219  012F40                     __ptext195:
 41220                           	opt stack 0
 41221  012F40                     _ui_get_status:
 41222                           	opt stack 20
 41223                           
 41224                           ;ui.c: 14: return userInterfaceStatus;
 41225                           
 41226                           ; BSR set to: 3
 41227                           ;incstack = 0
 41228  012F40  0101               	movlb	1	; () banked
 41229  012F42  51EF               	movf	_userInterfaceStatus& (0+255),w,b
 41230  012F44  0012               	return	
 41231  012F46                     __end_of_ui_get_status:
 41232                           	opt stack 0
 41233                           tosu	equ	0xFFF
 41234                           tosh	equ	0xFFE
 41235                           tosl	equ	0xFFD
 41236                           pclath	equ	0xFFA
 41237                           tblptru	equ	0xFF8
 41238                           tblptrh	equ	0xFF7
 41239                           tblptrl	equ	0xFF6
 41240                           tablat	equ	0xFF5
 41241                           prodh	equ	0xFF4
 41242                           prodl	equ	0xFF3
 41243                           intcon	equ	0xFF2
 41244                           intcon2	equ	0xFF1
 41245                           intcon3	equ	0xFF0
 41246                           postinc0	equ	0xFEE
 41247                           wreg	equ	0xFE8
 41248                           indf1	equ	0xFE7
 41249                           postinc1	equ	0xFE6
 41250                           postdec1	equ	0xFE5
 41251                           plusw1	equ	0xFE3
 41252                           fsr1h	equ	0xFE2
 41253                           fsr1l	equ	0xFE1
 41254                           indf2	equ	0xFDF
 41255                           postinc2	equ	0xFDE
 41256                           postdec2	equ	0xFDD
 41257                           plusw2	equ	0xFDB
 41258                           fsr2h	equ	0xFDA
 41259                           fsr2l	equ	0xFD9
 41260                           status	equ	0xFD8
 41261                           
 41262 ;; *************** function _rtcc_get_year *****************
 41263 ;; Defined at:
 41264 ;;		line 127 in file "rtcc.c"
 41265 ;; Parameters:    Size  Location     Type
 41266 ;;		None
 41267 ;; Auto vars:     Size  Location     Type
 41268 ;;		None
 41269 ;; Return value:  Size  Location     Type
 41270 ;;                  1    wreg      unsigned char 
 41271 ;; Registers used:
 41272 ;;		wreg, status,2
 41273 ;; Tracked objects:
 41274 ;;		On entry : 0/0
 41275 ;;		On exit  : 0/0
 41276 ;;		Unchanged: 0/0
 41277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41282 ;;Total ram usage:        0 bytes
 41283 ;; Hardware stack levels used:    1
 41284 ;; Hardware stack levels required when called:   10
 41285 ;; This function calls:
 41286 ;;		Nothing
 41287 ;; This function is called by:
 41288 ;;		__fill_buffer_get_status
 41289 ;;		__display_time
 41290 ;;		__number_of_days
 41291 ;;		_rtcc_get_year_decimal
 41292 ;;		_rtcc_increment_year
 41293 ;;		_rtcc_decrement_year
 41294 ;;		_rtcc_write_eeprom
 41295 ;; This function uses a non-reentrant model
 41296 ;;
 41297                           
 41298                           	psect	text196
 41299  012E76                     __ptext196:
 41300                           	opt stack 0
 41301  012E76                     _rtcc_get_year:
 41302                           	opt stack 17
 41303                           
 41304                           ;rtcc.c: 129: RTCCFGbits.RTCPTR1 = 1;
 41305                           
 41306                           ; BSR set to: 1
 41307                           ;incstack = 0
 41308  012E76  010F               	movlb	15	; () banked
 41309  012E78  833F               	bsf	63,1,b	;volatile
 41310                           
 41311                           ;rtcc.c: 130: RTCCFGbits.RTCPTR0 = 1;
 41312  012E7A  813F               	bsf	63,0,b	;volatile
 41313  012E7C                     
 41314                           ; BSR set to: 15
 41315                           
 41316                           ; BSR set to: 15
 41317  012E7C  B93F               	btfsc	63,4,b	;volatile
 41318  012E7E  D7FE               	goto	l2289
 41319                           
 41320                           ; BSR set to: 15
 41321                           ;rtcc.c: 132: return RTCVALL;
 41322                           
 41323                           ; BSR set to: 15
 41324  012E80  513A               	movf	58,w,b	;volatile
 41325  012E82  0012               	return	
 41326  012E84                     __end_of_rtcc_get_year:
 41327                           	opt stack 0
 41328                           tosu	equ	0xFFF
 41329                           tosh	equ	0xFFE
 41330                           tosl	equ	0xFFD
 41331                           pclath	equ	0xFFA
 41332                           tblptru	equ	0xFF8
 41333                           tblptrh	equ	0xFF7
 41334                           tblptrl	equ	0xFF6
 41335                           tablat	equ	0xFF5
 41336                           prodh	equ	0xFF4
 41337                           prodl	equ	0xFF3
 41338                           intcon	equ	0xFF2
 41339                           intcon2	equ	0xFF1
 41340                           intcon3	equ	0xFF0
 41341                           postinc0	equ	0xFEE
 41342                           wreg	equ	0xFE8
 41343                           indf1	equ	0xFE7
 41344                           postinc1	equ	0xFE6
 41345                           postdec1	equ	0xFE5
 41346                           plusw1	equ	0xFE3
 41347                           fsr1h	equ	0xFE2
 41348                           fsr1l	equ	0xFE1
 41349                           indf2	equ	0xFDF
 41350                           postinc2	equ	0xFDE
 41351                           postdec2	equ	0xFDD
 41352                           plusw2	equ	0xFDB
 41353                           fsr2h	equ	0xFDA
 41354                           fsr2l	equ	0xFD9
 41355                           status	equ	0xFD8
 41356                           
 41357 ;; *************** function _rtcc_get_seconds *****************
 41358 ;; Defined at:
 41359 ;;		line 317 in file "rtcc.c"
 41360 ;; Parameters:    Size  Location     Type
 41361 ;;		None
 41362 ;; Auto vars:     Size  Location     Type
 41363 ;;		None
 41364 ;; Return value:  Size  Location     Type
 41365 ;;                  1    wreg      unsigned char 
 41366 ;; Registers used:
 41367 ;;		wreg, status,2
 41368 ;; Tracked objects:
 41369 ;;		On entry : 0/0
 41370 ;;		On exit  : 0/0
 41371 ;;		Unchanged: 0/0
 41372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41377 ;;Total ram usage:        0 bytes
 41378 ;; Hardware stack levels used:    1
 41379 ;; Hardware stack levels required when called:   10
 41380 ;; This function calls:
 41381 ;;		Nothing
 41382 ;; This function is called by:
 41383 ;;		__fill_buffer_get_status
 41384 ;;		__display_time
 41385 ;;		_rtcc_get_seconds_decimal
 41386 ;;		_rtcc_increment_seconds
 41387 ;;		_rtcc_decrement_seconds
 41388 ;;		_rtcc_write_eeprom
 41389 ;; This function uses a non-reentrant model
 41390 ;;
 41391                           
 41392                           	psect	text197
 41393  012E84                     __ptext197:
 41394                           	opt stack 0
 41395  012E84                     _rtcc_get_seconds:
 41396                           	opt stack 17
 41397                           
 41398                           ;rtcc.c: 319: RTCCFGbits.RTCPTR1 = 0;
 41399                           
 41400                           ; BSR set to: 15
 41401                           ;incstack = 0
 41402  012E84  010F               	movlb	15	; () banked
 41403  012E86  933F               	bcf	63,1,b	;volatile
 41404                           
 41405                           ;rtcc.c: 320: RTCCFGbits.RTCPTR0 = 0;
 41406  012E88  913F               	bcf	63,0,b	;volatile
 41407  012E8A                     
 41408                           ; BSR set to: 15
 41409                           
 41410                           ; BSR set to: 15
 41411  012E8A  B93F               	btfsc	63,4,b	;volatile
 41412  012E8C  D7FE               	goto	l2379
 41413                           
 41414                           ; BSR set to: 15
 41415                           ;rtcc.c: 322: return RTCVALL;
 41416                           
 41417                           ; BSR set to: 15
 41418  012E8E  513A               	movf	58,w,b	;volatile
 41419  012E90  0012               	return	
 41420  012E92                     __end_of_rtcc_get_seconds:
 41421                           	opt stack 0
 41422                           tosu	equ	0xFFF
 41423                           tosh	equ	0xFFE
 41424                           tosl	equ	0xFFD
 41425                           pclath	equ	0xFFA
 41426                           tblptru	equ	0xFF8
 41427                           tblptrh	equ	0xFF7
 41428                           tblptrl	equ	0xFF6
 41429                           tablat	equ	0xFF5
 41430                           prodh	equ	0xFF4
 41431                           prodl	equ	0xFF3
 41432                           intcon	equ	0xFF2
 41433                           intcon2	equ	0xFF1
 41434                           intcon3	equ	0xFF0
 41435                           postinc0	equ	0xFEE
 41436                           wreg	equ	0xFE8
 41437                           indf1	equ	0xFE7
 41438                           postinc1	equ	0xFE6
 41439                           postdec1	equ	0xFE5
 41440                           plusw1	equ	0xFE3
 41441                           fsr1h	equ	0xFE2
 41442                           fsr1l	equ	0xFE1
 41443                           indf2	equ	0xFDF
 41444                           postinc2	equ	0xFDE
 41445                           postdec2	equ	0xFDD
 41446                           plusw2	equ	0xFDB
 41447                           fsr2h	equ	0xFDA
 41448                           fsr2l	equ	0xFD9
 41449                           status	equ	0xFD8
 41450                           
 41451 ;; *************** function _rtcc_get_month *****************
 41452 ;; Defined at:
 41453 ;;		line 165 in file "rtcc.c"
 41454 ;; Parameters:    Size  Location     Type
 41455 ;;		None
 41456 ;; Auto vars:     Size  Location     Type
 41457 ;;		None
 41458 ;; Return value:  Size  Location     Type
 41459 ;;                  1    wreg      unsigned char 
 41460 ;; Registers used:
 41461 ;;		wreg, status,2
 41462 ;; Tracked objects:
 41463 ;;		On entry : 0/0
 41464 ;;		On exit  : 0/0
 41465 ;;		Unchanged: 0/0
 41466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41471 ;;Total ram usage:        0 bytes
 41472 ;; Hardware stack levels used:    1
 41473 ;; Hardware stack levels required when called:   10
 41474 ;; This function calls:
 41475 ;;		Nothing
 41476 ;; This function is called by:
 41477 ;;		__fill_buffer_get_status
 41478 ;;		__display_time
 41479 ;;		__number_of_days
 41480 ;;		_rtcc_get_month_decimal
 41481 ;;		_rtcc_increment_month
 41482 ;;		_rtcc_decrement_month
 41483 ;;		_rtcc_write_eeprom
 41484 ;; This function uses a non-reentrant model
 41485 ;;
 41486                           
 41487                           	psect	text198
 41488  012E92                     __ptext198:
 41489                           	opt stack 0
 41490  012E92                     _rtcc_get_month:
 41491                           	opt stack 17
 41492                           
 41493                           ;rtcc.c: 167: RTCCFGbits.RTCPTR1 = 1;
 41494                           
 41495                           ; BSR set to: 15
 41496                           ;incstack = 0
 41497  012E92  010F               	movlb	15	; () banked
 41498  012E94  833F               	bsf	63,1,b	;volatile
 41499                           
 41500                           ;rtcc.c: 168: RTCCFGbits.RTCPTR0 = 0;
 41501  012E96  913F               	bcf	63,0,b	;volatile
 41502  012E98                     
 41503                           ; BSR set to: 15
 41504                           
 41505                           ; BSR set to: 15
 41506  012E98  B93F               	btfsc	63,4,b	;volatile
 41507  012E9A  D7FE               	goto	l2307
 41508                           
 41509                           ; BSR set to: 15
 41510                           ;rtcc.c: 170: return RTCVALH;
 41511                           
 41512                           ; BSR set to: 15
 41513  012E9C  513B               	movf	59,w,b	;volatile
 41514  012E9E  0012               	return	
 41515  012EA0                     __end_of_rtcc_get_month:
 41516                           	opt stack 0
 41517                           tosu	equ	0xFFF
 41518                           tosh	equ	0xFFE
 41519                           tosl	equ	0xFFD
 41520                           pclath	equ	0xFFA
 41521                           tblptru	equ	0xFF8
 41522                           tblptrh	equ	0xFF7
 41523                           tblptrl	equ	0xFF6
 41524                           tablat	equ	0xFF5
 41525                           prodh	equ	0xFF4
 41526                           prodl	equ	0xFF3
 41527                           intcon	equ	0xFF2
 41528                           intcon2	equ	0xFF1
 41529                           intcon3	equ	0xFF0
 41530                           postinc0	equ	0xFEE
 41531                           wreg	equ	0xFE8
 41532                           indf1	equ	0xFE7
 41533                           postinc1	equ	0xFE6
 41534                           postdec1	equ	0xFE5
 41535                           plusw1	equ	0xFE3
 41536                           fsr1h	equ	0xFE2
 41537                           fsr1l	equ	0xFE1
 41538                           indf2	equ	0xFDF
 41539                           postinc2	equ	0xFDE
 41540                           postdec2	equ	0xFDD
 41541                           plusw2	equ	0xFDB
 41542                           fsr2h	equ	0xFDA
 41543                           fsr2l	equ	0xFD9
 41544                           status	equ	0xFD8
 41545                           
 41546 ;; *************** function _rtcc_get_minutes *****************
 41547 ;; Defined at:
 41548 ;;		line 279 in file "rtcc.c"
 41549 ;; Parameters:    Size  Location     Type
 41550 ;;		None
 41551 ;; Auto vars:     Size  Location     Type
 41552 ;;		None
 41553 ;; Return value:  Size  Location     Type
 41554 ;;                  1    wreg      unsigned char 
 41555 ;; Registers used:
 41556 ;;		wreg, status,2
 41557 ;; Tracked objects:
 41558 ;;		On entry : 0/0
 41559 ;;		On exit  : 0/0
 41560 ;;		Unchanged: 0/0
 41561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41566 ;;Total ram usage:        0 bytes
 41567 ;; Hardware stack levels used:    1
 41568 ;; Hardware stack levels required when called:   10
 41569 ;; This function calls:
 41570 ;;		Nothing
 41571 ;; This function is called by:
 41572 ;;		__fill_buffer_get_status
 41573 ;;		__display_time
 41574 ;;		_rtcc_get_minutes_decimal
 41575 ;;		_rtcc_increment_minutes
 41576 ;;		_rtcc_decrement_minutes
 41577 ;;		_rtcc_write_eeprom
 41578 ;; This function uses a non-reentrant model
 41579 ;;
 41580                           
 41581                           	psect	text199
 41582  012EA0                     __ptext199:
 41583                           	opt stack 0
 41584  012EA0                     _rtcc_get_minutes:
 41585                           	opt stack 17
 41586                           
 41587                           ;rtcc.c: 281: RTCCFGbits.RTCPTR1 = 0;
 41588                           
 41589                           ; BSR set to: 15
 41590                           ;incstack = 0
 41591  012EA0  010F               	movlb	15	; () banked
 41592  012EA2  933F               	bcf	63,1,b	;volatile
 41593                           
 41594                           ;rtcc.c: 282: RTCCFGbits.RTCPTR0 = 0;
 41595  012EA4  913F               	bcf	63,0,b	;volatile
 41596  012EA6                     
 41597                           ; BSR set to: 15
 41598                           
 41599                           ; BSR set to: 15
 41600  012EA6  B93F               	btfsc	63,4,b	;volatile
 41601  012EA8  D7FE               	goto	l2361
 41602                           
 41603                           ; BSR set to: 15
 41604                           ;rtcc.c: 284: return RTCVALH;
 41605                           
 41606                           ; BSR set to: 15
 41607  012EAA  513B               	movf	59,w,b	;volatile
 41608  012EAC  0012               	return	
 41609  012EAE                     __end_of_rtcc_get_minutes:
 41610                           	opt stack 0
 41611                           tosu	equ	0xFFF
 41612                           tosh	equ	0xFFE
 41613                           tosl	equ	0xFFD
 41614                           pclath	equ	0xFFA
 41615                           tblptru	equ	0xFF8
 41616                           tblptrh	equ	0xFF7
 41617                           tblptrl	equ	0xFF6
 41618                           tablat	equ	0xFF5
 41619                           prodh	equ	0xFF4
 41620                           prodl	equ	0xFF3
 41621                           intcon	equ	0xFF2
 41622                           intcon2	equ	0xFF1
 41623                           intcon3	equ	0xFF0
 41624                           postinc0	equ	0xFEE
 41625                           wreg	equ	0xFE8
 41626                           indf1	equ	0xFE7
 41627                           postinc1	equ	0xFE6
 41628                           postdec1	equ	0xFE5
 41629                           plusw1	equ	0xFE3
 41630                           fsr1h	equ	0xFE2
 41631                           fsr1l	equ	0xFE1
 41632                           indf2	equ	0xFDF
 41633                           postinc2	equ	0xFDE
 41634                           postdec2	equ	0xFDD
 41635                           plusw2	equ	0xFDB
 41636                           fsr2h	equ	0xFDA
 41637                           fsr2l	equ	0xFD9
 41638                           status	equ	0xFD8
 41639                           
 41640 ;; *************** function _rtcc_get_hours *****************
 41641 ;; Defined at:
 41642 ;;		line 241 in file "rtcc.c"
 41643 ;; Parameters:    Size  Location     Type
 41644 ;;		None
 41645 ;; Auto vars:     Size  Location     Type
 41646 ;;		None
 41647 ;; Return value:  Size  Location     Type
 41648 ;;                  1    wreg      unsigned char 
 41649 ;; Registers used:
 41650 ;;		wreg, status,2
 41651 ;; Tracked objects:
 41652 ;;		On entry : 0/0
 41653 ;;		On exit  : 0/0
 41654 ;;		Unchanged: 0/0
 41655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41660 ;;Total ram usage:        0 bytes
 41661 ;; Hardware stack levels used:    1
 41662 ;; Hardware stack levels required when called:   10
 41663 ;; This function calls:
 41664 ;;		Nothing
 41665 ;; This function is called by:
 41666 ;;		__fill_buffer_get_status
 41667 ;;		__display_time
 41668 ;;		_rtcc_get_hours_decimal
 41669 ;;		_rtcc_increment_hours
 41670 ;;		_rtcc_decrement_hours
 41671 ;;		_rtcc_write_eeprom
 41672 ;; This function uses a non-reentrant model
 41673 ;;
 41674                           
 41675                           	psect	text200
 41676  012EAE                     __ptext200:
 41677                           	opt stack 0
 41678  012EAE                     _rtcc_get_hours:
 41679                           	opt stack 17
 41680                           
 41681                           ;rtcc.c: 243: RTCCFGbits.RTCPTR1 = 0;
 41682                           
 41683                           ; BSR set to: 15
 41684                           ;incstack = 0
 41685  012EAE  010F               	movlb	15	; () banked
 41686  012EB0  933F               	bcf	63,1,b	;volatile
 41687                           
 41688                           ;rtcc.c: 244: RTCCFGbits.RTCPTR0 = 1;
 41689  012EB2  813F               	bsf	63,0,b	;volatile
 41690  012EB4                     
 41691                           ; BSR set to: 15
 41692                           
 41693                           ; BSR set to: 15
 41694  012EB4  B93F               	btfsc	63,4,b	;volatile
 41695  012EB6  D7FE               	goto	l2343
 41696                           
 41697                           ; BSR set to: 15
 41698                           ;rtcc.c: 246: return RTCVALL;
 41699                           
 41700                           ; BSR set to: 15
 41701  012EB8  513A               	movf	58,w,b	;volatile
 41702  012EBA  0012               	return	
 41703  012EBC                     __end_of_rtcc_get_hours:
 41704                           	opt stack 0
 41705                           tosu	equ	0xFFF
 41706                           tosh	equ	0xFFE
 41707                           tosl	equ	0xFFD
 41708                           pclath	equ	0xFFA
 41709                           tblptru	equ	0xFF8
 41710                           tblptrh	equ	0xFF7
 41711                           tblptrl	equ	0xFF6
 41712                           tablat	equ	0xFF5
 41713                           prodh	equ	0xFF4
 41714                           prodl	equ	0xFF3
 41715                           intcon	equ	0xFF2
 41716                           intcon2	equ	0xFF1
 41717                           intcon3	equ	0xFF0
 41718                           postinc0	equ	0xFEE
 41719                           wreg	equ	0xFE8
 41720                           indf1	equ	0xFE7
 41721                           postinc1	equ	0xFE6
 41722                           postdec1	equ	0xFE5
 41723                           plusw1	equ	0xFE3
 41724                           fsr1h	equ	0xFE2
 41725                           fsr1l	equ	0xFE1
 41726                           indf2	equ	0xFDF
 41727                           postinc2	equ	0xFDE
 41728                           postdec2	equ	0xFDD
 41729                           plusw2	equ	0xFDB
 41730                           fsr2h	equ	0xFDA
 41731                           fsr2l	equ	0xFD9
 41732                           status	equ	0xFD8
 41733                           
 41734 ;; *************** function _rtcc_get_day *****************
 41735 ;; Defined at:
 41736 ;;		line 203 in file "rtcc.c"
 41737 ;; Parameters:    Size  Location     Type
 41738 ;;		None
 41739 ;; Auto vars:     Size  Location     Type
 41740 ;;		None
 41741 ;; Return value:  Size  Location     Type
 41742 ;;                  1    wreg      unsigned char 
 41743 ;; Registers used:
 41744 ;;		wreg, status,2
 41745 ;; Tracked objects:
 41746 ;;		On entry : 0/0
 41747 ;;		On exit  : 0/0
 41748 ;;		Unchanged: 0/0
 41749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41754 ;;Total ram usage:        0 bytes
 41755 ;; Hardware stack levels used:    1
 41756 ;; Hardware stack levels required when called:   10
 41757 ;; This function calls:
 41758 ;;		Nothing
 41759 ;; This function is called by:
 41760 ;;		__fill_buffer_get_status
 41761 ;;		__display_time
 41762 ;;		_rtcc_correct_day
 41763 ;;		_rtcc_get_day_decimal
 41764 ;;		_rtcc_increment_day
 41765 ;;		_rtcc_decrement_day
 41766 ;;		_rtcc_read_eeprom
 41767 ;;		_rtcc_write_eeprom
 41768 ;; This function uses a non-reentrant model
 41769 ;;
 41770                           
 41771                           	psect	text201
 41772  012EBC                     __ptext201:
 41773                           	opt stack 0
 41774  012EBC                     _rtcc_get_day:
 41775                           	opt stack 17
 41776                           
 41777                           ;rtcc.c: 205: RTCCFGbits.RTCPTR1 = 1;
 41778                           
 41779                           ; BSR set to: 15
 41780                           ;incstack = 0
 41781  012EBC  010F               	movlb	15	; () banked
 41782  012EBE  833F               	bsf	63,1,b	;volatile
 41783                           
 41784                           ;rtcc.c: 206: RTCCFGbits.RTCPTR0 = 0;
 41785  012EC0  913F               	bcf	63,0,b	;volatile
 41786  012EC2                     
 41787                           ; BSR set to: 15
 41788                           
 41789                           ; BSR set to: 15
 41790  012EC2  B93F               	btfsc	63,4,b	;volatile
 41791  012EC4  D7FE               	goto	l2325
 41792                           
 41793                           ; BSR set to: 15
 41794                           ;rtcc.c: 208: return RTCVALL;
 41795                           
 41796                           ; BSR set to: 15
 41797  012EC6  513A               	movf	58,w,b	;volatile
 41798  012EC8  0012               	return	
 41799  012ECA                     __end_of_rtcc_get_day:
 41800                           	opt stack 0
 41801                           tosu	equ	0xFFF
 41802                           tosh	equ	0xFFE
 41803                           tosl	equ	0xFFD
 41804                           pclath	equ	0xFFA
 41805                           tblptru	equ	0xFF8
 41806                           tblptrh	equ	0xFF7
 41807                           tblptrl	equ	0xFF6
 41808                           tablat	equ	0xFF5
 41809                           prodh	equ	0xFF4
 41810                           prodl	equ	0xFF3
 41811                           intcon	equ	0xFF2
 41812                           intcon2	equ	0xFF1
 41813                           intcon3	equ	0xFF0
 41814                           postinc0	equ	0xFEE
 41815                           wreg	equ	0xFE8
 41816                           indf1	equ	0xFE7
 41817                           postinc1	equ	0xFE6
 41818                           postdec1	equ	0xFE5
 41819                           plusw1	equ	0xFE3
 41820                           fsr1h	equ	0xFE2
 41821                           fsr1l	equ	0xFE1
 41822                           indf2	equ	0xFDF
 41823                           postinc2	equ	0xFDE
 41824                           postdec2	equ	0xFDD
 41825                           plusw2	equ	0xFDB
 41826                           fsr2h	equ	0xFDA
 41827                           fsr2l	equ	0xFD9
 41828                           status	equ	0xFD8
 41829                           
 41830 ;; *************** function _buck_remote_get_status *****************
 41831 ;; Defined at:
 41832 ;;		line 650 in file "buck.c"
 41833 ;; Parameters:    Size  Location     Type
 41834 ;;		None
 41835 ;; Auto vars:     Size  Location     Type
 41836 ;;  retval          1    0[BANK0 ] unsigned char 
 41837 ;; Return value:  Size  Location     Type
 41838 ;;                  1    wreg      unsigned char 
 41839 ;; Registers used:
 41840 ;;		wreg, status,2, status,0
 41841 ;; Tracked objects:
 41842 ;;		On entry : 0/0
 41843 ;;		On exit  : 0/0
 41844 ;;		Unchanged: 0/0
 41845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41850 ;;Total ram usage:        1 bytes
 41851 ;; Hardware stack levels used:    1
 41852 ;; Hardware stack levels required when called:   10
 41853 ;; This function calls:
 41854 ;;		Nothing
 41855 ;; This function is called by:
 41856 ;;		__fill_buffer_get_status
 41857 ;; This function uses a non-reentrant model
 41858 ;;
 41859                           
 41860                           	psect	text202
 41861  012752                     __ptext202:
 41862                           	opt stack 0
 41863  012752                     _buck_remote_get_status:
 41864                           	opt stack 18
 41865                           
 41866                           ;buck.c: 652: uint8_t retval = 0x00;
 41867                           
 41868                           ; BSR set to: 15
 41869                           ;incstack = 0
 41870  012752  0E00               	movlw	0
 41871  012754  0100               	movlb	0	; () banked
 41872  012756  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 41873                           
 41874                           ;buck.c: 653: if(buck_remote_enable)
 41875  012758  0101               	movlb	1	; () banked
 41876  01275A  51ED               	movf	_buck_remote_enable& (0+255),w,b
 41877  01275C  B4D8               	btfsc	status,2,c
 41878  01275E  D002               	goto	l2649
 41879                           
 41880                           ; BSR set to: 1
 41881                           ;buck.c: 654: retval |= 0x01;
 41882  012760  0100               	movlb	0	; () banked
 41883  012762  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 41884  012764                     l2649:
 41885                           
 41886                           ;buck.c: 655: if(buck_remote_on)
 41887                           
 41888                           ; BSR set to: 0
 41889  012764  504E               	movf	_buck_remote_on,w,c
 41890  012766  B4D8               	btfsc	status,2,c
 41891  012768  D002               	goto	l2650
 41892                           
 41893                           ;buck.c: 656: retval |= 0x02;
 41894  01276A  0100               	movlb	0	; () banked
 41895  01276C  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 41896  01276E                     l2650:
 41897                           
 41898                           ;buck.c: 657: if(buck_remote_synchronous)
 41899                           
 41900                           ; BSR set to: 0
 41901  01276E  504D               	movf	_buck_remote_synchronous,w,c
 41902  012770  B4D8               	btfsc	status,2,c
 41903  012772  D003               	goto	l2651
 41904                           
 41905                           ;buck.c: 658: retval |= 0x03;
 41906  012774  0E03               	movlw	3
 41907  012776  0100               	movlb	0	; () banked
 41908  012778  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 41909  01277A                     l2651:
 41910                           
 41911                           ;buck.c: 659: return retval;
 41912                           
 41913                           ; BSR set to: 0
 41914  01277A  0100               	movlb	0	; () banked
 41915  01277C  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 41916  01277E  0012               	return	
 41917  012780                     __end_of_buck_remote_get_status:
 41918                           	opt stack 0
 41919                           tosu	equ	0xFFF
 41920                           tosh	equ	0xFFE
 41921                           tosl	equ	0xFFD
 41922                           pclath	equ	0xFFA
 41923                           tblptru	equ	0xFF8
 41924                           tblptrh	equ	0xFF7
 41925                           tblptrl	equ	0xFF6
 41926                           tablat	equ	0xFF5
 41927                           prodh	equ	0xFF4
 41928                           prodl	equ	0xFF3
 41929                           intcon	equ	0xFF2
 41930                           intcon2	equ	0xFF1
 41931                           intcon3	equ	0xFF0
 41932                           postinc0	equ	0xFEE
 41933                           wreg	equ	0xFE8
 41934                           indf1	equ	0xFE7
 41935                           postinc1	equ	0xFE6
 41936                           postdec1	equ	0xFE5
 41937                           plusw1	equ	0xFE3
 41938                           fsr1h	equ	0xFE2
 41939                           fsr1l	equ	0xFE1
 41940                           indf2	equ	0xFDF
 41941                           postinc2	equ	0xFDE
 41942                           postdec2	equ	0xFDD
 41943                           plusw2	equ	0xFDB
 41944                           fsr2h	equ	0xFDA
 41945                           fsr2l	equ	0xFD9
 41946                           status	equ	0xFD8
 41947                           
 41948 ;; *************** function _buck_remote_get_dutycycle *****************
 41949 ;; Defined at:
 41950 ;;		line 662 in file "buck.c"
 41951 ;; Parameters:    Size  Location     Type
 41952 ;;		None
 41953 ;; Auto vars:     Size  Location     Type
 41954 ;;		None
 41955 ;; Return value:  Size  Location     Type
 41956 ;;                  1    wreg      unsigned char 
 41957 ;; Registers used:
 41958 ;;		wreg, status,2
 41959 ;; Tracked objects:
 41960 ;;		On entry : 0/0
 41961 ;;		On exit  : 0/0
 41962 ;;		Unchanged: 0/0
 41963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41968 ;;Total ram usage:        0 bytes
 41969 ;; Hardware stack levels used:    1
 41970 ;; Hardware stack levels required when called:   10
 41971 ;; This function calls:
 41972 ;;		Nothing
 41973 ;; This function is called by:
 41974 ;;		__fill_buffer_get_status
 41975 ;; This function uses a non-reentrant model
 41976 ;;
 41977                           
 41978                           	psect	text203
 41979  012F46                     __ptext203:
 41980                           	opt stack 0
 41981  012F46                     _buck_remote_get_dutycycle:
 41982                           	opt stack 18
 41983                           
 41984                           ;buck.c: 664: return buck_remote_dutycycle;
 41985                           
 41986                           ; BSR set to: 0
 41987                           ;incstack = 0
 41988  012F46  0100               	movlb	0	; () banked
 41989  012F48  51FD               	movf	_buck_remote_dutycycle& (0+255),w,b
 41990  012F4A  0012               	return	
 41991  012F4C                     __end_of_buck_remote_get_dutycycle:
 41992                           	opt stack 0
 41993                           tosu	equ	0xFFF
 41994                           tosh	equ	0xFFE
 41995                           tosl	equ	0xFFD
 41996                           pclath	equ	0xFFA
 41997                           tblptru	equ	0xFF8
 41998                           tblptrh	equ	0xFF7
 41999                           tblptrl	equ	0xFF6
 42000                           tablat	equ	0xFF5
 42001                           prodh	equ	0xFF4
 42002                           prodl	equ	0xFF3
 42003                           intcon	equ	0xFF2
 42004                           intcon2	equ	0xFF1
 42005                           intcon3	equ	0xFF0
 42006                           postinc0	equ	0xFEE
 42007                           wreg	equ	0xFE8
 42008                           indf1	equ	0xFE7
 42009                           postinc1	equ	0xFE6
 42010                           postdec1	equ	0xFE5
 42011                           plusw1	equ	0xFE3
 42012                           fsr1h	equ	0xFE2
 42013                           fsr1l	equ	0xFE1
 42014                           indf2	equ	0xFDF
 42015                           postinc2	equ	0xFDE
 42016                           postdec2	equ	0xFDD
 42017                           plusw2	equ	0xFDB
 42018                           fsr2h	equ	0xFDA
 42019                           fsr2l	equ	0xFD9
 42020                           status	equ	0xFD8
 42021                           
 42022 ;; *************** function _buck_get_mode *****************
 42023 ;; Defined at:
 42024 ;;		line 597 in file "buck.c"
 42025 ;; Parameters:    Size  Location     Type
 42026 ;;		None
 42027 ;; Auto vars:     Size  Location     Type
 42028 ;;		None
 42029 ;; Return value:  Size  Location     Type
 42030 ;;                  1    wreg      enum E9576
 42031 ;; Registers used:
 42032 ;;		wreg, status,2
 42033 ;; Tracked objects:
 42034 ;;		On entry : 0/0
 42035 ;;		On exit  : 0/0
 42036 ;;		Unchanged: 0/0
 42037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42042 ;;Total ram usage:        0 bytes
 42043 ;; Hardware stack levels used:    1
 42044 ;; Hardware stack levels required when called:   10
 42045 ;; This function calls:
 42046 ;;		Nothing
 42047 ;; This function is called by:
 42048 ;;		_main
 42049 ;;		__fill_buffer_get_status
 42050 ;;		_system_calculate_input_current
 42051 ;;		_system_calculate_output_current
 42052 ;;		__display_inout
 42053 ;;		__display_charger
 42054 ;;		_log_collect_data
 42055 ;; This function uses a non-reentrant model
 42056 ;;
 42057                           
 42058                           	psect	text204
 42059  012F4C                     __ptext204:
 42060                           	opt stack 0
 42061  012F4C                     _buck_get_mode:
 42062                           	opt stack 19
 42063                           
 42064                           ;buck.c: 599: return buck_status;
 42065                           
 42066                           ; BSR set to: 0
 42067                           ;incstack = 0
 42068  012F4C  0100               	movlb	0	; () banked
 42069  012F4E  51FF               	movf	_buck_status& (0+255),w,b
 42070  012F50  0012               	return	
 42071  012F52                     __end_of_buck_get_mode:
 42072                           	opt stack 0
 42073                           tosu	equ	0xFFF
 42074                           tosh	equ	0xFFE
 42075                           tosl	equ	0xFFD
 42076                           pclath	equ	0xFFA
 42077                           tblptru	equ	0xFF8
 42078                           tblptrh	equ	0xFF7
 42079                           tblptrl	equ	0xFF6
 42080                           tablat	equ	0xFF5
 42081                           prodh	equ	0xFF4
 42082                           prodl	equ	0xFF3
 42083                           intcon	equ	0xFF2
 42084                           intcon2	equ	0xFF1
 42085                           intcon3	equ	0xFF0
 42086                           postinc0	equ	0xFEE
 42087                           wreg	equ	0xFE8
 42088                           indf1	equ	0xFE7
 42089                           postinc1	equ	0xFE6
 42090                           postdec1	equ	0xFE5
 42091                           plusw1	equ	0xFE3
 42092                           fsr1h	equ	0xFE2
 42093                           fsr1l	equ	0xFE1
 42094                           indf2	equ	0xFDF
 42095                           postinc2	equ	0xFDE
 42096                           postdec2	equ	0xFDD
 42097                           plusw2	equ	0xFDB
 42098                           fsr2h	equ	0xFDA
 42099                           fsr2l	equ	0xFD9
 42100                           status	equ	0xFD8
 42101                           
 42102 ;; *************** function _buck_get_dutycycle *****************
 42103 ;; Defined at:
 42104 ;;		line 592 in file "buck.c"
 42105 ;; Parameters:    Size  Location     Type
 42106 ;;		None
 42107 ;; Auto vars:     Size  Location     Type
 42108 ;;		None
 42109 ;; Return value:  Size  Location     Type
 42110 ;;                  1    wreg      unsigned char 
 42111 ;; Registers used:
 42112 ;;		wreg, status,2
 42113 ;; Tracked objects:
 42114 ;;		On entry : 0/0
 42115 ;;		On exit  : 0/0
 42116 ;;		Unchanged: 0/0
 42117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42122 ;;Total ram usage:        0 bytes
 42123 ;; Hardware stack levels used:    1
 42124 ;; Hardware stack levels required when called:   10
 42125 ;; This function calls:
 42126 ;;		Nothing
 42127 ;; This function is called by:
 42128 ;;		__fill_buffer_get_status
 42129 ;;		__display_charger
 42130 ;; This function uses a non-reentrant model
 42131 ;;
 42132                           
 42133                           	psect	text205
 42134  012F52                     __ptext205:
 42135                           	opt stack 0
 42136  012F52                     _buck_get_dutycycle:
 42137                           	opt stack 18
 42138                           
 42139                           ;buck.c: 594: return buck_dutycycle;
 42140                           
 42141                           ; BSR set to: 0
 42142                           ;incstack = 0
 42143  012F52  0100               	movlb	0	; () banked
 42144  012F54  51FE               	movf	_buck_dutycycle& (0+255),w,b
 42145  012F56  0012               	return	
 42146  012F58                     __end_of_buck_get_dutycycle:
 42147                           	opt stack 0
 42148                           tosu	equ	0xFFF
 42149                           tosh	equ	0xFFE
 42150                           tosl	equ	0xFFD
 42151                           pclath	equ	0xFFA
 42152                           tblptru	equ	0xFF8
 42153                           tblptrh	equ	0xFF7
 42154                           tblptrl	equ	0xFF6
 42155                           tablat	equ	0xFF5
 42156                           prodh	equ	0xFF4
 42157                           prodl	equ	0xFF3
 42158                           intcon	equ	0xFF2
 42159                           intcon2	equ	0xFF1
 42160                           intcon3	equ	0xFF0
 42161                           postinc0	equ	0xFEE
 42162                           wreg	equ	0xFE8
 42163                           indf1	equ	0xFE7
 42164                           postinc1	equ	0xFE6
 42165                           postdec1	equ	0xFE5
 42166                           plusw1	equ	0xFE3
 42167                           fsr1h	equ	0xFE2
 42168                           fsr1l	equ	0xFE1
 42169                           indf2	equ	0xFDF
 42170                           postinc2	equ	0xFDE
 42171                           postdec2	equ	0xFDD
 42172                           plusw2	equ	0xFDB
 42173                           fsr2h	equ	0xFDA
 42174                           fsr2l	equ	0xFD9
 42175                           status	equ	0xFD8
 42176                           
 42177 ;; *************** function __fill_buffer_get_display2 *****************
 42178 ;; Defined at:
 42179 ;;		line 353 in file "app_device_custom_hid.c"
 42180 ;; Parameters:    Size  Location     Type
 42181 ;;		None
 42182 ;; Auto vars:     Size  Location     Type
 42183 ;;  position        1    7[BANK0 ] unsigned char 
 42184 ;;  line            1    6[BANK0 ] unsigned char 
 42185 ;;  cntr            1    5[BANK0 ] unsigned char 
 42186 ;; Return value:  Size  Location     Type
 42187 ;;                  1    wreg      void 
 42188 ;; Registers used:
 42189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42190 ;; Tracked objects:
 42191 ;;		On entry : 0/0
 42192 ;;		On exit  : 0/0
 42193 ;;		Unchanged: 0/0
 42194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42196 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42197 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42198 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42199 ;;Total ram usage:        4 bytes
 42200 ;; Hardware stack levels used:    1
 42201 ;; Hardware stack levels required when called:   11
 42202 ;; This function calls:
 42203 ;;		_display_get_character
 42204 ;; This function is called by:
 42205 ;;		_APP_DeviceCustomHIDTasks
 42206 ;; This function uses a non-reentrant model
 42207 ;;
 42208                           
 42209                           	psect	text206
 42210  011F4A                     __ptext206:
 42211                           	opt stack 0
 42212  011F4A                     __fill_buffer_get_display2:
 42213                           	opt stack 18
 42214                           
 42215                           ;app_device_custom_hid.c: 355: uint8_t cntr;
 42216                           ;app_device_custom_hid.c: 356: uint8_t line;
 42217                           ;app_device_custom_hid.c: 357: uint8_t position;
 42218                           ;app_device_custom_hid.c: 360: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 42219                           
 42220                           ; BSR set to: 0
 42221                           ;incstack = 0
 42222  011F4A  0E12               	movlw	18
 42223  011F4C  0103               	movlb	3	; () banked
 42224  011F4E  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42225                           
 42226                           ;app_device_custom_hid.c: 363: cntr = 1;
 42227  011F50  0E01               	movlw	1
 42228  011F52  0100               	movlb	0	; () banked
 42229  011F54  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 42230                           
 42231                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 42232  011F56  0E02               	movlw	2
 42233  011F58  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 42234  011F5A                     l14595:
 42235                           
 42236                           ; BSR set to: 0
 42237  011F5A  0E03               	movlw	3
 42238  011F5C  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 42239  011F5E  D001               	goto	l1130
 42240  011F60  0012               	return	
 42241  011F62                     l1130:
 42242                           
 42243                           ; BSR set to: 0
 42244                           ;app_device_custom_hid.c: 365: {
 42245                           ;app_device_custom_hid.c: 366: for(position=0; position<20; ++position)
 42246                           
 42247                           ; BSR set to: 0
 42248  011F62  0E00               	movlw	0
 42249  011F64  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 42250  011F66                     l14601:
 42251                           
 42252                           ; BSR set to: 0
 42253  011F66  0E13               	movlw	19
 42254  011F68  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 42255  011F6A  D001               	goto	l1132
 42256  011F6C  D014               	goto	u12630
 42257  011F6E                     l1132:
 42258                           
 42259                           ; BSR set to: 0
 42260                           ;app_device_custom_hid.c: 367: {
 42261                           ;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 42262                           
 42263                           ; BSR set to: 0
 42264  011F6E  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 42265  011F72  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 42266  011F74  ECC0  F093         	call	_display_get_character
 42267  011F78  0100               	movlb	0	; () banked
 42268  011F7A  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 42269  011F7C  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 42270  011F7E  0D01               	mullw	1
 42271  011F80  0EA4               	movlw	low _ToSendDataBuffer
 42272  011F82  24F3               	addwf	prodl,w,c
 42273  011F84  6ED9               	movwf	fsr2l,c
 42274  011F86  0E03               	movlw	high _ToSendDataBuffer
 42275  011F88  20F4               	addwfc	prodh,w,c
 42276  011F8A  6EDA               	movwf	fsr2h,c
 42277  011F8C  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 42278                           
 42279                           ; BSR set to: 0
 42280                           ;app_device_custom_hid.c: 369: ++cntr;
 42281  011F90  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 42282                           
 42283                           ; BSR set to: 0
 42284  011F92  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 42285  011F94  D7E8               	goto	l14601
 42286  011F96                     u12630:
 42287                           
 42288                           ; BSR set to: 0
 42289                           
 42290                           ; BSR set to: 0
 42291  011F96  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 42292  011F98  D7E0               	goto	l14595
 42293  011F9A                     __end_of__fill_buffer_get_display2:
 42294                           	opt stack 0
 42295                           tosu	equ	0xFFF
 42296                           tosh	equ	0xFFE
 42297                           tosl	equ	0xFFD
 42298                           pclath	equ	0xFFA
 42299                           tblptru	equ	0xFF8
 42300                           tblptrh	equ	0xFF7
 42301                           tblptrl	equ	0xFF6
 42302                           tablat	equ	0xFF5
 42303                           prodh	equ	0xFF4
 42304                           prodl	equ	0xFF3
 42305                           intcon	equ	0xFF2
 42306                           intcon2	equ	0xFF1
 42307                           intcon3	equ	0xFF0
 42308                           postinc0	equ	0xFEE
 42309                           wreg	equ	0xFE8
 42310                           indf1	equ	0xFE7
 42311                           postinc1	equ	0xFE6
 42312                           postdec1	equ	0xFE5
 42313                           plusw1	equ	0xFE3
 42314                           fsr1h	equ	0xFE2
 42315                           fsr1l	equ	0xFE1
 42316                           indf2	equ	0xFDF
 42317                           postinc2	equ	0xFDE
 42318                           postdec2	equ	0xFDD
 42319                           plusw2	equ	0xFDB
 42320                           fsr2h	equ	0xFDA
 42321                           fsr2l	equ	0xFD9
 42322                           status	equ	0xFD8
 42323                           
 42324 ;; *************** function __fill_buffer_get_display1 *****************
 42325 ;; Defined at:
 42326 ;;		line 331 in file "app_device_custom_hid.c"
 42327 ;; Parameters:    Size  Location     Type
 42328 ;;		None
 42329 ;; Auto vars:     Size  Location     Type
 42330 ;;  position        1    7[BANK0 ] unsigned char 
 42331 ;;  line            1    6[BANK0 ] unsigned char 
 42332 ;;  cntr            1    5[BANK0 ] unsigned char 
 42333 ;; Return value:  Size  Location     Type
 42334 ;;                  1    wreg      void 
 42335 ;; Registers used:
 42336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42337 ;; Tracked objects:
 42338 ;;		On entry : 0/0
 42339 ;;		On exit  : 0/0
 42340 ;;		Unchanged: 0/0
 42341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42343 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42345 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42346 ;;Total ram usage:        4 bytes
 42347 ;; Hardware stack levels used:    1
 42348 ;; Hardware stack levels required when called:   11
 42349 ;; This function calls:
 42350 ;;		_display_get_character
 42351 ;; This function is called by:
 42352 ;;		_APP_DeviceCustomHIDTasks
 42353 ;; This function uses a non-reentrant model
 42354 ;;
 42355                           
 42356                           	psect	text207
 42357  011F9A                     __ptext207:
 42358                           	opt stack 0
 42359  011F9A                     __fill_buffer_get_display1:
 42360                           	opt stack 18
 42361                           
 42362                           ;app_device_custom_hid.c: 333: uint8_t cntr;
 42363                           ;app_device_custom_hid.c: 334: uint8_t line;
 42364                           ;app_device_custom_hid.c: 335: uint8_t position;
 42365                           ;app_device_custom_hid.c: 338: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 42366                           
 42367                           ; BSR set to: 0
 42368                           ;incstack = 0
 42369  011F9A  0E11               	movlw	17
 42370  011F9C  0103               	movlb	3	; () banked
 42371  011F9E  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42372                           
 42373                           ;app_device_custom_hid.c: 341: cntr = 1;
 42374  011FA0  0E01               	movlw	1
 42375  011FA2  0100               	movlb	0	; () banked
 42376  011FA4  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 42377                           
 42378                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 42379  011FA6  0E00               	movlw	0
 42380  011FA8  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 42381  011FAA                     l14571:
 42382                           
 42383                           ; BSR set to: 0
 42384  011FAA  0E01               	movlw	1
 42385  011FAC  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 42386  011FAE  D001               	goto	l1123
 42387  011FB0  0012               	return	
 42388  011FB2                     l1123:
 42389                           
 42390                           ; BSR set to: 0
 42391                           ;app_device_custom_hid.c: 343: {
 42392                           ;app_device_custom_hid.c: 344: for(position=0; position<20; ++position)
 42393                           
 42394                           ; BSR set to: 0
 42395  011FB2  0E00               	movlw	0
 42396  011FB4  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 42397  011FB6                     l14577:
 42398                           
 42399                           ; BSR set to: 0
 42400  011FB6  0E13               	movlw	19
 42401  011FB8  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 42402  011FBA  D001               	goto	l1125
 42403  011FBC  D014               	goto	u12590
 42404  011FBE                     l1125:
 42405                           
 42406                           ; BSR set to: 0
 42407                           ;app_device_custom_hid.c: 345: {
 42408                           ;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 42409                           
 42410                           ; BSR set to: 0
 42411  011FBE  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 42412  011FC2  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 42413  011FC4  ECC0  F093         	call	_display_get_character
 42414  011FC8  0100               	movlb	0	; () banked
 42415  011FCA  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 42416  011FCC  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 42417  011FCE  0D01               	mullw	1
 42418  011FD0  0EA4               	movlw	low _ToSendDataBuffer
 42419  011FD2  24F3               	addwf	prodl,w,c
 42420  011FD4  6ED9               	movwf	fsr2l,c
 42421  011FD6  0E03               	movlw	high _ToSendDataBuffer
 42422  011FD8  20F4               	addwfc	prodh,w,c
 42423  011FDA  6EDA               	movwf	fsr2h,c
 42424  011FDC  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 42425                           
 42426                           ; BSR set to: 0
 42427                           ;app_device_custom_hid.c: 347: ++cntr;
 42428  011FE0  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 42429                           
 42430                           ; BSR set to: 0
 42431  011FE2  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 42432  011FE4  D7E8               	goto	l14577
 42433  011FE6                     u12590:
 42434                           
 42435                           ; BSR set to: 0
 42436                           
 42437                           ; BSR set to: 0
 42438  011FE6  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 42439  011FE8  D7E0               	goto	l14571
 42440  011FEA                     __end_of__fill_buffer_get_display1:
 42441                           	opt stack 0
 42442                           tosu	equ	0xFFF
 42443                           tosh	equ	0xFFE
 42444                           tosl	equ	0xFFD
 42445                           pclath	equ	0xFFA
 42446                           tblptru	equ	0xFF8
 42447                           tblptrh	equ	0xFF7
 42448                           tblptrl	equ	0xFF6
 42449                           tablat	equ	0xFF5
 42450                           prodh	equ	0xFF4
 42451                           prodl	equ	0xFF3
 42452                           intcon	equ	0xFF2
 42453                           intcon2	equ	0xFF1
 42454                           intcon3	equ	0xFF0
 42455                           postinc0	equ	0xFEE
 42456                           wreg	equ	0xFE8
 42457                           indf1	equ	0xFE7
 42458                           postinc1	equ	0xFE6
 42459                           postdec1	equ	0xFE5
 42460                           plusw1	equ	0xFE3
 42461                           fsr1h	equ	0xFE2
 42462                           fsr1l	equ	0xFE1
 42463                           indf2	equ	0xFDF
 42464                           postinc2	equ	0xFDE
 42465                           postdec2	equ	0xFDD
 42466                           plusw2	equ	0xFDB
 42467                           fsr2h	equ	0xFDA
 42468                           fsr2l	equ	0xFD9
 42469                           status	equ	0xFD8
 42470                           
 42471 ;; *************** function _display_get_character *****************
 42472 ;; Defined at:
 42473 ;;		line 23 in file "display.c"
 42474 ;; Parameters:    Size  Location     Type
 42475 ;;  line            1    wreg     unsigned char 
 42476 ;;  position        1    0[BANK0 ] unsigned char 
 42477 ;; Auto vars:     Size  Location     Type
 42478 ;;  line            1    3[BANK0 ] unsigned char 
 42479 ;; Return value:  Size  Location     Type
 42480 ;;                  1    wreg      unsigned char 
 42481 ;; Registers used:
 42482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42483 ;; Tracked objects:
 42484 ;;		On entry : 0/0
 42485 ;;		On exit  : 0/0
 42486 ;;		Unchanged: 0/0
 42487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42488 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42491 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42492 ;;Total ram usage:        4 bytes
 42493 ;; Hardware stack levels used:    1
 42494 ;; Hardware stack levels required when called:   10
 42495 ;; This function calls:
 42496 ;;		Nothing
 42497 ;; This function is called by:
 42498 ;;		__fill_buffer_get_display1
 42499 ;;		__fill_buffer_get_display2
 42500 ;; This function uses a non-reentrant model
 42501 ;;
 42502                           
 42503                           	psect	text208
 42504  012780                     __ptext208:
 42505                           	opt stack 0
 42506  012780                     _display_get_character:
 42507                           	opt stack 18
 42508                           
 42509                           ; BSR set to: 0
 42510                           ;incstack = 0
 42511                           ;display_get_character@line stored from wreg
 42512  012780  0100               	movlb	0	; () banked
 42513  012782  6F63               	movwf	display_get_character@line& (0+255),b
 42514                           
 42515                           ;display.c: 25: return display_content[line][position];
 42516  012784  0100               	movlb	0	; () banked
 42517  012786  5163               	movf	display_get_character@line& (0+255),w,b
 42518  012788  0D14               	mullw	20
 42519  01278A  0E54               	movlw	low _display_content
 42520  01278C  6F61               	movwf	??_display_get_character& (0+255),b
 42521  01278E  0E03               	movlw	high _display_content
 42522  012790  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42523  012792  50F3               	movf	prodl,w,c
 42524  012794  2761               	addwf	??_display_get_character& (0+255),f,b
 42525  012796  50F4               	movf	prodh,w,c
 42526  012798  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42527  01279A  5160               	movf	display_get_character@position& (0+255),w,b
 42528  01279C  0D01               	mullw	1
 42529  01279E  50F3               	movf	prodl,w,c
 42530  0127A0  2561               	addwf	??_display_get_character& (0+255),w,b
 42531  0127A2  6ED9               	movwf	fsr2l,c
 42532  0127A4  50F4               	movf	prodh,w,c
 42533  0127A6  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42534  0127A8  6EDA               	movwf	fsr2h,c
 42535  0127AA  50DF               	movf	indf2,w,c
 42536  0127AC  0012               	return	
 42537  0127AE                     __end_of_display_get_character:
 42538                           	opt stack 0
 42539                           tosu	equ	0xFFF
 42540                           tosh	equ	0xFFE
 42541                           tosl	equ	0xFFD
 42542                           pclath	equ	0xFFA
 42543                           tblptru	equ	0xFF8
 42544                           tblptrh	equ	0xFF7
 42545                           tblptrl	equ	0xFF6
 42546                           tablat	equ	0xFF5
 42547                           prodh	equ	0xFF4
 42548                           prodl	equ	0xFF3
 42549                           intcon	equ	0xFF2
 42550                           intcon2	equ	0xFF1
 42551                           intcon3	equ	0xFF0
 42552                           postinc0	equ	0xFEE
 42553                           wreg	equ	0xFE8
 42554                           indf1	equ	0xFE7
 42555                           postinc1	equ	0xFE6
 42556                           postdec1	equ	0xFE5
 42557                           plusw1	equ	0xFE3
 42558                           fsr1h	equ	0xFE2
 42559                           fsr1l	equ	0xFE1
 42560                           indf2	equ	0xFDF
 42561                           postinc2	equ	0xFDE
 42562                           postdec2	equ	0xFDD
 42563                           plusw2	equ	0xFDB
 42564                           fsr2h	equ	0xFDA
 42565                           fsr2l	equ	0xFD9
 42566                           status	equ	0xFD8
 42567                           
 42568 ;; *************** function __fill_buffer_get_calibration2 *****************
 42569 ;; Defined at:
 42570 ;;		line 388 in file "app_device_custom_hid.c"
 42571 ;; Parameters:    Size  Location     Type
 42572 ;;		None
 42573 ;; Auto vars:     Size  Location     Type
 42574 ;;		None
 42575 ;; Return value:  Size  Location     Type
 42576 ;;                  1    wreg      void 
 42577 ;; Registers used:
 42578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42579 ;; Tracked objects:
 42580 ;;		On entry : 0/0
 42581 ;;		On exit  : 0/0
 42582 ;;		Unchanged: 0/0
 42583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42588 ;;Total ram usage:        0 bytes
 42589 ;; Hardware stack levels used:    1
 42590 ;; Hardware stack levels required when called:   11
 42591 ;; This function calls:
 42592 ;;		_memcpy
 42593 ;; This function is called by:
 42594 ;;		_APP_DeviceCustomHIDTasks
 42595 ;; This function uses a non-reentrant model
 42596 ;;
 42597                           
 42598                           	psect	text209
 42599  011650                     __ptext209:
 42600                           	opt stack 0
 42601  011650                     __fill_buffer_get_calibration2:
 42602                           	opt stack 18
 42603                           
 42604                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 42605                           
 42606                           ; BSR set to: 0
 42607                           ;incstack = 0
 42608  011650  0E14               	movlw	20
 42609  011652  0103               	movlb	3	; () banked
 42610  011654  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42611                           
 42612                           ; BSR set to: 3
 42613                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 42614  011656  0EA5               	movlw	low (_ToSendDataBuffer+1)
 42615  011658  0100               	movlb	0	; () banked
 42616  01165A  6F60               	movwf	memcpy@d1& (0+255),b
 42617  01165C  0E03               	movlw	high (_ToSendDataBuffer+1)
 42618  01165E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42619  011660  0E30               	movlw	low (_calibrationParameters+48)
 42620  011662  6F62               	movwf	memcpy@s1& (0+255),b
 42621  011664  0E03               	movlw	high (_calibrationParameters+48)
 42622  011666  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42623  011668  0E00               	movlw	0
 42624  01166A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42625  01166C  0E0C               	movlw	12
 42626  01166E  6F64               	movwf	memcpy@n& (0+255),b
 42627  011670  ECBB  F08B         	call	_memcpy	;wreg free
 42628                           
 42629                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 42630  011674  0EB1               	movlw	low (_ToSendDataBuffer+13)
 42631  011676  0100               	movlb	0	; () banked
 42632  011678  6F60               	movwf	memcpy@d1& (0+255),b
 42633  01167A  0E03               	movlw	high (_ToSendDataBuffer+13)
 42634  01167C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42635  01167E  0E3C               	movlw	low (_calibrationParameters+60)
 42636  011680  6F62               	movwf	memcpy@s1& (0+255),b
 42637  011682  0E03               	movlw	high (_calibrationParameters+60)
 42638  011684  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42639  011686  0E00               	movlw	0
 42640  011688  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42641  01168A  0E0C               	movlw	12
 42642  01168C  6F64               	movwf	memcpy@n& (0+255),b
 42643  01168E  ECBB  F08B         	call	_memcpy	;wreg free
 42644                           
 42645                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 42646  011692  0EBD               	movlw	low (_ToSendDataBuffer+25)
 42647  011694  0100               	movlb	0	; () banked
 42648  011696  6F60               	movwf	memcpy@d1& (0+255),b
 42649  011698  0E03               	movlw	high (_ToSendDataBuffer+25)
 42650  01169A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42651  01169C  0E48               	movlw	low (_calibrationParameters+72)
 42652  01169E  6F62               	movwf	memcpy@s1& (0+255),b
 42653  0116A0  0E03               	movlw	high (_calibrationParameters+72)
 42654  0116A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42655  0116A4  0E00               	movlw	0
 42656  0116A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42657  0116A8  0E0C               	movlw	12
 42658  0116AA  6F64               	movwf	memcpy@n& (0+255),b
 42659  0116AC  ECBB  F08B         	call	_memcpy	;wreg free
 42660  0116B0  0012               	return		;funcret
 42661  0116B2                     __end_of__fill_buffer_get_calibration2:
 42662                           	opt stack 0
 42663                           tosu	equ	0xFFF
 42664                           tosh	equ	0xFFE
 42665                           tosl	equ	0xFFD
 42666                           pclath	equ	0xFFA
 42667                           tblptru	equ	0xFF8
 42668                           tblptrh	equ	0xFF7
 42669                           tblptrl	equ	0xFF6
 42670                           tablat	equ	0xFF5
 42671                           prodh	equ	0xFF4
 42672                           prodl	equ	0xFF3
 42673                           intcon	equ	0xFF2
 42674                           intcon2	equ	0xFF1
 42675                           intcon3	equ	0xFF0
 42676                           postinc0	equ	0xFEE
 42677                           wreg	equ	0xFE8
 42678                           indf1	equ	0xFE7
 42679                           postinc1	equ	0xFE6
 42680                           postdec1	equ	0xFE5
 42681                           plusw1	equ	0xFE3
 42682                           fsr1h	equ	0xFE2
 42683                           fsr1l	equ	0xFE1
 42684                           indf2	equ	0xFDF
 42685                           postinc2	equ	0xFDE
 42686                           postdec2	equ	0xFDD
 42687                           plusw2	equ	0xFDB
 42688                           fsr2h	equ	0xFDA
 42689                           fsr2l	equ	0xFD9
 42690                           status	equ	0xFD8
 42691                           
 42692 ;; *************** function __fill_buffer_get_calibration1 *****************
 42693 ;; Defined at:
 42694 ;;		line 376 in file "app_device_custom_hid.c"
 42695 ;; Parameters:    Size  Location     Type
 42696 ;;		None
 42697 ;; Auto vars:     Size  Location     Type
 42698 ;;		None
 42699 ;; Return value:  Size  Location     Type
 42700 ;;                  1    wreg      void 
 42701 ;; Registers used:
 42702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42703 ;; Tracked objects:
 42704 ;;		On entry : 0/0
 42705 ;;		On exit  : 0/0
 42706 ;;		Unchanged: 0/0
 42707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42712 ;;Total ram usage:        0 bytes
 42713 ;; Hardware stack levels used:    1
 42714 ;; Hardware stack levels required when called:   11
 42715 ;; This function calls:
 42716 ;;		_memcpy
 42717 ;; This function is called by:
 42718 ;;		_APP_DeviceCustomHIDTasks
 42719 ;; This function uses a non-reentrant model
 42720 ;;
 42721                           
 42722                           	psect	text210
 42723  010D1A                     __ptext210:
 42724                           	opt stack 0
 42725  010D1A                     __fill_buffer_get_calibration1:
 42726                           	opt stack 18
 42727                           
 42728                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 42729                           
 42730                           ;incstack = 0
 42731  010D1A  0E13               	movlw	19
 42732  010D1C  0103               	movlb	3	; () banked
 42733  010D1E  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42734                           
 42735                           ; BSR set to: 3
 42736                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 42737  010D20  0EA5               	movlw	low (_ToSendDataBuffer+1)
 42738  010D22  0100               	movlb	0	; () banked
 42739  010D24  6F60               	movwf	memcpy@d1& (0+255),b
 42740  010D26  0E03               	movlw	high (_ToSendDataBuffer+1)
 42741  010D28  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42742  010D2A  0E00               	movlw	low _calibrationParameters
 42743  010D2C  6F62               	movwf	memcpy@s1& (0+255),b
 42744  010D2E  0E03               	movlw	high _calibrationParameters
 42745  010D30  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42746  010D32  0E00               	movlw	0
 42747  010D34  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42748  010D36  0E0C               	movlw	12
 42749  010D38  6F64               	movwf	memcpy@n& (0+255),b
 42750  010D3A  ECBB  F08B         	call	_memcpy	;wreg free
 42751                           
 42752                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 42753  010D3E  0EB1               	movlw	low (_ToSendDataBuffer+13)
 42754  010D40  0100               	movlb	0	; () banked
 42755  010D42  6F60               	movwf	memcpy@d1& (0+255),b
 42756  010D44  0E03               	movlw	high (_ToSendDataBuffer+13)
 42757  010D46  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42758  010D48  0E0C               	movlw	low (_calibrationParameters+12)
 42759  010D4A  6F62               	movwf	memcpy@s1& (0+255),b
 42760  010D4C  0E03               	movlw	high (_calibrationParameters+12)
 42761  010D4E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42762  010D50  0E00               	movlw	0
 42763  010D52  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42764  010D54  0E0C               	movlw	12
 42765  010D56  6F64               	movwf	memcpy@n& (0+255),b
 42766  010D58  ECBB  F08B         	call	_memcpy	;wreg free
 42767                           
 42768                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 42769  010D5C  0EBD               	movlw	low (_ToSendDataBuffer+25)
 42770  010D5E  0100               	movlb	0	; () banked
 42771  010D60  6F60               	movwf	memcpy@d1& (0+255),b
 42772  010D62  0E03               	movlw	high (_ToSendDataBuffer+25)
 42773  010D64  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42774  010D66  0E18               	movlw	low (_calibrationParameters+24)
 42775  010D68  6F62               	movwf	memcpy@s1& (0+255),b
 42776  010D6A  0E03               	movlw	high (_calibrationParameters+24)
 42777  010D6C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42778  010D6E  0E00               	movlw	0
 42779  010D70  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42780  010D72  0E0C               	movlw	12
 42781  010D74  6F64               	movwf	memcpy@n& (0+255),b
 42782  010D76  ECBB  F08B         	call	_memcpy	;wreg free
 42783                           
 42784                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 42785  010D7A  0EC9               	movlw	low (_ToSendDataBuffer+37)
 42786  010D7C  0100               	movlb	0	; () banked
 42787  010D7E  6F60               	movwf	memcpy@d1& (0+255),b
 42788  010D80  0E03               	movlw	high (_ToSendDataBuffer+37)
 42789  010D82  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42790  010D84  0E24               	movlw	low (_calibrationParameters+36)
 42791  010D86  6F62               	movwf	memcpy@s1& (0+255),b
 42792  010D88  0E03               	movlw	high (_calibrationParameters+36)
 42793  010D8A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42794  010D8C  0E00               	movlw	0
 42795  010D8E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42796  010D90  0E0C               	movlw	12
 42797  010D92  6F64               	movwf	memcpy@n& (0+255),b
 42798  010D94  ECBB  F08B         	call	_memcpy	;wreg free
 42799  010D98  0012               	return		;funcret
 42800  010D9A                     __end_of__fill_buffer_get_calibration1:
 42801                           	opt stack 0
 42802                           tosu	equ	0xFFF
 42803                           tosh	equ	0xFFE
 42804                           tosl	equ	0xFFD
 42805                           pclath	equ	0xFFA
 42806                           tblptru	equ	0xFF8
 42807                           tblptrh	equ	0xFF7
 42808                           tblptrl	equ	0xFF6
 42809                           tablat	equ	0xFF5
 42810                           prodh	equ	0xFF4
 42811                           prodl	equ	0xFF3
 42812                           intcon	equ	0xFF2
 42813                           intcon2	equ	0xFF1
 42814                           intcon3	equ	0xFF0
 42815                           postinc0	equ	0xFEE
 42816                           wreg	equ	0xFE8
 42817                           indf1	equ	0xFE7
 42818                           postinc1	equ	0xFE6
 42819                           postdec1	equ	0xFE5
 42820                           plusw1	equ	0xFE3
 42821                           fsr1h	equ	0xFE2
 42822                           fsr1l	equ	0xFE1
 42823                           indf2	equ	0xFDF
 42824                           postinc2	equ	0xFDE
 42825                           postdec2	equ	0xFDD
 42826                           plusw2	equ	0xFDB
 42827                           fsr2h	equ	0xFDA
 42828                           fsr2l	equ	0xFD9
 42829                           status	equ	0xFD8
 42830                           
 42831 ;; *************** function _memcpy *****************
 42832 ;; Defined at:
 42833 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 42834 ;; Parameters:    Size  Location     Type
 42835 ;;  d1              2    0[BANK0 ] PTR void 
 42836 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42837 ;;		 -> SetupPkt(8), 
 42838 ;;  s1              2    2[BANK0 ] PTR const void 
 42839 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42840 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 42841 ;;		 -> SetupPkt(8), 
 42842 ;;  n               2    4[BANK0 ] unsigned int 
 42843 ;; Auto vars:     Size  Location     Type
 42844 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 42845 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42846 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 42847 ;;		 -> SetupPkt(8), 
 42848 ;;  d               2    6[BANK0 ] PTR unsigned char 
 42849 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42850 ;;		 -> SetupPkt(8), 
 42851 ;;  tmp             1   10[BANK0 ] unsigned char 
 42852 ;; Return value:  Size  Location     Type
 42853 ;;                  2    0[BANK0 ] PTR void 
 42854 ;; Registers used:
 42855 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42856 ;; Tracked objects:
 42857 ;;		On entry : 0/0
 42858 ;;		On exit  : 0/0
 42859 ;;		Unchanged: 0/0
 42860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42861 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42862 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42864 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42865 ;;Total ram usage:       11 bytes
 42866 ;; Hardware stack levels used:    1
 42867 ;; Hardware stack levels required when called:   10
 42868 ;; This function calls:
 42869 ;;		Nothing
 42870 ;; This function is called by:
 42871 ;;		_MSDProcessCommandMediaPresent
 42872 ;;		__fill_buffer_get_calibration1
 42873 ;;		__fill_buffer_get_calibration2
 42874 ;;		__flash_set_page_size
 42875 ;;		_fat_create_file
 42876 ;; This function uses a non-reentrant model
 42877 ;;
 42878                           
 42879                           	psect	text211
 42880  011776                     __ptext211:
 42881                           	opt stack 0
 42882  011776                     _memcpy:
 42883                           	opt stack 17
 42884                           
 42885                           ;incstack = 0
 42886  011776  C062  F068         	movff	memcpy@s1,memcpy@s
 42887  01177A  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 42888  01177E  C060  F066         	movff	memcpy@d1,memcpy@d
 42889  011782  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 42890  011786  D01D               	goto	l3758
 42891  011788                     l11831:
 42892  011788  C068  FFF6         	movff	memcpy@s,tblptrl
 42893  01178C  C069  FFF7         	movff	memcpy@s+1,tblptrh
 42894  011790  0E00               	movlw	low (__mediumconst shr (0+16))
 42895  011792  6EF8               	movwf	tblptru,c
 42896  011794  0E0E               	movlw	(high __ramtop+-1)
 42897  011796  64F7               	cpfsgt	tblptrh,c
 42898  011798  D003               	bra	u9167
 42899  01179A  0008               	tblrd		*
 42900  01179C  50F5               	movf	tablat,w,c
 42901  01179E  D005               	bra	u9160
 42902  0117A0                     u9167:
 42903  0117A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 42904  0117A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 42905  0117A8  50EF               	movf	indf0,w,c
 42906  0117AA                     u9160:
 42907  0117AA  0100               	movlb	0	; () banked
 42908  0117AC  6F6A               	movwf	memcpy@tmp& (0+255),b
 42909                           
 42910                           ; BSR set to: 0
 42911  0117AE  4B68               	infsnz	memcpy@s& (0+255),f,b
 42912  0117B0  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 42913                           
 42914                           ; BSR set to: 0
 42915  0117B2  C066  FFD9         	movff	memcpy@d,fsr2l
 42916  0117B6  C067  FFDA         	movff	memcpy@d+1,fsr2h
 42917  0117BA  C06A  FFDF         	movff	memcpy@tmp,indf2
 42918                           
 42919                           ; BSR set to: 0
 42920  0117BE  4B66               	infsnz	memcpy@d& (0+255),f,b
 42921  0117C0  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 42922  0117C2                     l3758:
 42923                           
 42924                           ; BSR set to: 0
 42925  0117C2  0100               	movlb	0	; () banked
 42926  0117C4  0764               	decf	memcpy@n& (0+255),f,b
 42927  0117C6  A0D8               	btfss	status,0,c
 42928  0117C8  0765               	decf	(memcpy@n+1)& (0+255),f,b
 42929  0117CA  2964               	incf	memcpy@n& (0+255),w,b
 42930  0117CC  E1DD               	bnz	l11831
 42931  0117CE  2965               	incf	(memcpy@n+1)& (0+255),w,b
 42932  0117D0  B4D8               	btfsc	status,2,c
 42933  0117D2  0012               	return	
 42934  0117D4  D7D9               	goto	l3759
 42935  0117D6                     __end_of_memcpy:
 42936                           	opt stack 0
 42937                           tosu	equ	0xFFF
 42938                           tosh	equ	0xFFE
 42939                           tosl	equ	0xFFD
 42940                           pclath	equ	0xFFA
 42941                           tblptru	equ	0xFF8
 42942                           tblptrh	equ	0xFF7
 42943                           tblptrl	equ	0xFF6
 42944                           tablat	equ	0xFF5
 42945                           prodh	equ	0xFF4
 42946                           prodl	equ	0xFF3
 42947                           intcon	equ	0xFF2
 42948                           intcon2	equ	0xFF1
 42949                           intcon3	equ	0xFF0
 42950                           indf0	equ	0xFEF
 42951                           postinc0	equ	0xFEE
 42952                           fsr0h	equ	0xFEA
 42953                           fsr0l	equ	0xFE9
 42954                           wreg	equ	0xFE8
 42955                           indf1	equ	0xFE7
 42956                           postinc1	equ	0xFE6
 42957                           postdec1	equ	0xFE5
 42958                           plusw1	equ	0xFE3
 42959                           fsr1h	equ	0xFE2
 42960                           fsr1l	equ	0xFE1
 42961                           indf2	equ	0xFDF
 42962                           postinc2	equ	0xFDE
 42963                           postdec2	equ	0xFDD
 42964                           plusw2	equ	0xFDB
 42965                           fsr2h	equ	0xFDA
 42966                           fsr2l	equ	0xFD9
 42967                           status	equ	0xFD8
 42968                           
 42969 ;; *************** function _USBTransferOnePacket *****************
 42970 ;; Defined at:
 42971 ;;		line 995 in file "usb_device.c"
 42972 ;; Parameters:    Size  Location     Type
 42973 ;;  ep              1    wreg     unsigned char 
 42974 ;;  dir             1    0[BANK0 ] unsigned char 
 42975 ;;  data            2    1[BANK0 ] PTR unsigned char 
 42976 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 42977 ;;		 -> msd_cbw(31), NULL(0), 
 42978 ;;  len             1    3[BANK0 ] unsigned char 
 42979 ;; Auto vars:     Size  Location     Type
 42980 ;;  ep              1    8[BANK0 ] unsigned char 
 42981 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 42982 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 42983 ;; Return value:  Size  Location     Type
 42984 ;;                  2    0[BANK0 ] PTR void 
 42985 ;; Registers used:
 42986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42987 ;; Tracked objects:
 42988 ;;		On entry : 0/0
 42989 ;;		On exit  : 0/0
 42990 ;;		Unchanged: 0/0
 42991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42993 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42994 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42995 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42996 ;;Total ram usage:       11 bytes
 42997 ;; Hardware stack levels used:    1
 42998 ;; Hardware stack levels required when called:   10
 42999 ;; This function calls:
 43000 ;;		Nothing
 43001 ;; This function is called by:
 43002 ;;		_MSDTasks
 43003 ;;		_MSDProcessCommandMediaPresent
 43004 ;;		_MSDReadHandler
 43005 ;;		_MSDWriteHandler
 43006 ;;		_APP_DeviceCustomHIDTasks
 43007 ;; This function uses a non-reentrant model
 43008 ;;
 43009                           
 43010                           	psect	text212
 43011  00E900                     __ptext212:
 43012                           	opt stack 0
 43013  00E900                     _USBTransferOnePacket:
 43014                           	opt stack 18
 43015                           
 43016                           ; BSR set to: 0
 43017                           ;incstack = 0
 43018                           ;USBTransferOnePacket@ep stored from wreg
 43019  00E900  0100               	movlb	0	; () banked
 43020  00E902  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 43021                           
 43022                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 43023                           ;usb_device.c: 1000: if(dir != 0)
 43024  00E904  0100               	movlb	0	; () banked
 43025  00E906  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 43026  00E908  B4D8               	btfsc	status,2,c
 43027  00E90A  D007               	goto	l186
 43028                           
 43029                           ; BSR set to: 0
 43030                           ;usb_device.c: 1001: {
 43031                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 43032  00E90C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 43033  00E90E  0D02               	mullw	2
 43034  00E910  0E3B               	movlw	low _pBDTEntryIn
 43035  00E912  24F3               	addwf	prodl,w,c
 43036  00E914  6ED9               	movwf	fsr2l,c
 43037  00E916  0E00               	movlw	high _pBDTEntryIn
 43038  00E918  D006               	goto	L51
 43039  00E91A                     l186:
 43040                           
 43041                           ; BSR set to: 0
 43042                           ;usb_device.c: 1005: else
 43043                           ;usb_device.c: 1006: {
 43044                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 43045                           
 43046                           ; BSR set to: 0
 43047  00E91A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 43048  00E91C  0D02               	mullw	2
 43049  00E91E  0ED3               	movlw	low _pBDTEntryOut
 43050  00E920  24F3               	addwf	prodl,w,c
 43051  00E922  6ED9               	movwf	fsr2l,c
 43052  00E924  0E01               	movlw	high _pBDTEntryOut
 43053  00E926                     L51:
 43054  00E926  20F4               	addwfc	prodh,w,c
 43055  00E928  6EDA               	movwf	fsr2h,c
 43056  00E92A  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 43057  00E92E  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 43058                           
 43059                           ; BSR set to: 0
 43060                           ;usb_device.c: 1009: }
 43061                           ;usb_device.c: 1013: if(handle == 0)
 43062                           
 43063                           ; BSR set to: 0
 43064  00E932  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 43065  00E934  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 43066  00E936  A4D8               	btfss	status,2,c
 43067  00E938  D005               	goto	l188
 43068                           
 43069                           ; BSR set to: 0
 43070                           ;usb_device.c: 1014: {
 43071                           ;usb_device.c: 1015: return 0;
 43072  00E93A  0E00               	movlw	0
 43073  00E93C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 43074  00E93E  0E00               	movlw	0
 43075  00E940  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 43076                           
 43077                           ; BSR set to: 0
 43078  00E942  0012               	return	
 43079  00E944                     l188:
 43080                           
 43081                           ; BSR set to: 0
 43082                           ;usb_device.c: 1016: }
 43083                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 43084                           
 43085                           ; BSR set to: 0
 43086  00E944  EE20 F002          	lfsr	2,2
 43087  00E948  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 43088  00E94A  26D9               	addwf	fsr2l,f,c
 43089  00E94C  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 43090  00E94E  22DA               	addwfc	fsr2h,f,c
 43091  00E950  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 43092  00E954  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 43093                           
 43094                           ;usb_device.c: 1030: handle->CNT = len;
 43095  00E958  EE20 F001          	lfsr	2,1
 43096  00E95C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 43097  00E95E  26D9               	addwf	fsr2l,f,c
 43098  00E960  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 43099  00E962  22DA               	addwfc	fsr2h,f,c
 43100  00E964  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 43101                           
 43102                           ; BSR set to: 0
 43103                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 43104  00E968  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 43105  00E96C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 43106  00E970  0E40               	movlw	64
 43107  00E972  16DF               	andwf	indf2,f,c
 43108                           
 43109                           ; BSR set to: 0
 43110                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 43111  00E974  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 43112  00E978  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 43113  00E97C  0E00               	movlw	0
 43114  00E97E  86DB               	bsf	plusw2,3,c
 43115                           
 43116                           ; BSR set to: 0
 43117                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 43118  00E980  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 43119  00E984  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 43120  00E988  0E00               	movlw	0
 43121  00E98A  8EDB               	bsf	plusw2,7,c
 43122                           
 43123                           ; BSR set to: 0
 43124                           ;usb_device.c: 1036: if(dir != 0)
 43125  00E98C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 43126  00E98E  B4D8               	btfsc	status,2,c
 43127  00E990  D018               	goto	l190
 43128                           
 43129                           ; BSR set to: 0
 43130                           ;usb_device.c: 1037: {
 43131                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 43132  00E992  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 43133  00E994  0D02               	mullw	2
 43134  00E996  0E3B               	movlw	low _pBDTEntryIn
 43135  00E998  24F3               	addwf	prodl,w,c
 43136  00E99A  6ED9               	movwf	fsr2l,c
 43137  00E99C  0E00               	movlw	high _pBDTEntryIn
 43138  00E99E  20F4               	addwfc	prodh,w,c
 43139  00E9A0  6EDA               	movwf	fsr2h,c
 43140  00E9A2  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 43141  00E9A6  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 43142  00E9AA  0E04               	movlw	4
 43143  00E9AC  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 43144  00E9AE  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 43145  00E9B0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 43146  00E9B2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 43147  00E9B4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 43148  00E9B6  0D02               	mullw	2
 43149  00E9B8  0E3B               	movlw	low _pBDTEntryIn
 43150  00E9BA  24F3               	addwf	prodl,w,c
 43151  00E9BC  6ED9               	movwf	fsr2l,c
 43152  00E9BE  0E00               	movlw	high _pBDTEntryIn
 43153  00E9C0  D017               	goto	L52
 43154  00E9C2                     l190:
 43155                           
 43156                           ; BSR set to: 0
 43157                           ;usb_device.c: 1041: else
 43158                           ;usb_device.c: 1042: {
 43159                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 43160                           
 43161                           ; BSR set to: 0
 43162  00E9C2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 43163  00E9C4  0D02               	mullw	2
 43164  00E9C6  0ED3               	movlw	low _pBDTEntryOut
 43165  00E9C8  24F3               	addwf	prodl,w,c
 43166  00E9CA  6ED9               	movwf	fsr2l,c
 43167  00E9CC  0E01               	movlw	high _pBDTEntryOut
 43168  00E9CE  20F4               	addwfc	prodh,w,c
 43169  00E9D0  6EDA               	movwf	fsr2h,c
 43170  00E9D2  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 43171  00E9D6  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 43172  00E9DA  0E04               	movlw	4
 43173  00E9DC  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 43174  00E9DE  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 43175  00E9E0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 43176  00E9E2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 43177  00E9E4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 43178  00E9E6  0D02               	mullw	2
 43179  00E9E8  0ED3               	movlw	low _pBDTEntryOut
 43180  00E9EA  24F3               	addwf	prodl,w,c
 43181  00E9EC  6ED9               	movwf	fsr2l,c
 43182  00E9EE  0E01               	movlw	high _pBDTEntryOut
 43183  00E9F0                     L52:
 43184  00E9F0  20F4               	addwfc	prodh,w,c
 43185  00E9F2  6EDA               	movwf	fsr2h,c
 43186  00E9F4  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 43187  00E9F8  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 43188                           
 43189                           ; BSR set to: 0
 43190                           ;usb_device.c: 1045: }
 43191                           ;usb_device.c: 1046: return (void*)handle;
 43192                           
 43193                           ; BSR set to: 0
 43194  00E9FC  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 43195  00EA00  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 43196  00EA04  0012               	return	
 43197  00EA06                     __end_of_USBTransferOnePacket:
 43198                           	opt stack 0
 43199                           tosu	equ	0xFFF
 43200                           tosh	equ	0xFFE
 43201                           tosl	equ	0xFFD
 43202                           pclath	equ	0xFFA
 43203                           tblptru	equ	0xFF8
 43204                           tblptrh	equ	0xFF7
 43205                           tblptrl	equ	0xFF6
 43206                           tablat	equ	0xFF5
 43207                           prodh	equ	0xFF4
 43208                           prodl	equ	0xFF3
 43209                           intcon	equ	0xFF2
 43210                           intcon2	equ	0xFF1
 43211                           intcon3	equ	0xFF0
 43212                           indf0	equ	0xFEF
 43213                           postinc0	equ	0xFEE
 43214                           fsr0h	equ	0xFEA
 43215                           fsr0l	equ	0xFE9
 43216                           wreg	equ	0xFE8
 43217                           indf1	equ	0xFE7
 43218                           postinc1	equ	0xFE6
 43219                           postdec1	equ	0xFE5
 43220                           plusw1	equ	0xFE3
 43221                           fsr1h	equ	0xFE2
 43222                           fsr1l	equ	0xFE1
 43223                           indf2	equ	0xFDF
 43224                           postinc2	equ	0xFDE
 43225                           postdec2	equ	0xFDD
 43226                           plusw2	equ	0xFDB
 43227                           fsr2h	equ	0xFDA
 43228                           fsr2l	equ	0xFD9
 43229                           status	equ	0xFD8
 43230                           
 43231 ;; *************** function _SYS_InterruptHigh *****************
 43232 ;; Defined at:
 43233 ;;		line 269 in file "system.c"
 43234 ;; Parameters:    Size  Location     Type
 43235 ;;		None
 43236 ;; Auto vars:     Size  Location     Type
 43237 ;;		None
 43238 ;; Return value:  Size  Location     Type
 43239 ;;                  1    wreg      void 
 43240 ;; Registers used:
 43241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 43242 ;; Tracked objects:
 43243 ;;		On entry : 0/0
 43244 ;;		On exit  : 0/0
 43245 ;;		Unchanged: 0/0
 43246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43249 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43250 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43251 ;;Total ram usage:       18 bytes
 43252 ;; Hardware stack levels used:    1
 43253 ;; Hardware stack levels required when called:    9
 43254 ;; This function calls:
 43255 ;;		_USBDeviceTasks
 43256 ;;		_tmr_isr
 43257 ;; This function is called by:
 43258 ;;		Interrupt level 2
 43259 ;; This function uses a non-reentrant model
 43260 ;;
 43261                           
 43262                           	psect	intcode
 43263  009008                     __pintcode:
 43264                           	opt stack 0
 43265  009008                     _SYS_InterruptHigh:
 43266                           	opt stack 9
 43267                           
 43268                           ; BSR set to: 0
 43269                           ;incstack = 0
 43270  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 43271  00900A  CFFA F020          	movff	pclath,??_SYS_InterruptHigh
 43272  00900E  CFFB F021          	movff	pclatu,??_SYS_InterruptHigh+1
 43273  009012  CFE9 F022          	movff	fsr0l,??_SYS_InterruptHigh+2
 43274  009016  CFEA F023          	movff	fsr0h,??_SYS_InterruptHigh+3
 43275  00901A  CFE1 F024          	movff	fsr1l,??_SYS_InterruptHigh+4
 43276  00901E  CFE2 F025          	movff	fsr1h,??_SYS_InterruptHigh+5
 43277  009022  CFD9 F026          	movff	fsr2l,??_SYS_InterruptHigh+6
 43278  009026  CFDA F027          	movff	fsr2h,??_SYS_InterruptHigh+7
 43279  00902A  CFF3 F028          	movff	prodl,??_SYS_InterruptHigh+8
 43280  00902E  CFF4 F029          	movff	prodh,??_SYS_InterruptHigh+9
 43281  009032  CFF6 F02A          	movff	tblptrl,??_SYS_InterruptHigh+10
 43282  009036  CFF7 F02B          	movff	tblptrh,??_SYS_InterruptHigh+11
 43283  00903A  CFF8 F02C          	movff	tblptru,??_SYS_InterruptHigh+12
 43284  00903E  CFF5 F02D          	movff	tablat,??_SYS_InterruptHigh+13
 43285  009042  C05F  F02E         	movff	btemp,??_SYS_InterruptHigh+14
 43286  009046  C060  F02F         	movff	btemp+1,??_SYS_InterruptHigh+15
 43287  00904A  C061  F030         	movff	btemp+2,??_SYS_InterruptHigh+16
 43288  00904E  C062  F031         	movff	btemp+3,??_SYS_InterruptHigh+17
 43289                           
 43290                           ;system.c: 272: USBDeviceTasks();
 43291  009052  EC19  F06D         	call	_USBDeviceTasks	;wreg free
 43292                           
 43293                           ;system.c: 276: tmr_isr();
 43294  009056  EC3B  F082         	call	_tmr_isr	;wreg free
 43295  00905A  C031  F062         	movff	??_SYS_InterruptHigh+17,btemp+3
 43296  00905E  C030  F061         	movff	??_SYS_InterruptHigh+16,btemp+2
 43297  009062  C02F  F060         	movff	??_SYS_InterruptHigh+15,btemp+1
 43298  009066  C02E  F05F         	movff	??_SYS_InterruptHigh+14,btemp
 43299  00906A  C02D  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 43300  00906E  C02C  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 43301  009072  C02B  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 43302  009076  C02A  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 43303  00907A  C029  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 43304  00907E  C028  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 43305  009082  C027  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 43306  009086  C026  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 43307  00908A  C025  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 43308  00908E  C024  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 43309  009092  C023  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 43310  009096  C022  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 43311  00909A  C021  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 43312  00909E  C020  FFFA         	movff	??_SYS_InterruptHigh,pclath
 43313  0090A2  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 43314  0090A4  0011               	retfie		f
 43315  0090A6                     __end_of_SYS_InterruptHigh:
 43316                           	opt stack 0
 43317                           tosu	equ	0xFFF
 43318                           tosh	equ	0xFFE
 43319                           tosl	equ	0xFFD
 43320                           pclatu	equ	0xFFB
 43321                           pclath	equ	0xFFA
 43322                           tblptru	equ	0xFF8
 43323                           tblptrh	equ	0xFF7
 43324                           tblptrl	equ	0xFF6
 43325                           tablat	equ	0xFF5
 43326                           prodh	equ	0xFF4
 43327                           prodl	equ	0xFF3
 43328                           intcon	equ	0xFF2
 43329                           intcon2	equ	0xFF1
 43330                           intcon3	equ	0xFF0
 43331                           indf0	equ	0xFEF
 43332                           postinc0	equ	0xFEE
 43333                           fsr0h	equ	0xFEA
 43334                           fsr0l	equ	0xFE9
 43335                           wreg	equ	0xFE8
 43336                           indf1	equ	0xFE7
 43337                           postinc1	equ	0xFE6
 43338                           postdec1	equ	0xFE5
 43339                           plusw1	equ	0xFE3
 43340                           fsr1h	equ	0xFE2
 43341                           fsr1l	equ	0xFE1
 43342                           indf2	equ	0xFDF
 43343                           postinc2	equ	0xFDE
 43344                           postdec2	equ	0xFDD
 43345                           plusw2	equ	0xFDB
 43346                           fsr2h	equ	0xFDA
 43347                           fsr2l	equ	0xFD9
 43348                           status	equ	0xFD8
 43349                           
 43350 ;; *************** function _tmr_isr *****************
 43351 ;; Defined at:
 43352 ;;		line 46 in file "os.c"
 43353 ;; Parameters:    Size  Location     Type
 43354 ;;		None
 43355 ;; Auto vars:     Size  Location     Type
 43356 ;;		None
 43357 ;; Return value:  Size  Location     Type
 43358 ;;                  1    wreg      void 
 43359 ;; Registers used:
 43360 ;;		wreg, status,2, status,0
 43361 ;; Tracked objects:
 43362 ;;		On entry : 0/0
 43363 ;;		On exit  : 0/0
 43364 ;;		Unchanged: 0/0
 43365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43370 ;;Total ram usage:        0 bytes
 43371 ;; Hardware stack levels used:    1
 43372 ;; This function calls:
 43373 ;;		Nothing
 43374 ;; This function is called by:
 43375 ;;		_SYS_InterruptHigh
 43376 ;; This function uses a non-reentrant model
 43377 ;;
 43378                           
 43379                           	psect	text214
 43380  010476                     __ptext214:
 43381                           	opt stack 0
 43382  010476                     _tmr_isr:
 43383                           	opt stack 17
 43384                           
 43385                           ;os.c: 49: if(INTCONbits.T0IF)
 43386                           
 43387                           ;incstack = 0
 43388  010476  A4F2               	btfss	intcon,2,c	;volatile
 43389  010478  D035               	goto	i2l1322
 43390                           
 43391                           ;os.c: 50: {
 43392                           ;os.c: 52: if(os.done)
 43393  01047A  0102               	movlb	2	; () banked
 43394  01047C  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 43395  01047E  A4D8               	btfss	status,2,c
 43396  010480  D00D               	goto	i2l1324
 43397  010482  D025               	goto	i2l1330
 43398  010484                     i2l1325:
 43399                           
 43400                           ; BSR set to: 2
 43401                           ;os.c: 58: TMR0H = 0xFF;
 43402  010484  68D7               	setf	4055,c	;volatile
 43403                           
 43404                           ; BSR set to: 2
 43405                           ;os.c: 59: TMR0L = 0x80;
 43406  010486  0E80               	movlw	128
 43407  010488  D007               	goto	L54
 43408  01048A                     
 43409                           ; BSR set to: 2
 43410                           ;os.c: 62: TMR0H = 0xF8;
 43411                           
 43412                           ; BSR set to: 2
 43413  01048A  0EF8               	movlw	248
 43414  01048C  6ED7               	movwf	4055,c	;volatile
 43415                           
 43416                           ;os.c: 63: TMR0L = 0x30;
 43417  01048E  0E30               	movlw	48
 43418  010490  D003               	goto	L54
 43419  010492                     
 43420                           ; BSR set to: 2
 43421                           ;os.c: 66: TMR0H = 0xD1;
 43422                           
 43423                           ; BSR set to: 2
 43424  010492  0ED1               	movlw	209
 43425  010494  6ED7               	movwf	4055,c	;volatile
 43426                           
 43427                           ;os.c: 67: TMR0L = 0x20;
 43428  010496  0E20               	movlw	32
 43429  010498                     L54:
 43430  010498  6ED6               	movwf	4054,c	;volatile
 43431                           
 43432                           ; BSR set to: 2
 43433                           ;os.c: 69: }
 43434                           
 43435                           ;os.c: 68: break;
 43436  01049A  D00A               	goto	i2l1326
 43437  01049C                     i2l1324:
 43438                           
 43439                           ; BSR set to: 2
 43440                           
 43441                           ; BSR set to: 2
 43442  01049C  5100               	movf	_os& (0+255),w,b	;volatile
 43443                           
 43444                           ; Switch size 1, requested type "space"
 43445                           ; Number of cases is 3, Range of values is 0 to 2
 43446                           ; switch strategies available:
 43447                           ; Name         Instructions Cycles
 43448                           ; simple_byte           10     6 (average)
 43449                           ;	Chosen strategy is simple_byte
 43450  01049E  0A00               	xorlw	0	; case 0
 43451  0104A0  B4D8               	btfsc	status,2,c
 43452  0104A2  D7F0               	goto	i2l1325
 43453  0104A4  0A01               	xorlw	1	; case 1
 43454  0104A6  B4D8               	btfsc	status,2,c
 43455  0104A8  D7F0               	goto	i2l1327
 43456  0104AA  0A03               	xorlw	3	; case 2
 43457  0104AC  B4D8               	btfsc	status,2,c
 43458  0104AE  D7F1               	goto	i2l1328
 43459  0104B0                     i2l1326:
 43460                           
 43461                           ; BSR set to: 2
 43462                           ;os.c: 71: ++os.timeSlot;
 43463                           
 43464                           ; BSR set to: 2
 43465  0104B0  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 43466                           
 43467                           ; BSR set to: 2
 43468                           ;os.c: 76: os.done = 0;
 43469  0104B2  0E00               	movlw	0
 43470  0104B4  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 43471                           
 43472                           ;os.c: 77: }
 43473  0104B6  D015               	goto	i2l1332
 43474  0104B8                     i2l1331:
 43475                           
 43476                           ; BSR set to: 2
 43477                           ;os.c: 84: TMR0H = 0xFF;
 43478  0104B8  68D7               	setf	4055,c	;volatile
 43479                           
 43480                           ; BSR set to: 2
 43481                           ;os.c: 85: TMR0L = 0xE0;
 43482  0104BA  0EE0               	movlw	224
 43483  0104BC  D006               	goto	L56
 43484  0104BE                     i2l1333:
 43485                           
 43486                           ; BSR set to: 2
 43487                           ;os.c: 88: TMR0H = 0xFF;
 43488  0104BE  68D7               	setf	4055,c	;volatile
 43489                           
 43490                           ; BSR set to: 2
 43491                           ;os.c: 89: TMR0L = 0x06;
 43492  0104C0  0E06               	movlw	6
 43493  0104C2  D003               	goto	L56
 43494  0104C4                     
 43495                           ; BSR set to: 2
 43496                           ;os.c: 92: TMR0H = 0xFA;
 43497                           
 43498                           ; BSR set to: 2
 43499  0104C4  0EFA               	movlw	250
 43500  0104C6  6ED7               	movwf	4055,c	;volatile
 43501                           
 43502                           ;os.c: 93: TMR0L = 0x24;
 43503  0104C8  0E24               	movlw	36
 43504  0104CA                     L56:
 43505  0104CA  6ED6               	movwf	4054,c	;volatile
 43506                           
 43507                           ; BSR set to: 2
 43508                           ;os.c: 95: }
 43509                           
 43510                           ;os.c: 94: break;
 43511  0104CC  D00A               	goto	i2l1332
 43512  0104CE                     i2l1330:
 43513                           
 43514                           ; BSR set to: 2
 43515                           
 43516                           ; BSR set to: 2
 43517  0104CE  5100               	movf	_os& (0+255),w,b	;volatile
 43518                           
 43519                           ; Switch size 1, requested type "space"
 43520                           ; Number of cases is 3, Range of values is 0 to 2
 43521                           ; switch strategies available:
 43522                           ; Name         Instructions Cycles
 43523                           ; simple_byte           10     6 (average)
 43524                           ;	Chosen strategy is simple_byte
 43525  0104D0  0A00               	xorlw	0	; case 0
 43526  0104D2  B4D8               	btfsc	status,2,c
 43527  0104D4  D7F1               	goto	i2l1331
 43528  0104D6  0A01               	xorlw	1	; case 1
 43529  0104D8  B4D8               	btfsc	status,2,c
 43530  0104DA  D7F1               	goto	i2l1333
 43531  0104DC  0A03               	xorlw	3	; case 2
 43532  0104DE  B4D8               	btfsc	status,2,c
 43533  0104E0  D7F1               	goto	i2l1334
 43534  0104E2                     i2l1332:
 43535                           
 43536                           ; BSR set to: 2
 43537                           ;os.c: 96: }
 43538                           ;os.c: 97: INTCONbits.T0IF = 0;
 43539                           
 43540                           ; BSR set to: 2
 43541  0104E2  94F2               	bcf	intcon,2,c	;volatile
 43542  0104E4                     i2l1322:
 43543                           
 43544                           ;os.c: 98: }
 43545                           ;os.c: 101: if(INTCON3bits.INT1IF)
 43546  0104E4  A0F0               	btfss	intcon3,0,c	;volatile
 43547  0104E6  D003               	goto	i2l1335
 43548                           
 43549                           ;os.c: 102: {
 43550                           ;os.c: 103: ++os.buttonCount;
 43551  0104E8  0102               	movlb	2	; () banked
 43552  0104EA  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 43553                           
 43554                           ; BSR set to: 2
 43555                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 43556  0104EC  90F0               	bcf	intcon3,0,c	;volatile
 43557  0104EE                     i2l1335:
 43558                           
 43559                           ;os.c: 105: }
 43560                           ;os.c: 108: if(INTCON3bits.INT2IF)
 43561                           
 43562                           ; BSR set to: 2
 43563  0104EE  A2F0               	btfss	intcon3,1,c	;volatile
 43564  0104F0  D005               	goto	i2l1336
 43565                           
 43566                           ;os.c: 109: {
 43567                           ;os.c: 110: if(!PORTBbits.RB6)
 43568  0104F2  BC81               	btfsc	3969,6,c	;volatile
 43569  0104F4  D002               	goto	i2l1337
 43570                           
 43571                           ;os.c: 111: {
 43572                           ;os.c: 112: --os.encoderCount;
 43573  0104F6  0102               	movlb	2	; () banked
 43574  0104F8  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 43575  0104FA                     i2l1337:
 43576                           
 43577                           ;os.c: 113: }
 43578                           ;os.c: 114: INTCON3bits.INT2IF = 0;
 43579                           
 43580                           ; BSR set to: 2
 43581  0104FA  92F0               	bcf	intcon3,1,c	;volatile
 43582  0104FC                     i2l1336:
 43583                           
 43584                           ;os.c: 115: }
 43585                           ;os.c: 116: if(INTCON3bits.INT3IF)
 43586  0104FC  A4F0               	btfss	intcon3,2,c	;volatile
 43587  0104FE  0012               	return	
 43588                           
 43589                           ;os.c: 117: {
 43590                           ;os.c: 118: if(!PORTBbits.RB7)
 43591  010500  BE81               	btfsc	3969,7,c	;volatile
 43592  010502  D002               	goto	i2l1339
 43593                           
 43594                           ;os.c: 119: {
 43595                           ;os.c: 120: ++os.encoderCount;
 43596  010504  0102               	movlb	2	; () banked
 43597  010506  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 43598  010508                     i2l1339:
 43599                           
 43600                           ;os.c: 121: }
 43601                           ;os.c: 122: INTCON3bits.INT3IF = 0;
 43602                           
 43603                           ; BSR set to: 2
 43604  010508  94F0               	bcf	intcon3,2,c	;volatile
 43605  01050A  0012               	return	
 43606  01050C                     __end_of_tmr_isr:
 43607                           	opt stack 0
 43608                           tosu	equ	0xFFF
 43609                           tosh	equ	0xFFE
 43610                           tosl	equ	0xFFD
 43611                           pclatu	equ	0xFFB
 43612                           pclath	equ	0xFFA
 43613                           tblptru	equ	0xFF8
 43614                           tblptrh	equ	0xFF7
 43615                           tblptrl	equ	0xFF6
 43616                           tablat	equ	0xFF5
 43617                           prodh	equ	0xFF4
 43618                           prodl	equ	0xFF3
 43619                           intcon	equ	0xFF2
 43620                           intcon2	equ	0xFF1
 43621                           intcon3	equ	0xFF0
 43622                           indf0	equ	0xFEF
 43623                           postinc0	equ	0xFEE
 43624                           fsr0h	equ	0xFEA
 43625                           fsr0l	equ	0xFE9
 43626                           wreg	equ	0xFE8
 43627                           indf1	equ	0xFE7
 43628                           postinc1	equ	0xFE6
 43629                           postdec1	equ	0xFE5
 43630                           plusw1	equ	0xFE3
 43631                           fsr1h	equ	0xFE2
 43632                           fsr1l	equ	0xFE1
 43633                           indf2	equ	0xFDF
 43634                           postinc2	equ	0xFDE
 43635                           postdec2	equ	0xFDD
 43636                           plusw2	equ	0xFDB
 43637                           fsr2h	equ	0xFDA
 43638                           fsr2l	equ	0xFD9
 43639                           status	equ	0xFD8
 43640                           
 43641 ;; *************** function _USBDeviceTasks *****************
 43642 ;; Defined at:
 43643 ;;		line 477 in file "usb_device.c"
 43644 ;; Parameters:    Size  Location     Type
 43645 ;;		None
 43646 ;; Auto vars:     Size  Location     Type
 43647 ;;  i               1   30[COMRAM] unsigned char 
 43648 ;; Return value:  Size  Location     Type
 43649 ;;                  1    wreg      void 
 43650 ;; Registers used:
 43651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 43652 ;; Tracked objects:
 43653 ;;		On entry : 0/0
 43654 ;;		On exit  : 0/0
 43655 ;;		Unchanged: 0/0
 43656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43661 ;;Total ram usage:        1 bytes
 43662 ;; Hardware stack levels used:    1
 43663 ;; Hardware stack levels required when called:    8
 43664 ;; This function calls:
 43665 ;;		_USBCtrlEPAllowStatusStage
 43666 ;;		_USBCtrlEPService
 43667 ;;		_USBIncrement1msInternalTimers
 43668 ;;		_USBStallHandler
 43669 ;;		_USBSuspend
 43670 ;;		_USBWakeFromSuspend
 43671 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 43672 ;;		i2_USBDeviceInit
 43673 ;; This function is called by:
 43674 ;;		_SYS_InterruptHigh
 43675 ;; This function uses a non-reentrant model
 43676 ;;
 43677                           
 43678                           	psect	text215
 43679  00DA32                     __ptext215:
 43680                           	opt stack 0
 43681  00DA32                     _USBDeviceTasks:
 43682                           	opt stack 9
 43683                           
 43684                           ;usb_device.c: 479: uint8_t i;
 43685                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 43686                           
 43687                           ;incstack = 0
 43688  00DA32  045C               	decf	_USBDeviceState,w,c	;volatile
 43689  00DA34  B4D8               	btfsc	status,2,c
 43690                           
 43691                           ;usb_device.c: 591: {
 43692                           ;usb_device.c: 601: if(!UCONbits.SE0)
 43693  00DA36  BA65               	btfsc	3941,5,c	;volatile
 43694  00DA38  D007               	goto	i2l157
 43695                           
 43696                           ;usb_device.c: 602: {
 43697                           ;usb_device.c: 608: {UIR = 0;};
 43698  00DA3A  0E00               	movlw	0
 43699  00DA3C  6E62               	movwf	3938,c	;volatile
 43700                           
 43701                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 43702  00DA3E  010F               	movlb	15	; () banked
 43703  00DA40  8136               	bsf	54,0,b	;volatile
 43704                           
 43705                           ; BSR set to: 15
 43706                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 43707  00DA42  8936               	bsf	54,4,b	;volatile
 43708                           
 43709                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 43710  00DA44  0E02               	movlw	2
 43711  00DA46  6E5C               	movwf	_USBDeviceState,c	;volatile
 43712  00DA48                     i2l157:
 43713                           
 43714                           ;usb_device.c: 617: }
 43715                           ;usb_device.c: 618: }
 43716                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 43717                           
 43718                           ; BSR set to: 15
 43719                           
 43720                           ; BSR set to: 15
 43721  00DA48  A462               	btfss	3938,2,c	;volatile
 43722  00DA4A  D006               	goto	i2l158
 43723  00DA4C  010F               	movlb	15	; () banked
 43724  00DA4E  A536               	btfss	54,2,b	;volatile
 43725  00DA50  D003               	goto	i2l158
 43726                           
 43727                           ; BSR set to: 15
 43728                           ;usb_device.c: 635: {
 43729                           ;usb_device.c: 636: (UIR &= 0xFB);
 43730  00DA52  9462               	bcf	3938,2,c	;volatile
 43731                           
 43732                           ; BSR set to: 15
 43733                           ;usb_device.c: 640: USBWakeFromSuspend();
 43734  00DA54  EC69  F092         	call	_USBWakeFromSuspend	;wreg free
 43735  00DA58                     i2l158:
 43736                           
 43737                           ;usb_device.c: 642: }
 43738                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 43739  00DA58  A265               	btfss	3941,1,c	;volatile
 43740  00DA5A  D002               	goto	i2l159
 43741                           
 43742                           ;usb_device.c: 648: {
 43743                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 43744  00DA5C  98A1               	bcf	4001,4,c	;volatile
 43745                           
 43746                           ;usb_device.c: 650: return;
 43747  00DA5E  0012               	return	
 43748  00DA60                     i2l159:
 43749                           
 43750                           ;usb_device.c: 651: }
 43751                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 43752  00DA60  A062               	btfss	3938,0,c	;volatile
 43753  00DA62  D009               	goto	i2l161
 43754  00DA64  010F               	movlb	15	; () banked
 43755  00DA66  A136               	btfss	54,0,b	;volatile
 43756  00DA68  D006               	goto	i2l161
 43757                           
 43758                           ; BSR set to: 15
 43759                           ;usb_device.c: 664: {
 43760                           ;usb_device.c: 665: USBDeviceInit();
 43761  00DA6A  EC76  F06C         	call	i2_USBDeviceInit	;wreg free
 43762                           
 43763                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 43764  00DA6E  88A0               	bsf	4000,4,c	;volatile
 43765                           
 43766                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 43767  00DA70  0E04               	movlw	4
 43768  00DA72  6E5C               	movwf	_USBDeviceState,c	;volatile
 43769                           
 43770                           ;usb_device.c: 681: (UIR &= 0xFE);
 43771  00DA74  9062               	bcf	3938,0,c	;volatile
 43772  00DA76                     i2l161:
 43773                           
 43774                           ;usb_device.c: 682: }
 43775                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 43776  00DA76  A862               	btfss	3938,4,c	;volatile
 43777  00DA78  D004               	goto	i2l162
 43778  00DA7A  010F               	movlb	15	; () banked
 43779  00DA7C  B936               	btfsc	54,4,b	;volatile
 43780                           
 43781                           ; BSR set to: 15
 43782                           ;usb_device.c: 688: {
 43783                           ;usb_device.c: 694: USBSuspend();
 43784  00DA7E  EC35  F093         	call	_USBSuspend	;wreg free
 43785  00DA82                     i2l162:
 43786                           
 43787                           ;usb_device.c: 696: }
 43788                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 43789  00DA82  AC62               	btfss	3938,6,c	;volatile
 43790  00DA84  D01B               	goto	i2l166
 43791                           
 43792                           ;usb_device.c: 709: {
 43793                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 43794  00DA86  010F               	movlb	15	; () banked
 43795  00DA88  AD36               	btfss	54,6,b	;volatile
 43796  00DA8A  D00E               	goto	i2l164
 43797                           
 43798                           ; BSR set to: 15
 43799                           ;usb_device.c: 712: {
 43800                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 43801  00DA8C  0E00               	movlw	0
 43802  00DA8E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43803  00DA90  0E73               	movlw	115
 43804  00DA92  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43805  00DA94  0E00               	movlw	0
 43806  00DA96  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43807  00DA98  0E00               	movlw	0
 43808  00DA9A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43809  00DA9C  0E00               	movlw	0
 43810  00DA9E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43811  00DAA0  0E01               	movlw	1
 43812  00DAA2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43813  00DAA4  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43814  00DAA8                     i2l164:
 43815                           
 43816                           ;usb_device.c: 714: }
 43817                           ;usb_device.c: 715: (UIR &= 0xBF);
 43818  00DAA8  9C62               	bcf	3938,6,c	;volatile
 43819                           
 43820                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 43821  00DAAA  ECD0  F095         	call	_USBIncrement1msInternalTimers	;wreg free
 43822                           
 43823                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 43824  00DAAE  5056               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43825  00DAB0  A4D8               	btfss	status,2,c
 43826                           
 43827                           ;usb_device.c: 736: {
 43828                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 43829  00DAB2  0656               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 43830                           
 43831                           ;usb_device.c: 738: }
 43832                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 43833  00DAB4  5056               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43834  00DAB6  B4D8               	btfsc	status,2,c
 43835                           
 43836                           ;usb_device.c: 745: {
 43837                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 43838  00DAB8  EC79  F07E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 43839  00DABC                     i2l166:
 43840                           
 43841                           ;usb_device.c: 747: }
 43842                           ;usb_device.c: 749: }
 43843                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 43844  00DABC  AA62               	btfss	3938,5,c	;volatile
 43845  00DABE  D004               	goto	i2l167
 43846  00DAC0  010F               	movlb	15	; () banked
 43847  00DAC2  BB36               	btfsc	54,5,b	;volatile
 43848                           
 43849                           ; BSR set to: 15
 43850                           ;usb_device.c: 752: {
 43851                           ;usb_device.c: 753: USBStallHandler();
 43852  00DAC4  EC17  F091         	call	_USBStallHandler	;wreg free
 43853  00DAC8                     i2l167:
 43854                           
 43855                           ;usb_device.c: 754: }
 43856                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 43857  00DAC8  A262               	btfss	3938,1,c	;volatile
 43858  00DACA  D012               	goto	i2l168
 43859  00DACC  010F               	movlb	15	; () banked
 43860  00DACE  A336               	btfss	54,1,b	;volatile
 43861  00DAD0  D00F               	goto	i2l168
 43862                           
 43863                           ; BSR set to: 15
 43864                           ;usb_device.c: 757: {
 43865                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 43866  00DAD2  0E7F               	movlw	127
 43867  00DAD4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43868  00DAD6  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43869  00DAD8  0E00               	movlw	0
 43870  00DADA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43871  00DADC  0E00               	movlw	0
 43872  00DADE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43873  00DAE0  0E00               	movlw	0
 43874  00DAE2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43875  00DAE4  0E01               	movlw	1
 43876  00DAE6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43877  00DAE8  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43878                           
 43879                           ;usb_device.c: 759: {UEIR = 0;};
 43880  00DAEC  0E00               	movlw	0
 43881  00DAEE  6E63               	movwf	3939,c	;volatile
 43882  00DAF0                     i2l168:
 43883                           
 43884                           ;usb_device.c: 767: }
 43885                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 43886  00DAF0  0E04               	movlw	4
 43887  00DAF2  605C               	cpfslt	_USBDeviceState,c	;volatile
 43888  00DAF4  D002               	goto	i2l169
 43889                           
 43890                           ;usb_device.c: 775: {
 43891                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 43892  00DAF6  98A1               	bcf	4001,4,c	;volatile
 43893                           
 43894                           ;usb_device.c: 777: return;
 43895  00DAF8  0012               	return	
 43896  00DAFA                     i2l169:
 43897                           
 43898                           ;usb_device.c: 778: }
 43899                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 43900  00DAFA  010F               	movlb	15	; () banked
 43901  00DAFC  A736               	btfss	54,3,b	;volatile
 43902  00DAFE  D039               	goto	i2u1495_40
 43903                           
 43904                           ; BSR set to: 15
 43905                           ;usb_device.c: 784: {
 43906                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 43907  00DB00  0E00               	movlw	0
 43908  00DB02  6E1F               	movwf	USBDeviceTasks@i,c
 43909  00DB04                     i2l16261:
 43910                           
 43911                           ; BSR set to: 15
 43912  00DB04  0E03               	movlw	3
 43913  00DB06  641F               	cpfsgt	USBDeviceTasks@i,c
 43914  00DB08  D001               	goto	i2l171
 43915  00DB0A  D033               	goto	i2u1495_40
 43916  00DB0C                     i2l171:
 43917                           
 43918                           ;usb_device.c: 786: {
 43919                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 43920  00DB0C  A662               	btfss	3938,3,c	;volatile
 43921  00DB0E  D031               	goto	i2u1495_40
 43922                           
 43923                           ;usb_device.c: 788: {
 43924                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 43925  00DB10  CF64 F05D          	movff	3940,_USTATcopy	;volatile
 43926                           
 43927                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 43928  00DB14  305D               	rrcf	_USTATcopy,w,c	;volatile
 43929  00DB16  32E8               	rrcf	wreg,f,c
 43930  00DB18  32E8               	rrcf	wreg,f,c
 43931  00DB1A  0B0F               	andlw	15
 43932  00DB1C  6E57               	movwf	_endpoint_number,c	;volatile
 43933                           
 43934                           ;usb_device.c: 793: (UIR &= 0xF7);
 43935  00DB1E  9662               	bcf	3938,3,c	;volatile
 43936                           
 43937                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 43938  00DB20  B45D               	btfsc	_USTATcopy,2,c	;volatile
 43939  00DB22  D007               	goto	i2l174
 43940                           
 43941                           ;usb_device.c: 799: {
 43942                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 43943  00DB24  5057               	movf	_endpoint_number,w,c	;volatile
 43944  00DB26  0D01               	mullw	1
 43945  00DB28  0EE1               	movlw	low _ep_data_out
 43946  00DB2A  24F3               	addwf	prodl,w,c
 43947  00DB2C  6ED9               	movwf	fsr2l,c
 43948  00DB2E  0E01               	movlw	high _ep_data_out
 43949  00DB30  D006               	goto	L57
 43950  00DB32                     i2l174:
 43951                           
 43952                           ;usb_device.c: 802: else
 43953                           ;usb_device.c: 803: {
 43954                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 43955                           
 43956                           ; BSR set to: 1
 43957  00DB32  5057               	movf	_endpoint_number,w,c	;volatile
 43958  00DB34  0D01               	mullw	1
 43959  00DB36  0EE4               	movlw	low _ep_data_in
 43960  00DB38  24F3               	addwf	prodl,w,c
 43961  00DB3A  6ED9               	movwf	fsr2l,c
 43962  00DB3C  0E01               	movlw	high _ep_data_in
 43963  00DB3E                     L57:
 43964  00DB3E  20F4               	addwfc	prodh,w,c
 43965  00DB40  6EDA               	movwf	fsr2h,c
 43966  00DB42  0101               	movlb	1	; () banked
 43967  00DB44  70DF               	btg	indf2,0,c
 43968                           
 43969                           ; BSR set to: 1
 43970                           ;usb_device.c: 805: }
 43971                           ;usb_device.c: 810: if(endpoint_number == 0)
 43972                           
 43973                           ; BSR set to: 1
 43974  00DB46  5057               	movf	_endpoint_number,w,c	;volatile
 43975  00DB48  A4D8               	btfss	status,2,c
 43976  00DB4A  D003               	goto	i2l176
 43977                           
 43978                           ; BSR set to: 1
 43979                           ;usb_device.c: 811: {
 43980                           ;usb_device.c: 812: USBCtrlEPService();
 43981  00DB4C  ECEF  F081         	call	_USBCtrlEPService	;wreg free
 43982                           
 43983                           ;usb_device.c: 813: }
 43984  00DB50  D00E               	goto	i2l178
 43985  00DB52                     i2l176:
 43986                           
 43987                           ;usb_device.c: 814: else
 43988                           ;usb_device.c: 815: {
 43989                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 43990  00DB52  0E00               	movlw	0
 43991  00DB54  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43992  00DB56  0E72               	movlw	114
 43993  00DB58  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43994  00DB5A  0E5D               	movlw	low _USTATcopy
 43995  00DB5C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43996  00DB5E  0E00               	movlw	high _USTATcopy
 43997  00DB60  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43998  00DB62  0E00               	movlw	0
 43999  00DB64  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44000  00DB66  0E00               	movlw	0
 44001  00DB68  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44002  00DB6A  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44003  00DB6E                     i2l178:
 44004  00DB6E  2A1F               	incf	USBDeviceTasks@i,f,c
 44005  00DB70  D7C9               	goto	i2l16261
 44006  00DB72                     i2u1495_40:
 44007                           
 44008                           ;usb_device.c: 822: }
 44009                           ;usb_device.c: 823: }
 44010                           ;usb_device.c: 824: }
 44011                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 44012  00DB72  98A1               	bcf	4001,4,c	;volatile
 44013  00DB74  0012               	return		;funcret
 44014  00DB76                     __end_of_USBDeviceTasks:
 44015                           	opt stack 0
 44016                           tosu	equ	0xFFF
 44017                           tosh	equ	0xFFE
 44018                           tosl	equ	0xFFD
 44019                           pclatu	equ	0xFFB
 44020                           pclath	equ	0xFFA
 44021                           tblptru	equ	0xFF8
 44022                           tblptrh	equ	0xFF7
 44023                           tblptrl	equ	0xFF6
 44024                           tablat	equ	0xFF5
 44025                           prodh	equ	0xFF4
 44026                           prodl	equ	0xFF3
 44027                           intcon	equ	0xFF2
 44028                           intcon2	equ	0xFF1
 44029                           intcon3	equ	0xFF0
 44030                           indf0	equ	0xFEF
 44031                           postinc0	equ	0xFEE
 44032                           fsr0h	equ	0xFEA
 44033                           fsr0l	equ	0xFE9
 44034                           wreg	equ	0xFE8
 44035                           indf1	equ	0xFE7
 44036                           postinc1	equ	0xFE6
 44037                           postdec1	equ	0xFE5
 44038                           plusw1	equ	0xFE3
 44039                           fsr1h	equ	0xFE2
 44040                           fsr1l	equ	0xFE1
 44041                           indf2	equ	0xFDF
 44042                           postinc2	equ	0xFDE
 44043                           postdec2	equ	0xFDD
 44044                           plusw2	equ	0xFDB
 44045                           fsr2h	equ	0xFDA
 44046                           fsr2l	equ	0xFD9
 44047                           status	equ	0xFD8
 44048                           
 44049 ;; *************** function i2_USBDeviceInit *****************
 44050 ;; Defined at:
 44051 ;;		line 277 in file "usb_device.c"
 44052 ;; Parameters:    Size  Location     Type
 44053 ;;		None
 44054 ;; Auto vars:     Size  Location     Type
 44055 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 44056 ;; Return value:  Size  Location     Type
 44057 ;;                  1    wreg      void 
 44058 ;; Registers used:
 44059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44060 ;; Tracked objects:
 44061 ;;		On entry : 0/0
 44062 ;;		On exit  : 0/0
 44063 ;;		Unchanged: 0/0
 44064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44069 ;;Total ram usage:        1 bytes
 44070 ;; Hardware stack levels used:    1
 44071 ;; Hardware stack levels required when called:    1
 44072 ;; This function calls:
 44073 ;;		i2_memset
 44074 ;; This function is called by:
 44075 ;;		_USBDeviceTasks
 44076 ;; This function uses a non-reentrant model
 44077 ;;
 44078                           
 44079                           	psect	text216
 44080  00D8EC                     __ptext216:
 44081                           	opt stack 0
 44082  00D8EC                     i2_USBDeviceInit:
 44083                           	opt stack 15
 44084                           
 44085                           ;usb_device.c: 279: uint8_t i;
 44086                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 44087                           
 44088                           ;incstack = 0
 44089  00D8EC  98A0               	bcf	4000,4,c	;volatile
 44090                           
 44091                           ;usb_device.c: 285: ;
 44092                           ;usb_device.c: 288: {UEIR = 0;};
 44093  00D8EE  0E00               	movlw	0
 44094  00D8F0  6E63               	movwf	3939,c	;volatile
 44095                           
 44096                           ;usb_device.c: 291: {UIR = 0;};
 44097  00D8F2  0E00               	movlw	0
 44098  00D8F4  6E62               	movwf	3938,c	;volatile
 44099                           
 44100                           ;usb_device.c: 294: UEP0 = 0;
 44101  00D8F6  0E00               	movlw	0
 44102  00D8F8  010F               	movlb	15	; () banked
 44103  00D8FA  6F26               	movwf	38,b	;volatile
 44104                           
 44105                           ; BSR set to: 15
 44106                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 44107  00D8FC  0E27               	movlw	39
 44108  00D8FE  6E01               	movwf	i2memset@p1,c
 44109  00D900  0E0F               	movlw	15
 44110  00D902  6E02               	movwf	i2memset@p1+1,c
 44111  00D904  0E00               	movlw	0
 44112  00D906  6E04               	movwf	i2memset@c+1,c
 44113  00D908  0E00               	movlw	0
 44114  00D90A  6E03               	movwf	i2memset@c,c
 44115  00D90C  0E00               	movlw	0
 44116  00D90E  6E06               	movwf	i2memset@n+1,c
 44117  00D910  0E02               	movlw	2
 44118  00D912  6E05               	movwf	i2memset@n,c
 44119  00D914  EC2F  F094         	call	i2_memset	;wreg free
 44120                           
 44121                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 44122  00D918  0E16               	movlw	22
 44123  00D91A  010F               	movlb	15	; () banked
 44124  00D91C  6F39               	movwf	57,b	;volatile
 44125                           
 44126                           ; BSR set to: 15
 44127  00D91E  0E9F               	movlw	159
 44128  00D920  6F37               	movwf	55,b	;volatile
 44129                           
 44130                           ; BSR set to: 15
 44131  00D922  0E7B               	movlw	123
 44132  00D924  6F36               	movwf	54,b	;volatile
 44133                           
 44134                           ; BSR set to: 15
 44135                           ;usb_device.c: 301: ;
 44136                           ;usb_device.c: 304: ;
 44137                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 44138  00D926  0E00               	movlw	0
 44139  00D928  6E09               	movwf	i2USBDeviceInit@i,c
 44140  00D92A                     i2l16055:
 44141                           
 44142                           ; BSR set to: 15
 44143  00D92A  0E0B               	movlw	11
 44144  00D92C  6409               	cpfsgt	i2USBDeviceInit@i,c
 44145  00D92E  D001               	goto	i2l147
 44146  00D930  D00E               	goto	i2u1463_40
 44147  00D932                     i2l147:
 44148                           
 44149                           ;usb_device.c: 308: {
 44150                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 44151                           
 44152                           ; BSR set to: 15
 44153  00D932  5009               	movf	i2USBDeviceInit@i,w,c
 44154  00D934  0D04               	mullw	4
 44155  00D936  0E00               	movlw	0
 44156  00D938  24F3               	addwf	prodl,w,c
 44157  00D93A  6ED9               	movwf	fsr2l,c
 44158  00D93C  0E0D               	movlw	13
 44159  00D93E  20F4               	addwfc	prodh,w,c
 44160  00D940  6EDA               	movwf	fsr2h,c
 44161  00D942  6ADE               	clrf	postinc2,c
 44162  00D944  6ADE               	clrf	postinc2,c
 44163  00D946  6ADE               	clrf	postinc2,c
 44164  00D948  6ADD               	clrf	postdec2,c
 44165  00D94A  2A09               	incf	i2USBDeviceInit@i,f,c
 44166  00D94C  D7EE               	goto	i2l16055
 44167  00D94E                     i2u1463_40:
 44168                           
 44169                           ;usb_device.c: 310: }
 44170                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 44171  00D94E  8C65               	bsf	3941,6,c	;volatile
 44172                           
 44173                           ;usb_device.c: 316: UADDR = 0x00;
 44174  00D950  0E00               	movlw	0
 44175  00D952  010F               	movlb	15	; () banked
 44176  00D954  6F38               	movwf	56,b	;volatile
 44177                           
 44178                           ; BSR set to: 15
 44179                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 44180  00D956  9865               	bcf	3941,4,c	;volatile
 44181                           
 44182                           ; BSR set to: 15
 44183                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 44184  00D958  9C65               	bcf	3941,6,c	;volatile
 44185  00D95A                     
 44186                           ;usb_device.c: 326: {
 44187                           ;usb_device.c: 327: (UIR &= 0xF7);
 44188                           
 44189                           ; BSR set to: 15
 44190  00D95A  9662               	bcf	3938,3,c	;volatile
 44191                           
 44192                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 44193  00D95C  0E00               	movlw	0
 44194  00D95E  0100               	movlb	0	; () banked
 44195  00D960  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 44196                           
 44197                           ; BSR set to: 0
 44198                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 44199  00D962  0E00               	movlw	0
 44200  00D964  6E35               	movwf	_outPipes+3,c	;volatile
 44201                           
 44202                           ; BSR set to: 0
 44203                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 44204  00D966  0E00               	movlw	0
 44205  00D968  6E37               	movwf	_outPipes+5,c	;volatile
 44206  00D96A  0E00               	movlw	0
 44207  00D96C  6E36               	movwf	_outPipes+4,c	;volatile
 44208                           
 44209                           ; BSR set to: 0
 44210                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 44211  00D96E  B662               	btfsc	3938,3,c	;volatile
 44212  00D970  D7F4               	goto	i2l149
 44213                           
 44214                           ; BSR set to: 0
 44215                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 44216                           
 44217                           ; BSR set to: 0
 44218  00D972  0E01               	movlw	1
 44219  00D974  0101               	movlb	1	; () banked
 44220  00D976  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 44221                           
 44222                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 44223  00D978  0E01               	movlw	1
 44224  00D97A  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 44225                           
 44226                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 44227  00D97C  0E00               	movlw	0
 44228  00D97E  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 44229                           
 44230                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 44231  00D980  0E00               	movlw	0
 44232  00D982  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 44233                           
 44234                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 44235  00D984  0E00               	movlw	0
 44236  00D986  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 44237                           
 44238                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 44239  00D988  0E00               	movlw	0
 44240  00D98A  6E09               	movwf	i2USBDeviceInit@i,c
 44241  00D98C                     i2l16083:
 44242                           
 44243                           ; BSR set to: 1
 44244  00D98C  0E02               	movlw	2
 44245  00D98E  6409               	cpfsgt	i2USBDeviceInit@i,c
 44246  00D990  D001               	goto	i2l151
 44247  00D992  D02E               	goto	i2u1466_40
 44248  00D994                     i2l151:
 44249                           
 44250                           ;usb_device.c: 346: {
 44251                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 44252                           
 44253                           ; BSR set to: 1
 44254  00D994  5009               	movf	i2USBDeviceInit@i,w,c
 44255  00D996  0D02               	mullw	2
 44256  00D998  0E3B               	movlw	low _pBDTEntryIn
 44257  00D99A  24F3               	addwf	prodl,w,c
 44258  00D99C  6ED9               	movwf	fsr2l,c
 44259  00D99E  0E00               	movlw	high _pBDTEntryIn
 44260  00D9A0  20F4               	addwfc	prodh,w,c
 44261  00D9A2  6EDA               	movwf	fsr2h,c
 44262  00D9A4  0E00               	movlw	0
 44263  00D9A6  6EDE               	movwf	postinc2,c
 44264  00D9A8  0E00               	movlw	0
 44265  00D9AA  6EDD               	movwf	postdec2,c
 44266                           
 44267                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 44268  00D9AC  5009               	movf	i2USBDeviceInit@i,w,c
 44269  00D9AE  0D02               	mullw	2
 44270  00D9B0  0ED3               	movlw	low _pBDTEntryOut
 44271  00D9B2  24F3               	addwf	prodl,w,c
 44272  00D9B4  6ED9               	movwf	fsr2l,c
 44273  00D9B6  0E01               	movlw	high _pBDTEntryOut
 44274  00D9B8  20F4               	addwfc	prodh,w,c
 44275  00D9BA  6EDA               	movwf	fsr2h,c
 44276  00D9BC  0E00               	movlw	0
 44277  00D9BE  6EDE               	movwf	postinc2,c
 44278  00D9C0  0E00               	movlw	0
 44279  00D9C2  6EDD               	movwf	postdec2,c
 44280                           
 44281                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 44282  00D9C4  5009               	movf	i2USBDeviceInit@i,w,c
 44283  00D9C6  0D01               	mullw	1
 44284  00D9C8  0EE4               	movlw	low _ep_data_in
 44285  00D9CA  24F3               	addwf	prodl,w,c
 44286  00D9CC  6ED9               	movwf	fsr2l,c
 44287  00D9CE  0E01               	movlw	high _ep_data_in
 44288  00D9D0  20F4               	addwfc	prodh,w,c
 44289  00D9D2  6EDA               	movwf	fsr2h,c
 44290  00D9D4  0E00               	movlw	0
 44291  00D9D6  6EDF               	movwf	indf2,c
 44292                           
 44293                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 44294  00D9D8  5009               	movf	i2USBDeviceInit@i,w,c
 44295  00D9DA  0D01               	mullw	1
 44296  00D9DC  0EE1               	movlw	low _ep_data_out
 44297  00D9DE  24F3               	addwf	prodl,w,c
 44298  00D9E0  6ED9               	movwf	fsr2l,c
 44299  00D9E2  0E01               	movlw	high _ep_data_out
 44300  00D9E4  20F4               	addwfc	prodh,w,c
 44301  00D9E6  6EDA               	movwf	fsr2h,c
 44302  00D9E8  0E00               	movlw	0
 44303  00D9EA  6EDF               	movwf	indf2,c
 44304  00D9EC  2A09               	incf	i2USBDeviceInit@i,f,c
 44305  00D9EE  D7CE               	goto	i2l16083
 44306  00D9F0                     i2u1466_40:
 44307                           
 44308                           ;usb_device.c: 351: }
 44309                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 44310  00D9F0  0E08               	movlw	8
 44311  00D9F2  6E3B               	movwf	_pBDTEntryIn,c
 44312  00D9F4  0E0D               	movlw	13
 44313  00D9F6  6E3C               	movwf	_pBDTEntryIn+1,c
 44314                           
 44315                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 44316  00D9F8  0E16               	movlw	22
 44317  00D9FA  010F               	movlb	15	; () banked
 44318  00D9FC  6F26               	movwf	38,b	;volatile
 44319                           
 44320                           ; BSR set to: 15
 44321                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 44322  00D9FE  0E0D               	movlw	13
 44323  00DA00  010D               	movlb	13	; () banked
 44324  00DA02  6F03               	movwf	3,b	;volatile
 44325  00DA04  0E30               	movlw	48
 44326  00DA06  6F02               	movwf	2,b	;volatile
 44327                           
 44328                           ; BSR set to: 13
 44329                           ;usb_device.c: 359: BDT[0].CNT = 8;
 44330  00DA08  0E08               	movlw	8
 44331  00DA0A  6F01               	movwf	1,b	;volatile
 44332                           
 44333                           ; BSR set to: 13
 44334                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 44335  00DA0C  0E04               	movlw	4
 44336  00DA0E  6F00               	movwf	0,b	;volatile
 44337                           
 44338                           ; BSR set to: 13
 44339                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 44340  00DA10  8F00               	bsf	0,7,b	;volatile
 44341                           
 44342                           ; BSR set to: 13
 44343                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 44344  00DA12  0E00               	movlw	0
 44345  00DA14  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 44346                           
 44347                           ; BSR set to: 13
 44348                           ;usb_device.c: 366: USB1msTickCount = 0;
 44349  00DA16  0E00               	movlw	0
 44350  00DA18  0101               	movlb	1	; () banked
 44351  00DA1A  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 44352  00DA1C  0E00               	movlw	0
 44353  00DA1E  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 44354  00DA20  0E00               	movlw	0
 44355  00DA22  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 44356  00DA24  0E00               	movlw	0
 44357  00DA26  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 44358                           
 44359                           ; BSR set to: 1
 44360                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 44361  00DA28  0E00               	movlw	0
 44362  00DA2A  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44363                           
 44364                           ; BSR set to: 1
 44365                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 44366  00DA2C  0E00               	movlw	0
 44367  00DA2E  6E5C               	movwf	_USBDeviceState,c	;volatile
 44368                           
 44369                           ; BSR set to: 1
 44370  00DA30  0012               	return		;funcret
 44371  00DA32                     __end_ofi2_USBDeviceInit:
 44372                           	opt stack 0
 44373                           tosu	equ	0xFFF
 44374                           tosh	equ	0xFFE
 44375                           tosl	equ	0xFFD
 44376                           pclatu	equ	0xFFB
 44377                           pclath	equ	0xFFA
 44378                           tblptru	equ	0xFF8
 44379                           tblptrh	equ	0xFF7
 44380                           tblptrl	equ	0xFF6
 44381                           tablat	equ	0xFF5
 44382                           prodh	equ	0xFF4
 44383                           prodl	equ	0xFF3
 44384                           intcon	equ	0xFF2
 44385                           intcon2	equ	0xFF1
 44386                           intcon3	equ	0xFF0
 44387                           indf0	equ	0xFEF
 44388                           postinc0	equ	0xFEE
 44389                           fsr0h	equ	0xFEA
 44390                           fsr0l	equ	0xFE9
 44391                           wreg	equ	0xFE8
 44392                           indf1	equ	0xFE7
 44393                           postinc1	equ	0xFE6
 44394                           postdec1	equ	0xFE5
 44395                           plusw1	equ	0xFE3
 44396                           fsr1h	equ	0xFE2
 44397                           fsr1l	equ	0xFE1
 44398                           indf2	equ	0xFDF
 44399                           postinc2	equ	0xFDE
 44400                           postdec2	equ	0xFDD
 44401                           plusw2	equ	0xFDB
 44402                           fsr2h	equ	0xFDA
 44403                           fsr2l	equ	0xFD9
 44404                           status	equ	0xFD8
 44405                           
 44406 ;; *************** function _USBWakeFromSuspend *****************
 44407 ;; Defined at:
 44408 ;;		line 2305 in file "usb_device.c"
 44409 ;; Parameters:    Size  Location     Type
 44410 ;;		None
 44411 ;; Auto vars:     Size  Location     Type
 44412 ;;		None
 44413 ;; Return value:  Size  Location     Type
 44414 ;;                  1    wreg      void 
 44415 ;; Registers used:
 44416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 44417 ;; Tracked objects:
 44418 ;;		On entry : 0/0
 44419 ;;		On exit  : 0/0
 44420 ;;		Unchanged: 0/0
 44421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44426 ;;Total ram usage:        0 bytes
 44427 ;; Hardware stack levels used:    1
 44428 ;; Hardware stack levels required when called:    4
 44429 ;; This function calls:
 44430 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44431 ;; This function is called by:
 44432 ;;		_USBDeviceTasks
 44433 ;; This function uses a non-reentrant model
 44434 ;;
 44435                           
 44436                           	psect	text217
 44437  0124D2                     __ptext217:
 44438                           	opt stack 0
 44439  0124D2                     _USBWakeFromSuspend:
 44440                           	opt stack 12
 44441                           
 44442                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 44443                           
 44444                           ; BSR set to: 1
 44445                           ;incstack = 0
 44446  0124D2  0E00               	movlw	0
 44447  0124D4  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 44448                           
 44449                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 44450  0124D6  0E00               	movlw	0
 44451  0124D8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44452  0124DA  0E74               	movlw	116
 44453  0124DC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44454  0124DE  0E00               	movlw	0
 44455  0124E0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44456  0124E2  0E00               	movlw	0
 44457  0124E4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44458  0124E6  0E00               	movlw	0
 44459  0124E8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44460  0124EA  0E00               	movlw	0
 44461  0124EC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44462  0124EE  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44463                           
 44464                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 44465  0124F2  9265               	bcf	3941,1,c	;volatile
 44466                           
 44467                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 44468  0124F4  010F               	movlb	15	; () banked
 44469  0124F6  9536               	bcf	54,2,b	;volatile
 44470                           
 44471                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 44472  0124F8  D001               	goto	i2l317
 44473  0124FA                     
 44474                           ;usb_device.c: 2345: {
 44475                           ;usb_device.c: 2346: (UIR &= 0xFB);
 44476                           
 44477                           ; BSR set to: 15
 44478  0124FA  9462               	bcf	3938,2,c	;volatile
 44479  0124FC                     i2l317:
 44480  0124FC  B462               	btfsc	3938,2,c	;volatile
 44481  0124FE  D7FD               	goto	i2l318
 44482                           
 44483                           ;usb_device.c: 2347: }
 44484                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 44485  012500  0E00               	movlw	0
 44486  012502  0101               	movlb	1	; () banked
 44487  012504  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44488                           
 44489                           ; BSR set to: 1
 44490  012506  0012               	return		;funcret
 44491  012508                     __end_of_USBWakeFromSuspend:
 44492                           	opt stack 0
 44493                           tosu	equ	0xFFF
 44494                           tosh	equ	0xFFE
 44495                           tosl	equ	0xFFD
 44496                           pclatu	equ	0xFFB
 44497                           pclath	equ	0xFFA
 44498                           tblptru	equ	0xFF8
 44499                           tblptrh	equ	0xFF7
 44500                           tblptrl	equ	0xFF6
 44501                           tablat	equ	0xFF5
 44502                           prodh	equ	0xFF4
 44503                           prodl	equ	0xFF3
 44504                           intcon	equ	0xFF2
 44505                           intcon2	equ	0xFF1
 44506                           intcon3	equ	0xFF0
 44507                           indf0	equ	0xFEF
 44508                           postinc0	equ	0xFEE
 44509                           fsr0h	equ	0xFEA
 44510                           fsr0l	equ	0xFE9
 44511                           wreg	equ	0xFE8
 44512                           indf1	equ	0xFE7
 44513                           postinc1	equ	0xFE6
 44514                           postdec1	equ	0xFE5
 44515                           plusw1	equ	0xFE3
 44516                           fsr1h	equ	0xFE2
 44517                           fsr1l	equ	0xFE1
 44518                           indf2	equ	0xFDF
 44519                           postinc2	equ	0xFDE
 44520                           postdec2	equ	0xFDD
 44521                           plusw2	equ	0xFDB
 44522                           fsr2h	equ	0xFDA
 44523                           fsr2l	equ	0xFD9
 44524                           status	equ	0xFD8
 44525                           
 44526 ;; *************** function _USBSuspend *****************
 44527 ;; Defined at:
 44528 ;;		line 2247 in file "usb_device.c"
 44529 ;; Parameters:    Size  Location     Type
 44530 ;;		None
 44531 ;; Auto vars:     Size  Location     Type
 44532 ;;		None
 44533 ;; Return value:  Size  Location     Type
 44534 ;;                  1    wreg      void 
 44535 ;; Registers used:
 44536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 44537 ;; Tracked objects:
 44538 ;;		On entry : 0/0
 44539 ;;		On exit  : 0/0
 44540 ;;		Unchanged: 0/0
 44541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44546 ;;Total ram usage:        0 bytes
 44547 ;; Hardware stack levels used:    1
 44548 ;; Hardware stack levels required when called:    4
 44549 ;; This function calls:
 44550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44551 ;; This function is called by:
 44552 ;;		_USBDeviceTasks
 44553 ;; This function uses a non-reentrant model
 44554 ;;
 44555                           
 44556                           	psect	text218
 44557  01266A                     __ptext218:
 44558                           	opt stack 0
 44559  01266A                     _USBSuspend:
 44560                           	opt stack 12
 44561                           
 44562                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 44563                           
 44564                           ; BSR set to: 1
 44565                           ;incstack = 0
 44566  01266A  010F               	movlb	15	; () banked
 44567  01266C  8536               	bsf	54,2,b	;volatile
 44568                           
 44569                           ; BSR set to: 15
 44570                           ;usb_device.c: 2273: (UIR &= 0xEF);
 44571  01266E  9862               	bcf	3938,4,c	;volatile
 44572                           
 44573                           ; BSR set to: 15
 44574                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 44575  012670  8265               	bsf	3941,1,c	;volatile
 44576                           
 44577                           ; BSR set to: 15
 44578                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 44579  012672  0E01               	movlw	1
 44580  012674  6E58               	movwf	_USBBusIsSuspended,c	;volatile
 44581                           
 44582                           ; BSR set to: 15
 44583                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 44584  012676  0E00               	movlw	0
 44585  012678  0101               	movlb	1	; () banked
 44586  01267A  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44587                           
 44588                           ; BSR set to: 1
 44589                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 44590  01267C  0E00               	movlw	0
 44591  01267E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44592  012680  0E75               	movlw	117
 44593  012682  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44594  012684  0E00               	movlw	0
 44595  012686  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44596  012688  0E00               	movlw	0
 44597  01268A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44598  01268C  0E00               	movlw	0
 44599  01268E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44600  012690  0E00               	movlw	0
 44601  012692  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44602  012694  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44603  012698  0012               	return		;funcret
 44604  01269A                     __end_of_USBSuspend:
 44605                           	opt stack 0
 44606                           tosu	equ	0xFFF
 44607                           tosh	equ	0xFFE
 44608                           tosl	equ	0xFFD
 44609                           pclatu	equ	0xFFB
 44610                           pclath	equ	0xFFA
 44611                           tblptru	equ	0xFF8
 44612                           tblptrh	equ	0xFF7
 44613                           tblptrl	equ	0xFF6
 44614                           tablat	equ	0xFF5
 44615                           prodh	equ	0xFF4
 44616                           prodl	equ	0xFF3
 44617                           intcon	equ	0xFF2
 44618                           intcon2	equ	0xFF1
 44619                           intcon3	equ	0xFF0
 44620                           indf0	equ	0xFEF
 44621                           postinc0	equ	0xFEE
 44622                           fsr0h	equ	0xFEA
 44623                           fsr0l	equ	0xFE9
 44624                           wreg	equ	0xFE8
 44625                           indf1	equ	0xFE7
 44626                           postinc1	equ	0xFE6
 44627                           postdec1	equ	0xFE5
 44628                           plusw1	equ	0xFE3
 44629                           fsr1h	equ	0xFE2
 44630                           fsr1l	equ	0xFE1
 44631                           indf2	equ	0xFDF
 44632                           postinc2	equ	0xFDE
 44633                           postdec2	equ	0xFDD
 44634                           plusw2	equ	0xFDB
 44635                           fsr2h	equ	0xFDA
 44636                           fsr2l	equ	0xFD9
 44637                           status	equ	0xFD8
 44638                           
 44639 ;; *************** function _USBStallHandler *****************
 44640 ;; Defined at:
 44641 ;;		line 2204 in file "usb_device.c"
 44642 ;; Parameters:    Size  Location     Type
 44643 ;;		None
 44644 ;; Auto vars:     Size  Location     Type
 44645 ;;		None
 44646 ;; Return value:  Size  Location     Type
 44647 ;;                  1    wreg      void 
 44648 ;; Registers used:
 44649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44650 ;; Tracked objects:
 44651 ;;		On entry : 0/0
 44652 ;;		On exit  : 0/0
 44653 ;;		Unchanged: 0/0
 44654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44659 ;;Total ram usage:        1 bytes
 44660 ;; Hardware stack levels used:    1
 44661 ;; This function calls:
 44662 ;;		Nothing
 44663 ;; This function is called by:
 44664 ;;		_USBDeviceTasks
 44665 ;; This function uses a non-reentrant model
 44666 ;;
 44667                           
 44668                           	psect	text219
 44669  01222E                     __ptext219:
 44670                           	opt stack 0
 44671  01222E                     _USBStallHandler:
 44672                           	opt stack 16
 44673                           
 44674                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 44675                           
 44676                           ;incstack = 0
 44677  01222E  010F               	movlb	15	; () banked
 44678  012230  A126               	btfss	38,0,b	;volatile
 44679  012232  D01D               	goto	i2l309
 44680                           
 44681                           ; BSR set to: 15
 44682                           ;usb_device.c: 2217: {
 44683                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 44684  012234  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44685  012238  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44686  01223C  0E80               	movlw	128
 44687  01223E  18DE               	xorwf	postinc2,w,c
 44688  012240  A4D8               	btfss	status,2,c
 44689  012242  D014               	goto	i2l310
 44690                           
 44691                           ; BSR set to: 15
 44692  012244  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 44693  012248  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44694  01224C  0E84               	movlw	132
 44695  01224E  18DE               	xorwf	postinc2,w,c
 44696  012250  A4D8               	btfss	status,2,c
 44697  012252  D00C               	goto	i2l310
 44698                           
 44699                           ; BSR set to: 15
 44700                           ;usb_device.c: 2220: {
 44701                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 44702  012254  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44703  012258  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44704  01225C  0E0C               	movlw	12
 44705  01225E  6EDF               	movwf	indf2,c
 44706                           
 44707                           ; BSR set to: 15
 44708                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 44709  012260  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44710  012264  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44711  012268  0E00               	movlw	0
 44712  01226A  8EDB               	bsf	plusw2,7,c
 44713  01226C                     i2l310:
 44714                           
 44715                           ; BSR set to: 15
 44716                           ;usb_device.c: 2224: }
 44717                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 44718                           
 44719                           ; BSR set to: 15
 44720  01226C  9126               	bcf	38,0,b	;volatile
 44721  01226E                     i2l309:
 44722                           
 44723                           ; BSR set to: 15
 44724                           ;usb_device.c: 2226: }
 44725                           ;usb_device.c: 2228: (UIR &= 0xDF);
 44726  01226E  9A62               	bcf	3938,5,c	;volatile
 44727                           
 44728                           ; BSR set to: 15
 44729  012270  0012               	return		;funcret
 44730  012272                     __end_of_USBStallHandler:
 44731                           	opt stack 0
 44732                           tosu	equ	0xFFF
 44733                           tosh	equ	0xFFE
 44734                           tosl	equ	0xFFD
 44735                           pclatu	equ	0xFFB
 44736                           pclath	equ	0xFFA
 44737                           tblptru	equ	0xFF8
 44738                           tblptrh	equ	0xFF7
 44739                           tblptrl	equ	0xFF6
 44740                           tablat	equ	0xFF5
 44741                           prodh	equ	0xFF4
 44742                           prodl	equ	0xFF3
 44743                           intcon	equ	0xFF2
 44744                           intcon2	equ	0xFF1
 44745                           intcon3	equ	0xFF0
 44746                           indf0	equ	0xFEF
 44747                           postinc0	equ	0xFEE
 44748                           fsr0h	equ	0xFEA
 44749                           fsr0l	equ	0xFE9
 44750                           wreg	equ	0xFE8
 44751                           indf1	equ	0xFE7
 44752                           postinc1	equ	0xFE6
 44753                           postdec1	equ	0xFE5
 44754                           plusw1	equ	0xFE3
 44755                           fsr1h	equ	0xFE2
 44756                           fsr1l	equ	0xFE1
 44757                           indf2	equ	0xFDF
 44758                           postinc2	equ	0xFDE
 44759                           postdec2	equ	0xFDD
 44760                           plusw2	equ	0xFDB
 44761                           fsr2h	equ	0xFDA
 44762                           fsr2l	equ	0xFD9
 44763                           status	equ	0xFD8
 44764                           
 44765 ;; *************** function _USBIncrement1msInternalTimers *****************
 44766 ;; Defined at:
 44767 ;;		line 3027 in file "usb_device.c"
 44768 ;; Parameters:    Size  Location     Type
 44769 ;;		None
 44770 ;; Auto vars:     Size  Location     Type
 44771 ;;		None
 44772 ;; Return value:  Size  Location     Type
 44773 ;;                  1    wreg      void 
 44774 ;; Registers used:
 44775 ;;		wreg, status,2, status,0
 44776 ;; Tracked objects:
 44777 ;;		On entry : 0/0
 44778 ;;		On exit  : 0/0
 44779 ;;		Unchanged: 0/0
 44780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44785 ;;Total ram usage:        0 bytes
 44786 ;; Hardware stack levels used:    1
 44787 ;; This function calls:
 44788 ;;		Nothing
 44789 ;; This function is called by:
 44790 ;;		_USBDeviceTasks
 44791 ;; This function uses a non-reentrant model
 44792 ;;
 44793                           
 44794                           	psect	text220
 44795  012BA0                     __ptext220:
 44796                           	opt stack 0
 44797  012BA0                     _USBIncrement1msInternalTimers:
 44798                           	opt stack 16
 44799                           
 44800                           ;usb_device.c: 3035: USB1msTickCount++;
 44801                           
 44802                           ; BSR set to: 15
 44803                           ;incstack = 0
 44804  012BA0  0E01               	movlw	1
 44805  012BA2  0101               	movlb	1	; () banked
 44806  012BA4  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 44807  012BA6  0E00               	movlw	0
 44808  012BA8  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 44809  012BAA  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 44810  012BAC  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 44811                           
 44812                           ; BSR set to: 1
 44813                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 44814  012BAE  5058               	movf	_USBBusIsSuspended,w,c	;volatile
 44815  012BB0  A4D8               	btfss	status,2,c
 44816  012BB2  0012               	return	
 44817                           
 44818                           ; BSR set to: 1
 44819                           ;usb_device.c: 3037: {
 44820                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 44821  012BB4  2BF6               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 44822                           
 44823                           ; BSR set to: 1
 44824                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 44825  012BB6  51F6               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 44826  012BB8  A4D8               	btfss	status,2,c
 44827  012BBA  0012               	return	
 44828                           
 44829                           ; BSR set to: 1
 44830                           ;usb_device.c: 3041: {
 44831                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 44832  012BBC  69F6               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44833                           
 44834                           ; BSR set to: 1
 44835  012BBE  0012               	return	
 44836  012BC0                     __end_of_USBIncrement1msInternalTimers:
 44837                           	opt stack 0
 44838                           tosu	equ	0xFFF
 44839                           tosh	equ	0xFFE
 44840                           tosl	equ	0xFFD
 44841                           pclatu	equ	0xFFB
 44842                           pclath	equ	0xFFA
 44843                           tblptru	equ	0xFF8
 44844                           tblptrh	equ	0xFF7
 44845                           tblptrl	equ	0xFF6
 44846                           tablat	equ	0xFF5
 44847                           prodh	equ	0xFF4
 44848                           prodl	equ	0xFF3
 44849                           intcon	equ	0xFF2
 44850                           intcon2	equ	0xFF1
 44851                           intcon3	equ	0xFF0
 44852                           indf0	equ	0xFEF
 44853                           postinc0	equ	0xFEE
 44854                           fsr0h	equ	0xFEA
 44855                           fsr0l	equ	0xFE9
 44856                           wreg	equ	0xFE8
 44857                           indf1	equ	0xFE7
 44858                           postinc1	equ	0xFE6
 44859                           postdec1	equ	0xFE5
 44860                           plusw1	equ	0xFE3
 44861                           fsr1h	equ	0xFE2
 44862                           fsr1l	equ	0xFE1
 44863                           indf2	equ	0xFDF
 44864                           postinc2	equ	0xFDE
 44865                           postdec2	equ	0xFDD
 44866                           plusw2	equ	0xFDB
 44867                           fsr2h	equ	0xFDA
 44868                           fsr2l	equ	0xFD9
 44869                           status	equ	0xFD8
 44870                           
 44871 ;; *************** function _USBCtrlEPService *****************
 44872 ;; Defined at:
 44873 ;;		line 2374 in file "usb_device.c"
 44874 ;; Parameters:    Size  Location     Type
 44875 ;;		None
 44876 ;; Auto vars:     Size  Location     Type
 44877 ;;		None
 44878 ;; Return value:  Size  Location     Type
 44879 ;;                  1    wreg      void 
 44880 ;; Registers used:
 44881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44882 ;; Tracked objects:
 44883 ;;		On entry : 0/0
 44884 ;;		On exit  : 0/0
 44885 ;;		Unchanged: 0/0
 44886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44891 ;;Total ram usage:        1 bytes
 44892 ;; Hardware stack levels used:    1
 44893 ;; Hardware stack levels required when called:    7
 44894 ;; This function calls:
 44895 ;;		_USBCtrlTrfInHandler
 44896 ;;		_USBCtrlTrfOutHandler
 44897 ;;		_USBCtrlTrfSetupHandler
 44898 ;;		i2_memcpy
 44899 ;; This function is called by:
 44900 ;;		_USBDeviceTasks
 44901 ;; This function uses a non-reentrant model
 44902 ;;
 44903                           
 44904                           	psect	text221
 44905  0103DE                     __ptext221:
 44906                           	opt stack 0
 44907  0103DE                     _USBCtrlEPService:
 44908                           	opt stack 9
 44909                           
 44910                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 44911                           
 44912                           ; BSR set to: 1
 44913                           ;incstack = 0
 44914  0103DE  0E2D               	movlw	45
 44915  0103E0  6E56               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 44916                           
 44917                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 44918  0103E2  C05D  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44919  0103E6  0EFD               	movlw	253
 44920  0103E8  161E               	andwf	??_USBCtrlEPService,f,c
 44921  0103EA  A4D8               	btfss	status,2,c
 44922  0103EC  D03C               	goto	i2l323
 44923                           
 44924                           ;usb_device.c: 2385: {
 44925                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 44926  0103EE  C05D  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44927  0103F2  90D8               	bcf	status,0,c
 44928  0103F4  321E               	rrcf	??_USBCtrlEPService,f,c
 44929  0103F6  0E3F               	movlw	63
 44930  0103F8  161E               	andwf	??_USBCtrlEPService,f,c
 44931  0103FA  501E               	movf	??_USBCtrlEPService,w,c
 44932  0103FC  0D04               	mullw	4
 44933  0103FE  0E00               	movlw	0
 44934  010400  24F3               	addwf	prodl,w,c
 44935  010402  6E49               	movwf	_pBDTEntryEP0OutCurrent,c
 44936  010404  0E0D               	movlw	13
 44937  010406  20F4               	addwfc	prodh,w,c
 44938  010408  6E4A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 44939                           
 44940                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 44941  01040A  C049  F0FB         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 44942  01040E  C04A  F0FC         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 44943                           
 44944                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 44945  010412  0E04               	movlw	4
 44946  010414  0100               	movlb	0	; () banked
 44947  010416  19FB               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 44948  010418  6FFB               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 44949  01041A  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 44950  01041C  6FFC               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 44951                           
 44952                           ; BSR set to: 0
 44953                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 44954  01041E  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44955  010422  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44956  010426  30DF               	rrcf	indf2,w,c
 44957  010428  32E8               	rrcf	wreg,f,c
 44958  01042A  0B0F               	andlw	15
 44959  01042C  0A0D               	xorlw	13
 44960  01042E  A4D8               	btfss	status,2,c
 44961  010430  D017               	goto	i2l324
 44962                           
 44963                           ; BSR set to: 0
 44964                           ;usb_device.c: 2402: {
 44965                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 44966  010432  0E30               	movlw	48
 44967  010434  6E01               	movwf	i2memcpy@d1,c
 44968  010436  0E0D               	movlw	13
 44969  010438  6E02               	movwf	i2memcpy@d1+1,c
 44970  01043A  EE20 F002          	lfsr	2,2
 44971  01043E  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 44972  010440  26D9               	addwf	fsr2l,f,c
 44973  010442  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 44974  010444  22DA               	addwfc	fsr2h,f,c
 44975  010446  CFDE F003          	movff	postinc2,i2memcpy@s1
 44976  01044A  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 44977  01044E  0E00               	movlw	0
 44978  010450  6E06               	movwf	i2memcpy@n+1,c
 44979  010452  0E08               	movlw	8
 44980  010454  6E05               	movwf	i2memcpy@n,c
 44981  010456  ECA4  F08C         	call	i2_memcpy	;wreg free
 44982                           
 44983                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 44984  01045A  ECAD  F083         	call	_USBCtrlTrfSetupHandler	;wreg free
 44985                           
 44986                           ;usb_device.c: 2411: }
 44987  01045E  0012               	return	
 44988  010460                     i2l324:
 44989                           
 44990                           ;usb_device.c: 2412: else
 44991                           ;usb_device.c: 2413: {
 44992                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 44993  010460  EC8A  F08B         	call	_USBCtrlTrfOutHandler	;wreg free
 44994                           
 44995                           ;usb_device.c: 2416: }
 44996                           ;usb_device.c: 2417: }
 44997  010464  0012               	return	
 44998  010466                     i2l323:
 44999                           
 45000                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 45001  010466  505D               	movf	_USTATcopy,w,c	;volatile
 45002  010468  0BFD               	andlw	253
 45003  01046A  0A04               	xorlw	4
 45004  01046C  A4D8               	btfss	status,2,c
 45005  01046E  0012               	return	
 45006                           
 45007                           ;usb_device.c: 2419: {
 45008                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 45009  010470  EC3D  F07F         	call	_USBCtrlTrfInHandler	;wreg free
 45010  010474  0012               	return	
 45011  010476                     __end_of_USBCtrlEPService:
 45012                           	opt stack 0
 45013                           tosu	equ	0xFFF
 45014                           tosh	equ	0xFFE
 45015                           tosl	equ	0xFFD
 45016                           pclatu	equ	0xFFB
 45017                           pclath	equ	0xFFA
 45018                           tblptru	equ	0xFF8
 45019                           tblptrh	equ	0xFF7
 45020                           tblptrl	equ	0xFF6
 45021                           tablat	equ	0xFF5
 45022                           prodh	equ	0xFF4
 45023                           prodl	equ	0xFF3
 45024                           intcon	equ	0xFF2
 45025                           intcon2	equ	0xFF1
 45026                           intcon3	equ	0xFF0
 45027                           indf0	equ	0xFEF
 45028                           postinc0	equ	0xFEE
 45029                           fsr0h	equ	0xFEA
 45030                           fsr0l	equ	0xFE9
 45031                           wreg	equ	0xFE8
 45032                           indf1	equ	0xFE7
 45033                           postinc1	equ	0xFE6
 45034                           postdec1	equ	0xFE5
 45035                           plusw1	equ	0xFE3
 45036                           fsr1h	equ	0xFE2
 45037                           fsr1l	equ	0xFE1
 45038                           indf2	equ	0xFDF
 45039                           postinc2	equ	0xFDE
 45040                           postdec2	equ	0xFDD
 45041                           plusw2	equ	0xFDB
 45042                           fsr2h	equ	0xFDA
 45043                           fsr2l	equ	0xFD9
 45044                           status	equ	0xFD8
 45045                           
 45046 ;; *************** function i2_memcpy *****************
 45047 ;; Defined at:
 45048 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 45049 ;; Parameters:    Size  Location     Type
 45050 ;;  d1              2    0[COMRAM] PTR void 
 45051 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 45052 ;;		 -> SetupPkt(8), 
 45053 ;;  s1              2    2[COMRAM] PTR const void 
 45054 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 45055 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 45056 ;;		 -> SetupPkt(8), 
 45057 ;;  n               2    4[COMRAM] unsigned int 
 45058 ;; Auto vars:     Size  Location     Type
 45059 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 45060 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 45061 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 45062 ;;		 -> SetupPkt(8), 
 45063 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 45064 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 45065 ;;		 -> SetupPkt(8), 
 45066 ;;  memcpy          1   10[COMRAM] unsigned char 
 45067 ;; Return value:  Size  Location     Type
 45068 ;;                  2    0[COMRAM] PTR void 
 45069 ;; Registers used:
 45070 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 45071 ;; Tracked objects:
 45072 ;;		On entry : 0/0
 45073 ;;		On exit  : 0/0
 45074 ;;		Unchanged: 0/0
 45075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45076 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45077 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45079 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45080 ;;Total ram usage:       11 bytes
 45081 ;; Hardware stack levels used:    1
 45082 ;; This function calls:
 45083 ;;		Nothing
 45084 ;; This function is called by:
 45085 ;;		_USBCtrlEPService
 45086 ;; This function uses a non-reentrant model
 45087 ;;
 45088                           
 45089                           	psect	text222
 45090  011948                     __ptext222:
 45091                           	opt stack 0
 45092  011948                     i2_memcpy:
 45093                           	opt stack 15
 45094                           
 45095                           ;incstack = 0
 45096  011948  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 45097  01194C  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 45098  011950  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 45099  011954  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 45100  011958  D01C               	goto	i2l3758
 45101  01195A                     i2l14301:
 45102  01195A  C009  FFF6         	movff	i2memcpy@s,tblptrl
 45103  01195E  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 45104  011962  0E00               	movlw	low (__mediumconst shr (0+16))
 45105  011964  6EF8               	movwf	tblptru,c
 45106  011966  0E0E               	movlw	(high __ramtop+-1)
 45107  011968  64F7               	cpfsgt	tblptrh,c
 45108  01196A  D003               	bra	i2u1223_47
 45109  01196C  0008               	tblrd		*
 45110  01196E  50F5               	movf	tablat,w,c
 45111  011970  D005               	bra	i2u1223_40
 45112  011972                     i2u1223_47:
 45113  011972  CFF6 FFE9          	movff	tblptrl,fsr0l
 45114  011976  CFF7 FFEA          	movff	tblptrh,fsr0h
 45115  01197A  50EF               	movf	indf0,w,c
 45116  01197C                     i2u1223_40:
 45117  01197C  6E0B               	movwf	i2memcpy@tmp,c
 45118  01197E  4A09               	infsnz	i2memcpy@s,f,c
 45119  011980  2A0A               	incf	i2memcpy@s+1,f,c
 45120  011982  C007  FFD9         	movff	i2memcpy@d,fsr2l
 45121  011986  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 45122  01198A  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 45123  01198E  4A07               	infsnz	i2memcpy@d,f,c
 45124  011990  2A08               	incf	i2memcpy@d+1,f,c
 45125  011992                     i2l3758:
 45126  011992  0605               	decf	i2memcpy@n,f,c
 45127  011994  A0D8               	btfss	status,0,c
 45128  011996  0606               	decf	i2memcpy@n+1,f,c
 45129  011998  2805               	incf	i2memcpy@n,w,c
 45130  01199A  E1DF               	bnz	i2l14301
 45131  01199C  2806               	incf	i2memcpy@n+1,w,c
 45132  01199E  B4D8               	btfsc	status,2,c
 45133  0119A0  0012               	return	
 45134  0119A2  D7DB               	goto	i2l3759
 45135  0119A4                     __end_ofi2_memcpy:
 45136                           	opt stack 0
 45137                           tosu	equ	0xFFF
 45138                           tosh	equ	0xFFE
 45139                           tosl	equ	0xFFD
 45140                           pclatu	equ	0xFFB
 45141                           pclath	equ	0xFFA
 45142                           tblptru	equ	0xFF8
 45143                           tblptrh	equ	0xFF7
 45144                           tblptrl	equ	0xFF6
 45145                           tablat	equ	0xFF5
 45146                           prodh	equ	0xFF4
 45147                           prodl	equ	0xFF3
 45148                           intcon	equ	0xFF2
 45149                           intcon2	equ	0xFF1
 45150                           intcon3	equ	0xFF0
 45151                           indf0	equ	0xFEF
 45152                           postinc0	equ	0xFEE
 45153                           fsr0h	equ	0xFEA
 45154                           fsr0l	equ	0xFE9
 45155                           wreg	equ	0xFE8
 45156                           indf1	equ	0xFE7
 45157                           postinc1	equ	0xFE6
 45158                           postdec1	equ	0xFE5
 45159                           plusw1	equ	0xFE3
 45160                           fsr1h	equ	0xFE2
 45161                           fsr1l	equ	0xFE1
 45162                           indf2	equ	0xFDF
 45163                           postinc2	equ	0xFDE
 45164                           postdec2	equ	0xFDD
 45165                           plusw2	equ	0xFDB
 45166                           fsr2h	equ	0xFDA
 45167                           fsr2l	equ	0xFD9
 45168                           status	equ	0xFD8
 45169                           
 45170 ;; *************** function _USBCtrlTrfSetupHandler *****************
 45171 ;; Defined at:
 45172 ;;		line 2467 in file "usb_device.c"
 45173 ;; Parameters:    Size  Location     Type
 45174 ;;		None
 45175 ;; Auto vars:     Size  Location     Type
 45176 ;;		None
 45177 ;; Return value:  Size  Location     Type
 45178 ;;                  1    wreg      void 
 45179 ;; Registers used:
 45180 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45181 ;; Tracked objects:
 45182 ;;		On entry : 0/0
 45183 ;;		On exit  : 0/0
 45184 ;;		Unchanged: 0/0
 45185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45190 ;;Total ram usage:        0 bytes
 45191 ;; Hardware stack levels used:    1
 45192 ;; Hardware stack levels required when called:    6
 45193 ;; This function calls:
 45194 ;;		_USBCheckStdRequest
 45195 ;;		_USBCtrlEPServiceComplete
 45196 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45197 ;; This function is called by:
 45198 ;;		_USBCtrlEPService
 45199 ;; This function uses a non-reentrant model
 45200 ;;
 45201                           
 45202                           	psect	text223
 45203  01075A                     __ptext223:
 45204                           	opt stack 0
 45205  01075A                     _USBCtrlTrfSetupHandler:
 45206                           	opt stack 9
 45207                           
 45208                           ;usb_device.c: 2472: shortPacketStatus = 0;
 45209                           
 45210                           ;incstack = 0
 45211  01075A  0E00               	movlw	0
 45212  01075C  6E5B               	movwf	_shortPacketStatus,c	;volatile
 45213                           
 45214                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 45215  01075E  0E00               	movlw	0
 45216  010760  6E55               	movwf	_USBDeferStatusStagePacket,c	;volatile
 45217                           
 45218                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 45219  010762  0E00               	movlw	0
 45220  010764  0101               	movlb	1	; () banked
 45221  010766  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 45222                           
 45223                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 45224  010768  0E00               	movlw	0
 45225  01076A  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 45226                           
 45227                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 45228  01076C  0E00               	movlw	0
 45229  01076E  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 45230                           
 45231                           ;usb_device.c: 2477: controlTransferState = 0;
 45232  010770  0E00               	movlw	0
 45233  010772  6E5A               	movwf	_controlTransferState,c	;volatile
 45234                           
 45235                           ; BSR set to: 1
 45236                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 45237  010774  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45238  010778  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45239  01077C  0E7F               	movlw	127
 45240  01077E  16DF               	andwf	indf2,f,c
 45241                           
 45242                           ; BSR set to: 1
 45243                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 45244  010780  0E04               	movlw	4
 45245  010782  183B               	xorwf	_pBDTEntryIn,w,c
 45246  010784  6E3B               	movwf	_pBDTEntryIn,c
 45247  010786  503C               	movf	_pBDTEntryIn+1,w,c
 45248  010788  6E3C               	movwf	_pBDTEntryIn+1,c
 45249                           
 45250                           ; BSR set to: 1
 45251                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 45252  01078A  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45253  01078E  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45254  010792  0E7F               	movlw	127
 45255  010794  16DF               	andwf	indf2,f,c
 45256                           
 45257                           ; BSR set to: 1
 45258                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 45259  010796  0E04               	movlw	4
 45260  010798  183B               	xorwf	_pBDTEntryIn,w,c
 45261  01079A  6E3B               	movwf	_pBDTEntryIn,c
 45262  01079C  503C               	movf	_pBDTEntryIn+1,w,c
 45263  01079E  6E3C               	movwf	_pBDTEntryIn+1,c
 45264                           
 45265                           ; BSR set to: 1
 45266                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 45267  0107A0  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45268  0107A4  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45269  0107A8  0E7F               	movlw	127
 45270  0107AA  16DF               	andwf	indf2,f,c
 45271                           
 45272                           ; BSR set to: 1
 45273                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 45274  0107AC  0E00               	movlw	0
 45275  0107AE  0100               	movlb	0	; () banked
 45276  0107B0  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 45277                           
 45278                           ; BSR set to: 0
 45279                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 45280  0107B2  0E00               	movlw	0
 45281  0107B4  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 45282  0107B6  0E00               	movlw	0
 45283  0107B8  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 45284                           
 45285                           ; BSR set to: 0
 45286                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 45287  0107BA  0E00               	movlw	0
 45288  0107BC  6E35               	movwf	_outPipes+3,c	;volatile
 45289                           
 45290                           ; BSR set to: 0
 45291                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 45292  0107BE  0E00               	movlw	0
 45293  0107C0  6E37               	movwf	_outPipes+5,c	;volatile
 45294  0107C2  0E00               	movlw	0
 45295  0107C4  6E36               	movwf	_outPipes+4,c	;volatile
 45296                           
 45297                           ; BSR set to: 0
 45298                           ;usb_device.c: 2502: USBCheckStdRequest();
 45299  0107C6  ECBE  F07A         	call	_USBCheckStdRequest	;wreg free
 45300                           
 45301                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 45302  0107CA  0E00               	movlw	0
 45303  0107CC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45304  0107CE  0E03               	movlw	3
 45305  0107D0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45306  0107D2  0E00               	movlw	0
 45307  0107D4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45308  0107D6  0E00               	movlw	0
 45309  0107D8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45310  0107DA  0E00               	movlw	0
 45311  0107DC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45312  0107DE  0E00               	movlw	0
 45313  0107E0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45314  0107E2  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45315                           
 45316                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 45317  0107E6  EC87  F076         	call	_USBCtrlEPServiceComplete	;wreg free
 45318  0107EA  0012               	return		;funcret
 45319  0107EC                     __end_of_USBCtrlTrfSetupHandler:
 45320                           	opt stack 0
 45321                           tosu	equ	0xFFF
 45322                           tosh	equ	0xFFE
 45323                           tosl	equ	0xFFD
 45324                           pclatu	equ	0xFFB
 45325                           pclath	equ	0xFFA
 45326                           tblptru	equ	0xFF8
 45327                           tblptrh	equ	0xFF7
 45328                           tblptrl	equ	0xFF6
 45329                           tablat	equ	0xFF5
 45330                           prodh	equ	0xFF4
 45331                           prodl	equ	0xFF3
 45332                           intcon	equ	0xFF2
 45333                           intcon2	equ	0xFF1
 45334                           intcon3	equ	0xFF0
 45335                           indf0	equ	0xFEF
 45336                           postinc0	equ	0xFEE
 45337                           fsr0h	equ	0xFEA
 45338                           fsr0l	equ	0xFE9
 45339                           wreg	equ	0xFE8
 45340                           indf1	equ	0xFE7
 45341                           postinc1	equ	0xFE6
 45342                           postdec1	equ	0xFE5
 45343                           plusw1	equ	0xFE3
 45344                           fsr1h	equ	0xFE2
 45345                           fsr1l	equ	0xFE1
 45346                           indf2	equ	0xFDF
 45347                           postinc2	equ	0xFDE
 45348                           postdec2	equ	0xFDD
 45349                           plusw2	equ	0xFDB
 45350                           fsr2h	equ	0xFDA
 45351                           fsr2l	equ	0xFD9
 45352                           status	equ	0xFD8
 45353                           
 45354 ;; *************** function _USBCtrlEPServiceComplete *****************
 45355 ;; Defined at:
 45356 ;;		line 1618 in file "usb_device.c"
 45357 ;; Parameters:    Size  Location     Type
 45358 ;;		None
 45359 ;; Auto vars:     Size  Location     Type
 45360 ;;		None
 45361 ;; Return value:  Size  Location     Type
 45362 ;;                  1    wreg      void 
 45363 ;; Registers used:
 45364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45365 ;; Tracked objects:
 45366 ;;		On entry : 0/0
 45367 ;;		On exit  : 0/0
 45368 ;;		Unchanged: 0/0
 45369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45374 ;;Total ram usage:        0 bytes
 45375 ;; Hardware stack levels used:    1
 45376 ;; Hardware stack levels required when called:    2
 45377 ;; This function calls:
 45378 ;;		_USBCtrlEPAllowDataStage
 45379 ;;		_USBCtrlEPAllowStatusStage
 45380 ;; This function is called by:
 45381 ;;		_USBCtrlTrfSetupHandler
 45382 ;; This function uses a non-reentrant model
 45383 ;;
 45384                           
 45385                           	psect	text224
 45386  00ED0E                     __ptext224:
 45387                           	opt stack 0
 45388  00ED0E                     _USBCtrlEPServiceComplete:
 45389                           	opt stack 12
 45390                           
 45391                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 45392                           
 45393                           ;incstack = 0
 45394  00ED0E  9865               	bcf	3941,4,c	;volatile
 45395                           
 45396                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 45397  00ED10  0100               	movlb	0	; () banked
 45398  00ED12  BFF6               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 45399  00ED14  D03B               	goto	i2l233
 45400                           
 45401                           ; BSR set to: 0
 45402                           ;usb_device.c: 1631: {
 45403                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 45404  00ED16  AE35               	btfss	_outPipes+3,7,c	;volatile
 45405  00ED18  D00D               	goto	i2l234
 45406                           
 45407                           ; BSR set to: 0
 45408                           ;usb_device.c: 1633: {
 45409                           ;usb_device.c: 1634: controlTransferState = 2;
 45410  00ED1A  0E02               	movlw	2
 45411  00ED1C  6E5A               	movwf	_controlTransferState,c	;volatile
 45412                           
 45413                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 45414  00ED1E  0101               	movlb	1	; () banked
 45415  00ED20  51F7               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 45416  00ED22  B4D8               	btfsc	status,2,c
 45417                           
 45418                           ; BSR set to: 1
 45419                           ;usb_device.c: 1646: {
 45420                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 45421  00ED24  EC53  F081         	call	_USBCtrlEPAllowDataStage	;wreg free
 45422                           
 45423                           ;usb_device.c: 1648: }
 45424                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 45425  00ED28  0E00               	movlw	0
 45426  00ED2A  0101               	movlb	1	; () banked
 45427  00ED2C  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 45428                           
 45429                           ; BSR set to: 1
 45430                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 45431  00ED2E  0E00               	movlw	0
 45432  00ED30  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 45433                           
 45434                           ;usb_device.c: 1654: }
 45435  00ED32  0012               	return	
 45436  00ED34                     i2l234:
 45437                           
 45438                           ;usb_device.c: 1655: else
 45439                           ;usb_device.c: 1656: {
 45440                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 45441                           
 45442                           ; BSR set to: 1
 45443  00ED34  0100               	movlb	0	; () banked
 45444  00ED36  EE20 F001          	lfsr	2,1
 45445  00ED3A  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45446  00ED3C  26D9               	addwf	fsr2l,f,c
 45447  00ED3E  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45448  00ED40  22DA               	addwfc	fsr2h,f,c
 45449  00ED42  0E08               	movlw	8
 45450  00ED44  6EDF               	movwf	indf2,c
 45451                           
 45452                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 45453  00ED46  EE20 F002          	lfsr	2,2
 45454  00ED4A  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45455  00ED4C  26D9               	addwf	fsr2l,f,c
 45456  00ED4E  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45457  00ED50  22DA               	addwfc	fsr2h,f,c
 45458  00ED52  0E30               	movlw	48
 45459  00ED54  6EDE               	movwf	postinc2,c
 45460  00ED56  0E0D               	movlw	13
 45461  00ED58  6EDD               	movwf	postdec2,c
 45462                           
 45463                           ; BSR set to: 0
 45464                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 45465  00ED5A  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45466  00ED5E  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45467  00ED62  0E0C               	movlw	12
 45468  00ED64  6EDF               	movwf	indf2,c
 45469                           
 45470                           ; BSR set to: 0
 45471                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 45472  00ED66  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45473  00ED6A  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45474  00ED6E  0E00               	movlw	0
 45475  00ED70  8EDB               	bsf	plusw2,7,c
 45476                           
 45477                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 45478  00ED72  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45479  00ED76  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45480  00ED7A  0E04               	movlw	4
 45481  00ED7C  6EDF               	movwf	indf2,c
 45482                           
 45483                           ; BSR set to: 0
 45484                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 45485  00ED7E  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45486  00ED82  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45487  00ED86  0E00               	movlw	0
 45488  00ED88  8EDB               	bsf	plusw2,7,c
 45489                           
 45490                           ; BSR set to: 0
 45491                           ;usb_device.c: 1667: }
 45492                           ;usb_device.c: 1668: }
 45493  00ED8A  0012               	return	
 45494  00ED8C                     i2l233:
 45495                           
 45496                           ; BSR set to: 0
 45497                           ;usb_device.c: 1669: else
 45498                           ;usb_device.c: 1670: {
 45499                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 45500  00ED8C  010D               	movlb	13	; () banked
 45501  00ED8E  AF30               	btfss	48,7,b	;volatile
 45502  00ED90  D012               	goto	i2l238
 45503                           
 45504                           ; BSR set to: 13
 45505                           ;usb_device.c: 1672: {
 45506                           ;usb_device.c: 1673: controlTransferState = 1;
 45507  00ED92  0E01               	movlw	1
 45508  00ED94  6E5A               	movwf	_controlTransferState,c	;volatile
 45509                           
 45510                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 45511  00ED96  0101               	movlb	1	; () banked
 45512  00ED98  51F8               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 45513  00ED9A  B4D8               	btfsc	status,2,c
 45514                           
 45515                           ; BSR set to: 1
 45516                           ;usb_device.c: 1688: {
 45517                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 45518  00ED9C  EC53  F081         	call	_USBCtrlEPAllowDataStage	;wreg free
 45519                           
 45520                           ;usb_device.c: 1690: }
 45521                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 45522  00EDA0  0E00               	movlw	0
 45523  00EDA2  0101               	movlb	1	; () banked
 45524  00EDA4  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 45525                           
 45526                           ; BSR set to: 1
 45527                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 45528  00EDA6  0E00               	movlw	0
 45529  00EDA8  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 45530                           
 45531                           ; BSR set to: 1
 45532                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 45533  00EDAA  5055               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 45534  00EDAC  A4D8               	btfss	status,2,c
 45535  00EDAE  0012               	return	
 45536                           
 45537                           ; BSR set to: 1
 45538                           ;usb_device.c: 1715: {
 45539                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 45540  00EDB0  EC79  F07E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45541                           
 45542                           ;usb_device.c: 1717: }
 45543                           ;usb_device.c: 1718: }
 45544  00EDB4  0012               	return	
 45545  00EDB6                     i2l238:
 45546                           
 45547                           ;usb_device.c: 1719: else
 45548                           ;usb_device.c: 1720: {
 45549                           ;usb_device.c: 1731: controlTransferState = 2;
 45550  00EDB6  0E02               	movlw	2
 45551  00EDB8  6E5A               	movwf	_controlTransferState,c	;volatile
 45552                           
 45553                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 45554  00EDBA  0100               	movlb	0	; () banked
 45555  00EDBC  EE20 F001          	lfsr	2,1
 45556  00EDC0  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45557  00EDC2  26D9               	addwf	fsr2l,f,c
 45558  00EDC4  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45559  00EDC6  22DA               	addwfc	fsr2h,f,c
 45560  00EDC8  0E08               	movlw	8
 45561  00EDCA  6EDF               	movwf	indf2,c
 45562                           
 45563                           ; BSR set to: 0
 45564                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 45565  00EDCC  EE20 F002          	lfsr	2,2
 45566  00EDD0  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45567  00EDD2  26D9               	addwf	fsr2l,f,c
 45568  00EDD4  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45569  00EDD6  22DA               	addwfc	fsr2h,f,c
 45570  00EDD8  0E30               	movlw	48
 45571  00EDDA  6EDE               	movwf	postinc2,c
 45572  00EDDC  0E0D               	movlw	13
 45573  00EDDE  6EDD               	movwf	postdec2,c
 45574                           
 45575                           ; BSR set to: 0
 45576                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 45577  00EDE0  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45578  00EDE4  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45579  00EDE8  0E04               	movlw	4
 45580  00EDEA  6EDF               	movwf	indf2,c
 45581                           
 45582                           ; BSR set to: 0
 45583                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 45584  00EDEC  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45585  00EDF0  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45586  00EDF4  0E00               	movlw	0
 45587  00EDF6  8EDB               	bsf	plusw2,7,c
 45588                           
 45589                           ; BSR set to: 0
 45590                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 45591  00EDF8  0E00               	movlw	0
 45592  00EDFA  0101               	movlb	1	; () banked
 45593  00EDFC  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 45594                           
 45595                           ; BSR set to: 1
 45596                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 45597  00EDFE  0E00               	movlw	0
 45598  00EE00  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 45599                           
 45600                           ; BSR set to: 1
 45601                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 45602  00EE02  5055               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 45603  00EE04  A4D8               	btfss	status,2,c
 45604  00EE06  0012               	return	
 45605                           
 45606                           ; BSR set to: 1
 45607                           ;usb_device.c: 1743: {
 45608                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 45609  00EE08  EC79  F07E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45610  00EE0C  0012               	return	
 45611  00EE0E                     __end_of_USBCtrlEPServiceComplete:
 45612                           	opt stack 0
 45613                           tosu	equ	0xFFF
 45614                           tosh	equ	0xFFE
 45615                           tosl	equ	0xFFD
 45616                           pclatu	equ	0xFFB
 45617                           pclath	equ	0xFFA
 45618                           tblptru	equ	0xFF8
 45619                           tblptrh	equ	0xFF7
 45620                           tblptrl	equ	0xFF6
 45621                           tablat	equ	0xFF5
 45622                           prodh	equ	0xFF4
 45623                           prodl	equ	0xFF3
 45624                           intcon	equ	0xFF2
 45625                           intcon2	equ	0xFF1
 45626                           intcon3	equ	0xFF0
 45627                           indf0	equ	0xFEF
 45628                           postinc0	equ	0xFEE
 45629                           fsr0h	equ	0xFEA
 45630                           fsr0l	equ	0xFE9
 45631                           wreg	equ	0xFE8
 45632                           indf1	equ	0xFE7
 45633                           postinc1	equ	0xFE6
 45634                           postdec1	equ	0xFE5
 45635                           plusw1	equ	0xFE3
 45636                           fsr1h	equ	0xFE2
 45637                           fsr1l	equ	0xFE1
 45638                           indf2	equ	0xFDF
 45639                           postinc2	equ	0xFDE
 45640                           postdec2	equ	0xFDD
 45641                           plusw2	equ	0xFDB
 45642                           fsr2h	equ	0xFDA
 45643                           fsr2l	equ	0xFD9
 45644                           status	equ	0xFD8
 45645                           
 45646 ;; *************** function _USBCtrlEPAllowDataStage *****************
 45647 ;; Defined at:
 45648 ;;		line 1490 in file "usb_device.c"
 45649 ;; Parameters:    Size  Location     Type
 45650 ;;		None
 45651 ;; Auto vars:     Size  Location     Type
 45652 ;;		None
 45653 ;; Return value:  Size  Location     Type
 45654 ;;                  1    wreg      void 
 45655 ;; Registers used:
 45656 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45657 ;; Tracked objects:
 45658 ;;		On entry : 0/0
 45659 ;;		On exit  : 0/0
 45660 ;;		Unchanged: 0/0
 45661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45666 ;;Total ram usage:        0 bytes
 45667 ;; Hardware stack levels used:    1
 45668 ;; Hardware stack levels required when called:    1
 45669 ;; This function calls:
 45670 ;;		_USBCtrlTrfTxService
 45671 ;; This function is called by:
 45672 ;;		_USBCtrlEPServiceComplete
 45673 ;; This function uses a non-reentrant model
 45674 ;;
 45675                           
 45676                           	psect	text225
 45677  0102A6                     __ptext225:
 45678                           	opt stack 0
 45679  0102A6                     _USBCtrlEPAllowDataStage:
 45680                           	opt stack 12
 45681                           
 45682                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 45683                           
 45684                           ;incstack = 0
 45685  0102A6  0E00               	movlw	0
 45686  0102A8  0101               	movlb	1	; () banked
 45687  0102AA  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 45688                           
 45689                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 45690  0102AC  0E00               	movlw	0
 45691  0102AE  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 45692                           
 45693                           ; BSR set to: 1
 45694                           ;usb_device.c: 1495: if(controlTransferState == 2)
 45695  0102B0  0E02               	movlw	2
 45696  0102B2  185A               	xorwf	_controlTransferState,w,c	;volatile
 45697  0102B4  A4D8               	btfss	status,2,c
 45698  0102B6  D020               	goto	i2l222
 45699                           
 45700                           ; BSR set to: 1
 45701                           ;usb_device.c: 1496: {
 45702                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 45703  0102B8  0100               	movlb	0	; () banked
 45704  0102BA  EE20 F001          	lfsr	2,1
 45705  0102BE  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45706  0102C0  26D9               	addwf	fsr2l,f,c
 45707  0102C2  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45708  0102C4  22DA               	addwfc	fsr2h,f,c
 45709  0102C6  0E08               	movlw	8
 45710  0102C8  6EDF               	movwf	indf2,c
 45711                           
 45712                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 45713  0102CA  EE20 F002          	lfsr	2,2
 45714  0102CE  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 45715  0102D0  26D9               	addwf	fsr2l,f,c
 45716  0102D2  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 45717  0102D4  22DA               	addwfc	fsr2h,f,c
 45718  0102D6  0E38               	movlw	56
 45719  0102D8  6EDE               	movwf	postinc2,c
 45720  0102DA  0E0D               	movlw	13
 45721  0102DC  6EDD               	movwf	postdec2,c
 45722                           
 45723                           ; BSR set to: 0
 45724                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 45725  0102DE  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45726  0102E2  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45727  0102E6  0E48               	movlw	72
 45728  0102E8  6EDF               	movwf	indf2,c
 45729                           
 45730                           ; BSR set to: 0
 45731                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 45732  0102EA  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 45733  0102EE  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 45734  0102F2  0E00               	movlw	0
 45735  0102F4  8EDB               	bsf	plusw2,7,c
 45736                           
 45737                           ;usb_device.c: 1502: }
 45738  0102F6  0012               	return	
 45739  0102F8                     i2l222:
 45740                           
 45741                           ;usb_device.c: 1503: else
 45742                           ;usb_device.c: 1504: {
 45743                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 45744                           
 45745                           ; BSR set to: 0
 45746  0102F8  0100               	movlb	0	; () banked
 45747  0102FA  51F7               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 45748  0102FC  010D               	movlb	13	; () banked
 45749  0102FE  5D36               	subwf	54,w,b	;volatile
 45750  010300  0100               	movlb	0	; () banked
 45751  010302  51F8               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 45752  010304  010D               	movlb	13	; () banked
 45753  010306  5937               	subwfb	55,w,b	;volatile
 45754  010308  B0D8               	btfsc	status,0,c
 45755  01030A  D004               	goto	i2l224
 45756                           
 45757                           ; BSR set to: 13
 45758                           ;usb_device.c: 1508: {
 45759                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 45760  01030C  CD36 F0F7          	movff	3382,_inPipes+4	;volatile
 45761  010310  CD37 F0F8          	movff	3383,_inPipes+5	;volatile
 45762  010314                     i2l224:
 45763                           
 45764                           ; BSR set to: 13
 45765                           ;usb_device.c: 1510: }
 45766                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 45767                           
 45768                           ; BSR set to: 13
 45769  010314  EC7C  F07C         	call	_USBCtrlTrfTxService	;wreg free
 45770                           
 45771                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 45772  010318  EE20 F002          	lfsr	2,2
 45773  01031C  503B               	movf	_pBDTEntryIn,w,c
 45774  01031E  26D9               	addwf	fsr2l,f,c
 45775  010320  503C               	movf	_pBDTEntryIn+1,w,c
 45776  010322  22DA               	addwfc	fsr2h,f,c
 45777  010324  0E38               	movlw	56
 45778  010326  6EDE               	movwf	postinc2,c
 45779  010328  0E0D               	movlw	13
 45780  01032A  6EDD               	movwf	postdec2,c
 45781                           
 45782                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 45783  01032C  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45784  010330  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45785  010334  0E48               	movlw	72
 45786  010336  6EDF               	movwf	indf2,c
 45787                           
 45788                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 45789  010338  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 45790  01033C  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 45791  010340  0E00               	movlw	0
 45792  010342  8EDB               	bsf	plusw2,7,c
 45793  010344  0012               	return	
 45794  010346                     __end_of_USBCtrlEPAllowDataStage:
 45795                           	opt stack 0
 45796                           tosu	equ	0xFFF
 45797                           tosh	equ	0xFFE
 45798                           tosl	equ	0xFFD
 45799                           pclatu	equ	0xFFB
 45800                           pclath	equ	0xFFA
 45801                           tblptru	equ	0xFF8
 45802                           tblptrh	equ	0xFF7
 45803                           tblptrl	equ	0xFF6
 45804                           tablat	equ	0xFF5
 45805                           prodh	equ	0xFF4
 45806                           prodl	equ	0xFF3
 45807                           intcon	equ	0xFF2
 45808                           intcon2	equ	0xFF1
 45809                           intcon3	equ	0xFF0
 45810                           indf0	equ	0xFEF
 45811                           postinc0	equ	0xFEE
 45812                           fsr0h	equ	0xFEA
 45813                           fsr0l	equ	0xFE9
 45814                           wreg	equ	0xFE8
 45815                           indf1	equ	0xFE7
 45816                           postinc1	equ	0xFE6
 45817                           postdec1	equ	0xFE5
 45818                           plusw1	equ	0xFE3
 45819                           fsr1h	equ	0xFE2
 45820                           fsr1l	equ	0xFE1
 45821                           indf2	equ	0xFDF
 45822                           postinc2	equ	0xFDE
 45823                           postdec2	equ	0xFDD
 45824                           plusw2	equ	0xFDB
 45825                           fsr2h	equ	0xFDA
 45826                           fsr2l	equ	0xFD9
 45827                           status	equ	0xFD8
 45828                           
 45829 ;; *************** function _USBCheckStdRequest *****************
 45830 ;; Defined at:
 45831 ;;		line 2688 in file "usb_device.c"
 45832 ;; Parameters:    Size  Location     Type
 45833 ;;		None
 45834 ;; Auto vars:     Size  Location     Type
 45835 ;;		None
 45836 ;; Return value:  Size  Location     Type
 45837 ;;                  1    wreg      void 
 45838 ;; Registers used:
 45839 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45840 ;; Tracked objects:
 45841 ;;		On entry : 0/0
 45842 ;;		On exit  : 0/0
 45843 ;;		Unchanged: 0/0
 45844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45849 ;;Total ram usage:        0 bytes
 45850 ;; Hardware stack levels used:    1
 45851 ;; Hardware stack levels required when called:    5
 45852 ;; This function calls:
 45853 ;;		_USBStdFeatureReqHandler
 45854 ;;		_USBStdGetDscHandler
 45855 ;;		_USBStdGetStatusHandler
 45856 ;;		_USBStdSetCfgHandler
 45857 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45858 ;; This function is called by:
 45859 ;;		_USBCtrlTrfSetupHandler
 45860 ;; This function uses a non-reentrant model
 45861 ;;
 45862                           
 45863                           	psect	text226
 45864  00F57C                     __ptext226:
 45865                           	opt stack 0
 45866  00F57C                     _USBCheckStdRequest:
 45867                           	opt stack 9
 45868                           
 45869                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 45870                           
 45871                           ;incstack = 0
 45872  00F57C  010D               	movlb	13	; () banked
 45873  00F57E  3930               	swapf	48,w,b	;volatile
 45874  00F580  32E8               	rrcf	wreg,f,c
 45875  00F582  0B03               	andlw	3
 45876  00F584  0900               	iorlw	0
 45877  00F586  A4D8               	btfss	status,2,c
 45878  00F588  0012               	return	
 45879  00F58A  D047               	goto	i2l357
 45880  00F58C                     i2l358:
 45881                           
 45882                           ; BSR set to: 13
 45883                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 45884  00F58C  0100               	movlb	0	; () banked
 45885  00F58E  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45886                           
 45887                           ; BSR set to: 0
 45888                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 45889  00F590  0E08               	movlw	8
 45890  00F592  6E5C               	movwf	_USBDeviceState,c	;volatile
 45891                           
 45892                           ;usb_device.c: 2698: break;
 45893  00F594  0012               	return	
 45894  00F596                     
 45895                           ;usb_device.c: 2700: USBStdGetDscHandler();
 45896                           
 45897                           ; BSR set to: 0
 45898  00F596  EC5C  F06E         	call	_USBStdGetDscHandler	;wreg free
 45899                           
 45900                           ;usb_device.c: 2701: break;
 45901  00F59A  0012               	return	
 45902  00F59C                     
 45903                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 45904  00F59C  ECA0  F07B         	call	_USBStdSetCfgHandler	;wreg free
 45905                           
 45906                           ;usb_device.c: 2704: break;
 45907  00F5A0  0012               	return	
 45908  00F5A2                     
 45909                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 45910  00F5A2  0E5E               	movlw	low _USBActiveConfiguration
 45911  00F5A4  0100               	movlb	0	; () banked
 45912  00F5A6  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 45913  00F5A8  0E00               	movlw	high _USBActiveConfiguration
 45914  00F5AA  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 45915                           
 45916                           ; BSR set to: 0
 45917                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45918  00F5AC  81F6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 45919                           
 45920                           ; BSR set to: 0
 45921                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 45922  00F5AE  0E01               	movlw	1
 45923  00F5B0  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 45924                           
 45925                           ; BSR set to: 0
 45926                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 45927  00F5B2  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45928                           
 45929                           ;usb_device.c: 2710: break;
 45930  00F5B4  0012               	return	
 45931  00F5B6                     
 45932                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 45933                           
 45934                           ; BSR set to: 0
 45935  00F5B6  ECFF  F080         	call	_USBStdGetStatusHandler	;wreg free
 45936                           
 45937                           ;usb_device.c: 2713: break;
 45938  00F5BA  0012               	return	
 45939  00F5BC                     
 45940                           ;usb_device.c: 2715: case 3:
 45941                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 45942  00F5BC  EC01  F060         	call	_USBStdFeatureReqHandler	;wreg free
 45943                           
 45944                           ;usb_device.c: 2717: break;
 45945  00F5C0  0012               	return	
 45946  00F5C2                     
 45947                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 45948  00F5C2  010D               	movlb	13	; () banked
 45949  00F5C4  5134               	movf	52,w,b	;volatile
 45950  00F5C6  0D01               	mullw	1
 45951  00F5C8  0EFC               	movlw	low _USBAlternateInterface
 45952  00F5CA  24F3               	addwf	prodl,w,c
 45953  00F5CC  0100               	movlb	0	; () banked
 45954  00F5CE  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 45955  00F5D0  0E01               	movlw	high _USBAlternateInterface
 45956  00F5D2  20F4               	addwfc	prodh,w,c
 45957  00F5D4  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 45958                           
 45959                           ; BSR set to: 0
 45960                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45961  00F5D6  81F6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 45962                           
 45963                           ; BSR set to: 0
 45964                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 45965  00F5D8  0E01               	movlw	1
 45966  00F5DA  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 45967                           
 45968                           ; BSR set to: 0
 45969                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 45970  00F5DC  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45971                           
 45972                           ;usb_device.c: 2723: break;
 45973  00F5DE  0012               	return	
 45974  00F5E0                     i2l367:
 45975                           
 45976                           ; BSR set to: 13
 45977                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 45978  00F5E0  0100               	movlb	0	; () banked
 45979  00F5E2  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 45980                           
 45981                           ; BSR set to: 0
 45982                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 45983  00F5E4  010D               	movlb	13	; () banked
 45984  00F5E6  5134               	movf	52,w,b	;volatile
 45985  00F5E8  0D01               	mullw	1
 45986  00F5EA  0EFC               	movlw	low _USBAlternateInterface
 45987  00F5EC  24F3               	addwf	prodl,w,c
 45988  00F5EE  6ED9               	movwf	fsr2l,c
 45989  00F5F0  0E01               	movlw	high _USBAlternateInterface
 45990  00F5F2  20F4               	addwfc	prodh,w,c
 45991  00F5F4  6EDA               	movwf	fsr2h,c
 45992  00F5F6  CD32 FFDF          	movff	3378,indf2	;volatile
 45993                           
 45994                           ;usb_device.c: 2727: break;
 45995  00F5FA  0012               	return	
 45996  00F5FC                     
 45997                           ; BSR set to: 13
 45998                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 45999                           
 46000                           ; BSR set to: 13
 46001  00F5FC  0E00               	movlw	0
 46002  00F5FE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46003  00F600  0E02               	movlw	2
 46004  00F602  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46005  00F604  0E00               	movlw	0
 46006  00F606  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46007  00F608  0E00               	movlw	0
 46008  00F60A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46009  00F60C  0E00               	movlw	0
 46010  00F60E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46011  00F610  0E00               	movlw	0
 46012  00F612  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46013  00F614  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46014                           
 46015                           ;usb_device.c: 2734: }
 46016                           
 46017                           ;usb_device.c: 2733: break;
 46018                           
 46019                           ;usb_device.c: 2732: default:
 46020                           
 46021                           ;usb_device.c: 2731: case 12:
 46022                           
 46023                           ;usb_device.c: 2730: break;
 46024  00F618  0012               	return	
 46025  00F61A                     i2l357:
 46026  00F61A  010D               	movlb	13	; () banked
 46027  00F61C  5131               	movf	49,w,b	;volatile
 46028                           
 46029                           ; Switch size 1, requested type "space"
 46030                           ; Number of cases is 11, Range of values is 0 to 12
 46031                           ; switch strategies available:
 46032                           ; Name         Instructions Cycles
 46033                           ; simple_byte           34    18 (average)
 46034                           ;	Chosen strategy is simple_byte
 46035  00F61E  0A00               	xorlw	0	; case 0
 46036  00F620  B4D8               	btfsc	status,2,c
 46037  00F622  D7C9               	goto	i2l363
 46038  00F624  0A01               	xorlw	1	; case 1
 46039  00F626  B4D8               	btfsc	status,2,c
 46040  00F628  D7C9               	goto	i2l364
 46041  00F62A  0A02               	xorlw	2	; case 3
 46042  00F62C  B4D8               	btfsc	status,2,c
 46043  00F62E  D7C6               	goto	i2l364
 46044  00F630  0A06               	xorlw	6	; case 5
 46045  00F632  B4D8               	btfsc	status,2,c
 46046  00F634  D7AB               	goto	i2l358
 46047  00F636  0A03               	xorlw	3	; case 6
 46048  00F638  B4D8               	btfsc	status,2,c
 46049  00F63A  D7AD               	goto	i2l360
 46050  00F63C  0A01               	xorlw	1	; case 7
 46051  00F63E  B4D8               	btfsc	status,2,c
 46052  00F640  D7DD               	goto	i2l368
 46053  00F642  0A0F               	xorlw	15	; case 8
 46054  00F644  B4D8               	btfsc	status,2,c
 46055  00F646  D7AD               	goto	i2l362
 46056  00F648  0A01               	xorlw	1	; case 9
 46057  00F64A  B4D8               	btfsc	status,2,c
 46058  00F64C  D7A7               	goto	i2l361
 46059  00F64E  0A03               	xorlw	3	; case 10
 46060  00F650  B4D8               	btfsc	status,2,c
 46061  00F652  D7B7               	goto	i2l366
 46062  00F654  0A01               	xorlw	1	; case 11
 46063  00F656  B4D8               	btfsc	status,2,c
 46064  00F658  D7C3               	goto	i2l367
 46065  00F65A  0A07               	xorlw	7	; case 12
 46066  00F65C  0012               	return	
 46067  00F65E                     __end_of_USBCheckStdRequest:
 46068                           	opt stack 0
 46069                           tosu	equ	0xFFF
 46070                           tosh	equ	0xFFE
 46071                           tosl	equ	0xFFD
 46072                           pclatu	equ	0xFFB
 46073                           pclath	equ	0xFFA
 46074                           tblptru	equ	0xFF8
 46075                           tblptrh	equ	0xFF7
 46076                           tblptrl	equ	0xFF6
 46077                           tablat	equ	0xFF5
 46078                           prodh	equ	0xFF4
 46079                           prodl	equ	0xFF3
 46080                           intcon	equ	0xFF2
 46081                           intcon2	equ	0xFF1
 46082                           intcon3	equ	0xFF0
 46083                           indf0	equ	0xFEF
 46084                           postinc0	equ	0xFEE
 46085                           fsr0h	equ	0xFEA
 46086                           fsr0l	equ	0xFE9
 46087                           wreg	equ	0xFE8
 46088                           indf1	equ	0xFE7
 46089                           postinc1	equ	0xFE6
 46090                           postdec1	equ	0xFE5
 46091                           plusw1	equ	0xFE3
 46092                           fsr1h	equ	0xFE2
 46093                           fsr1l	equ	0xFE1
 46094                           indf2	equ	0xFDF
 46095                           postinc2	equ	0xFDE
 46096                           postdec2	equ	0xFDD
 46097                           plusw2	equ	0xFDB
 46098                           fsr2h	equ	0xFDA
 46099                           fsr2l	equ	0xFD9
 46100                           status	equ	0xFD8
 46101                           
 46102 ;; *************** function _USBStdSetCfgHandler *****************
 46103 ;; Defined at:
 46104 ;;		line 1970 in file "usb_device.c"
 46105 ;; Parameters:    Size  Location     Type
 46106 ;;		None
 46107 ;; Auto vars:     Size  Location     Type
 46108 ;;  i               1   23[COMRAM] unsigned char 
 46109 ;; Return value:  Size  Location     Type
 46110 ;;                  1    wreg      void 
 46111 ;; Registers used:
 46112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46113 ;; Tracked objects:
 46114 ;;		On entry : 0/0
 46115 ;;		On exit  : 0/0
 46116 ;;		Unchanged: 0/0
 46117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46122 ;;Total ram usage:        1 bytes
 46123 ;; Hardware stack levels used:    1
 46124 ;; Hardware stack levels required when called:    4
 46125 ;; This function calls:
 46126 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46127 ;;		i2_memset
 46128 ;; This function is called by:
 46129 ;;		_USBCheckStdRequest
 46130 ;; This function uses a non-reentrant model
 46131 ;;
 46132                           
 46133                           	psect	text227
 46134  00F740                     __ptext227:
 46135                           	opt stack 0
 46136  00F740                     _USBStdSetCfgHandler:
 46137                           	opt stack 9
 46138                           
 46139                           ;usb_device.c: 1972: uint8_t i;
 46140                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 46141                           
 46142                           ;incstack = 0
 46143  00F740  0100               	movlb	0	; () banked
 46144  00F742  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46145                           
 46146                           ; BSR set to: 0
 46147                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 46148  00F744  0E27               	movlw	39
 46149  00F746  6E01               	movwf	i2memset@p1,c
 46150  00F748  0E0F               	movlw	15
 46151  00F74A  6E02               	movwf	i2memset@p1+1,c
 46152  00F74C  0E00               	movlw	0
 46153  00F74E  6E04               	movwf	i2memset@c+1,c
 46154  00F750  0E00               	movlw	0
 46155  00F752  6E03               	movwf	i2memset@c,c
 46156  00F754  0E00               	movlw	0
 46157  00F756  6E06               	movwf	i2memset@n+1,c
 46158  00F758  0E02               	movlw	2
 46159  00F75A  6E05               	movwf	i2memset@n,c
 46160  00F75C  EC2F  F094         	call	i2_memset	;wreg free
 46161                           
 46162                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 46163  00F760  0E00               	movlw	0
 46164  00F762  6E01               	movwf	i2memset@p1,c
 46165  00F764  0E0D               	movlw	13
 46166  00F766  6E02               	movwf	i2memset@p1+1,c
 46167  00F768  0E00               	movlw	0
 46168  00F76A  6E04               	movwf	i2memset@c+1,c
 46169  00F76C  0E00               	movlw	0
 46170  00F76E  6E03               	movwf	i2memset@c,c
 46171  00F770  0E00               	movlw	0
 46172  00F772  6E06               	movwf	i2memset@n+1,c
 46173  00F774  0E30               	movlw	48
 46174  00F776  6E05               	movwf	i2memset@n,c
 46175  00F778  EC2F  F094         	call	i2_memset	;wreg free
 46176                           
 46177                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 46178  00F77C  8C65               	bsf	3941,6,c	;volatile
 46179                           
 46180                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 46181  00F77E  0E00               	movlw	0
 46182  00F780  6E18               	movwf	USBStdSetCfgHandler@i,c
 46183  00F782                     i2l12255:
 46184  00F782  0E02               	movlw	2
 46185  00F784  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 46186  00F786  D001               	goto	i2l274
 46187  00F788  D016               	goto	i2u975_40
 46188  00F78A                     i2l274:
 46189                           
 46190                           ;usb_device.c: 1990: {
 46191                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 46192  00F78A  5018               	movf	USBStdSetCfgHandler@i,w,c
 46193  00F78C  0D01               	mullw	1
 46194  00F78E  0EE4               	movlw	low _ep_data_in
 46195  00F790  24F3               	addwf	prodl,w,c
 46196  00F792  6ED9               	movwf	fsr2l,c
 46197  00F794  0E01               	movlw	high _ep_data_in
 46198  00F796  20F4               	addwfc	prodh,w,c
 46199  00F798  6EDA               	movwf	fsr2h,c
 46200  00F79A  0E00               	movlw	0
 46201  00F79C  6EDF               	movwf	indf2,c
 46202                           
 46203                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 46204  00F79E  5018               	movf	USBStdSetCfgHandler@i,w,c
 46205  00F7A0  0D01               	mullw	1
 46206  00F7A2  0EE1               	movlw	low _ep_data_out
 46207  00F7A4  24F3               	addwf	prodl,w,c
 46208  00F7A6  6ED9               	movwf	fsr2l,c
 46209  00F7A8  0E01               	movlw	high _ep_data_out
 46210  00F7AA  20F4               	addwfc	prodh,w,c
 46211  00F7AC  6EDA               	movwf	fsr2h,c
 46212  00F7AE  0E00               	movlw	0
 46213  00F7B0  6EDF               	movwf	indf2,c
 46214  00F7B2  2A18               	incf	USBStdSetCfgHandler@i,f,c
 46215  00F7B4  D7E6               	goto	i2l12255
 46216  00F7B6                     i2u975_40:
 46217                           
 46218                           ;usb_device.c: 1993: }
 46219                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 46220  00F7B6  0EFC               	movlw	low _USBAlternateInterface
 46221  00F7B8  6E01               	movwf	i2memset@p1,c
 46222  00F7BA  0E01               	movlw	high _USBAlternateInterface
 46223  00F7BC  6E02               	movwf	i2memset@p1+1,c
 46224  00F7BE  0E00               	movlw	0
 46225  00F7C0  6E04               	movwf	i2memset@c+1,c
 46226  00F7C2  0E00               	movlw	0
 46227  00F7C4  6E03               	movwf	i2memset@c,c
 46228  00F7C6  0E00               	movlw	0
 46229  00F7C8  6E06               	movwf	i2memset@n+1,c
 46230  00F7CA  0E02               	movlw	2
 46231  00F7CC  6E05               	movwf	i2memset@n,c
 46232  00F7CE  EC2F  F094         	call	i2_memset	;wreg free
 46233                           
 46234                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 46235  00F7D2  9C65               	bcf	3941,6,c	;volatile
 46236                           
 46237                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 46238  00F7D4  0E08               	movlw	8
 46239  00F7D6  6E3B               	movwf	_pBDTEntryIn,c
 46240  00F7D8  0E0D               	movlw	13
 46241  00F7DA  6E3C               	movwf	_pBDTEntryIn+1,c
 46242                           
 46243                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 46244  00F7DC  0E00               	movlw	0
 46245  00F7DE  6E49               	movwf	_pBDTEntryEP0OutCurrent,c
 46246  00F7E0  0E0D               	movlw	13
 46247  00F7E2  6E4A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 46248                           
 46249                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 46250  00F7E4  C049  F0FB         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 46251  00F7E8  C04A  F0FC         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 46252                           
 46253                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 46254  00F7EC  CD32 F05E          	movff	3378,_USBActiveConfiguration	;volatile
 46255                           
 46256                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 46257  00F7F0  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 46258  00F7F2  A4D8               	btfss	status,2,c
 46259  00F7F4  D003               	goto	i2l276
 46260                           
 46261                           ;usb_device.c: 2012: {
 46262                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 46263  00F7F6  0E10               	movlw	16
 46264  00F7F8  6E5C               	movwf	_USBDeviceState,c	;volatile
 46265                           
 46266                           ;usb_device.c: 2015: }
 46267  00F7FA  0012               	return	
 46268  00F7FC                     i2l276:
 46269                           
 46270                           ;usb_device.c: 2016: else
 46271                           ;usb_device.c: 2017: {
 46272                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 46273  00F7FC  0E00               	movlw	0
 46274  00F7FE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46275  00F800  0E01               	movlw	1
 46276  00F802  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46277  00F804  0E5E               	movlw	low _USBActiveConfiguration
 46278  00F806  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46279  00F808  0E00               	movlw	high _USBActiveConfiguration
 46280  00F80A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46281  00F80C  0E00               	movlw	0
 46282  00F80E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46283  00F810  0E01               	movlw	1
 46284  00F812  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46285  00F814  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46286                           
 46287                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 46288  00F818  0E20               	movlw	32
 46289  00F81A  6E5C               	movwf	_USBDeviceState,c	;volatile
 46290  00F81C  0012               	return	
 46291  00F81E                     __end_of_USBStdSetCfgHandler:
 46292                           	opt stack 0
 46293                           tosu	equ	0xFFF
 46294                           tosh	equ	0xFFE
 46295                           tosl	equ	0xFFD
 46296                           pclatu	equ	0xFFB
 46297                           pclath	equ	0xFFA
 46298                           tblptru	equ	0xFF8
 46299                           tblptrh	equ	0xFF7
 46300                           tblptrl	equ	0xFF6
 46301                           tablat	equ	0xFF5
 46302                           prodh	equ	0xFF4
 46303                           prodl	equ	0xFF3
 46304                           intcon	equ	0xFF2
 46305                           intcon2	equ	0xFF1
 46306                           intcon3	equ	0xFF0
 46307                           indf0	equ	0xFEF
 46308                           postinc0	equ	0xFEE
 46309                           fsr0h	equ	0xFEA
 46310                           fsr0l	equ	0xFE9
 46311                           wreg	equ	0xFE8
 46312                           indf1	equ	0xFE7
 46313                           postinc1	equ	0xFE6
 46314                           postdec1	equ	0xFE5
 46315                           plusw1	equ	0xFE3
 46316                           fsr1h	equ	0xFE2
 46317                           fsr1l	equ	0xFE1
 46318                           indf2	equ	0xFDF
 46319                           postinc2	equ	0xFDE
 46320                           postdec2	equ	0xFDD
 46321                           plusw2	equ	0xFDB
 46322                           fsr2h	equ	0xFDA
 46323                           fsr2l	equ	0xFD9
 46324                           status	equ	0xFD8
 46325                           
 46326 ;; *************** function i2_memset *****************
 46327 ;; Defined at:
 46328 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 46329 ;; Parameters:    Size  Location     Type
 46330 ;;  p1              2    0[COMRAM] PTR void 
 46331 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 46332 ;;  c               2    2[COMRAM] int 
 46333 ;;  n               2    4[COMRAM] unsigned int 
 46334 ;; Auto vars:     Size  Location     Type
 46335 ;;  memset          2    6[COMRAM] PTR unsigned char 
 46336 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 46337 ;; Return value:  Size  Location     Type
 46338 ;;                  2    0[COMRAM] PTR void 
 46339 ;; Registers used:
 46340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46341 ;; Tracked objects:
 46342 ;;		On entry : 0/0
 46343 ;;		On exit  : 0/0
 46344 ;;		Unchanged: 0/0
 46345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46346 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46349 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46350 ;;Total ram usage:        8 bytes
 46351 ;; Hardware stack levels used:    1
 46352 ;; This function calls:
 46353 ;;		Nothing
 46354 ;; This function is called by:
 46355 ;;		_USBStdSetCfgHandler
 46356 ;;		i2_USBDeviceInit
 46357 ;; This function uses a non-reentrant model
 46358 ;;
 46359                           
 46360                           	psect	text228
 46361  01285E                     __ptext228:
 46362                           	opt stack 0
 46363  01285E                     i2_memset:
 46364                           	opt stack 15
 46365                           
 46366                           ;incstack = 0
 46367  01285E  C001  F007         	movff	i2memset@p1,i2memset@p
 46368  012862  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 46369  012866  D008               	goto	i2l3764
 46370  012868                     i2l12185:
 46371  012868  C007  FFD9         	movff	i2memset@p,fsr2l
 46372  01286C  C008  FFDA         	movff	i2memset@p+1,fsr2h
 46373  012870  C003  FFDF         	movff	i2memset@c,indf2
 46374  012874  4A07               	infsnz	i2memset@p,f,c
 46375  012876  2A08               	incf	i2memset@p+1,f,c
 46376  012878                     i2l3764:
 46377  012878  0605               	decf	i2memset@n,f,c
 46378  01287A  A0D8               	btfss	status,0,c
 46379  01287C  0606               	decf	i2memset@n+1,f,c
 46380  01287E  2805               	incf	i2memset@n,w,c
 46381  012880  E1F3               	bnz	i2l12185
 46382  012882  2806               	incf	i2memset@n+1,w,c
 46383  012884  B4D8               	btfsc	status,2,c
 46384  012886  0012               	return	
 46385  012888  D7EF               	goto	i2l3765
 46386  01288A                     __end_ofi2_memset:
 46387                           	opt stack 0
 46388                           tosu	equ	0xFFF
 46389                           tosh	equ	0xFFE
 46390                           tosl	equ	0xFFD
 46391                           pclatu	equ	0xFFB
 46392                           pclath	equ	0xFFA
 46393                           tblptru	equ	0xFF8
 46394                           tblptrh	equ	0xFF7
 46395                           tblptrl	equ	0xFF6
 46396                           tablat	equ	0xFF5
 46397                           prodh	equ	0xFF4
 46398                           prodl	equ	0xFF3
 46399                           intcon	equ	0xFF2
 46400                           intcon2	equ	0xFF1
 46401                           intcon3	equ	0xFF0
 46402                           indf0	equ	0xFEF
 46403                           postinc0	equ	0xFEE
 46404                           fsr0h	equ	0xFEA
 46405                           fsr0l	equ	0xFE9
 46406                           wreg	equ	0xFE8
 46407                           indf1	equ	0xFE7
 46408                           postinc1	equ	0xFE6
 46409                           postdec1	equ	0xFE5
 46410                           plusw1	equ	0xFE3
 46411                           fsr1h	equ	0xFE2
 46412                           fsr1l	equ	0xFE1
 46413                           indf2	equ	0xFDF
 46414                           postinc2	equ	0xFDE
 46415                           postdec2	equ	0xFDD
 46416                           plusw2	equ	0xFDB
 46417                           fsr2h	equ	0xFDA
 46418                           fsr2l	equ	0xFD9
 46419                           status	equ	0xFD8
 46420                           
 46421 ;; *************** function _USBStdGetStatusHandler *****************
 46422 ;; Defined at:
 46423 ;;		line 2131 in file "usb_device.c"
 46424 ;; Parameters:    Size  Location     Type
 46425 ;;		None
 46426 ;; Auto vars:     Size  Location     Type
 46427 ;;  p               2    1[COMRAM] PTR struct __BDT
 46428 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46429 ;; Return value:  Size  Location     Type
 46430 ;;                  1    wreg      void 
 46431 ;; Registers used:
 46432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46433 ;; Tracked objects:
 46434 ;;		On entry : 0/0
 46435 ;;		On exit  : 0/0
 46436 ;;		Unchanged: 0/0
 46437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46441 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46442 ;;Total ram usage:        3 bytes
 46443 ;; Hardware stack levels used:    1
 46444 ;; This function calls:
 46445 ;;		Nothing
 46446 ;; This function is called by:
 46447 ;;		_USBCheckStdRequest
 46448 ;; This function uses a non-reentrant model
 46449 ;;
 46450                           
 46451                           	psect	text229
 46452  0101FE                     __ptext229:
 46453                           	opt stack 0
 46454  0101FE                     _USBStdGetStatusHandler:
 46455                           	opt stack 13
 46456                           
 46457                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 46458                           
 46459                           ;incstack = 0
 46460  0101FE  0E00               	movlw	0
 46461  010200  010D               	movlb	13	; () banked
 46462  010202  6F38               	movwf	56,b	;volatile
 46463                           
 46464                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 46465  010204  0E00               	movlw	0
 46466  010206  6F39               	movwf	57,b	;volatile
 46467                           
 46468                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 46469  010208  D038               	goto	i2l295
 46470  01020A                     i2l296:
 46471                           
 46472                           ; BSR set to: 13
 46473                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 46474  01020A  0100               	movlb	0	; () banked
 46475  01020C  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46476                           
 46477                           ;usb_device.c: 2147: }
 46478                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 46479                           
 46480                           ; BSR set to: 13
 46481                           
 46482                           ; BSR set to: 0
 46483                           ;usb_device.c: 2145: {
 46484                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 46485                           
 46486                           ;usb_device.c: 2144: if(0 == 1)
 46487  01020E  0459               	decf	_RemoteWakeup,w,c	;volatile
 46488  010210  A4D8               	btfss	status,2,c
 46489  010212  D03E               	goto	i2l299
 46490                           
 46491                           ;usb_device.c: 2150: {
 46492                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 46493  010214  010D               	movlb	13	; () banked
 46494  010216  8338               	bsf	56,1,b	;volatile
 46495                           
 46496                           ; BSR set to: 13
 46497                           ;usb_device.c: 2152: }
 46498                           ;usb_device.c: 2153: break;
 46499  010218  D03B               	goto	i2l299
 46500  01021A                     i2l300:
 46501                           
 46502                           ; BSR set to: 13
 46503                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 46504  01021A  0100               	movlb	0	; () banked
 46505  01021C  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46506                           
 46507                           ;usb_device.c: 2156: break;
 46508  01021E  D038               	goto	i2l299
 46509  010220                     i2l301:
 46510                           
 46511                           ; BSR set to: 13
 46512                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 46513  010220  0100               	movlb	0	; () banked
 46514  010222  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 46515                           
 46516                           ;usb_device.c: 2162: {
 46517                           ;usb_device.c: 2163: BDT_ENTRY *p;
 46518                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 46519  010224  010D               	movlb	13	; () banked
 46520  010226  BF34               	btfsc	52,7,b	;volatile
 46521  010228  D00A               	goto	i2l302
 46522                           
 46523                           ; BSR set to: 13
 46524                           ;usb_device.c: 2166: {
 46525                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 46526  01022A  5134               	movf	52,w,b	;volatile
 46527  01022C  0B0F               	andlw	15
 46528  01022E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 46529  010230  5001               	movf	??_USBStdGetStatusHandler,w,c
 46530  010232  0D02               	mullw	2
 46531  010234  0ED3               	movlw	low _pBDTEntryOut
 46532  010236  24F3               	addwf	prodl,w,c
 46533  010238  6ED9               	movwf	fsr2l,c
 46534  01023A  0E01               	movlw	high _pBDTEntryOut
 46535  01023C  D009               	goto	L58
 46536  01023E                     i2l302:
 46537                           
 46538                           ; BSR set to: 13
 46539                           ;usb_device.c: 2169: else
 46540                           ;usb_device.c: 2170: {
 46541                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 46542                           
 46543                           ; BSR set to: 13
 46544  01023E  5134               	movf	52,w,b	;volatile
 46545  010240  0B0F               	andlw	15
 46546  010242  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 46547  010244  5001               	movf	??_USBStdGetStatusHandler,w,c
 46548  010246  0D02               	mullw	2
 46549  010248  0E3B               	movlw	low _pBDTEntryIn
 46550  01024A  24F3               	addwf	prodl,w,c
 46551  01024C  6ED9               	movwf	fsr2l,c
 46552  01024E  0E00               	movlw	high _pBDTEntryIn
 46553  010250                     L58:
 46554  010250  20F4               	addwfc	prodh,w,c
 46555  010252  6EDA               	movwf	fsr2h,c
 46556  010254  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 46557  010258  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 46558                           
 46559                           ; BSR set to: 13
 46560                           ;usb_device.c: 2172: }
 46561                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 46562                           
 46563                           ; BSR set to: 13
 46564  01025C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 46565  010260  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 46566  010264  AEDF               	btfss	indf2,7,c
 46567  010266  D014               	goto	i2l299
 46568                           
 46569                           ; BSR set to: 13
 46570  010268  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 46571  01026C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 46572  010270  A4DF               	btfss	indf2,2,c
 46573  010272  D00E               	goto	i2l299
 46574                           
 46575                           ; BSR set to: 13
 46576                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 46577  010274  0E01               	movlw	1
 46578  010276  6F38               	movwf	56,b	;volatile
 46579                           
 46580                           ; BSR set to: 13
 46581                           ;usb_device.c: 2177: }
 46582                           ;usb_device.c: 2178: }
 46583                           
 46584                           ; BSR set to: 13
 46585                           ;usb_device.c: 2176: break;
 46586  010278  D00B               	goto	i2l299
 46587  01027A                     i2l295:
 46588                           
 46589                           ; BSR set to: 13
 46590                           
 46591                           ; BSR set to: 13
 46592  01027A  5130               	movf	48,w,b	;volatile
 46593  01027C  0B1F               	andlw	31
 46594                           
 46595                           ; Switch size 1, requested type "space"
 46596                           ; Number of cases is 3, Range of values is 0 to 2
 46597                           ; switch strategies available:
 46598                           ; Name         Instructions Cycles
 46599                           ; simple_byte           10     6 (average)
 46600                           ;	Chosen strategy is simple_byte
 46601  01027E  0A00               	xorlw	0	; case 0
 46602  010280  B4D8               	btfsc	status,2,c
 46603  010282  D7C3               	goto	i2l296
 46604  010284  0A01               	xorlw	1	; case 1
 46605  010286  B4D8               	btfsc	status,2,c
 46606  010288  D7C8               	goto	i2l300
 46607  01028A  0A03               	xorlw	3	; case 2
 46608  01028C  B4D8               	btfsc	status,2,c
 46609  01028E  D7C8               	goto	i2l301
 46610  010290                     i2l299:
 46611                           
 46612                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 46613  010290  0100               	movlb	0	; () banked
 46614  010292  AFF6               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 46615  010294  0012               	return	
 46616                           
 46617                           ; BSR set to: 0
 46618                           ;usb_device.c: 2181: {
 46619                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 46620  010296  0E38               	movlw	56
 46621  010298  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 46622  01029A  0E0D               	movlw	13
 46623  01029C  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 46624                           
 46625                           ; BSR set to: 0
 46626                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 46627  01029E  81F6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 46628                           
 46629                           ; BSR set to: 0
 46630                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 46631  0102A0  0E02               	movlw	2
 46632  0102A2  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46633  0102A4  0012               	return	
 46634  0102A6                     __end_of_USBStdGetStatusHandler:
 46635                           	opt stack 0
 46636                           tosu	equ	0xFFF
 46637                           tosh	equ	0xFFE
 46638                           tosl	equ	0xFFD
 46639                           pclatu	equ	0xFFB
 46640                           pclath	equ	0xFFA
 46641                           tblptru	equ	0xFF8
 46642                           tblptrh	equ	0xFF7
 46643                           tblptrl	equ	0xFF6
 46644                           tablat	equ	0xFF5
 46645                           prodh	equ	0xFF4
 46646                           prodl	equ	0xFF3
 46647                           intcon	equ	0xFF2
 46648                           intcon2	equ	0xFF1
 46649                           intcon3	equ	0xFF0
 46650                           indf0	equ	0xFEF
 46651                           postinc0	equ	0xFEE
 46652                           fsr0h	equ	0xFEA
 46653                           fsr0l	equ	0xFE9
 46654                           wreg	equ	0xFE8
 46655                           indf1	equ	0xFE7
 46656                           postinc1	equ	0xFE6
 46657                           postdec1	equ	0xFE5
 46658                           plusw1	equ	0xFE3
 46659                           fsr1h	equ	0xFE2
 46660                           fsr1l	equ	0xFE1
 46661                           indf2	equ	0xFDF
 46662                           postinc2	equ	0xFDE
 46663                           postdec2	equ	0xFDD
 46664                           plusw2	equ	0xFDB
 46665                           fsr2h	equ	0xFDA
 46666                           fsr2l	equ	0xFD9
 46667                           status	equ	0xFD8
 46668                           
 46669 ;; *************** function _USBStdGetDscHandler *****************
 46670 ;; Defined at:
 46671 ;;		line 2045 in file "usb_device.c"
 46672 ;; Parameters:    Size  Location     Type
 46673 ;;		None
 46674 ;; Auto vars:     Size  Location     Type
 46675 ;;		None
 46676 ;; Return value:  Size  Location     Type
 46677 ;;                  1    wreg      void 
 46678 ;; Registers used:
 46679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46680 ;; Tracked objects:
 46681 ;;		On entry : 0/0
 46682 ;;		On exit  : 0/0
 46683 ;;		Unchanged: 0/0
 46684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46689 ;;Total ram usage:        2 bytes
 46690 ;; Hardware stack levels used:    1
 46691 ;; This function calls:
 46692 ;;		Nothing
 46693 ;; This function is called by:
 46694 ;;		_USBCheckStdRequest
 46695 ;; This function uses a non-reentrant model
 46696 ;;
 46697                           
 46698                           	psect	text230
 46699  00DCB8                     __ptext230:
 46700                           	opt stack 0
 46701  00DCB8                     _USBStdGetDscHandler:
 46702                           	opt stack 13
 46703                           
 46704                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 46705                           
 46706                           ; BSR set to: 0
 46707                           ;incstack = 0
 46708  00DCB8  0E80               	movlw	128
 46709  00DCBA  010D               	movlb	13	; () banked
 46710  00DCBC  1930               	xorwf	48,w,b	;volatile
 46711  00DCBE  A4D8               	btfss	status,2,c
 46712  00DCC0  0012               	return	
 46713                           
 46714                           ; BSR set to: 13
 46715                           ;usb_device.c: 2048: {
 46716                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 46717  00DCC2  0EC0               	movlw	192
 46718  00DCC4  0100               	movlb	0	; () banked
 46719  00DCC6  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46720                           
 46721                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 46722  00DCC8  D08B               	goto	i2l282
 46723  00DCCA                     
 46724                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 46725                           
 46726                           ; BSR set to: 0
 46727  00DCCA  0E38               	movlw	low _device_dsc
 46728  00DCCC  0100               	movlb	0	; () banked
 46729  00DCCE  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 46730  00DCD0  0E94               	movlw	high _device_dsc
 46731  00DCD2  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 46732                           
 46733                           ; BSR set to: 0
 46734                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 46735  00DCD4  0E00               	movlw	0
 46736  00DCD6  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 46737  00DCD8  0E12               	movlw	18
 46738  00DCDA  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46739                           
 46740                           ;usb_device.c: 2060: break;
 46741  00DCDC  0012               	return	
 46742  00DCDE                     
 46743                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 46744                           
 46745                           ; BSR set to: 0
 46746  00DCDE  010D               	movlb	13	; () banked
 46747  00DCE0  5132               	movf	50,w,b	;volatile
 46748  00DCE2  A4D8               	btfss	status,2,c
 46749  00DCE4  D045               	goto	i2l286
 46750                           
 46751                           ; BSR set to: 13
 46752                           ;usb_device.c: 2066: {
 46753                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 46754  00DCE6  5132               	movf	50,w,b	;volatile
 46755  00DCE8  0D02               	mullw	2
 46756  00DCEA  0E39               	movlw	low _USB_CD_Ptr
 46757  00DCEC  24F3               	addwf	prodl,w,c
 46758  00DCEE  6EF6               	movwf	tblptrl,c
 46759  00DCF0  0E93               	movlw	high _USB_CD_Ptr
 46760  00DCF2  20F4               	addwfc	prodh,w,c
 46761  00DCF4  6EF7               	movwf	tblptrh,c
 46762  00DCF6                     	if	1	;There are 3 active tblptr bytes
 46763  00DCF6  6AF8               	clrf	tblptru,c
 46764  00DCF8  0E00               	movlw	low (__mediumconst shr (0+16))
 46765  00DCFA  22F8               	addwfc	tblptru,f,c
 46766  00DCFC                     	endif
 46767  00DCFC  0009               	tblrd		*+
 46768  00DCFE  CFF5 F0F3          	movff	tablat,_inPipes	;volatile
 46769  00DD02  000A               	tblrd		*-
 46770  00DD04  CFF5 F0F4          	movff	tablat,_inPipes+1	;volatile
 46771                           
 46772                           ; BSR set to: 13
 46773                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 46774  00DD08  0E02               	movlw	2
 46775  00DD0A  0100               	movlb	0	; () banked
 46776  00DD0C  25F3               	addwf	_inPipes& (0+255),w,b	;volatile
 46777  00DD0E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 46778  00DD10  0E00               	movlw	0
 46779  00DD12  21F4               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 46780  00DD14  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 46781  00DD16  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 46782  00DD1A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 46783  00DD1E  0E00               	movlw	low (__mediumconst shr (0+16))
 46784  00DD20  6EF8               	movwf	tblptru,c
 46785  00DD22  0E0E               	movlw	(high __ramtop+-1)
 46786  00DD24  64F7               	cpfsgt	tblptrh,c
 46787  00DD26  D003               	bra	i2u979_47
 46788  00DD28  0008               	tblrd		*
 46789  00DD2A  50F5               	movf	tablat,w,c
 46790  00DD2C  D005               	bra	i2u979_40
 46791  00DD2E                     i2u979_47:
 46792  00DD2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 46793  00DD32  CFF7 FFEA          	movff	tblptrh,fsr0h
 46794  00DD36  50EF               	movf	indf0,w,c
 46795  00DD38                     i2u979_40:
 46796  00DD38  0100               	movlb	0	; () banked
 46797  00DD3A  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46798                           
 46799                           ; BSR set to: 0
 46800                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 46801  00DD3C  0E03               	movlw	3
 46802  00DD3E  25F3               	addwf	_inPipes& (0+255),w,b	;volatile
 46803  00DD40  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 46804  00DD42  0E00               	movlw	0
 46805  00DD44  21F4               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 46806  00DD46  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 46807  00DD48  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 46808  00DD4C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 46809  00DD50  0E00               	movlw	low (__mediumconst shr (0+16))
 46810  00DD52  6EF8               	movwf	tblptru,c
 46811  00DD54  0E0E               	movlw	(high __ramtop+-1)
 46812  00DD56  64F7               	cpfsgt	tblptrh,c
 46813  00DD58  D003               	bra	i2u980_47
 46814  00DD5A  0008               	tblrd		*
 46815  00DD5C  50F5               	movf	tablat,w,c
 46816  00DD5E  D005               	bra	i2u980_40
 46817  00DD60                     i2u980_47:
 46818  00DD60  CFF6 FFE9          	movff	tblptrl,fsr0l
 46819  00DD64  CFF7 FFEA          	movff	tblptrh,fsr0h
 46820  00DD68  50EF               	movf	indf0,w,c
 46821  00DD6A                     i2u980_40:
 46822  00DD6A  0100               	movlb	0	; () banked
 46823  00DD6C  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 46824                           
 46825                           ;usb_device.c: 2078: }
 46826  00DD6E  0012               	return	
 46827  00DD70                     i2l286:
 46828                           
 46829                           ;usb_device.c: 2079: else
 46830                           ;usb_device.c: 2080: {
 46831                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 46832                           
 46833                           ; BSR set to: 0
 46834  00DD70  0E00               	movlw	0
 46835  00DD72  0100               	movlb	0	; () banked
 46836  00DD74  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46837                           
 46838                           ; BSR set to: 0
 46839                           ;usb_device.c: 2082: }
 46840                           ;usb_device.c: 2083: break;
 46841  00DD76  0012               	return	
 46842  00DD78                     
 46843                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 46844                           
 46845                           ; BSR set to: 0
 46846  00DD78  0E04               	movlw	4
 46847  00DD7A  010D               	movlb	13	; () banked
 46848  00DD7C  6132               	cpfslt	50,b	;volatile
 46849  00DD7E  D028               	goto	i2l289
 46850                           
 46851                           ; BSR set to: 13
 46852                           ;usb_device.c: 2089: {
 46853                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 46854  00DD80  5132               	movf	50,w,b	;volatile
 46855  00DD82  0D02               	mullw	2
 46856  00DD84  0E27               	movlw	low _USB_SD_Ptr
 46857  00DD86  24F3               	addwf	prodl,w,c
 46858  00DD88  6EF6               	movwf	tblptrl,c
 46859  00DD8A  0E93               	movlw	high _USB_SD_Ptr
 46860  00DD8C  20F4               	addwfc	prodh,w,c
 46861  00DD8E  6EF7               	movwf	tblptrh,c
 46862  00DD90                     	if	1	;There are 3 active tblptr bytes
 46863  00DD90  6AF8               	clrf	tblptru,c
 46864  00DD92  0E00               	movlw	low (__mediumconst shr (0+16))
 46865  00DD94  22F8               	addwfc	tblptru,f,c
 46866  00DD96                     	endif
 46867  00DD96  0009               	tblrd		*+
 46868  00DD98  CFF5 F0F3          	movff	tablat,_inPipes	;volatile
 46869  00DD9C  000A               	tblrd		*-
 46870  00DD9E  CFF5 F0F4          	movff	tablat,_inPipes+1	;volatile
 46871                           
 46872                           ; BSR set to: 13
 46873                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 46874  00DDA2  C0F3  FFF6         	movff	_inPipes,tblptrl	;volatile
 46875  00DDA6  C0F4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 46876  00DDAA  0E00               	movlw	low (__mediumconst shr (0+16))
 46877  00DDAC  6EF8               	movwf	tblptru,c
 46878  00DDAE  0E0E               	movlw	(high __ramtop+-1)
 46879  00DDB0  64F7               	cpfsgt	tblptrh,c
 46880  00DDB2  D003               	bra	i2u982_47
 46881  00DDB4  0008               	tblrd		*
 46882  00DDB6  50F5               	movf	tablat,w,c
 46883  00DDB8  D005               	bra	i2u982_40
 46884  00DDBA                     i2u982_47:
 46885  00DDBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 46886  00DDBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 46887  00DDC2  50EF               	movf	indf0,w,c
 46888  00DDC4                     i2u982_40:
 46889  00DDC4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 46890  00DDC6  5001               	movf	??_USBStdGetDscHandler,w,c
 46891  00DDC8  0100               	movlb	0	; () banked
 46892  00DDCA  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 46893  00DDCC  6BF8               	clrf	(_inPipes+5)& (0+255),b	;volatile
 46894                           
 46895                           ;usb_device.c: 2094: }
 46896  00DDCE  0012               	return	
 46897  00DDD0                     i2l289:
 46898                           
 46899                           ;usb_device.c: 2104: else
 46900                           ;usb_device.c: 2105: {
 46901                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 46902                           
 46903                           ; BSR set to: 0
 46904  00DDD0  0E00               	movlw	0
 46905  00DDD2  0100               	movlb	0	; () banked
 46906  00DDD4  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46907                           
 46908                           ; BSR set to: 0
 46909                           ;usb_device.c: 2107: }
 46910                           ;usb_device.c: 2108: break;
 46911  00DDD6  0012               	return	
 46912  00DDD8                     
 46913                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 46914                           
 46915                           ; BSR set to: 0
 46916  00DDD8  0E00               	movlw	0
 46917  00DDDA  0100               	movlb	0	; () banked
 46918  00DDDC  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 46919                           
 46920                           ; BSR set to: 0
 46921                           ;usb_device.c: 2112: }
 46922                           
 46923                           ;usb_device.c: 2111: break;
 46924  00DDDE  0012               	return	
 46925  00DDE0                     i2l282:
 46926                           
 46927                           ; BSR set to: 0
 46928                           
 46929                           ; BSR set to: 0
 46930  00DDE0  010D               	movlb	13	; () banked
 46931  00DDE2  5133               	movf	51,w,b	;volatile
 46932                           
 46933                           ; Switch size 1, requested type "space"
 46934                           ; Number of cases is 3, Range of values is 1 to 3
 46935                           ; switch strategies available:
 46936                           ; Name         Instructions Cycles
 46937                           ; simple_byte           10     6 (average)
 46938                           ;	Chosen strategy is simple_byte
 46939  00DDE4  0A01               	xorlw	1	; case 1
 46940  00DDE6  B4D8               	btfsc	status,2,c
 46941  00DDE8  D770               	goto	i2l283
 46942  00DDEA  0A03               	xorlw	3	; case 2
 46943  00DDEC  B4D8               	btfsc	status,2,c
 46944  00DDEE  D777               	goto	i2l285
 46945  00DDF0  0A01               	xorlw	1	; case 3
 46946  00DDF2  B4D8               	btfsc	status,2,c
 46947  00DDF4  D7C1               	goto	i2l288
 46948  00DDF6  D7F0               	goto	i2l291
 46949  00DDF8                     __end_of_USBStdGetDscHandler:
 46950                           	opt stack 0
 46951                           tosu	equ	0xFFF
 46952                           tosh	equ	0xFFE
 46953                           tosl	equ	0xFFD
 46954                           pclatu	equ	0xFFB
 46955                           pclath	equ	0xFFA
 46956                           tblptru	equ	0xFF8
 46957                           tblptrh	equ	0xFF7
 46958                           tblptrl	equ	0xFF6
 46959                           tablat	equ	0xFF5
 46960                           prodh	equ	0xFF4
 46961                           prodl	equ	0xFF3
 46962                           intcon	equ	0xFF2
 46963                           intcon2	equ	0xFF1
 46964                           intcon3	equ	0xFF0
 46965                           indf0	equ	0xFEF
 46966                           postinc0	equ	0xFEE
 46967                           fsr0h	equ	0xFEA
 46968                           fsr0l	equ	0xFE9
 46969                           wreg	equ	0xFE8
 46970                           indf1	equ	0xFE7
 46971                           postinc1	equ	0xFE6
 46972                           postdec1	equ	0xFE5
 46973                           plusw1	equ	0xFE3
 46974                           fsr1h	equ	0xFE2
 46975                           fsr1l	equ	0xFE1
 46976                           indf2	equ	0xFDF
 46977                           postinc2	equ	0xFDE
 46978                           postdec2	equ	0xFDD
 46979                           plusw2	equ	0xFDB
 46980                           fsr2h	equ	0xFDA
 46981                           fsr2l	equ	0xFD9
 46982                           status	equ	0xFD8
 46983                           
 46984 ;; *************** function _USBStdFeatureReqHandler *****************
 46985 ;; Defined at:
 46986 ;;		line 2756 in file "usb_device.c"
 46987 ;; Parameters:    Size  Location     Type
 46988 ;;		None
 46989 ;; Auto vars:     Size  Location     Type
 46990 ;;  p               2   27[COMRAM] PTR struct __BDT
 46991 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46992 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 46993 ;;		 -> UEP0(1), 
 46994 ;;  current_ep_d    1   26[COMRAM] struct .
 46995 ;; Return value:  Size  Location     Type
 46996 ;;                  1    wreg      void 
 46997 ;; Registers used:
 46998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46999 ;; Tracked objects:
 47000 ;;		On entry : 0/0
 47001 ;;		On exit  : 0/0
 47002 ;;		Unchanged: 0/0
 47003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47005 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47008 ;;Total ram usage:        6 bytes
 47009 ;; Hardware stack levels used:    1
 47010 ;; Hardware stack levels required when called:    4
 47011 ;; This function calls:
 47012 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47013 ;; This function is called by:
 47014 ;;		_USBCheckStdRequest
 47015 ;; This function uses a non-reentrant model
 47016 ;;
 47017                           
 47018                           	psect	text231
 47019  00C002                     __ptext231:
 47020                           	opt stack 0
 47021  00C002                     _USBStdFeatureReqHandler:
 47022                           	opt stack 9
 47023                           
 47024                           ;usb_device.c: 2758: BDT_ENTRY *p;
 47025                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 47026                           ;usb_device.c: 2763: unsigned char* pUEP;
 47027                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 47028                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 47029                           
 47030                           ;incstack = 0
 47031  00C002  010D               	movlb	13	; () banked
 47032  00C004  0532               	decf	50,w,b	;volatile
 47033  00C006  A4D8               	btfss	status,2,c
 47034  00C008  D010               	goto	i2l375
 47035                           
 47036                           ; BSR set to: 13
 47037  00C00A  5130               	movf	48,w,b	;volatile
 47038  00C00C  0B1F               	andlw	31
 47039  00C00E  0900               	iorlw	0
 47040  00C010  A4D8               	btfss	status,2,c
 47041  00C012  D00B               	goto	i2l375
 47042                           
 47043                           ; BSR set to: 13
 47044                           ;usb_device.c: 2803: {
 47045                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 47046  00C014  0100               	movlb	0	; () banked
 47047  00C016  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 47048                           
 47049                           ; BSR set to: 0
 47050                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 47051  00C018  0E03               	movlw	3
 47052  00C01A  010D               	movlb	13	; () banked
 47053  00C01C  1931               	xorwf	49,w,b	;volatile
 47054  00C01E  A4D8               	btfss	status,2,c
 47055  00C020  D002               	goto	i2l374
 47056                           
 47057                           ; BSR set to: 13
 47058                           ;usb_device.c: 2806: RemoteWakeup = 1;
 47059  00C022  0E01               	movlw	1
 47060  00C024  D001               	goto	L59
 47061  00C026                     i2l374:
 47062                           
 47063                           ; BSR set to: 13
 47064                           ;usb_device.c: 2807: else
 47065                           ;usb_device.c: 2808: RemoteWakeup = 0;
 47066                           
 47067                           ; BSR set to: 13
 47068  00C026  0E00               	movlw	0
 47069  00C028                     L59:
 47070  00C028  6E59               	movwf	_RemoteWakeup,c	;volatile
 47071  00C02A                     i2l375:
 47072                           
 47073                           ; BSR set to: 13
 47074                           ;usb_device.c: 2809: }
 47075                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 47076                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 47077                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 47078                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 47079                           
 47080                           ; BSR set to: 13
 47081  00C02A  5132               	movf	50,w,b	;volatile
 47082  00C02C  A4D8               	btfss	status,2,c
 47083  00C02E  0012               	return	
 47084                           
 47085                           ; BSR set to: 13
 47086  00C030  5130               	movf	48,w,b	;volatile
 47087  00C032  0B1F               	andlw	31
 47088  00C034  0A02               	xorlw	2
 47089  00C036  A4D8               	btfss	status,2,c
 47090  00C038  0012               	return	
 47091                           
 47092                           ; BSR set to: 13
 47093  00C03A  5134               	movf	52,w,b	;volatile
 47094  00C03C  0B0F               	andlw	15
 47095  00C03E  0900               	iorlw	0
 47096  00C040  B4D8               	btfsc	status,2,c
 47097  00C042  0012               	return	
 47098                           
 47099                           ; BSR set to: 13
 47100  00C044  5134               	movf	52,w,b	;volatile
 47101  00C046  0B0F               	andlw	15
 47102  00C048  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47103  00C04A  0E03               	movlw	3
 47104  00C04C  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 47105  00C04E  0012               	return	
 47106                           
 47107                           ; BSR set to: 13
 47108  00C050  0E20               	movlw	32
 47109  00C052  185C               	xorwf	_USBDeviceState,w,c	;volatile
 47110  00C054  A4D8               	btfss	status,2,c
 47111  00C056  0012               	return	
 47112                           
 47113                           ; BSR set to: 13
 47114                           ;usb_device.c: 2816: {
 47115                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 47116  00C058  0100               	movlb	0	; () banked
 47117  00C05A  8FF6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 47118                           
 47119                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 47120  00C05C  010D               	movlb	13	; () banked
 47121  00C05E  BF34               	btfsc	52,7,b	;volatile
 47122  00C060  D019               	goto	i2l377
 47123                           
 47124                           ; BSR set to: 13
 47125                           ;usb_device.c: 2823: {
 47126                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 47127  00C062  5134               	movf	52,w,b	;volatile
 47128  00C064  0B0F               	andlw	15
 47129  00C066  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47130  00C068  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47131  00C06A  0D02               	mullw	2
 47132  00C06C  0ED3               	movlw	low _pBDTEntryOut
 47133  00C06E  24F3               	addwf	prodl,w,c
 47134  00C070  6ED9               	movwf	fsr2l,c
 47135  00C072  0E01               	movlw	high _pBDTEntryOut
 47136  00C074  20F4               	addwfc	prodh,w,c
 47137  00C076  6EDA               	movwf	fsr2h,c
 47138  00C078  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 47139  00C07C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 47140                           
 47141                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 47142  00C080  5134               	movf	52,w,b	;volatile
 47143  00C082  0B0F               	andlw	15
 47144  00C084  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47145  00C086  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47146  00C088  0D01               	mullw	1
 47147  00C08A  0EE1               	movlw	low _ep_data_out
 47148  00C08C  24F3               	addwf	prodl,w,c
 47149  00C08E  6ED9               	movwf	fsr2l,c
 47150  00C090  0E01               	movlw	high _ep_data_out
 47151  00C092  D018               	goto	L60
 47152  00C094                     i2l377:
 47153                           
 47154                           ; BSR set to: 13
 47155                           ;usb_device.c: 2827: else
 47156                           ;usb_device.c: 2828: {
 47157                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 47158                           
 47159                           ; BSR set to: 13
 47160  00C094  5134               	movf	52,w,b	;volatile
 47161  00C096  0B0F               	andlw	15
 47162  00C098  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47163  00C09A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47164  00C09C  0D02               	mullw	2
 47165  00C09E  0E3B               	movlw	low _pBDTEntryIn
 47166  00C0A0  24F3               	addwf	prodl,w,c
 47167  00C0A2  6ED9               	movwf	fsr2l,c
 47168  00C0A4  0E00               	movlw	high _pBDTEntryIn
 47169  00C0A6  20F4               	addwfc	prodh,w,c
 47170  00C0A8  6EDA               	movwf	fsr2h,c
 47171  00C0AA  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 47172  00C0AE  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 47173                           
 47174                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 47175  00C0B2  5134               	movf	52,w,b	;volatile
 47176  00C0B4  0B0F               	andlw	15
 47177  00C0B6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47178  00C0B8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47179  00C0BA  0D01               	mullw	1
 47180  00C0BC  0EE4               	movlw	low _ep_data_in
 47181  00C0BE  24F3               	addwf	prodl,w,c
 47182  00C0C0  6ED9               	movwf	fsr2l,c
 47183  00C0C2  0E01               	movlw	high _ep_data_in
 47184  00C0C4                     L60:
 47185  00C0C4  20F4               	addwfc	prodh,w,c
 47186  00C0C6  6EDA               	movwf	fsr2h,c
 47187  00C0C8  50DF               	movf	indf2,w,c
 47188  00C0CA  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 47189                           
 47190                           ; BSR set to: 13
 47191                           ;usb_device.c: 2831: }
 47192                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 47193                           
 47194                           ; BSR set to: 13
 47195  00C0CC  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 47196  00C0CE  D006               	goto	i2l379
 47197                           
 47198                           ; BSR set to: 13
 47199                           ;usb_device.c: 2838: {
 47200                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 47201  00C0D0  0EFB               	movlw	251
 47202  00C0D2  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 47203  00C0D4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 47204  00C0D6  0EFF               	movlw	255
 47205  00C0D8  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 47206  00C0DA  D004               	goto	L61
 47207  00C0DC                     i2l379:
 47208                           
 47209                           ; BSR set to: 13
 47210                           ;usb_device.c: 2841: else
 47211                           ;usb_device.c: 2842: {
 47212                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 47213                           
 47214                           ; BSR set to: 13
 47215  00C0DC  0E04               	movlw	4
 47216  00C0DE  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 47217  00C0E0  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 47218  00C0E2  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 47219  00C0E4                     L61:
 47220  00C0E4  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 47221                           
 47222                           ; BSR set to: 13
 47223                           ;usb_device.c: 2844: }
 47224                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 47225                           
 47226                           ; BSR set to: 13
 47227  00C0E6  BF34               	btfsc	52,7,b	;volatile
 47228  00C0E8  D00A               	goto	i2l381
 47229                           
 47230                           ; BSR set to: 13
 47231                           ;usb_device.c: 2850: {
 47232                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 47233  00C0EA  5134               	movf	52,w,b	;volatile
 47234  00C0EC  0B0F               	andlw	15
 47235  00C0EE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47236  00C0F0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47237  00C0F2  0D02               	mullw	2
 47238  00C0F4  0ED3               	movlw	low _pBDTEntryOut
 47239  00C0F6  24F3               	addwf	prodl,w,c
 47240  00C0F8  6ED9               	movwf	fsr2l,c
 47241  00C0FA  0E01               	movlw	high _pBDTEntryOut
 47242  00C0FC  D009               	goto	L62
 47243  00C0FE                     i2l381:
 47244                           
 47245                           ; BSR set to: 13
 47246                           ;usb_device.c: 2853: else
 47247                           ;usb_device.c: 2854: {
 47248                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 47249                           
 47250                           ; BSR set to: 13
 47251  00C0FE  5134               	movf	52,w,b	;volatile
 47252  00C100  0B0F               	andlw	15
 47253  00C102  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47254  00C104  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47255  00C106  0D02               	mullw	2
 47256  00C108  0E3B               	movlw	low _pBDTEntryIn
 47257  00C10A  24F3               	addwf	prodl,w,c
 47258  00C10C  6ED9               	movwf	fsr2l,c
 47259  00C10E  0E00               	movlw	high _pBDTEntryIn
 47260  00C110                     L62:
 47261  00C110  20F4               	addwfc	prodh,w,c
 47262  00C112  6EDA               	movwf	fsr2h,c
 47263  00C114  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 47264  00C118  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 47265                           
 47266                           ; BSR set to: 13
 47267                           ;usb_device.c: 2856: }
 47268                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 47269                           
 47270                           ; BSR set to: 13
 47271  00C11C  0E03               	movlw	3
 47272  00C11E  1931               	xorwf	49,w,b	;volatile
 47273  00C120  A4D8               	btfss	status,2,c
 47274  00C122  D02D               	goto	i2l383
 47275                           
 47276                           ; BSR set to: 13
 47277                           ;usb_device.c: 2860: {
 47278                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 47279  00C124  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47280  00C128  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47281  00C12C  AEDF               	btfss	indf2,7,c
 47282  00C12E  D01A               	goto	i2l386
 47283                           
 47284                           ; BSR set to: 13
 47285                           ;usb_device.c: 2862: {
 47286                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 47287  00C130  BF34               	btfsc	52,7,b	;volatile
 47288  00C132  D00A               	goto	i2l385
 47289                           
 47290                           ; BSR set to: 13
 47291                           ;usb_device.c: 2866: {
 47292                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 47293  00C134  5134               	movf	52,w,b	;volatile
 47294  00C136  0B0F               	andlw	15
 47295  00C138  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47296  00C13A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47297  00C13C  0D01               	mullw	1
 47298  00C13E  0EE1               	movlw	low _ep_data_out
 47299  00C140  24F3               	addwf	prodl,w,c
 47300  00C142  6ED9               	movwf	fsr2l,c
 47301  00C144  0E01               	movlw	high _ep_data_out
 47302  00C146  D00A               	goto	L63
 47303  00C148                     i2l385:
 47304                           
 47305                           ;usb_device.c: 2869: else
 47306                           ;usb_device.c: 2870: {
 47307                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 47308                           
 47309                           ; BSR set to: 1
 47310  00C148  010D               	movlb	13	; () banked
 47311  00C14A  5134               	movf	52,w,b	;volatile
 47312  00C14C  0B0F               	andlw	15
 47313  00C14E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47314  00C150  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47315  00C152  0D01               	mullw	1
 47316  00C154  0EE4               	movlw	low _ep_data_in
 47317  00C156  24F3               	addwf	prodl,w,c
 47318  00C158  6ED9               	movwf	fsr2l,c
 47319  00C15A  0E01               	movlw	high _ep_data_in
 47320  00C15C                     L63:
 47321  00C15C  20F4               	addwfc	prodh,w,c
 47322  00C15E  6EDA               	movwf	fsr2h,c
 47323  00C160  0101               	movlb	1	; () banked
 47324  00C162  82DF               	bsf	indf2,1,c
 47325  00C164                     i2l386:
 47326                           
 47327                           ;usb_device.c: 2872: }
 47328                           ;usb_device.c: 2873: }
 47329                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 47330                           
 47331                           ; BSR set to: 1
 47332                           
 47333                           ; BSR set to: 1
 47334  00C164  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47335  00C168  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47336  00C16C  0E00               	movlw	0
 47337  00C16E  84DB               	bsf	plusw2,2,c
 47338                           
 47339                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 47340  00C170  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47341  00C174  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47342  00C178  0E00               	movlw	0
 47343  00C17A  8EDB               	bsf	plusw2,7,c
 47344                           
 47345                           ;usb_device.c: 2878: }
 47346  00C17C  0012               	return	
 47347  00C17E                     i2l383:
 47348                           
 47349                           ;usb_device.c: 2879: else
 47350                           ;usb_device.c: 2880: {
 47351                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 47352  00C17E  0E04               	movlw	4
 47353  00C180  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 47354  00C182  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 47355  00C184  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 47356  00C186  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 47357                           
 47358                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 47359  00C188  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47360  00C18C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47361  00C190  AEDF               	btfss	indf2,7,c
 47362  00C192  D01B               	goto	i2l388
 47363                           
 47364                           ;usb_device.c: 2887: {
 47365                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 47366  00C194  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47367  00C198  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47368  00C19C  0E7F               	movlw	127
 47369  00C19E  16DF               	andwf	indf2,f,c
 47370                           
 47371                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 47372  00C1A0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47373  00C1A4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47374  00C1A8  0E00               	movlw	0
 47375  00C1AA  8CDB               	bsf	plusw2,6,c
 47376                           
 47377                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 47378  00C1AC  0E00               	movlw	0
 47379  00C1AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47380  00C1B0  0E05               	movlw	5
 47381  00C1B2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47382  00C1B4  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 47383  00C1B8  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 47384  00C1BC  0E00               	movlw	0
 47385  00C1BE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47386  00C1C0  0E02               	movlw	2
 47387  00C1C2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47388  00C1C4  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47389                           
 47390                           ;usb_device.c: 2893: }
 47391  00C1C8  D006               	goto	i2l389
 47392  00C1CA                     i2l388:
 47393                           
 47394                           ;usb_device.c: 2894: else
 47395                           ;usb_device.c: 2895: {
 47396                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 47397  00C1CA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47398  00C1CE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47399  00C1D2  0E00               	movlw	0
 47400  00C1D4  8CDB               	bsf	plusw2,6,c
 47401  00C1D6                     i2l389:
 47402                           
 47403                           ;usb_device.c: 2898: }
 47404                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 47405  00C1D6  0E04               	movlw	4
 47406  00C1D8  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 47407  00C1DA  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 47408  00C1DC  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 47409  00C1DE  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 47410                           
 47411                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 47412  00C1E0  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 47413  00C1E2  D006               	goto	i2u1004_40
 47414  00C1E4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47415  00C1E8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47416  00C1EC  AEDF               	btfss	indf2,7,c
 47417  00C1EE  D030               	goto	i2l390
 47418  00C1F0                     i2u1004_40:
 47419                           
 47420                           ;usb_device.c: 2909: {
 47421                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 47422  00C1F0  010D               	movlb	13	; () banked
 47423  00C1F2  BF34               	btfsc	52,7,b	;volatile
 47424  00C1F4  D00A               	goto	i2l393
 47425                           
 47426                           ; BSR set to: 13
 47427                           ;usb_device.c: 2911: {
 47428                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 47429  00C1F6  5134               	movf	52,w,b	;volatile
 47430  00C1F8  0B0F               	andlw	15
 47431  00C1FA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47432  00C1FC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47433  00C1FE  0D01               	mullw	1
 47434  00C200  0EE1               	movlw	low _ep_data_out
 47435  00C202  24F3               	addwf	prodl,w,c
 47436  00C204  6ED9               	movwf	fsr2l,c
 47437  00C206  0E01               	movlw	high _ep_data_out
 47438  00C208  D00A               	goto	L64
 47439  00C20A                     i2l393:
 47440                           
 47441                           ;usb_device.c: 2914: else
 47442                           ;usb_device.c: 2915: {
 47443                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 47444                           
 47445                           ; BSR set to: 1
 47446  00C20A  010D               	movlb	13	; () banked
 47447  00C20C  5134               	movf	52,w,b	;volatile
 47448  00C20E  0B0F               	andlw	15
 47449  00C210  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47450  00C212  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47451  00C214  0D01               	mullw	1
 47452  00C216  0EE4               	movlw	low _ep_data_in
 47453  00C218  24F3               	addwf	prodl,w,c
 47454  00C21A  6ED9               	movwf	fsr2l,c
 47455  00C21C  0E01               	movlw	high _ep_data_in
 47456  00C21E                     L64:
 47457  00C21E  20F4               	addwfc	prodh,w,c
 47458  00C220  6EDA               	movwf	fsr2h,c
 47459  00C222  0101               	movlb	1	; () banked
 47460  00C224  92DF               	bcf	indf2,1,c
 47461                           
 47462                           ; BSR set to: 1
 47463                           ;usb_device.c: 2917: }
 47464                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 47465                           
 47466                           ; BSR set to: 1
 47467  00C226  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47468  00C22A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47469  00C22E  0E3B               	movlw	59
 47470  00C230  16DF               	andwf	indf2,f,c
 47471                           
 47472                           ; BSR set to: 1
 47473                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 47474  00C232  0E00               	movlw	0
 47475  00C234  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47476  00C236  0E05               	movlw	5
 47477  00C238  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47478  00C23A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 47479  00C23E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 47480  00C242  0E00               	movlw	0
 47481  00C244  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47482  00C246  0E02               	movlw	2
 47483  00C248  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47484  00C24A  ECC4  F084         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47485                           
 47486                           ;usb_device.c: 2923: }
 47487  00C24E  D006               	goto	i2l395
 47488  00C250                     i2l390:
 47489                           
 47490                           ;usb_device.c: 2924: else
 47491                           ;usb_device.c: 2925: {
 47492                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 47493  00C250  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 47494  00C254  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 47495  00C258  0E3B               	movlw	59
 47496  00C25A  16DF               	andwf	indf2,f,c
 47497  00C25C                     i2l395:
 47498                           
 47499                           ;usb_device.c: 2928: }
 47500                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 47501  00C25C  010D               	movlb	13	; () banked
 47502  00C25E  5134               	movf	52,w,b	;volatile
 47503  00C260  0B0F               	andlw	15
 47504  00C262  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 47505  00C264  5018               	movf	??_USBStdFeatureReqHandler,w,c
 47506  00C266  0D01               	mullw	1
 47507  00C268  0E26               	movlw	38
 47508  00C26A  24F3               	addwf	prodl,w,c
 47509  00C26C  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 47510  00C26E  0E0F               	movlw	15
 47511  00C270  20F4               	addwfc	prodh,w,c
 47512  00C272  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 47513                           
 47514                           ; BSR set to: 13
 47515                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 47516  00C274  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 47517  00C278  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 47518  00C27C  0EFE               	movlw	254
 47519  00C27E  16DF               	andwf	indf2,f,c
 47520                           
 47521                           ; BSR set to: 13
 47522  00C280  0012               	return	
 47523  00C282                     __end_of_USBStdFeatureReqHandler:
 47524                           	opt stack 0
 47525                           tosu	equ	0xFFF
 47526                           tosh	equ	0xFFE
 47527                           tosl	equ	0xFFD
 47528                           pclatu	equ	0xFFB
 47529                           pclath	equ	0xFFA
 47530                           tblptru	equ	0xFF8
 47531                           tblptrh	equ	0xFF7
 47532                           tblptrl	equ	0xFF6
 47533                           tablat	equ	0xFF5
 47534                           prodh	equ	0xFF4
 47535                           prodl	equ	0xFF3
 47536                           intcon	equ	0xFF2
 47537                           intcon2	equ	0xFF1
 47538                           intcon3	equ	0xFF0
 47539                           indf0	equ	0xFEF
 47540                           postinc0	equ	0xFEE
 47541                           fsr0h	equ	0xFEA
 47542                           fsr0l	equ	0xFE9
 47543                           wreg	equ	0xFE8
 47544                           indf1	equ	0xFE7
 47545                           postinc1	equ	0xFE6
 47546                           postdec1	equ	0xFE5
 47547                           plusw1	equ	0xFE3
 47548                           fsr1h	equ	0xFE2
 47549                           fsr1l	equ	0xFE1
 47550                           indf2	equ	0xFDF
 47551                           postinc2	equ	0xFDE
 47552                           postdec2	equ	0xFDD
 47553                           plusw2	equ	0xFDB
 47554                           fsr2h	equ	0xFDA
 47555                           fsr2l	equ	0xFD9
 47556                           status	equ	0xFD8
 47557                           
 47558 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 47559 ;; Defined at:
 47560 ;;		line 54 in file "usb_events.c"
 47561 ;; Parameters:    Size  Location     Type
 47562 ;;  event           2   15[COMRAM] enum E8443
 47563 ;;  pdata           2   17[COMRAM] PTR void 
 47564 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 47565 ;;		 -> BDT(48), 
 47566 ;;  size            2   19[COMRAM] unsigned int 
 47567 ;; Auto vars:     Size  Location     Type
 47568 ;;		None
 47569 ;; Return value:  Size  Location     Type
 47570 ;;                  1    wreg      unsigned char 
 47571 ;; Registers used:
 47572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47573 ;; Tracked objects:
 47574 ;;		On entry : 0/0
 47575 ;;		On exit  : 0/0
 47576 ;;		Unchanged: 0/0
 47577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47578 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47581 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47582 ;;Total ram usage:        8 bytes
 47583 ;; Hardware stack levels used:    1
 47584 ;; Hardware stack levels required when called:    3
 47585 ;; This function calls:
 47586 ;;		_APP_DeviceCustomHIDInitialize
 47587 ;;		_APP_DeviceMSDInitialize
 47588 ;;		_MSDTransferTerminated
 47589 ;;		_USBCheckHIDRequest
 47590 ;;		_USBCheckMSDRequest
 47591 ;;		i2_SYSTEM_Initialize
 47592 ;; This function is called by:
 47593 ;;		_USBDeviceTasks
 47594 ;;		_USBStdSetCfgHandler
 47595 ;;		_USBSuspend
 47596 ;;		_USBWakeFromSuspend
 47597 ;;		_USBCtrlTrfSetupHandler
 47598 ;;		_USBCheckStdRequest
 47599 ;;		_USBStdFeatureReqHandler
 47600 ;; This function uses a non-reentrant model
 47601 ;;
 47602                           
 47603                           	psect	text232
 47604  010988                     __ptext232:
 47605                           	opt stack 0
 47606  010988                     _USER_USB_CALLBACK_EVENT_HANDLER:
 47607                           	opt stack 13
 47608                           
 47609                           ;usb_events.c: 56: switch((int)event)
 47610                           
 47611                           ;incstack = 0
 47612  010988  D019               	goto	i2l824
 47613  01098A                     
 47614                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 47615  01098A  0E01               	movlw	1
 47616  01098C  EC5F  F08E         	call	i2_SYSTEM_Initialize
 47617                           
 47618                           ;usb_events.c: 79: break;
 47619  010990  0012               	return	
 47620  010992                     
 47621                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 47622  010992  0E02               	movlw	2
 47623  010994  EC5F  F08E         	call	i2_SYSTEM_Initialize
 47624                           
 47625                           ;usb_events.c: 90: break;
 47626  010998  0012               	return	
 47627  01099A                     
 47628                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 47629  01099A  ECD2  F092         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 47630                           
 47631                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 47632  01099E  EC33  F097         	call	_APP_DeviceMSDInitialize	;wreg free
 47633                           
 47634                           ;usb_events.c: 100: break;
 47635                           
 47636                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 47637                           
 47638                           ;usb_events.c: 97: break;
 47639  0109A2  0012               	return	
 47640  0109A4                     
 47641                           ;usb_events.c: 105: USBCheckHIDRequest();
 47642  0109A4  EC2F  F07B         	call	_USBCheckHIDRequest	;wreg free
 47643                           
 47644                           ;usb_events.c: 108: USBCheckMSDRequest();
 47645  0109A8  ECDC  F07E         	call	_USBCheckMSDRequest	;wreg free
 47646                           
 47647                           ;usb_events.c: 112: break;
 47648                           
 47649                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 47650                           
 47651                           ;usb_events.c: 109: break;
 47652  0109AC  0012               	return	
 47653  0109AE                     
 47654                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 47655  0109AE  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 47656  0109B2  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 47657  0109B6  EC0A  F08E         	call	_MSDTransferTerminated	;wreg free
 47658                           
 47659                           ;usb_events.c: 129: }
 47660                           
 47661                           ;usb_events.c: 128: break;
 47662                           
 47663                           ;usb_events.c: 127: default:
 47664                           
 47665                           ;usb_events.c: 125: break;
 47666  0109BA  0012               	return	
 47667  0109BC                     i2l824:
 47668  0109BC  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 47669  0109C0  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 47670                           
 47671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 47672                           ; Switch size 1, requested type "space"
 47673                           ; Number of cases is 2, Range of values is 0 to 127
 47674                           ; switch strategies available:
 47675                           ; Name         Instructions Cycles
 47676                           ; simple_byte            7     4 (average)
 47677                           ;	Chosen strategy is simple_byte
 47678  0109C4  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 47679  0109C6  0A00               	xorlw	0	; case 0
 47680  0109C8  B4D8               	btfsc	status,2,c
 47681  0109CA  D004               	goto	i2l17607
 47682  0109CC  0A7F               	xorlw	127	; case 127
 47683  0109CE  A4D8               	btfss	status,2,c
 47684  0109D0  0012               	return	
 47685  0109D2  D01A               	goto	i2l17609
 47686  0109D4                     i2l17607:
 47687                           
 47688                           ; Switch size 1, requested type "space"
 47689                           ; Number of cases is 8, Range of values is 1 to 117
 47690                           ; switch strategies available:
 47691                           ; Name         Instructions Cycles
 47692                           ; simple_byte           25    13 (average)
 47693                           ;	Chosen strategy is simple_byte
 47694  0109D4  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 47695  0109D6  0A01               	xorlw	1	; case 1
 47696  0109D8  B4D8               	btfsc	status,2,c
 47697  0109DA  D7DF               	goto	i2l830
 47698  0109DC  0A03               	xorlw	3	; case 2
 47699  0109DE  B4D8               	btfsc	status,2,c
 47700  0109E0  0012               	return	
 47701  0109E2  0A01               	xorlw	1	; case 3
 47702  0109E4  B4D8               	btfsc	status,2,c
 47703  0109E6  D7DE               	goto	i2l832
 47704  0109E8  0A06               	xorlw	6	; case 5
 47705  0109EA  B4D8               	btfsc	status,2,c
 47706  0109EC  D7E0               	goto	i2l834
 47707  0109EE  0A77               	xorlw	119	; case 114
 47708  0109F0  B4D8               	btfsc	status,2,c
 47709  0109F2  0012               	return	
 47710  0109F4  0A01               	xorlw	1	; case 115
 47711  0109F6  B4D8               	btfsc	status,2,c
 47712  0109F8  0012               	return	
 47713  0109FA  0A07               	xorlw	7	; case 116
 47714  0109FC  B4D8               	btfsc	status,2,c
 47715  0109FE  D7C9               	goto	i2l829
 47716  010A00  0A01               	xorlw	1	; case 117
 47717  010A02  A4D8               	btfss	status,2,c
 47718  010A04  0012               	return	
 47719  010A06  D7C1               	goto	i2l828
 47720  010A08                     i2l17609:
 47721                           
 47722                           ; Switch size 1, requested type "space"
 47723                           ; Number of cases is 1, Range of values is 255 to 255
 47724                           ; switch strategies available:
 47725                           ; Name         Instructions Cycles
 47726                           ; simple_byte            4     3 (average)
 47727                           ;	Chosen strategy is simple_byte
 47728  010A08  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 47729  010A0A  0AFF               	xorlw	255	; case 255
 47730  010A0C  0012               	return	
 47731  010A0E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 47732                           	opt stack 0
 47733                           tosu	equ	0xFFF
 47734                           tosh	equ	0xFFE
 47735                           tosl	equ	0xFFD
 47736                           pclatu	equ	0xFFB
 47737                           pclath	equ	0xFFA
 47738                           tblptru	equ	0xFF8
 47739                           tblptrh	equ	0xFF7
 47740                           tblptrl	equ	0xFF6
 47741                           tablat	equ	0xFF5
 47742                           prodh	equ	0xFF4
 47743                           prodl	equ	0xFF3
 47744                           intcon	equ	0xFF2
 47745                           intcon2	equ	0xFF1
 47746                           intcon3	equ	0xFF0
 47747                           indf0	equ	0xFEF
 47748                           postinc0	equ	0xFEE
 47749                           fsr0h	equ	0xFEA
 47750                           fsr0l	equ	0xFE9
 47751                           wreg	equ	0xFE8
 47752                           indf1	equ	0xFE7
 47753                           postinc1	equ	0xFE6
 47754                           postdec1	equ	0xFE5
 47755                           plusw1	equ	0xFE3
 47756                           fsr1h	equ	0xFE2
 47757                           fsr1l	equ	0xFE1
 47758                           indf2	equ	0xFDF
 47759                           postinc2	equ	0xFDE
 47760                           postdec2	equ	0xFDD
 47761                           plusw2	equ	0xFDB
 47762                           fsr2h	equ	0xFDA
 47763                           fsr2l	equ	0xFD9
 47764                           status	equ	0xFD8
 47765                           
 47766 ;; *************** function i2_SYSTEM_Initialize *****************
 47767 ;; Defined at:
 47768 ;;		line 146 in file "system.c"
 47769 ;; Parameters:    Size  Location     Type
 47770 ;;  state           1    wreg     enum E8234
 47771 ;; Auto vars:     Size  Location     Type
 47772 ;;  state           1    4[COMRAM] enum E8234
 47773 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 47774 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 47775 ;; Return value:  Size  Location     Type
 47776 ;;                  1    wreg      void 
 47777 ;; Registers used:
 47778 ;;		wreg, status,2, status,0
 47779 ;; Tracked objects:
 47780 ;;		On entry : 0/0
 47781 ;;		On exit  : 0/0
 47782 ;;		Unchanged: 0/0
 47783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47785 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47787 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47788 ;;Total ram usage:        5 bytes
 47789 ;; Hardware stack levels used:    1
 47790 ;; This function calls:
 47791 ;;		Nothing
 47792 ;; This function is called by:
 47793 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47794 ;; This function uses a non-reentrant model
 47795 ;;
 47796                           
 47797                           	psect	text233
 47798  011CBE                     __ptext233:
 47799                           	opt stack 0
 47800  011CBE                     i2_SYSTEM_Initialize:
 47801                           	opt stack 15
 47802                           
 47803                           ;incstack = 0
 47804                           ;i2SYSTEM_Initialize@state stored from wreg
 47805  011CBE  6E05               	movwf	i2SYSTEM_Initialize@state,c
 47806                           
 47807                           ;system.c: 148: switch(state)
 47808  011CC0  D01D               	goto	i2l949
 47809  011CC2                     
 47810                           ;system.c: 157: {
 47811                           ;system.c: 158: unsigned int pll_startup_counter = 600;
 47812  011CC2  0E02               	movlw	2
 47813  011CC4  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 47814  011CC6  0E58               	movlw	88
 47815  011CC8  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 47816                           
 47817                           ;system.c: 159: OSCTUNEbits.PLLEN = 1;
 47818  011CCA  8C9B               	bsf	3995,6,c	;volatile
 47819  011CCC                     i2l11747:
 47820  011CCC  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 47821  011CCE  A0D8               	btfss	status,0,c
 47822  011CD0  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 47823  011CD2  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 47824  011CD4  E1FB               	bnz	i2l11747
 47825  011CD6  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 47826  011CD8  B4D8               	btfsc	status,2,c
 47827  011CDA  0012               	return	
 47828  011CDC  D7F7               	goto	i2l952
 47829  011CDE                     
 47830                           ;system.c: 185: OSCCON = 0x70;
 47831  011CDE  0E70               	movlw	112
 47832  011CE0  6ED3               	movwf	4051,c	;volatile
 47833                           
 47834                           ;system.c: 191: {
 47835                           ;system.c: 192: unsigned int pll_startup_counter = 800;
 47836  011CE2  0E03               	movlw	3
 47837  011CE4  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,c
 47838  011CE6  0E20               	movlw	32
 47839  011CE8  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284,c
 47840  011CEA                     i2l11751:
 47841  011CEA  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284,f,c
 47842  011CEC  A0D8               	btfss	status,0,c
 47843  011CEE  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,f,c
 47844  011CF0  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284,w,c
 47845  011CF2  E1FB               	bnz	i2l11751
 47846  011CF4  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,w,c
 47847  011CF6  B4D8               	btfsc	status,2,c
 47848  011CF8  0012               	return	
 47849  011CFA  D7F7               	goto	i2l958
 47850  011CFC                     i2l949:
 47851  011CFC  5005               	movf	i2SYSTEM_Initialize@state,w,c
 47852                           
 47853                           ; Switch size 1, requested type "space"
 47854                           ; Number of cases is 3, Range of values is 0 to 2
 47855                           ; switch strategies available:
 47856                           ; Name         Instructions Cycles
 47857                           ; simple_byte           10     6 (average)
 47858                           ;	Chosen strategy is simple_byte
 47859  011CFE  0A00               	xorlw	0	; case 0
 47860  011D00  B4D8               	btfsc	status,2,c
 47861  011D02  D7DF               	goto	i2l950
 47862  011D04  0A01               	xorlw	1	; case 1
 47863  011D06  B4D8               	btfsc	status,2,c
 47864  011D08  0012               	return	
 47865  011D0A  0A03               	xorlw	3	; case 2
 47866  011D0C  A4D8               	btfss	status,2,c
 47867  011D0E  0012               	return	
 47868  011D10  D7E6               	goto	i2l956
 47869  011D12                     __end_ofi2_SYSTEM_Initialize:
 47870                           	opt stack 0
 47871                           tosu	equ	0xFFF
 47872                           tosh	equ	0xFFE
 47873                           tosl	equ	0xFFD
 47874                           pclatu	equ	0xFFB
 47875                           pclath	equ	0xFFA
 47876                           tblptru	equ	0xFF8
 47877                           tblptrh	equ	0xFF7
 47878                           tblptrl	equ	0xFF6
 47879                           tablat	equ	0xFF5
 47880                           prodh	equ	0xFF4
 47881                           prodl	equ	0xFF3
 47882                           intcon	equ	0xFF2
 47883                           intcon2	equ	0xFF1
 47884                           intcon3	equ	0xFF0
 47885                           indf0	equ	0xFEF
 47886                           postinc0	equ	0xFEE
 47887                           fsr0h	equ	0xFEA
 47888                           fsr0l	equ	0xFE9
 47889                           wreg	equ	0xFE8
 47890                           indf1	equ	0xFE7
 47891                           postinc1	equ	0xFE6
 47892                           postdec1	equ	0xFE5
 47893                           plusw1	equ	0xFE3
 47894                           fsr1h	equ	0xFE2
 47895                           fsr1l	equ	0xFE1
 47896                           indf2	equ	0xFDF
 47897                           postinc2	equ	0xFDE
 47898                           postdec2	equ	0xFDD
 47899                           plusw2	equ	0xFDB
 47900                           fsr2h	equ	0xFDA
 47901                           fsr2l	equ	0xFD9
 47902                           status	equ	0xFD8
 47903                           
 47904 ;; *************** function _USBCheckMSDRequest *****************
 47905 ;; Defined at:
 47906 ;;		line 218 in file "usb_device_msd.c"
 47907 ;; Parameters:    Size  Location     Type
 47908 ;;		None
 47909 ;; Auto vars:     Size  Location     Type
 47910 ;;		None
 47911 ;; Return value:  Size  Location     Type
 47912 ;;                  1    wreg      void 
 47913 ;; Registers used:
 47914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47915 ;; Tracked objects:
 47916 ;;		On entry : 0/0
 47917 ;;		On exit  : 0/0
 47918 ;;		Unchanged: 0/0
 47919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47923 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47924 ;;Total ram usage:        4 bytes
 47925 ;; Hardware stack levels used:    1
 47926 ;; Hardware stack levels required when called:    1
 47927 ;; This function calls:
 47928 ;;		i2_USBTransferOnePacket
 47929 ;; This function is called by:
 47930 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47931 ;; This function uses a non-reentrant model
 47932 ;;
 47933                           
 47934                           	psect	text234
 47935  00FDB8                     __ptext234:
 47936                           	opt stack 0
 47937  00FDB8                     _USBCheckMSDRequest:
 47938                           	opt stack 14
 47939                           
 47940                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 47941                           
 47942                           ;incstack = 0
 47943  00FDB8  010D               	movlb	13	; () banked
 47944  00FDBA  5130               	movf	48,w,b	;volatile
 47945  00FDBC  0B1F               	andlw	31
 47946  00FDBE  06E8               	decf	wreg,f,c
 47947  00FDC0  A4D8               	btfss	status,2,c
 47948  00FDC2  0012               	return	
 47949                           
 47950                           ; BSR set to: 13
 47951                           ;usb_device_msd.c: 223: }
 47952                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 47953                           
 47954                           ; BSR set to: 13
 47955                           
 47956                           ; BSR set to: 13
 47957                           ;usb_device_msd.c: 221: {
 47958                           ;usb_device_msd.c: 222: return;
 47959  00FDC4  5134               	movf	52,w,b	;volatile
 47960  00FDC6  A4D8               	btfss	status,2,c
 47961  00FDC8  0012               	return	
 47962  00FDCA  D04E               	goto	i2l549
 47963  00FDCC                     
 47964                           ; BSR set to: 13
 47965                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 47966                           
 47967                           ; BSR set to: 13
 47968  00FDCC  5132               	movf	50,w,b	;volatile
 47969  00FDCE  1133               	iorwf	51,w,b	;volatile
 47970  00FDD0  A4D8               	btfss	status,2,c
 47971  00FDD2  0012               	return	
 47972                           
 47973                           ; BSR set to: 13
 47974  00FDD4  5136               	movf	54,w,b	;volatile
 47975  00FDD6  1137               	iorwf	55,w,b	;volatile
 47976  00FDD8  A4D8               	btfss	status,2,c
 47977  00FDDA  0012               	return	
 47978                           
 47979                           ; BSR set to: 13
 47980                           ;usb_device_msd.c: 238: }
 47981                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 47982                           
 47983                           ; BSR set to: 13
 47984                           
 47985                           ; BSR set to: 13
 47986                           ;usb_device_msd.c: 236: {
 47987                           ;usb_device_msd.c: 237: return;
 47988  00FDDC  0E00               	movlw	0
 47989  00FDDE  6E54               	movwf	_MSD_State,c
 47990                           
 47991                           ; BSR set to: 13
 47992                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 47993  00FDE0  6853               	setf	_MSDCommandState,c
 47994                           
 47995                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 47996  00FDE2  0E00               	movlw	0
 47997  00FDE4  0101               	movlb	1	; () banked
 47998  00FDE6  6FF5               	movwf	_MSDReadState& (0+255),b
 47999                           
 48000                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 48001  00FDE8  0E00               	movlw	0
 48002  00FDEA  6E52               	movwf	_MSDWriteState,c
 48003                           
 48004                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 48005  00FDEC  0E01               	movlw	1
 48006  00FDEE  6FF1               	movwf	_MSDCBWValid& (0+255),b
 48007                           
 48008                           ; BSR set to: 1
 48009                           
 48010                           ; BSR set to: 1
 48011                           
 48012                           ; BSR set to: 1
 48013                           
 48014                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 48015  00FDF0  C1D7  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2640
 48016  00FDF4  C1D8  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2640+1
 48017                           
 48018                           ; BSR set to: 1
 48019  00FDF8  500C               	movf	_USBCheckMSDRequest$2640,w,c
 48020  00FDFA  100D               	iorwf	_USBCheckMSDRequest$2640+1,w,c
 48021  00FDFC  B4D8               	btfsc	status,2,c
 48022  00FDFE  D00A               	goto	i2u872_40
 48023                           
 48024                           ; BSR set to: 1
 48025                           
 48026                           ; BSR set to: 1
 48027                           
 48028                           ; BSR set to: 1
 48029                           
 48030                           ; BSR set to: 1
 48031  00FE00  C1D7  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2641
 48032  00FE04  C1D8  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2641+1
 48033                           
 48034                           ; BSR set to: 1
 48035                           
 48036                           ; BSR set to: 1
 48037  00FE08  C00E  FFD9         	movff	_USBCheckMSDRequest$2641,fsr2l
 48038  00FE0C  C00F  FFDA         	movff	_USBCheckMSDRequest$2641+1,fsr2h
 48039  00FE10  BEDF               	btfsc	indf2,7,c
 48040  00FE12  D00F               	goto	i2l554
 48041  00FE14                     i2u872_40:
 48042                           
 48043                           ; BSR set to: 1
 48044                           ;usb_device_msd.c: 256: {
 48045                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 48046                           
 48047                           ; BSR set to: 1
 48048  00FE14  0E00               	movlw	0
 48049  00FE16  6E01               	movwf	i2USBTransferOnePacket@dir,c
 48050  00FE18  0E40               	movlw	64
 48051  00FE1A  6E02               	movwf	i2USBTransferOnePacket@data,c
 48052  00FE1C  0E0D               	movlw	13
 48053  00FE1E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 48054  00FE20  0E40               	movlw	64
 48055  00FE22  6E04               	movwf	i2USBTransferOnePacket@len,c
 48056  00FE24  0E02               	movlw	2
 48057  00FE26  EC06  F076         	call	i2_USBTransferOnePacket
 48058  00FE2A  C001  F047         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 48059  00FE2E  C002  F048         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 48060  00FE32                     i2l554:
 48061                           
 48062                           ;usb_device_msd.c: 258: }
 48063                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 48064  00FE32  0E80               	movlw	128
 48065  00FE34  0100               	movlb	0	; () banked
 48066  00FE36  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48067                           
 48068                           ;usb_device_msd.c: 263: break;
 48069  00FE38  0012               	return	
 48070  00FE3A                     
 48071                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 48072                           
 48073                           ; BSR set to: 0
 48074  00FE3A  010D               	movlb	13	; () banked
 48075  00FE3C  5132               	movf	50,w,b	;volatile
 48076  00FE3E  1133               	iorwf	51,w,b	;volatile
 48077  00FE40  A4D8               	btfss	status,2,c
 48078  00FE42  0012               	return	
 48079                           
 48080                           ; BSR set to: 13
 48081  00FE44  0536               	decf	54,w,b	;volatile
 48082  00FE46  1137               	iorwf	55,w,b	;volatile
 48083  00FE48  A4D8               	btfss	status,2,c
 48084  00FE4A  0012               	return	
 48085                           
 48086                           ; BSR set to: 13
 48087                           ;usb_device_msd.c: 271: }
 48088                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 48089                           
 48090                           ; BSR set to: 13
 48091                           
 48092                           ; BSR set to: 13
 48093                           ;usb_device_msd.c: 269: {
 48094                           ;usb_device_msd.c: 270: break;
 48095  00FE4C  0E00               	movlw	0
 48096  00FE4E  6F38               	movwf	56,b	;volatile
 48097                           
 48098                           ; BSR set to: 13
 48099                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 48100  00FE50  0E38               	movlw	56
 48101  00FE52  0100               	movlb	0	; () banked
 48102  00FE54  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 48103  00FE56  0E0D               	movlw	13
 48104  00FE58  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 48105                           
 48106                           ; BSR set to: 0
 48107  00FE5A  0E00               	movlw	0
 48108  00FE5C  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 48109  00FE5E  0E01               	movlw	1
 48110  00FE60  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 48111                           
 48112                           ; BSR set to: 0
 48113  00FE62  0EC1               	movlw	193
 48114  00FE64  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48115                           
 48116                           ; BSR set to: 0
 48117                           ;usb_device_msd.c: 278: }
 48118                           
 48119                           ;usb_device_msd.c: 277: break;
 48120  00FE66  0012               	return	
 48121  00FE68                     i2l549:
 48122                           
 48123                           ; BSR set to: 0
 48124  00FE68  010D               	movlb	13	; () banked
 48125  00FE6A  5131               	movf	49,w,b	;volatile
 48126                           
 48127                           ; Switch size 1, requested type "space"
 48128                           ; Number of cases is 2, Range of values is 254 to 255
 48129                           ; switch strategies available:
 48130                           ; Name         Instructions Cycles
 48131                           ; simple_byte            7     4 (average)
 48132                           ;	Chosen strategy is simple_byte
 48133  00FE6C  0AFE               	xorlw	254	; case 254
 48134  00FE6E  B4D8               	btfsc	status,2,c
 48135  00FE70  D7E4               	goto	i2l566
 48136  00FE72  0A01               	xorlw	1	; case 255
 48137  00FE74  A4D8               	btfss	status,2,c
 48138  00FE76  0012               	return	
 48139  00FE78  D7A9               	goto	i2l550
 48140  00FE7A                     __end_of_USBCheckMSDRequest:
 48141                           	opt stack 0
 48142                           tosu	equ	0xFFF
 48143                           tosh	equ	0xFFE
 48144                           tosl	equ	0xFFD
 48145                           pclatu	equ	0xFFB
 48146                           pclath	equ	0xFFA
 48147                           tblptru	equ	0xFF8
 48148                           tblptrh	equ	0xFF7
 48149                           tblptrl	equ	0xFF6
 48150                           tablat	equ	0xFF5
 48151                           prodh	equ	0xFF4
 48152                           prodl	equ	0xFF3
 48153                           intcon	equ	0xFF2
 48154                           intcon2	equ	0xFF1
 48155                           intcon3	equ	0xFF0
 48156                           indf0	equ	0xFEF
 48157                           postinc0	equ	0xFEE
 48158                           fsr0h	equ	0xFEA
 48159                           fsr0l	equ	0xFE9
 48160                           wreg	equ	0xFE8
 48161                           indf1	equ	0xFE7
 48162                           postinc1	equ	0xFE6
 48163                           postdec1	equ	0xFE5
 48164                           plusw1	equ	0xFE3
 48165                           fsr1h	equ	0xFE2
 48166                           fsr1l	equ	0xFE1
 48167                           indf2	equ	0xFDF
 48168                           postinc2	equ	0xFDE
 48169                           postdec2	equ	0xFDD
 48170                           plusw2	equ	0xFDB
 48171                           fsr2h	equ	0xFDA
 48172                           fsr2l	equ	0xFD9
 48173                           status	equ	0xFD8
 48174                           
 48175 ;; *************** function _USBCheckHIDRequest *****************
 48176 ;; Defined at:
 48177 ;;		line 153 in file "usb_device_hid.c"
 48178 ;; Parameters:    Size  Location     Type
 48179 ;;		None
 48180 ;; Auto vars:     Size  Location     Type
 48181 ;;		None
 48182 ;; Return value:  Size  Location     Type
 48183 ;;                  1    wreg      void 
 48184 ;; Registers used:
 48185 ;;		wreg, status,2, status,0
 48186 ;; Tracked objects:
 48187 ;;		On entry : 0/0
 48188 ;;		On exit  : 0/0
 48189 ;;		Unchanged: 0/0
 48190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48195 ;;Total ram usage:        0 bytes
 48196 ;; Hardware stack levels used:    1
 48197 ;; This function calls:
 48198 ;;		Nothing
 48199 ;; This function is called by:
 48200 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48201 ;; This function uses a non-reentrant model
 48202 ;;
 48203                           
 48204                           	psect	text235
 48205  00F65E                     __ptext235:
 48206                           	opt stack 0
 48207  00F65E                     _USBCheckHIDRequest:
 48208                           	opt stack 15
 48209                           
 48210                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 48211                           
 48212                           ;incstack = 0
 48213  00F65E  010D               	movlb	13	; () banked
 48214  00F660  5130               	movf	48,w,b	;volatile
 48215  00F662  0B1F               	andlw	31
 48216  00F664  06E8               	decf	wreg,f,c
 48217  00F666  A4D8               	btfss	status,2,c
 48218  00F668  0012               	return	
 48219                           
 48220                           ; BSR set to: 13
 48221                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 48222                           
 48223                           ; BSR set to: 13
 48224                           
 48225                           ; BSR set to: 13
 48226  00F66A  5134               	movf	52,w,b	;volatile
 48227  00F66C  A4D8               	btfss	status,2,c
 48228  00F66E  0012               	return	
 48229                           
 48230                           ; BSR set to: 13
 48231                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 48232                           
 48233                           ; BSR set to: 13
 48234                           
 48235                           ; BSR set to: 13
 48236  00F670  0E06               	movlw	6
 48237  00F672  1931               	xorwf	49,w,b	;volatile
 48238  00F674  B4D8               	btfsc	status,2,c
 48239  00F676  D01A               	goto	i2l427
 48240  00F678  D022               	goto	i2l430
 48241  00F67A                     
 48242                           ; BSR set to: 13
 48243                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 48244                           
 48245                           ; BSR set to: 13
 48246  00F67A  045E               	decf	_USBActiveConfiguration,w,c	;volatile
 48247  00F67C  A4D8               	btfss	status,2,c
 48248  00F67E  D01F               	goto	i2l430
 48249                           
 48250                           ; BSR set to: 13
 48251                           ;usb_device_hid.c: 169: {
 48252                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 48253  00F680  0E4D               	movlw	low (_configDescriptor1+18)
 48254  00F682  0100               	movlb	0	; () banked
 48255  00F684  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 48256  00F686  0E93               	movlw	high (_configDescriptor1+18)
 48257  00F688  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 48258                           
 48259                           ; BSR set to: 0
 48260  00F68A  0E00               	movlw	0
 48261  00F68C  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 48262  00F68E  0E09               	movlw	9
 48263  00F690  D00B               	goto	L65
 48264  00F692                     i2l11509:
 48265                           
 48266                           ; BSR set to: 0
 48267  00F692  0EC0               	movlw	192
 48268  00F694  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48269                           
 48270                           ; BSR set to: 0
 48271                           ;usb_device_hid.c: 174: }
 48272                           ;usb_device_hid.c: 175: break;
 48273  00F696  D013               	goto	i2l430
 48274  00F698                     
 48275                           ;usb_device_hid.c: 178: {
 48276                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 48277                           
 48278                           ; BSR set to: 0
 48279  00F698  0E01               	movlw	low _hid_rpt01
 48280  00F69A  0100               	movlb	0	; () banked
 48281  00F69C  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 48282  00F69E  0E94               	movlw	high _hid_rpt01
 48283  00F6A0  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 48284                           
 48285                           ; BSR set to: 0
 48286  00F6A2  0E00               	movlw	0
 48287  00F6A4  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 48288  00F6A6  0E1D               	movlw	29
 48289  00F6A8                     L65:
 48290  00F6A8  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 48291  00F6AA  D7F3               	goto	i2l11509
 48292  00F6AC                     i2l427:
 48293                           
 48294                           ; BSR set to: 0
 48295  00F6AC  010D               	movlb	13	; () banked
 48296  00F6AE  5133               	movf	51,w,b	;volatile
 48297                           
 48298                           ; Switch size 1, requested type "space"
 48299                           ; Number of cases is 3, Range of values is 33 to 35
 48300                           ; switch strategies available:
 48301                           ; Name         Instructions Cycles
 48302                           ; simple_byte           10     6 (average)
 48303                           ;	Chosen strategy is simple_byte
 48304  00F6B0  0A21               	xorlw	33	; case 33
 48305  00F6B2  B4D8               	btfsc	status,2,c
 48306  00F6B4  D7E2               	goto	i2l428
 48307  00F6B6  0A03               	xorlw	3	; case 34
 48308  00F6B8  B4D8               	btfsc	status,2,c
 48309  00F6BA  D7EE               	goto	i2l431
 48310  00F6BC  0A01               	xorlw	1	; case 35
 48311  00F6BE                     i2l430:
 48312                           
 48313                           ;usb_device_hid.c: 199: }
 48314                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 48315                           
 48316                           ; BSR set to: 13
 48317                           
 48318                           ; BSR set to: 13
 48319  00F6BE  010D               	movlb	13	; () banked
 48320  00F6C0  3930               	swapf	48,w,b	;volatile
 48321  00F6C2  32E8               	rrcf	wreg,f,c
 48322  00F6C4  0B03               	andlw	3
 48323  00F6C6  06E8               	decf	wreg,f,c
 48324  00F6C8  A4D8               	btfss	status,2,c
 48325  00F6CA  0012               	return	
 48326  00F6CC  D024               	goto	i2l434
 48327  00F6CE                     
 48328                           ; BSR set to: 13
 48329                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 48330                           
 48331                           ; BSR set to: 13
 48332  00F6CE  0EFF               	movlw	low _idle_rate
 48333  00F6D0  0100               	movlb	0	; () banked
 48334  00F6D2  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 48335  00F6D4  0E01               	movlw	high _idle_rate
 48336  00F6D6  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 48337                           
 48338                           ; BSR set to: 0
 48339  00F6D8  0E00               	movlw	0
 48340  00F6DA  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 48341  00F6DC  0E01               	movlw	1
 48342  00F6DE  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 48343                           
 48344                           ; BSR set to: 0
 48345  00F6E0  0EC1               	movlw	193
 48346  00F6E2  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48347                           
 48348                           ;usb_device_hid.c: 223: break;
 48349  00F6E4  0012               	return	
 48350  00F6E6                     
 48351                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 48352                           
 48353                           ; BSR set to: 0
 48354  00F6E6  0E80               	movlw	128
 48355  00F6E8  0100               	movlb	0	; () banked
 48356  00F6EA  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48357                           
 48358                           ; BSR set to: 0
 48359                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 48360  00F6EC  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 48361                           
 48362                           ;usb_device_hid.c: 227: ;
 48363                           ;usb_device_hid.c: 228: break;
 48364  00F6F0  0012               	return	
 48365  00F6F2                     
 48366                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 48367                           
 48368                           ; BSR set to: 0
 48369  00F6F2  0EFE               	movlw	low _active_protocol
 48370  00F6F4  0100               	movlb	0	; () banked
 48371  00F6F6  6FF3               	movwf	_inPipes& (0+255),b	;volatile
 48372  00F6F8  0E01               	movlw	high _active_protocol
 48373  00F6FA  6FF4               	movwf	(_inPipes+1)& (0+255),b	;volatile
 48374                           
 48375                           ; BSR set to: 0
 48376  00F6FC  0E00               	movlw	0
 48377  00F6FE  6FF8               	movwf	(_inPipes+5)& (0+255),b	;volatile
 48378  00F700  0E01               	movlw	1
 48379  00F702  6FF7               	movwf	(_inPipes+4)& (0+255),b	;volatile
 48380                           
 48381                           ; BSR set to: 0
 48382  00F704  0E81               	movlw	129
 48383  00F706  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48384                           
 48385                           ;usb_device_hid.c: 234: break;
 48386  00F708  0012               	return	
 48387  00F70A                     
 48388                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 48389                           
 48390                           ; BSR set to: 0
 48391  00F70A  0E80               	movlw	128
 48392  00F70C  0100               	movlb	0	; () banked
 48393  00F70E  6FF6               	movwf	(_inPipes+3)& (0+255),b	;volatile
 48394                           
 48395                           ; BSR set to: 0
 48396                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 48397  00F710  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 48398                           
 48399                           ; BSR set to: 0
 48400                           ;usb_device_hid.c: 239: }
 48401                           
 48402                           ;usb_device_hid.c: 238: break;
 48403  00F714  0012               	return	
 48404  00F716                     i2l434:
 48405                           
 48406                           ; BSR set to: 0
 48407  00F716  010D               	movlb	13	; () banked
 48408  00F718  5131               	movf	49,w,b	;volatile
 48409                           
 48410                           ; Switch size 1, requested type "space"
 48411                           ; Number of cases is 6, Range of values is 1 to 11
 48412                           ; switch strategies available:
 48413                           ; Name         Instructions Cycles
 48414                           ; simple_byte           19    10 (average)
 48415                           ;	Chosen strategy is simple_byte
 48416  00F71A  0A01               	xorlw	1	; case 1
 48417  00F71C  B4D8               	btfsc	status,2,c
 48418  00F71E  0012               	return	
 48419  00F720  0A03               	xorlw	3	; case 2
 48420  00F722  B4D8               	btfsc	status,2,c
 48421  00F724  D7D4               	goto	i2l438
 48422  00F726  0A01               	xorlw	1	; case 3
 48423  00F728  B4D8               	btfsc	status,2,c
 48424  00F72A  D7E3               	goto	i2l440
 48425  00F72C  0A0A               	xorlw	10	; case 9
 48426  00F72E  B4D8               	btfsc	status,2,c
 48427  00F730  0012               	return	
 48428  00F732  0A03               	xorlw	3	; case 10
 48429  00F734  B4D8               	btfsc	status,2,c
 48430  00F736  D7D7               	goto	i2l439
 48431  00F738  0A01               	xorlw	1	; case 11
 48432  00F73A  A4D8               	btfss	status,2,c
 48433  00F73C  0012               	return	
 48434  00F73E  D7E5               	goto	i2l441
 48435  00F740                     __end_of_USBCheckHIDRequest:
 48436                           	opt stack 0
 48437                           tosu	equ	0xFFF
 48438                           tosh	equ	0xFFE
 48439                           tosl	equ	0xFFD
 48440                           pclatu	equ	0xFFB
 48441                           pclath	equ	0xFFA
 48442                           tblptru	equ	0xFF8
 48443                           tblptrh	equ	0xFF7
 48444                           tblptrl	equ	0xFF6
 48445                           tablat	equ	0xFF5
 48446                           prodh	equ	0xFF4
 48447                           prodl	equ	0xFF3
 48448                           intcon	equ	0xFF2
 48449                           intcon2	equ	0xFF1
 48450                           intcon3	equ	0xFF0
 48451                           indf0	equ	0xFEF
 48452                           postinc0	equ	0xFEE
 48453                           fsr0h	equ	0xFEA
 48454                           fsr0l	equ	0xFE9
 48455                           wreg	equ	0xFE8
 48456                           indf1	equ	0xFE7
 48457                           postinc1	equ	0xFE6
 48458                           postdec1	equ	0xFE5
 48459                           plusw1	equ	0xFE3
 48460                           fsr1h	equ	0xFE2
 48461                           fsr1l	equ	0xFE1
 48462                           indf2	equ	0xFDF
 48463                           postinc2	equ	0xFDE
 48464                           postdec2	equ	0xFDD
 48465                           plusw2	equ	0xFDB
 48466                           fsr2h	equ	0xFDA
 48467                           fsr2l	equ	0xFD9
 48468                           status	equ	0xFD8
 48469                           
 48470 ;; *************** function _MSDTransferTerminated *****************
 48471 ;; Defined at:
 48472 ;;		line 1674 in file "usb_device_msd.c"
 48473 ;; Parameters:    Size  Location     Type
 48474 ;;  handle          2   11[COMRAM] PTR void 
 48475 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 48476 ;;		 -> BDT(48), 
 48477 ;; Auto vars:     Size  Location     Type
 48478 ;;		None
 48479 ;; Return value:  Size  Location     Type
 48480 ;;                  1    wreg      void 
 48481 ;; Registers used:
 48482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48483 ;; Tracked objects:
 48484 ;;		On entry : 0/0
 48485 ;;		On exit  : 0/0
 48486 ;;		Unchanged: 0/0
 48487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48492 ;;Total ram usage:        4 bytes
 48493 ;; Hardware stack levels used:    1
 48494 ;; Hardware stack levels required when called:    1
 48495 ;; This function calls:
 48496 ;;		i2_USBStallEndpoint
 48497 ;;		i2_USBTransferOnePacket
 48498 ;; This function is called by:
 48499 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48500 ;; This function uses a non-reentrant model
 48501 ;;
 48502                           
 48503                           	psect	text236
 48504  011C14                     __ptext236:
 48505                           	opt stack 0
 48506  011C14                     _MSDTransferTerminated:
 48507                           	opt stack 14
 48508                           
 48509                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 48510                           
 48511                           ;incstack = 0
 48512  011C14  0101               	movlb	1	; () banked
 48513  011C16  51F1               	movf	_MSDCBWValid& (0+255),w,b
 48514  011C18  A4D8               	btfss	status,2,c
 48515  011C1A  D00B               	goto	i2l784
 48516                           
 48517                           ; BSR set to: 1
 48518                           ;usb_device_msd.c: 1677: {
 48519                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 48520  011C1C  0E01               	movlw	1
 48521  011C1E  6E01               	movwf	i2USBStallEndpoint@dir,c
 48522  011C20  0E02               	movlw	2
 48523  011C22  ECFC  F073         	call	i2_USBStallEndpoint
 48524                           
 48525                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 48526  011C26  0E00               	movlw	0
 48527  011C28  6E01               	movwf	i2USBStallEndpoint@dir,c
 48528  011C2A  0E02               	movlw	2
 48529  011C2C  ECFC  F073         	call	i2_USBStallEndpoint
 48530                           
 48531                           ;usb_device_msd.c: 1681: }
 48532  011C30  0012               	return	
 48533  011C32                     i2l784:
 48534  011C32  C1D7  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2729
 48535  011C36  C1D8  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2729+1
 48536  011C3A  500E               	movf	_MSDTransferTerminated$2729,w,c
 48537  011C3C  180C               	xorwf	MSDTransferTerminated@handle,w,c
 48538  011C3E  E114               	bnz	i2l787
 48539  011C40  500F               	movf	_MSDTransferTerminated$2729+1,w,c
 48540  011C42  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 48541  011C44  A4D8               	btfss	status,2,c
 48542  011C46  0012               	return	
 48543                           
 48544                           ;usb_device_msd.c: 1687: {
 48545                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 48546  011C48  0E00               	movlw	0
 48547  011C4A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 48548  011C4C  0E40               	movlw	64
 48549  011C4E  6E02               	movwf	i2USBTransferOnePacket@data,c
 48550  011C50  0E0D               	movlw	13
 48551  011C52  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 48552  011C54  0E40               	movlw	64
 48553  011C56  6E04               	movwf	i2USBTransferOnePacket@len,c
 48554  011C58  0E02               	movlw	2
 48555  011C5A  EC06  F076         	call	i2_USBTransferOnePacket
 48556  011C5E  C001  F047         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 48557  011C62  C002  F048         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 48558  011C66  0012               	return	
 48559  011C68                     i2l787:
 48560  011C68  0012               	return		;funcret
 48561  011C6A                     __end_of_MSDTransferTerminated:
 48562                           	opt stack 0
 48563                           tosu	equ	0xFFF
 48564                           tosh	equ	0xFFE
 48565                           tosl	equ	0xFFD
 48566                           pclatu	equ	0xFFB
 48567                           pclath	equ	0xFFA
 48568                           tblptru	equ	0xFF8
 48569                           tblptrh	equ	0xFF7
 48570                           tblptrl	equ	0xFF6
 48571                           tablat	equ	0xFF5
 48572                           prodh	equ	0xFF4
 48573                           prodl	equ	0xFF3
 48574                           intcon	equ	0xFF2
 48575                           intcon2	equ	0xFF1
 48576                           intcon3	equ	0xFF0
 48577                           indf0	equ	0xFEF
 48578                           postinc0	equ	0xFEE
 48579                           fsr0h	equ	0xFEA
 48580                           fsr0l	equ	0xFE9
 48581                           wreg	equ	0xFE8
 48582                           indf1	equ	0xFE7
 48583                           postinc1	equ	0xFE6
 48584                           postdec1	equ	0xFE5
 48585                           plusw1	equ	0xFE3
 48586                           fsr1h	equ	0xFE2
 48587                           fsr1l	equ	0xFE1
 48588                           indf2	equ	0xFDF
 48589                           postinc2	equ	0xFDE
 48590                           postdec2	equ	0xFDD
 48591                           plusw2	equ	0xFDB
 48592                           fsr2h	equ	0xFDA
 48593                           fsr2l	equ	0xFD9
 48594                           status	equ	0xFD8
 48595                           
 48596 ;; *************** function i2_USBStallEndpoint *****************
 48597 ;; Defined at:
 48598 ;;		line 1073 in file "usb_device.c"
 48599 ;; Parameters:    Size  Location     Type
 48600 ;;  ep              1    wreg     unsigned char 
 48601 ;;  dir             1    0[COMRAM] unsigned char 
 48602 ;; Auto vars:     Size  Location     Type
 48603 ;;  ep              1    5[COMRAM] unsigned char 
 48604 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 48605 ;;		 -> BDT(48), 
 48606 ;; Return value:  Size  Location     Type
 48607 ;;                  1    wreg      void 
 48608 ;; Registers used:
 48609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48610 ;; Tracked objects:
 48611 ;;		On entry : 0/0
 48612 ;;		On exit  : 0/0
 48613 ;;		Unchanged: 0/0
 48614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48615 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48616 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48618 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48619 ;;Total ram usage:        8 bytes
 48620 ;; Hardware stack levels used:    1
 48621 ;; This function calls:
 48622 ;;		Nothing
 48623 ;; This function is called by:
 48624 ;;		_MSDTransferTerminated
 48625 ;; This function uses a non-reentrant model
 48626 ;;
 48627                           
 48628                           	psect	text237
 48629  00E7F8                     __ptext237:
 48630                           	opt stack 0
 48631  00E7F8                     i2_USBStallEndpoint:
 48632                           	opt stack 14
 48633                           
 48634                           ;incstack = 0
 48635                           ;i2USBStallEndpoint@ep stored from wreg
 48636  00E7F8  6E06               	movwf	i2USBStallEndpoint@ep,c
 48637                           
 48638                           ;usb_device.c: 1075: BDT_ENTRY *p;
 48639                           ;usb_device.c: 1077: if(ep == 0)
 48640  00E7FA  5006               	movf	i2USBStallEndpoint@ep,w,c
 48641  00E7FC  A4D8               	btfss	status,2,c
 48642  00E7FE  D02C               	goto	i2l194
 48643                           
 48644                           ;usb_device.c: 1078: {
 48645                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 48646  00E800  0100               	movlb	0	; () banked
 48647  00E802  EE20 F001          	lfsr	2,1
 48648  00E806  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 48649  00E808  26D9               	addwf	fsr2l,f,c
 48650  00E80A  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 48651  00E80C  22DA               	addwfc	fsr2h,f,c
 48652  00E80E  0E08               	movlw	8
 48653  00E810  6EDF               	movwf	indf2,c
 48654                           
 48655                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 48656  00E812  EE20 F002          	lfsr	2,2
 48657  00E816  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 48658  00E818  26D9               	addwf	fsr2l,f,c
 48659  00E81A  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 48660  00E81C  22DA               	addwfc	fsr2h,f,c
 48661  00E81E  0E30               	movlw	48
 48662  00E820  6EDE               	movwf	postinc2,c
 48663  00E822  0E0D               	movlw	13
 48664  00E824  6EDD               	movwf	postdec2,c
 48665                           
 48666                           ; BSR set to: 0
 48667                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 48668  00E826  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48669  00E82A  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48670  00E82E  0E0C               	movlw	12
 48671  00E830  6EDF               	movwf	indf2,c
 48672                           
 48673                           ; BSR set to: 0
 48674                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 48675  00E832  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48676  00E836  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48677  00E83A  0E00               	movlw	0
 48678  00E83C  8EDB               	bsf	plusw2,7,c
 48679                           
 48680                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 48681  00E83E  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48682  00E842  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48683  00E846  0E04               	movlw	4
 48684  00E848  6EDF               	movwf	indf2,c
 48685                           
 48686                           ; BSR set to: 0
 48687                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 48688  00E84A  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48689  00E84E  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48690  00E852  0E00               	movlw	0
 48691  00E854  8EDB               	bsf	plusw2,7,c
 48692                           
 48693                           ;usb_device.c: 1089: }
 48694  00E856  0012               	return	
 48695  00E858                     i2l194:
 48696                           
 48697                           ;usb_device.c: 1090: else
 48698                           ;usb_device.c: 1091: {
 48699                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 48700                           
 48701                           ; BSR set to: 0
 48702  00E858  5001               	movf	i2USBStallEndpoint@dir,w,c
 48703  00E85A  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 48704  00E85C  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 48705  00E85E  90D8               	bcf	status,0,c
 48706  00E860  3602               	rlcf	??i2_USBStallEndpoint,f,c
 48707  00E862  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 48708  00E864  5006               	movf	i2USBStallEndpoint@ep,w,c
 48709  00E866  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 48710  00E868  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 48711  00E86A  90D8               	bcf	status,0,c
 48712  00E86C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48713  00E86E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48714  00E870  90D8               	bcf	status,0,c
 48715  00E872  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48716  00E874  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48717  00E876  5002               	movf	??i2_USBStallEndpoint,w,c
 48718  00E878  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 48719  00E87A  5003               	movf	??i2_USBStallEndpoint+1,w,c
 48720  00E87C  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 48721  00E87E  90D8               	bcf	status,0,c
 48722  00E880  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48723  00E882  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48724  00E884  90D8               	bcf	status,0,c
 48725  00E886  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 48726  00E888  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 48727  00E88A  0E00               	movlw	0
 48728  00E88C  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 48729  00E88E  6E07               	movwf	i2USBStallEndpoint@p,c
 48730  00E890  0E0D               	movlw	13
 48731  00E892  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 48732  00E894  6E08               	movwf	i2USBStallEndpoint@p+1,c
 48733                           
 48734                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 48735  00E896  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48736  00E89A  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48737  00E89E  0E00               	movlw	0
 48738  00E8A0  84DB               	bsf	plusw2,2,c
 48739                           
 48740                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 48741  00E8A2  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48742  00E8A6  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48743  00E8AA  0E00               	movlw	0
 48744  00E8AC  8EDB               	bsf	plusw2,7,c
 48745                           
 48746                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 48747  00E8AE  5006               	movf	i2USBStallEndpoint@ep,w,c
 48748  00E8B0  0D04               	mullw	4
 48749  00E8B2  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 48750  00E8B6  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 48751  00E8BA  5001               	movf	i2USBStallEndpoint@dir,w,c
 48752  00E8BC  0D02               	mullw	2
 48753  00E8BE  50F3               	movf	prodl,w,c
 48754  00E8C0  2602               	addwf	??i2_USBStallEndpoint,f,c
 48755  00E8C2  50F4               	movf	prodh,w,c
 48756  00E8C4  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 48757  00E8C6  90D8               	bcf	status,0,c
 48758  00E8C8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 48759  00E8CA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 48760  00E8CC  90D8               	bcf	status,0,c
 48761  00E8CE  3602               	rlcf	??i2_USBStallEndpoint,f,c
 48762  00E8D0  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 48763  00E8D2  0E04               	movlw	4
 48764  00E8D4  2602               	addwf	??i2_USBStallEndpoint,f,c
 48765  00E8D6  0E00               	movlw	0
 48766  00E8D8  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 48767  00E8DA  0E00               	movlw	0
 48768  00E8DC  2402               	addwf	??i2_USBStallEndpoint,w,c
 48769  00E8DE  6E07               	movwf	i2USBStallEndpoint@p,c
 48770  00E8E0  0E0D               	movlw	13
 48771  00E8E2  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 48772  00E8E4  6E08               	movwf	i2USBStallEndpoint@p+1,c
 48773                           
 48774                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 48775  00E8E6  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48776  00E8EA  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48777  00E8EE  0E00               	movlw	0
 48778  00E8F0  84DB               	bsf	plusw2,2,c
 48779                           
 48780                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 48781  00E8F2  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 48782  00E8F6  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 48783  00E8FA  0E00               	movlw	0
 48784  00E8FC  8EDB               	bsf	plusw2,7,c
 48785  00E8FE  0012               	return	
 48786  00E900                     __end_ofi2_USBStallEndpoint:
 48787                           	opt stack 0
 48788                           tosu	equ	0xFFF
 48789                           tosh	equ	0xFFE
 48790                           tosl	equ	0xFFD
 48791                           pclatu	equ	0xFFB
 48792                           pclath	equ	0xFFA
 48793                           tblptru	equ	0xFF8
 48794                           tblptrh	equ	0xFF7
 48795                           tblptrl	equ	0xFF6
 48796                           tablat	equ	0xFF5
 48797                           prodh	equ	0xFF4
 48798                           prodl	equ	0xFF3
 48799                           intcon	equ	0xFF2
 48800                           intcon2	equ	0xFF1
 48801                           intcon3	equ	0xFF0
 48802                           indf0	equ	0xFEF
 48803                           postinc0	equ	0xFEE
 48804                           fsr0h	equ	0xFEA
 48805                           fsr0l	equ	0xFE9
 48806                           wreg	equ	0xFE8
 48807                           indf1	equ	0xFE7
 48808                           postinc1	equ	0xFE6
 48809                           postdec1	equ	0xFE5
 48810                           plusw1	equ	0xFE3
 48811                           fsr1h	equ	0xFE2
 48812                           fsr1l	equ	0xFE1
 48813                           indf2	equ	0xFDF
 48814                           postinc2	equ	0xFDE
 48815                           postdec2	equ	0xFDD
 48816                           plusw2	equ	0xFDB
 48817                           fsr2h	equ	0xFDA
 48818                           fsr2l	equ	0xFD9
 48819                           status	equ	0xFD8
 48820                           
 48821 ;; *************** function _APP_DeviceMSDInitialize *****************
 48822 ;; Defined at:
 48823 ;;		line 84 in file "app_device_msd.c"
 48824 ;; Parameters:    Size  Location     Type
 48825 ;;		None
 48826 ;; Auto vars:     Size  Location     Type
 48827 ;;		None
 48828 ;; Return value:  Size  Location     Type
 48829 ;;                  1    wreg      void 
 48830 ;; Registers used:
 48831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48832 ;; Tracked objects:
 48833 ;;		On entry : 0/0
 48834 ;;		On exit  : 0/0
 48835 ;;		Unchanged: 0/0
 48836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48841 ;;Total ram usage:        0 bytes
 48842 ;; Hardware stack levels used:    1
 48843 ;; Hardware stack levels required when called:    2
 48844 ;; This function calls:
 48845 ;;		_USBEnableEndpoint
 48846 ;;		_USBMSDInit
 48847 ;; This function is called by:
 48848 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48849 ;; This function uses a non-reentrant model
 48850 ;;
 48851                           
 48852                           	psect	text238
 48853  012E66                     __ptext238:
 48854                           	opt stack 0
 48855  012E66                     _APP_DeviceMSDInitialize:
 48856                           	opt stack 13
 48857                           
 48858                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 48859                           
 48860                           ;incstack = 0
 48861  012E66  0E1E               	movlw	30
 48862  012E68  6E09               	movwf	USBEnableEndpoint@options,c
 48863  012E6A  0E02               	movlw	2
 48864  012E6C  ECF8  F091         	call	_USBEnableEndpoint
 48865                           
 48866                           ;app_device_msd.c: 93: USBMSDInit();
 48867  012E70  ECF0  F072         	call	_USBMSDInit	;wreg free
 48868  012E74  0012               	return		;funcret
 48869  012E76                     __end_of_APP_DeviceMSDInitialize:
 48870                           	opt stack 0
 48871                           tosu	equ	0xFFF
 48872                           tosh	equ	0xFFE
 48873                           tosl	equ	0xFFD
 48874                           pclatu	equ	0xFFB
 48875                           pclath	equ	0xFFA
 48876                           tblptru	equ	0xFF8
 48877                           tblptrh	equ	0xFF7
 48878                           tblptrl	equ	0xFF6
 48879                           tablat	equ	0xFF5
 48880                           prodh	equ	0xFF4
 48881                           prodl	equ	0xFF3
 48882                           intcon	equ	0xFF2
 48883                           intcon2	equ	0xFF1
 48884                           intcon3	equ	0xFF0
 48885                           indf0	equ	0xFEF
 48886                           postinc0	equ	0xFEE
 48887                           fsr0h	equ	0xFEA
 48888                           fsr0l	equ	0xFE9
 48889                           wreg	equ	0xFE8
 48890                           indf1	equ	0xFE7
 48891                           postinc1	equ	0xFE6
 48892                           postdec1	equ	0xFE5
 48893                           plusw1	equ	0xFE3
 48894                           fsr1h	equ	0xFE2
 48895                           fsr1l	equ	0xFE1
 48896                           indf2	equ	0xFDF
 48897                           postinc2	equ	0xFDE
 48898                           postdec2	equ	0xFDD
 48899                           plusw2	equ	0xFDB
 48900                           fsr2h	equ	0xFDA
 48901                           fsr2l	equ	0xFD9
 48902                           status	equ	0xFD8
 48903                           
 48904 ;; *************** function _USBMSDInit *****************
 48905 ;; Defined at:
 48906 ;;		line 142 in file "usb_device_msd.c"
 48907 ;; Parameters:    Size  Location     Type
 48908 ;;		None
 48909 ;; Auto vars:     Size  Location     Type
 48910 ;;		None
 48911 ;; Return value:  Size  Location     Type
 48912 ;;                  1    wreg      void 
 48913 ;; Registers used:
 48914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48915 ;; Tracked objects:
 48916 ;;		On entry : 0/0
 48917 ;;		On exit  : 0/0
 48918 ;;		Unchanged: 0/0
 48919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48922 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48924 ;;Total ram usage:        3 bytes
 48925 ;; Hardware stack levels used:    1
 48926 ;; Hardware stack levels required when called:    1
 48927 ;; This function calls:
 48928 ;;		i2_ExternalFlash_MediaDetect
 48929 ;;		i2_ExternalFlash_MediaInitialize
 48930 ;;		i2_ResetSenseData
 48931 ;;		i2_USBTransferOnePacket
 48932 ;; This function is called by:
 48933 ;;		_APP_DeviceMSDInitialize
 48934 ;; This function uses a non-reentrant model
 48935 ;;
 48936                           
 48937                           	psect	text239
 48938  00E5E0                     __ptext239:
 48939                           	opt stack 0
 48940  00E5E0                     _USBMSDInit:
 48941                           	opt stack 13
 48942                           
 48943                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 48944                           
 48945                           ;incstack = 0
 48946  00E5E0  0E00               	movlw	0
 48947  00E5E2  6E01               	movwf	i2USBTransferOnePacket@dir,c
 48948  00E5E4  0E40               	movlw	64
 48949  00E5E6  6E02               	movwf	i2USBTransferOnePacket@data,c
 48950  00E5E8  0E0D               	movlw	13
 48951  00E5EA  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 48952  00E5EC  0E40               	movlw	64
 48953  00E5EE  6E04               	movwf	i2USBTransferOnePacket@len,c
 48954  00E5F0  0E02               	movlw	2
 48955  00E5F2  EC06  F076         	call	i2_USBTransferOnePacket
 48956  00E5F6  C001  F047         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 48957  00E5FA  C002  F048         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 48958  00E5FE  C03F  F045         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 48959  00E602  C040  F046         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 48960                           
 48961                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 48962  00E606  0E00               	movlw	0
 48963  00E608  6E54               	movwf	_MSD_State,c
 48964                           
 48965                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 48966  00E60A  6853               	setf	_MSDCommandState,c
 48967                           
 48968                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 48969  00E60C  0E00               	movlw	0
 48970  00E60E  0101               	movlb	1	; () banked
 48971  00E610  6FF5               	movwf	_MSDReadState& (0+255),b
 48972                           
 48973                           ; BSR set to: 1
 48974                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 48975  00E612  0E00               	movlw	0
 48976  00E614  6E52               	movwf	_MSDWriteState,c
 48977                           
 48978                           ; BSR set to: 1
 48979                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 48980  00E616  0E00               	movlw	0
 48981  00E618  6E51               	movwf	_MSDHostNoData,c
 48982                           
 48983                           ; BSR set to: 1
 48984                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 48985  00E61A  0E00               	movlw	0
 48986  00E61C  0102               	movlb	2	; () banked
 48987  00E61E  6FAA               	movwf	_gblNumBLKS& (0+255),b
 48988  00E620  0E00               	movlw	0
 48989  00E622  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 48990  00E624  0E00               	movlw	0
 48991  00E626  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 48992  00E628  0E00               	movlw	0
 48993  00E62A  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 48994                           
 48995                           ; BSR set to: 2
 48996                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 48997  00E62C  0E00               	movlw	0
 48998  00E62E  6FA6               	movwf	_gblBLKLen& (0+255),b
 48999  00E630  0E00               	movlw	0
 49000  00E632  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 49001  00E634  0E00               	movlw	0
 49002  00E636  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 49003  00E638  0E00               	movlw	0
 49004  00E63A  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 49005                           
 49006                           ; BSR set to: 2
 49007                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 49008  00E63C  0E01               	movlw	1
 49009  00E63E  0101               	movlb	1	; () banked
 49010  00E640  6FF1               	movwf	_MSDCBWValid& (0+255),b
 49011                           
 49012                           ; BSR set to: 1
 49013                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 49014  00E642  0E00               	movlw	0
 49015  00E644  0102               	movlb	2	; () banked
 49016  00E646  6FB7               	movwf	(_gblMediaPresent+1)& (0+255),b
 49017  00E648  0E00               	movlw	0
 49018  00E64A  6FB6               	movwf	_gblMediaPresent& (0+255),b
 49019                           
 49020                           ; BSR set to: 2
 49021                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 49022  00E64C  0E00               	movlw	0
 49023  00E64E  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 49024  00E650  D04A               	goto	i2l538
 49025  00E652                     
 49026                           ; BSR set to: 2
 49027                           ;usb_device_msd.c: 161: {
 49028                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 49029                           
 49030                           ; BSR set to: 2
 49031  00E652  514E               	movf	(_gblCBW+13)& (0+255),w,b
 49032  00E654  0D01               	mullw	1
 49033  00E656  0EF2               	movlw	low _SoftDetach
 49034  00E658  24F3               	addwf	prodl,w,c
 49035  00E65A  6ED9               	movwf	fsr2l,c
 49036  00E65C  0E01               	movlw	high _SoftDetach
 49037  00E65E  20F4               	addwfc	prodh,w,c
 49038  00E660  6EDA               	movwf	fsr2h,c
 49039  00E662  0E00               	movlw	0
 49040  00E664  6EDF               	movwf	indf2,c
 49041                           
 49042                           ; BSR set to: 2
 49043                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 49044  00E666  C2D4  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 49045  00E66A  C2D5  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 49046  00E66E  EE22  F0C8         	lfsr	2,_LUN+9
 49047  00E672  D801               	call	i2u845_48
 49048  00E674  D00A               	goto	i2u845_49
 49049  00E676                     i2u845_48:
 49050  00E676  0005               	push	
 49051  00E678  6EFA               	movwf	pclath,c
 49052  00E67A  50DE               	movf	postinc2,w,c
 49053  00E67C  6EFD               	movwf	tosl,c
 49054  00E67E  50DE               	movf	postinc2,w,c
 49055  00E680  6EFE               	movwf	tosh,c
 49056  00E682  50DE               	movf	postinc2,w,c
 49057  00E684  6EFF               	movwf	tosu,c
 49058  00E686  50FA               	movf	pclath,w,c
 49059  00E688  0012               	return		;indir
 49060  00E68A                     i2u845_49:
 49061  00E68A  0900               	iorlw	0
 49062  00E68C  B4D8               	btfsc	status,2,c
 49063  00E68E  D027               	goto	i2l541
 49064                           
 49065                           ;usb_device_msd.c: 167: {
 49066                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 49067  00E690  C2D4  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 49068  00E694  C2D5  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 49069  00E698  D801               	call	i2u847_48
 49070  00E69A  D00B               	goto	i2u847_49
 49071  00E69C                     i2u847_48:
 49072  00E69C  0005               	push	
 49073  00E69E  6EFA               	movwf	pclath,c
 49074  00E6A0  0102               	movlb	2	; () banked
 49075  00E6A2  51BF               	movf	_LUN& (0+255),w,b
 49076  00E6A4  6EFD               	movwf	tosl,c
 49077  00E6A6  51C0               	movf	(_LUN+1)& (0+255),w,b
 49078  00E6A8  6EFE               	movwf	tosh,c
 49079  00E6AA  51C1               	movf	(_LUN+2)& (0+255),w,b
 49080  00E6AC  6EFF               	movwf	tosu,c
 49081  00E6AE  50FA               	movf	pclath,w,c
 49082  00E6B0  0012               	return		;indir
 49083  00E6B2                     i2u847_49:
 49084  00E6B2  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 49085  00E6B4  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 49086  00E6B6  B4D8               	btfsc	status,2,c
 49087  00E6B8  D012               	goto	i2l541
 49088                           
 49089                           ;usb_device_msd.c: 170: {
 49090                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 49091  00E6BA  C24E  F00C         	movff	_gblCBW+13,??_USBMSDInit
 49092  00E6BE  0E01               	movlw	1
 49093  00E6C0  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 49094  00E6C2  0E00               	movlw	0
 49095  00E6C4  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 49096  00E6C6  2A0C               	incf	??_USBMSDInit,f,c
 49097  00E6C8  D003               	goto	i2u849_44
 49098  00E6CA                     i2u849_45:
 49099  00E6CA  90D8               	bcf	status,0,c
 49100  00E6CC  360D               	rlcf	??_USBMSDInit+1,f,c
 49101  00E6CE  360E               	rlcf	??_USBMSDInit+2,f,c
 49102  00E6D0                     i2u849_44:
 49103  00E6D0  2E0C               	decfsz	??_USBMSDInit,f,c
 49104  00E6D2  D7FB               	goto	i2u849_45
 49105  00E6D4  500D               	movf	??_USBMSDInit+1,w,c
 49106  00E6D6  0102               	movlb	2	; () banked
 49107  00E6D8  13B6               	iorwf	_gblMediaPresent& (0+255),f,b
 49108  00E6DA  500E               	movf	??_USBMSDInit+2,w,c
 49109  00E6DC  13B7               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 49110  00E6DE                     i2l541:
 49111                           
 49112                           ;usb_device_msd.c: 174: }
 49113                           ;usb_device_msd.c: 175: }
 49114                           ;usb_device_msd.c: 176: ResetSenseData();
 49115                           
 49116                           ; BSR set to: 2
 49117                           
 49118                           ; BSR set to: 2
 49119  00E6DE  EC59  F08B         	call	i2_ResetSenseData	;wreg free
 49120  00E6E2  0102               	movlb	2	; () banked
 49121  00E6E4  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 49122  00E6E6                     i2l538:
 49123                           
 49124                           ; BSR set to: 2
 49125                           
 49126                           ; BSR set to: 2
 49127  00E6E6  514E               	movf	(_gblCBW+13)& (0+255),w,b
 49128  00E6E8  A4D8               	btfss	status,2,c
 49129  00E6EA  0012               	return	
 49130  00E6EC  D7B2               	goto	i2l539
 49131  00E6EE                     __end_of_USBMSDInit:
 49132                           	opt stack 0
 49133                           tosu	equ	0xFFF
 49134                           tosh	equ	0xFFE
 49135                           tosl	equ	0xFFD
 49136                           pclatu	equ	0xFFB
 49137                           pclath	equ	0xFFA
 49138                           tblptru	equ	0xFF8
 49139                           tblptrh	equ	0xFF7
 49140                           tblptrl	equ	0xFF6
 49141                           tablat	equ	0xFF5
 49142                           prodh	equ	0xFF4
 49143                           prodl	equ	0xFF3
 49144                           intcon	equ	0xFF2
 49145                           intcon2	equ	0xFF1
 49146                           intcon3	equ	0xFF0
 49147                           indf0	equ	0xFEF
 49148                           postinc0	equ	0xFEE
 49149                           fsr0h	equ	0xFEA
 49150                           fsr0l	equ	0xFE9
 49151                           wreg	equ	0xFE8
 49152                           indf1	equ	0xFE7
 49153                           postinc1	equ	0xFE6
 49154                           postdec1	equ	0xFE5
 49155                           plusw1	equ	0xFE3
 49156                           fsr1h	equ	0xFE2
 49157                           fsr1l	equ	0xFE1
 49158                           indf2	equ	0xFDF
 49159                           postinc2	equ	0xFDE
 49160                           postdec2	equ	0xFDD
 49161                           plusw2	equ	0xFDB
 49162                           fsr2h	equ	0xFDA
 49163                           fsr2l	equ	0xFD9
 49164                           status	equ	0xFD8
 49165                           
 49166 ;; *************** function i2_ResetSenseData *****************
 49167 ;; Defined at:
 49168 ;;		line 1373 in file "usb_device_msd.c"
 49169 ;; Parameters:    Size  Location     Type
 49170 ;;		None
 49171 ;; Auto vars:     Size  Location     Type
 49172 ;;		None
 49173 ;; Return value:  Size  Location     Type
 49174 ;;                  1    wreg      void 
 49175 ;; Registers used:
 49176 ;;		wreg, status,2
 49177 ;; Tracked objects:
 49178 ;;		On entry : 0/0
 49179 ;;		On exit  : 0/0
 49180 ;;		Unchanged: 0/0
 49181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49186 ;;Total ram usage:        0 bytes
 49187 ;; Hardware stack levels used:    1
 49188 ;; This function calls:
 49189 ;;		Nothing
 49190 ;; This function is called by:
 49191 ;;		_USBMSDInit
 49192 ;; This function uses a non-reentrant model
 49193 ;;
 49194                           
 49195                           	psect	text240
 49196  0116B2                     __ptext240:
 49197                           	opt stack 0
 49198  0116B2                     i2_ResetSenseData:
 49199                           	opt stack 13
 49200                           
 49201                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 49202                           
 49203                           ; BSR set to: 2
 49204                           ;incstack = 0
 49205  0116B2  0102               	movlb	2	; () banked
 49206  0116B4  9160               	bcf	_gblSenseData& (0+255),0,b
 49207  0116B6  9360               	bcf	_gblSenseData& (0+255),1,b
 49208  0116B8  9560               	bcf	_gblSenseData& (0+255),2,b
 49209  0116BA  9760               	bcf	_gblSenseData& (0+255),3,b
 49210  0116BC  8960               	bsf	_gblSenseData& (0+255),4,b
 49211  0116BE  8B60               	bsf	_gblSenseData& (0+255),5,b
 49212  0116C0  8D60               	bsf	_gblSenseData& (0+255),6,b
 49213                           
 49214                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 49215  0116C2  9F60               	bcf	_gblSenseData& (0+255),7,b
 49216                           
 49217                           ; BSR set to: 2
 49218                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 49219  0116C4  0E00               	movlw	0
 49220  0116C6  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 49221                           
 49222                           ; BSR set to: 2
 49223                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 49224  0116C8  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 49225  0116CA  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 49226  0116CC  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 49227  0116CE  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 49228                           
 49229                           ; BSR set to: 2
 49230                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 49231  0116D0  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 49232                           
 49233                           ; BSR set to: 2
 49234                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 49235  0116D2  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 49236                           
 49237                           ; BSR set to: 2
 49238                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 49239  0116D4  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 49240                           
 49241                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 49242  0116D6  0E00               	movlw	0
 49243  0116D8  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 49244                           
 49245                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 49246  0116DA  0E00               	movlw	0
 49247  0116DC  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 49248                           
 49249                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 49250  0116DE  0E00               	movlw	0
 49251  0116E0  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 49252                           
 49253                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 49254  0116E2  0E00               	movlw	0
 49255  0116E4  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 49256                           
 49257                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 49258  0116E6  0E0A               	movlw	10
 49259  0116E8  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 49260                           
 49261                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 49262  0116EA  0E00               	movlw	0
 49263  0116EC  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 49264  0116EE  0E00               	movlw	0
 49265  0116F0  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 49266  0116F2  0E00               	movlw	0
 49267  0116F4  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 49268  0116F6  0E00               	movlw	0
 49269  0116F8  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 49270                           
 49271                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 49272  0116FA  0E00               	movlw	0
 49273  0116FC  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 49274                           
 49275                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 49276  0116FE  0E00               	movlw	0
 49277  011700  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 49278                           
 49279                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 49280  011702  0E00               	movlw	0
 49281  011704  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 49282                           
 49283                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 49284  011706  0E00               	movlw	0
 49285  011708  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 49286                           
 49287                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 49288  01170A  0E00               	movlw	0
 49289  01170C  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 49290                           
 49291                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 49292  01170E  0E00               	movlw	0
 49293  011710  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 49294                           
 49295                           ; BSR set to: 2
 49296  011712  0012               	return		;funcret
 49297  011714                     __end_ofi2_ResetSenseData:
 49298                           	opt stack 0
 49299                           tosu	equ	0xFFF
 49300                           tosh	equ	0xFFE
 49301                           tosl	equ	0xFFD
 49302                           pclatu	equ	0xFFB
 49303                           pclath	equ	0xFFA
 49304                           tblptru	equ	0xFF8
 49305                           tblptrh	equ	0xFF7
 49306                           tblptrl	equ	0xFF6
 49307                           tablat	equ	0xFF5
 49308                           prodh	equ	0xFF4
 49309                           prodl	equ	0xFF3
 49310                           intcon	equ	0xFF2
 49311                           intcon2	equ	0xFF1
 49312                           intcon3	equ	0xFF0
 49313                           indf0	equ	0xFEF
 49314                           postinc0	equ	0xFEE
 49315                           fsr0h	equ	0xFEA
 49316                           fsr0l	equ	0xFE9
 49317                           wreg	equ	0xFE8
 49318                           indf1	equ	0xFE7
 49319                           postinc1	equ	0xFE6
 49320                           postdec1	equ	0xFE5
 49321                           plusw1	equ	0xFE3
 49322                           fsr1h	equ	0xFE2
 49323                           fsr1l	equ	0xFE1
 49324                           indf2	equ	0xFDF
 49325                           postinc2	equ	0xFDE
 49326                           postdec2	equ	0xFDD
 49327                           plusw2	equ	0xFDB
 49328                           fsr2h	equ	0xFDA
 49329                           fsr2l	equ	0xFD9
 49330                           status	equ	0xFD8
 49331                           
 49332 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 49333 ;; Defined at:
 49334 ;;		line 10 in file "external_flash.c"
 49335 ;; Parameters:    Size  Location     Type
 49336 ;;  config          2    0[COMRAM] PTR void 
 49337 ;;		 -> NULL(0), 
 49338 ;; Auto vars:     Size  Location     Type
 49339 ;;		None
 49340 ;; Return value:  Size  Location     Type
 49341 ;;                  2    0[COMRAM] PTR struct .
 49342 ;; Registers used:
 49343 ;;		wreg, status,2, status,0
 49344 ;; Tracked objects:
 49345 ;;		On entry : 0/0
 49346 ;;		On exit  : 0/0
 49347 ;;		Unchanged: 0/0
 49348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49353 ;;Total ram usage:        2 bytes
 49354 ;; Hardware stack levels used:    1
 49355 ;; This function calls:
 49356 ;;		Nothing
 49357 ;; This function is called by:
 49358 ;; This function uses a non-reentrant model
 49359 ;;
 49360                           
 49361                           	psect	text241
 49362  012C66                     __ptext241:
 49363                           	opt stack 0
 49364  012C66                     i2_ExternalFlash_MediaInitialize:
 49365                           	opt stack 13
 49366                           
 49367                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 49368                           
 49369                           ; BSR set to: 2
 49370                           ;incstack = 0
 49371  012C66  0102               	movlb	2	; () banked
 49372  012C68  81BB               	bsf	(_mediaInformation+1)& (0+255),0,b
 49373                           
 49374                           ; BSR set to: 2
 49375                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 49376  012C6A  0E02               	movlw	2
 49377  012C6C  6FBD               	movwf	(_mediaInformation+3)& (0+255),b
 49378  012C6E  0E00               	movlw	0
 49379  012C70  6FBC               	movwf	(_mediaInformation+2)& (0+255),b
 49380                           
 49381                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 49382  012C72  0E00               	movlw	0
 49383  012C74  6FBA               	movwf	_mediaInformation& (0+255),b
 49384                           
 49385                           ; BSR set to: 2
 49386                           ;external_flash.c: 15: return &mediaInformation;
 49387  012C76  0EBA               	movlw	low _mediaInformation
 49388  012C78  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 49389  012C7A  0E02               	movlw	high _mediaInformation
 49390  012C7C  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 49391  012C7E  0012               	return	
 49392  012C80                     __end_ofi2_ExternalFlash_MediaInitialize:
 49393                           	opt stack 0
 49394                           tosu	equ	0xFFF
 49395                           tosh	equ	0xFFE
 49396                           tosl	equ	0xFFD
 49397                           pclatu	equ	0xFFB
 49398                           pclath	equ	0xFFA
 49399                           tblptru	equ	0xFF8
 49400                           tblptrh	equ	0xFF7
 49401                           tblptrl	equ	0xFF6
 49402                           tablat	equ	0xFF5
 49403                           prodh	equ	0xFF4
 49404                           prodl	equ	0xFF3
 49405                           intcon	equ	0xFF2
 49406                           intcon2	equ	0xFF1
 49407                           intcon3	equ	0xFF0
 49408                           indf0	equ	0xFEF
 49409                           postinc0	equ	0xFEE
 49410                           fsr0h	equ	0xFEA
 49411                           fsr0l	equ	0xFE9
 49412                           wreg	equ	0xFE8
 49413                           indf1	equ	0xFE7
 49414                           postinc1	equ	0xFE6
 49415                           postdec1	equ	0xFE5
 49416                           plusw1	equ	0xFE3
 49417                           fsr1h	equ	0xFE2
 49418                           fsr1l	equ	0xFE1
 49419                           indf2	equ	0xFDF
 49420                           postinc2	equ	0xFDE
 49421                           postdec2	equ	0xFDD
 49422                           plusw2	equ	0xFDB
 49423                           fsr2h	equ	0xFDA
 49424                           fsr2l	equ	0xFD9
 49425                           status	equ	0xFD8
 49426                           
 49427 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 49428 ;; Defined at:
 49429 ;;		line 29 in file "external_flash.c"
 49430 ;; Parameters:    Size  Location     Type
 49431 ;;  config          2    0[COMRAM] PTR void 
 49432 ;;		 -> NULL(0), 
 49433 ;; Auto vars:     Size  Location     Type
 49434 ;;		None
 49435 ;; Return value:  Size  Location     Type
 49436 ;;                  1    wreg      unsigned char 
 49437 ;; Registers used:
 49438 ;;		wreg
 49439 ;; Tracked objects:
 49440 ;;		On entry : 0/0
 49441 ;;		On exit  : 0/0
 49442 ;;		Unchanged: 0/0
 49443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49448 ;;Total ram usage:        2 bytes
 49449 ;; Hardware stack levels used:    1
 49450 ;; This function calls:
 49451 ;;		Nothing
 49452 ;; This function is called by:
 49453 ;; This function uses a non-reentrant model
 49454 ;;
 49455                           
 49456                           	psect	text242
 49457  012F5C                     __ptext242:
 49458                           	opt stack 0
 49459  012F5C                     i2_ExternalFlash_MediaDetect:
 49460                           	opt stack 13
 49461                           
 49462                           ;external_flash.c: 31: return 1;
 49463                           
 49464                           ; BSR set to: 2
 49465                           ;incstack = 0
 49466  012F5C  0E01               	movlw	1
 49467  012F5E  0012               	return	
 49468  012F60                     __end_ofi2_ExternalFlash_MediaDetect:
 49469                           	opt stack 0
 49470                           tosu	equ	0xFFF
 49471                           tosh	equ	0xFFE
 49472                           tosl	equ	0xFFD
 49473                           pclatu	equ	0xFFB
 49474                           pclath	equ	0xFFA
 49475                           tblptru	equ	0xFF8
 49476                           tblptrh	equ	0xFF7
 49477                           tblptrl	equ	0xFF6
 49478                           tablat	equ	0xFF5
 49479                           prodh	equ	0xFF4
 49480                           prodl	equ	0xFF3
 49481                           intcon	equ	0xFF2
 49482                           intcon2	equ	0xFF1
 49483                           intcon3	equ	0xFF0
 49484                           indf0	equ	0xFEF
 49485                           postinc0	equ	0xFEE
 49486                           fsr0h	equ	0xFEA
 49487                           fsr0l	equ	0xFE9
 49488                           wreg	equ	0xFE8
 49489                           indf1	equ	0xFE7
 49490                           postinc1	equ	0xFE6
 49491                           postdec1	equ	0xFE5
 49492                           plusw1	equ	0xFE3
 49493                           fsr1h	equ	0xFE2
 49494                           fsr1l	equ	0xFE1
 49495                           indf2	equ	0xFDF
 49496                           postinc2	equ	0xFDE
 49497                           postdec2	equ	0xFDD
 49498                           plusw2	equ	0xFDB
 49499                           fsr2h	equ	0xFDA
 49500                           fsr2l	equ	0xFD9
 49501                           status	equ	0xFD8
 49502                           
 49503 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 49504 ;; Defined at:
 49505 ;;		line 81 in file "app_device_custom_hid.c"
 49506 ;; Parameters:    Size  Location     Type
 49507 ;;		None
 49508 ;; Auto vars:     Size  Location     Type
 49509 ;;		None
 49510 ;; Return value:  Size  Location     Type
 49511 ;;                  1    wreg      void 
 49512 ;; Registers used:
 49513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49514 ;; Tracked objects:
 49515 ;;		On entry : 0/0
 49516 ;;		On exit  : 0/0
 49517 ;;		Unchanged: 0/0
 49518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49523 ;;Total ram usage:        0 bytes
 49524 ;; Hardware stack levels used:    1
 49525 ;; Hardware stack levels required when called:    2
 49526 ;; This function calls:
 49527 ;;		_USBEnableEndpoint
 49528 ;;		i2_USBTransferOnePacket
 49529 ;; This function is called by:
 49530 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49531 ;; This function uses a non-reentrant model
 49532 ;;
 49533                           
 49534                           	psect	text243
 49535  0125A4                     __ptext243:
 49536                           	opt stack 0
 49537  0125A4                     _APP_DeviceCustomHIDInitialize:
 49538                           	opt stack 13
 49539                           
 49540                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 49541                           
 49542                           ;incstack = 0
 49543  0125A4  0E00               	movlw	0
 49544  0125A6  0100               	movlb	0	; () banked
 49545  0125A8  6FF9               	movwf	_USBInHandle& (0+255),b
 49546  0125AA  0E00               	movlw	0
 49547  0125AC  6FFA               	movwf	(_USBInHandle+1)& (0+255),b
 49548                           
 49549                           ; BSR set to: 0
 49550                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 49551  0125AE  0E1E               	movlw	30
 49552  0125B0  6E09               	movwf	USBEnableEndpoint@options,c
 49553  0125B2  0E01               	movlw	1
 49554  0125B4  ECF8  F091         	call	_USBEnableEndpoint
 49555                           
 49556                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 49557  0125B8  0E00               	movlw	0
 49558  0125BA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 49559  0125BC  0E78               	movlw	low _ReceivedDataBuffer
 49560  0125BE  6E02               	movwf	i2USBTransferOnePacket@data,c
 49561  0125C0  0E04               	movlw	high _ReceivedDataBuffer
 49562  0125C2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 49563  0125C4  0E40               	movlw	64
 49564  0125C6  6E04               	movwf	i2USBTransferOnePacket@len,c
 49565  0125C8  0E01               	movlw	1
 49566  0125CA  EC06  F076         	call	i2_USBTransferOnePacket
 49567  0125CE  C001  F2B4         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 49568  0125D2  C002  F2B5         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 49569  0125D6  0012               	return		;funcret
 49570  0125D8                     __end_of_APP_DeviceCustomHIDInitialize:
 49571                           	opt stack 0
 49572                           tosu	equ	0xFFF
 49573                           tosh	equ	0xFFE
 49574                           tosl	equ	0xFFD
 49575                           pclatu	equ	0xFFB
 49576                           pclath	equ	0xFFA
 49577                           tblptru	equ	0xFF8
 49578                           tblptrh	equ	0xFF7
 49579                           tblptrl	equ	0xFF6
 49580                           tablat	equ	0xFF5
 49581                           prodh	equ	0xFF4
 49582                           prodl	equ	0xFF3
 49583                           intcon	equ	0xFF2
 49584                           intcon2	equ	0xFF1
 49585                           intcon3	equ	0xFF0
 49586                           indf0	equ	0xFEF
 49587                           postinc0	equ	0xFEE
 49588                           fsr0h	equ	0xFEA
 49589                           fsr0l	equ	0xFE9
 49590                           wreg	equ	0xFE8
 49591                           indf1	equ	0xFE7
 49592                           postinc1	equ	0xFE6
 49593                           postdec1	equ	0xFE5
 49594                           plusw1	equ	0xFE3
 49595                           fsr1h	equ	0xFE2
 49596                           fsr1l	equ	0xFE1
 49597                           indf2	equ	0xFDF
 49598                           postinc2	equ	0xFDE
 49599                           postdec2	equ	0xFDD
 49600                           plusw2	equ	0xFDB
 49601                           fsr2h	equ	0xFDA
 49602                           fsr2l	equ	0xFD9
 49603                           status	equ	0xFD8
 49604                           
 49605 ;; *************** function i2_USBTransferOnePacket *****************
 49606 ;; Defined at:
 49607 ;;		line 995 in file "usb_device.c"
 49608 ;; Parameters:    Size  Location     Type
 49609 ;;  ep              1    wreg     unsigned char 
 49610 ;;  dir             1    0[COMRAM] unsigned char 
 49611 ;;  data            2    1[COMRAM] PTR unsigned char 
 49612 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 49613 ;;		 -> msd_cbw(31), NULL(0), 
 49614 ;;  len             1    3[COMRAM] unsigned char 
 49615 ;; Auto vars:     Size  Location     Type
 49616 ;;  ep              1    8[COMRAM] unsigned char 
 49617 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 49618 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 49619 ;; Return value:  Size  Location     Type
 49620 ;;                  2    0[COMRAM] PTR void 
 49621 ;; Registers used:
 49622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49623 ;; Tracked objects:
 49624 ;;		On entry : 0/0
 49625 ;;		On exit  : 0/0
 49626 ;;		Unchanged: 0/0
 49627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49629 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49631 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49632 ;;Total ram usage:       11 bytes
 49633 ;; Hardware stack levels used:    1
 49634 ;; This function calls:
 49635 ;;		Nothing
 49636 ;; This function is called by:
 49637 ;;		_USBMSDInit
 49638 ;;		_USBCheckMSDRequest
 49639 ;;		_MSDTransferTerminated
 49640 ;;		_APP_DeviceCustomHIDInitialize
 49641 ;; This function uses a non-reentrant model
 49642 ;;
 49643                           
 49644                           	psect	text244
 49645  00EC0C                     __ptext244:
 49646                           	opt stack 0
 49647  00EC0C                     i2_USBTransferOnePacket:
 49648                           	opt stack 14
 49649                           
 49650                           ;incstack = 0
 49651                           ;i2USBTransferOnePacket@ep stored from wreg
 49652  00EC0C  6E09               	movwf	i2USBTransferOnePacket@ep,c
 49653                           
 49654                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 49655                           ;usb_device.c: 1000: if(dir != 0)
 49656  00EC0E  5001               	movf	i2USBTransferOnePacket@dir,w,c
 49657  00EC10  B4D8               	btfsc	status,2,c
 49658  00EC12  D007               	goto	i2l186
 49659                           
 49660                           ;usb_device.c: 1001: {
 49661                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 49662  00EC14  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49663  00EC16  0D02               	mullw	2
 49664  00EC18  0E3B               	movlw	low _pBDTEntryIn
 49665  00EC1A  24F3               	addwf	prodl,w,c
 49666  00EC1C  6ED9               	movwf	fsr2l,c
 49667  00EC1E  0E00               	movlw	high _pBDTEntryIn
 49668  00EC20  D006               	goto	L66
 49669  00EC22                     i2l186:
 49670                           
 49671                           ;usb_device.c: 1005: else
 49672                           ;usb_device.c: 1006: {
 49673                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 49674  00EC22  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49675  00EC24  0D02               	mullw	2
 49676  00EC26  0ED3               	movlw	low _pBDTEntryOut
 49677  00EC28  24F3               	addwf	prodl,w,c
 49678  00EC2A  6ED9               	movwf	fsr2l,c
 49679  00EC2C  0E01               	movlw	high _pBDTEntryOut
 49680  00EC2E                     L66:
 49681  00EC2E  20F4               	addwfc	prodh,w,c
 49682  00EC30  6EDA               	movwf	fsr2h,c
 49683  00EC32  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 49684  00EC36  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 49685                           
 49686                           ;usb_device.c: 1009: }
 49687                           ;usb_device.c: 1013: if(handle == 0)
 49688  00EC3A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 49689  00EC3C  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 49690  00EC3E  A4D8               	btfss	status,2,c
 49691  00EC40  D005               	goto	i2l188
 49692                           
 49693                           ;usb_device.c: 1014: {
 49694                           ;usb_device.c: 1015: return 0;
 49695  00EC42  0E00               	movlw	0
 49696  00EC44  6E01               	movwf	?i2_USBTransferOnePacket,c
 49697  00EC46  0E00               	movlw	0
 49698  00EC48  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 49699  00EC4A  0012               	return	
 49700  00EC4C                     i2l188:
 49701                           
 49702                           ;usb_device.c: 1016: }
 49703                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 49704  00EC4C  EE20 F002          	lfsr	2,2
 49705  00EC50  500A               	movf	i2USBTransferOnePacket@handle,w,c
 49706  00EC52  26D9               	addwf	fsr2l,f,c
 49707  00EC54  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 49708  00EC56  22DA               	addwfc	fsr2h,f,c
 49709  00EC58  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 49710  00EC5C  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 49711                           
 49712                           ;usb_device.c: 1030: handle->CNT = len;
 49713  00EC60  EE20 F001          	lfsr	2,1
 49714  00EC64  500A               	movf	i2USBTransferOnePacket@handle,w,c
 49715  00EC66  26D9               	addwf	fsr2l,f,c
 49716  00EC68  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 49717  00EC6A  22DA               	addwfc	fsr2h,f,c
 49718  00EC6C  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 49719                           
 49720                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 49721  00EC70  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 49722  00EC74  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 49723  00EC78  0E40               	movlw	64
 49724  00EC7A  16DF               	andwf	indf2,f,c
 49725                           
 49726                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 49727  00EC7C  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 49728  00EC80  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 49729  00EC84  0E00               	movlw	0
 49730  00EC86  86DB               	bsf	plusw2,3,c
 49731                           
 49732                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 49733  00EC88  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 49734  00EC8C  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 49735  00EC90  0E00               	movlw	0
 49736  00EC92  8EDB               	bsf	plusw2,7,c
 49737                           
 49738                           ;usb_device.c: 1036: if(dir != 0)
 49739  00EC94  5001               	movf	i2USBTransferOnePacket@dir,w,c
 49740  00EC96  B4D8               	btfsc	status,2,c
 49741  00EC98  D018               	goto	i2l190
 49742                           
 49743                           ;usb_device.c: 1037: {
 49744                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 49745  00EC9A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49746  00EC9C  0D02               	mullw	2
 49747  00EC9E  0E3B               	movlw	low _pBDTEntryIn
 49748  00ECA0  24F3               	addwf	prodl,w,c
 49749  00ECA2  6ED9               	movwf	fsr2l,c
 49750  00ECA4  0E00               	movlw	high _pBDTEntryIn
 49751  00ECA6  20F4               	addwfc	prodh,w,c
 49752  00ECA8  6EDA               	movwf	fsr2h,c
 49753  00ECAA  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 49754  00ECAE  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 49755  00ECB2  0E04               	movlw	4
 49756  00ECB4  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 49757  00ECB6  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 49758  00ECB8  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 49759  00ECBA  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 49760  00ECBC  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49761  00ECBE  0D02               	mullw	2
 49762  00ECC0  0E3B               	movlw	low _pBDTEntryIn
 49763  00ECC2  24F3               	addwf	prodl,w,c
 49764  00ECC4  6ED9               	movwf	fsr2l,c
 49765  00ECC6  0E00               	movlw	high _pBDTEntryIn
 49766  00ECC8  D017               	goto	L67
 49767  00ECCA                     i2l190:
 49768                           
 49769                           ;usb_device.c: 1041: else
 49770                           ;usb_device.c: 1042: {
 49771                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 49772  00ECCA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49773  00ECCC  0D02               	mullw	2
 49774  00ECCE  0ED3               	movlw	low _pBDTEntryOut
 49775  00ECD0  24F3               	addwf	prodl,w,c
 49776  00ECD2  6ED9               	movwf	fsr2l,c
 49777  00ECD4  0E01               	movlw	high _pBDTEntryOut
 49778  00ECD6  20F4               	addwfc	prodh,w,c
 49779  00ECD8  6EDA               	movwf	fsr2h,c
 49780  00ECDA  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 49781  00ECDE  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 49782  00ECE2  0E04               	movlw	4
 49783  00ECE4  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 49784  00ECE6  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 49785  00ECE8  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 49786  00ECEA  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 49787  00ECEC  5009               	movf	i2USBTransferOnePacket@ep,w,c
 49788  00ECEE  0D02               	mullw	2
 49789  00ECF0  0ED3               	movlw	low _pBDTEntryOut
 49790  00ECF2  24F3               	addwf	prodl,w,c
 49791  00ECF4  6ED9               	movwf	fsr2l,c
 49792  00ECF6  0E01               	movlw	high _pBDTEntryOut
 49793  00ECF8                     L67:
 49794  00ECF8  20F4               	addwfc	prodh,w,c
 49795  00ECFA  6EDA               	movwf	fsr2h,c
 49796  00ECFC  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 49797  00ED00  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 49798                           
 49799                           ;usb_device.c: 1045: }
 49800                           ;usb_device.c: 1046: return (void*)handle;
 49801  00ED04  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 49802  00ED08  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 49803  00ED0C  0012               	return	
 49804  00ED0E                     __end_ofi2_USBTransferOnePacket:
 49805                           	opt stack 0
 49806                           tosu	equ	0xFFF
 49807                           tosh	equ	0xFFE
 49808                           tosl	equ	0xFFD
 49809                           pclatu	equ	0xFFB
 49810                           pclath	equ	0xFFA
 49811                           tblptru	equ	0xFF8
 49812                           tblptrh	equ	0xFF7
 49813                           tblptrl	equ	0xFF6
 49814                           tablat	equ	0xFF5
 49815                           prodh	equ	0xFF4
 49816                           prodl	equ	0xFF3
 49817                           intcon	equ	0xFF2
 49818                           intcon2	equ	0xFF1
 49819                           intcon3	equ	0xFF0
 49820                           indf0	equ	0xFEF
 49821                           postinc0	equ	0xFEE
 49822                           fsr0h	equ	0xFEA
 49823                           fsr0l	equ	0xFE9
 49824                           wreg	equ	0xFE8
 49825                           indf1	equ	0xFE7
 49826                           postinc1	equ	0xFE6
 49827                           postdec1	equ	0xFE5
 49828                           plusw1	equ	0xFE3
 49829                           fsr1h	equ	0xFE2
 49830                           fsr1l	equ	0xFE1
 49831                           indf2	equ	0xFDF
 49832                           postinc2	equ	0xFDE
 49833                           postdec2	equ	0xFDD
 49834                           plusw2	equ	0xFDB
 49835                           fsr2h	equ	0xFDA
 49836                           fsr2l	equ	0xFD9
 49837                           status	equ	0xFD8
 49838                           
 49839 ;; *************** function _USBEnableEndpoint *****************
 49840 ;; Defined at:
 49841 ;;		line 878 in file "usb_device.c"
 49842 ;; Parameters:    Size  Location     Type
 49843 ;;  ep              1    wreg     unsigned char 
 49844 ;;  options         1    8[COMRAM] unsigned char 
 49845 ;; Auto vars:     Size  Location     Type
 49846 ;;  ep              1   11[COMRAM] unsigned char 
 49847 ;;  p               2    9[COMRAM] PTR unsigned char 
 49848 ;;		 -> UEP0(1), 
 49849 ;; Return value:  Size  Location     Type
 49850 ;;                  1    wreg      void 
 49851 ;; Registers used:
 49852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49853 ;; Tracked objects:
 49854 ;;		On entry : 0/0
 49855 ;;		On exit  : 0/0
 49856 ;;		Unchanged: 0/0
 49857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49859 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49862 ;;Total ram usage:        4 bytes
 49863 ;; Hardware stack levels used:    1
 49864 ;; Hardware stack levels required when called:    1
 49865 ;; This function calls:
 49866 ;;		_USBConfigureEndpoint
 49867 ;; This function is called by:
 49868 ;;		_APP_DeviceCustomHIDInitialize
 49869 ;;		_APP_DeviceMSDInitialize
 49870 ;; This function uses a non-reentrant model
 49871 ;;
 49872                           
 49873                           	psect	text245
 49874  0123F0                     __ptext245:
 49875                           	opt stack 0
 49876  0123F0                     _USBEnableEndpoint:
 49877                           	opt stack 13
 49878                           
 49879                           ;incstack = 0
 49880                           ;USBEnableEndpoint@ep stored from wreg
 49881  0123F0  6E0C               	movwf	USBEnableEndpoint@ep,c
 49882                           
 49883                           ;usb_device.c: 880: unsigned char* p;
 49884                           ;usb_device.c: 884: if(options & 0x04)
 49885  0123F2  A409               	btfss	USBEnableEndpoint@options,2,c
 49886  0123F4  D005               	goto	i2l181
 49887                           
 49888                           ;usb_device.c: 885: {
 49889                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 49890  0123F6  0E00               	movlw	0
 49891  0123F8  6E01               	movwf	USBConfigureEndpoint@direction,c
 49892  0123FA  500C               	movf	USBEnableEndpoint@ep,w,c
 49893  0123FC  EC1A  F083         	call	_USBConfigureEndpoint
 49894  012400                     i2l181:
 49895                           
 49896                           ;usb_device.c: 887: }
 49897                           ;usb_device.c: 888: if(options & 0x02)
 49898  012400  A209               	btfss	USBEnableEndpoint@options,1,c
 49899  012402  D005               	goto	i2l182
 49900                           
 49901                           ;usb_device.c: 889: {
 49902                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 49903  012404  0E01               	movlw	1
 49904  012406  6E01               	movwf	USBConfigureEndpoint@direction,c
 49905  012408  500C               	movf	USBEnableEndpoint@ep,w,c
 49906  01240A  EC1A  F083         	call	_USBConfigureEndpoint
 49907  01240E                     i2l182:
 49908                           
 49909                           ;usb_device.c: 891: }
 49910                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 49911  01240E  500C               	movf	USBEnableEndpoint@ep,w,c
 49912  012410  0D01               	mullw	1
 49913  012412  0E26               	movlw	38
 49914  012414  24F3               	addwf	prodl,w,c
 49915  012416  6E0A               	movwf	USBEnableEndpoint@p,c
 49916  012418  0E0F               	movlw	15
 49917  01241A  20F4               	addwfc	prodh,w,c
 49918  01241C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 49919                           
 49920                           ;usb_device.c: 901: *p = options;
 49921  01241E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 49922  012422  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 49923  012426  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 49924  01242A  0012               	return		;funcret
 49925  01242C                     __end_of_USBEnableEndpoint:
 49926                           	opt stack 0
 49927                           tosu	equ	0xFFF
 49928                           tosh	equ	0xFFE
 49929                           tosl	equ	0xFFD
 49930                           pclatu	equ	0xFFB
 49931                           pclath	equ	0xFFA
 49932                           tblptru	equ	0xFF8
 49933                           tblptrh	equ	0xFF7
 49934                           tblptrl	equ	0xFF6
 49935                           tablat	equ	0xFF5
 49936                           prodh	equ	0xFF4
 49937                           prodl	equ	0xFF3
 49938                           intcon	equ	0xFF2
 49939                           intcon2	equ	0xFF1
 49940                           intcon3	equ	0xFF0
 49941                           indf0	equ	0xFEF
 49942                           postinc0	equ	0xFEE
 49943                           fsr0h	equ	0xFEA
 49944                           fsr0l	equ	0xFE9
 49945                           wreg	equ	0xFE8
 49946                           indf1	equ	0xFE7
 49947                           postinc1	equ	0xFE6
 49948                           postdec1	equ	0xFE5
 49949                           plusw1	equ	0xFE3
 49950                           fsr1h	equ	0xFE2
 49951                           fsr1l	equ	0xFE1
 49952                           indf2	equ	0xFDF
 49953                           postinc2	equ	0xFDE
 49954                           postdec2	equ	0xFDD
 49955                           plusw2	equ	0xFDB
 49956                           fsr2h	equ	0xFDA
 49957                           fsr2l	equ	0xFD9
 49958                           status	equ	0xFD8
 49959                           
 49960 ;; *************** function _USBConfigureEndpoint *****************
 49961 ;; Defined at:
 49962 ;;		line 1545 in file "usb_device.c"
 49963 ;; Parameters:    Size  Location     Type
 49964 ;;  EPNum           1    wreg     unsigned char 
 49965 ;;  direction       1    0[COMRAM] unsigned char 
 49966 ;; Auto vars:     Size  Location     Type
 49967 ;;  EPNum           1    5[COMRAM] unsigned char 
 49968 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 49969 ;;		 -> BDT(48), 
 49970 ;; Return value:  Size  Location     Type
 49971 ;;                  1    wreg      void 
 49972 ;; Registers used:
 49973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49974 ;; Tracked objects:
 49975 ;;		On entry : 0/0
 49976 ;;		On exit  : 0/0
 49977 ;;		Unchanged: 0/0
 49978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49980 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49982 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49983 ;;Total ram usage:        8 bytes
 49984 ;; Hardware stack levels used:    1
 49985 ;; This function calls:
 49986 ;;		Nothing
 49987 ;; This function is called by:
 49988 ;;		_USBEnableEndpoint
 49989 ;; This function uses a non-reentrant model
 49990 ;;
 49991                           
 49992                           	psect	text246
 49993  010634                     __ptext246:
 49994                           	opt stack 0
 49995  010634                     _USBConfigureEndpoint:
 49996                           	opt stack 13
 49997                           
 49998                           ;incstack = 0
 49999                           ;USBConfigureEndpoint@EPNum stored from wreg
 50000  010634  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 50001                           
 50002                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 50003                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 50004  010636  0E00               	movlw	0
 50005  010638  6E07               	movwf	USBConfigureEndpoint@handle,c
 50006  01063A  0E0D               	movlw	13
 50007  01063C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 50008                           
 50009                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 50010  01063E  5001               	movf	USBConfigureEndpoint@direction,w,c
 50011  010640  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 50012  010642  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 50013  010644  90D8               	bcf	status,0,c
 50014  010646  3602               	rlcf	??_USBConfigureEndpoint,f,c
 50015  010648  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 50016  01064A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 50017  01064C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 50018  01064E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 50019  010650  90D8               	bcf	status,0,c
 50020  010652  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 50021  010654  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 50022  010656  90D8               	bcf	status,0,c
 50023  010658  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 50024  01065A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 50025  01065C  5002               	movf	??_USBConfigureEndpoint,w,c
 50026  01065E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 50027  010660  5003               	movf	??_USBConfigureEndpoint+1,w,c
 50028  010662  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 50029  010664  90D8               	bcf	status,0,c
 50030  010666  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 50031  010668  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 50032  01066A  90D8               	bcf	status,0,c
 50033  01066C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 50034  01066E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 50035  010670  5004               	movf	??_USBConfigureEndpoint+2,w,c
 50036  010672  2607               	addwf	USBConfigureEndpoint@handle,f,c
 50037  010674  5005               	movf	??_USBConfigureEndpoint+3,w,c
 50038  010676  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 50039                           
 50040                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 50041  010678  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 50042  01067C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 50043  010680  9EDF               	bcf	indf2,7,c
 50044                           
 50045                           ;usb_device.c: 1559: if(direction == 0)
 50046  010682  5001               	movf	USBConfigureEndpoint@direction,w,c
 50047  010684  A4D8               	btfss	status,2,c
 50048  010686  D007               	goto	i2l228
 50049                           
 50050                           ;usb_device.c: 1560: {
 50051                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 50052  010688  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 50053  01068A  0D02               	mullw	2
 50054  01068C  0ED3               	movlw	low _pBDTEntryOut
 50055  01068E  24F3               	addwf	prodl,w,c
 50056  010690  6ED9               	movwf	fsr2l,c
 50057  010692  0E01               	movlw	high _pBDTEntryOut
 50058  010694  D006               	goto	L68
 50059  010696                     i2l228:
 50060                           
 50061                           ;usb_device.c: 1563: else
 50062                           ;usb_device.c: 1564: {
 50063                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 50064  010696  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 50065  010698  0D02               	mullw	2
 50066  01069A  0E3B               	movlw	low _pBDTEntryIn
 50067  01069C  24F3               	addwf	prodl,w,c
 50068  01069E  6ED9               	movwf	fsr2l,c
 50069  0106A0  0E00               	movlw	high _pBDTEntryIn
 50070  0106A2                     L68:
 50071  0106A2  20F4               	addwfc	prodh,w,c
 50072  0106A4  6EDA               	movwf	fsr2h,c
 50073  0106A6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 50074  0106AA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 50075                           
 50076                           ;usb_device.c: 1566: }
 50077                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 50078  0106AE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 50079  0106B2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 50080  0106B6  9CDF               	bcf	indf2,6,c
 50081                           
 50082                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 50083  0106B8  EE20 F004          	lfsr	2,4
 50084  0106BC  5007               	movf	USBConfigureEndpoint@handle,w,c
 50085  0106BE  26D9               	addwf	fsr2l,f,c
 50086  0106C0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 50087  0106C2  22DA               	addwfc	fsr2h,f,c
 50088  0106C4  8CDF               	bsf	indf2,6,c
 50089  0106C6  0012               	return		;funcret
 50090  0106C8                     __end_of_USBConfigureEndpoint:
 50091                           	opt stack 0
 50092                           tosu	equ	0xFFF
 50093                           tosh	equ	0xFFE
 50094                           tosl	equ	0xFFD
 50095                           pclatu	equ	0xFFB
 50096                           pclath	equ	0xFFA
 50097                           tblptru	equ	0xFF8
 50098                           tblptrh	equ	0xFF7
 50099                           tblptrl	equ	0xFF6
 50100                           tablat	equ	0xFF5
 50101                           prodh	equ	0xFF4
 50102                           prodl	equ	0xFF3
 50103                           intcon	equ	0xFF2
 50104                           intcon2	equ	0xFF1
 50105                           intcon3	equ	0xFF0
 50106                           indf0	equ	0xFEF
 50107                           postinc0	equ	0xFEE
 50108                           fsr0h	equ	0xFEA
 50109                           fsr0l	equ	0xFE9
 50110                           wreg	equ	0xFE8
 50111                           indf1	equ	0xFE7
 50112                           postinc1	equ	0xFE6
 50113                           postdec1	equ	0xFE5
 50114                           plusw1	equ	0xFE3
 50115                           fsr1h	equ	0xFE2
 50116                           fsr1l	equ	0xFE1
 50117                           indf2	equ	0xFDF
 50118                           postinc2	equ	0xFDE
 50119                           postdec2	equ	0xFDD
 50120                           plusw2	equ	0xFDB
 50121                           fsr2h	equ	0xFDA
 50122                           fsr2l	equ	0xFD9
 50123                           status	equ	0xFD8
 50124                           
 50125 ;; *************** function _USBCtrlTrfOutHandler *****************
 50126 ;; Defined at:
 50127 ;;		line 2540 in file "usb_device.c"
 50128 ;; Parameters:    Size  Location     Type
 50129 ;;		None
 50130 ;; Auto vars:     Size  Location     Type
 50131 ;;		None
 50132 ;; Return value:  Size  Location     Type
 50133 ;;                  1    wreg      void 
 50134 ;; Registers used:
 50135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50136 ;; Tracked objects:
 50137 ;;		On entry : 0/0
 50138 ;;		On exit  : 0/0
 50139 ;;		Unchanged: 0/0
 50140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50145 ;;Total ram usage:        0 bytes
 50146 ;; Hardware stack levels used:    1
 50147 ;; Hardware stack levels required when called:    2
 50148 ;; This function calls:
 50149 ;;		_USBCtrlTrfRxService
 50150 ;; This function is called by:
 50151 ;;		_USBCtrlEPService
 50152 ;; This function uses a non-reentrant model
 50153 ;;
 50154                           
 50155                           	psect	text247
 50156  011714                     __ptext247:
 50157                           	opt stack 0
 50158  011714                     _USBCtrlTrfOutHandler:
 50159                           	opt stack 13
 50160                           
 50161                           ;usb_device.c: 2542: if(controlTransferState == 2)
 50162                           
 50163                           ;incstack = 0
 50164  011714  0E02               	movlw	2
 50165  011716  185A               	xorwf	_controlTransferState,w,c	;volatile
 50166  011718  A4D8               	btfss	status,2,c
 50167  01171A  D003               	goto	i2l334
 50168                           
 50169                           ;usb_device.c: 2543: {
 50170                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 50171  01171C  EC68  F072         	call	_USBCtrlTrfRxService	;wreg free
 50172                           
 50173                           ;usb_device.c: 2545: }
 50174  011720  0012               	return	
 50175  011722                     i2l334:
 50176                           
 50177                           ;usb_device.c: 2546: else
 50178                           ;usb_device.c: 2547: {
 50179                           ;usb_device.c: 2550: controlTransferState = 0;
 50180  011722  0E00               	movlw	0
 50181  011724  6E5A               	movwf	_controlTransferState,c	;volatile
 50182                           
 50183                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 50184  011726  0101               	movlb	1	; () banked
 50185  011728  51FB               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 50186  01172A  A4D8               	btfss	status,2,c
 50187  01172C  D020               	goto	i2l336
 50188                           
 50189                           ; BSR set to: 1
 50190                           ;usb_device.c: 2558: {
 50191                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 50192  01172E  0100               	movlb	0	; () banked
 50193  011730  EE20 F001          	lfsr	2,1
 50194  011734  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50195  011736  26D9               	addwf	fsr2l,f,c
 50196  011738  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50197  01173A  22DA               	addwfc	fsr2h,f,c
 50198  01173C  0E08               	movlw	8
 50199  01173E  6EDF               	movwf	indf2,c
 50200                           
 50201                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50202  011740  EE20 F002          	lfsr	2,2
 50203  011744  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50204  011746  26D9               	addwf	fsr2l,f,c
 50205  011748  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50206  01174A  22DA               	addwfc	fsr2h,f,c
 50207  01174C  0E30               	movlw	48
 50208  01174E  6EDE               	movwf	postinc2,c
 50209  011750  0E0D               	movlw	13
 50210  011752  6EDD               	movwf	postdec2,c
 50211                           
 50212                           ; BSR set to: 0
 50213                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50214  011754  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50215  011758  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50216  01175C  0E0C               	movlw	12
 50217  01175E  6EDF               	movwf	indf2,c
 50218                           
 50219                           ; BSR set to: 0
 50220                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50221  011760  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50222  011764  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50223  011768  0E00               	movlw	0
 50224  01176A  8EDB               	bsf	plusw2,7,c
 50225                           
 50226                           ;usb_device.c: 2563: }
 50227  01176C  0012               	return	
 50228  01176E                     i2l336:
 50229                           
 50230                           ;usb_device.c: 2564: else
 50231                           ;usb_device.c: 2565: {
 50232                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 50233                           
 50234                           ; BSR set to: 0
 50235  01176E  0E00               	movlw	0
 50236  011770  0101               	movlb	1	; () banked
 50237  011772  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50238                           
 50239                           ; BSR set to: 1
 50240  011774  0012               	return	
 50241  011776                     __end_of_USBCtrlTrfOutHandler:
 50242                           	opt stack 0
 50243                           tosu	equ	0xFFF
 50244                           tosh	equ	0xFFE
 50245                           tosl	equ	0xFFD
 50246                           pclatu	equ	0xFFB
 50247                           pclath	equ	0xFFA
 50248                           tblptru	equ	0xFF8
 50249                           tblptrh	equ	0xFF7
 50250                           tblptrl	equ	0xFF6
 50251                           tablat	equ	0xFF5
 50252                           prodh	equ	0xFF4
 50253                           prodl	equ	0xFF3
 50254                           intcon	equ	0xFF2
 50255                           intcon2	equ	0xFF1
 50256                           intcon3	equ	0xFF0
 50257                           indf0	equ	0xFEF
 50258                           postinc0	equ	0xFEE
 50259                           fsr0h	equ	0xFEA
 50260                           fsr0l	equ	0xFE9
 50261                           wreg	equ	0xFE8
 50262                           indf1	equ	0xFE7
 50263                           postinc1	equ	0xFE6
 50264                           postdec1	equ	0xFE5
 50265                           plusw1	equ	0xFE3
 50266                           fsr1h	equ	0xFE2
 50267                           fsr1l	equ	0xFE1
 50268                           indf2	equ	0xFDF
 50269                           postinc2	equ	0xFDE
 50270                           postdec2	equ	0xFDD
 50271                           plusw2	equ	0xFDB
 50272                           fsr2h	equ	0xFDA
 50273                           fsr2l	equ	0xFD9
 50274                           status	equ	0xFD8
 50275                           
 50276 ;; *************** function _USBCtrlTrfRxService *****************
 50277 ;; Defined at:
 50278 ;;		line 1854 in file "usb_device.c"
 50279 ;; Parameters:    Size  Location     Type
 50280 ;;		None
 50281 ;; Auto vars:     Size  Location     Type
 50282 ;;  byteToRead      1    1[COMRAM] unsigned char 
 50283 ;;  i               1    0[COMRAM] unsigned char 
 50284 ;; Return value:  Size  Location     Type
 50285 ;;                  1    wreg      void 
 50286 ;; Registers used:
 50287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50288 ;; Tracked objects:
 50289 ;;		On entry : 0/0
 50290 ;;		On exit  : 0/0
 50291 ;;		Unchanged: 0/0
 50292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50297 ;;Total ram usage:        2 bytes
 50298 ;; Hardware stack levels used:    1
 50299 ;; Hardware stack levels required when called:    1
 50300 ;; This function calls:
 50301 ;;		_USBCtrlEPAllowStatusStage
 50302 ;; This function is called by:
 50303 ;;		_USBCtrlTrfOutHandler
 50304 ;; This function uses a non-reentrant model
 50305 ;;
 50306                           
 50307                           	psect	text248
 50308  00E4D0                     __ptext248:
 50309                           	opt stack 0
 50310  00E4D0                     _USBCtrlTrfRxService:
 50311                           	opt stack 13
 50312                           
 50313                           ;usb_device.c: 1856: uint8_t byteToRead;
 50314                           ;usb_device.c: 1857: uint8_t i;
 50315                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 50316                           
 50317                           ;incstack = 0
 50318  00E4D0  EE20 F001          	lfsr	2,1
 50319  00E4D4  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 50320  00E4D6  26D9               	addwf	fsr2l,f,c
 50321  00E4D8  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50322  00E4DA  22DA               	addwfc	fsr2h,f,c
 50323  00E4DC  50DF               	movf	indf2,w,c
 50324  00E4DE  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 50325                           
 50326                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 50327  00E4E0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 50328  00E4E2  5C36               	subwf	_outPipes+4,w,c	;volatile
 50329  00E4E4  0E00               	movlw	0
 50330  00E4E6  5837               	subwfb	_outPipes+5,w,c	;volatile
 50331  00E4E8  A0D8               	btfss	status,0,c
 50332                           
 50333                           ;usb_device.c: 1868: {
 50334                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 50335  00E4EA  C036  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 50336                           
 50337                           ;usb_device.c: 1870: }
 50338                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 50339  00E4EE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 50340  00E4F0  5E36               	subwf	_outPipes+4,f,c	;volatile
 50341  00E4F2  0E00               	movlw	0
 50342  00E4F4  5A37               	subwfb	_outPipes+5,f,c	;volatile
 50343                           
 50344                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 50345  00E4F6  0E00               	movlw	0
 50346  00E4F8  6E01               	movwf	USBCtrlTrfRxService@i,c
 50347  00E4FA  D011               	goto	i2l262
 50348  00E4FC                     
 50349                           ;usb_device.c: 1877: {
 50350                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 50351  00E4FC  5001               	movf	USBCtrlTrfRxService@i,w,c
 50352  00E4FE  0D01               	mullw	1
 50353  00E500  0E38               	movlw	56
 50354  00E502  24F3               	addwf	prodl,w,c
 50355  00E504  6ED9               	movwf	fsr2l,c
 50356  00E506  0E0D               	movlw	13
 50357  00E508  20F4               	addwfc	prodh,w,c
 50358  00E50A  6EDA               	movwf	fsr2h,c
 50359  00E50C  C032  FFE1         	movff	_outPipes,fsr1l	;volatile
 50360  00E510  C033  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 50361  00E514  CFDF FFE7          	movff	indf2,indf1
 50362  00E518  4A32               	infsnz	_outPipes,f,c	;volatile
 50363  00E51A  2A33               	incf	_outPipes+1,f,c	;volatile
 50364  00E51C  2A01               	incf	USBCtrlTrfRxService@i,f,c
 50365  00E51E                     i2l262:
 50366  00E51E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 50367  00E520  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 50368  00E522  A0D8               	btfss	status,0,c
 50369  00E524  D7EB               	goto	i2l263
 50370                           
 50371                           ;usb_device.c: 1879: }
 50372                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 50373  00E526  5036               	movf	_outPipes+4,w,c	;volatile
 50374  00E528  1037               	iorwf	_outPipes+5,w,c	;volatile
 50375  00E52A  B4D8               	btfsc	status,2,c
 50376  00E52C  D033               	goto	i2l265
 50377                           
 50378                           ;usb_device.c: 1884: {
 50379                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 50380  00E52E  0100               	movlb	0	; () banked
 50381  00E530  EE20 F001          	lfsr	2,1
 50382  00E534  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50383  00E536  26D9               	addwf	fsr2l,f,c
 50384  00E538  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50385  00E53A  22DA               	addwfc	fsr2h,f,c
 50386  00E53C  0E08               	movlw	8
 50387  00E53E  6EDF               	movwf	indf2,c
 50388                           
 50389                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 50390  00E540  EE20 F002          	lfsr	2,2
 50391  00E544  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50392  00E546  26D9               	addwf	fsr2l,f,c
 50393  00E548  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50394  00E54A  22DA               	addwfc	fsr2h,f,c
 50395  00E54C  0E38               	movlw	56
 50396  00E54E  6EDE               	movwf	postinc2,c
 50397  00E550  0E0D               	movlw	13
 50398  00E552  6EDD               	movwf	postdec2,c
 50399                           
 50400                           ; BSR set to: 0
 50401                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 50402  00E554  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50403  00E558  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50404  00E55C  BCDF               	btfsc	indf2,6,c
 50405  00E55E  D00D               	goto	i2l266
 50406                           
 50407                           ; BSR set to: 0
 50408                           ;usb_device.c: 1888: {
 50409                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 50410  00E560  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50411  00E564  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50412  00E568  0E48               	movlw	72
 50413  00E56A  6EDF               	movwf	indf2,c
 50414                           
 50415                           ; BSR set to: 0
 50416                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50417  00E56C  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50418  00E570  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50419  00E574  0E00               	movlw	0
 50420  00E576  8EDB               	bsf	plusw2,7,c
 50421                           
 50422                           ;usb_device.c: 1891: }
 50423  00E578  0012               	return	
 50424  00E57A                     i2l266:
 50425                           
 50426                           ; BSR set to: 0
 50427                           ;usb_device.c: 1892: else
 50428                           ;usb_device.c: 1893: {
 50429                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 50430                           
 50431                           ; BSR set to: 0
 50432  00E57A  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50433  00E57E  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50434  00E582  0E08               	movlw	8
 50435  00E584  6EDF               	movwf	indf2,c
 50436                           
 50437                           ; BSR set to: 0
 50438                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50439  00E586  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50440  00E58A  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50441  00E58E  0E00               	movlw	0
 50442  00E590  8EDB               	bsf	plusw2,7,c
 50443                           
 50444                           ; BSR set to: 0
 50445                           ;usb_device.c: 1896: }
 50446                           ;usb_device.c: 1897: }
 50447  00E592  0012               	return	
 50448  00E594                     i2l265:
 50449                           
 50450                           ;usb_device.c: 1898: else
 50451                           ;usb_device.c: 1899: {
 50452                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 50453                           
 50454                           ; BSR set to: 0
 50455  00E594  0100               	movlb	0	; () banked
 50456  00E596  EE20 F001          	lfsr	2,1
 50457  00E59A  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50458  00E59C  26D9               	addwf	fsr2l,f,c
 50459  00E59E  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50460  00E5A0  22DA               	addwfc	fsr2h,f,c
 50461  00E5A2  0E08               	movlw	8
 50462  00E5A4  6EDF               	movwf	indf2,c
 50463                           
 50464                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50465  00E5A6  EE20 F002          	lfsr	2,2
 50466  00E5AA  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50467  00E5AC  26D9               	addwf	fsr2l,f,c
 50468  00E5AE  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50469  00E5B0  22DA               	addwfc	fsr2h,f,c
 50470  00E5B2  0E30               	movlw	48
 50471  00E5B4  6EDE               	movwf	postinc2,c
 50472  00E5B6  0E0D               	movlw	13
 50473  00E5B8  6EDD               	movwf	postdec2,c
 50474                           
 50475                           ; BSR set to: 0
 50476                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 50477  00E5BA  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50478  00E5BE  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50479  00E5C2  0E04               	movlw	4
 50480  00E5C4  6EDF               	movwf	indf2,c
 50481                           
 50482                           ; BSR set to: 0
 50483                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50484  00E5C6  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50485  00E5CA  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50486  00E5CE  0E00               	movlw	0
 50487  00E5D0  8EDB               	bsf	plusw2,7,c
 50488                           
 50489                           ; BSR set to: 0
 50490                           ;usb_device.c: 1928: }
 50491                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 50492                           
 50493                           ; BSR set to: 0
 50494                           ;usb_device.c: 1917: {
 50495                           ;usb_device.c: 1923: outPipes[0].pFunc();
 50496  00E5D2  9E35               	bcf	_outPipes+3,7,c	;volatile
 50497                           
 50498                           ; BSR set to: 0
 50499                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 50500  00E5D4  5055               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 50501  00E5D6  A4D8               	btfss	status,2,c
 50502  00E5D8  0012               	return	
 50503                           
 50504                           ; BSR set to: 0
 50505                           ;usb_device.c: 1944: {
 50506                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 50507  00E5DA  EC79  F07E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 50508  00E5DE  0012               	return	
 50509  00E5E0                     __end_of_USBCtrlTrfRxService:
 50510                           	opt stack 0
 50511                           tosu	equ	0xFFF
 50512                           tosh	equ	0xFFE
 50513                           tosl	equ	0xFFD
 50514                           pclatu	equ	0xFFB
 50515                           pclath	equ	0xFFA
 50516                           tblptru	equ	0xFF8
 50517                           tblptrh	equ	0xFF7
 50518                           tblptrl	equ	0xFF6
 50519                           tablat	equ	0xFF5
 50520                           prodh	equ	0xFF4
 50521                           prodl	equ	0xFF3
 50522                           intcon	equ	0xFF2
 50523                           intcon2	equ	0xFF1
 50524                           intcon3	equ	0xFF0
 50525                           indf0	equ	0xFEF
 50526                           postinc0	equ	0xFEE
 50527                           fsr0h	equ	0xFEA
 50528                           fsr0l	equ	0xFE9
 50529                           wreg	equ	0xFE8
 50530                           indf1	equ	0xFE7
 50531                           postinc1	equ	0xFE6
 50532                           postdec1	equ	0xFE5
 50533                           plusw1	equ	0xFE3
 50534                           fsr1h	equ	0xFE2
 50535                           fsr1l	equ	0xFE1
 50536                           indf2	equ	0xFDF
 50537                           postinc2	equ	0xFDE
 50538                           postdec2	equ	0xFDD
 50539                           plusw2	equ	0xFDB
 50540                           fsr2h	equ	0xFDA
 50541                           fsr2l	equ	0xFD9
 50542                           status	equ	0xFD8
 50543                           
 50544 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 50545 ;; Defined at:
 50546 ;;		line 1418 in file "usb_device.c"
 50547 ;; Parameters:    Size  Location     Type
 50548 ;;		None
 50549 ;; Auto vars:     Size  Location     Type
 50550 ;;		None
 50551 ;; Return value:  Size  Location     Type
 50552 ;;                  1    wreg      void 
 50553 ;; Registers used:
 50554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50555 ;; Tracked objects:
 50556 ;;		On entry : 0/0
 50557 ;;		On exit  : 0/0
 50558 ;;		Unchanged: 0/0
 50559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50564 ;;Total ram usage:        0 bytes
 50565 ;; Hardware stack levels used:    1
 50566 ;; This function calls:
 50567 ;;		Nothing
 50568 ;; This function is called by:
 50569 ;;		_USBDeviceTasks
 50570 ;;		_USBCtrlEPServiceComplete
 50571 ;;		_USBCtrlTrfRxService
 50572 ;; This function uses a non-reentrant model
 50573 ;;
 50574                           
 50575                           	psect	text249
 50576  00FCF2                     __ptext249:
 50577                           	opt stack 0
 50578  00FCF2                     _USBCtrlEPAllowStatusStage:
 50579                           	opt stack 13
 50580                           
 50581                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 50582                           
 50583                           ;incstack = 0
 50584  00FCF2  0101               	movlb	1	; () banked
 50585  00FCF4  51FA               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 50586  00FCF6  A4D8               	btfss	status,2,c
 50587  00FCF8  0012               	return	
 50588                           
 50589                           ; BSR set to: 1
 50590                           ;usb_device.c: 1426: {
 50591                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 50592  00FCFA  0E01               	movlw	1
 50593  00FCFC  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50594                           
 50595                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 50596  00FCFE  51F9               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 50597  00FD00  A4D8               	btfss	status,2,c
 50598  00FD02  0012               	return	
 50599                           
 50600                           ; BSR set to: 1
 50601                           ;usb_device.c: 1429: {
 50602                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 50603  00FD04  0E01               	movlw	1
 50604  00FD06  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50605                           
 50606                           ; BSR set to: 1
 50607                           ;usb_device.c: 1434: if(controlTransferState == 2)
 50608  00FD08  0E02               	movlw	2
 50609  00FD0A  185A               	xorwf	_controlTransferState,w,c	;volatile
 50610  00FD0C  A4D8               	btfss	status,2,c
 50611  00FD0E  D015               	goto	i2l216
 50612                           
 50613                           ; BSR set to: 1
 50614                           ;usb_device.c: 1435: {
 50615                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 50616  00FD10  EE20 F001          	lfsr	2,1
 50617  00FD14  503B               	movf	_pBDTEntryIn,w,c
 50618  00FD16  26D9               	addwf	fsr2l,f,c
 50619  00FD18  503C               	movf	_pBDTEntryIn+1,w,c
 50620  00FD1A  22DA               	addwfc	fsr2h,f,c
 50621  00FD1C  0E00               	movlw	0
 50622  00FD1E  6EDF               	movwf	indf2,c
 50623                           
 50624                           ; BSR set to: 1
 50625                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50626  00FD20  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50627  00FD24  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50628  00FD28  0E48               	movlw	72
 50629  00FD2A  6EDF               	movwf	indf2,c
 50630                           
 50631                           ; BSR set to: 1
 50632                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50633  00FD2C  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50634  00FD30  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50635  00FD34  0E00               	movlw	0
 50636  00FD36  8EDB               	bsf	plusw2,7,c
 50637                           
 50638                           ;usb_device.c: 1439: }
 50639  00FD38  0012               	return	
 50640  00FD3A                     i2l216:
 50641                           
 50642                           ; BSR set to: 1
 50643                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 50644                           
 50645                           ; BSR set to: 1
 50646  00FD3A  045A               	decf	_controlTransferState,w,c	;volatile
 50647  00FD3C  A4D8               	btfss	status,2,c
 50648  00FD3E  0012               	return	
 50649                           
 50650                           ; BSR set to: 1
 50651                           ;usb_device.c: 1441: {
 50652                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 50653  00FD40  0E00               	movlw	0
 50654  00FD42  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50655                           
 50656                           ; BSR set to: 1
 50657                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 50658  00FD44  EE20 F001          	lfsr	2,1
 50659  00FD48  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 50660  00FD4A  26D9               	addwf	fsr2l,f,c
 50661  00FD4C  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50662  00FD4E  22DA               	addwfc	fsr2h,f,c
 50663  00FD50  0E08               	movlw	8
 50664  00FD52  6EDF               	movwf	indf2,c
 50665                           
 50666                           ; BSR set to: 1
 50667                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 50668  00FD54  EE20 F002          	lfsr	2,2
 50669  00FD58  5049               	movf	_pBDTEntryEP0OutCurrent,w,c
 50670  00FD5A  26D9               	addwf	fsr2l,f,c
 50671  00FD5C  504A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50672  00FD5E  22DA               	addwfc	fsr2h,f,c
 50673  00FD60  0E30               	movlw	48
 50674  00FD62  6EDE               	movwf	postinc2,c
 50675  00FD64  0E0D               	movlw	13
 50676  00FD66  6EDD               	movwf	postdec2,c
 50677                           
 50678                           ; BSR set to: 1
 50679                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 50680  00FD68  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50681  00FD6C  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50682  00FD70  0E04               	movlw	4
 50683  00FD72  6EDF               	movwf	indf2,c
 50684                           
 50685                           ; BSR set to: 1
 50686                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 50687  00FD74  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50688  00FD78  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50689  00FD7C  0E00               	movlw	0
 50690  00FD7E  8EDB               	bsf	plusw2,7,c
 50691                           
 50692                           ; BSR set to: 1
 50693                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 50694  00FD80  0E01               	movlw	1
 50695  00FD82  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50696                           
 50697                           ; BSR set to: 1
 50698                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 50699  00FD84  0100               	movlb	0	; () banked
 50700  00FD86  EE20 F001          	lfsr	2,1
 50701  00FD8A  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50702  00FD8C  26D9               	addwf	fsr2l,f,c
 50703  00FD8E  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50704  00FD90  22DA               	addwfc	fsr2h,f,c
 50705  00FD92  0E08               	movlw	8
 50706  00FD94  6EDF               	movwf	indf2,c
 50707                           
 50708                           ; BSR set to: 0
 50709                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50710  00FD96  EE20 F002          	lfsr	2,2
 50711  00FD9A  51FB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 50712  00FD9C  26D9               	addwf	fsr2l,f,c
 50713  00FD9E  51FC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 50714  00FDA0  22DA               	addwfc	fsr2h,f,c
 50715  00FDA2  0E30               	movlw	48
 50716  00FDA4  6EDE               	movwf	postinc2,c
 50717  00FDA6  0E0D               	movlw	13
 50718  00FDA8  6EDD               	movwf	postdec2,c
 50719                           
 50720                           ; BSR set to: 0
 50721                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 50722  00FDAA  C0FB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50723  00FDAE  C0FC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50724  00FDB2  0E80               	movlw	128
 50725  00FDB4  6EDF               	movwf	indf2,c
 50726                           
 50727                           ; BSR set to: 0
 50728                           
 50729                           ; BSR set to: 0
 50730                           
 50731                           ; BSR set to: 0
 50732  00FDB6  0012               	return	
 50733  00FDB8                     __end_of_USBCtrlEPAllowStatusStage:
 50734                           	opt stack 0
 50735                           tosu	equ	0xFFF
 50736                           tosh	equ	0xFFE
 50737                           tosl	equ	0xFFD
 50738                           pclatu	equ	0xFFB
 50739                           pclath	equ	0xFFA
 50740                           tblptru	equ	0xFF8
 50741                           tblptrh	equ	0xFF7
 50742                           tblptrl	equ	0xFF6
 50743                           tablat	equ	0xFF5
 50744                           prodh	equ	0xFF4
 50745                           prodl	equ	0xFF3
 50746                           intcon	equ	0xFF2
 50747                           intcon2	equ	0xFF1
 50748                           intcon3	equ	0xFF0
 50749                           indf0	equ	0xFEF
 50750                           postinc0	equ	0xFEE
 50751                           fsr0h	equ	0xFEA
 50752                           fsr0l	equ	0xFE9
 50753                           wreg	equ	0xFE8
 50754                           indf1	equ	0xFE7
 50755                           postinc1	equ	0xFE6
 50756                           postdec1	equ	0xFE5
 50757                           plusw1	equ	0xFE3
 50758                           fsr1h	equ	0xFE2
 50759                           fsr1l	equ	0xFE1
 50760                           indf2	equ	0xFDF
 50761                           postinc2	equ	0xFDE
 50762                           postdec2	equ	0xFDD
 50763                           plusw2	equ	0xFDB
 50764                           fsr2h	equ	0xFDA
 50765                           fsr2l	equ	0xFD9
 50766                           status	equ	0xFD8
 50767                           
 50768 ;; *************** function _USBCtrlTrfInHandler *****************
 50769 ;; Defined at:
 50770 ;;		line 2594 in file "usb_device.c"
 50771 ;; Parameters:    Size  Location     Type
 50772 ;;		None
 50773 ;; Auto vars:     Size  Location     Type
 50774 ;;  lastDTS         1    1[COMRAM] unsigned char 
 50775 ;; Return value:  Size  Location     Type
 50776 ;;                  1    wreg      void 
 50777 ;; Registers used:
 50778 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50779 ;; Tracked objects:
 50780 ;;		On entry : 0/0
 50781 ;;		On exit  : 0/0
 50782 ;;		Unchanged: 0/0
 50783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50788 ;;Total ram usage:        1 bytes
 50789 ;; Hardware stack levels used:    1
 50790 ;; Hardware stack levels required when called:    1
 50791 ;; This function calls:
 50792 ;;		_USBCtrlTrfTxService
 50793 ;; This function is called by:
 50794 ;;		_USBCtrlEPService
 50795 ;; This function uses a non-reentrant model
 50796 ;;
 50797                           
 50798                           	psect	text250
 50799  00FE7A                     __ptext250:
 50800                           	opt stack 0
 50801  00FE7A                     _USBCtrlTrfInHandler:
 50802                           	opt stack 14
 50803                           
 50804                           ;usb_device.c: 2596: uint8_t lastDTS;
 50805                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 50806                           
 50807                           ;incstack = 0
 50808  00FE7A  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50809  00FE7E  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50810  00FE82  0E00               	movlw	0
 50811  00FE84  BCDF               	btfsc	indf2,6,c
 50812  00FE86  0E01               	movlw	1
 50813  00FE88  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 50814                           
 50815                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50816  00FE8A  0E04               	movlw	4
 50817  00FE8C  183B               	xorwf	_pBDTEntryIn,w,c
 50818  00FE8E  6E3B               	movwf	_pBDTEntryIn,c
 50819  00FE90  503C               	movf	_pBDTEntryIn+1,w,c
 50820  00FE92  6E3C               	movwf	_pBDTEntryIn+1,c
 50821                           
 50822                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 50823  00FE94  0E08               	movlw	8
 50824  00FE96  185C               	xorwf	_USBDeviceState,w,c	;volatile
 50825  00FE98  A4D8               	btfss	status,2,c
 50826  00FE9A  D00C               	goto	i2l343
 50827                           
 50828                           ;usb_device.c: 2607: {
 50829                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 50830  00FE9C  010D               	movlb	13	; () banked
 50831  00FE9E  5132               	movf	50,w,b	;volatile
 50832  00FEA0  0B7F               	andlw	127
 50833  00FEA2  010F               	movlb	15	; () banked
 50834  00FEA4  6F38               	movwf	56,b	;volatile
 50835                           
 50836                           ; BSR set to: 15
 50837                           ;usb_device.c: 2609: if(UADDR != 0u)
 50838  00FEA6  5138               	movf	56,w,b	;volatile
 50839  00FEA8  B4D8               	btfsc	status,2,c
 50840  00FEAA  D002               	goto	i2l342
 50841                           
 50842                           ; BSR set to: 15
 50843                           ;usb_device.c: 2610: {
 50844                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 50845  00FEAC  0E10               	movlw	16
 50846  00FEAE  D001               	goto	L69
 50847  00FEB0                     i2l342:
 50848                           
 50849                           ; BSR set to: 15
 50850                           ;usb_device.c: 2613: else
 50851                           ;usb_device.c: 2614: {
 50852                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 50853                           
 50854                           ; BSR set to: 15
 50855  00FEB0  0E04               	movlw	4
 50856  00FEB2                     L69:
 50857  00FEB2  6E5C               	movwf	_USBDeviceState,c	;volatile
 50858  00FEB4                     i2l343:
 50859                           
 50860                           ;usb_device.c: 2616: }
 50861                           ;usb_device.c: 2617: }
 50862                           ;usb_device.c: 2620: if(controlTransferState == 1)
 50863                           
 50864                           ; BSR set to: 15
 50865                           
 50866                           ; BSR set to: 15
 50867  00FEB4  045A               	decf	_controlTransferState,w,c	;volatile
 50868  00FEB6  A4D8               	btfss	status,2,c
 50869  00FEB8  D03A               	goto	i2l344
 50870                           
 50871                           ;usb_device.c: 2621: {
 50872                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 50873  00FEBA  EE20 F002          	lfsr	2,2
 50874  00FEBE  503B               	movf	_pBDTEntryIn,w,c
 50875  00FEC0  26D9               	addwf	fsr2l,f,c
 50876  00FEC2  503C               	movf	_pBDTEntryIn+1,w,c
 50877  00FEC4  22DA               	addwfc	fsr2h,f,c
 50878  00FEC6  0E38               	movlw	56
 50879  00FEC8  6EDE               	movwf	postinc2,c
 50880  00FECA  0E0D               	movlw	13
 50881  00FECC  6EDD               	movwf	postdec2,c
 50882                           
 50883                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 50884  00FECE  EC7C  F07C         	call	_USBCtrlTrfTxService	;wreg free
 50885                           
 50886                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 50887  00FED2  0E02               	movlw	2
 50888  00FED4  185B               	xorwf	_shortPacketStatus,w,c	;volatile
 50889  00FED6  A4D8               	btfss	status,2,c
 50890  00FED8  D00D               	goto	i2l345
 50891                           
 50892                           ;usb_device.c: 2630: {
 50893                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 50894  00FEDA  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50895  00FEDE  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50896  00FEE2  0E04               	movlw	4
 50897  00FEE4  6EDF               	movwf	indf2,c
 50898                           
 50899                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50900  00FEE6  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50901  00FEEA  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50902  00FEEE  0E00               	movlw	0
 50903  00FEF0  8EDB               	bsf	plusw2,7,c
 50904                           
 50905                           ;usb_device.c: 2635: }
 50906  00FEF2  0012               	return	
 50907  00FEF4                     i2l345:
 50908                           
 50909                           ;usb_device.c: 2636: else
 50910                           ;usb_device.c: 2637: {
 50911                           ;usb_device.c: 2638: if(lastDTS == 0)
 50912  00FEF4  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 50913  00FEF6  A4D8               	btfss	status,2,c
 50914  00FEF8  D00D               	goto	i2l347
 50915                           
 50916                           ;usb_device.c: 2639: {
 50917                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50918  00FEFA  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50919  00FEFE  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50920  00FF02  0E48               	movlw	72
 50921  00FF04  6EDF               	movwf	indf2,c
 50922                           
 50923                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50924  00FF06  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50925  00FF0A  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50926  00FF0E  0E00               	movlw	0
 50927  00FF10  8EDB               	bsf	plusw2,7,c
 50928                           
 50929                           ;usb_device.c: 2642: }
 50930  00FF12  0012               	return	
 50931  00FF14                     i2l347:
 50932                           
 50933                           ;usb_device.c: 2643: else
 50934                           ;usb_device.c: 2644: {
 50935                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 50936  00FF14  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50937  00FF18  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50938  00FF1C  0E08               	movlw	8
 50939  00FF1E  6EDF               	movwf	indf2,c
 50940                           
 50941                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50942  00FF20  C03B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50943  00FF24  C03C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50944  00FF28  0E00               	movlw	0
 50945  00FF2A  8EDB               	bsf	plusw2,7,c
 50946                           
 50947                           ;usb_device.c: 2647: }
 50948                           ;usb_device.c: 2648: }
 50949                           ;usb_device.c: 2649: }
 50950  00FF2C  0012               	return	
 50951  00FF2E                     i2l344:
 50952                           
 50953                           ;usb_device.c: 2650: else
 50954                           ;usb_device.c: 2651: {
 50955                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 50956  00FF2E  BE35               	btfsc	_outPipes+3,7,c	;volatile
 50957                           
 50958                           ;usb_device.c: 2660: }
 50959                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 50960                           
 50961                           ;usb_device.c: 2658: {
 50962                           ;usb_device.c: 2659: outPipes[0].pFunc();
 50963  00FF30  9E35               	bcf	_outPipes+3,7,c	;volatile
 50964                           
 50965                           ;usb_device.c: 2662: }
 50966                           ;usb_device.c: 2664: controlTransferState = 0;
 50967  00FF32  0E00               	movlw	0
 50968  00FF34  6E5A               	movwf	_controlTransferState,c	;volatile
 50969  00FF36  0012               	return	
 50970  00FF38                     __end_of_USBCtrlTrfInHandler:
 50971                           	opt stack 0
 50972                           tosu	equ	0xFFF
 50973                           tosh	equ	0xFFE
 50974                           tosl	equ	0xFFD
 50975                           pclatu	equ	0xFFB
 50976                           pclath	equ	0xFFA
 50977                           tblptru	equ	0xFF8
 50978                           tblptrh	equ	0xFF7
 50979                           tblptrl	equ	0xFF6
 50980                           tablat	equ	0xFF5
 50981                           prodh	equ	0xFF4
 50982                           prodl	equ	0xFF3
 50983                           intcon	equ	0xFF2
 50984                           intcon2	equ	0xFF1
 50985                           intcon3	equ	0xFF0
 50986                           indf0	equ	0xFEF
 50987                           postinc0	equ	0xFEE
 50988                           fsr0h	equ	0xFEA
 50989                           fsr0l	equ	0xFE9
 50990                           wreg	equ	0xFE8
 50991                           indf1	equ	0xFE7
 50992                           postinc1	equ	0xFE6
 50993                           postdec1	equ	0xFE5
 50994                           plusw1	equ	0xFE3
 50995                           fsr1h	equ	0xFE2
 50996                           fsr1l	equ	0xFE1
 50997                           indf2	equ	0xFDF
 50998                           postinc2	equ	0xFDE
 50999                           postdec2	equ	0xFDD
 51000                           plusw2	equ	0xFDB
 51001                           fsr2h	equ	0xFDA
 51002                           fsr2l	equ	0xFD9
 51003                           status	equ	0xFD8
 51004                           
 51005 ;; *************** function _USBCtrlTrfTxService *****************
 51006 ;; Defined at:
 51007 ;;		line 1773 in file "usb_device.c"
 51008 ;; Parameters:    Size  Location     Type
 51009 ;;		None
 51010 ;; Auto vars:     Size  Location     Type
 51011 ;;  byteToSend      1    0[COMRAM] unsigned char 
 51012 ;; Return value:  Size  Location     Type
 51013 ;;                  1    wreg      void 
 51014 ;; Registers used:
 51015 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 51016 ;; Tracked objects:
 51017 ;;		On entry : 0/0
 51018 ;;		On exit  : 0/0
 51019 ;;		Unchanged: 0/0
 51020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51025 ;;Total ram usage:        1 bytes
 51026 ;; Hardware stack levels used:    1
 51027 ;; This function calls:
 51028 ;;		Nothing
 51029 ;; This function is called by:
 51030 ;;		_USBCtrlEPAllowDataStage
 51031 ;;		_USBCtrlTrfInHandler
 51032 ;; This function uses a non-reentrant model
 51033 ;;
 51034                           
 51035                           	psect	text251
 51036  00F8F8                     __ptext251:
 51037                           	opt stack 0
 51038  00F8F8                     _USBCtrlTrfTxService:
 51039                           	opt stack 12
 51040                           
 51041                           ;usb_device.c: 1775: uint8_t byteToSend;
 51042                           ;usb_device.c: 1779: byteToSend = 8;
 51043                           
 51044                           ;incstack = 0
 51045  00F8F8  0E08               	movlw	8
 51046  00F8FA  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 51047                           
 51048                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 51049  00F8FC  0100               	movlb	0	; () banked
 51050  00F8FE  51F8               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 51051  00F900  E110               	bnz	i2l11799
 51052  00F902  0E08               	movlw	8
 51053  00F904  5DF7               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 51054  00F906  B0D8               	btfsc	status,0,c
 51055  00F908  D00C               	goto	i2l249
 51056                           
 51057                           ; BSR set to: 0
 51058                           ;usb_device.c: 1781: {
 51059                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 51060  00F90A  C0F7  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 51061                           
 51062                           ; BSR set to: 0
 51063                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 51064  00F90E  505B               	movf	_shortPacketStatus,w,c	;volatile
 51065  00F910  A4D8               	btfss	status,2,c
 51066  00F912  D002               	goto	i2l247
 51067                           
 51068                           ; BSR set to: 0
 51069                           ;usb_device.c: 1790: {
 51070                           ;usb_device.c: 1791: shortPacketStatus = 1;
 51071  00F914  0E01               	movlw	1
 51072  00F916  D004               	goto	L70
 51073  00F918                     i2l247:
 51074                           
 51075                           ; BSR set to: 0
 51076                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 51077                           
 51078                           ; BSR set to: 0
 51079  00F918  045B               	decf	_shortPacketStatus,w,c	;volatile
 51080  00F91A  A4D8               	btfss	status,2,c
 51081  00F91C  D002               	goto	i2l249
 51082                           
 51083                           ; BSR set to: 0
 51084                           ;usb_device.c: 1794: {
 51085                           ;usb_device.c: 1795: shortPacketStatus = 2;
 51086  00F91E  0E02               	movlw	2
 51087  00F920                     L70:
 51088  00F920  6E5B               	movwf	_shortPacketStatus,c	;volatile
 51089  00F922                     i2l249:
 51090  00F922                     i2l11799:
 51091                           
 51092                           ; BSR set to: 0
 51093                           ;usb_device.c: 1796: }
 51094                           ;usb_device.c: 1797: }
 51095                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 51096  00F922  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 51097  00F924  5FF7               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 51098  00F926  0E00               	movlw	0
 51099  00F928  5BF8               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 51100                           
 51101                           ; BSR set to: 0
 51102                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 51103  00F92A  EE20 F001          	lfsr	2,1
 51104  00F92E  503B               	movf	_pBDTEntryIn,w,c
 51105  00F930  26D9               	addwf	fsr2l,f,c
 51106  00F932  503C               	movf	_pBDTEntryIn+1,w,c
 51107  00F934  22DA               	addwfc	fsr2h,f,c
 51108  00F936  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 51109                           
 51110                           ; BSR set to: 0
 51111                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 51112  00F93A  0E38               	movlw	56
 51113  00F93C  0101               	movlb	1	; () banked
 51114  00F93E  6FE9               	movwf	_pDst& (0+255),b
 51115  00F940  0E0D               	movlw	13
 51116  00F942  6FEA               	movwf	(_pDst+1)& (0+255),b
 51117                           
 51118                           ; BSR set to: 1
 51119                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 51120  00F944  0100               	movlb	0	; () banked
 51121  00F946  A1F6               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 51122  00F948  D01E               	goto	i2l251
 51123  00F94A  D03E               	goto	i2l255
 51124  00F94C                     
 51125                           ;usb_device.c: 1814: {
 51126                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 51127                           
 51128                           ; BSR set to: 0
 51129  00F94C  C0F3  FFF6         	movff	_inPipes,tblptrl	;volatile
 51130  00F950  C0F4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 51131  00F954  0E00               	movlw	low (__mediumconst shr (0+16))
 51132  00F956  6EF8               	movwf	tblptru,c
 51133  00F958  C1E9  FFD9         	movff	_pDst,fsr2l
 51134  00F95C  C1EA  FFDA         	movff	_pDst+1,fsr2h
 51135  00F960  0E0E               	movlw	(high __ramtop+-1)
 51136  00F962  64F7               	cpfsgt	tblptrh,c
 51137  00F964  D003               	bra	i2u912_47
 51138  00F966  0008               	tblrd		*
 51139  00F968  50F5               	movf	tablat,w,c
 51140  00F96A  D005               	bra	i2u912_40
 51141  00F96C                     i2u912_47:
 51142  00F96C  CFF6 FFE9          	movff	tblptrl,fsr0l
 51143  00F970  CFF7 FFEA          	movff	tblptrh,fsr0h
 51144  00F974  50EF               	movf	indf0,w,c
 51145  00F976                     i2u912_40:
 51146  00F976  6EDF               	movwf	indf2,c
 51147  00F978  0100               	movlb	0	; () banked
 51148  00F97A  4BF3               	infsnz	_inPipes& (0+255),f,b	;volatile
 51149  00F97C  2BF4               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 51150                           
 51151                           ; BSR set to: 0
 51152  00F97E  0101               	movlb	1	; () banked
 51153  00F980  4BE9               	infsnz	_pDst& (0+255),f,b
 51154  00F982  2BEA               	incf	(_pDst+1)& (0+255),f,b
 51155                           
 51156                           ; BSR set to: 1
 51157                           ;usb_device.c: 1816: byteToSend--;
 51158  00F984  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 51159  00F986                     i2l251:
 51160                           
 51161                           ; BSR set to: 1
 51162  00F986  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 51163  00F988  B4D8               	btfsc	status,2,c
 51164  00F98A  0012               	return	
 51165  00F98C  D7DF               	goto	i2l252
 51166  00F98E                     
 51167                           ;usb_device.c: 1822: {
 51168                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 51169  00F98E  C0F3  FFF6         	movff	_inPipes,tblptrl	;volatile
 51170  00F992  C0F4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 51171  00F996  0E00               	movlw	low (__mediumconst shr (0+16))
 51172  00F998  6EF8               	movwf	tblptru,c
 51173  00F99A  C1E9  FFD9         	movff	_pDst,fsr2l
 51174  00F99E  C1EA  FFDA         	movff	_pDst+1,fsr2h
 51175  00F9A2  0E0E               	movlw	(high __ramtop+-1)
 51176  00F9A4  64F7               	cpfsgt	tblptrh,c
 51177  00F9A6  D003               	bra	i2u914_47
 51178  00F9A8  0008               	tblrd		*
 51179  00F9AA  50F5               	movf	tablat,w,c
 51180  00F9AC  D005               	bra	i2u914_40
 51181  00F9AE                     i2u914_47:
 51182  00F9AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 51183  00F9B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 51184  00F9B6  50EF               	movf	indf0,w,c
 51185  00F9B8                     i2u914_40:
 51186  00F9B8  6EDF               	movwf	indf2,c
 51187  00F9BA  0100               	movlb	0	; () banked
 51188  00F9BC  4BF3               	infsnz	_inPipes& (0+255),f,b	;volatile
 51189  00F9BE  2BF4               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 51190                           
 51191                           ; BSR set to: 0
 51192  00F9C0  0101               	movlb	1	; () banked
 51193  00F9C2  4BE9               	infsnz	_pDst& (0+255),f,b
 51194  00F9C4  2BEA               	incf	(_pDst+1)& (0+255),f,b
 51195                           
 51196                           ; BSR set to: 1
 51197                           ;usb_device.c: 1824: byteToSend--;
 51198  00F9C6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 51199  00F9C8                     i2l255:
 51200                           
 51201                           ; BSR set to: 1
 51202  00F9C8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 51203  00F9CA  B4D8               	btfsc	status,2,c
 51204  00F9CC  0012               	return	
 51205  00F9CE  D7DF               	goto	i2l256
 51206  00F9D0                     __end_of_USBCtrlTrfTxService:
 51207                           	opt stack 0
 51208                           tosu	equ	0xFFF
 51209                           tosh	equ	0xFFE
 51210                           tosl	equ	0xFFD
 51211                           pclatu	equ	0xFFB
 51212                           pclath	equ	0xFFA
 51213                           tblptru	equ	0xFF8
 51214                           tblptrh	equ	0xFF7
 51215                           tblptrl	equ	0xFF6
 51216                           tablat	equ	0xFF5
 51217                           prodh	equ	0xFF4
 51218                           prodl	equ	0xFF3
 51219                           intcon	equ	0xFF2
 51220                           intcon2	equ	0xFF1
 51221                           intcon3	equ	0xFF0
 51222                           indf0	equ	0xFEF
 51223                           postinc0	equ	0xFEE
 51224                           fsr0h	equ	0xFEA
 51225                           fsr0l	equ	0xFE9
 51226                           wreg	equ	0xFE8
 51227                           indf1	equ	0xFE7
 51228                           postinc1	equ	0xFE6
 51229                           postdec1	equ	0xFE5
 51230                           plusw1	equ	0xFE3
 51231                           fsr1h	equ	0xFE2
 51232                           fsr1l	equ	0xFE1
 51233                           indf2	equ	0xFDF
 51234                           postinc2	equ	0xFDE
 51235                           postdec2	equ	0xFDD
 51236                           plusw2	equ	0xFDB
 51237                           fsr2h	equ	0xFDA
 51238                           fsr2l	equ	0xFD9
 51239                           status	equ	0xFD8
 51240                           tosu	equ	0xFFF
 51241                           tosh	equ	0xFFE
 51242                           tosl	equ	0xFFD
 51243                           pclatu	equ	0xFFB
 51244                           pclath	equ	0xFFA
 51245                           tblptru	equ	0xFF8
 51246                           tblptrh	equ	0xFF7
 51247                           tblptrl	equ	0xFF6
 51248                           tablat	equ	0xFF5
 51249                           prodh	equ	0xFF4
 51250                           prodl	equ	0xFF3
 51251                           intcon	equ	0xFF2
 51252                           intcon2	equ	0xFF1
 51253                           intcon3	equ	0xFF0
 51254                           indf0	equ	0xFEF
 51255                           postinc0	equ	0xFEE
 51256                           fsr0h	equ	0xFEA
 51257                           fsr0l	equ	0xFE9
 51258                           wreg	equ	0xFE8
 51259                           indf1	equ	0xFE7
 51260                           postinc1	equ	0xFE6
 51261                           postdec1	equ	0xFE5
 51262                           plusw1	equ	0xFE3
 51263                           fsr1h	equ	0xFE2
 51264                           fsr1l	equ	0xFE1
 51265                           indf2	equ	0xFDF
 51266                           postinc2	equ	0xFDE
 51267                           postdec2	equ	0xFDD
 51268                           plusw2	equ	0xFDB
 51269                           fsr2h	equ	0xFDA
 51270                           fsr2l	equ	0xFD9
 51271                           status	equ	0xFD8
 51272                           
 51273                           	psect	text252
 51274  000000                     __ptext252:
 51275                           	opt stack 0
 51276                           tosu	equ	0xFFF
 51277                           tosh	equ	0xFFE
 51278                           tosl	equ	0xFFD
 51279                           pclatu	equ	0xFFB
 51280                           pclath	equ	0xFFA
 51281                           tblptru	equ	0xFF8
 51282                           tblptrh	equ	0xFF7
 51283                           tblptrl	equ	0xFF6
 51284                           tablat	equ	0xFF5
 51285                           prodh	equ	0xFF4
 51286                           prodl	equ	0xFF3
 51287                           intcon	equ	0xFF2
 51288                           intcon2	equ	0xFF1
 51289                           intcon3	equ	0xFF0
 51290                           indf0	equ	0xFEF
 51291                           postinc0	equ	0xFEE
 51292                           fsr0h	equ	0xFEA
 51293                           fsr0l	equ	0xFE9
 51294                           wreg	equ	0xFE8
 51295                           indf1	equ	0xFE7
 51296                           postinc1	equ	0xFE6
 51297                           postdec1	equ	0xFE5
 51298                           plusw1	equ	0xFE3
 51299                           fsr1h	equ	0xFE2
 51300                           fsr1l	equ	0xFE1
 51301                           indf2	equ	0xFDF
 51302                           postinc2	equ	0xFDE
 51303                           postdec2	equ	0xFDD
 51304                           plusw2	equ	0xFDB
 51305                           fsr2h	equ	0xFDA
 51306                           fsr2l	equ	0xFD9
 51307                           status	equ	0xFD8
 51308                           
 51309                           	psect	rparam
 51310  0000                     tosu	equ	0xFFF
 51311                           tosh	equ	0xFFE
 51312                           tosl	equ	0xFFD
 51313                           pclatu	equ	0xFFB
 51314                           pclath	equ	0xFFA
 51315                           tblptru	equ	0xFF8
 51316                           tblptrh	equ	0xFF7
 51317                           tblptrl	equ	0xFF6
 51318                           tablat	equ	0xFF5
 51319                           prodh	equ	0xFF4
 51320                           prodl	equ	0xFF3
 51321                           intcon	equ	0xFF2
 51322                           intcon2	equ	0xFF1
 51323                           intcon3	equ	0xFF0
 51324                           indf0	equ	0xFEF
 51325                           postinc0	equ	0xFEE
 51326                           fsr0h	equ	0xFEA
 51327                           fsr0l	equ	0xFE9
 51328                           wreg	equ	0xFE8
 51329                           indf1	equ	0xFE7
 51330                           postinc1	equ	0xFE6
 51331                           postdec1	equ	0xFE5
 51332                           plusw1	equ	0xFE3
 51333                           fsr1h	equ	0xFE2
 51334                           fsr1l	equ	0xFE1
 51335                           indf2	equ	0xFDF
 51336                           postinc2	equ	0xFDE
 51337                           postdec2	equ	0xFDD
 51338                           plusw2	equ	0xFDB
 51339                           fsr2h	equ	0xFDA
 51340                           fsr2l	equ	0xFD9
 51341                           status	equ	0xFD8
 51342                           
 51343                           	psect	temp
 51344  00005F                     btemp:
 51345                           	opt stack 0
 51346  00005F                     	ds	1
 51347  0000                     int$flags	set	btemp
 51348  0000                     wtemp6	set	btemp+1
 51349                           tosu	equ	0xFFF
 51350                           tosh	equ	0xFFE
 51351                           tosl	equ	0xFFD
 51352                           pclatu	equ	0xFFB
 51353                           pclath	equ	0xFFA
 51354                           tblptru	equ	0xFF8
 51355                           tblptrh	equ	0xFF7
 51356                           tblptrl	equ	0xFF6
 51357                           tablat	equ	0xFF5
 51358                           prodh	equ	0xFF4
 51359                           prodl	equ	0xFF3
 51360                           intcon	equ	0xFF2
 51361                           intcon2	equ	0xFF1
 51362                           intcon3	equ	0xFF0
 51363                           indf0	equ	0xFEF
 51364                           postinc0	equ	0xFEE
 51365                           fsr0h	equ	0xFEA
 51366                           fsr0l	equ	0xFE9
 51367                           wreg	equ	0xFE8
 51368                           indf1	equ	0xFE7
 51369                           postinc1	equ	0xFE6
 51370                           postdec1	equ	0xFE5
 51371                           plusw1	equ	0xFE3
 51372                           fsr1h	equ	0xFE2
 51373                           fsr1l	equ	0xFE1
 51374                           indf2	equ	0xFDF
 51375                           postinc2	equ	0xFDE
 51376                           postdec2	equ	0xFDD
 51377                           plusw2	equ	0xFDB
 51378                           fsr2h	equ	0xFDA
 51379                           fsr2l	equ	0xFD9
 51380                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      94
    BANK0           160    147     160
    BANK1           256    211     256
    BANK2           256      0     252
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK0[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK0[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2729	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2695	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2694	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2641	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2640	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2272$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2272$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2272$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2272$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2272$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S2272$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2272$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2272$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S142$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S132$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S132$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S108$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S108$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S108$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S108$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_log_write_to_disk
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_rtcc_write_eeprom
    _rtcc_correct_day->__number_of_days
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bcd_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_month_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_day_decimal->__rtcc_bcd_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bcd_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___altoft->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  472521
                                            145 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   29573
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2538
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2562
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2562
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2584
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   19327
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     176
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1430
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1249
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1430
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   23355
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0   10113
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     8     8      0   10113
                                             43 BANK0      8     8      0
                   __rtcc_verify_bcd
                    _i2c_eeprom_read
                   _rtcc_correct_day
                       _rtcc_get_day
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     271
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     181
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) __rtcc_verify_bcd                                     4     2      2    1310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     113
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      66
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    5739
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4008
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1278
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    7319
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    7319
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    2786
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    2787
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    2786
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    2787
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  195920
                                            112 BANK0     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    5922
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2     791
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4     844
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     226
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   81960
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    7752
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4    8731
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    7660
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4   99174
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   21884
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   22508
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   21504
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2     999
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     433
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     433
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    7570
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    7771
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    7883
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    7884
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0    9322
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     113
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bcd_to_decimal                                 3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    4724
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    4328
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    3622
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    3599
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3319
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     113
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3966
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     890
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3076
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    2584
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   38823
                                            114 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     459
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    1902
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    6918
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     482
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    6918
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 66    66      0   14681
                                             48 BANK0     66    66      0
                            ___aldiv
                           ___altoft
                            ___fttol
                             ___lmul
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     341
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3005
                                             14 BANK0     10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2778
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1546
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    7261
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6458
                                             24 BANK0     24    19      5
                            ___fttol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     179
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    1854
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   15342
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    6235
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0      90
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0    9107
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    3306
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     646
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     135
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2035
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1942
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    3408
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2736
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  115612
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  115612
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  109210
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   55356
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53650
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   23835
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15061
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   14716
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16476
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7894
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    7613
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    7391
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2335
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8     888
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   17596
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    3552
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    3442
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3298
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2448
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     618
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      22
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0      89
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     691
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     112
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      26
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     382
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     382
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     222
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    3536
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    3536
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    3536
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    4603
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  18    18      0   54622
                                             31 COMRAM    18    18      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___fttol
       ___lmul
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bcd_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         __rtcc_verify_bcd
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_correct_day
           __number_of_days
             _rtcc_get_month
             _rtcc_get_year
           _rtcc_get_day
           _rtcc_set_day
             __rtcc_write_disable
             __rtcc_write_enable
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4B1      31        0.0%
DATA                 0      0     6B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jul 23 22:13:41 2018

                rtcc_get_year_decimal@bcd_year 0063                                   ___altoft@exp 0076  
                                   _USB_SD_Ptr 9327                       fat_create_file@extension 009D  
       __end_of_i2c_display_send_init_sequence 26C8        __size_of_i2c_display_send_init_sequence 002E  
               _i2c_display_send_init_sequence 269A                            __system_timer0_init 22F6  
                      rtcc_set_minutes@minutes 0060                                  ___altoft@sign 0077  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit D65A  
                           _USBCheckHIDRequest F65E                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day 2978  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init EB0A                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 0010           USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                  __display_efficiency@battery 00CD                              ?__rtcc_verify_bcd 0060  
                                          l151 D708                                            l208 2600  
                                          l209 25FE                                            l147 D6A4  
                                          l149 D6CC                    __end_of_USBStdGetDscHandler DDF8  
                                          l190 E9C2                                  ?_i2c_adc_read 0065  
                                          l186 E91A                                            l194 E750  
                                          l188 E944                                            l700 D108  
                                          l612 DE74                                            l710 BB3A  
                                          l630 180A                                            l606 C6F6  
                                          l623 1812                                            l704 BD3E  
                                          l712 BB62                                            l640 A31C  
                                          l624 17D8                                            l616 DF20  
                                          l713 BBAA                                            l705 BA90  
                                          l641 A326                                            l617 DF1A  
                                          l609 C6FC                                            l730 EF18  
                                          l722 BCF6                                            l714 BB84  
                                          l634 A670                                            l650 A4D4  
                                          l626 17F4                                            l707 BD60  
                                          l723 BD0E                                            l715 BBF0  
                                          l643 A378                                            l635 A300  
                                          l619 DF24                                            l732 EF2C  
                                          l724 BD26                                            l716 BBEC  
                                          l708 BB36                                            l660 A596  
                                          l644 A438                                            l628 17FE  
                                          l741 EFCC                                            l653 A506  
                                          l645 A442                                            l629 1804  
                                          l581 C62C                                            l901 B4A4  
                                          l742 EFB6                                            l718 BC04  
                                          l670 A61A                                            l654 A532  
                                          l646 A466                                            l638 A30E  
                                          l574 C714                                            l582 C612  
                                          l590 C730                                            l910 B584  
                                          l902 B4CC                                            l735 EF66  
                                          l719 BC86                                            l671 A62E  
                                          l591 C64C                                            l583 C5EC  
                                          l575 C4EA                                            l903 B71A  
                                          l664 A5D2                                            l656 A566  
                                          l648 A494                                            l584 C5F4  
                                          l912 B58A                                            l904 B518  
                                          l681 0054                                            l761 E3E4  
                                          l753 EFDE                                            l665 A5E6  
                                          l593 C658                                            l905 B77E  
                                          l921 B612                                            l770 E418  
                                          l738 EF72                                            l690 CFC8  
                                          l674 A668                                            l666 A604  
                                          l658 A580                                            l586 C608  
                                          l906 B52A                                            l771 E426  
                                          l739 EF98                                            l691 CFD2  
                                          l595 C67A                                            l579 C50C  
                                          l931 B702                                            l907 B530  
                                          l772 E43A                                            l692 CFE6  
                                          l668 A630                                            l596 C67E  
                                          l932 B70A                                            l916 B5CC  
                                          l908 B570                                            _BDT 000D00  
                                          l773 E448                                            l757 EFEE  
                                          l685 D120                                            l669 A60A  
                                          l597 C6A4                                            l774 E45C  
                                          l694 D036                                            l686 CF66  
                                          l950 1A5E                                            l679 003E  
                                          l767 E4A6                                            l775 E498  
                                          l695 D060                                            l927 B666  
                                          l768 E410                                            l688 D144  
                                          l696 D08E                                            l952 1A6A  
                                          l928 B66C                                            l697 D0A0  
                                          l689 CFBC                                            l929 B6F2  
                                          l698 D0A6                  __size_of__sector_from_cluster 0010  
                                          l699 D0BA                                            l956 1A7C  
                     __display_time@presshours 014E                                            l949 1A9A  
                                          l958 1A88                                            l899 B482  
                                          _LBA 01D9                      _buck_remote_get_dutycycle 2F46  
                                          _PR2 000FCB                       __display_time@pressmonth 013C  
                                          _LUN 02BF                                            _UIE 000F36  
                                          _UIR 000F62                           _i2c_digipot_reset_on 2906  
                __size_of_rtcc_decrement_hours 0022             system_calculate_output_voltage@tmp 0070  
                   __end_of_buck_get_dutycycle 2F58                       ??_rtcc_increment_minutes 0068  
                __size_of_rtcc_decrement_month 0022                       ??_rtcc_increment_seconds 0068  
                                          _idx 004C                                     _USBSuspend 266A  
                                          _now 029E                         __end_of_display_update 0F86  
                         USBStdSetCfgHandler@i 0018                         i2c_eeprom_read@address 0071  
                           ??__rtcc_verify_bcd 0062                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                               _USBDeviceTasks DA32                            ?_USBCheckHIDRequest 0001  
                                 __CFG_IESO$ON 000000                            ?_rtcc_increment_day 0001  
                               _USBDeviceState 005C                               _rtcc_read_eeprom DB76  
                                 ?__write_root 0088                            _rtcc_increment_year 29E8  
                      rtcc_set_seconds@seconds 0060                          ??_USBCtrlTrfRxService 0001  
                         __read_fat@fat_sector 0089                       __size_ofi2_USBDeviceInit 0146  
                     USBEnableEndpoint@options 0009                        __buck_initial_dutycycle FF38  
                            ??_MSDErrorHandler 0068                           ?__system_timer0_init 0001  
                     fat_create_file@root_slot 00AB                    __flash_write_to_buffer@data 0075  
                                         l1111 B0D4                                           l1103 AF1C  
                                         l1112 AFE4                                           l1113 B10A  
                                         l1105 AF3A                                           l1130 1F62  
                                         l1114 B000                                           l2010 96B2  
                                         l1123 1FB2                                           l1115 B038  
                                         l2011 968C                                           l1132 1F6E  
                                         l1116 B0CE                                           l2100 CA90  
                                         l1125 1FBE                                           l2101 CA6A  
                                         l2013 9A1A                                           l2005 99EE  
                                         l2021 9750                                           l1150 F302  
                                         l1070 ADD4                                           l2110 CB5A  
                                         l2030 97DC                                           l2022 977C  
                                         l2014 96CA                                           l2006 9644  
                                         l1143 F352                                           l1151 F30A  
                                         l2111 CB2A                                           l2103 CAD2  
                                         l2023 9756                                           l2015 96F6  
                                         l2007 9670                                           l1160 F34C  
                                         l1152 F312                                           l1144 F2DA  
                                         l2104 CAAC                                           l2200 D22A  
                                         l2040 98A4                                           l2032 9844  
                                         l2016 96D0                                           l2008 964A  
                                         l1153 F31A                                           l1081 AFDE  
                                         l1233 2DCC                                           l2113 CB36  
                                         l2201 D204                                           l2033 981E  
                                         l2025 97BE                                           l1401 296E  
                                         l1170 F216                                           l1410 2004  
                                         l1154 F322                                           l1146 F2E2  
                                         l1090 AE8C                                           l1082 AE24  
                                         l2114 CB42                                           l2106 CAF8  
                                         l2050 9994                                           l2042 98E2  
                                         l2026 9798                                           l2018 9738  
                                         l3002 FAF8                                           l1171 F220  
                                         l1411 200A                                           l1155 F32A  
                                         l1147 F2EA                                           l2115 CB4E  
                                         l2107 CB08                                           l2203 D286  
                                         l2051 996E                                           l2043 990E  
                                         l2035 985C                                           l2019 9712  
                                         l1164 F274                                           l1180 F26A  
                                         l1172 F22A                                           l1420 1BD6  
                                         l1412 2010                                           l1156 F332  
                                         l1148 F2F2                                           l1076 AFAA  
                                         l2108 CB18                                           l2204 D260  
                                         l2044 98E8                                           l2036 9888  
                                         l2028 97D6                                           l3020 D47C  
                                         l1173 F232                                           l1165 F1EE  
                                         l1421 1BDA                                           l1157 F33A  
                                         l1149 F2FA                                           l1077 ADF0  
                                         l2053 99D6                                           l2037 9862  
                                         l2029 9802                                           l3021 D4B2  
                                         l1174 F23A                                           l1510 2F2C  
                                         l1422 1BDE                                           l1406 2014  
                                         l1158 F340                                           l1094 AEC0  
                                         l1086 AE58                                           l2150 BA52  
                                         l2206 D2E2                                           l2054 99B0  
                                         l2046 9950                                           l3014 D330  
                                         l1191 DFE2                                           l1175 F242  
                                         l1167 F1F8                                           l1407 1FF8  
                                         l1159 F346                                           l2143 B8F4  
                                         l2207 D2BC                                           l2047 992A  
                                         l2039 98CA                                           l2071 D5BC  
                                         l1192 DFEA                                           l1184 DFBA  
                                         l1176 F24A                                           l1168 F202  
                                         l1416 1BE2                                           l2152 B978  
                                         l2144 B8CC                                           l2080 D61C  
                                         l2072 D596                                           l1504 2F04  
                                         l3008 FB50                                           l3016 D342  
                                         l1440 E072                                           l2400 DC50  
                                         l1193 DFF2                                           l1185 DF3C  
                                         l1177 F252                                           l1169 F20C  
                                         l1417 1BCE                                           l1409 1FFE  
                                         l2161 B9F8                                           l2153 B952  
                                         l2137 B8B0                                           l2049 9968  
                                         l3041 C7B0                                           l3017 D390  
                                         l1433 E196                                           l2401 DC7A  
                                         l1194 DFFA                                           l2250 2D88  
                                         l1178 F25A                                           l1418 1C04  
                                         l1098 AEF4                                           l2162 B9D2  
                                         l2138 B88A                                           l1522 2EFC  
                                         l3042 C78A                                           l3018 D4B8  
                                         l2402 DCA4                                           l2307 2E98  
                                         l1195 E002                                           l1187 DF68  
                                         l2243 2D7E                                           l1179 F262  
                                         l1419 1BD2                                           l1099 AEF8  
                                         l2155 BA6E                                           l2075 D604  
                                         l2067 D566                                           l3019 D45A  
                                         l1188 E012                                           l1196 E00A  
                                         l2244 2D72                                           l1540 116E  
                                         l2148 B90E                                           l2180 B38A  
                                         l2076 D5DE                                           l2068 D540  
                                         l1516 2F10                                           l3300 BF98  
                                         l3044 C908                                           l2260 2708  
                                         l2325 2EC2                                           l1189 DFDA  
                                         l1533 11B4                                           l1541 1172  
                                         l2501 FCA8                                           l2165 BA38  
                                         l2157 B9B8                                           l2181 B364  
                                         l2093 C9F8                                           l3301 BFA8  
                                         l3045 C828                                           l1373 2316  
                                         l1534 1166                                           l2166 BA12  
                                         l2158 B992                                           l2094 C9D2  
                                         l3302 BFB8                                           l3046 C880  
                                         l3038 C742                                           l1374 2304  
                                         l1630 E3B2                                           l2270 14B4  
                                         l2262 2720                                           l2343 2EB4  
                                         l1551 1EEC                                           l1543 119C  
                                         l1535 11CA                                           l1615 0C76  
                                         l2183 B400                                           l2079 D642  
                                         l3303 BFC8                                           l3047 C8C6  
                                         l1375 2326                                           l1631 E354  
                                         l2271 14B8                                           l1391 EADA  
                                         l2255 26DA                                           l1552 1ECE  
                                         l1544 118E                                           l1616 0C46  
                                         l2512 10DE                                           l2520 10AE  
                                         l2504 FCCA                                           l2184 B3DA  
                                         l3304 BFD8                                           l1376 230C  
                                         l1640 A2CE                                           l1632 E35C  
                                         l1624 E2A8                                           l2361 2EA6  
                                         l2249 2D94                                           l1537 1176  
                                         l2521 10BA                                           l2513 1080  
                                         l3401 0FB6                                           l2177 B348  
                                         l2097 CA4C                                           l3305 BFE8  
                                         l1641 9F3E                                           l1633 E364  
                                         l2265 1488                                           l2257 26F2  
                                         l1801 A8B6                                           l1546 1192  
                                         l1538 116A                                           l2506 FCE6  
                                         l2530 272E                                           l2610 1942  
                                         l2602 1936                                           l3402 0FAA  
                                         l2178 B322                                           l2098 CA26  
                                         l3306 BFF8                                           l1634 E36C  
                                         l1626 E330                                           l2274 2178  
                                         l1810 A91A                                           l1802 A8C2  
                                         l1547 1196                                           l2515 108C  
                                         l2603 1930                                           l3315 1294  
                                         l1643 9FC2                                           l1635 E374  
                                         l1803 A8CC                                           l1660 1F24  
                                         l2620 2C0E                                           l2524 10CA  
                                         l2532 274C                                           l2604 1914  
                                         l1652 05D2                                           l1396 2C62  
                                         l1644 A044                                           l1628 E384  
                                         l1636 E37C                                           l2276 218A  
                                         l1820 A96A                                           l1804 A8E2  
                   USBConfigureEndpoint@handle 0007                                           l1661 1F04  
                                         l2517 10A0                                           l2541 9B30  
                                         l2605 18FE                                           l2197 D1E8  
                                         l1645 A0C6                                           l1557 0550  
                                         l1629 E34C                                           l2277 2196  
                                         l1821 A974                                           l1813 A926  
                                         l2630 2D52                                           l2550 9C00  
                                         l2606 1928                                           l2198 D1C2  
                                         l1646 A148                                           l1558 0532  
                                         l2278 21A2                                           l1822 A982  
                                         l1814 A932                                           l1495 2F34  
                                         l2607 1902                                           l1647 A1CA  
                                         l1831 A9B8                                           l1815 A93C  
                                         l1807 A8EE                                           l1751 A6DE  
                                         l3328 1B78                                           l2480 1392  
                                         l2560 9DA8                                           l2552 9C38  
                                         l2544 9B64                                           l2608 190A  
                                         l1920 CCE2                                           l1672 112A  
                                         l1680 111A                                           l3280 2480  
                                         l1648 A24C                                           l1744 A9E0  
                                         l1832 A9C6                                           l1824 A98A  
                                         l1816 A952                                           l1808 A8FA  
                                         l1760 A732                                           l1752 A6EC  
                                         l2289 2E7C                                           l2625 2D6A  
                                         l3329 1B8C                                           l2537 9F1E  
                                         l1913 CC56                                           l1585 1A4A  
                                         l1681 1122                                           l1809 A904  
                                         l1761 A73C                                           l1745 A6BA  
                                         l2650 276E                                           l2642 2144  
                                         l2474 FF58                                           l2570 9F16  
                                         l2562 9DB2                                           l2546 9B86  
                                         l2538 9AC8                                           l1930 CD44  
                                         l1906 2090                                           l1586 1A2C  
                                         l1834 A9CE                                           l1826 A996  
                                         l1770 A794                                           l1762 A74C  
                                         l1754 A6F4                                           l1746 A6CA  
                                         l2651 277A                                           l2379 2E8A  
                                         l2635 29D6                                           l2803 0E2C  
                                         l1923 CCC6                                           l3531 00CE  
                                         l1667 2812                                           l1675 10F2  
                                         l1827 A9A4                                           l1819 A95E  
                                         l1771 A79E                                           l1755 A6FE  
                                         l1843 EBE2                                           l1851 EB7C  
                                         l2644 215A                                           l2804 0E36  
                                         l2476 FFCE                                           l2484 13AC  
                                         l2564 9DDE                                           l2556 9C78  
                                         l2548 9BD4                                           l2492 1532  
                                         l1924 CCDA                                           l1908 209C  
                                         l3380 FA76                                           l3372 F9EE  
                                         l3532 00C4                                           l1940 0BB6  
                                         l1676 10FA                                           l2396 DBB8  
                                         l1836 A9DA                                           l1780 A7F0  
                                         l1772 A7AE                                           l1764 A754  
                                         l1756 A708                                           l1748 A6D2  
                                         l1852 EB9C                                           l1844 EB0C  
                                         l2637 29E2                                           l2477 FFEE  
                                         l2581 F138                                           l1925 CD3A  
                                         l1917 CC2E                                           l3381 FA8C  
                                         l3373 FA06                                           l1941 0BC0  
                                         l1677 1102                                           l2397 DBE2  
                                         l1829 A9AC                                           l1781 A7FA  
                                         l1765 A766                                           l1757 A718  
                                         l1853 EBD2                                           l2806 0E6E  
                                         l2830 1AC8                                           l2822 1DCC  
                                         l2566 9E04                                           l2558 9CA0  
                                         l2494 1556                                           l2574 F1CA  
                                         l2590 F196                                           l1926 CCF4  
                                         l1918 CC4C                                           l3534 0102  
                                         l1942 0BC6                                           l1678 110A  
                                         l2398 DC0C                                           l1782 A80A  
                                         l1774 A7B6                                           l1766 A770  
                                         l2751 1B5E                                           l2831 1AD2  
                                         l2823 1DD6                                           l2583 F14A  
                                         l2575 F0F6                                           l1927 CD38  
                                         l3375 FA34                                           l3535 00EC  
                                         l3631 EE3C                                           l1935 0BD8  
                                         l1943 0BCC                                           l1679 1112  
                                         l2399 DC2E                                           l1791 A85E  
                                         l1775 A7C2                                           l1767 A780  
                                         l1759 A720                                           l1847 EB2A  
                                         l2904 2558                                           l2808 0E8E  
                                         l2760 0874                                           l2488 13C6  
                                         l2568 9F0C                                           l2592 F1B2  
                                         l2584 F156                                           l3376 FA28  
                                         l3640 EECC                                           l1960 CE3A  
                                         l1944 0BD2                                           l1936 0BA0  
                                         l1792 A86A                                           l1784 A812  
                                         l1776 A7CC                                           l1848 EB3E  
                                         l2649 2764                                           l2681 0928  
                                         l1929 CD74                                           l3537 012A  
                                         l3633 EEB4                                           l3297 BD8A  
                                         l1793 A878                                           l1785 A822  
                                         l1777 A7DC                                           l1769 A788  
                                         l1849 EB54                                           l2690 0960  
                                         l2682 0908                                           l2586 F170  
                                         l3538 0120                                           l3642 EEF4  
                                         l3634 EEA4                                           l1962 CEA2  
                                         l1938 0BA6                                           l1786 A82E  
                                         l2691 0948                                           l2499 FC50  
                                         l2595 F1C4                                           l2579 F10E  
                                         l3651 015C                                           l3379 FA68  
                                         l1963 CE7C                                           l1939 0BB0  
                                         l3299 BF8C                                           l3491 08E0  
                                         l1795 A880                                           l1787 A83C  
                                         l1779 A7E4                                           l2908 2524  
                                         l2676 2EDA                                           l2684 0910  
                                         l1956 CE1E                                           l3492 08EA  
                                         l3484 0892                                           l1796 A88A  
                                         l2757 083E                                           l2693 0962  
                                         l2685 0918                                           l2589 F182  
                                         l3653 0198                                           l1965 CF18  
                                         l1957 CDF8                                           l3493 08F8  
                                         l3485 08A2                                           l1797 A894  
                                         l1789 A844                                           l2766 0398  
                                         l2686 0922                                           l3734 1C8A  
                                         l3654 01DA                                           l1966 CEF2  
                                         l1798 A8AA                                           l2839 2B5A  
                                         l3735 1C82                                           l3647 21CC  
                                         l3639 EED8                                           l1959 CE60  
                                         l3487 08C0                                           l2688 0950  
                                         l3744 2202                                           l3488 08B8  
                                         l2769 03D6                                           l2785 1E4A  
                                         l2689 0940                                           l3681 0A3E  
                                         l3745 21FA                                           l2777 1202  
                                         l2786 1E0A                                           l3682 0A32  
                                         l3738 1CAA                                           l2970 0740  
                                         l2778 1226                                           l3739 1CB4  
                                         l2963 0EFA                                           l2947 0DAA  
                                         l2795 19BA                                           l2955 2898  
                                         l2788 1E32                                           l3764 2656  
                                         l3748 221A                                           l2796 19C4  
                                         l3765 2644                                           l3685 0A72  
                                         l3749 2224                                           l2949 0E12  
                                         l2957 28AA                                           l3758 17C2  
                                         l3686 0A80                                           l3759 1788  
                                         l2967 06DC                                           l3890 2384  
                                         l3891 237E                                           l3896 0CFE  
                                         l3897 0C9C                                           l3898 0CF4  
                        ??i2_SYSTEM_Initialize 0001                                           STR_1 9478  
               __fill_buffer_get_display1@cntr 0065                                           STR_9 9463  
               __fill_buffer_get_display1@line 0066                 __fill_buffer_get_display2@cntr 0065  
               __fill_buffer_get_display2@line 0066                                  _i2c_frequency 01F0  
                                         u9000 15DA                                           u9006 15DC  
                        ??_USBCtrlTrfTxService 0001                                           u9040 2554  
                                         u9050 2520                                           _UCFG 000F39  
                                         u9160 17AA                                           u8520 E3D0  
                                         u9420 BCC2                                           _UEP0 000F26  
                                         u8285 0E42                                           _UEP1 000F27  
                                         u9238 D010                                           u9430 BCC4  
                                         u9318 BAF0                               ?_fat_create_file 009B  
                                         u9167 17A0                                           u9239 D024  
                                         u8375 1ADE                                           u9319 BB04  
                                         u9185 CF8E                                           u8395 101A  
                                         _UEIE 000F37                                           u8900 EFDA  
                                         u9620 1C8E                                           u9295 BAB8  
                                         u8920 EFEA                                           u9448 BCD0  
                                         u9449 BCE4                                           u8850 EFB2  
                                         u9378 BBBA                                           u9650 2206  
                                         u9379 BBCE                                           u8950 1596  
                                         u8960 15A4                                           u8880 EFC8  
                                         _UEIR 000F63                                           _UCON 000F65  
                                         u8970 15B2                                           u8980 15C0  
                                         u8990 15CE                                           u8958 159A  
                                         u8968 15A8                                           u8978 15B6  
                                         _TMR2 000FCC                                           u8988 15C4  
                                         u8998 15D2                                 ?_i2c_adc_start 006A  
                  __size_ofi2_USBStallEndpoint 0108                          _i2c_digipot_reset_off 292C  
           __fill_buffer_get_display1@position 0067                           _system_output_toggle 2952  
                       __size_of_adc_calibrate 000C                                 ??_buck_operate 007E  
                               _ResetSenseData 15EE         USBStdFeatureReqHandler@current_ep_data 001B  
                       ?__update_modified_time 006D                                           _pDst 01E9  
                                         _main B470                                           _last 02A2  
                                 ___ftpack@arg 0060                                           _itoa 21A6  
                     ??i2_USBTransferOnePacket 0005                     __end_of_fat_append_to_file C956  
                                 ___ftpack@exp 0063                    __size_of_APP_DeviceMSDTasks 0012  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                      __end_of_display_prepare 0C18                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                              _USBDeviceAttach 25D8                                           btemp 005F  
                                         _utoa 0154             __fill_buffer_get_display2@position 0067  
                   ??_ExternalFlash_SectorRead 0093                                ??_rtcc_get_year 0060  
                         __size_of__buck_start 00C6             __size_of_buck_remote_set_dutycycle 0024  
                 __display_charger@charger_off 0182                        ?_rtcc_get_hours_decimal 0001  
                 ?i2_ExternalFlash_MediaDetect 0001                      _ExternalFlash_MediaDetect 2F16  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 90A6                __end_of_APP_DeviceMSDInitialize 2E76  
                        _display_get_character 2780                         ??__rtcc_bcd_to_decimal 0060  
                         ??_USBCheckHIDRequest 0001                               ?_MSDWriteHandler 0001  
                         ??_rtcc_increment_day 0068                           _rtcc_increment_hours 2A70  
               ??_MSDProcessCommandMediaAbsent 00A7                     __end_of_USBCheckStdRequest F65E  
                       ??_USBCtrlTrfOutHandler 0003                           ?_rtcc_increment_year 0001  
                         _rtcc_increment_month 2A2C                   ??__flash_copy_page_to_buffer 0076  
               ?__flash_write_page_from_buffer 0073                                   ___param_bank 000000  
                    __size_of_flash_page_write 0050                      ??_USBStdFeatureReqHandler 0018  
                                 _USBOutHandle 02B4                       __end_of__display_charger BA8E  
                   __size_of_system_output_off 0056                                ??_buck_get_mode 0060  
              __size_of__flash_write_to_buffer 0052                       ??_USBStdGetStatusHandler 0001  
                                 ___fttol@exp1 006E                       ??_buck_remote_get_status 0060  
                                 ___fttol@lval 006A                                 ?_USBDeviceInit 0001  
                            __flash_get_status 2570        __end_of_system_calculate_output_current E176  
     __size_of_system_calculate_output_current 0124               ?_system_calculate_output_current 0001  
            ??_system_calculate_output_current 006C                _system_calculate_output_current E052  
                         __buck_set_sync_async 107A                __flash_spi_tx_tx@command_length 0062  
                   __end_of_rtcc_decrement_day 29C4                       _system_ui_inactive_count 02B2  
                           _buck_remote_enable 01ED                     __buck_initial_dutycycle@dc 006E  
                                __CFG_PLLDIV$2 000000                                ??_rtcc_set_year 0060  
                i2c_display_write_fixed@length 0067                         ?_i2c_digipot_backlight 0001  
                                        l11627 EF72                                          l14131 FB62  
                                        l14051 0740                                          l14053 0744  
                                        l11831 1788                                          l13255 0C9C  
                                        l14313 2644                                          l11909 D11A  
                                        l12487 A45E                                          l14095 FAC0  
                                        l14601 1F66                                          l15225 2094  
                                        l14089 FAAC                                          l15219 2088  
                                        l16311 1A88                                          l16127 D69C  
                                        l13911 FC48                                          l14449 C62C  
                    __buck_set_sync_async@mode 0063                                          l14571 1FAA  
                                        l16307 1A6A                                          l16155 D700  
                                        l13755 CBC6                                          l11997 BD38  
                                        l14399 C504                                          l13775 CC70  
                                        l14823 E2A0                                          l14577 1FB6  
                                        l14595 1F5A                                          l15707 9B7E  
                                        l13963 11D4                                 ??_i2c_adc_read 0067  
                                        l13981 2890                                          l15913 D47C  
                                        l13899 154E                                          l14955 05CA  
                                        l15693 9B28                                          l15941 C78A  
                                        l15779 9E04                                __end_of___aldiv FA9E  
                           ?__flash_get_status 006C                                          ?_main 0001  
                rtcc_increment_minutes@minutes 0068                                          ?_itoa 0070  
                              __end_of___awdiv 0902                                          STR_10 946F  
                                        STR_11 9481                                          STR_12 9456  
                        ?_i2c_digipot_reset_on 0001                               ??__display_clear 0060  
            __size_of_USBCtrlEPServiceComplete 0100                             _buck_remote_set_on 2D58  
                        rtcc_decrement_day@day 0068                                __end_of___lldiv 0A92  
                                        ?_utoa 0067               MSDCheckForErrorCases@DeviceBytes 006A  
                                        u10210 A5AA                                          u11010 00B6  
                                        u10220 A5BC                                          u10140 A48E  
                                        u10108 A388                                          u10109 A39C  
                                        u10118 A3BC                                          u11110 08C4  
                                        u10119 A3D0                                          u10250 A638  
                                        u10410 13BC                                          u11050 0134  
                                        u10330 1484                                          u12100 FA38  
                                        u12005 D84E                                          u10158 A4B0  
                                        u10510 0A42                                          u10159 A4C4  
                                        u12015 D880                                          u11304 DEEA  
                                        u11240 DE3A                                          u12040 2498  
                                        u11305 DEE4                                          u12025 D8A8  
                                        u12210 EEDE                                          u11228 DE08  
                                        u10380 13A2                                ___awdiv@divisor 0062  
                                        u10285 0C26                                          u11229 DE1C  
                                        u11254 DE52                                          u11510 CC84  
                                        u11255 DE4C                                          u12151 EE20  
                                        u11264 DE8C                                          u11520 CCDE  
                                        u11265 DE86                                          u10465 19D0  
                       __end_of_USBDeviceTasks DB76                                          u11370 213E  
                                        u10810 FFBE                                          u12170 EE5A  
                                        u11380 2154                                          u13300 20C8  
                                        u14100 B17A                                __end_of___fttol EF06  
                                        u11470 CBDA                                          u14030 B94C  
                                        u12175 EE52                                          u11288 DEB4  
                                        u11480 CC50                                          u13320 CD90  
                                        u13400 949C                                          u11800 28B0  
                                        u11289 DECA                                          u10905 1356  
                                        u15001 EA10                                          u12370 C4FE  
                                        u13330 CDAC                                          u13410 94B8  
                                        u10915 14E0                                          u15011 EA32  
                                        u13340 CDE6                                          u14140 D15C  
                                        u13500 95B4                                          u13420 94D4  
                                        u10925 14FC                                          u10685 1D24  
                                        u15021 EA54                                          u12630 1F96  
                                        u12390 C534                                          u14310 9C12  
                                        u14150 D178                                          u13510 95D0  
                                        u13430 94F0                                          u11830 0F02  
                                        u12711 26A4                                          u12560 C6D6  
                                        u11680 FC8C                                          u14320 9C2C  
                                        u14080 B142                                          u14160 D194  
                                        u13520 95EC                                          u13440 950C  
                                        u10960 0E0E                                          u10945 0DD0  
                                        u15210 AE6E                                          u14330 9C6C  
                                        u14090 B15E                                          u14170 D1B0  
                                        u13530 9608                                          u13450 9528  
                                        u15300 AF50                                          u13460 9544  
                                        u13700 D512                                          u12740 05F6  
                                        u10980 0CC2                                          u12590 1FE6  
                                        u15230 AEA2                                          u13470 9560  
                                        u13710 D52E                                          u15070 EB66  
                                        u10895 133A                                          u14280 9BBA  
                                        u13800 C9A4                                          u13480 957C  
                                        u11960 FB5C                                          u14520 D360  
                                        u15320 F474                                          u15250 AED6  
                                        u15170 AE06                                          u13810 C9C0  
                                        u13490 9598                                          u13730 D58E  
                                        u11970 FB62                                          u14530 D38C  
                                        u15330 F556                      ?_USBCtrlEPServiceComplete 0001  
                                        u14380 9DF0                                          u13740 D5D2  
                                        u11885 1860                                          u14525 D356  
                                        u15325 F46A                                          u15270 AF0E  
                                        u15190 AE3A                                          u14710 D764  
                                        u13910 B798                                          u15350 E066  
                                        u11895 18BC                                          u15335 F54C  
                                        u13920 B7B4                                          u13840 CA62  
                                        u13680 D4DA                                          u15360 E150  
                                        u11985 D7EA                                          u15530 F0CE  
                                        u13930 B7D0                                          u13690 D4F6  
                                        u11995 D81C                                          u13940 B7EC  
                                        u13780 C96C                                          u15700 B49E  
                                        u16237 0942                                          u15365 E146  
                                        u13950 B808                                          u13790 C988  
                                        u15535 F0C4                                          u16247 094A  
                                        u14680 D6C0                                          u13960 B824  
                                        u15480 E18A                                          u16257 1E26  
                                        u13970 B840                                          u15490 E274  
                                        u16267 1E36                                          u13980 B85C  
                                        u15740 B5D2                                          u16277 1E40  
                                        u13990 B878                                          u15495 E26A  
                                        u15760 B634                                          u15780 B700  
                              __end_of___lwdiv 1CBE                   __flash_write_to_buffer@start 0073  
                              __end_of___lwmod 222E                                          i2l300 021A  
                                        i2l301 0220                                          i2l302 023E  
                                        i2l222 02F8                                          i2l310 226C  
                                        i2l151 D994                                          i2l216 FD3A  
                                        i2l224 0314                                          i2l233 ED8C  
                                        i2l161 DA76                                          i2l234 ED34  
                                        i2l162 DA82                                          i2l251 F986  
                                        i2l323 0466                                          i2l147 D932  
                                        i2l171 DB0C                                          i2l252 F94C  
                                        i2l228 0696                                          i2l324 0460  
                                        i2l164 DAA8                                          i2l181 2400  
                                        i2l309 226E                                          i2l317 24FC  
                                        i2l149 D95A                                          i2l157 DA48  
                                        i2l342 FEB0                                          i2l262 E51E  
                                        i2l334 1722                                          i2l182 240E  
                                        i2l190 ECCA                                          i2l430 F6BE  
                                        i2l238 EDB6                                          i2l318 24FA  
                                        i2l174 DB32                                          i2l166 DABC  
                                        i2l158 DA58                                          i2l255 F9C8  
                                        i2l247 F918                                          i2l343 FEB4  
                                        i2l263 E4FC                                          i2l431 F698  
                                        i2l167 DAC8                                          i2l159 DA60  
                                        i2l256 F98E                                          i2l344 FF2E  
                                        i2l336 176E                                          i2l440 F6F2  
                                        i2l360 F596                                          i2l176 DB52  
                                        i2l168 DAF0                                          i2l249 F922  
                                        i2l345 FEF4                                          i2l265 E594  
                                        i2l441 F70A                                          i2l361 F59C  
                                        i2l169 DAFA                                          i2l266 E57A  
                                        i2l186 EC22                                          i2l194 E858  
                                        i2l434 F716                                          i2l282 DDE0  
                                        i2l274 F78A                                          i2l362 F5A2  
                                        i2l178 DB6E                                          i2l347 FF14  
                                        i2l427 F6AC                                          i2l291 DDD8  
                                        i2l283 DCCA                                          i2l363 F5B6  
                                        i2l188 EC4C                                          i2l428 F67A  
                                        i2l276 F7FC                                          i2l364 F5BC  
                                        i2l541 E6DE                                          i2l381 C0FE  
                                        i2l285 DCDE                                          i2l357 F61A  
                                        i2l438 F6CE                                          i2l550 FDCC  
                                        i2l390 C250                                          i2l374 C026  
                                        i2l286 DD70                                          i2l366 F5C2  
                                        i2l358 F58C                                          i2l439 F6E6  
                                        i2l383 C17E                                          i2l375 C02A  
                                        i2l295 027A                                          i2l367 F5E0  
                                        i2l288 DD78                                          i2l296 020A  
                                        i2l368 F5FC                                          i2l393 C20A  
                                        i2l385 C148                                          i2l377 C094  
                                        i2l289 DDD0                                          i2l538 E6E6  
                                        i2l554 FE32                                          i2l386 C164  
                                        i2l539 E652                                          i2l395 C25C  
                                        i2l379 C0DC                                          i2l299 0290  
                                        i2l388 C1CA                                          i2l549 FE68  
                                        i2l389 C1D6                                          i2l566 FE3A  
                                        i2l830 099A                                          i2l824 09BC  
                                        i2l832 09A4                          rtcc_write_eeprom@date 0085  
                                        i2l834 09AE                               ??__display_inout 0090  
                                        i2l828 098A                                          i2l829 0992  
                                        i2l950 1CC2                                          i2l784 1C32  
                                        i2l952 1CCC                                          _UADDR 000F38  
                                        i2l787 1C68                                          i2l956 1CDE  
                              ___awdiv@counter 0064                                          i2l949 1CFC  
                                        i2l958 1CEA                                          _TMR0H 000FD7  
                                        _TMR1H 000FCF                                          _TMR0L 000FD6  
                                        _TMR1L 000FCE        __end_of_system_calculate_output_voltage F49A  
     __size_of_system_calculate_output_voltage 00E2               ?_system_calculate_output_voltage 0001  
            ??_system_calculate_output_voltage 006C                _system_calculate_output_voltage F3B8  
                                        _RPOR5 000EC5                                          _RPOR6 000EC6  
                                        _USTAT 000F64                               __i2c_read@length 0067  
                  ?_ExternalFlash_CapacityRead 0060                                ?_display_update 0001  
                       __rtcc_verify_bcd@value 0063             __size_of_USBCtrlEPAllowStatusStage 00C6  
                              _i2c_eeprom_read 1D12                            ___lmul@multiplicand 0064  
                     __end_of__display_outputs CB78                                ??_flash_is_busy 0071  
                             __end_of_MSDTasks C734                                     i2memcpy@d1 0001  
                               __CFG_FCMEN$OFF 000000                                __read_fat@value 008D  
                           _USBCheckMSDRequest FDB8                                     i2memcpy@s1 0003  
                       ??__buck_operate_remote 0076                __end_of_USBCtrlEPAllowDataStage 0346  
                        __get_dateTime@minutes 0072                                          _sd000 9452  
                                        _sd001 937B                                          _sd002 93AF  
                                        _sd003 941E                          __get_dateTime@seconds 0073  
               ?_USBIncrement1msInternalTimers 0001                    log_generate_entry@log_entry 0078  
               __size_of_MSDTransferTerminated 0056                            ??__flash_get_status 006E  
                        _rtcc_get_year_decimal 2E16            i2c_display_send_init_sequence@F8360 03ED  
                __end_of_MSDTransferTerminated 1C6A                                   _gblCBWLength 01F3  
                          ?_buck_remote_set_on 0001                                     i2memset@p1 0001  
                       ?_MSDCheckForErrorCases 006A                          ??__system_timer0_init 0060  
                        __buck_start@dutycycle 0072              __size_of_rtcc_get_minutes_decimal 0010  
                            ?__flash_spi_tx_rx 0060                              ?__flash_spi_tx_tx 0060  
                    ?_rtcc_get_minutes_decimal 0001                          i2USBStallEndpoint@dir 0001  
                       __end_of_ResetSenseData 1650                                  ___ftpack@sign 0064  
                     __get_empty_cluster@value 008D                    rtcc_get_day_decimal@bcd_day 0063  
                   __end_of__display_usb@F8720 925B                     __end_of__display_usb@F8722 924B  
                   __end_of__display_usb@F8724 921B                     __end_of__display_usb@F8718 913B  
                   ?_log_get_number_of_samples 0060                       __parse_command_long@data 0063  
                             ??_rtcc_get_hours 0060                          ?_system_output_toggle 0001  
                rtcc_increment_seconds@seconds 0068                               ??_rtcc_get_month 0060  
            system_calculate_input_current@tmp 0070                                          pclath 000FFA  
                           ??__flash_spi_tx_rx 0068                             ??__flash_spi_tx_tx 0068  
                              __end_of_ui_init 2DB0                                          tablat 000FF5  
                    __size_of_USBStallEndpoint 010A                            ?_USBCheckMSDRequest 0001  
                              _MSDCommandState 0053               __display_charger@charger_startup 0172  
                  ??_ExternalFlash_SectorWrite 008D                                          plusw1 000FE3  
                                        plusw2 000FDB                  __display_charger@charger_sync 0139  
               __end_of_rtcc_get_hours_decimal 2E16                                __end_of_tmr_isr 050C  
                                  ?_USBMSDInit 0001       ExternalFlash_WriteProtectStateGet@config 0060  
                __size_of__system_encoder_init 003E                                          utoa@c 006F  
                              __number_of_days 1454                                          utoa@v 006D  
                                        status 000FD8                    ?__flash_copy_page_to_buffer 0073  
                            __CFG_DSWDTPS$8192 000000                                          wtemp6 0060  
                     __end_ofi2_ResetSenseData 1714                                __end_of_strncmp 0D1A  
              ??__fill_buffer_get_calibration1 006B                ??__fill_buffer_get_calibration2 006B  
                             __end_ofi2_memcpy 19A4                    __end_of__display_efficiency B470  
                             __end_ofi2_memset 288A                 __display_temperature@external1 00A4  
               __display_temperature@external2 00B0                 ??_MSDComputeDeviceInAndResidue 0062  
                     __ic2_display_set_address 2832                              __buck_timer2_init 2C98  
                               _MSDReadHandler CF64                          ?_rtcc_increment_hours 0001  
                        ??_rtcc_increment_year 0068                          ?_rtcc_increment_month 0001  
                        __size_of__display_usb 0192              __end_of_buck_remote_set_dutycycle 29E8  
            __size_of_rtcc_get_seconds_decimal 0010                        __CFG_DSWDTOSC$INTOSCREF 000000  
                 __size_of_USBStdSetCfgHandler 00DE              fat_create_file@number_of_clusters 00AC  
                         flash_page_write@data 0081                  ??i2_ExternalFlash_MediaDetect 0003  
              __size_of_fat_get_empty_clusters 0092                      ?_rtcc_get_seconds_decimal 0001  
                         flash_page_write@page 007F                       __end_of_log_collect_data C002  
                              __initialization FB66                    __display_temperature@header 0090  
                         ??_buck_remote_set_on 0060                             ?__buck_timer2_init 0001  
                    __end_of__flash_get_status 25A4        __end_ofi2_ExternalFlash_MediaInitialize 2C80  
     __size_ofi2_ExternalFlash_MediaInitialize 001A          __end_of_ExternalFlash_MediaInitialize 2B80  
       __size_of_ExternalFlash_MediaInitialize 0022              ??i2_ExternalFlash_MediaInitialize 0003  
             ?i2_ExternalFlash_MediaInitialize 0001                i2_ExternalFlash_MediaInitialize 2C66  
                _ExternalFlash_MediaInitialize 2B5E                                    _system_init EA06  
               __size_of_system_encoder_enable 0010                                   __end_of_main B786  
                                 __end_of_itoa 21EA                  __end_of_system_encoder_enable 2DE6  
                             _rtcc_set_minutes 2CF8                   __size_of__rtcc_increment_bcd 002E  
                             _rtcc_set_seconds 2CC8                __end_of_i2c_display_write_fixed 1A58  
                                 __end_of_utoa 01FE                    ??__fill_buffer_get_display1 0064  
                  ??__fill_buffer_get_display2 0064                       __parse_command_short@cmd 008B  
                        ?__buck_set_sync_async 0062                               __end_of_i2c_init 2ED6  
                  __end_of__rtcc_decrement_bcd 2724                       __end_of__i2c_acknowledge 2F16  
                                ??__i2c_open_1 0060                     __end_of__get_empty_cluster 0F0C  
                                _adc_calibrate 2ED6                           ??_USBCheckMSDRequest 000C  
                               __CFG_OSC$HSPLL 000000         MSDComputeDeviceInAndResidue@DiExpected 0060  
                      _USBCheckMSDRequest$2640 000C                        _USBCheckMSDRequest$2641 000E  
                        system_init@appendtext 0100                      __size_of_USBCtrlEPService 0098  
                          ??__buck_timer2_init 0060                                         ??_main 00F1  
                                ___fttol@sign1 0069                               __end_of__i2c_get 2F0C  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0394                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 0001  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 2F5C  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 2F58  
                                  ?_USBSuspend 0001    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year 2AB4                __size_of_rtcc_increment_minutes 0022  
              __size_of_rtcc_increment_seconds 0022                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes 2EAE                       __end_of_rtcc_get_seconds 2E92  
                  __size_of__write_calibration 0094                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach 260A                         __flash_write_to_buffer 1DB6  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                             __end_of___altoft 1000                         __get_dateTime@datetime 0074  
                                       _ADRESH 000FC4                                         _ADRESL 000FC3  
                                       _CCPR1L 000FBB                                         _EECON2 000FA7  
                                       _DMABCH 000F66                                         _DMABCL 000F67  
                             ___awdiv@dividend 0060                         ?_i2c_digipot_reset_off 0001  
                              ?_ResetSenseData 0001                    ??__get_available_root_entry 008E  
                             __end_of___ftpack 0154                                     __i2c_start 2F32  
                       SYSTEM_Initialize@state 0064                                     __i2c_write 1EAA  
                                 __display_usb D4C8                               __end_of_adc_init 2BFA  
                             __end_of_adc_read 0988                                         i2l1330 04CE  
                                       i2l1322 04E4                                         i2l1331 04B8  
                                       i2l1332 04E2                                         i2l1324 049C  
                                       i2l1333 04BE                                         i2l1325 0484  
                                       i2l1334 04C4                                         i2l1326 04B0  
                                       i2l1335 04EE                                         i2l1327 048A  
                                       i2l1336 04FC                                         i2l1328 0492  
                                       i2l1337 04FA                                         i2l1339 0508  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
                                       i2l3764 2878                                         i2l3765 2868  
                                       i2l3758 1992                                         i2l3759 195A  
              ??_APP_DeviceCustomHIDInitialize 000D                       ?__fill_buffer_get_status 0001  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init 2CB0                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler D14A  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                     i2USBTransferOnePacket@ep 0009                               ??__i2c_wait_idle 0060  
                            ??i2_USBDeviceInit 0009                         ?_display_get_character 0060  
                             ?_display_prepare 0001                __size_ofi2_USBTransferOnePacket 0102  
                              __read_root@slot 008E                              ?__get_input_power 006E  
                      __write_calibration@addr 0097                    fat_append_to_file@file_size 009F  
                      __write_calibration@cntr 009C                                 __CFG_WPDIS$OFF 000000  
                             __read_fat@offset 008B                               _i2c_eeprom_tasks 10F0  
                            _shortPacketStatus 005B              fat_append_to_file@number_of_bytes 0091  
                   __get_empty_cluster@cluster 008F                                 __CFG_XINST$OFF 000000  
                             _i2c_eeprom_write 0C18                             ??__get_input_power 0070  
                              rtcc_set_day@day 0060                   ??__parse_command_calibration 0067  
                              USBDeviceTasks@i 001F                                    i2memcpy@tmp 000B  
                                 _CCPTMRS0bits 000F52                    USBStdFeatureReqHandler@pUEP 0019  
                     USBTransferOnePacket@data 0061                     USBCtrlTrfInHandler@lastDTS 0002  
                 __end_of__flash_set_page_size 123E                                ??_USBDeviceInit 0068  
           __flash_copy_page_to_buffer@command 0079                       __end_of_rtcc_correct_day 2BA0  
                     flash_partial_read@length 0077                                         ___lmul 1B66  
                                       _gblCBW 0241                                      ??___aldiv 0068  
                           __size_of__i2c_read 0094                             __size_of__i2c_send 000A  
                       __size_of__get_dateTime 0146                                      ??___awdiv 0064  
                               __CFG_STVREN$ON 000000                             __size_of__i2c_stop 0008  
                       __size_of__get_checksum 0036                                      ??___lldiv 0068  
                                    ??___fttol 0064    i2SYSTEM_Initialize@pll_startup_counter_3284 0003  
    SYSTEM_Initialize@pll_startup_counter_3284 0062                                      ??___lwdiv 0064  
                 __size_of_flash_partial_write 006C                                 ?_adc_calibrate 0001  
                                   _SoftDetach 01F2                                      ??___lwmod 0064  
                                       _buffer 0800                              _USBEnableEndpoint 23F0  
              __size_of_USBStdGetStatusHandler 00A8                __size_of_buck_remote_get_status 002E  
                      system_output_off@output 0061                                __get_date@month 0069  
                                       _memcpy 1776                     ?_adc_calculate_temperature 006C  
                                       _memset 263A                        __end_of_i2c_eeprom_read 1D64  
                                       clear_0 FBCE                                         clear_1 FBE0  
                                       clear_2 FBEC                                         clear_3 FBF8  
                                       clear_4 FC04                                         clear_5 FC10  
                    _ExternalFlash_SectorWrite 2508                                         clear_6 FC1C  
                              __CFG_CLKOEC$OFF 000000                               __end_of_inq_resp 9401  
                             ___awdiv@quotient 0066                         ??_i2c_digipot_reset_on 006A  
                                       _ui_run EB0A                        ?_system_encoder_disable 0001  
                           ?_USBEnableEndpoint 0009                   __size_of__buck_operate_local 0476  
                         __end_of_buck_operate 1948                             _flash_partial_read 1000  
                                       _status 01EC                          i2c_display_init@F8363 03E4  
                                       _strlen 2374                        ?_rtcc_decrement_minutes 0001  
                      ?_rtcc_decrement_seconds 0001                         __size_of__buck_prepare 0066  
                       __display_outputs@F8730 922B                         __display_outputs@F8732 90EA  
                       __display_outputs@F8734 90D5                         __display_outputs@F8728 9289  
                __size_of_USBTransferOnePacket 0106                            __size_of_USBMSDInit 010E  
                  i2c_display_write_fixed@data 0065                     __end_of_log_generate_entry ADCC  
  i2c_display_send_init_sequence@init_sequence 006A                         __size_of__flash_wakeup 0052  
                      __write_root@root_sector 008B                                         itoa@cp 0076  
                       __size_of__flash_spi_tx 005A                              _i2c_set_frequency 1160  
                        system_init@extension2 017E                          __end_of_fat_find_file FB66  
       buck_remote_set_synchronous@synchronous 0060                    fat_get_empty_clusters@value 008D  
                       _fat_get_empty_clusters 06C8                  __size_of__parse_command_short 00E4  
                       ?_rtcc_get_year_decimal 0001                 __display_charger@charger_async 0124  
          __size_of_get_next_eeprom_write_task 002C                                   __mediumconst 90AA  
                          __end_of__i2c_open_1 2C98                 i2c_digipot_reset_on@data_array 006A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      __rtcc_decrement_bcd@value 0067  
                                    ??_ui_init 0060                    __end_of__display_time@F8701 91D4  
                  __end_of__display_time@F8703 9163                    __end_of__display_time@F8705 914F  
                  __end_of__display_time@F8707 926B               __size_of_APP_DeviceMSDInitialize 0010  
                  __end_of__display_time@F8681 92A5                    __end_of__display_time@F8683 9317  
                  __end_of__display_time@F8691 92EF                    __end_of__display_time@F8685 930E  
                  __end_of__display_time@F8693 92E3                    __end_of__display_time@F8687 9327  
                  __end_of__display_time@F8695 9177                    __end_of__display_time@F8689 9304  
                  __end_of__display_time@F8697 91E6                    __end_of__display_time@F8699 927B  
              ??__flash_compare_page_to_buffer 0076                            ??_USBEnableEndpoint 000A  
                           ?_i2c_set_frequency 0001              __end_of__display_efficiency@F8761 918A  
            __end_of__display_efficiency@F8763 9289              __end_of__display_efficiency@F8759 919D  
                          ?_flash_partial_read 0073                        __end_of__number_of_days 14BC  
                     __size_of_flash_page_read 0028                      __fill_buffer_get_display1 1F9A  
                    __fill_buffer_get_display2 1F4A                                      ??_tmr_isr 0001  
                   __end_of__root_is_available 0E16                         ??_system_output_toggle 0062  
                    __size_of_system_output_on 004E                                    _CtrlTrfData 000D38  
         __end_of_buck_remote_change_dutycycle 2160          __size_of_buck_remote_change_dutycycle 004A  
                 _buck_remote_change_dutycycle 2116                                      ??_strncmp 0066  
                         __size_of__write_root 005C             buck_remote_change_dutycycle@change 0060  
                        __end_of_ui_get_status 2F46             __size_of_buck_remote_get_dutycycle 0006  
                       __display_outputs@line3 0060                         __display_outputs@line4 0075  
            i2ExternalFlash_MediaDetect@config 0001                ExternalFlash_MediaDetect@config 0060  
                         _controlTransferState 005A                     ??_APP_DeviceCustomHIDTasks 008C  
                        __flash_spi_tx_rx@data 0064                           __CFG_LS48MHZ$SYS48X8 000000  
                      ?_rtcc_get_month_decimal 0001                              _SYSTEM_Initialize 1A58  
                __size_of__display_temperature 01C8                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization FC22                                     ___altoft@c 006E  
            MSDCheckForErrorCases@MSDErrorCase 006F                     log_write_to_disk@log_entry 00D1  
                  ?__parse_command_calibration 0063                                ?_MSDReadHandler 0001  
                 __size_of__buck_set_dutycycle 006A                           __end_of_i2c_adc_read 1DB6  
                       ??_rtcc_increment_hours 0068                             ?_SYSTEM_Initialize 0001  
                       ??_rtcc_increment_month 0068                         __size_of__display_itoa 0206  
                                ___rparam_used 000001                         __size_of__display_time 0640  
                       _rtcc_increment_minutes 2A4E                         _rtcc_increment_seconds 2A0A  
                     __size_of_USBStallHandler 0044                   __end_of__i2c_not_acknowledge 2F02  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle FFF2                    __end_of__parse_command_long F2D4  
                __size_of_rtcc_get_day_decimal 0010                             __size_of__get_date 0068  
                          __size_of_USBSuspend 0030                             __size_of__get_time 006A  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom DCB8                           ??_flash_partial_read 007B  
                                   ___fttol@f1 0060                               _flash_page_write 1E5A  
                            ?__get_temperature 006E                                 __pcstackCOMRAM 0001  
                   __size_of__flash_get_status 0034                      __end_of_USBEnableEndpoint 242C  
                            _log_write_to_disk 123E                         ??__buck_set_sync_async 0063  
          __size_of_ExternalFlash_CapacityRead 0014                             __rtcc_write_enable 2D70  
                      _battery_voltage_maximum 02ED          __end_of__fill_buffer_get_calibration1 0D9A  
       __size_of__fill_buffer_get_calibration1 0080                  __fill_buffer_get_calibration1 0D1A  
        __end_of__fill_buffer_get_calibration2 16B2         __size_of__fill_buffer_get_calibration2 0062  
                __fill_buffer_get_calibration2 1650                                  __end_of_sd000 9456  
                                __end_of_sd001 93AF                                  __end_of_sd002 93DD  
                                __end_of_sd003 9438                           buck_remote_set_on@on 0060  
                                    ?_MSDTasks 0001                                   __pidataBANK2 23B2  
                                 __pidataBANK3 2C16                                   __pidataBANK4 13EC  
                          ??_SYSTEM_Initialize 0060                      __get_available_root_entry 288A  
                         __rtcc_verify_bcd@max 0061                           __rtcc_verify_bcd@min 0060  
         ExternalFlash_SectorWrite@sector_addr 0086               __size_of_USBCtrlEPAllowDataStage 00A0  
                           __buck_prepare@cntr 0060           __size_of_i2c_eeprom_read_calibration 011E  
                           ??__get_temperature 0070                      rtcc_decrement_hours@hours 0068  
                           __size_of__read_fat 004A                                _active_protocol 01FE  
                          i2USBStallEndpoint@p 0007                             ?_log_write_to_disk 0001  
               __end_of_system_encoder_disable 2F40                  __size_of_USBConfigureEndpoint 0094  
           __size_of_ExternalFlash_MediaDetect 000A                    __end_of_USBCtrlTrfInHandler FF38  
                 ?_buck_remote_set_synchronous 0001                            _userInterfaceStatus 01EF  
               __end_of_rtcc_decrement_minutes 2B1A                 __end_of_rtcc_decrement_seconds 2AD6  
                          display_prepare@mode 00D4                                   _gblSenseData 0260  
                              _MSDErrorHandler E3B8                 ?_ExternalFlash_MediaInitialize 0060  
                    __end_of_i2c_set_frequency 11D0                            ?__rtcc_write_enable 0001  
                       i2_USBTransferOnePacket EC0C                            system_init@filename 0168  
                 __size_of_system_output_is_on 001A                                     __buck_stop 2724  
                          ??_log_write_to_disk 00D0               fat_get_empty_clusters@fat_sector 0089  
                 buck_remote_set_enable@remote 0060                                      ?i2_memcpy 0001  
                                    ?i2_memset 0001          __end_of_MSDProcessCommandMediaPresent A6B8  
       __size_of_MSDProcessCommandMediaPresent 03BA                  _MSDProcessCommandMediaPresent A2FE  
                       flash_partial_read@data 0079                             __size_of_buck_init 0010  
                       flash_partial_read@page 0073                                  __get_date@day 006A  
              __size_of_buck_remote_set_enable 001C                       ??_USBCtrlTrfSetupHandler 001E  
                      _USBTicksSinceSuspendEnd 01F6                                  __get_dateTime D7A6  
                                __get_checksum 2466              __flash_copy_page_to_buffer@buffer 0075  
                             ?_USBDeviceAttach 0001                      __end_of_SYSTEM_Initialize 1AB2  
                      ??__update_modified_time 006F                              __end_of__i2c_read 05A0  
                 __size_of__rtcc_write_disable 0016                              __end_of__i2c_send 2F2A  
                       _USBStdGetStatusHandler 01FE                 __end_of_rtcc_get_month_decimal 2E36  
                          USBStallEndpoint@dir 0060                              __end_of__i2c_stop 2F32  
                       _buck_remote_get_status 2752                                    ?__i2c_start 0001  
                                  ?__i2c_write 0065                                     __pbssBANK0 00F3  
                                   __pbssBANK1 01D3                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0468  
                       __read_root@root_sector 008A                  fat_append_to_file@fat_cluster 00A5  
             __size_of_i2c_display_write_fixed 005A                               _USBStallEndpoint E6EE  
                                   _gblNumBLKS 02AA                  ?_buck_remote_change_dutycycle 0001  
                                    ?_i2c_init 0001                             _buck_get_dutycycle 2F52  
                    __size_of__rtcc_verify_bcd 0046              __end_of_buck_remote_get_dutycycle 2F4C  
                 __end_of__sector_from_cluster 2E56                           ??__rtcc_write_enable 0060  
                 ??_schedule_eeprom_write_task 0060                                     __read_root 1890  
                   __size_of__buck_timer2_init 0018                               _mediaInformation 02BA  
                 __end_of_rtcc_decrement_hours 2B3C                   __end_of_rtcc_decrement_month 2AF8  
                                __buck_prepare 1524                                  __flash_wakeup 1E08  
                    rtcc_decrement_month@month 0068                                  __flash_spi_tx 1B0C  
                                    ?__i2c_get 0001                    __size_of_USBWakeFromSuspend 0036  
                                  _pBDTEntryIn 003B                      __end_of_log_write_to_disk 12AC  
                  __size_of_i2c_display_cursor 002A                     __update_modified_time@root 006D  
             __end_of_USBCtrlEPServiceComplete EE0E          __end_of_APP_DeviceCustomHIDInitialize 25D8  
       __size_of_APP_DeviceCustomHIDInitialize 0034                  _APP_DeviceCustomHIDInitialize 25A4  
                         log_collect_data@temp 0078                    MSDTransferTerminated@handle 000C  
                          ?_buck_get_dutycycle 0001             ExternalFlash_SectorSizeRead@config 0060  
                         USBCtrlTrfRxService@i 0001                                ??_adc_calibrate 0060  
                       __size_of_log_start_new 00DA                                        ?___lmul 0060  
                                   ??_MSDTasks 00AC                         __display_itoa@decimals 007A  
                      ??_i2c_digipot_backlight 006A                        __get_checksum@log_entry 0060  
                            ?__display_charger 0001                 __flash_write_to_buffer@command 007A  
                rtcc_decrement_minutes@minutes 0068                                      MSDTasks@i 00B1  
                                      _CCP1CON 000FBA                           i2c_adc_start@channel 006C  
                                    ?___altoft 006E                                        ?_memcpy 0060  
                           _fat_append_to_file C734                                        ?_memset 0060  
                               ___lmul@product 0068                                     _device_dsc 9438  
                             ??_display_update 0070                               ?_i2c_eeprom_read 0071  
                                  __i2c_open_1 2C80                                      ?___ftpack 0060  
                           ??__display_charger 0090                               _USBCtrlEPService 03DE  
            system_calculate_input_voltage@tmp 0070                                        ?_ui_run 0001  
                                   _ep_data_in 01E4                             __display_clear@col 0063  
                                    ?_adc_init 0001                                      ?_adc_read 0060  
                       rtcc_read_eeprom@buffer 0092                             __display_clear@row 0062  
                                      ?_strlen 0060                  fat_append_to_file@file_number 00A9  
               __parse_command_calibration@cmd 0001                  ??_buck_remote_set_synchronous 0060  
                  APP_DeviceCustomHIDTasks@idx 0096               __sector_from_cluster@fat_cluster 0060  
                  __end_of_USBCtrlTrfRxService E5E0                                  __display_itoa CB78  
                                __display_time 9486                             _USBCheckStdRequest F57C  
                    __write_calibration@buffer 0087                              _configDescriptor1 933B  
                                      i2l11509 F692                                        i2l12255 F782  
                                      i2l12185 2868                                        i2l14301 195A  
                                      i2l11751 1CEA                                        i2l11747 1CCC  
                                      i2l11799 F922                                        i2l16055 D92A  
                                      i2l16083 D98C                                        i2l16261 DB04  
                                      i2l17607 09D4                                        i2l17609 0A08  
                      ??_MSDCheckForErrorCases 006E                             __size_of_rtcc_init 001A  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 1D12  
                                   ??i2_memcpy 0007                         fat_append_to_file@data 0093  
                                   ??i2_memset 0007                                     _flash_init 2272  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService F9D0  
                            __end_of__get_date 1524                            _USBStdSetCfgHandler F740  
          __size_of_schedule_eeprom_write_task 0050                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 1382  
                            ?__display_outputs 0001                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 0001                     __end_ofi2_USBStallEndpoint E900  
                           _rtcc_decrement_day 299E                            __rtcc_increment_bcd 26C8  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes 2D10                       __end_of_rtcc_set_seconds 2CE0  
                          ?_USBCheckStdRequest 0001                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 0140                       __display_charger@fan_off 0100  
                         __flash_set_page_size 11D0                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task 2832  
                   _get_next_eeprom_write_task 2806                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks 2DD6                                        _UIRbits 000F62  
                            __end_of__read_fat 2082                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 0E92         __size_of__flash_compare_page_to_buffer 007C  
                __flash_compare_page_to_buffer 0E16                                     __write_fat 22B4  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 0001                                   ??_USBMSDInit 000C  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 0001                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 0001  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 0001                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand DDF8  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 0001  
                                   _lastSecond 01EB                           ?_USBStdSetCfgHandler 0001  
                        __end_of_rtcc_get_year 2E84                    __size_of_USBCheckHIDRequest 00E2  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 0026  
                           ??i2_ResetSenseData 0001                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01B6                              __end_of_hid_rpt01 941E  
                       _buck_remote_set_enable 2BFA                             ?_MSDProcessCommand 0001  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler E4D0  
                            __end_of_buck_init 2DF6                     _MSDTransferTerminated$2729 000E  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 0098  
                    __size_of__flash_spi_tx_tx 0090           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 0001                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 0001                             __display_usb@F8720 924B  
                           __display_usb@F8722 923B                             __display_usb@F8724 920A  
                           __display_usb@F8718 9127                  __size_of__rtcc_bcd_to_decimal 001E  
                         ?__rtcc_increment_bcd 0064                          __size_of_buck_operate 005C  
                         ??_USBCheckStdRequest 001E                                        ___aldiv F9D0  
                __size_of_USBCtrlTrfOutHandler 0062          i2ExternalFlash_MediaInitialize@config 0001  
          ExternalFlash_MediaInitialize@config 0060                                        ___awdiv 087C  
                             _ToSendDataBuffer 03A4                                __size_of___lmul 0058  
                                      ___lldiv 0A0E                               ??_USBDeviceTasks 001F  
                                      ___fttol EE0E                                        ___lwdiv 1C6A  
                            ??_USBStallHandler 0001                                        ___lwmod 21EA  
                           ??_log_collect_data 0074                                     ??___altoft 0072  
                            ?__i2c_acknowledge 0001                          __end_of_buck_get_mode 2F52  
                          __size_of__i2c_start 0008                   __end_of__system_encoder_init 2374  
                                      __pcinit FB66                                __size_of_memcpy 0060  
                          __size_of__i2c_write 0050                                     ??___ftpack 0065  
                              __size_of_memset 0030                       __size_of_MSDWriteHandler 02D6  
                    __end_of_configDescriptor1 937B                            ??_MSDProcessCommand 00A7  
                                      __ramtop 0F00                   ExternalFlash_SectorRead@page 0093  
               ?__fill_buffer_get_calibration1 0001                 ?__fill_buffer_get_calibration2 0001  
                   __size_of_i2c_set_frequency 0070                                     ??_adc_init 0060  
                                   ??_adc_read 0062                                        __ptext0 B470  
                                      __ptext1 EB0A                                        __ptext2 2DD6  
                                      __ptext3 2F3A                                        __ptext4 269A  
                                      __ptext5 2906                                        __ptext6 292C  
                                      __ptext7 27AE                                        __ptext8 A6B8  
                                      __ptext9 2952                                 ?__display_itoa 0078  
                                      _inPipes 00F3                           ??_rtcc_decrement_day 0068  
                              __size_of_ui_run 0102                                 ?__display_time 0001  
                        _task_list_write_index 004F                             __display_time@cntr 01D2  
            __size_of_ExternalFlash_SectorRead 0034                   __end_of__display_inout@F8671 920A  
                  _USBDeferOUTDataStagePackets 01F7                   __end_of__display_inout@F8673 91F8  
                           __display_time@mode 01CB                   __end_of__display_inout@F8675 9339  
                 __end_of__display_inout@F8677 92B3                             ??__i2c_acknowledge 0060  
                                    _T0CONbits 000FD5                             __display_time@year 01CC  
                        __end_of_rtcc_set_year 2CC8                      ?_ExternalFlash_SectorRead 008B  
                              __size_of_strlen 003E                    __end_of__system_timer0_init 2336  
                                    _T1CONbits 000FCD                                    ?__buck_stop 0001  
                                 ??_USBSuspend 0018                                      _T2CONbits 000FCA  
                           __end_of_USBMSDInit E6EE                               ??_ResetSenseData 0060  
                      ?__flash_write_to_buffer 0073                        _APP_DeviceMSDInitialize 2E66  
                                      _msd_cbw 000D40                       __end_of_i2c_eeprom_tasks 1160  
                             ___aldiv@dividend 0060                                        _msd_csw 000D80  
                      ??_i2c_digipot_reset_off 006A                           __i2c_not_acknowledge 2EF8  
                     __end_of_i2c_eeprom_write 0C9A                                i2_USBDeviceInit D8EC  
                                      _ui_init 2D9C                               i2USBDeviceInit@i 0009  
                                _log_start_new F81E             __size_of_ExternalFlash_SectorWrite 0034  
                      __size_of__buck_pin_init 0030                          ?__flash_set_page_size 0001  
                                      _tmr_isr 0476                          __end_of_flash_is_busy 2B5E  
                           __end_of_USB_CD_Ptr 933B                                     _msd_buffer 000600  
                           __get_empty_cluster 0E92                              ?_rtcc_get_minutes 0001  
                            ?_rtcc_get_seconds 0001                     __size_of_SYSTEM_Initialize 005A  
                             _system_output_on 1FEA                __size_of_USBCtrlTrfSetupHandler 0092  
                        __size_of_i2c_adc_read 0052                  __size_of__buck_operate_remote 00F4  
                                      _strncmp 0C9A                            _flash_partial_write 12AC  
                         end_of_initialization FC22                        rtcc_decrement_year@year 0068  
                      ??_display_get_character 0061                          _MSDTransferTerminated 1C14  
        __flash_compare_page_to_buffer@command 007B                 ?_MSDProcessCommandMediaPresent 0001  
                           __end_of_USB_SD_Ptr 932F                    __end_of_rtcc_increment_year 2A0A  
                           ??_rtcc_get_minutes 0060                             ??_rtcc_get_seconds 0060  
                          i2c_eeprom_write@dat 0072                                        memcpy@d 0066  
         __size_of_buck_remote_set_synchronous 0018                                        memcpy@n 0064  
                                      memcpy@s 0068                               __write_fat@value 008A  
                 __get_temperature@temperature 006E                            _pBDTEntryEP0OutNext 00FB  
                    __rtcc_bcd_to_decimal@ones 0061                      __end_of_MSDProcessCommand DF28  
                                      itoa@buf 0070                                    ?__read_root 0087  
                    __rtcc_bcd_to_decimal@tens 0060                                        memset@c 0062  
                                      itoa@val 0072                                        memset@n 0064  
                                      memset@p 0066                            __buck_operate_local 9AC6  
                              _USB1msTickCount 01DD                       __buck_operate_local$8739 007B  
                                 _buck_operate 18EC                                      i2u1004_40 C1F0  
                          ?__get_empty_cluster 0087                   fat_get_empty_clusters@offset 008B  
                     ?_USBStdFeatureReqHandler 0001                                      i2u1223_40 197C  
                                    i2u1223_47 1972                  i2c_eeprom_write@slave_address 0083  
                                    i2u1463_40 D94E                                      i2u1466_40 D9F0  
           __size_of__fill_buffer_get_display1 0050             __size_of__fill_buffer_get_display2 0050  
                     fat_append_to_file@length 00AA                               _inputCapacitySum 0282  
                                    i2u1495_40 DB72                       fat_append_to_file@offset 00A7  
                        ??_USBStdSetCfgHandler 0018                                ___lldiv@divisor 0064  
                   __size_of_log_write_to_disk 006E            rtcc_get_minutes_decimal@bcd_minutes 0063  
                     fat_append_to_file@sector 009D                              __end_of_rtcc_init 2C4C  
               ??_buck_remote_change_dutycycle 0060                                ___lldiv@counter 006C  
                          __end_of__buck_start FCF2                                  ?_rtcc_get_day 0001  
          rtcc_get_seconds_decimal@bcd_seconds 0063                                   _averageCount 0041  
                        ??__rtcc_increment_bcd 0066                             __end_of_USBSuspend 269A  
                            __get_time@minutes 0069                              __get_time@seconds 006A  
                      _USBCtrlEPAllowDataStage 02A6                     ?_buck_remote_set_dutycycle 0001  
                             ___aldiv@quotient 006A                    __size_of_buck_remote_set_on 0018  
                                      postdec1 000FE5                                        postdec2 000FDD  
         __end_of_ExternalFlash_SectorSizeRead 2EEE          __size_of_ExternalFlash_SectorSizeRead 000C  
                 _ExternalFlash_SectorSizeRead 2EE2                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                          rtcc_set_hours@hours 0060                              ?_rtcc_correct_day 0001  
                     __buck_operate_local@cntr 007D                           ?_flash_partial_write 007F  
                 __size_of__display_efficiency 0340               __size_of__fill_buffer_get_status 025C  
                                ??__ui_encoder 008B                                  ?_rtcc_set_day 0001  
                                      utoa@buf 0067                      _log_get_number_of_samples 2EEE  
      MSDProcessCommandMediaPresent@sectorSize 009E                       _USBCtrlEPServiceComplete ED0E  
                                      utoa@val 0069                   log_write_to_disk@file_number 00D0  
                                    _MSD_State 0054                                  _inputPowerSum 028A  
                        _system_encoder_enable 2DD6                                        strlen@s 0060  
                  ??_adc_calculate_temperature 006F                             ??_rtcc_correct_day 0064  
                  __size_of_USBCheckMSDRequest 00C2                     _USBStatusStageEnabledFlag1 01FA  
                   _USBStatusStageEnabledFlag2 01F9                       flash_partial_write@match 0087  
                         ?__buck_operate_local 0001                             USBEnableEndpoint@p 000A  
                      ?_fat_get_empty_clusters 0087                        ??_rtcc_get_year_decimal 0063  
                                    _PORTAbits 000F80                                      _PORTBbits 000F81  
                      __display_outputs@header 009A                               _outputCurrentSum 028E  
                     flash_partial_write@start 0081                      __size_of__get_input_power 0082  
                         ??__get_empty_cluster 0089                 __end_of__flash_write_to_buffer 1E08  
                          __buck_set_dutycycle 1382                               __CFG_DSBOREN$OFF 000000  
                    __display_temperature@cntr 00C7                           __sector_from_cluster 2E46  
                                 _i2c_adc_read 1D64                           _rtcc_decrement_hours 2B1A  
                   __rtcc_bcd_to_decimal@input 0062                           _rtcc_decrement_month 2AD6  
           __size_of__get_available_root_entry 002A                                ??__get_dateTime 0068  
                   __end_of__write_calibration 0634                          ?__i2c_not_acknowledge 0001  
                fat_append_to_file@new_cluster 00A3                       _rtcc_get_minutes_decimal 2DF6  
                              ??__get_checksum 0062                         fat_create_file@cluster 00AE  
                          flash_page_read@data 0089                   __size_of__rtcc_decrement_bcd 002E  
                            adc_read@adc_value 0063                                    ?_flash_init 0001  
                          flash_page_read@page 0087                               __CFG_CPUDIV$OSC1 000000  
                fat_get_empty_clusters@cluster 0091                                      _TRISAbits 000F92  
                               ?_log_start_new 0001                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96                             _ReceivedDataBuffer 0478  
                           _BothEP0OutUOWNsSet 01FB                  fat_get_empty_clusters@maximum 0087  
                     __end_of_flash_page_write 1EAA                                  __pbssBIGRAMll 0800  
                             ??_MSDReadHandler 0095                      USBConfigureEndpoint@EPNum 0006  
                      _i2c_display_write_fixed 19FE                              __CFG_SOSCSEL$HIGH 000000  
                   ?_USBCtrlEPAllowStatusStage 0001                                ??__buck_prepare 0060  
                   __display_efficiency@header 0092                        __display_time@presssave 0170  
          USER_USB_CALLBACK_EVENT_HANDLER@size 0014                        __size_of__display_clear 004A  
                                    _USTATcopy 005D                                ??__flash_wakeup 0068  
                 __size_of_rtcc_decrement_year 0022                          __end_of_i2c_adc_start 2466  
           __end_of_schedule_eeprom_write_task 1F4A                     _schedule_eeprom_write_task 1EFA  
MSDProcessCommandMediaPresent@NumBytesInPacket 009D                        ?_rtcc_increment_minutes 0001  
                      ?_rtcc_increment_seconds 0001                                ??__flash_spi_tx 0064  
                                  ?__write_fat 0088                     __display_efficiency@footer 00B8  
                      __size_of__display_inout 01E6                   ?_i2c_eeprom_read_calibration 0001  
                             __rtcc_verify_bcd 2160                             _log_generate_entry AA4C  
              i2c_eeprom_read_calibration@addr 007F                   __end_of_USBTransferOnePacket EA06  
                         ?__buck_set_dutycycle 0001                i2c_eeprom_read_calibration@cntr 0081  
                                  _CCP1CONbits 000FBA                       _rtcc_get_seconds_decimal 2E56  
                          _system_output_is_on 2C4C            __end_ofi2_ExternalFlash_MediaDetect 2F60  
                        i2c_eeprom_read@length 0075                    i2_ExternalFlash_MediaDetect 2F5C  
                          rtcc_set_month@month 0060                     __display_efficiency@source 00A5  
                       i2c_display_cursor@line 006E                               __CFG_IOL1WAY$OFF 000000  
                          __get_dateTime@hours 0071                   __end_of__parse_command_short F3B8  
                          __get_dateTime@month 006F                                 ??_rtcc_get_day 0060  
                          __size_of__buck_stop 002E                 ?__flash_compare_page_to_buffer 0073  
                           __root_is_available 0D9A                              __CFG_WPEND$PAGE_0 000000  
            __end_of__fill_buffer_get_display1 1FEA              __end_of__fill_buffer_get_display2 1F9A  
                          ?_log_generate_entry 0078             __flash_compare_page_to_buffer@page 0073  
                          __CFG_MSSP7B_EN$MSK7 000000                              ?_rtcc_read_eeprom 0001  
                __get_empty_cluster@fat_sector 0089                               ?_MSDErrorHandler 0001  
                      __size_of_rtcc_get_hours 000E                        __size_of_rtcc_get_month 000E  
                             __write_root@data 0088                         _USBCtrlTrfSetupHandler 075A  
               __end_of__display_outputs@F8730 923B                 __end_of__display_outputs@F8732 90FF  
               __end_of__display_outputs@F8734 90EA                 __end_of__display_outputs@F8728 9297  
       __end_of_system_calculate_input_current E29A        __size_of_system_calculate_input_current 0124  
               _system_calculate_input_current E176                          ??_flash_partial_write 0087  
                    system_output_is_on@output 0060                                 ??_rtcc_set_day 0060  
                             __write_root@slot 008F                            __rtcc_write_disable 2D86  
             ExternalFlash_CapacityRead@config 0060                        ?i2_USBTransferOnePacket 0001  
                     __size_of_display_prepare 0082                          __end_of_USBDeviceInit D7A6  
                           ??_rtcc_read_eeprom 008B          __end_of_USBIncrement1msInternalTimers 2BC0  
       __size_of_USBIncrement1msInternalTimers 0020                  _USBIncrement1msInternalTimers 2BA0  
                 __end_of__display_temperature D312                                 __end_of___lmul 1BBE  
               __end_of_fat_get_empty_clusters 075A                                ??__display_itoa 007D  
                ?_ExternalFlash_SectorSizeRead 0060                                ??__display_time 0060  
           __end_of__display_temperature@F8781 92FA                     __display_temperature@F8781 92EF  
           __end_of__display_temperature@F8783 92CB                     __display_temperature@F8783 92BF  
           __end_of__display_temperature@F8785 92BF                     __display_temperature@F8785 92B3  
           __end_of__display_temperature@F8779 9113                     __display_temperature@F8779 90FF  
                          ?__root_is_available 0001                              __size_of_MSDTasks 0256  
                        ??__buck_operate_local 0076                       __end_of_USBStallEndpoint E7F8  
                                    i2memcpy@d 0007                       ?__buck_initial_dutycycle 0001  
                                    i2memcpy@n 0005                              ??_fat_create_file 00A3  
                      __end_ofi2_USBDeviceInit DA32                                      i2memcpy@s 0009  
                    ??_APP_DeviceMSDInitialize 000F                                      i2memset@c 0003  
                                    i2memset@n 0005                                      i2memset@p 0007  
                        ?__sector_from_cluster 0060                           ?_system_output_is_on 0001  
                               __end_of_memcpy 17D6                                _MSDRetryAttempt 01F4  
                         i2USBStallEndpoint@ep 0006         __end_of_system_calculate_input_voltage F57C  
      __size_of_system_calculate_input_voltage 00E2                 _system_calculate_input_voltage F49A  
                               __end_of_memset 266A                          __get_output_power@pwr 006F  
                        ?_rtcc_decrement_hours 0001                               __CFG_DSWDTEN$OFF 000000  
                      __parse_command_long@cmd 0064                          ?_rtcc_decrement_month 0001  
                          __size_of__read_root 005C                  __size_of_i2c_digipot_reset_on 0026  
                            _USBBusIsSuspended 0058                      flash_partial_write@length 0083  
                               __end_of_ui_run EC0C                   __end_of_rtcc_get_day_decimal 2E46  
        __get_available_root_entry@file_number 008E                                 __end_of_strlen 23B2  
                __display_temperature@internal 00BC                            __end_of__ui_encoder AA4C  
                    __flash_set_page_size@size 0077                                  _chargerOnTime 02B0  
                          start_initialization FB66                        ?_USBStdGetStatusHandler 0001  
                                ??__write_root 008A                      __size_of__get_temperature 002C  
                      ?_buck_remote_get_status 0001                           ??_log_generate_entry 007A  
                     i2SYSTEM_Initialize@state 0005                  ExternalFlash_SectorWrite@page 008D  
                USBCtrlTrfRxService@byteToRead 0002                         ??__flash_set_page_size 0073  
                            ??_MSDWriteHandler 008F              __end_of__get_available_root_entry 28B4  
                     ??_rtcc_get_hours_decimal 0063                 get_next_eeprom_write_task@task 0060  
                            __size_ofi2_memcpy 005C                     i2c_display_cursor@position 006D  
                         ?__rtcc_write_disable 0001                         ?_MSDTransferTerminated 000C  
                            __size_ofi2_memset 002C                         __display_charger@F8740 91B0  
                       __display_charger@F8750 921B                         __display_charger@F8742 919D  
                       __display_charger@F8744 932F                         __display_charger@F8752 90AB  
                       __display_charger@F8746 9317                         __display_charger@F8754 9113  
                       __display_charger@F8738 90C0                         __display_charger@F8748 92CB  
                              _USBMSDOutHandle 0047               __ic2_display_set_address@address 006A  
               __end_of_rtcc_increment_minutes 2A70                   __end_of_USBConfigureEndpoint 06C8  
               __end_of_rtcc_increment_seconds 2A2C                           system_init@filename2 0171  
                                 ??__i2c_start 0060                                   ??__i2c_write 0068  
              __end_of_USBStdFeatureReqHandler C282                              USBStallEndpoint@p 0066  
                                _MSDHostNoData 0051                           _task_list_read_index 0050  
                    _adc_calculate_temperature EFFE                           ??__root_is_available 0087  
               __size_of__update_modified_time 0036              __end_of_USBCtrlEPAllowStatusStage FDB8  
                __size_of_system_output_toggle 0026                                    __buck_start FC2C  
                __end_of__update_modified_time 24D2           fat_get_empty_clusters@empty_clusters 008F  
                        ??__buck_set_dutycycle 0060                       __end_of_USBCtrlEPService 0476  
                   __size_of_MSDProcessCommand 0130                           __system_encoder_init 2336  
                                    __i2c_read 050C                        __size_of_rtcc_set_hours 0018  
                         rtcc_read_eeprom@date 008C                                      __i2c_send 2F20  
                      __size_of_rtcc_set_month 0018                                      __i2c_stop 2F2A  
                         __flash_spi_tx@length 0062        _ExternalFlash_MediaInitialize$intlevel0 2B64  
                ??_i2c_eeprom_read_calibration 0079                              __size_of_i2c_init 000C  
                         __display_inout@F8671 91F8                           __display_inout@F8673 91E6  
                         __display_inout@F8675 9336                           __display_inout@F8677 92A5  
                            _rtcc_write_eeprom 20CC                      ??_USBCtrlEPAllowDataStage 0002  
                             __buck_start@cntr 0075                                 USBDeviceInit@i 0068  
                             __buck_start@mode 0073                         __write_calibration@ptr 0099  
                __size_of_rtcc_increment_hours 0022                  __size_of_rtcc_increment_month 0022  
                __root_is_available@first_byte 008D                         _pBDTEntryEP0OutCurrent 0049  
                       __size_of_fat_find_file 00C8                             ?_rtcc_write_eeprom 0001  
                                  _DMACON1bits 000F88                         i2c_eeprom_write@length 006E  
                                  _DMACON2bits 000F86                            __size_of_flash_init 0042  
                      USBTransferOnePacket@dir 0060                               __flash_spi_tx_rx 0346  
                             __flash_spi_tx_tx 07EC                        USBTransferOnePacket@len 0063  
                            __size_of__i2c_get 000A                    MSDErrorHandler@OldMSD_State 0069  
                                _MSDTasks$2694 00AD                                  _MSDTasks$2695 00AF  
               __end_ofi2_USBTransferOnePacket ED0E                    __size_of_flash_partial_read 007A  
                               __get_date@date 006B                                       ??___lmul 0068  
                             _outputVoltageSum 0292                        flash_partial_read@start 0075  
                               __get_date@year 0068                            _USBStdGetDscHandler DCB8  
                       ?_system_encoder_enable 0001                         system_output_on@output 0060  
                            __CFG_ADCSEL$BIT10 000000              __size_of_APP_DeviceCustomHIDTasks 0364  
                                  __pdataBANK2 02BF                                    __pdataBANK3 03E4  
                                  __pdataBANK4 0400                  __size_of__buck_set_sync_async 0076  
                    ?_APP_DeviceCustomHIDTasks 0001                        rtcc_increment_year@year 0068  
                         __size_of_system_init 0104                 __size_of_i2c_digipot_backlight 002C  
                                     ??_memcpy 0066                        __size_of__i2c_wait_idle 0064  
                                     ??_memset 0066                           __display_inout@line1 0090  
                         system_init@extension 017A                           __display_inout@line2 00A2  
                 __size_of__parse_command_long 00EC                           __display_inout@line3 00C2  
                         __display_inout@line4 00B4                  __end_of_i2c_digipot_backlight 27DA  
                                 ?__i2c_open_1 0001                         __size_of_ui_get_status 0006  
                          ??_rtcc_write_eeprom 0085                          ??_system_output_is_on 0060  
                                     ??_ui_run 008B                             __end_of__i2c_start 2F3A  
                        __number_of_days@month 0063                             __end_of__i2c_write 1EFA  
                    __root_is_available@offset 008A                            __size_of__write_fat 0042  
                                     ??_strlen 0062                          __display_outputs@cntr 00A9  
                            __size_of___altoft 007A                         ??__i2c_not_acknowledge 0060  
                        __display_outputs@mode 00A8                         _USBActiveConfiguration 005E  
               __end_of_USBStdGetStatusHandler 02A6                       _buck_dutycycle_last_step 01EE  
                              ??_log_start_new 0064                 __end_of_buck_remote_get_status 2780  
                    __buck_operate_remote$8740 0076                              __size_of___ftpack 00B0  
                            __size_of_adc_init 001C                              __size_of_adc_read 0086  
                                  __pbssCOMRAM 0032                                adc_read@channel 0062  
                   fat_append_to_file@position 00AC                    fat_create_file@next_cluster 00A7  
                              _flash_page_read 28DE                      ??_i2c_display_write_fixed 0068  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                 __size_of_USBCtrlTrfInHandler 00BE                   ??_ExternalFlash_CapacityRead 0064  
               __size_of_MSDCheckForErrorCases 00F8                                 __buck_pin_init 260A  
                __end_of_MSDCheckForErrorCases EFFE                          ??__rtcc_write_disable 0060  
                                    _gblBLKLen 02A6                      __size_of__display_charger 0308  
           __end_of_flash_command_pagesize_512 9452                     _flash_command_pagesize_512 944E  
           __end_of_flash_command_pagesize_528 944E                     _flash_command_pagesize_528 944A  
                         ?_USBStdGetDscHandler 0001                     i2c_set_frequency@frequency 0060  
                            ?_rtcc_set_minutes 0001                              ?_rtcc_set_seconds 0001  
                                    __get_date 14BC                         __get_checksum@checksum 0064  
                                    __get_time 1318                    ?_get_next_eeprom_write_task 0001  
                          __end_of__write_root 1890                          ?__system_encoder_init 0001  
                   __end_of_USBWakeFromSuspend 2508                             ??_rtcc_set_minutes 0060  
                           ??_rtcc_set_seconds 0060                      __end_of_rtcc_write_eeprom 2116  
                   __end_of_i2c_display_cursor 28DE                                     ?__i2c_read 0065  
                  __size_of__rtcc_write_enable 0016                                     ?__i2c_send 0001  
                              _USBStallHandler 222E                                   _pBDTEntryOut 01D3  
                                   ?__i2c_stop 0001                        ?_buck_remote_set_enable 0001  
                   ?_buck_remote_get_dutycycle 0001                                      __read_fat 2038  
               schedule_eeprom_write_task@task 0061                       __size_of_USBDeviceAttach 0032  
                      __rtcc_decrement_bcd@max 0065                        __rtcc_decrement_bcd@min 0064  
             __end_of_ExternalFlash_SectorRead 2570                       __get_checksum@byte_array 0062  
                           i2_USBStallEndpoint E7F8                      __size_of__display_outputs 0222  
                             ___lwdiv@dividend 0060                            flash_is_busy@status 0071  
                 buck_remote_get_status@retval 0060                              fat_find_file@name 0087  
               MSDProcessCommandMediaPresent@i 00A6                            fat_find_file@buffer 008B  
                            fat_find_file@slot 0096                                      __pintcode 9008  
                    fat_create_file@root_entry 00B0                        __fill_buffer_get_status C282  
                           _APP_DeviceMSDTasks 2DC4                                  __pmediumconst 90AA  
                                     ?___aldiv 0060                            fat_find_file@offset 0099  
                                     ?___awdiv 0060                                      __ptext100 9486  
                                    __ptext101 D14A                                      __ptext110 B786  
                                    __ptext102 C956                                      __ptext111 CB78  
                                    __ptext103 CD7E                                      __ptext200 2EAE  
                                    __ptext120 9AC6                                      __ptext112 2374  
                                    __ptext104 B130                                      __ptext201 2EBC  
                                    __ptext121 2724                                      __ptext113 21A6  
                                    __ptext105 EE0E                                      __ptext210 0D1A  
                                    __ptext202 2752                                      __ptext130 1B66  
                                    __ptext122 FC2C                                      __ptext114 0154  
                                    __ptext106 0F86                                      __ptext211 1776  
                                    __ptext203 2F46                                      __ptext131 D65A  
                                    __ptext123 107A                                      __ptext115 21EA  
                                    __ptext107 00A4                                      __ptext220 2BA0  
                                    __ptext212 E900                                      __ptext204 2F4C  
                                    __ptext140 BA8E                                      __ptext132 263A  
                                    __ptext124 1382                                      __ptext116 1C6A  
                                    __ptext108 F9D0                                      __ptext221 03DE  
                                    __ptext205 2F52                                      __ptext141 2F58  
                                    __ptext133 25D8                                      __ptext125 FF38  
                                    __ptext117 18EC                                      __ptext109 2082  
                                    __ptext230 DCB8                                      __ptext222 1948  
                                    __ptext214 0476                                      __ptext206 1F4A  
                                    __ptext150 E3B8                                      __ptext142 2508  
                                    __ptext134 1A58                                      __ptext126 0A0E  
                                    __ptext118 F0F4                                      __ptext231 C002  
                                    __ptext223 075A                                      __ptext215 DA32  
                                    __ptext207 1F9A                                      __ptext151 E6EE  
                                    __ptext143 1E5A                                      __ptext135 2DC4  
                                    __ptext127 0902                                      __ptext119 1524  
                                    __ptext240 16B2                                      __ptext232 0988  
                                    __ptext224 ED0E                                      __ptext216 D8EC  
                                    __ptext208 2780                                      __ptext160 0346  
                                    __ptext152 15EE                                      __ptext144 1DB6  
                                    __ptext136 C4DE                                      __ptext128 2ED6  
                                    __ptext241 2C66                                      __ptext233 1CBE  
                                    __ptext225 02A6                                      __ptext217 24D2  
                                    __ptext209 1650                                      __ptext161 FFF2  
                                    __ptext153 253C                                      __ptext145 07EC  
                                    __ptext137 DDF8                                      __ptext129 EFFE  
                                    __ptext250 FE7A                                      __ptext242 2F5C  
                                    __ptext234 FDB8                                      __ptext226 F57C  
                                    __ptext218 266A                                      __ptext170 20CC  
                                    __ptext162 2EE2                                      __ptext154 28DE  
                                    __ptext146 1AB2                                      __ptext138 17D6  
                                    __ptext251 F8F8                                      __ptext243 25A4  
                                    __ptext235 F65E                                      __ptext227 F740  
                                    __ptext219 222E                                      __ptext171 0C18  
                                    __ptext163 2DB0                                      __ptext155 1000  
                                    __ptext147 0E16                                      __ptext139 A2FE  
                                    __ptext252 0000                                      __ptext244 EC0C  
                                    __ptext236 1C14                                      __ptext228 285E  
                                    __ptext180 2CC8                                      __ptext172 1160  
                                    __ptext164 2B5E                                      __ptext156 2B3C  
                                    __ptext148 CF64                                      __ptext245 23F0  
                                    __ptext237 E7F8                                      __ptext229 01FE  
                                    __ptext181 2CE0                                      __ptext173 1EAA  
                                    __ptext165 2F16                                      __ptext157 1E08  
                                    __ptext149 EF06                                      __ptext246 0634  
                                    __ptext238 2E66                                      __ptext190 29C4  
                                    __ptext182 2CF8                                      __ptext174 158A  
                                    __ptext166 ADCC                                      __ptext158 1B0C  
                                    __ptext247 1714                                      __ptext239 E5E0  
                                    __ptext191 2116                                      __ptext183 2D10  
                                    __ptext175 2F2A                                      __ptext167 F2D4  
                                    __ptext159 2570                                      __ptext248 E4D0  
                                    __ptext192 DF28                                      __ptext184 2D28  
                                    __ptext176 2F32                                      __ptext168 1FEA  
                                    __ptext249 FCF2                                      __ptext193 1EFA  
                                    __ptext185 2D70                                      __ptext177 2F20  
                                    __ptext169 1BBE                                      __ptext194 C282  
                                    __ptext186 2D86                                      __ptext178 F1E8  
                                    __ptext195 2F40                                      __ptext187 2D40  
                                    __ptext179 2CB0                                      __ptext196 2E76  
                                    __ptext188 2D58                                      __ptext197 2E84  
                                    __ptext189 2BFA                                      __ptext198 2E92  
                                    __ptext199 2EA0                       __end_of_system_output_on 2038  
                          fat_find_file@sector 0097                                       ?___lldiv 0060  
                                     ?___fttol 0060                          __end_of_adc_calibrate 2EE2  
                                     ?___lwdiv 0060                                       ?___lwmod 0060  
                                    _hid_rpt01 9401                                    __ui_encoder A6B8  
                          ?i2_USBStallEndpoint 0001                         ??__sector_from_cluster 0062  
                                    _buck_init 2DE6                                      _idle_rate 01FF  
                       ??_rtcc_decrement_hours 0068                         ??_rtcc_decrement_month 0068  
                               __get_time@time 006B                               ?i2_USBDeviceInit 0001  
                        _buck_remote_dutycycle 00FD                       __display_efficiency@cntr 00D1  
                              __i2c_write@data 0065                               __get_input_power 0B14  
                              __i2c_write@cntr 0069                            fat_create_file@name 009B  
                          ?_APP_DeviceMSDTasks 0001                      __size_ofi2_ResetSenseData 0062  
                         __display_time@setday 01C3             __flash_write_to_buffer@data_length 0077  
                          fat_create_file@size 009F                                   ??__buck_stop 0060  
                         _USBTransferOnePacket E900                   __flash_spi_tx_rx@data_length 0066  
                   ?_ExternalFlash_MediaDetect 0060                         __end_of__buck_pin_init 263A  
               ??_ExternalFlash_SectorSizeRead 0062                              ??_display_prepare 00D2  
                         __CFG_RTCOSC$T1OSCREF 000000                           __parse_command_short F2D4  
                         __end_of_rtcc_get_day 2ECA             __size_of_log_get_number_of_samples 000A  
                                _fat_find_file FA9E                              __display_itoa@len 008D  
                            __display_itoa@pos 008F                              __display_itoa@tmp 0083  
                            ?_i2c_eeprom_tasks 0001                      __size_of_log_collect_data 029E  
                 __end_of__rtcc_bcd_to_decimal 2BDE                                       ?_ui_init 0001  
                  __size_of_buck_get_dutycycle 0006                              ?_i2c_eeprom_write 006A  
                 __end_of_USBCtrlTrfOutHandler 1776                       __size_of_i2c_eeprom_read 0052  
                        ??_USBStdGetDscHandler 0001                 __size_of_i2c_digipot_reset_off 0026  
          __size_of__flash_copy_page_to_buffer 005A                                    _ep_data_out 01E1  
                             ___lwdiv@quotient 0064                                       ?_tmr_isr 0001  
              __size_of_rtcc_get_hours_decimal 0010                  __end_of_i2c_digipot_reset_off 2952  
                           ??_i2c_eeprom_tasks 009D                                  _MSDWriteState 0052  
                 __size_of_USBCtrlTrfRxService 0110                __parse_command_calibration@dat1 0064  
              __parse_command_calibration@dat2 0065                __parse_command_calibration@dat3 0066  
                USBConfigureEndpoint@direction 0001                                       ?_strncmp 0060  
                          __display_efficiency B130                                 __display_clear 2082  
                            __display_time@day 01CE                           __end_of_rtcc_set_day 2D40  
                           ??_i2c_eeprom_write 006F                      __size_of__i2c_acknowledge 000A  
                                ?__display_usb 0001                __parse_command_calibration@item 0063  
                            __display_time@tad 0180                                     ?__get_date 0064  
                            __display_time@pts 0100                           ??i2_USBStallEndpoint 0002  
              ?_i2c_display_send_init_sequence 0001               ??_i2c_display_send_init_sequence 006A  
                            __display_usb@cntr 00A5                                 __display_inout CD7E  
                                   ?__get_time 0064                                  _ui_get_status 2F40  
                 __size_ofi2_SYSTEM_Initialize 0054                 __end_of_buck_remote_set_enable 2C16  
                         __display_temperature D14A                                ___aldiv@divisor 0064  
                 __size_of_USBCtrlTrfTxService 00D8                                   ??__read_root 0089  
                         __display_usb@usb_off 0074                 __size_of_display_get_character 002E  
                              ___aldiv@counter 0068                           ??_APP_DeviceMSDTasks 00B2  
                __end_of_display_get_character 27AE                                      _extension 02F8  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                     __end_of_USBCheckHIDRequest F740  
               __root_is_available@file_number 008C                              __get_output_power 0A92  
                   __end_of_rtcc_increment_day 299E           __flash_compare_page_to_buffer@buffer 0075  
                   ??_USBCtrlEPServiceComplete 0002                                     ?__read_fat 0087  
                     __size_of__number_of_days 0068                        __i2c_read@slave_address 006F  
                                     _IPR2bits 000FA2                                       _PIE2bits 000FA0  
                     ??_system_encoder_disable 0060                            __rtcc_decrement_bcd 26F6  
                         _rtcc_get_day_decimal 2E36                    __size_of_fat_append_to_file 0222  
                           ?__get_output_power 006D                                    _buck_status 00FF  
                           __end_of__buck_stop 2752           __flash_compare_page_to_buffer@status 0079  
                                     _PIR1bits 000F9E                                      _task_list 0468  
                                     _PIR2bits 000FA1                       ??_rtcc_decrement_minutes 0068  
                     ??_rtcc_decrement_seconds 0068                                 _rtcc_get_hours 2EAE  
                                     i2u912_40 F976                                       i2u912_47 F96C  
                                     i2u914_40 F9B8                                 _rtcc_get_month 2E92  
                                     i2u914_47 F9AE                                       i2u845_48 E676  
                                     i2u845_49 E68A                                       i2u847_48 E69C  
                                     i2u872_40 FE14                                       i2u847_49 E6B2  
                                     i2u849_44 E6D0                                       i2u849_45 E6CA  
                                     i2u980_40 DD6A                                       i2u980_47 DD60  
                                     i2u982_40 DDC4                                       i2u982_47 DDBA  
                                     i2u975_40 F7B6                                       _RCONbits 000FD0  
                    __size_of_rtcc_get_minutes 000E                      __size_of_rtcc_get_seconds 000E  
                                     i2u979_40 DD38                                       i2u979_47 DD2E  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote F1E8  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 002C  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks C4DE  
                   _USBDeferINDataStagePackets 01F8                      ?__ic2_display_set_address 0001  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00E2  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 0001  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init 2C32                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous 2D58                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous 2D40                           _USBConfigureEndpoint 0634  
                          ??__get_output_power 006F                            _rtcc_decrement_year 2A92  
                                   ?_buck_init 0001                              __i2c_write@length 0067  
                      __end_of_flash_page_read 2906             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 0280                                 _USBMSDInHandle 0045  
                     __end_of__rtcc_verify_bcd 21A6                                     _ADCON0bits 000FC2  
                                   _ADCON1bits 000FC1                         __display_time@sethours 01B0  
                        ?_USBTransferOnePacket 0060                         __display_time@setmonth 01A6  
                            __read_root@offset 008C                         __display_time@pressday 0160  
                  __display_charger@supply_off 014D                    __size_of_rtcc_decrement_day 0026  
                            _outputCapacitySum 027E                 __size_of_rtcc_get_year_decimal 0010  
          _ExternalFlash_MediaDetect$intlevel0 2F1C                              _SYS_InterruptHigh 9008  
                     ??_rtcc_get_month_decimal 0063                  __end_of_rtcc_get_year_decimal 2E26  
                           __end_of__read_root 18EC                          ?__parse_command_short 0001  
                              ?__buck_pin_init 0001                           ?__rtcc_decrement_bcd 0064  
                    i2c_display_cursor@address 006F                               __CFG_WPFP$PAGE_1 000000  
                               ?_fat_find_file 0087                   i2c_eeprom_read@slave_address 0078  
                                 ??_flash_init 0078                                   _RemoteWakeup 0059  
            __end_of_ExternalFlash_MediaDetect 2F20                             __get_dateTime@year 006E  
                                     i2_memcpy 1948                                       i2_memset 285E  
                             __get_temperature 27DA              MSDCheckForErrorCases@DeviceNoData 0070  
                   ??_rtcc_get_seconds_decimal 0063                                    __write_root 1834  
                           ?_SYS_InterruptHigh 0001                         __end_of__display_clear 20CC  
                       __size_of_rtcc_get_year 000E                      __size_of_rtcc_correct_day 0020  
                      __end_of_USBStallHandler 2272                         __end_of__display_inout CF64  
                            ?_flash_page_write 007F              __end_of_log_get_number_of_samples 2EF8  
                               __i2c_read@data 0065                ??__flash_write_page_from_buffer 0076  
                      __size_of_display_update 007A                                 ??__display_usb 0060  
                               __i2c_read@cntr 0070                              ___lmul@multiplier 0060  
                                  _INTCON2bits 000FF1                                    _INTCON3bits 000FF0  
                                    copy_data0 FB7A                                      copy_data1 FB9A  
                                    copy_data2 FBBA                   __size_of__system_timer0_init 0040  
                               ?_ui_get_status 0001                         ??__system_encoder_init 0060  
                  ??_USBCtrlEPAllowStatusStage 0001                           ?_rtcc_decrement_year 0001  
                 fat_create_file@cluster_count 00A9                    __end_of_USBStdSetCfgHandler F81E  
                        ?__display_temperature 0001                             ??_flash_page_write 0083  
                                 ??__write_fat 008C                      __end_of__get_output_power 0B14  
                  ?_schedule_eeprom_write_task 0001                                       _i2c_init 2ECA  
                                 _lowPowerTime 02AE                            ??_SYS_InterruptHigh 0020  
                   __size_of_rtcc_write_eeprom 004A                                 _rtcc_set_hours 2D10  
                               _rtcc_set_month 2CE0     __i2c_eeprom_load_default_calibration@index 0062  
                       __size_of_buck_get_mode 0006                                    ??__i2c_read 0068  
                  __end_of__rtcc_increment_bcd 26F6             system_calculate_output_current@tmp 0070  
                                  ??__i2c_send 0060                                   _MSDReadState 01F5  
                           __write_calibration 05A0                                    ??__i2c_stop 0060  
           buck_remote_set_dutycycle@dutycycle 0060                             __write_fat@cluster 0088  
                           __end_of_device_dsc 944A             adc_calculate_temperature@adc_value 006C  
                           __get_checksum@cntr 0065                         __end_of_rtcc_get_hours 2EBC  
                     MSDErrorHandler@ErrorCase 0068                         __end_of_rtcc_get_month 2EA0  
                        ?_rtcc_get_day_decimal 0001                                       __i2c_get 2F02  
                            i2c_adc_start@gain 006B                        ?_USBCtrlTrfSetupHandler 0001  
                              _fat_create_file D312                         __size_of_rtcc_set_year 0018  
                    ??__fill_buffer_get_status 0061                                     _ANCON0bits 000F48  
                   __end_of_buck_remote_set_on 2D70                                     _ANCON1bits 000F49  
                      USBStdGetStatusHandler@p 0002                                       __Hrparam 0000  
                          __display_itoa@value 0078                          __display_charger@cntr 018E  
                 __size_of_rtcc_increment_year 0022                                      memcpy@tmp 006A  
                                     __Lrparam 0000             __size_of_adc_calculate_temperature 00F6  
                       USBTransferOnePacket@ep 0068                         _rtcc_get_hours_decimal 2E06  
                               _buck_dutycycle 00FE                            ?__write_calibration 0001  
                          rtcc_correct_day@day 0064                                       _SetupPkt 000D30  
                          rtcc_correct_day@max 0065                             __end_of_flash_init 22B4  
                        ??__display_efficiency 0090                                 _TransferLength 0043  
                    __get_empty_cluster@offset 008B                     __end_of_USBCheckMSDRequest FE7A  
                          __display_inout@cntr 00C5                                     ?_rtcc_init 0001  
                        ?_USBConfigureEndpoint 0001                           __number_of_days@year 0061  
                             __size_of___aldiv 00CE                       _ExternalFlash_SectorRead 253C  
                    display_get_character@line 0063                         __size_of_flash_is_busy 0022  
                            ??_USBDeviceAttach 0060                                 __i2c_wait_idle 158A  
                              _MSDWriteHandler BA8E                               __size_of___awdiv 0086  
                         __display_outputs@low 008A                               __size_of___lldiv 0084  
                                     ___altoft 0F86                               __size_of___fttol 00F8  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
    ExternalFlash_SectorWrite@allowWriteToZero 008C                                       ___ftpack 00A4  
         __size_ofi2_ExternalFlash_MediaDetect 0004                                    _MSDCBWValid 01F1  
                    __end_of_SYS_InterruptHigh 90A6                                 _buck_remote_on 004E  
                            ?_USBStallEndpoint 0060                     i2c_display_write_fixed@pos 0068  
              i2c_adc_start@configuration_byte 006D                                       _adc_init 2BDE  
                                     _adc_read 0902                            __display_time@F8701 91C2  
                          __display_time@F8703 914F                            __display_time@F8705 913B  
                          __display_time@F8707 925B                            __display_time@F8681 9297  
                          __display_time@F8683 930E                            __display_time@F8691 92E3  
                          __display_time@F8685 9304                            __display_time@F8693 92D7  
                          __display_time@F8687 931F                            __display_time@F8695 9163  
                          __display_time@F8689 92FA                            __display_time@F8697 91D4  
                          __display_time@F8699 926B                    __size_of__get_empty_cluster 007A  
                           __end_of__write_fat 22F6                           __size_of__i2c_open_1 0018  
                        ??__rtcc_decrement_bcd 0066                             ??_USBStallEndpoint 0061  
              __flash_copy_page_to_buffer@page 0073             __end_of_ExternalFlash_CapacityRead 2DC4  
                   _ExternalFlash_CapacityRead 2DB0                        ??_MSDTransferTerminated 000E  
                schedule_eeprom_write_task@idx 0062                      __size_of_rtcc_read_eeprom 0142  
                      __size_of_USBDeviceTasks 0144                                ___lwdiv@divisor 0062  
              ?_system_calculate_input_current 0001               ??_system_calculate_input_current 006C  
                        __end_of__get_dateTime D8EC                           ??__write_calibration 0085  
                        __end_of__get_checksum 249C                      _buck_remote_set_dutycycle 29C4  
                              ?__display_clear 0001                       __end_of__flash_spi_tx_rx 03DE  
                              ___lwdiv@counter 0066                       __end_of__flash_spi_tx_tx 087C  
            __buck_operate_local@tmp_dutycycle 007C                                       __ptext10 29E8  
                                     __ptext11 2A0A                                       __ptext20 2AF8  
                                     __ptext12 2A2C                                       __ptext21 2B1A  
                                     __ptext13 2A4E                                       __ptext30 2160  
                                     __ptext22 299E                                       __ptext14 2A70  
                                     __ptext31 F81E                                       __ptext23 26F6  
                                     __ptext15 2978                                       __ptext40 2DE6  
                                     __ptext32 2ECA                                       __ptext24 EA06  
                                     __ptext16 26C8                                       __ptext41 2C98  
                                     __ptext33 2C80                                       __ptext25 2D9C  
                                     __ptext17 2A92                                       __ptext50 123E  
                                     __ptext42 260A                                       __ptext34 E29A  
                                     __ptext26 2C32                                       __ptext18 2AB4  
                              _inputCurrentSum 0296                                       __ptext51 AA4C  
                                     __ptext43 2BDE                                       __ptext35 1D12  
                                     __ptext27 DB76                                       __ptext19 2AD6  
                                     __ptext60 288A                                       __ptext52 27DA  
                                     __ptext44 22F6                                       __ptext36 050C  
                                     __ptext28 2B80                                       __ptext61 C734  
                                     __ptext53 087C                                       __ptext45 2336  
                                     __ptext37 9F3C                                       __ptext29 1454  
                                     __ptext70 14BC                                       __ptext62 1834  
                                     __ptext54 D7A6                                       __ptext46 F3B8  
                                     __ptext38 2272                                       __ptext71 2E16  
                                     __ptext63 22B4                                       __ptext55 2466  
                                     __ptext47 E052                                       __ptext39 11D0  
                                     __ptext80 BD64                                       __ptext72 2E26  
                                     __ptext64 12AC                                       __ptext56 D312  
                                     __ptext48 F49A                                       __ptext81 2C4C  
                                     __ptext73 2E36                                       __ptext65 19A4  
                                     __ptext57 06C8                                       __ptext49 E176  
                                     __ptext90 1D64                                       __ptext82 2E56  
                                     __ptext74 2E46                                       __ptext66 249C  
                                     __ptext58 FA9E                                       __ptext91 2EF8  
                                     __ptext83 2BC0                                       __ptext75 0D9A  
                                     __ptext67 1318                                       __ptext59 0C9A  
                                     __ptext92 2F02                                       __ptext84 0A92  
                                     __ptext76 1890                                       __ptext68 2DF6  
                                     __ptext93 2F0C                                       __ptext85 0B14  
                                     __ptext77 2038                                       __ptext69 2E06  
                                     __ptext94 0F0C                                       __ptext86 10F0  
                                     __ptext78 0E92                                       __ptext95 19FE  
                                     __ptext87 2806                                       __ptext79 2EEE  
                                     __ptext96 28B4                                       __ptext88 05A0  
                                     __ptext97 2832                                       __ptext89 242C  
                                     __ptext98 0B96                                       __ptext99 D4C8  
                             __display_charger B786            __size_of__parse_command_calibration 012A  
                             __size_of_ui_init 0014                                   _SSP1CON1bits 000FC6  
                              ?__display_inout 0001                                   _SSP1CON2bits 000FC5  
                                     _filename 02EF                  __buck_start@startup_dutycycle 0074  
                 __flash_set_page_size@command 0073                          ??_rtcc_decrement_year 0068  
                          __display_time@hours 01CF                         __end_of_rtcc_set_hours 2D28  
                                 _SSP2CON1bits 000F72                               __size_of_tmr_isr 0096  
         __end_of_MSDProcessCommandMediaAbsent 1834          __size_of_MSDProcessCommandMediaAbsent 005E  
                 _MSDProcessCommandMediaAbsent 17D6                                    ??__get_date 0066  
                        __flash_wakeup@command 0068                            __display_time@month 01CD  
                       __end_of_rtcc_set_month 2CF8               __size_of__buck_initial_dutycycle 00BA  
                                  ??__get_time 0066      buck_remote_change_dutycycle@new_dutycycle 0061  
                             __size_of_strncmp 0080                                   ?__buck_start 0072  
                          __parse_command_long F1E8                            __display_usb@header 0060  
                   ?_ExternalFlash_SectorWrite 0084                ?_system_calculate_input_voltage 0001  
             ??_system_calculate_input_voltage 006C                 ExternalFlash_SectorRead@config 008B  
               ExternalFlash_SectorRead@buffer 0091              i2c_eeprom_read_calibration@buffer 007B  
                        __end_of__buck_prepare 158A             __end_of__flash_copy_page_to_buffer 19FE  
                   __flash_copy_page_to_buffer 19A4                        __size_of_ResetSenseData 0062  
             __end_of_APP_DeviceCustomHIDTasks B130                   __end_of_i2c_digipot_reset_on 292C  
                            ??_i2c_eeprom_read 0076                          __end_of__flash_wakeup 1E5A  
               __end_of_USBCtrlTrfSetupHandler 07EC                                  __size_of_main 0316  
                            ?_USBCtrlEPService 0001                                  __size_of_itoa 0044  
                        __end_of__flash_spi_tx 1B66                                       _inq_resp 93DD  
                                __size_of_utoa 00AA                               __display_usb@low 0085  
                                  ??__read_fat 0089                    __end_of_flash_partial_write 1318  
                                   strncmp@len 0064                            __display_usb@usb_on 0095  
                              ?_rtcc_get_hours 0001             __buck_set_sync_async@new_dutycycle 0062  
                              ?_rtcc_get_month 0001                     __display_time@pressminutes 0114  
                   __display_time@pressseconds 0128                             ??_USBCtrlEPService 001E  
                             __display_outputs C956                        ??_system_encoder_enable 0060  
              __size_of_system_encoder_disable 0006                            _USBCtrlTrfInHandler FE7A  
           _MSDProcessCommandMediaPresent$2712 009B               __get_empty_cluster@first_cluster 0087  
                  __end_of__buck_operate_local 9F3C           __parse_command_calibration@parameter 0069  
                                _rtcc_get_year 2E76                          _calibrationParameters 0300  
              __size_of_rtcc_decrement_minutes 0022                __size_of_rtcc_decrement_seconds 0022  
                       __end_of__i2c_wait_idle 15EE                           __rtcc_bcd_to_decimal 2BC0  
                                     _outPipes 0032                     ?__fill_buffer_get_display1 0001  
                   ?__fill_buffer_get_display2 0001                           _USBCtrlTrfOutHandler 1714  
                                     int$flags 005F              __end_of_adc_calculate_temperature F0F4  
                            ??__number_of_days 0060                      _USBCtrlEPAllowStatusStage FCF2  
                 __end_of_system_output_toggle 2978                           ?__parse_command_long 0063  
                            _system_output_off 1BBE                                   _SSP1STATbits 000FC7  
                                  ??_buck_init 0060                              __get_dateTime@day 0070  
                       ??_USBTransferOnePacket 0064                     i2c_digipot_backlight@level 006A  
                        __size_of_rtcc_get_day 000E                               ?_flash_page_read 0087  
                                 _SSP2STATbits 000F73                                  _buck_get_mode 2F4C  
                       __size_of_i2c_adc_start 003A                          __end_of__display_itoa CD7E  
                        __end_of__display_time 9AC6                               i2_ResetSenseData 16B2  
               ?_APP_DeviceCustomHIDInitialize 0001                                ??_fat_find_file 008B  
                           ?_system_output_off 0001                         ??__parse_command_short 008B  
               __end_of__display_charger@F8740 91C2                 __end_of__display_charger@F8750 922B  
               __end_of__display_charger@F8742 91B0                 __end_of__display_charger@F8744 9336  
               __end_of__display_charger@F8752 90C0                 __end_of__display_charger@F8746 931F  
               __end_of__display_charger@F8754 9127                 __end_of__display_charger@F8738 90D5  
               __end_of__display_charger@F8748 92D7          MSDProcessCommandMediaPresent@capacity 00A2  
                display_get_character@position 0060                       __size_of_MSDErrorHandler 0118  
                             system_init@F8581 02E9                               system_init@F8583 03F6  
                             system_init@F8585 02E5                               system_init@F8587 0400  
                             system_init@F8579 02DC                              rtcc_set_year@year 0060  
                    _USBDeferStatusStagePacket 0055                __end_of__fill_buffer_get_status C4DE  
                                _rtcc_set_year 2CB0                   __end_of_rtcc_increment_hours 2A92  
                 __end_of_rtcc_increment_month 2A4E                                    _OSCTUNEbits 000F9B  
                                   _INTCONbits 000FF2                __size_of_rtcc_get_month_decimal 0010  
                        __size_of_rtcc_set_day 0018                              __write_fat@offset 008E  
                         ?_USBCtrlTrfInHandler 0001                                       memcpy@d1 0060  
                                     memcpy@s1 0062                           i2c_eeprom_write@data 006C  
                             _log_collect_data BD64                           i2c_eeprom_write@cntr 0084  
                USBCtrlTrfTxService@byteToSend 0001                    __size_of_log_generate_entry 0380  
              i2c_digipot_backlight@data_array 006B                       __number_of_days@bcd_year 0062  
                                     itoa@base 0074                    __end_of__buck_set_dutycycle 13EC  
                              ??_ui_get_status 0060                                       memset@p1 0060  
                          ??_system_output_off 0060           __end_of_MSDComputeDeviceInAndResidue 00A4  
        __size_of_MSDComputeDeviceInAndResidue 00B2                   _MSDComputeDeviceInAndResidue FFF2  
                             ?_USBStallHandler 0001                       USBStdFeatureReqHandler@p 001C  
                   ?__get_available_root_entry 0001                   __end_of__buck_set_sync_async 10F0  
                __size_of__flash_set_page_size 006E                         ??__display_temperature 0090  
                         __buck_operate_remote F0F4                                  _flash_is_busy 2B3C  
                             __i2c_acknowledge 2F0C                                ?_rtcc_set_hours 0001  
                      __end_of_fat_create_file D4C8                                ?_rtcc_set_month 0001  
                                     intlevel2 0000                       __flash_get_status@status 006F  
              __flash_spi_tx_rx@command_length 0062                   adc_calculate_temperature@tmp 0075  
                   __size_of__get_output_power 0082                    __size_of__root_is_available 007C  
                       __size_of_USBDeviceInit 014C                  ?_MSDProcessCommandMediaAbsent 0001  
      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0A0E       __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
            ??_USER_USB_CALLBACK_EVENT_HANDLER 0016               ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
              _USER_USB_CALLBACK_EVENT_HANDLER 0988                    rtcc_read_eeprom@error_found 008B  
                             ___lwmod@dividend 0060                   i2USBTransferOnePacket@handle 000A  
                      i2c_adc_start@resolution 006A              __end_of_ExternalFlash_SectorWrite 253C  
                             ___lldiv@dividend 0060          __end_of__flash_write_page_from_buffer 1B0C  
       __size_of__flash_write_page_from_buffer 005A                  __flash_write_page_from_buffer 1AB2  
                     __end_of__get_input_power 0B96                         ??_rtcc_get_day_decimal 0063  
       i2SYSTEM_Initialize@pll_startup_counter 0001           SYSTEM_Initialize@pll_startup_counter 0060  
                        __update_modified_time 249C                                _display_content 0354  
                  ??_buck_remote_get_dutycycle 0060                     __end_of_flash_partial_read 107A  
                      __end_of_MSDWriteHandler BD64                                      strncmp@s1 0060  
                                    strncmp@s2 0062                                 ?_rtcc_get_year 0001  
                      __size_of_MSDReadHandler 01E6                                   _rtcc_get_day 2EBC  
                   i2USBTransferOnePacket@data 0002                                  ??_system_init 0093  
                        ?__rtcc_bcd_to_decimal 0001                               _rtcc_get_minutes 2EA0  
                             _rtcc_get_seconds 2E84                    __end_of_system_output_is_on 2C66  
                       ??_USBConfigureEndpoint 0002                                ?__i2c_wait_idle 0001  
                        ?_USBCtrlTrfOutHandler 0001                                _display_prepare 0B96  
             __end_of_rtcc_get_minutes_decimal 2E06                       ??__flash_write_to_buffer 007A  
                    __end_of_system_output_off 1C14                      __size_of_rtcc_set_minutes 0018  
                     ?_APP_DeviceMSDInitialize 0001                      __size_of_rtcc_set_seconds 0018  
                    __display_efficiency@F8761 9177                      __display_efficiency@F8763 927B  
                    __display_efficiency@F8759 918A                            _USBCtrlTrfRxService E4D0  
                                  ??_rtcc_init 0093                             _USBWakeFromSuspend 24D2  
                        ??__parse_command_long 0064                           __end_of__display_usb D65A  
                            ?_system_output_on 0001                                   ?__ui_encoder 0001  
                                 _rtcc_set_day 2D28                             _i2c_display_cursor 28B4  
                      _USBStdFeatureReqHandler C002                        _temperatureExternal1Sum 0276  
                      _temperatureExternal2Sum 0272                      rtcc_increment_hours@hours 0068  
                               ?_buck_get_mode 0001                            i2_SYSTEM_Initialize 1CBE  
                          _USBCtrlTrfTxService F8F8                     __size_of_SYS_InterruptHigh 009E  
        __flash_write_page_from_buffer@command 0079                        __rtcc_increment_bcd@max 0065  
                           ??_system_output_on 0060                        __rtcc_increment_bcd@min 0064  
                                     utoa@base 006B                                     _RTCCFGbits 000F3F  
                              _gblMediaPresent 02B6                    __end_of__rtcc_write_disable 2D9C  
                               ?_rtcc_set_year 0001                                _inputVoltageSum 029A  
                        _i2c_digipot_backlight 27AE            ExternalFlash_SectorRead@sector_addr 008D  
                          ?_USBWakeFromSuspend 0001                                     _PPSCONbits 000EBF  
                             ___lldiv@quotient 0068                                ___lwmod@divisor 0062  
                  ??_ExternalFlash_MediaDetect 0062                            ?_i2c_display_cursor 006D  
                        ??_USBCtrlTrfInHandler 0002                                       strlen@cp 0064  
                       _system_encoder_disable 2F3A   __end_of__i2c_eeprom_load_default_calibration A2FE  
__size_of__i2c_eeprom_load_default_calibration 03C2         ??__i2c_eeprom_load_default_calibration 0063  
        ?__i2c_eeprom_load_default_calibration 0060           __i2c_eeprom_load_default_calibration 9F3C  
                 __flash_spi_tx_tx@data_length 0066                          _USBAlternateInterface 01FC  
                              ___lwmod@counter 0064                      __display_efficiency@panel 00C9  
             __end_of_rtcc_get_seconds_decimal 2E66                  __size_of__i2c_not_acknowledge 000A  
                      _buck_remote_synchronous 004D                                    _ptrNextData 01E7  
                        __end_of_log_start_new F8F8                                   ___aldiv@sign 0069  
                       _rtcc_decrement_minutes 2AF8                         _rtcc_decrement_seconds 2AB4  
                    i2USBTransferOnePacket@dir 0001                      i2USBTransferOnePacket@len 0004  
                          USBEnableEndpoint@ep 000C                                _endpoint_number 0057  
                             _rtcc_correct_day 2B80                                 _display_update 0F0C  
                        ?__buck_operate_remote 0001                                 ?_flash_is_busy 0001  
                         ?_USBCtrlTrfRxService 0001                          _MSDCheckForErrorCases EF06  
                         __get_input_power@pwr 0070                     __end_of__rtcc_write_enable 2D86  
                ?_MSDComputeDeviceInAndResidue 0060               __end_of__ic2_display_set_address 285E  
          __end_of_i2c_eeprom_read_calibration E3B8                    _i2c_eeprom_read_calibration E29A  
                         ?i2_SYSTEM_Initialize 0001                       ?_USBCtrlEPAllowDataStage 0001  
                               _MSBBufferIndex 02B8                       __flash_spi_tx_rx@command 0060  
                         ?_USBCtrlTrfTxService 0001                                  _i2c_adc_start 242C  
                    flash_partial_read@address 0083             __end_of__parse_command_calibration E052  
                   __parse_command_calibration DF28                                     _USBMSDInit E5E0  
                                ?_buck_operate 0001                   _USBStatusStageTimeoutCounter 0056  
              ??_ExternalFlash_MediaInitialize 0062                           ??_USBWakeFromSuspend 0018  
                   USBTransferOnePacket@handle 0069                         _rtcc_get_month_decimal 2E26  
                         ??_i2c_display_cursor 006E                      flash_partial_read@command 007F  
                    rtcc_increment_month@month 0068                       ??_fat_get_empty_clusters 0089  
                    __size_of_i2c_eeprom_tasks 0070                                     _USB_CD_Ptr 9339  
                     __end_of__get_temperature 2806                       __flash_spi_tx_tx@command 0060  
                    __size_of_i2c_eeprom_write 0082                                    _power_state 004B  
                                  _USBInHandle 00F9                       _APP_DeviceCustomHIDTasks ADCC  
